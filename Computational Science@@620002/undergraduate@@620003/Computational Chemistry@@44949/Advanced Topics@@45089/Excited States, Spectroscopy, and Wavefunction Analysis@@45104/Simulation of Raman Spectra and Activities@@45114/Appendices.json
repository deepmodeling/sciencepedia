{"hands_on_practices": [{"introduction": "This advanced practice guides you through building a complete vibrational analysis and Raman spectrum simulation from the ground up, using the highly symmetric cubane molecule as a model system. Starting from just atomic coordinates and a simplified force field, you will construct and diagonalize the mass-weighted Hessian matrix to find the normal modes of vibration. You will then implement a bond polarizability model to calculate the Raman activity for each mode, providing a comprehensive, hands-on understanding of the entire workflow from molecular structure to spectrum [@problem_id:2462299].", "problem": "Consider a non-linear polyatomic molecule in the harmonic approximation. The vibrational normal modes arise from the eigenproblem of the mass-weighted Cartesian Hessian constructed from a physically plausible, central-force, Hookean spring model between bonded atoms. Within the Placzek approximation for Raman scattering, the Raman activity of a vibrational mode is determined by derivatives of the molecular polarizability tensor with respect to the normal mode coordinate, which may be approximated from a linear bond polarizability model that depends on infinitesimal bond length changes along each mode.\n\nYou are asked to write a complete program that predicts a simplified Raman spectrum of the cubane molecule with chemical formula $\\text{C}_8\\text{H}_8$ and identifies, for multiple parameter sets, the most intense vibrational mode as defined by the Raman activity. The simulation must be performed using only the following physically grounded assumptions:\n\n- Cubane geometry: eight carbon atoms occupy the corners of a cube. Each carbon is bonded to three neighboring carbons along the cube edges and to one hydrogen atom. The hydrogen is placed along the outward radial direction from the cube center through the carbon, at a fixed carbon–hydrogen bond length.\n- Force field: bonded interactions are modeled as central Hookean springs along each bond between atoms $i$ and $j$ with force constant $k_{ij}$, contributing to the Cartesian Hessian as blocks proportional to the outer product of the unit bond vector. Nonbonded interactions are neglected.\n- Harmonic approximation: the $3N \\times 3N$ Cartesian Hessian is mass weighted to obtain a symmetric eigenproblem. The non-translational, non-rotational eigenpairs yield vibrational angular frequencies $\\omega_k$ and mass-weighted eigenvectors. The wavenumber $\\tilde{\\nu}_k$ (Raman shift) must be computed in $\\mathrm{cm}^{-1}$ as $\\tilde{\\nu}_k = \\omega_k / (2\\pi c)$, where $c$ is the speed of light in $\\mathrm{cm\\,s^{-1}}$.\n- Raman activity model: the molecular polarizability tensor is taken as a sum of individual bond contributions. Each bond’s contribution is linear in the bond length with distinct parallel and perpendicular slopes. Only first-order effects of infinitesimal bond length changes along a normal mode are considered. Directional changes of bond unit vectors may be neglected to first order for this task.\n\nFundamental constants and units:\n- Speed of light $c = 2.99792458 \\times 10^{10}\\ \\mathrm{cm\\,s^{-1}}$.\n- One atomic mass unit $m_u = 1.66053906660 \\times 10^{-27}\\ \\mathrm{kg}$.\n- One ångström $1\\ \\mathrm{\\AA} = 1.0 \\times 10^{-10}\\ \\mathrm{m}$.\n- Carbon mass $m_{\\mathrm{C}} = 12.0\\ m_u$, hydrogen mass $m_{\\mathrm{H}} = 1.0\\ m_u$.\n- All force constants $k_{ij}$ are in $\\mathrm{N\\,m^{-1}}$, all bond lengths are in $\\mathrm{\\AA}$, and Raman shifts must be reported in $\\mathrm{cm^{-1}}$.\n\nGeometry construction details:\n- Place the carbon atoms at the eight cube corners $(\\pm a/2, \\pm a/2, \\pm a/2)$ in $\\mathrm{\\AA}$, for a given edge length $a$.\n- For each carbon at position $\\mathbf{r}_{\\mathrm{C}}$, place one hydrogen at $\\mathbf{r}_{\\mathrm{H}} = \\mathbf{r}_{\\mathrm{C}} + r_{\\mathrm{CH}} \\,\\hat{\\mathbf{r}}_{\\mathrm{C}}$, where $\\hat{\\mathbf{r}}_{\\mathrm{C}} = \\mathbf{r}_{\\mathrm{C}} / \\lVert \\mathbf{r}_{\\mathrm{C}} \\rVert$ and $r_{\\mathrm{CH}}$ is the carbon–hydrogen bond length in $\\mathrm{\\AA}$.\n- Bonds: connect carbon–carbon pairs along cube edges (twelve edges total) and connect each carbon to its associated hydrogen (eight carbon–hydrogen bonds).\n\nForce field to Hessian mapping:\n- For a bond between atoms $i$ and $j$ with equilibrium vector $\\mathbf{R}_{ij} = \\mathbf{R}_j - \\mathbf{R}_i$, let $\\hat{\\mathbf{u}}_{ij} = \\mathbf{R}_{ij}/\\lVert \\mathbf{R}_{ij} \\rVert$ be the unit vector. The $3\\times 3$ Cartesian blocks added to the Hessian are of the form $k_{ij}\\, \\hat{\\mathbf{u}}_{ij}\\hat{\\mathbf{u}}_{ij}^{\\mathsf{T}}$ on the diagonal atom blocks and its negative on the corresponding off-diagonal atom blocks.\n- Assemble the full $3N \\times 3N$ Hessian by summing contributions from all bonds. Mass weight the Hessian using the diagonal mass matrix to obtain the symmetric eigenproblem for $\\omega_k^2$.\n\nRaman activity model:\n- Each bond contributes to the derivative of the polarizability tensor with respect to a normal coordinate via linear parallel and perpendicular slopes (in $\\mathrm{\\AA^2}$ per $\\mathrm{\\AA}$ of bond extension). Denote the parallel slope $s_{\\parallel}$ and perpendicular slope $s_{\\perp}$ for a given bond type. For infinitesimal bond extension $\\mathrm{d}r$ along a mode, the bond’s polarizability derivative tensor contribution is a linear combination of the identity and the projector onto the bond axis. The total polarizability derivative tensor for mode $k$ is the sum over all bonds of their respective contributions multiplied by the corresponding $\\mathrm{d}r/\\mathrm{d}Q_k$, where $Q_k$ is the mass-weighted normal coordinate of mode $k$.\n- The Raman activity of mode $k$ is to be computed from the isotropic and anisotropic parts of the polarizability derivative tensor according to standard, well-tested Placzek relationships.\n\nComputational requirements and numerical treatment:\n- Use the eight carbon and eight hydrogen atoms in three dimensions. Exclude the six lowest eigenvalues corresponding to global translation and rotation by discarding the six smallest non-negative eigenvalues. Treat any small negative eigenvalues due to numerical noise as zero before square rooting.\n- Sort vibrational modes by increasing wavenumber $\\tilde{\\nu}_k$.\n- Define the “most intense mode” as the mode with the largest Raman activity. In the event of an exact numerical tie, choose the one with the smallest wavenumber; if still tied, choose the lowest index in the sorted order.\n- Report the index as a $0$-based index among the vibrational modes (after removing the six lowest non-vibrational modes).\n- Express the reported Raman shift in $\\mathrm{cm^{-1}}$, rounded to one decimal place.\n\nTest suite:\nYour program must run the following five test cases, each specified by a tuple of parameters\n$$(a,\\ r_{\\mathrm{CH}},\\ k_{\\mathrm{CC}},\\ k_{\\mathrm{CH}},\\ s_{\\parallel}^{\\mathrm{CC}},\\ s_{\\perp}^{\\mathrm{CC}},\\ s_{\\parallel}^{\\mathrm{CH}},\\ s_{\\perp}^{\\mathrm{CH}}),$$\nwhere $a$ and $r_{\\mathrm{CH}}$ are in $\\mathrm{\\AA}$, $k_{\\mathrm{CC}}$ and $k_{\\mathrm{CH}}$ are in $\\mathrm{N\\,m^{-1}}$, and all $s$-parameters are in $\\mathrm{\\AA^2}$ per $\\mathrm{\\AA}$:\n- Case 1 (baseline): $(1.54,\\ 1.09,\\ 800.0,\\ 500.0,\\ 0.30,\\ 0.05,\\ 0.12,\\ 0.02)$\n- Case 2 (no Raman response): $(1.54,\\ 1.09,\\ 800.0,\\ 500.0,\\ 0.0,\\ 0.0,\\ 0.0,\\ 0.0)$\n- Case 3 (enhanced carbon–hydrogen Raman, stiffer carbon–hydrogen): $(1.54,\\ 1.09,\\ 800.0,\\ 800.0,\\ 0.15,\\ 0.03,\\ 0.24,\\ 0.04)$\n- Case 4 (enhanced carbon–carbon Raman, softer carbon–carbon): $(1.54,\\ 1.09,\\ 400.0,\\ 500.0,\\ 0.50,\\ 0.10,\\ 0.08,\\ 0.01)$\n- Case 5 (slightly smaller cube): $(1.40,\\ 1.09,\\ 800.0,\\ 500.0,\\ 0.30,\\ 0.05,\\ 0.12,\\ 0.02)$\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case’s result must be a two-element list of the form $[\\text{index}, \\tilde{\\nu}_{\\max}]$, where $\\text{index}$ is an integer and $\\tilde{\\nu}_{\\max}$ is a floating-point number rounded to one decimal place in $\\mathrm{cm^{-1}}$. For example: \"[[3,1450.2],[5,0.0],...]\" (this is an example only; your program must compute and print the actual results).", "solution": "The problem presented is a well-posed computational chemistry task requiring the simulation of a simplified Raman spectrum for the cubane molecule, $C_8H_8$. The validity of the problem is established as it is scientifically grounded in the standard harmonic approximation and bond polarizability model, it is self-contained with all necessary parameters and constants provided, and it is objectively formulated. The problem is solvable through a sequence of standard computational procedures. I will therefore provide a complete solution.\n\nThe solution is constructed in four principal stages:\n1.  Generation of the molecular geometry.\n2.  Normal mode analysis via the mass-weighted Cartesian Hessian eigenproblem.\n3.  Calculation of Raman activities for each vibrational mode using a bond polarizability model.\n4.  Identification of the most intense Raman mode according to the specified criteria.\n\nAll calculations must be performed with careful attention to units. For the normal mode analysis, which yields vibrational frequencies, it is imperative to use a consistent set of physical units. We shall use SI units: meters ($m$) for length, kilograms ($kg$) for mass, and seconds ($s$) for time. Force constants are given in $N\\,m^{-1}$, which is equivalent to $kg\\,s^{-2}$, and are thus compatible. For the Raman activity calculation, where only relative intensities matter, we may use a more convenient set of units, such as ångströms ($\\mathrm{\\AA}$) for length and atomic mass units ($m_u$) for mass, as this choice does not affect which mode is identified as most intense.\n\n**1. Molecular Geometry Construction**\nThe system consists of $N=16$ atoms: $8$ carbon and $8$ hydrogen atoms. The Cartesian coordinates $\\mathbf{R}_i$ are generated as specified.\n- The $8$ carbon atoms are placed at the corners of a cube centered at the origin, with positions $(\\pm a/2, \\pm a/2, \\pm a/2)$, where $a$ is the cube edge length given in $\\mathrm{\\AA}$.\n- For each carbon atom $i$ at position $\\mathbf{R}_{\\mathrm{C},i}$, a hydrogen atom is placed at $\\mathbf{R}_{\\mathrm{H},i} = \\mathbf{R}_{\\mathrm{C},i} + r_{\\mathrm{CH}} \\, \\hat{\\mathbf{R}}_{\\mathrm{C},i}$. Here, $r_{\\mathrm{CH}}$ is the specified carbon-hydrogen bond length, and $\\hat{\\mathbf{R}}_{\\mathrm{C},i} = \\mathbf{R}_{\\mathrm{C},i} / \\lVert \\mathbf{R}_{\\mathrm{C},i} \\rVert$ is the unit vector pointing from the cube's center to the carbon atom. The norm for any carbon is $\\lVert \\mathbf{R}_{\\mathrm{C},i} \\rVert = \\sqrt{3(a/2)^2} = a\\sqrt{3}/2$.\n- The masses are assigned as $m_{\\mathrm{C}} = 12.0\\,m_u$ and $m_{\\mathrm{H}} = 1.0\\,m_u$, where $m_u$ is the atomic mass unit.\n\n**2. Normal Mode Analysis**\nVibrational modes are collective motions of atoms that are solutions to the classical equations of motion in the harmonic approximation. They are found by solving the eigenproblem of the mass-weighted Hessian matrix.\n- First, the $3N \\times 3N$ Cartesian Hessian matrix $\\mathbf{H}$ is constructed. The elements $H_{\\alpha i, \\beta j} = \\frac{\\partial^2 V}{\\partial R_{i\\alpha} \\partial R_{j\\beta}}$ represent the second derivatives of the potential energy $V$ with respect to atomic Cartesian coordinates. For the specified central-force model, the contribution of a single Hookean spring bond between atoms $i$ and $j$ with force constant $k_{ij}$ and equilibrium unit vector $\\hat{\\mathbf{u}}_{ij}$ is a $3 \\times 3$ matrix block $\\mathbf{K}_{ij} = k_{ij} \\hat{\\mathbf{u}}_{ij} \\hat{\\mathbf{u}}_{ij}^{\\mathsf{T}}$. This block is added to the diagonal $3 \\times 3$ Hessian blocks $\\mathbf{H}_{ii}$ and $\\mathbf{H}_{jj}$ and subtracted from the off-diagonal blocks $\\mathbf{H}_{ij}$ and $\\mathbf{H}_{ji}$. The full Hessian is the sum of these contributions over all bonds.\n- The mass-weighted Hessian $\\mathbf{H}'$ is then formed: $\\mathbf{H}' = \\mathbf{M}^{-1/2} \\mathbf{H} \\mathbf{M}^{-1/2}$, where $\\mathbf{M}$ is the diagonal matrix of atomic masses, with each atom's mass repeated three times for its $x, y, z$ coordinates.\n- The eigenvalues $\\lambda_k$ and eigenvectors $\\mathbf{L}_k$ of $\\mathbf{H}'$ are determined by solving the eigenproblem $\\mathbf{H}' \\mathbf{L}_k = \\lambda_k \\mathbf{L}_k$. The eigenvalues are the squared angular frequencies of the normal modes, $\\lambda_k = \\omega_k^2$. The eigenvectors $\\mathbf{L}_k$ represent the displacement patterns of the atoms in mass-weighted coordinates.\n- For numerical stability, any small negative eigenvalues arising from floating-point inaccuracies are treated as zero. The angular frequency is $\\omega_k = \\sqrt{\\max(0, \\lambda_k)}$.\n- The vibrational wavenumber $\\tilde{\\nu}_k$ (or Raman shift) is calculated in units of $\\mathrm{cm}^{-1}$ using the formula $\\tilde{\\nu}_k = \\omega_k / (2\\pi c)$, where $c$ is the speed of light in $\\mathrm{cm\\,s^{-1}}$.\n- For a non-linear molecule with $N$ atoms, there are $3N-6$ vibrational modes. The $6$ lowest-frequency modes correspond to overall translation and rotation of the molecule and must be discarded. The remaining $3 \\times 16 - 6 = 42$ modes are the vibrational modes of interest.\n\n**3. Raman Activity Calculation**\nThe intensity of a Stokes Raman line for a vibrational mode $k$ is proportional to its Raman activity $S_k$. Within the Placzek approximation, $S_k$ is a function of the invariants of the polarizability derivative tensor $\\boldsymbol{\\alpha}'_k = (\\partial \\boldsymbol{\\alpha} / \\partial Q_k)_0$, where $Q_k$ is the normal coordinate for mode $k$.\n- The molecular polarizability $\\boldsymbol{\\alpha}$ is approximated as a sum of bond polarizabilities. For a given bond $ij$, the derivative with respect to its length change $\\mathrm{d}r_{ij}$ is modeled as:\n$$ \\frac{\\partial \\boldsymbol{\\alpha}_{ij}}{\\partial r_{ij}} = s'_{\\parallel, ij} \\hat{\\mathbf{u}}_{ij}\\hat{\\mathbf{u}}_{ij}^{\\mathsf{T}} + s'_{\\perp, ij} (\\mathbf{I} - \\hat{\\mathbf{u}}_{ij}\\hat{\\mathbf{u}}_{ij}^{\\mathsf{T}}) $$\nwhere $s'_{\\parallel, ij}$ and $s'_{\\perp, ij}$ are the given parallel and perpendicular polarizability slopes, and $\\mathbf{I}$ is the $3 \\times 3$ identity matrix.\n- The derivative with respect to the normal coordinate $Q_k$ is found using the chain rule:\n$$ \\boldsymbol{\\alpha}'_k = \\frac{\\partial \\boldsymbol{\\alpha}}{\\partial Q_k} = \\sum_{ij \\in \\text{bonds}} \\frac{\\partial \\boldsymbol{\\alpha}_{ij}}{\\partial r_{ij}} \\frac{\\partial r_{ij}}{\\partial Q_k} $$\nThe term $\\partial r_{ij} / \\partial Q_k$ relates the change in bond length to the normal coordinate displacement. It can be shown to be:\n$$ \\frac{\\partial r_{ij}}{\\partial Q_k} = \\hat{\\mathbf{u}}_{ij} \\cdot \\left( \\frac{\\mathbf{l}_{j,k}}{\\sqrt{m_j}} - \\frac{\\mathbf{l}_{i,k}}{\\sqrt{m_i}} \\right) $$\nwhere $\\mathbf{l}_{p,k}$ is the $3$-dimensional part of the mass-weighted eigenvector $\\mathbf{L}_k$ corresponding to atom $p$, and $m_p$ is the mass of atom $p$.\n- Once the tensor $\\boldsymbol{\\alpha}'_k$ is computed for a mode, its isotropic and anisotropic invariants are calculated:\n  - Mean polarizability derivative (isotropic part): $a'_k = \\frac{1}{3} \\mathrm{Tr}(\\boldsymbol{\\alpha}'_k)$\n  - Anisotropy squared: $g_k'^2 = \\frac{1}{2} \\left[ (\\alpha'_{xx,k} - \\alpha'_{yy,k})^2 + (\\alpha'_{yy,k} - \\alpha'_{zz,k})^2 + (\\alpha'_{zz,k} - \\alpha'_{xx,k})^2 \\right] + 3(\\alpha_{xy,k}'^2 + \\alpha_{yz,k}'^2 + \\alpha_{zx,k}'^2)$\n- The Raman activity is then given by the standard formula for unpolarized incident light:\n$$ S_k = 45 (a'_k)^2 + 7 (g'_k)^2 $$\n\n**4. Identification of the Most Intense Mode**\nThe vibrational modes are first sorted by increasing wavenumber $\\tilde{\\nu}_k$. The \"most intense mode\" is defined as the one with the maximum Raman activity $S_k$. In the case of a tie in activity, the mode with the lower wavenumber is chosen. If wavenumbers are also tied, the mode with the lower index in the sorted list is selected. The final reported result for each test case is a pair: the $0$-based index of this most intense mode among the sorted vibrational modes, and its corresponding wavenumber rounded to one decimal place.\n\nThe provided Python code implements this entire procedure, processing each test case from the problem statement and generating the required output.", "answer": "```python\nimport numpy as np\nimport itertools\n\ndef solve():\n    \"\"\"\n    Main function to solve the cubane Raman spectrum problem for all test cases.\n    \"\"\"\n\n    # --- Constants ---\n    # Speed of light in cm/s\n    C_CMS = 2.99792458e10\n    # Atomic mass unit in kg\n    AMU_KG = 1.66053906660e-27\n    # Angstrom to meter conversion\n    A_TO_M = 1.0e-10\n\n    # Atomic masses\n    MASS_C_KG = 12.0 * AMU_KG\n    MASS_H_KG = 1.0 * AMU_KG\n    MASS_C_AMU = 12.0\n    MASS_H_AMU = 1.0\n\n    test_cases = [\n        # (a, r_CH, k_CC, k_CH, s_par_CC, s_perp_CC, s_par_CH, s_perp_CH)\n        # a, r_CH in Å; k in N/m; s in Å^2 (which is Å^3 / Å)\n        (1.54, 1.09, 800.0, 500.0, 0.30, 0.05, 0.12, 0.02), # Case 1\n        (1.54, 1.09, 800.0, 500.0, 0.0, 0.0, 0.0, 0.0),      # Case 2\n        (1.54, 1.09, 800.0, 800.0, 0.15, 0.03, 0.24, 0.04), # Case 3\n        (1.54, 1.09, 400.0, 500.0, 0.50, 0.10, 0.08, 0.01), # Case 4\n        (1.40, 1.09, 800.0, 500.0, 0.30, 0.05, 0.12, 0.02), # Case 5\n    ]\n    \n    results = []\n    for params in test_cases:\n        result = compute_and_find_max_raman(params, C_CMS, AMU_KG, A_TO_M, \n                                            MASS_C_KG, MASS_H_KG, \n                                            MASS_C_AMU, MASS_H_AMU)\n        results.append(result)\n\n    formatted_results = [f\"[{r[0]},{r[1]:.1f}]\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef compute_and_find_max_raman(params, c_cms, amu_kg, a_to_m, m_c_kg, m_h_kg, m_c_amu, m_h_amu):\n    \"\"\"\n    Computes the Raman spectrum for one set of parameters and finds the most intense mode.\n    \"\"\"\n    a_A, r_CH_A, k_CC, k_CH, s_par_CC, s_perp_CC, s_par_CH, s_perp_CH = params\n\n    a_m = a_A * a_to_m # Cube edge length in meters\n\n    # --- 1. Geometry Construction ---\n    num_atoms = 16\n    coords_A = np.zeros((num_atoms, 3)) # In Angstroms\n    masses_kg = np.zeros(num_atoms)\n    masses_amu = np.zeros(num_atoms)\n    \n    # Carbon atoms\n    c_indices = list(range(8))\n    a_half_A = a_A / 2.0\n    # Use itertools.product to generate corners and sort for a canonical order\n    c_coords_list = sorted(list(itertools.product([-a_half_A, a_half_A], repeat=3)), key=lambda p: (-p[0], -p[1], -p[2]))\n\n    for i in c_indices:\n        coords_A[i] = c_coords_list[i]\n        masses_kg[i] = m_c_kg\n        masses_amu[i] = m_c_amu\n\n    # Hydrogen atoms\n    h_indices = list(range(8, 16))\n    for i in c_indices:\n        c_coord = coords_A[i]\n        r_c = np.linalg.norm(c_coord)\n        u_c = c_coord / r_c\n        coords_A[i+8] = c_coord + r_CH_A * u_c\n        masses_kg[i+8] = m_h_kg\n        masses_amu[i+8] = m_h_amu\n        \n    coords_m = coords_A * a_to_m # Coordinates in meters\n\n    # --- Bond definitions ---\n    bonds = []\n    # C-C bonds\n    for i in range(8):\n        for j in range(i + 1, 8):\n            dist = np.linalg.norm(coords_A[i] - coords_A[j])\n            if np.isclose(dist, a_A):\n                bonds.append({'atoms': (i, j), 'k': k_CC, 's_par': s_par_CC, 's_perp': s_perp_CC})\n    # C-H bonds\n    for i in range(8):\n        bonds.append({'atoms': (i, i + 8), 'k': k_CH, 's_par': s_par_CH, 's_perp': s_perp_CH})\n\n    # --- 2. Normal Mode Analysis ---\n    hessian = np.zeros((3 * num_atoms, 3 * num_atoms))\n    for bond in bonds:\n        i, j = bond['atoms']\n        k = bond['k']\n        r_i = coords_m[i]\n        r_j = coords_m[j]\n        rij_vec = r_j - r_i\n        u_ij = rij_vec / np.linalg.norm(rij_vec)\n        k_block = k * np.outer(u_ij, u_ij)\n        \n        hessian[3*i:3*i+3, 3*i:3*i+3] += k_block\n        hessian[3*j:3*j+3, 3*j:3*j+3] += k_block\n        hessian[3*i:3*i+3, 3*j:3*j+3] -= k_block\n        hessian[3*j:3*j+3, 3*i:3*i+3] -= k_block\n\n    mass_matrix_inv_sqrt = np.repeat(1.0 / np.sqrt(masses_kg), 3)\n    mass_weighted_hessian = hessian * np.outer(mass_matrix_inv_sqrt, mass_matrix_inv_sqrt)\n\n    eigvals, eigvecs = np.linalg.eigh(mass_weighted_hessian)\n    \n    # Frequencies in cm^-1\n    # NB: eigvals are omega^2 in (rad/s)^2. omega is in rad/s.\n    # nu_hz = omega / (2*pi)\n    # nu_cm_1 = nu_hz / c_cms\n    frequencies = np.sqrt(np.maximum(0, eigvals)) / (2 * np.pi * c_cms)\n    \n    # Sort modes by frequency\n    sorted_indices = np.argsort(frequencies)\n    sorted_freqs = frequencies[sorted_indices]\n    sorted_eigvecs = eigvecs[:, sorted_indices]\n    \n    # Discard 6 translational/rotational modes\n    vibrational_freqs = sorted_freqs[6:]\n    vibrational_eigvecs = sorted_eigvecs[:, 6:]\n    num_vib_modes = len(vibrational_freqs)\n\n    # --- 3. Raman Activity Calculation ---\n    activities = []\n    identity = np.identity(3)\n    \n    for k in range(num_vib_modes):\n        L_k = vibrational_eigvecs[:, k]\n        alpha_prime_k = np.zeros((3, 3))\n        \n        for bond in bonds:\n            i, j = bond['atoms']\n            s_par = bond['s_par']\n            s_perp = bond['s_perp']\n            \n            r_i_A = coords_A[i]\n            r_j_A = coords_A[j]\n            \n            rij_vec_A = r_j_A - r_i_A\n            u_ij = rij_vec_A / np.linalg.norm(rij_vec_A)\n            \n            # d(alpha)/dr term\n            d_alpha_dr_ij = s_par * np.outer(u_ij, u_ij) + s_perp * (identity - np.outer(u_ij, u_ij))\n\n            # d(r)/dQ term\n            l_i_k = L_k[3*i:3*i+3]\n            l_j_k = L_k[3*j:3*j+3]\n            m_i_amu = masses_amu[i]\n            m_j_amu = masses_amu[j]\n            \n            dr_dQ_k = np.dot(u_ij, (l_j_k / np.sqrt(m_j_amu) - l_i_k / np.sqrt(m_i_amu)))\n            \n            alpha_prime_k += d_alpha_dr_ij * dr_dQ_k\n\n        # Calculate invariants and activity\n        a_prime_k = (1.0/3.0) * np.trace(alpha_prime_k)\n        \n        g_prime_k_sq = 0.5 * (\n            (alpha_prime_k[0,0] - alpha_prime_k[1,1])**2 +\n            (alpha_prime_k[1,1] - alpha_prime_k[2,2])**2 +\n            (alpha_prime_k[2,2] - alpha_prime_k[0,0])**2\n        ) + 3.0 * (\n            alpha_prime_k[0,1]**2 +\n            alpha_prime_k[1,2]**2 +\n            alpha_prime_k[0,2]**2\n        )\n        \n        activity = 45 * a_prime_k**2 + 7 * g_prime_k_sq\n        activities.append(activity)\n\n    # --- 4. Find Most Intense Mode ---\n    if not activities or all(np.isclose(a, 0) for a in activities):\n        # Tie-breaking for zero activity: smallest wavenumber, then smallest index.\n        # Since modes are already sorted by wavenumber, this is the first mode.\n        max_mode_idx = 0\n    else:\n        # Create a list of tuples for sorting: (activity, wavenumber, index)\n        mode_data = []\n        for i in range(num_vib_modes):\n            mode_data.append((-activities[i], vibrational_freqs[i], i))\n        \n        # Sort to find the max activity, with tie-breaking\n        mode_data.sort()\n        max_mode_idx = mode_data[0][2]\n\n    wavenumber_max = vibrational_freqs[max_mode_idx]\n    \n    return [max_mode_idx, wavenumber_max]\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2462305"}, {"introduction": "Experimental spectra are often a population-weighted average of signals from multiple isomers or conformers present at thermal equilibrium. This practice simulates this scenario for the *anti* and *gauche* conformers of 1,2-dichloroethane, demonstrating how to combine quantum chemical data with statistical mechanics. You will use provided energy differences and polarizability derivative tensors to calculate Boltzmann populations and construct a composite Raman spectrum, a key skill for interpreting experimental data for flexible molecules [@problem_id:2462310].", "problem": "You will implement a first-principles simulation that computes and compares the relative Raman spectral intensity of the two conformers of 1,2-dichloroethane (anti and gauche) and predicts their relative populations at specified temperatures. Your program must be a complete, runnable program that derives the Raman activity from the polarizability derivative tensor, uses a physically motivated spectral lineshape, and applies Boltzmann statistics for populations.\n\nStart from these fundamental bases and well-tested facts:\n- The classical description of Raman scattering models the induced dipole moment as $\\boldsymbol{\\mu}_{\\mathrm{ind}} = \\boldsymbol{\\alpha} \\, \\mathbf{E}$, where $\\boldsymbol{\\alpha}$ is the molecular polarizability tensor and $\\mathbf{E}$ is the incident electric field.\n- For a small-amplitude normal mode $Q_k$ of angular frequency $\\omega_k$, the vibrational motion modulates the polarizability as $\\boldsymbol{\\alpha}(t) \\approx \\boldsymbol{\\alpha}_0 + \\left(\\frac{\\partial \\boldsymbol{\\alpha}}{\\partial Q_k}\\right)_0 Q_k \\cos(\\omega_k t)$.\n- The time-dependent polarizability induces scattering at the Stokes-shifted frequency, with an intensity that depends on the derivatives of the polarizability tensor with respect to the normal coordinate after rotational averaging over all molecular orientations.\n- The equilibrium population of conformer $i$ at absolute temperature $T$ and energy $E_i$ with degeneracy $g_i$ obeys the Boltzmann distribution $p_i \\propto g_i \\exp\\!\\left(-\\frac{E_i}{R T}\\right)$, where $R$ is the universal gas constant.\n- A standard model for a spectral line is a Gaussian centered at the mode wavenumber $\\tilde{\\nu}_k$ with Full-Width at Half-Maximum (FWHM) $\\Gamma$, expressed in wavenumbers.\n\nFrom these bases, derive:\n1) An orientation-averaged expression for the Raman activity of a vibrational mode in terms of invariants of the polarizability-derivative tensor $\\left(\\frac{\\partial \\boldsymbol{\\alpha}}{\\partial Q_k}\\right)$, using the isotropic part and the anisotropic part of the tensor. Express your final activity for each mode $k$ as a function of the tensor elements $\\alpha'_{xx}, \\alpha'_{yy}, \\alpha'_{zz}, \\alpha'_{xy}, \\alpha'_{xz}, \\alpha'_{yz}$, where $\\alpha'_{ij} \\equiv \\left(\\frac{\\partial \\alpha_{ij}}{\\partial Q_k}\\right)$.\n2) A Gaussian lineshape $L(\\tilde{\\nu}; \\tilde{\\nu}_k, \\Gamma)$ whose peak is $1$ at $\\tilde{\\nu}=\\tilde{\\nu}_k$ and whose FWHM is $\\Gamma$, suitable for summing “sticks” into a continuous spectrum.\n3) The normalized Boltzmann populations $p_i(T) = \\dfrac{g_i \\exp\\!\\left(-\\dfrac{E_i}{R T}\\right)}{\\sum_j g_j \\exp\\!\\left(-\\dfrac{E_j}{R T}\\right)}$ using energies in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, temperature in $\\mathrm{K}$, and $R$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$.\n\nYou will then implement the following specific simulation and comparisons.\n\nData for conformers:\n- Energies (relative electronic energies at the same level of theory):\n  - anti: $E_{\\mathrm{anti}} = 0.00\\ \\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, degeneracy $g_{\\mathrm{anti}} = 1$.\n  - gauche: $E_{\\mathrm{gauche}} = 1.50\\ \\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, degeneracy $g_{\\mathrm{gauche}} = 2$.\n- Universal gas constant: $R = 8.314462618\\times 10^{-3}\\ \\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$.\n\nVibrational modes for each conformer (wavenumber in $\\mathrm{cm}^{-1}$, and symmetric polarizability-derivative tensor elements $\\alpha'_{ij}$ in arbitrary consistent units):\n\nanti conformer:\n- Mode A1: $\\tilde{\\nu} = 210$; matrix\n  $$\\begin{bmatrix}\n  0.30 & 0.02 & -0.01\\\\\n  0.02 & 0.20 & 0.00\\\\\n  -0.01 & 0.00 & 0.25\n  \\end{bmatrix}$$\n- Mode A2: $\\tilde{\\nu} = 615$; matrix\n  $$\\begin{bmatrix}\n  0.60 & 0.04 & 0.02\\\\\n  0.04 & 0.15 & -0.01\\\\\n  0.02 & -0.01 & 0.20\n  \\end{bmatrix}$$\n- Mode A3: $\\tilde{\\nu} = 860$; matrix\n  $$\\begin{bmatrix}\n  0.40 & 0.02 & 0.01\\\\\n  0.02 & 0.40 & -0.01\\\\\n  0.01 & -0.01 & 0.50\n  \\end{bmatrix}$$\n\ngauche conformer:\n- Mode G1: $\\tilde{\\nu} = 180$; matrix\n  $$\\begin{bmatrix}\n  0.25 & -0.01 & 0.03\\\\\n  -0.01 & 0.28 & 0.02\\\\\n  0.03 & 0.02 & 0.20\n  \\end{bmatrix}$$\n- Mode G2: $\\tilde{\\nu} = 595$; matrix\n  $$\\begin{bmatrix}\n  0.30 & 0.12 & 0.06\\\\\n  0.12 & 0.35 & -0.08\\\\\n  0.06 & -0.08 & 0.29\n  \\end{bmatrix}$$\n- Mode G3: $\\tilde{\\nu} = 845$; matrix\n  $$\\begin{bmatrix}\n  0.45 & 0.05 & 0.01\\\\\n  0.05 & 0.33 & -0.02\\\\\n  0.01 & -0.02 & 0.40\n  \\end{bmatrix}$$\n\nSimulation task:\n- For each conformer, compute the Raman activity for each mode from the tensor invariants you have derived.\n- Construct a simulated Raman spectrum as the sum over modes of population-weighted activities multiplied by the Gaussian lineshape centered at each mode wavenumber: for conformer $i$, $I_i(\\tilde{\\nu}) = p_i(T) \\sum_k S_{i,k} \\, L(\\tilde{\\nu}; \\tilde{\\nu}_{i,k}, \\Gamma)$, where $S_{i,k}$ is the Raman activity of mode $k$ of conformer $i$.\n- Compare the two spectra at a single probe wavenumber $\\tilde{\\nu}_{\\mathrm{probe}} = 600\\ \\mathrm{cm}^{-1}$ by reporting the ratio $I_{\\mathrm{anti}}(600) / I_{\\mathrm{gauche}}(600)$.\n- Predict the relative populations by reporting $p_{\\mathrm{anti}}(T)$.\n\nPhysical and numerical units:\n- Energies must be treated in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, temperatures in $\\mathrm{K}$, wavenumbers in $\\mathrm{cm}^{-1}$, and FWHM in $\\mathrm{cm}^{-1}$.\n- The reported population is a dimensionless fraction (express it as a decimal), and the intensity ratio is also dimensionless.\n\nTest suite:\nUse the following three test cases, each defined by a temperature $T$ and a Gaussian FWHM $\\Gamma$ (both in the units specified above):\n- Case 1: $T = 298.15$, $\\Gamma = 12$.\n- Case 2: $T = 150.00$, $\\Gamma = 12$.\n- Case 3: $T = 500.00$, $\\Gamma = 25$.\n\nRequired final output format:\n- Your program must produce a single line of output containing the results aggregated for all test cases as a flat comma-separated list enclosed in square brackets, in the order:\n  $[p_{\\mathrm{anti}}(T_1),\\, I_{\\mathrm{anti}}(600)/I_{\\mathrm{gauche}}(600)\\ \\text{at}\\ T_1,\\, p_{\\mathrm{anti}}(T_2),\\, I_{\\mathrm{anti}}(600)/I_{\\mathrm{gauche}}(600)\\ \\text{at}\\ T_2,\\, p_{\\mathrm{anti}}(T_3),\\, I_{\\mathrm{anti}}(600)/I_{\\mathrm{gauche}}(600)\\ \\text{at}\\ T_3]$.\n- Each number in the list must be formatted as a decimal rounded to six digits after the decimal point.\n- No additional text or lines should be printed.\n\nAngle units do not apply in this problem. Percentages must not be used; report fractions as decimals.", "solution": "The problem statement is scrutinized and found to be valid. It presents a well-posed, scientifically grounded problem in computational spectroscopy that is free from contradiction, ambiguity, or factual error. It provides all necessary physical constants, molecular data, and simulation parameters to compute a unique, verifiable result. We may therefore proceed with the derivation and solution.\n\nThe task is to simulate the Raman spectrum of the *anti* and *gauche* conformers of $1,2$-dichloroethane and to compare their relative contributions at different temperatures. This requires three distinct theoretical components: an expression for the Raman activity of a vibrational mode, a function to model the spectral lineshape, and a statistical mechanical model for the conformer populations.\n\nFirst, we derive the expression for the Raman activity, $S_k$, of a vibrational mode $k$. Raman scattering arises from the modulation of the molecular polarizability tensor, $\\boldsymbol{\\alpha}$, by the nuclear motion of a normal mode, $Q_k$. The intensity of the scattered light is dependent on the polarizability derivative tensor, $\\boldsymbol{\\alpha}'_k = \\left(\\frac{\\partial \\boldsymbol{\\alpha}}{\\partial Q_k}\\right)_0$. For a molecule in a fluid phase, we must average over all possible orientations with respect to the incident electric field. This orientational averaging leads to an expression for the activity in terms of rotational invariants of the tensor $\\boldsymbol{\\alpha}'_k$.\n\nThe tensor $\\boldsymbol{\\alpha}'_k$ can be decomposed into an isotropic part and an anisotropic part. The two fundamental invariants are the mean polarizability derivative, $\\bar{\\alpha}'_k$, and the anisotropy of the polarizability derivative, $\\gamma_k'^2$.\n\nThe mean polarizability derivative, $\\bar{\\alpha}_k'$, is one-third of the trace of the tensor:\n$$\n\\bar{\\alpha}_k' = \\frac{1}{3} \\mathrm{Tr}(\\boldsymbol{\\alpha}'_k) = \\frac{1}{3} (\\alpha'_{xx} + \\alpha'_{yy} + \\alpha'_{zz})\n$$\nwhere $\\alpha'_{ii}$ are the diagonal elements of the tensor. This invariant governs the intensity of polarized Raman scattering.\n\nThe anisotropy invariant, $\\gamma_k'^2$, quantifies the deviation from spherical symmetry and is given by:\n$$\n\\gamma_k'^2 = \\frac{1}{2} \\left[ (\\alpha'_{xx} - \\alpha'_{yy})^2 + (\\alpha'_{yy} - \\alpha'_{zz})^2 + (\\alpha'_{zz} - \\alpha'_{xx})^2 + 6(\\alpha_{xy}'^2 + \\alpha_{xz}'^2 + \\alpha_{yz}'^2) \\right]\n$$\nwhere we have used the symmetric property of the tensor, $\\alpha'_{ij} = \\alpha'_{ji}$. This invariant is related to depolarized scattering.\n\nFor unpolarized incident light, the total Raman activity, $S_k$, is a weighted sum of the squares of these two invariants. The standard expression used in computational chemistry, which we adopt here, is:\n$$\nS_k = 45 (\\bar{\\alpha}_k')^2 + 7 \\gamma_k'^2\n$$\nThis formula provides a single scalar value representing the intrinsic Raman intensity of mode $k$, independent of molecular orientation. Any overall proportionality constants are omitted as they cancel when computing intensity ratios.\n\nSecond, we formulate the lineshape function. Each vibrational transition, represented as a \"stick\" at wavenumber $\\tilde{\\nu}_k$, is broadened into a continuous band. A Gaussian function is specified for this purpose. We require a function $L(\\tilde{\\nu}; \\tilde{\\nu}_k, \\Gamma)$ with its peak normalized to $1$ at $\\tilde{\\nu} = \\tilde{\\nu}_k$ and having a Full-Width at Half-Maximum (FWHM) of $\\Gamma$. The relationship between the FWHM $\\Gamma$ and the standard deviation $\\sigma$ of a Gaussian is $\\Gamma = 2\\sqrt{2\\ln(2)} \\sigma$. Rearranging gives $2\\sigma^2 = \\frac{\\Gamma^2}{4\\ln(2)}$. The lineshape function is thus:\n$$\nL(\\tilde{\\nu}; \\tilde{\\nu}_k, \\Gamma) = \\exp\\left(-\\frac{(\\tilde{\\nu} - \\tilde{\\nu}_k)^2}{2\\sigma^2}\\right) = \\exp\\left(-4 \\ln(2) \\frac{(\\tilde{\\nu} - \\tilde{\\nu}_k)^2}{\\Gamma^2}\\right)\n$$\n\nThird, we determine the relative populations of the two conformers using Boltzmann statistics. At thermal equilibrium at temperature $T$, the probability $p_i$ of finding a molecule in a state $i$ with energy $E_i$ and degeneracy $g_i$ is proportional to $g_i \\exp(-E_i / RT)$, where $R$ is the universal gas constant. For our two-conformer system (*anti* and *gauche*), the normalized population of the *anti* conformer is:\n$$\np_{\\mathrm{anti}}(T) = \\frac{g_{\\mathrm{anti}} \\exp\\left(-\\frac{E_{\\mathrm{anti}}}{RT}\\right)}{g_{\\mathrm{anti}} \\exp\\left(-\\frac{E_{\\mathrm{anti}}}{RT}\\right) + g_{\\mathrm{gauche}} \\exp\\left(-\\frac{E_{\\mathrm{gauche}}}{RT}\\right)}\n$$\nUsing the provided data, $E_{\\mathrm{anti}} = 0.00\\ \\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ and $g_{\\mathrm{anti}} = 1$, the expression simplifies to:\n$$\np_{\\mathrm{anti}}(T) = \\frac{1}{1 + g_{\\mathrm{gauche}} \\exp\\left(-\\frac{E_{\\mathrm{gauche}} - E_{\\mathrm{anti}}}{RT}\\right)} = \\frac{1}{1 + 2 \\exp\\left(-\\frac{1.50}{RT}\\right)}\n$$\nand the population of the *gauche* conformer is $p_{\\mathrm{gauche}}(T) = 1 - p_{\\mathrm{anti}}(T)$.\n\nFinally, we construct the total simulated Raman spectrum. The spectrum is the sum of contributions from both conformers, weighted by their respective populations. For a given conformer $i$, its contribution to the total intensity at wavenumber $\\tilde{\\nu}$ is the sum over all its vibrational modes $k$:\n$$\nI_i(\\tilde{\\nu}) = p_i(T) \\sum_k S_{i,k} L(\\tilde{\\nu}; \\tilde{\\nu}_{i,k}, \\Gamma)\n$$\nwhere $S_{i,k}$ is the Raman activity of mode $k$ of conformer $i$. The problem asks for the ratio of intensities from each conformer at a specific probe wavenumber, $\\tilde{\\nu}_{\\mathrm{probe}} = 600\\ \\mathrm{cm}^{-1}$. This ratio is:\n$$\n\\frac{I_{\\mathrm{anti}}(\\tilde{\\nu}_{\\mathrm{probe}})}{I_{\\mathrm{gauche}}(\\tilde{\\nu}_{\\mathrm{probe}})} = \\frac{p_{\\mathrm{anti}}(T) \\sum_k S_{\\mathrm{anti},k} L(\\tilde{\\nu}_{\\mathrm{probe}}; \\tilde{\\nu}_{\\mathrm{anti},k}, \\Gamma)}{p_{\\mathrm{gauche}}(T) \\sum_k S_{\\mathrm{gauche},k} L(\\tilde{\\nu}_{\\mathrm{probe}}; \\tilde{\\nu}_{\\mathrm{gauche},k}, \\Gamma)}\n$$\nThe implementation will follow these derived formulae to process the given data and test cases.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes and compares the relative Raman spectral intensity of the two\n    conformers of 1,2-dichloroethane (anti and gauche) and predicts their\n    relative populations at specified temperatures.\n    \"\"\"\n\n    # --- Givens and Constants ---\n    # Universal gas constant in kJ mol^-1 K^-1\n    R = 8.314462618e-3\n\n    # Conformer energy and degeneracy data\n    # Anti conformer\n    E_anti = 0.00  # kJ/mol\n    g_anti = 1.0\n    # Gauche conformer\n    E_gauche = 1.50  # kJ/mol\n    g_gauche = 2.0\n\n    # Probe wavenumber for intensity comparison\n    nu_probe = 600.0  # cm^-1\n\n    # Vibrational modes data for each conformer\n    # Format: (wavenumber [cm^-1], polarizability derivative tensor)\n    anti_modes = [\n        (210.0, np.array([[0.30, 0.02, -0.01], [0.02, 0.20, 0.00], [-0.01, 0.00, 0.25]])),\n        (615.0, np.array([[0.60, 0.04, 0.02], [0.04, 0.15, -0.01], [0.02, -0.01, 0.20]])),\n        (860.0, np.array([[0.40, 0.02, 0.01], [0.02, 0.40, -0.01], [0.01, -0.01, 0.50]]))\n    ]\n\n    gauche_modes = [\n        (180.0, np.array([[0.25, -0.01, 0.03], [-0.01, 0.28, 0.02], [0.03, 0.02, 0.20]])),\n        (595.0, np.array([[0.30, 0.12, 0.06], [0.12, 0.35, -0.08], [0.06, -0.08, 0.29]])),\n        (845.0, np.array([[0.45, 0.05, 0.01], [0.05, 0.33, -0.02], [0.01, -0.02, 0.40]]))\n    ]\n\n    # Test cases: (Temperature [K], FWHM [cm^-1])\n    test_cases = [\n        (298.15, 12.0),\n        (150.00, 12.0),\n        (500.00, 25.0),\n    ]\n\n    # --- Helper Functions based on Derived Formulae ---\n\n    def calculate_raman_activity(a_prime: np.ndarray) -> float:\n        \"\"\"\n        Calculates Raman activity from the polarizability derivative tensor.\n        S_k = 45 * (alpha_bar')^2 + 7 * (gamma')^2\n        \"\"\"\n        # Mean polarizability derivative (isotropic invariant)\n        alpha_bar_prime = (1.0 / 3.0) * np.trace(a_prime)\n\n        # Anisotropy invariant squared\n        # The tensor is symmetric, so a_prime[i, j] == a_prime[j, i]\n        ap_xx, ap_yy, ap_zz = a_prime[0, 0], a_prime[1, 1], a_prime[2, 2]\n        ap_xy, ap_xz, ap_yz = a_prime[0, 1], a_prime[0, 2], a_prime[1, 2]\n        \n        gamma_prime_sq = 0.5 * (\n            (ap_xx - ap_yy)**2 +\n            (ap_yy - ap_zz)**2 +\n            (ap_zz - ap_xx)**2 +\n            6 * (ap_xy**2 + ap_xz**2 + ap_yz**2)\n        )\n\n        return 45.0 * alpha_bar_prime**2 + 7.0 * gamma_prime_sq\n\n    def gaussian_lineshape(nu: float, nu_k: float, gamma: float) -> float:\n        \"\"\"\n        Calculates the value of a Gaussian lineshape function.\n        Peak is 1, FWHM is gamma.\n        \"\"\"\n        # Pre-compute constant factor to avoid recalculation\n        c = 4.0 * np.log(2.0)\n        return np.exp(-c * ((nu - nu_k) / gamma)**2)\n\n    def calculate_populations(T: float) -> tuple[float, float]:\n        \"\"\"\n        Calculates the Boltzmann populations for the anti and gauche conformers.\n        \"\"\"\n        # The energy of the anti conformer is the zero reference (E_anti = 0)\n        boltzmann_factor = np.exp(-(E_gauche - E_anti) / (R * T))\n        denominator = g_anti + g_gauche * boltzmann_factor\n        \n        p_anti = g_anti / denominator\n        p_gauche = (g_gauche * boltzmann_factor) / denominator\n        \n        return p_anti, p_gauche\n\n    # --- Main Simulation Loop ---\n    \n    results = []\n    for T, gamma in test_cases:\n        # 1. Calculate conformer populations at temperature T\n        p_anti, p_gauche = calculate_populations(T)\n\n        # 2. Calculate total intensity for the anti conformer\n        intensity_anti = 0.0\n        for nu_k, a_prime in anti_modes:\n            S_k = calculate_raman_activity(a_prime)\n            L_k = gaussian_lineshape(nu_probe, nu_k, gamma)\n            intensity_anti += S_k * L_k\n        \n        # 3. Calculate total intensity for the gauche conformer\n        intensity_gauche = 0.0\n        for nu_k, a_prime in gauche_modes:\n            S_k = calculate_raman_activity(a_prime)\n            L_k = gaussian_lineshape(nu_probe, nu_k, gamma)\n            intensity_gauche += S_k * L_k\n        \n        # 4. Calculate the final population-weighted intensity ratio\n        # I_total = p_anti * I_anti_sum + p_gauche * I_gauche_sum.\n        # Here we compare the two terms at nu_probe.\n        I_anti_at_probe = p_anti * intensity_anti\n        I_gauche_at_probe = p_gauche * intensity_gauche\n        \n        ratio = I_anti_at_probe / I_gauche_at_probe if I_gauche_at_probe != 0 else np.inf\n\n        # 5. Store results for this test case\n        results.append(p_anti)\n        results.append(ratio)\n\n    # --- Final Output ---\n    # Format the results to six decimal places and print in the required format.\n    print(f\"[{','.join(f'{x:.6f}' for x in results)}]\")\n\nsolve()\n```", "id": "2462310"}, {"introduction": "This exercise explores the core principle that a molecule's vibrational frequency is determined by the curvature of its potential energy surface. Using the Morse potential, a realistic model for a diatomic molecule's bond, you will calculate the harmonic vibrational wavenumber of $\\text{I}_2$. By investigating how hypothetical scalar relativistic corrections modify the Morse potential parameters, this practice provides hands-on experience in connecting fundamental potential parameters to spectroscopic observables and understanding their sensitivity to advanced electronic structure effects [@problem_id:2462305].", "problem": "You will write a complete program that models the influence of scalar relativistic effects on the vibrational wavenumber and Raman activity of the heavy homonuclear diatomic molecule iodine, denoted as $\\text{I}_2$. The program must derive the vibrational wavenumber in the harmonic limit from a Morse potential representation of the Born–Oppenheimer potential energy curve and estimate the change induced by scalar relativistic scaling of the Morse parameters. It must also estimate the relative change in the isotropic Raman activity using a linear polarizability model.\n\nStart from the following fundamental definitions and well-tested facts:\n- In the harmonic approximation, the angular frequency $\\omega$ of a normal mode is given by $\\omega = \\sqrt{k / \\mu}$, where $k = \\left. \\frac{d^2 V}{dr^2} \\right|_{r_e}$ is the curvature of the potential energy $V(r)$ at the equilibrium bond distance $r_e$, and $\\mu$ is the reduced mass of the diatomic molecule.\n- The Morse potential is $V(r) = D_e \\left( 1 - e^{-a(r - r_e)} \\right)^2$, with well depth $D_e$ and range parameter $a$.\n- The spectroscopic wavenumber $\\tilde{\\nu}$ in inverse centimeters is related to the angular frequency by $\\tilde{\\nu} = \\omega / (2 \\pi c)$, where $c$ is the speed of light. If $c$ is used in centimeters per second, then $\\tilde{\\nu}$ is in $\\mathrm{cm}^{-1}$.\n- The isotropic Raman activity for a fundamental vibrational transition scales with the square of the derivative of the isotropic polarizability $\\bar{\\alpha}$ with respect to the normal coordinate $Q$, that is, $S \\propto \\left( \\frac{d \\bar{\\alpha}}{d Q} \\right)^2$. For a diatomic molecule with a single stretching coordinate, a linear polarizability model is $\\bar{\\alpha}(r) = \\alpha_0 + \\alpha_1 (r - r_e)$, and the mass-weighted normal coordinate is $Q = \\sqrt{\\mu} (r - r_e)$.\n\nYour program must implement the following steps for each test case:\n1. Use the given nonrelativistic Morse parameters $D_e$ (in electronvolts) and $a$ (in inverse angstroms) to compute the harmonic wavenumber $\\tilde{\\nu}_{\\mathrm{NR}}$ in $\\mathrm{cm}^{-1}$. You must convert all quantities to International System of Units (SI) where needed and then return the wavenumber in $\\mathrm{cm}^{-1}$. Use $m_{\\mathrm{I}} = 126.90447$ unified atomic mass units for iodine, and the reduced mass $\\mu = m_{\\mathrm{I}} / 2$. Use 1 unified atomic mass unit $= 1.66053906660 \\times 10^{-27}$ kg, 1 electronvolt $= 1.602176634 \\times 10^{-19}$ J, $1 \\text{\\AA}^{-1} = 10^{10} \\mathrm{m}^{-1}$, and $c = 2.99792458 \\times 10^{10} \\mathrm{cm} \\cdot \\mathrm{s}^{-1}$.\n2. Model scalar relativistic effects as multiplicative fractional changes to the Morse parameters: $D_e \\mapsto D_e (1 + f_D)$ and $a \\mapsto a (1 + f_a)$, where $f_D$ and $f_a$ are provided dimensionless fractional changes (such as $0.03$ for a $3$ percent increase). Compute the corresponding relativistically corrected wavenumber $\\tilde{\\nu}_{\\mathrm{SR}}$ in $\\mathrm{cm}^{-1}$.\n3. Compute the wavenumber shift $\\Delta \\tilde{\\nu} = \\tilde{\\nu}_{\\mathrm{SR}} - \\tilde{\\nu}_{\\mathrm{NR}}$ in $\\mathrm{cm}^{-1}$.\n4. For Raman activity, assume the isotropic polarizability model $\\bar{\\alpha}(r) = \\alpha_0 + \\alpha_1 (r - r_e)$, with the provided $\\alpha_1$ in units of cubic angstrom per angstrom. Let the relativistic change be $\\alpha_1 \\mapsto \\alpha_1 (1 + f_\\alpha)$. Using the definition of the normal coordinate, derive $\\frac{d \\bar{\\alpha}}{d Q} = \\alpha_1 / \\sqrt{\\mu}$ up to a common unit conversion factor. Report the ratio of scalar relativistic to nonrelativistic isotropic Raman activity, $R_S = \\frac{S_{\\mathrm{SR}}}{S_{\\mathrm{NR}}}$, as a dimensionless decimal. Express $R_S$ numerically in decimal form rather than as a percentage.\n\nTest suite and required inputs for each case:\n- Case A (general): $D_e = 1.54$ electronvolts, $a = 1.50$ inverse angstroms, $f_D = 0.02$, $f_a = 0.03$, $\\alpha_1 = 1.00$ cubic angstrom per angstrom, $f_\\alpha = 0.05$.\n- Case B (boundary: no relativistic change): $D_e = 1.54$ electronvolts, $a = 1.50$ inverse angstroms, $f_D = 0.00$, $f_a = 0.00$, $\\alpha_1 = 1.00$ cubic angstrom per angstrom, $f_\\alpha = 0.00$.\n- Case C (stronger relativistic response and different baseline): $D_e = 1.80$ electronvolts, $a = 1.30$ inverse angstroms, $f_D = 0.05$, $f_a = 0.08$, $\\alpha_1 = 0.80$ cubic angstrom per angstrom, $f_\\alpha = 0.10$.\n\nYour program must:\n- Compute $\\Delta \\tilde{\\nu}$ in $\\mathrm{cm}^{-1}$ for each case and round it to six decimal places.\n- Compute the Raman activity ratio $R_S$ as a dimensionless decimal for each case and round it to six decimal places.\n- Produce a single line of output containing the results as a comma-separated list of sublists, each sublist containing $[\\Delta \\tilde{\\nu}, R_S]$ for a test case, all enclosed in square brackets. For example: $[[x_1,y_1],[x_2,y_2],[x_3,y_3]]$, where $x_i$ and $y_i$ are decimal numbers with six digits after the decimal point.\n\nScientific realism requirements:\n- Treat $\\text{I}_2$ as a rigid diatomic described by a Morse potential near the minimum.\n- Assume scalar relativistic effects act as small multiplicative changes to $D_e$ and $a$ as specified.\n- All constants and unit conversions must be applied consistently.\n\nAngle units are not used. All physical quantities that require units must be expressed as specified above. The final outputs are floats in the units or dimensionless form explicitly requested.", "solution": "The problem as stated is subjected to validation and is found to be scientifically grounded, well-posed, and objective. It presents a standard, albeit simplified, computational exercise in theoretical spectroscopy based on established physical models and principles. All necessary parameters and constants are provided, and the required calculations are logically sound and lead to a unique, verifiable solution. Therefore, we proceed with the derivation and computational implementation.\n\nThe objective is to compute the influence of scalar relativistic effects on the harmonic vibrational wavenumber and isotropic Raman activity of the $\\text{I}_2$ molecule. This will be accomplished by applying scaling factors to the parameters of a Morse potential and a linear polarizability model.\n\nFirst, we derive the expression for the harmonic vibrational wavenumber from the Morse potential, given as:\n$$V(r) = D_e \\left( 1 - e^{-a(r - r_e)} \\right)^2$$\nwhere $D_e$ is the potential well depth, $a$ is the range parameter, and $r_e$ is the equilibrium bond distance.\n\nThe harmonic approximation requires the force constant $k$, which is the second derivative of the potential energy with respect to the internuclear distance $r$, evaluated at the equilibrium position $r_e$.\nThe first derivative is:\n$$\\frac{dV}{dr} = D_e \\cdot 2 \\left( 1 - e^{-a(r - r_e)} \\right) \\cdot \\left( -e^{-a(r - r_e)} \\right) \\cdot (-a) = 2aD_e \\left( e^{-a(r - r_e)} - e^{-2a(r - r_e)} \\right)$$\nThe second derivative is:\n$$\\frac{d^2V}{dr^2} = 2aD_e \\left( -a e^{-a(r - r_e)} + 2a e^{-2a(r - r_e)} \\right)$$\nEvaluating at $r = r_e$:\n$$k = \\left. \\frac{d^2V}{dr^2} \\right|_{r=r_e} = 2aD_e (-a e^0 + 2a e^0) = 2a^2 D_e$$\nThe angular frequency $\\omega$ of the vibration is given by $\\omega = \\sqrt{k / \\mu}$, where $\\mu$ is the reduced mass of the molecule. Substituting the expression for $k$:\n$$\\omega = \\sqrt{\\frac{2a^2 D_e}{\\mu}} = a \\sqrt{\\frac{2D_e}{\\mu}}$$\nThe vibrational wavenumber $\\tilde{\\nu}$ (in $\\mathrm{cm}^{-1}$) is related to $\\omega$ by $\\tilde{\\nu} = \\omega / (2 \\pi c)$, where $c$ is the speed of light in $\\mathrm{cm}\\cdot\\mathrm{s}^{-1}$. The resulting expression for the wavenumber is:\n$$\\tilde{\\nu} = \\frac{a}{2 \\pi c} \\sqrt{\\frac{2D_e}{\\mu}}$$\nFor this calculation, all quantities must be in a consistent unit system. We will convert the given parameters to SI units for intermediate steps:\n- $D_e$ from electronvolts ($eV$) to Joules ($J$).\n- $a$ from inverse angstroms ($\\text{\\AA}^{-1}$) to inverse meters ($\\mathrm{m}^{-1}$).\n- The mass of iodine $m_{\\mathrm{I}}$ from unified atomic mass units ($u$) to kilograms ($kg$), from which the reduced mass $\\mu = m_{\\mathrm{I}}/2$ is found.\nThe speed of light $c$ is given in $\\mathrm{cm}\\cdot\\mathrm{s}^{-1}$, which is appropriate for obtaining the final wavenumber directly in $\\mathrm{cm}^{-1}$.\n\nThe non-relativistic wavenumber, $\\tilde{\\nu}_{\\mathrm{NR}}$, is computed using the base parameters $D_e$ and $a$. Scalar relativistic effects are modeled by scaling these parameters:\n$$D_e' = D_e (1 + f_D)$$\n$$a' = a (1 + f_a)$$\nThe scalar relativistic wavenumber, $\\tilde{\\nu}_{\\mathrm{SR}}$, is then computed using $D_e'$ and $a'$. From the structure of the wavenumber formula, we can write:\n$$\\tilde{\\nu}_{\\mathrm{SR}} = \\frac{a(1+f_a)}{2 \\pi c} \\sqrt{\\frac{2D_e(1+f_D)}{\\mu}} = \\left( \\frac{a}{2 \\pi c} \\sqrt{\\frac{2D_e}{\\mu}} \\right) (1+f_a)\\sqrt{1+f_D} = \\tilde{\\nu}_{\\mathrm{NR}} (1+f_a)\\sqrt{1+f_D}$$\nThe required wavenumber shift is $\\Delta \\tilde{\\nu} = \\tilde{\\nu}_{\\mathrm{SR}} - \\tilde{\\nu}_{\\mathrm{NR}}$.\n\nNext, we address the isotropic Raman activity, $S$. It is given to be proportional to the square of the derivative of the isotropic polarizability $\\bar{\\alpha}$ with respect to the normal coordinate $Q$:\n$$S \\propto \\left( \\frac{d \\bar{\\alpha}}{d Q} \\right)^2$$\nThe polarizability is modeled linearly as $\\bar{\\alpha}(r) = \\alpha_0 + \\alpha_1 (r - r_e)$, and the normal coordinate is $Q = \\sqrt{\\mu} (r - r_e)$. We can express $\\bar{\\alpha}$ as a function of $Q$ by noting that $(r - r_e) = Q / \\sqrt{\\mu}$. Substituting this gives:\n$$\\bar{\\alpha}(Q) = \\alpha_0 + \\alpha_1 \\left( \\frac{Q}{\\sqrt{\\mu}} \\right)$$\nThe derivative with respect to $Q$ is straightforward:\n$$\\frac{d \\bar{\\alpha}}{d Q} = \\frac{\\alpha_1}{\\sqrt{\\mu}}$$\nTherefore, the Raman activity is proportional to:\n$$S \\propto \\left(\\frac{\\alpha_1}{\\sqrt{\\mu}}\\right)^2 = \\frac{\\alpha_1^2}{\\mu}$$\nThe ratio of the scalar relativistic activity $S_{\\mathrm{SR}}$ to the non-relativistic activity $S_{\\mathrm{NR}}$ is required. Relativistic effects are modeled by scaling $\\alpha_1$ to $\\alpha_1' = \\alpha_1(1 + f_\\alpha)$. The reduced mass $\\mu$, a nuclear property, is unaffected by electronic relativistic corrections. Thus, we have:\n$$S_{\\mathrm{NR}} \\propto \\frac{\\alpha_1^2}{\\mu} \\quad \\text{and} \\quad S_{\\mathrm{SR}} \\propto \\frac{(\\alpha_1')^2}{\\mu} = \\frac{(\\alpha_1(1+f_\\alpha))^2}{\\mu}$$\nThe ratio $R_S$ is:\n$$R_S = \\frac{S_{\\mathrm{SR}}}{S_{\\mathrm{NR}}} = \\frac{\\alpha_1^2 (1+f_\\alpha)^2 / \\mu}{\\alpha_1^2 / \\mu} = (1+f_\\alpha)^2$$\nThis provides a direct formula for the change in Raman activity.\n\nThe computational procedure will involve implementing these derived formulas for each test case, performing unit conversions correctly, and formatting the output as specified.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes scalar relativistic effects on the vibrational wavenumber and Raman\n    activity of I2 based on a Morse potential and linear polarizability model.\n    \"\"\"\n\n    # --- Constants ---\n    # Mass of Iodine in unified atomic mass units (u)\n    M_I_U = 126.90447\n    # Conversion from u to kg\n    U_TO_KG = 1.66053906660e-27\n    # Conversion from electronvolt (eV) to Joules (J)\n    EV_TO_J = 1.602176634e-19\n    # Conversion from inverse Angstrom (A^-1) to inverse meter (m^-1)\n    INV_A_TO_INV_M = 1e10\n    # Speed of light in cm/s\n    C_CMS = 2.99792458e10\n\n    # Reduced mass of I2 molecule in kg\n    reduced_mass = (M_I_U / 2.0) * U_TO_KG\n\n    def calculate_wavenumber(De_eV, a_inv_A):\n        \"\"\"\n        Calculates the harmonic vibrational wavenumber from Morse parameters.\n\n        Args:\n            De_eV (float): Morse potential well depth in eV.\n            a_inv_A (float): Morse potential range parameter in A^-1.\n\n        Returns:\n            float: Vibrational wavenumber in cm^-1.\n        \"\"\"\n        # Convert parameters to SI units for angular frequency calculation\n        De_J = De_eV * EV_TO_J\n        a_inv_m = a_inv_A * INV_A_TO_INV_M\n        \n        # Angular frequency in rad/s: omega = a * sqrt(2*De / mu)\n        omega = a_inv_m * np.sqrt(2 * De_J / reduced_mass)\n        \n        # Wavenumber in cm^-1: nu_tilde = omega / (2 * pi * c)\n        wavenumber = omega / (2 * np.pi * C_CMS)\n        \n        return wavenumber\n\n    # Test cases: (De, a, fD, fa, alpha1, f_alpha)\n    test_cases = [\n        # Case A: General case\n        (1.54, 1.50, 0.02, 0.03, 1.00, 0.05),\n        # Case B: Boundary case (no relativistic effects)\n        (1.54, 1.50, 0.00, 0.00, 1.00, 0.00),\n        # Case C: Stronger relativistic response\n        (1.80, 1.30, 0.05, 0.08, 0.80, 0.10)\n    ]\n\n    results = []\n    for case in test_cases:\n        De, a, fD, fa, alpha1, f_alpha = case\n\n        # --- Wavenumber Calculation ---\n        # 1. Non-relativistic wavenumber\n        nu_NR = calculate_wavenumber(De, a)\n        \n        # 2. Relativistically corrected parameters\n        De_SR = De * (1 + fD)\n        a_SR = a * (1 + fa)\n        \n        # 3. Scalar relativistic wavenumber\n        nu_SR = calculate_wavenumber(De_SR, a_SR)\n        \n        # 4. Wavenumber shift\n        delta_nu = nu_SR - nu_NR\n        \n        # --- Raman Activity Ratio Calculation ---\n        # The ratio Rs simplifies to (1 + f_alpha)^2\n        Rs = (1 + f_alpha)**2\n        \n        # Store results rounded to six decimal places\n        results.append([round(delta_nu, 6), round(Rs, 6)])\n\n    # Format the final output string as [[x1,y1],[x2,y2],[x3,y3]]\n    output_str = \"[\" + \",\".join([f\"[{x:.6f},{y:.6f}]\" for x, y in results]) + \"]\"\n    print(output_str)\n\nsolve()\n```", "id": "2462299"}]}