{"hands_on_practices": [{"introduction": "The spin-spin coupling constant, $J$, is an intrinsic molecular property measured in Hertz (Hz) that is independent of the external magnetic field. However, NMR spectra are typically displayed on a chemical shift scale ($\\delta$) in parts per million ($ \\mathrm{ppm} $), which is field-dependent. This fundamental exercise bridges this gap, providing essential practice in converting between the absolute frequency domain of $J$ and the relative ppm scale used in spectral analysis [@problem_id:2005062]. Mastering this conversion is a crucial first step for accurately interpreting and comparing spectra recorded on different NMR spectrometers.", "problem": "In a Nuclear Magnetic Resonance (NMR) experiment, the spin-spin coupling between non-equivalent protons leads to the splitting of signals into multiplets. The separation between the peaks within a given multiplet is constant and is known as the coupling constant, $J$. This value is independent of the external magnetic field strength. Consider a sample analyzed in a high-field NMR spectrometer operating at a proton resonance frequency of $400$ MHz. A specific proton signal in the resulting spectrum is observed as a triplet. Further analysis reveals that the coupling constant, $J$, responsible for this splitting is $7.1$ Hz. Calculate the separation between any two adjacent peaks within this triplet signal. Express your answer in units of parts per million (ppm), and round your final answer to three significant figures.", "solution": "In first-order proton NMR, the separation between adjacent lines of a multiplet in frequency units is equal to the coupling constant, so the line-to-line separation in hertz is $\\Delta \\nu = J$.\n\nTo express this separation on the chemical shift scale (ppm), use the definition of chemical shift:\n$$\n\\Delta \\delta \\, (\\text{ppm}) = \\frac{\\Delta \\nu \\, (\\text{Hz})}{\\nu_{0} \\, (\\text{Hz})} \\times 10^{6},\n$$\nwhere $\\nu_{0}$ is the spectrometer frequency. Here, $\\nu_{0} = 400 \\times 10^{6} \\text{ Hz}$ and $J = 7.1 \\text{ Hz}$, so\n$$\n\\Delta \\delta = \\frac{7.1}{400 \\times 10^{6}} \\times 10^{6} = \\frac{7.1}{400} = 0.01775 \\text{ ppm}.\n$$\nRounding to three significant figures gives\n$$\n0.0178 \\text{ ppm}.\n$$\nThus, the separation between any two adjacent peaks within the triplet is $0.0178$ ppm.", "answer": "$$\\boxed{0.0178}$$", "id": "2005062"}, {"introduction": "The familiar $n+1$ splitting rule is a powerful tool for interpreting simple spectra, but it is an approximation that often breaks down. This practice explores the critical conditions that determine whether a spectrum is \"first-order\" (obeying the $n+1$ rule) or \"second-order\" (displaying more complex patterns). By examining the ratio of the chemical shift separation in Hertz ($\\Delta\\nu$) to the coupling constant ($J$), you will develop a deeper, more realistic understanding of how spin systems behave and why higher-field spectrometers can simplify complex spectra [@problem_id:2192072].", "problem": "In a Nuclear Magnetic Resonance (NMR) spectroscopy experiment, a molecule containing two chemically distinct, mutually coupled vicinal protons, labeled $H_A$ and $H_B$, is analyzed. The scalar coupling constant between these protons, $J_{AB}$, is known to be 7.0 Hz. The spectrum is recorded on a spectrometer operating at a proton resonance frequency of 100 MHz. The chemical shifts for the protons are observed at $\\delta_A = 1.20$ ppm and $\\delta_B = 1.34$ ppm.\n\nWhich of the following descriptions best characterizes the signals observed for protons $H_A$ and $H_B$ in the resulting $^1$H NMR spectrum?\n\nA. The signals will merge into a complex multiplet where the simple n+1 splitting rule does not accurately predict the pattern, and the lines closer to the center of the multiplet are more intense than the lines at the edges.\n\nB. The signal for $H_A$ will be a simple doublet, and the signal for $H_B$ will also be a simple doublet, with the two peaks within each doublet having equal intensity.\n\nC. The protons $H_A$ and $H_B$ are chemically equivalent under these conditions and will appear as a single sharp singlet.\n\nD. The signal for $H_A$ will be a triplet because it is coupled to $H_B$, which is adjacent to one other proton.\n\nE. The effective coupling constant will be significantly reduced at this low spectrometer frequency, causing the signals to appear as two broad singlets.", "solution": "We consider two vicinal, mutually coupled protons $H_A$ and $H_B$ with a scalar coupling constant $J_{AB}$ and chemical shifts $\\delta_A$ and $\\delta_B$ recorded at a spectrometer frequency $\\nu_0$ (for protons). The key diagnostic for whether the spectrum is first-order (simple doublets) or second-order (AB pattern) is the ratio of the resonance frequency separation in Hz to the coupling constant:\n$$\n\\Delta\\nu = \\nu_0 \\times \\frac{|\\delta_B - \\delta_A|}{10^6}, \\qquad r = \\frac{\\Delta\\nu}{J_{AB}}.\n$$\nGiven $\\delta_A = 1.20 \\text{ ppm}$ and $\\delta_B = 1.34 \\text{ ppm}$, the chemical shift difference is\n$$\n\\Delta\\delta = |\\delta_B - \\delta_A| = 0.14 \\text{ ppm}.\n$$\nWith $\\nu_0 = 1.0 \\times 10^8 \\text{ Hz}$ (100 MHz), the frequency separation in Hz is\n$$\n\\Delta\\nu = \\nu_0 \\times \\frac{\\Delta\\delta}{10^6} = (1.0 \\times 10^8) \\times \\frac{0.14}{10^6} = 14 \\text{ Hz}.\n$$\nUsing $J_{AB} = 7.0 \\text{ Hz}$, the ratio is\n$$\nr = \\frac{\\Delta\\nu}{J_{AB}} = \\frac{14}{7} = 2.\n$$\nFirst-order splitting (simple $n+1$ rule with equal-intensity doublets for each proton) requires $r \\gg 1$ (commonly $r \\gtrsim 10$). Here $r=2$, which falls in the second-order regime for two coupled, non-equivalent protons, yielding an AB pattern. In an AB pattern, the simple $n+1$ rule does not accurately describe the multiplicity, and the line intensities are uneven, with the lines closer to the center (between the two chemical shifts) being more intense than the outer lines (the characteristic \"roofing\" effect).\n\nTherefore, the best description is that the signals merge into a complex multiplet where first-order rules fail, and the inner lines are more intense than the edges, which corresponds to option A.\n\nFor completeness, the other options are inconsistent: B assumes first-order (equal-intensity doublets), which requires $r \\gg 1$; C contradicts the distinct chemical shifts; D misapplies the $n+1$ rule to a two-spin system; E is incorrect because $J$ does not depend on field and a lower field does not reduce $J$ nor convert the pattern into broad singlets.", "answer": "$$\\boxed{A}$$", "id": "2192072"}, {"introduction": "Moving from spectral interpretation to prediction, this practice delves into the quantum mechanical origins of $J$-coupling. You will employ the Hückel molecular orbital (HMO) model, a cornerstone of theoretical organic chemistry, to compute a long-range coupling constant from first principles [@problem_id:2459378]. This exercise illuminates how NMR observables are directly linked to the underlying electronic structure by calculating how molecular orbitals and their energy differences mediate the spin-spin interaction, a foundational concept in computational chemistry.", "problem": "You are given a simplified, first-principles model for predicting a long-range nuclear magnetic resonance (NMR) spin-spin coupling constant between two nuclei in a conjugated system by analyzing molecular orbitals. The electronic structure is modeled by the Hückel Hamiltonian on a set of localized atomic orbitals, with one electron per site and a closed-shell ground state. Let the number of sites be $N$, and let the adjacency matrix be $A \\in \\{0,1\\}^{N \\times N}$ with $A_{ij} = 1$ if sites $i$ and $j$ are bonded and $A_{ij} = 0$ otherwise. The Hückel Hamiltonian $H \\in \\mathbb{R}^{N \\times N}$ is defined by\n$$\nH_{ij} =\n\\begin{cases}\n\\alpha, & i=j,\\\\\n\\beta, & A_{ij}=1,\\\\\n0, & \\text{otherwise}.\n\\end{cases}\n$$\nAssume zero overlap between distinct atomic orbitals (orthonormal basis). The molecular orbitals are obtained from the eigenvalue problem $H \\mathbf{c}^{(k)} = \\varepsilon_k \\mathbf{c}^{(k)}$, with eigenvalues sorted in ascending order $\\varepsilon_1 \\le \\varepsilon_2 \\le \\cdots \\le \\varepsilon_N$ and orthonormal eigenvectors $\\mathbf{c}^{(k)} = (c_{1k}, \\dots, c_{Nk})^\\top$. With $N$ $\\pi$-electrons and a closed-shell configuration, the lowest $N/2$ orbitals are doubly occupied.\n\nDefine a Fermi-contact-like long-range spin-spin coupling constant between nuclei anchored at sites $X$ and $Y$ by the second-order perturbation expression\n$$\nJ_{XY} = K \\sum_{a=1}^{N/2} \\sum_{r=N/2+1}^{N} \\frac{c_{Xa} \\, c_{Xr} \\, c_{Yr} \\, c_{Ya}}{\\varepsilon_r - \\varepsilon_a},\n$$\nwhere $K$ is a scaling constant with units of hertz (Hz), $a$ runs over occupied molecular orbitals, and $r$ runs over virtual molecular orbitals. Here, $c_{Xi}$ denotes the coefficient of molecular orbital $i$ on site $X$.\n\nFor each test case below, compute $J_{XY}$ in hertz and identify the dominant orbital-mediation pathway by selecting the ordered pair $(a^\\star, r^\\star)$ that maximizes the absolute magnitude of the single-term contribution\n$$\nT_{ar} = \\frac{c_{Xa} \\, c_{Xr} \\, c_{Yr} \\, c_{Ya}}{\\varepsilon_r - \\varepsilon_a}.\n$$\nReport one-based indices for $a^\\star$ and $r^\\star$ with respect to the energy-sorted orbital list.\n\nExpress $J_{XY}$ in Hz, rounded to six decimal places. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case’s result must be the three-element list $[J_{XY}, a^\\star, r^\\star]$, so the final output must be a single line of the form\n$[[J_1,a^\\star_1,r^\\star_1],[J_2,a^\\star_2,r^\\star_2],\\dots]$\nwith no additional text.\n\nUse the following test suite. All cases use $\\alpha = 0$ and $\\beta = -1$ (arbitrary consistent energy units), and $K = 1000$ Hz. Indices $X$ and $Y$ are one-based site indices.\n\n- Case 1 (conjugated chain, long-range $X$ to $Y$ over three bonds): $N=4$, $X=1$, $Y=4$, with\n$$\nA = \\begin{pmatrix}\n0 & 1 & 0 & 0\\\\\n1 & 0 & 1 & 0\\\\\n0 & 1 & 0 & 1\\\\\n0 & 0 & 1 & 0\n\\end{pmatrix}.\n$$\n\n- Case 2 (disconnected fragments, edge case expecting zero coupling): $N=4$, $X=1$, $Y=4$, with\n$$\nA = \\begin{pmatrix}\n0 & 1 & 0 & 0\\\\\n1 & 0 & 0 & 0\\\\\n0 & 0 & 0 & 1\\\\\n0 & 0 & 1 & 0\n\\end{pmatrix}.\n$$\n\n- Case 3 (benzene ring, para coupling): $N=6$, $X=1$, $Y=4$, with\n$$\nA = \\begin{pmatrix}\n0 & 1 & 0 & 0 & 0 & 1\\\\\n1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 0 & 1 & 0 & 0\\\\\n0 & 0 & 1 & 0 & 1 & 0\\\\\n0 & 0 & 0 & 1 & 0 & 1\\\\\n1 & 0 & 0 & 0 & 1 & 0\n\\end{pmatrix}.\n$$\n\n- Case 4 (linear hexatriene, long-range $X$ to $Y$ over five bonds): $N=6$, $X=1$, $Y=6$, with\n$$\nA = \\begin{pmatrix}\n0 & 1 & 0 & 0 & 0 & 0\\\\\n1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 0 & 1 & 0 & 0\\\\\n0 & 0 & 1 & 0 & 1 & 0\\\\\n0 & 0 & 0 & 1 & 0 & 1\\\\\n0 & 0 & 0 & 0 & 1 & 0\n\\end{pmatrix}.\n$$\n\nDesign for coverage:\n- Case $1$ is a standard conjugated \"happy path\".\n- Case $2$ is a disconnected boundary case that should yield $J_{XY} = 0$ after rounding.\n- Case $3$ probes a degenerate ring system.\n- Case $4$ probes a longer linear path increasing the bond distance between $X$ and $Y$.\n\nYour program must compute the results for all four cases and print a single line in the exact format\n$[[J_1,a^\\star_1,r^\\star_1],[J_2,a^\\star_2,r^\\star_2],[J_3,a^\\star_3,r^\\star_3],[J_4,a^\\star_4,r^\\star_4]]$,\nwith each $J_i$ rounded to six decimal places in Hz.", "solution": "The problem statement is a valid, well-posed computational exercise in quantum chemistry. It asks for the calculation of a nuclear magnetic resonance (NMR) spin-spin coupling constant, $J_{XY}$, based on a simplified model derived from Hückel Molecular Orbital (HMO) theory and second-order perturbation theory. All parameters and definitions required for the calculation are provided, and the problem is scientifically grounded within the context of this model.\n\nThe calculation proceeds as follows:\n\nFirst, we construct the Hückel Hamiltonian matrix, $H$, for an $N$-site system. Given the adjacency matrix $A$ and the parameters $\\alpha=0$ and $\\beta=-1$, the Hamiltonian is defined element-wise as\n$$\nH_{ij} =\n\\begin{cases}\n0, & i=j,\\\\\n-1, & A_{ij}=1,\\\\\n0, & \\text{otherwise}.\n\\end{cases}\n$$\nThis is equivalent to the matrix expression $H = \\beta A = -A$, since $A$ has zeros on its diagonal.\n\nSecond, we solve the secular equation, which is the eigenvalue problem for the Hamiltonian matrix:\n$$\nH \\mathbf{c}^{(k)} = \\varepsilon_k \\mathbf{c}^{(k)}\n$$\nSolving this for the symmetric matrix $H$ yields a set of $N$ real eigenvalues $\\{\\varepsilon_k\\}_{k=1}^N$, which represent the molecular orbital energies, and a corresponding set of $N$ orthonormal eigenvectors $\\{\\mathbf{c}^{(k)}\\}_{k=1}^N$. The eigenvectors form the columns of a matrix $C$, where $C_{ik} = c_{ik}$ is the coefficient of the $i$-th atomic orbital in the $k$-th molecular orbital. The eigenvalues are sorted in ascending order, $\\varepsilon_1 \\le \\varepsilon_2 \\le \\cdots \\le \\varepsilon_N$, and the eigenvectors are ordered accordingly.\n\nThird, for a neutral system with one $\\pi$-electron per site, the $N$ electrons occupy the molecular orbitals in accordance with the Aufbau principle. For a closed-shell electronic ground state, the $N/2$ orbitals with the lowest energies are doubly occupied. Thus, orbitals indexed by $a \\in \\{1, 2, \\dots, N/2\\}$ are the occupied molecular orbitals (OMOs), and orbitals indexed by $r \\in \\{N/2+1, \\dots, N\\}$ are the virtual (unoccupied) molecular orbitals (VMOs).\n\nFourth, we compute the spin-spin coupling constant $J_{XY}$ between sites $X$ and $Y$ using the provided sum-over-states formula, which is a second-order perturbation theory expression:\n$$\nJ_{XY} = K \\sum_{a=1}^{N/2} \\sum_{r=N/2+1}^{N} T_{ar}\n$$\nwhere $K$ is a given scaling constant ($K = 1000$ Hz) and $T_{ar}$ is the contribution from the electronic excitation from occupied orbital $a$ to virtual orbital $r$:\n$$\nT_{ar} = \\frac{c_{Xa} \\, c_{Xr} \\, c_{Yr} \\, c_{Ya}}{\\varepsilon_r - \\varepsilon_a}\n$$\nThe coefficients $c_{Pi}$ correspond to the elements of the eigenvector matrix $C$. Specifically, for site $P$ (1-based index) and orbital $i$ (1-based index), the coefficient is $C_{P-1, i-1}$ in 0-based matrix notation. This summation is performed over all pairs of occupied and virtual orbitals.\n\nFinally, during the summation, we track the individual terms $T_{ar}$ to identify the dominant orbital-mediation pathway. This is the pair of indices $(a^\\star, r^\\star)$ for which the absolute value of the contribution, $|T_{ar}|$, is maximal.\n\nFor each test case, we apply this procedure to the specified adjacency matrix $A$ and sites $X$ and $Y$. The final computed value of $J_{XY}$ is rounded to six decimal places, and the result is reported as a list $[J_{XY}, a^\\star, r^\\star]$. If there is degeneracy in the molecular orbital energies, the eigenvectors for the degenerate subspace are not unique but form an orthonormal basis. The total coupling constant $J_{XY}$ is invariant to the specific choice of this basis. However, the individual contributions $T_{ar}$ and thus the dominant pathway $(a^\\star, r^\\star)$ may depend on the basis chosen by the numerical eigensolver. The procedure is to use the basis provided by the specified numerical library (`numpy.linalg.eigh`) and report the resulting dominant pathway.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the NMR coupling constant problem for all specified test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            'name': 'Case 1: Butadiene (4-chain)',\n            'N': 4,\n            'X': 1,\n            'Y': 4,\n            'A': np.array([\n                [0, 1, 0, 0],\n                [1, 0, 1, 0],\n                [0, 1, 0, 1],\n                [0, 0, 1, 0]\n            ])\n        },\n        {\n            'name': 'Case 2: Disconnected ethylene dimers',\n            'N': 4,\n            'X': 1,\n            'Y': 4,\n            'A': np.array([\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0]\n            ])\n        },\n        {\n            'name': 'Case 3: Benzene (para coupling)',\n            'N': 6,\n            'X': 1,\n            'Y': 4,\n            'A': np.array([\n                [0, 1, 0, 0, 0, 1],\n                [1, 0, 1, 0, 0, 0],\n                [0, 1, 0, 1, 0, 0],\n                [0, 0, 1, 0, 1, 0],\n                [0, 0, 0, 1, 0, 1],\n                [1, 0, 0, 0, 1, 0]\n            ])\n        },\n        {\n            'name': 'Case 4: Hexatriene (6-chain)',\n            'N': 6,\n            'X': 1,\n            'Y': 6,\n            'A': np.array([\n                [0, 1, 0, 0, 0, 0],\n                [1, 0, 1, 0, 0, 0],\n                [0, 1, 0, 1, 0, 0],\n                [0, 0, 1, 0, 1, 0],\n                [0, 0, 0, 1, 0, 1],\n                [0, 0, 0, 0, 1, 0]\n            ])\n        }\n    ]\n\n    # Global parameters from the problem\n    alpha = 0.0\n    beta = -1.0\n    K = 1000.0  # Hz\n\n    all_results = []\n\n    for case in test_cases:\n        N = case['N']\n        A = case['A']\n        X = case['X']\n        Y = case['Y']\n\n        # Construct the Hückel Hamiltonian H = alpha*I + beta*A\n        # With alpha=0 and beta=-1, H = -A\n        H = beta * A\n\n        # Solve the eigenvalue problem: Hc = ec\n        # np.linalg.eigh returns eigenvalues in ascending order and corresponding\n        # eigenvectors as columns of the returned matrix.\n        energies, coeffs = np.linalg.eigh(H)\n\n        num_occ = N // 2\n        \n        # Site indices are 1-based, convert to 0-based for array access\n        X_idx = X - 1\n        Y_idx = Y - 1\n\n        total_sum_term = 0.0\n        max_abs_T = -1.0\n        dominant_pathway = (None, None)\n\n        # Sum over occupied (a) and virtual (r) orbitals\n        # a runs from 1 to N/2, r runs from N/2+1 to N\n        for a_idx in range(num_occ):\n            a = a_idx + 1\n            for r_idx in range(num_occ, N):\n                r = r_idx + 1\n\n                eps_a = energies[a_idx]\n                eps_r = energies[r_idx]\n\n                c_Xa = coeffs[X_idx, a_idx]\n                c_Xr = coeffs[X_idx, r_idx]\n                c_Ya = coeffs[Y_idx, a_idx]\n                c_Yr = coeffs[Y_idx, r_idx]\n                \n                numerator = c_Xa * c_Xr * c_Ya * c_Yr\n                denominator = eps_r - eps_a\n                \n                # The denominator should not be zero for the given cases.\n                T_ar = numerator / denominator if denominator != 0 else 0.0\n\n                total_sum_term += T_ar\n                \n                # Update dominant pathway if this term's contribution is largest in magnitude\n                if abs(T_ar) > max_abs_T:\n                    max_abs_T = abs(T_ar)\n                    dominant_pathway = (a, r)\n        \n        # If all terms are zero, max_abs_T remains at its initial negative value.\n        # In this scenario, we pick the first possible pathway as the \"dominant\" one.\n        if dominant_pathway[0] is None:\n            dominant_pathway = (1, num_occ + 1)\n            \n        J_XY = K * total_sum_term\n\n        # Round J_XY to six decimal places, as per the problem.\n        J_XY_rounded = round(J_XY, 6)\n\n        result = [J_XY_rounded, dominant_pathway[0], dominant_pathway[1]]\n        all_results.append(result)\n\n    # Format the final output string exactly as specified\n    formatted_results = []\n    for res in all_results:\n        # Format J_XY to ensure .0 is printed for integer values\n        j_val_str = f\"{res[0]:.6f}\".rstrip('0').rstrip('.') if '.' in f\"{res[0]:.6f}\" else str(res[0])\n        if j_val_str == \"-0\": j_val_str = \"0.0\" # handle -0.0 case\n        if float(j_val_str) == 0: j_val_str = \"0.0\"\n        \n        # The problem statement's rounding might lead to a simple float representation\n        # which can have fewer than 6 decimal places. We use direct string conversion\n        # of the rounded float as it's the most natural interpretation of the prompt.\n        \n        formatted_results.append(f\"[{res[0]},{res[1]},{res[2]}]\")\n\n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    print(final_output_string.replace(\" \", \"\"))\n\nsolve()\n\n```", "id": "2459378"}]}