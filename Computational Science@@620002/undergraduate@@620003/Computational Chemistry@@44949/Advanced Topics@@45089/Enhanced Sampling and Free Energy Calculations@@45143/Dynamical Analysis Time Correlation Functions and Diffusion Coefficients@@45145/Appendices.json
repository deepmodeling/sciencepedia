{"hands_on_practices": [{"introduction": "Before diving into complex calculations, a crucial first step in any dynamical analysis is to ensure the integrity of the raw simulation data. This exercise [@problem_id:2454535] presents a thought experiment on a common artifact in molecular dynamics: a net drift of the system's center of mass. By considering how this unphysical motion affects particle velocities and positions, you will gain a deeper appreciation for why removing such artifacts is not just a technicality but a fundamental requirement for obtaining meaningful physical properties like the diffusion coefficient.", "problem": "A Molecular Dynamics (MD) trajectory of a simple fluid was generated under periodic boundary conditions at temperature $T$. Due to an initialization mistake, the system carries a constant nonzero net linear momentum, so that the center-of-mass (COM) moves with a uniform drift velocity $\\mathbf{v}_{\\mathrm{drift}}\\neq \\mathbf{0}$ throughout the run. A student analyzes the trajectory without removing the COM motion, computing the single-particle velocity autocorrelation function (VACF), defined as $C_{vv}(t)=\\frac{1}{3N}\\sum_{i=1}^{N}\\langle \\mathbf{v}_{i}(t)\\cdot \\mathbf{v}_{i}(0)\\rangle$, and estimating the self-diffusion coefficient $D$ in two standard ways: (i) via the Green–Kubo time integral of $C_{vv}(t)$, and (ii) via the Einstein mean-squared displacement (MSD) relation $D=\\lim_{t\\to\\infty}\\frac{1}{6t}\\langle|\\mathbf{r}_{i}(t)-\\mathbf{r}_{i}(0)|^{2}\\rangle$. Which of the following best describes what happens to the VACF at long times and to the calculated $D$ from each route when the COM drift is not removed?\n\nA. $C_{vv}(t)$ decays to zero as $t\\to\\infty$ as in equilibrium; both the Green–Kubo and Einstein estimates of $D$ are unaffected.\n\nB. $C_{vv}(t)$ approaches a positive constant $|\\mathbf{v}_{\\mathrm{drift}}|^{2}$ at long times; the Green–Kubo time integral diverges so any finite-time estimate of $D$ grows linearly with the integration limit, and the Einstein estimate exhibits an MSD with a quadratic-in-$t$ term, causing $\\langle|\\mathbf{r}_{i}(t)-\\mathbf{r}_{i}(0)|^{2}\\rangle/(6t)$ to increase without bound (no long-time plateau) unless the drift is removed.\n\nC. $C_{vv}(t)$ becomes negative at long times due to enhanced hydrodynamic backflow from the drift; both routes underestimate $D$ relative to the true value.\n\nD. $C_{vv}(t)$ is shifted upward by a constant, but the Green–Kubo integral remains finite because the mean speed is constant; the Einstein estimate is unaffected since it depends only on displacements, not velocities.", "solution": "The problem statement is first subjected to validation.\n\n### Step 1: Extract Givens\n-   System: A Molecular Dynamics (MD) trajectory of a simple fluid.\n-   Simulation conditions: Periodic boundary conditions, constant temperature $T$.\n-   System artifact: A constant nonzero net linear momentum, leading to a uniform center-of-mass (COM) drift velocity $\\mathbf{v}_{\\mathrm{drift}}\\neq \\mathbf{0}$.\n-   Analysis procedure: The trajectory is analyzed without removing the COM motion.\n-   Quantity 1: Single-particle velocity autocorrelation function (VACF), defined as $C_{vv}(t)=\\frac{1}{3N}\\sum_{i=1}^{N}\\langle \\mathbf{v}_{i}(t)\\cdot \\mathbf{v}_{i}(0)\\rangle$.\n-   Quantity 2: Self-diffusion coefficient $D$ via the Green–Kubo relation, $D = \\int_0^\\infty C_{vv}(t) dt$.\n-   Quantity 3: Self-diffusion coefficient $D$ via the Einstein relation, $D=\\lim_{t\\to\\infty}\\frac{1}{6t}\\langle|\\mathbf{r}_{i}(t)-\\mathbf{r}_{i}(0)|^{2}\\rangle$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem statement describes a standard and realistic scenario in computational chemistry and physics. The presence of a net COM drift is a common artifact in MD simulations that are not correctly initialized or thermostatted. The analysis methods described—VACF, Green-Kubo, and Einstein relations—are fundamental techniques for calculating transport coefficients from trajectories. The definitions provided are self-contained and mathematically clear, even if the normalization conventions might differ slightly from some textbooks. The problem is scientifically grounded, well-posed, and objective. It poses a clear question about the consequences of a specific, well-defined error on standard analysis metrics.\n\n### Step 3: Verdict and Action\nThe problem is valid. We will proceed to derive the solution.\n\n### Principle-Based Derivation\nThe core of the problem is to understand how the laboratory-frame particle velocities $\\mathbf{v}_i(t)$ and positions $\\mathbf{r}_i(t)$ are related to their counterparts in the COM reference frame, which is the frame where the total momentum is zero and true diffusive properties are defined.\n\nLet $\\mathbf{v}'_i(t)$ be the velocity of particle $i$ in the COM frame. The laboratory-frame velocity is then given by a simple Galilean transformation:\n$$ \\mathbf{v}_i(t) = \\mathbf{v}'_i(t) + \\mathbf{v}_{\\mathrm{drift}} $$\nwhere $\\mathbf{v}_{\\mathrm{drift}}$ is the constant COM velocity. The velocities $\\mathbf{v}'_i(t)$ represent the thermal motion of the particles. By definition of the COM frame, their average over all particles is zero: $\\frac{1}{N}\\sum_{i=1}^N \\mathbf{v}'_i(t) = \\mathbf{0}$. Furthermore, for a system at equilibrium in the COM frame, the ensemble average of a single particle's thermal velocity is zero: $\\langle \\mathbf{v}'_i(t) \\rangle = \\mathbf{0}$.\n\n#### Analysis of the Velocity Autocorrelation Function ($C_{vv}(t)$)\nWe substitute the expression for $\\mathbf{v}_i(t)$ into the definition of $C_{vv}(t)$:\n$$ C_{vv}(t) = \\frac{1}{3N}\\sum_{i=1}^{N}\\langle (\\mathbf{v}'_{i}(t) + \\mathbf{v}_{\\mathrm{drift}})\\cdot (\\mathbf{v}'_{i}(0) + \\mathbf{v}_{\\mathrm{drift}})\\rangle $$\nExpanding the dot product and using the linearity of the ensemble average $\\langle \\cdot \\rangle$:\n$$ C_{vv}(t) = \\frac{1}{3N}\\sum_{i=1}^{N} \\left( \\langle \\mathbf{v}'_{i}(t) \\cdot \\mathbf{v}'_{i}(0) \\rangle + \\langle \\mathbf{v}'_{i}(t) \\cdot \\mathbf{v}_{\\mathrm{drift}} \\rangle + \\langle \\mathbf{v}_{\\mathrm{drift}} \\cdot \\mathbf{v}'_{i}(0) \\rangle + \\langle \\mathbf{v}_{\\mathrm{drift}} \\cdot \\mathbf{v}_{\\mathrm{drift}} \\rangle \\right) $$\nLet's analyze the four terms in the sum:\n1.  $\\langle \\mathbf{v}'_{i}(t) \\cdot \\mathbf{v}'_{i}(0) \\rangle$: This is the VACF in the COM frame. For a fluid, thermal velocities decorrelate over time, so this term tends to $0$ as $t \\to \\infty$.\n2.  $\\langle \\mathbf{v}'_{i}(t) \\cdot \\mathbf{v}_{\\mathrm{drift}} \\rangle = \\langle \\mathbf{v}'_{i}(t) \\rangle \\cdot \\mathbf{v}_{\\mathrm{drift}} = \\mathbf{0} \\cdot \\mathbf{v}_{\\mathrm{drift}} = 0$, because the average thermal velocity is zero.\n3.  $\\langle \\mathbf{v}_{\\mathrm{drift}} \\cdot \\mathbf{v}'_{i}(0) \\rangle = \\mathbf{v}_{\\mathrm{drift}} \\cdot \\langle \\mathbf{v}'_{i}(0) \\rangle = \\mathbf{v}_{\\mathrm{drift}} \\cdot \\mathbf{0} = 0$.\n4.  $\\langle \\mathbf{v}_{\\mathrm{drift}} \\cdot \\mathbf{v}_{\\mathrm{drift}} \\rangle = \\langle |\\mathbf{v}_{\\mathrm{drift}}|^2 \\rangle = |\\mathbf{v}_{\\mathrm{drift}}|^2$, since $\\mathbf{v}_{\\mathrm{drift}}$ is a constant.\n\nSubstituting these back into the expression for $C_{vv}(t)$:\n$$ C_{vv}(t) = \\frac{1}{3N}\\sum_{i=1}^{N} \\langle \\mathbf{v}'_{i}(t) \\cdot \\mathbf{v}'_{i}(0) \\rangle + \\frac{1}{3N}\\sum_{i=1}^{N} |\\mathbf{v}_{\\mathrm{drift}}|^2 $$\nThe first part is the true VACF, $C'_{vv}(t)$. The second part simplifies to $\\frac{1}{3N} (N |\\mathbf{v}_{\\mathrm{drift}}|^2) = \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2$.\nSo, the measured VACF is:\n$$ C_{vv}(t) = C'_{vv}(t) + \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 $$\nAs $t \\to \\infty$, $C'_{vv}(t) \\to 0$. Therefore, the measured VACF approaches a non-zero positive constant:\n$$ \\lim_{t\\to\\infty} C_{vv}(t) = \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 $$\n\n#### Analysis of the Green-Kubo Estimate for $D$\nThe diffusion coefficient is calculated by integrating $C_{vv}(t)$. Using the result above:\n$$ D_{\\mathrm{GK}} = \\int_0^\\infty C_{vv}(t) dt = \\int_0^\\infty \\left( C'_{vv}(t) + \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 \\right) dt $$\n$$ D_{\\mathrm{GK}} = \\int_0^\\infty C'_{vv}(t) dt + \\int_0^\\infty \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 dt $$\nThe first integral is the true diffusion coefficient, $D_{\\text{true}}$. The second integral diverges because the integrand is a positive constant:\n$$ \\int_0^\\infty \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 dt \\to \\infty $$\nIn any practical calculation where the integral is truncated at a finite time $t_{\\mathrm{max}}$, the estimate for $D$ will be approximately $D_{\\text{true}} + \\frac{1}{3} |\\mathbf{v}_{\\mathrm{drift}}|^2 t_{\\mathrm{max}}$. This shows that the calculated value of $D$ will grow linearly with the integration time and will not converge.\n\n#### Analysis of the Einstein Estimate for $D$\nThe displacement of particle $i$ from time $0$ to $t$ is $\\Delta \\mathbf{r}_i(t) = \\mathbf{r}_i(t) - \\mathbf{r}_i(0)$. It can be found by integrating the velocity:\n$$ \\Delta \\mathbf{r}_i(t) = \\int_0^t \\mathbf{v}_i(\\tau) d\\tau = \\int_0^t (\\mathbf{v}'_i(\\tau) + \\mathbf{v}_{\\mathrm{drift}}) d\\tau = \\int_0^t \\mathbf{v}'_i(\\tau) d\\tau + \\int_0^t \\mathbf{v}_{\\mathrm{drift}} d\\tau $$\nThis gives $\\Delta \\mathbf{r}_i(t) = \\Delta \\mathbf{r}'_i(t) + t \\mathbf{v}_{\\mathrm{drift}}$, where $\\Delta \\mathbf{r}'_i(t)$ is the displacement in the COM frame.\nNow we compute the mean-squared displacement (MSD):\n$$ \\langle |\\Delta \\mathbf{r}_i(t)|^2 \\rangle = \\langle |\\Delta \\mathbf{r}'_i(t) + t \\mathbf{v}_{\\mathrm{drift}}|^2 \\rangle = \\langle (\\Delta \\mathbf{r}'_i(t) + t \\mathbf{v}_{\\mathrm{drift}}) \\cdot (\\Delta \\mathbf{r}'_i(t) + t \\mathbf{v}_{\\mathrm{drift}}) \\rangle $$\nExpanding the dot product:\n$$ \\langle |\\Delta \\mathbf{r}'_i(t)|^2 + 2t (\\Delta \\mathbf{r}'_i(t) \\cdot \\mathbf{v}_{\\mathrm{drift}}) + t^2 |\\mathbf{v}_{\\mathrm{drift}}|^2 \\rangle $$\n$$ = \\langle |\\Delta \\mathbf{r}'_i(t)|^2 \\rangle + 2t \\langle \\Delta \\mathbf{r}'_i(t) \\rangle \\cdot \\mathbf{v}_{\\mathrm{drift}} + t^2 |\\mathbf{v}_{\\mathrm{drift}}|^2 $$\nThe first term is the true MSD, which for long times is $\\langle |\\Delta \\mathbf{r}'_i(t)|^2 \\rangle \\approx 6 D_{\\text{true}} t$. The second term vanishes because the average displacement of a particle in the COM frame is zero, $\\langle \\Delta \\mathbf{r}'_i(t) \\rangle = \\mathbf{0}$, due to symmetry.\nThus, the measured MSD for large $t$ is:\n$$ \\mathrm{MSD}(t) = \\langle |\\Delta \\mathbf{r}_i(t)|^2 \\rangle \\approx 6 D_{\\text{true}} t + t^2 |\\mathbf{v}_{\\mathrm{drift}}|^2 $$\nThe drift introduces a term that grows quadratically with time.\nThe Einstein calculation for $D$ is:\n$$ D_E = \\lim_{t\\to\\infty} \\frac{\\mathrm{MSD}(t)}{6t} = \\lim_{t\\to\\infty} \\frac{6 D_{\\text{true}} t + t^2 |\\mathbf{v}_{\\mathrm{drift}}|^2}{6t} $$\n$$ D_E = \\lim_{t\\to\\infty} \\left( D_{\\text{true}} + \\frac{t}{6} |\\mathbf{v}_{\\mathrm{drift}}|^2 \\right) $$\nSince $\\mathbf{v}_{\\mathrm{drift}} \\neq \\mathbf{0}$, this limit diverges. The calculated quantity $\\mathrm{MSD}(t)/(6t)$ increases linearly with time and does not approach a constant value for $D$.\n\n### Option-by-Option Analysis\n\nA. $C_{vv}(t)$ decays to zero as $t\\to\\infty$ as in equilibrium; both the Green–Kubo and Einstein estimates of $D$ are unaffected.\nThis is incorrect. As derived, $C_{vv}(t)$ decays to a positive constant, not zero. Consequently, both the Green-Kubo and Einstein estimates are severely affected, leading to divergence.\n\nB. $C_{vv}(t)$ approaches a positive constant $|\\mathbf{v}_{\\mathrm{drift}}|^{2}$ at long times; the Green–Kubo time integral diverges so any finite-time estimate of $D$ grows linearly with the integration limit, and the Einstein estimate exhibits an MSD with a quadratic-in-$t$ term, causing $\\langle|\\mathbf{r}_{i}(t)-\\mathbf{r}_{i}(0)|^{2}\\rangle/(6t)$ to increase without bound (no long-time plateau) unless the drift is removed.\nThis option provides an almost perfect description.\n-   $C_{vv}(t)$ approaches a positive constant: Correct. My derivation gives the constant as $\\frac{1}{3}|\\mathbf{v}_{\\mathrm{drift}}|^2$ based on the provided definition of $C_{vv}(t)$. The value $|\\mathbf{v}_{\\mathrm{drift}}|^2$ would be correct for a VACF defined as $\\frac{1}{N}\\sum_i \\langle \\mathbf{v}_i(t) \\cdot \\mathbf{v}_i(0) \\rangle$. This is a minor quantitative discrepancy due to differing conventions, but the qualitative statement is correct.\n-   Green-Kubo integral diverges, finite-time estimate grows linearly: Correct. This matches the derivation.\n-   Einstein MSD has a $t^2$ term, and its derived $D$ diverges: Correct. This also perfectly matches the derivation.\nThis option is the best description of the physical phenomena.\n\nC. $C_{vv}(t)$ becomes negative at long times due to enhanced hydrodynamic backflow from the drift; both routes underestimate $D$ relative to the true value.\nThis is incorrect. The dominant effect at long times is the positive constant offset, not hydrodynamic tails (which are much weaker and would be superimposed on the offset). Both estimates for $D$ are massive overestimates that diverge, not underestimates.\n\nD. $C_{vv}(t)$ is shifted upward by a constant, but the Green–Kubo integral remains finite because the mean speed is constant; the Einstein estimate is unaffected since it depends only on displacements, not velocities.\nThis is incorrect. While $C_{vv}(t)$ is shifted upward, the integral of a function approaching a non-zero constant is divergent, not finite. The reasoning \"because the mean speed is constant\" is irrelevant. The Einstein estimate is also fundamentally affected, as the constant velocity drift leads to a displacement that grows linearly in time, making the mean-squared displacement grow quadratically.\n\nBased on this analysis, option B is the only one that correctly describes the qualitative behavior of all quantities.", "answer": "$$\\boxed{B}$$", "id": "2454535"}, {"introduction": "With a clean trajectory, we can compute the velocity autocorrelation function (VACF). The Green-Kubo relations then connect this microscopic correlation to a macroscopic transport coefficient through a time integral. This practice [@problem_id:2454571] focuses on the practical challenge of performing this integration, as simulation data is always discrete and includes statistical noise. By implementing and comparing several standard numerical integration schemes, you will explore the impact of your algorithmic choice on the accuracy of the calculated diffusion coefficient.", "problem": "You are tasked with evaluating how different numerical integration schemes affect the estimation of the self-diffusion coefficient from a noisy velocity autocorrelation function in an isotropic three-dimensional fluid. Use a first-principles formulation grounded in equilibrium statistical mechanics and numerical analysis.\n\nAssumptions and base definitions:\n- Work in reduced units where the ratio of Boltzmann constant times temperature to particle mass is fixed to unity, i.e., $k_{\\mathrm{B}} T / m = 1$. In these units, the equilibrium average squared speed per particle component is $1$, and the full-dimensional instantaneous velocity autocorrelation function at zero lag satisfies $C(0) = \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(0) \\rangle = 3$.\n- The velocity autocorrelation function is defined as $C(t) = \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(t) \\rangle$.\n- The self-diffusion coefficient is given by the Green–Kubo relation $D = \\frac{1}{3} \\int_0^{\\infty} C(t)\\, dt$.\n\nNumerical sampling protocol:\n- For each test case, you are provided an analytical, noise-free target function $C_{\\mathrm{true}}(t)$ belonging to one of the following families:\n  1. Single-exponential decay: $C_{\\mathrm{true}}(t) = 3 \\exp\\!\\left(-t/\\tau\\right)$.\n  2. Damped oscillation: $C_{\\mathrm{true}}(t) = 3 \\exp\\!\\left(-t/\\tau\\right)\\cos(\\omega t)$.\n- You must sample the noisy velocity autocorrelation function on a uniform time grid $t_i = i \\,\\Delta t$ for $i = 0, 1, \\dots, N-1$ with $N = 1 + T_{\\max}/\\Delta t$. All provided cases satisfy that $T_{\\max}/\\Delta t$ is an even integer, so that $N-1$ is even.\n- Construct the noisy sampled values as $C_i = C_{\\mathrm{true}}(t_i) + \\eta_i$, where $\\eta_i$ are independent, identically distributed Gaussian random variables of zero mean and standard deviation $\\sigma = \\alpha\\, C(0) = 3 \\alpha$. Use the same fixed random number generator seed $s = 12345$ for all test cases to ensure reproducibility.\n\nNumerical integration schemes:\n- Given samples $\\{C_i\\}_{i=0}^{N-1}$ at spacing $\\Delta t$, define the following discrete approximations to the time integral $I = \\int_0^{T_{\\max}} C(t)\\, dt$:\n  - Left-rectangle (left Riemann) rule:\n    $$\n    I_{\\mathrm{rect}} = \\Delta t \\sum_{i=0}^{N-2} C_i.\n    $$\n  - Trapezoid rule:\n    $$\n    I_{\\mathrm{trap}} = \\Delta t \\left(\\tfrac{1}{2} C_0 + \\sum_{i=1}^{N-2} C_i + \\tfrac{1}{2} C_{N-1}\\right).\n    $$\n  - Composite Simpson’s rule (valid because $N-1$ is even):\n    $$\n    I_{\\mathrm{simp}} = \\frac{\\Delta t}{3} \\left(C_0 + C_{N-1} + 4 \\sum_{\\substack{i=1 \\\\ i \\ \\mathrm{odd}}}^{N-2} C_i + 2 \\sum_{\\substack{i=2 \\\\ i \\ \\mathrm{even}}}^{N-3} C_i \\right).\n    $$\n- For each method, estimate the diffusion coefficient by $D_{\\mathrm{method}} = \\frac{1}{3} I_{\\mathrm{method}}$. There is no tail correction beyond $T_{\\max}$, and no smoothing; apply the rules directly to the noisy samples.\n\nAnalytical reference values:\n- In reduced units, the exact diffusion coefficient corresponding to each case is:\n  - For $C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)$:\n    $$\n    D_{\\mathrm{true}} = \\tau.\n    $$\n  - For $C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)\\cos(\\omega t)$:\n    $$\n    D_{\\mathrm{true}} = \\frac{\\tau}{1 + (\\omega \\tau)^2}.\n    $$\n\nError metric and output:\n- For each test case and each integration scheme, compute the absolute error $E = \\left| D_{\\mathrm{method}} - D_{\\mathrm{true}} \\right|$. Round each error to six decimal places.\n- Express all diffusion coefficients and errors as pure numbers in reduced units (dimensionless), rounded as specified.\n\nTest suite:\n- Use the following five test cases, each specified as a tuple describing $(\\text{form}, \\tau, \\omega, \\Delta t, T_{\\max}, \\alpha)$, where $\\text{form} \\in \\{\\text{exp}, \\text{osc}\\}$ indicates the family of $C_{\\mathrm{true}}(t)$:\n  1. $(\\text{exp},\\ 2.0,\\ 0.0,\\ 0.01,\\ 20.0,\\ 0.05)$\n  2. $(\\text{osc},\\ 1.0,\\ 2.0,\\ 0.002,\\ 10.0,\\ 0.02)$\n  3. $(\\text{exp},\\ 0.2,\\ 0.05,\\ 0.05,\\ 2.0,\\ 0.05)$\n  4. $(\\text{exp},\\ 1.5,\\ 0.0,\\ 0.01,\\ 15.0,\\ 0.20)$\n  5. $(\\text{exp},\\ 1.0,\\ 0.0,\\ 0.01,\\ 3.0,\\ 0.02)$\n\nFinal output format:\n- Your program should produce a single line of output containing the $15$ rounded errors as a flat, comma-separated list enclosed in square brackets with no spaces. The order must be, for each test case in the order listed above, the three errors in the order left-rectangle, trapezoid, Simpson’s rule. For example, the structure must be\n  $$\n  [E_{\\mathrm{rect}}^{(1)},E_{\\mathrm{trap}}^{(1)},E_{\\mathrm{simp}}^{(1)},\\dots,E_{\\mathrm{rect}}^{(5)},E_{\\mathrm{trap}}^{(5)},E_{\\mathrm{simp}}^{(5)}].\n  $$", "solution": "The problem statement has been rigorously validated. It is scientifically grounded in the principles of statistical mechanics, specifically the Green-Kubo formalism for transport coefficients. All parameters, definitions, and numerical procedures are specified completely and unambiguously. The problem is well-posed, objective, and free of internal contradictions or factual inaccuracies. Therefore, the problem is deemed valid and a full solution is warranted.\n\nThe procedure to solve this problem involves a direct numerical implementation of the specified steps for each test case. The objective is to quantify the absolute error, $E = | D_{\\mathrm{method}} - D_{\\mathrm{true}} |$, for three different numerical integration schemes used to estimate the self-diffusion coefficient $D$ from a noisy velocity autocorrelation function (VACF).\n\nFirst, for each test case, we must generate the discrete, noisy VACF data, $\\{C_i\\}$. The parameters for each case are given by the tuple $(\\text{form}, \\tau, \\omega, \\Delta t, T_{\\max}, \\alpha)$.\n\nThe simulation time extends to a maximum of $T_{\\max}$, sampled with a time step of $\\Delta t$. The number of sample points, $N$, is given by $N = 1 + T_{\\max}/\\Delta t$. The time grid is a set of equidistant points $\\{t_i\\}_{i=0}^{N-1}$, where $t_i = i \\cdot \\Delta t$.\n\nThe true, noise-free VACF, $C_{\\mathrm{true}}(t)$, is determined by the `form` parameter.\nFor `form` = `exp`:\n$$C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)$$\nFor `form` = `osc`:\n$$C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)\\cos(\\omega t)$$\n\nNoise is then added to these true values. The noisy sample $C_i$ at time $t_i$ is $C_i = C_{\\mathrm{true}}(t_i) + \\eta_i$. The term $\\eta_i$ represents a random number drawn from a Gaussian distribution with a mean of $0$ and a standard deviation of $\\sigma = \\alpha C(0)$. Given that $C(0) = 3$, the standard deviation is $\\sigma = 3\\alpha$. A fixed random number generator seed, $s=12345$, must be used to ensure reproducibility of the stochastic component.\n\nNext, we compute the definite integral $I = \\int_0^{T_{\\max}} C(t)\\, dt$ using the generated noisy samples $\\{C_i\\}$ and three specified numerical quadrature rules:\n1.  Left-rectangle rule: This is a first-order method where the integral over each subinterval $[t_i, t_{i+1}]$ is approximated by the area of a rectangle of height $C_i$ and width $\\Delta t$. The total integral is:\n    $$I_{\\mathrm{rect}} = \\Delta t \\sum_{i=0}^{N-2} C_i$$\n2.  Trapezoid rule: This second-order method approximates the integral over each subinterval by the area of a trapezoid formed by points $(t_i, C_i)$ and $(t_{i+1}, C_{i+1})$. The total integral is:\n    $$I_{\\mathrm{trap}} = \\Delta t \\left(\\frac{1}{2} C_0 + \\sum_{i=1}^{N-2} C_i + \\frac{1}{2} C_{N-1}\\right)$$\n3.  Composite Simpson’s rule: This is a fourth-order method that fits a quadratic polynomial to successive groups of three points. It is applicable here because the number of intervals, $N-1$, is specified to be even. The formula is:\n    $$I_{\\mathrm{simp}} = \\frac{\\Delta t}{3} \\left(C_0 + C_{N-1} + 4 \\sum_{\\substack{i=1 \\\\ i \\ \\mathrm{odd}}}^{N-2} C_i + 2 \\sum_{\\substack{i=2 \\\\ i \\ \\mathrm{even}}}^{N-3} C_i \\right)$$\n\nFrom each of these integral approximations, $I_{\\mathrm{method}}$, we calculate the corresponding estimate of the diffusion coefficient, $D_{\\mathrm{method}}$, using the provided Green-Kubo relation. Since the integral in the formula is divided by a factor of $3$, we have:\n$$D_{\\mathrm{method}} = \\frac{1}{3} I_{\\mathrm{method}}$$\n\nTo evaluate the accuracy, we compare $D_{\\mathrm{method}}$ to the exact analytical value, $D_{\\mathrm{true}}$, derived from integrating the true VACF from $t=0$ to $t=\\infty$.\nFor $C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)$:\n$$D_{\\mathrm{true}} = \\frac{1}{3} \\int_0^{\\infty} 3 e^{-t/\\tau} dt = \\tau$$\nFor $C_{\\mathrm{true}}(t) = 3 \\exp(-t/\\tau)\\cos(\\omega t)$:\n$$D_{\\mathrm{true}} = \\frac{1}{3} \\int_0^{\\infty} 3 e^{-t/\\tau}\\cos(\\omega t) dt = \\frac{\\tau}{1 + (\\omega \\tau)^2}$$\nNote that the numerical integration is performed over a finite interval $[0, T_{\\max}]$, while $D_{\\mathrm{true}}$ corresponds to an infinite integral. The resulting truncation error is part of the total error being measured.\n\nFinally, the absolute error for each method is computed as $E_{\\mathrm{method}} = | D_{\\mathrm{method}} - D_{\\mathrm{true}} |$. These errors are then rounded to six decimal places as required. The entire procedure is repeated for all five test cases, and the results are aggregated into a single list.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import simpson\n\ndef solve():\n    \"\"\"\n    Computes the absolute error in the diffusion coefficient calculation for\n    different numerical integration schemes based on noisy VACF data.\n    \"\"\"\n    # Test cases defined as (form, tau, omega, dt, T_max, alpha)\n    test_cases = [\n        ('exp', 2.0, 0.0, 0.01, 20.0, 0.05),\n        ('osc', 1.0, 2.0, 0.002, 10.0, 0.02),\n        ('exp', 0.2, 0.05, 0.05, 2.0, 0.05),\n        ('exp', 1.5, 0.0, 0.01, 15.0, 0.20),\n        ('exp', 1.0, 0.0, 0.01, 3.0, 0.02)\n    ]\n    \n    # Fixed seed for reproducibility as per problem statement\n    seed = 12345\n    rng = np.random.default_rng(seed)\n    \n    results = []\n    \n    for case in test_cases:\n        form, tau, omega, dt, T_max, alpha = case\n        \n        # Calculate derived parameters for sampling\n        # The problem guarantees T_max/dt is an integer\n        num_intervals = int(T_max / dt)\n        N = num_intervals + 1\n        \n        # Standard deviation of the Gaussian noise\n        # C(0) is 3 in reduced units\n        sigma = 3.0 * alpha\n        \n        # Generate the uniform time grid\n        t = np.linspace(0.0, T_max, N)\n        \n        # Calculate the true VACF and the true diffusion coefficient\n        if form == 'exp':\n            C_true = 3.0 * np.exp(-t / tau)\n            D_true = tau\n        elif form == 'osc':\n            C_true = 3.0 * np.exp(-t / tau) * np.cos(omega * t)\n            D_true = tau / (1.0 + (omega * tau)**2)\n        \n        # Generate noise and create the noisy VACF samples\n        noise = rng.normal(loc=0.0, scale=sigma, size=N)\n        C_noisy = C_true + noise\n        \n        # --- Numerical Integration ---\n        \n        # 1. Left-rectangle rule\n        # I = dt * sum(C_i from i=0 to N-2)\n        I_rect = dt * np.sum(C_noisy[:-1])\n        \n        # 2. Trapezoid rule (using numpy's implementation)\n        I_trap = np.trapz(C_noisy, dx=dt)\n        \n        # 3. Composite Simpson's rule (using scipy's implementation)\n        I_simp = simpson(C_noisy, dx=dt)\n        \n        # --- Diffusion Coefficient and Error Calculation ---\n        \n        # Calculate D for each method\n        D_rect = I_rect / 3.0\n        D_trap = I_trap / 3.0\n        D_simp = I_simp / 3.0\n        \n        # Calculate absolute errors and round to 6 decimal places\n        E_rect = round(abs(D_rect - D_true), 6)\n        E_trap = round(abs(D_trap - D_true), 6)\n        E_simp = round(abs(D_simp - D_true), 6)\n        \n        # Append errors to the results list in the specified order\n        results.extend([E_rect, E_trap, E_simp])\n        \n    # Format the final output as a single-line string\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2454571"}, {"introduction": "After establishing a procedure to calculate the diffusion coefficient $D$, we must ask: how reliable is our result? This advanced computational practice [@problem_id:2454578] tackles the critical issue of statistical convergence and error analysis. Starting from the fundamental Langevin equation, you will derive the relationship between simulation time and statistical error, ultimately answering the practical question of how long a simulation must run to determine $D$ to a desired level of precision. This exercise bridges the gap between theoretical statistical mechanics and the practical design of robust computational experiments.", "problem": "You are asked to determine, using a principled statistical analysis grounded in dynamical theory, the minimum total simulation time required to estimate the self-diffusion coefficient $D$ of a monatomic fluid (liquid argon model) to within a prescribed relative statistical error. Your task is to write a complete, runnable program that implements this analysis under a concrete, testable protocol described below.\n\nThe fundamental base for your derivation should begin from Newton’s second law and the Langevin equation, together with the definition of a time correlation function and its connection to transport coefficients via linear response theory. Specifically, assume a single argon atom of mass $m$ immersed in a thermal bath at absolute temperature $T$, whose velocity $\\mathbf{v}(t)$ follows the Langevin dynamics\n$$\nm \\,\\frac{d\\mathbf{v}}{dt} = - m \\,\\gamma \\,\\mathbf{v}(t) + \\mathbf{R}(t),\n$$\nwhere $\\gamma$ is a friction coefficient and $\\mathbf{R}(t)$ is a zero-mean, Gaussian, delta-correlated random force satisfying the fluctuation–dissipation condition. Use time correlation functions as defined by\n$$\nC_{AB}(t) = \\langle A(0) B(t) \\rangle,\n$$\nand the relationship between transport coefficients and integrated time correlation functions arising from linear response theory. Do not assume any shortcut formulas that directly give the diffusion coefficient without systematic derivation.\n\nDefine a concrete estimator of $D$ using the following protocol:\n- Consider blocks of duration $t_c$ and within each block use a single time origin at $t=0$.\n- For each block, approximate the diffusion coefficient by integrating the velocity autocorrelation contribution from that origin up to a finite cutoff time $t_c$, and average the three Cartesian components by using the dot product. The block estimator is\n$$\nD_{\\text{block}} = \\frac{1}{3}\\int_0^{t_c} \\mathbf{v}(0)\\cdot \\mathbf{v}(t)\\, dt,\n$$\napproximated exactly in your derivation. Assume blocks are independent and identically distributed. The mean of $D_{\\text{block}}$ equals the finite-time integral of the velocity autocorrelation function, and its variance is computable from the known second-order statistics of the process.\n\nIn the specific Ornstein–Uhlenbeck regime implied by the Langevin equation, the stationary velocity autocorrelation decays exponentially with a single characteristic time $\\tau_v$. Using only derivations from the above fundamental base, determine the closed-form expressions for:\n1. The exact mean of $D_{\\text{block}}$ for a finite cutoff $t_c$.\n2. The exact variance of $D_{\\text{block}}$ for a finite cutoff $t_c$.\n\nThen, for a target relative standard error $\\epsilon$ on the sample mean of $D_{\\text{block}}$ obtained by averaging $n$ independent blocks,\n$$\n\\frac{\\sqrt{\\mathrm{Var}(D_{\\text{block}})/n}}{\\mathbb{E}[D_{\\text{block}}]} \\le \\epsilon,\n$$\nsolve analytically for the minimum integer $n$ required. Define the total simulated physical time as $T_{\\text{tot}} = n\\, t_c$, and report this $T_{\\text{tot}}$.\n\nFor scientific specificity suitable to liquid argon, use the equilibrium condition implied by the fluctuation–dissipation theorem at temperature $T$ and the Maxwell–Boltzmann stationary distribution of velocities with variance per Cartesian component\n$$\n\\sigma_v^2 = \\frac{k_\\mathrm{B}\\, T}{m},\n$$\nwhere $k_\\mathrm{B}$ is Boltzmann’s constant. Connect $\\gamma$ to the desired diffusion coefficient $D$ through first-principles derivation using the above framework (do not assume any shortcut relations without derivation).\n\nNumerical protocol to be implemented:\n- Use a finite-time cutoff equal to ten times the velocity correlation time: $t_c = 10\\, \\tau_v$.\n- Express the final total time $T_{\\text{tot}}$ in picoseconds (ps), rounded to two decimal places.\n- Use $k_\\mathrm{B} = 1.380649\\times 10^{-23}$ in SI units and $1\\,\\text{atomic mass unit} = 1.66053906660\\times 10^{-27}\\,\\text{kg}$.\n\nTest suite: For each of the following parameter sets $(T, m, D)$, compute and report the minimum total simulation time $T_{\\text{tot}}$ in picoseconds that guarantees a relative standard error no larger than $\\epsilon = 0.05$ for the mean of the block estimator defined above:\n- Case 1 (typical liquid argon near its boiling point): $T = 87\\,\\text{K}$, $m = 39.948\\,\\text{amu}$, $D = 2.30\\times 10^{-9}\\,\\text{m}^2/\\text{s}$.\n- Case 2 (more viscous condition): $T = 87\\,\\text{K}$, $m = 39.948\\,\\text{amu}$, $D = 0.50\\times 10^{-9}\\,\\text{m}^2/\\text{s}$.\n- Case 3 (less viscous condition): $T = 87\\,\\text{K}$, $m = 39.948\\,\\text{amu}$, $D = 1.00\\times 10^{-8}\\,\\text{m}^2/\\text{s}$.\n\nThere are physical units; all final times must be expressed in picoseconds.\n\nYour program should produce a single line of output containing the three results as a comma-separated list enclosed in square brackets. For example: \"[t1,t2,t3]\". Each entry must be a float rounded to two decimal places, expressed in picoseconds, and ordered corresponding to the test suite cases 1 through 3.", "solution": "The problem statement is scientifically sound, self-contained, and well-posed. It presents a standard, yet non-trivial, problem in computational statistical mechanics. We shall proceed with a complete solution derived from fundamental principles as requested.\n\nThe analysis begins with the Langevin equation for a particle of mass $m$ at temperature $T$:\n$$\nm \\frac{d\\mathbf{v}}{dt} = - m \\gamma \\mathbf{v}(t) + \\mathbf{R}(t)\n$$\nHere, $\\gamma$ is the friction coefficient and $\\mathbf{R}(t)$ is a Gaussian white noise force with zero mean, $\\langle \\mathbf{R}(t) \\rangle = \\mathbf{0}$, and delta-correlation, $\\langle R_i(t) R_j(t') \\rangle = 2 \\Gamma \\delta_{ij} \\delta(t-t')$. The fluctuation-dissipation theorem dictates the relationship $\\Gamma = m \\gamma k_\\mathrm{B} T$, where $k_\\mathrm{B}$ is the Boltzmann constant.\n\nWe consider a single Cartesian component of the velocity, say $v_x(t)$. The equation of motion is a first-order linear stochastic differential equation:\n$$\n\\frac{dv_x}{dt} + \\gamma v_x(t) = \\frac{R_x(t)}{m}\n$$\nThe formal solution for $v_x(t)$ starting from an initial velocity $v_x(0)$ at $t=0$ is given by:\n$$\nv_x(t) = v_x(0) e^{-\\gamma t} + \\int_0^t e^{-\\gamma(t-s)} \\frac{R_x(s)}{m} ds\n$$\nThe velocity autocorrelation function (VACF) for a single component, $C(t) = \\langle v_x(0) v_x(t) \\rangle$ for $t \\ge 0$, is found by multiplying the solution by $v_x(0)$ and taking the ensemble average. At stationarity, the noise at time $s>0$ is uncorrelated with the velocity at time $t=0$, i.e., $\\langle v_x(0) R_x(s) \\rangle = 0$. This yields:\n$$\nC(t) = \\langle v_x(0)^2 \\rangle e^{-\\gamma t}\n$$\nThe equipartition theorem for a classical system in thermal equilibrium states that the average kinetic energy per degree of freedom is $\\frac{1}{2} k_\\mathrm{B} T$. Thus, $\\frac{1}{2} m \\langle v_x^2 \\rangle = \\frac{1}{2} k_\\mathrm{B} T$, which gives the stationary variance of a velocity component as $\\langle v_x^2 \\rangle = \\sigma_v^2 = \\frac{k_\\mathrm{B} T}{m}$.\nThe VACF is therefore:\n$$\nC(t) = \\frac{k_\\mathrm{B} T}{m} e^{-\\gamma |t|}\n$$\nThe problem states the decay is characterized by a time $\\tau_v$, so we identify $\\gamma = 1/\\tau_v$. The single-component VACF is $C(t) = \\frac{k_\\mathrm{B} T}{m} e^{-|t|/\\tau_v}$.\n\nThe self-diffusion coefficient $D$ is defined by the long-time limit of the mean-squared displacement (MSD):\n$$\nD = \\lim_{t\\to\\infty} \\frac{1}{6t} \\langle |\\mathbf{r}(t) - \\mathbf{r}(0)|^2 \\rangle\n$$\nThe displacement is the integral of velocity: $\\mathbf{r}(t) - \\mathbf{r}(0) = \\int_0^t \\mathbf{v}(t') dt'$. The MSD is:\n$$\n\\langle |\\mathbf{r}(t) - \\mathbf{r}(0)|^2 \\rangle = \\int_0^t dt' \\int_0^t dt'' \\langle \\mathbf{v}(t') \\cdot \\mathbf{v}(t'') \\rangle\n$$\nFor a stationary process, the correlation $\\langle \\mathbf{v}(t') \\cdot \\mathbf{v}(t'') \\rangle$ depends only on the time difference $|t' - t''|$. Let $C_{vv}(s) = \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(s) \\rangle$. The double integral can be simplified to $2 \\int_0^t (t-s) C_{vv}(s) \\, ds$.\nSubstituting this into the definition of $D$:\n$$\nD = \\lim_{t\\to\\infty} \\frac{1}{6t} \\left[ 2 \\int_0^t (t-s) C_{vv}(s) ds \\right] = \\frac{1}{3} \\int_0^\\infty C_{vv}(s) ds\n$$\nThis is the Green-Kubo relation for the diffusion coefficient. The full VACF is $C_{vv}(t) = \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(t) \\rangle = \\sum_{i=x,y,z} \\langle v_i(0)v_i(t) \\rangle = 3C(t)$, since cross-correlations like $\\langle v_x(0)v_y(t) \\rangle$ are zero.\nSo, $C_{vv}(t) = 3 \\frac{k_\\mathrm{B} T}{m} e^{-|t|/\\tau_v}$.\nIntegrating this gives the diffusion coefficient:\n$$\nD = \\frac{1}{3} \\int_0^\\infty 3 \\frac{k_\\mathrm{B} T}{m} e^{-t/\\tau_v} dt = \\frac{k_\\mathrm{B} T}{m} [-\\tau_v e^{-t/\\tau_v}]_0^\\infty = \\frac{k_\\mathrm{B} T}{m} \\tau_v\n$$\nThis provides a crucial relation to determine the velocity correlation time $\\tau_v$ from the given parameters: $\\tau_v = \\frac{m D}{k_\\mathrm{B} T}$.\n\nNext, we analyze the statistical properties of the block estimator $D_{\\text{block}}$ defined for a finite cutoff time $t_c$:\n$$\nD_{\\text{block}} = \\frac{1}{3} \\int_0^{t_c} \\mathbf{v}(0) \\cdot \\mathbf{v}(t) dt\n$$\nThe expected value of this estimator is:\n$$\n\\mathbb{E}[D_{\\text{block}}] = \\frac{1}{3} \\int_0^{t_c} \\langle \\mathbf{v}(0) \\cdot \\mathbf{v}(t) \\rangle dt = \\frac{1}{3} \\int_0^{t_c} C_{vv}(t) dt = \\int_0^{t_c} \\frac{k_\\mathrm{B} T}{m} e^{-t/\\tau_v} dt\n$$\nUsing $D = \\frac{k_\\mathrm{B} T}{m} \\tau_v$, we can write $\\frac{k_\\mathrm{B} T}{m} = \\frac{D}{\\tau_v}$.\n$$\n\\mathbb{E}[D_{\\text{block}}] = \\frac{D}{\\tau_v} \\int_0^{t_c} e^{-t/\\tau_v} dt = \\frac{D}{\\tau_v} [-\\tau_v e^{-t/\\tau_v}]_0^{t_c} = D(1 - e^{-t_c/\\tau_v})\n$$\nThe variance is $\\mathrm{Var}(D_{\\text{block}}) = \\mathbb{E}[D_{\\text{block}}^2] - (\\mathbb{E}[D_{\\text{block}}])^2$.\n$$\n\\mathbb{E}[D_{\\text{block}}^2] = \\frac{1}{9} \\int_0^{t_c} dt_1 \\int_0^{t_c} dt_2 \\langle (\\mathbf{v}(0) \\cdot \\mathbf{v}(t_1)) (\\mathbf{v}(0) \\cdot \\mathbf{v}(t_2)) \\rangle\n$$\nThe four-velocity correlator must be evaluated. Let $Y_i = \\int_0^{t_c} v_i(0)v_i(t) dt$. Then $D_{\\text{block}} = \\frac{1}{3}(Y_x+Y_y+Y_z)$. As the velocity components are independent for the Langevin model, the functionals $Y_i$ are uncorrelated. Therefore, $\\mathrm{Var}(D_{\\text{block}}) = \\frac{1}{9}[\\mathrm{Var}(Y_x) + \\mathrm{Var}(Y_y) + \\mathrm{Var}(Y_z)] = \\frac{3}{9}\\mathrm{Var}(Y_x) = \\frac{1}{3}\\mathrm{Var}(Y_x)$.\nThe variance of $Y_x$ is $\\mathrm{Var}(Y_x) = \\int_0^{t_c} \\int_0^{t_c} \\mathrm{Cov}(v_x(0)v_x(t_1), v_x(0)v_x(t_2)) dt_1 dt_2$.\nFor a zero-mean Gaussian process, Isserlis' theorem gives the covariance of products: $\\mathrm{Cov}(AB, CD) = \\langle AC \\rangle \\langle BD \\rangle + \\langle AD \\rangle \\langle BC \\rangle$.\nHere, $A=v_x(0), B=v_x(t_1), C=v_x(0), D=v_x(t_2)$.\n$$\n\\mathrm{Cov}(v_x(0)v_x(t_1), v_x(0)v_x(t_2)) = \\langle v_x(0)v_x(0) \\rangle \\langle v_x(t_1)v_x(t_2) \\rangle + \\langle v_x(0)v_x(t_2) \\rangle \\langle v_x(t_1)v_x(0) \\rangle\n$$\nUsing $C(t) = \\langle v_x(0)v_x(t) \\rangle$, this becomes $C(0)C(|t_1-t_2|) + C(t_2)C(t_1)$.\nThus, $\\mathrm{Var}(Y_x) = \\int_0^{t_c} \\int_0^{t_c} [C(0)C(|t_1-t_2|) + C(t_1)C(t_2)] dt_1 dt_2$.\nThe second term is $(\\int_0^{t_c} C(t) dt)^2$. The first term is $C(0) \\int_0^{t_c} \\int_0^{t_c} C(|t_1-t_2|) dt_1 dt_2$.\nThe double integral evaluates to $2 \\int_0^{t_c} (t_c-t) C(t) dt$.\nLet $x = t_c/\\tau_v$. We have $C(t) = (D/\\tau_v) e^{-t/\\tau_v}$ and $C(0) = D/\\tau_v$.\nThe integral $\\int_0^{t_c} C(t) dt = D(1-e^{-x})$.\nThe integral $2\\int_0^{t_c} (t_c-t)C(t)dt = 2(D/\\tau_v)\\int_0^{t_c} (t_c-t)e^{-t/\\tau_v} dt = 2D[t_c - \\tau_v(1-e^{-x})]$.\nCombining all terms for $\\mathrm{Var}(Y_x)$:\n$$\n\\mathrm{Var}(Y_x) = D^2(1-e^{-x})^2 + \\frac{D}{\\tau_v} \\cdot 2D[t_c - \\tau_v(1-e^{-x})] = D^2[(1-e^{-x})^2 + 2x - 2(1-e^{-x})]\n$$\n$$\n= D^2[1-2e^{-x}+e^{-2x} + 2x - 2 + 2e^{-x}] = D^2[2x-1+e^{-2x}]\n$$\nFinally, $\\mathrm{Var}(D_{\\text{block}}) = \\frac{1}{3}\\mathrm{Var}(Y_x) = \\frac{D^2}{3}(2x-1+e^{-2x})$.\n\nThe problem requires the relative standard error on the mean of $n$ blocks to be at most $\\epsilon$:\n$$\n\\frac{\\sqrt{\\mathrm{Var}(D_{\\text{block}})/n}}{\\mathbb{E}[D_{\\text{block}}]} \\le \\epsilon \\implies n \\ge \\frac{\\mathrm{Var}(D_{\\text{block}})}{\\epsilon^2 (\\mathbb{E}[D_{\\text{block}}])^2}\n$$\nThe minimum integer number of blocks is $n_{\\text{min}} = \\lceil n \\rceil$.\nSubstituting our derived expressions:\n$$\nn \\ge \\frac{1}{\\epsilon^2} \\frac{\\frac{D^2}{3}(2x-1+e^{-2x})}{(D(1-e^{-x}))^2} = \\frac{1}{3\\epsilon^2} \\frac{2x-1+e^{-2x}}{(1-e^{-x})^2}\n$$\nThe total simulation time is $T_{\\text{tot}} = n_{\\text{min}} \\cdot t_c$.\nThe numerical protocol specifies $t_c = 10 \\tau_v$, so $x=10$, and $\\epsilon=0.05$. The factor for $n$ can be pre-calculated:\n$$\nn_{\\text{min}} = \\left\\lceil \\frac{1}{3(0.05)^2} \\frac{2(10)-1+e^{-20}}{(1-e^{-10})^2} \\right\\rceil = \\left\\lceil \\frac{1}{0.0075} \\frac{19+e^{-20}}{(1-e^{-10})^2} \\right\\rceil\n$$\n$e^{-10} \\approx 4.54 \\times 10^{-5}$ is small, and $e^{-20}$ is negligible.\n$n_{\\text{min}} = \\lceil 2533.564... \\rceil = 2534$.\nThe total time is calculated for each case using $T_{\\text{tot}} = 2534 \\cdot 10 \\cdot \\tau_v = 25340 \\cdot \\frac{mD}{k_\\mathrm{B}T}$.\n\nFinal computation steps for each case:\n1.  Convert mass $m$ from amu to kg: $m[\\text{kg}] = m[\\text{amu}] \\times 1.66053906660 \\times 10^{-27}$.\n2.  Calculate $\\tau_v$ in seconds: $\\tau_v = \\frac{m D}{k_\\mathrm{B} T}$, using $k_\\mathrm{B} = 1.380649 \\times 10^{-23}$ SI units.\n3.  Calculate total time in seconds: $T_{\\text{tot}}[\\text{s}] = 25340 \\times \\tau_v$.\n4.  Convert to picoseconds and round to two decimal places: $T_{\\text{tot}}[\\text{ps}] = T_{\\text{tot}}[\\text{s}] \\times 10^{12}$.\nThis procedure is implemented in the provided code.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the minimum total simulation time to estimate a diffusion coefficient\n    to within a prescribed relative statistical error, based on a Langevin model.\n    \"\"\"\n    \n    # Constants\n    K_B = 1.380649e-23  # Boltzmann constant in J/K\n    AMU_TO_KG = 1.66053906660e-27  # Conversion from amu to kg\n\n    # Test cases: (Temperature [K], Mass [amu], Diffusion Coefficient [m^2/s])\n    test_cases = [\n        (87, 39.948, 2.30e-9),   # Case 1: Typical liquid argon\n        (87, 39.948, 0.50e-9),   # Case 2: More viscous\n        (87, 39.948, 1.00e-8),   # Case 3: Less viscous\n    ]\n    \n    # Numerical protocol parameters\n    epsilon = 0.05  # Target relative standard error\n    x = 10  # Cutoff time in units of correlation time, t_c / tau_v\n    \n    # Derive the minimum number of blocks required.\n    # This number depends only on epsilon and x, not on the physical parameters.\n    # n_min = ceil( (1/epsilon**2) * Var(D_block) / E[D_block]**2 )\n    #\n    # Var(D_block) / E[D_block]**2 = (2*x - 1 + exp(-2*x)) / (3 * (1 - exp(-x))**2)\n    \n    n_factor_numerator = 2 * x - 1 + np.exp(-2 * x)\n    n_factor_denominator = 3 * (1 - np.exp(-x))**2\n    n_factor = n_factor_numerator / n_factor_denominator\n    \n    n_min_float = (1 / epsilon**2) * n_factor\n    n_min = int(np.ceil(n_min_float))\n\n    results = []\n    for T, m_amu, D in test_cases:\n        # 1. Convert mass to SI units (kg)\n        m_kg = m_amu * AMU_TO_KG\n        \n        # 2. Calculate the velocity correlation time tau_v from the derived relation\n        # D = (k_B * T / m) * tau_v\n        k_B_T = K_B * T\n        tau_v = (m_kg * D) / k_B_T  # in seconds\n        \n        # 3. Calculate the cutoff time for one block\n        t_c = x * tau_v  # in seconds\n        \n        # 4. Calculate the total simulation time required\n        T_tot_s = n_min * t_c  # in seconds\n        \n        # 5. Convert total time to picoseconds and round\n        T_tot_ps = T_tot_s * 1e12\n        results.append(round(T_tot_ps, 2))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2454578"}]}