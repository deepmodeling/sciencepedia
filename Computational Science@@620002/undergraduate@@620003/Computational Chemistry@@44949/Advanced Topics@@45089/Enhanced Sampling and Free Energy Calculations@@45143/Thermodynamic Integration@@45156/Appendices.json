{"hands_on_practices": [{"introduction": "Theoretical concepts are best understood through application. This first exercise provides a foundational, step-by-step application of the thermodynamic integration (TI) formula to a simple, analytically solvable system. By calculating the free energy difference between two harmonic potential states, you will see exactly how the integration of the ensemble-averaged potential derivative connects the initial and final states, providing a clear and concrete example of the principles at play [@problem_id:2465950].", "problem": "A single classical particle of mass $m$ moves in one spatial dimension and is held in a harmonic potential. In state $A$, the potential is $U_{A}(x) = \\frac{1}{2} k_{A} x^{2}$, and in state $B$, the potential is $U_{B}(x) = \\frac{1}{2} k_{B} x^{2}$, where $k_{A} > 0$ and $k_{B} > 0$ are the force constants. The system is at absolute temperature $T$ in the canonical ensemble. Define an alchemical coupling parameter $\\lambda \\in [0,1]$ and a path of potentials $U_{\\lambda}(x) = (1-\\lambda) U_{A}(x) + \\lambda U_{B}(x)$. Using Thermodynamic Integration (TI), determine the exact analytic expression for the Helmholtz free energy difference $\\Delta F_{A \\to B} = F_{B} - F_{A}$. Assume classical statistics and note that kinetic contributions are identical in states $A$ and $B$ and thus cancel in the free energy difference. Express your final answer symbolically in terms of $k_{A}$, $k_{B}$, the Boltzmann constant $k_{\\mathrm{B}}$, and $T$ as a single closed-form expression.", "solution": "The system is classical and in the canonical ensemble at temperature $T$. The Helmholtz free energy is defined by $F = - k_{\\mathrm{B}} T \\ln Z$, where $Z$ is the partition function. In Thermodynamic Integration (TI), one introduces a coupling parameter $\\lambda \\in [0,1]$ that continuously transforms the potential from $U_{A}$ to $U_{B}$ via $U_{\\lambda}(x) = (1-\\lambda) U_{A}(x) + \\lambda U_{B}(x)$. The fundamental TI relation in the canonical ensemble is\n$$\n\\Delta F_{A \\to B} \\equiv F_{B} - F_{A} = \\int_{0}^{1} \\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} \\, d\\lambda,\n$$\nwhere $\\langle \\cdot \\rangle_{\\lambda}$ denotes an ensemble average with respect to the canonical distribution corresponding to $U_{\\lambda}$.\n\nFor the given path,\n$$\nU_{\\lambda}(x) = \\frac{1}{2}\\left[(1-\\lambda)k_{A} + \\lambda k_{B}\\right] x^{2} \\equiv \\frac{1}{2} k(\\lambda) x^{2},\n$$\nwhere $k(\\lambda) = (1-\\lambda)k_{A} + \\lambda k_{B}$. Differentiating $U_{\\lambda}$ with respect to $\\lambda$ yields\n$$\n\\frac{\\partial U_{\\lambda}}{\\partial \\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) x^{2}.\n$$\nTherefore, the TI integrand is\n$$\n\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\langle x^{2} \\rangle_{\\lambda}.\n$$\n\nWe now compute $\\langle x^{2} \\rangle_{\\lambda}$ for a one-dimensional harmonic potential with force constant $k(\\lambda)$. In the canonical ensemble,\n$$\n\\langle x^{2} \\rangle_{\\lambda} = \\frac{\\int_{-\\infty}^{\\infty} x^{2} \\exp\\!\\left[-\\beta \\frac{1}{2} k(\\lambda) x^{2}\\right] dx}{\\int_{-\\infty}^{\\infty} \\exp\\!\\left[-\\beta \\frac{1}{2} k(\\lambda) x^{2}\\right] dx},\n$$\nwith $\\beta = \\frac{1}{k_{\\mathrm{B}} T}$. Both numerator and denominator are Gaussian integrals. Using the standard result for such moments, one finds\n$$\n\\langle x^{2} \\rangle_{\\lambda} = \\frac{1}{\\beta k(\\lambda)} = \\frac{k_{\\mathrm{B}} T}{k(\\lambda)}.\n$$\nHence,\n$$\n\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} = \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\frac{k_{\\mathrm{B}} T}{k(\\lambda)}.\n$$\n\nSubstituting into the TI integral gives\n$$\n\\Delta F_{A \\to B} = \\int_{0}^{1} \\frac{1}{2}\\left(k_{B} - k_{A}\\right) \\frac{k_{\\mathrm{B}} T}{(1-\\lambda)k_{A} + \\lambda k_{B}} \\, d\\lambda.\n$$\nThis integral is elementary. Let $a = k_{A}$ and $b = k_{B}$. Then\n$$\n\\Delta F_{A \\to B} = \\frac{1}{2} k_{\\mathrm{B}} T (b - a) \\int_{0}^{1} \\frac{d\\lambda}{a + \\lambda (b - a)}.\n$$\nEvaluating the integral,\n$$\n\\int_{0}^{1} \\frac{d\\lambda}{a + \\lambda (b - a)} = \\frac{1}{b - a} \\left[ \\ln\\!\\left(a + \\lambda (b - a)\\right) \\right]_{0}^{1} = \\frac{1}{b - a} \\left( \\ln b - \\ln a \\right).\n$$\nTherefore,\n$$\n\\Delta F_{A \\to B} = \\frac{1}{2} k_{\\mathrm{B}} T \\left( \\ln b - \\ln a \\right) = \\frac{1}{2} k_{\\mathrm{B}} T \\ln\\!\\left(\\frac{k_{B}}{k_{A}}\\right).\n$$\n\nThis expression is the exact classical configurational free energy difference between the two one-dimensional harmonic states along the specified linear coupling path and is consistent with a direct partition-function calculation, noting that kinetic contributions cancel in the difference.", "answer": "$$\\boxed{\\frac{1}{2}\\,k_{\\mathrm{B}}\\,T\\,\\ln\\!\\left(\\frac{k_{B}}{k_{A}}\\right)}$$", "id": "2465950"}, {"introduction": "While analytical models are instructive, most systems in computational chemistry require numerical methods. This practice moves from a 'toy model' to a cornerstone of molecular simulation: the Lennard-Jones potential. By alchemically 'turning off' the attractive part of the potential to leave only the repulsive Weeks-Chandler-Andersen (WCA) interaction, you will use numerical integration to calculate the free energy contribution of intermolecular attraction, a central concept in liquid-state theory [@problem_id:2466007].", "problem": "Consider a dilute, classical system consisting of $2$ identical particles in three spatial dimensions at absolute temperature $T$, confined so that their center-to-center separation $r$ is restricted to the interval $[0,R]$. The particles interact via either the Lennard–Jones (LJ) potential or the Weeks–Chandler–Andersen (WCA) potential. Use reduced Lennard–Jones units with energy scale $\\varepsilon$, length scale $\\sigma$, and Boltzmann constant $k_{\\mathrm{B}}$ set to unity, i.e., $\\varepsilon=\\sigma=k_{\\mathrm{B}}=1$. Thus all energies are to be expressed in units of $\\varepsilon$, all lengths in units of $\\sigma$, and temperature in reduced form $T^{\\ast}=T$.\n\nDefine the Lennard–Jones potential $U_{\\mathrm{LJ}}(r)$ by\n$$\nU_{\\mathrm{LJ}}(r)=4\\varepsilon\\left[\\left(\\frac{\\sigma}{r}\\right)^{12}-\\left(\\frac{\\sigma}{r}\\right)^{6}\\right],\n$$\nand the Weeks–Chandler–Andersen (WCA) potential $U_{\\mathrm{WCA}}(r)$ by truncation and shifting at the cutoff $r_{\\mathrm{c}}=2^{1/6}\\sigma$:\n$$\nU_{\\mathrm{WCA}}(r)=\n\\begin{cases}\nU_{\\mathrm{LJ}}(r)-U_{\\mathrm{LJ}}(r_{\\mathrm{c}}), & r\\le r_{\\mathrm{c}},\\\\\n0, & r>r_{\\mathrm{c}}.\n\\end{cases}\n$$\nNote that $U_{\\mathrm{LJ}}(r_{\\mathrm{c}})=-\\varepsilon$, so the shift equals $+\\varepsilon$.\n\nConsider the canonical-ensemble free energy $A(\\lambda)$ of the two-particle system under the alchemical path\n$$\nU_{\\lambda}(r)=(1-\\lambda)\\,U_{\\mathrm{LJ}}(r)+\\lambda\\,U_{\\mathrm{WCA}}(r), \\quad \\lambda\\in[0,1],\n$$\nwhich continuously transforms the Lennard–Jones interaction at $\\lambda=0$ into the Weeks–Chandler–Andersen interaction at $\\lambda=1$. The thermodynamic integration (TI) free energy difference is defined by\n$$\n\\Delta A \\equiv A(1)-A(0)=\\int_{0}^{1}\\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda}\\right\\rangle_{\\lambda}\\,d\\lambda,\n$$\nwhere $\\langle\\cdot\\rangle_{\\lambda}$ denotes the canonical ensemble average at fixed $\\lambda$ and temperature $T$.\n\nYou are to compute the free energy difference $\\Delta A$ per interacting pair, in units of $\\varepsilon$, for a set of test cases specified below. Assume the relative configurational integral is evaluated over the radial separation $r\\in[0,R]$ with the spherical measure $4\\pi r^{2}$; the center-of-mass contribution cancels in ensemble averages and may be ignored. Angles do not appear, so no angle unit is required.\n\nTest suite (each case is given as $(T^{\\ast},R)$ in reduced units):\n- Case $1$: $(1.0,\\,4.0)$\n- Case $2$: $(0.5,\\,4.0)$\n- Case $3$: $(2.0,\\,4.0)$\n- Case $4$: $(1.0,\\,1.05\\,r_{\\mathrm{c}})$\n- Case $5$: $(1.0,\\,0.95\\,r_{\\mathrm{c}})$\n\nYour task:\n- Using only the definitions above, compute $\\Delta A$ for each case as a real number (float) in units of $\\varepsilon$.\n- Express each result as a decimal number rounded to $6$ decimal places.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite (e.g., $[x_{1},x_{2},x_{3},x_{4},x_{5}]$).", "solution": "The problem statement is subjected to validation and is found to be scientifically grounded, well-posed, and objective. It is a standard problem in statistical mechanics, presenting a calculation of the free energy difference between two systems defined by the Lennard–Jones and Weeks–Chandler–Andersen potentials. All necessary parameters and definitions are provided, and no contradictions or ambiguities are present. The problem is valid and a solution will be provided.\n\nThe objective is to compute the change in Helmholtz free energy, $\\Delta A$, when the interparticle potential is transformed from the Lennard–Jones potential, $U_{\\mathrm{LJ}}(r)$, to the Weeks–Chandler–Andersen potential, $U_{\\mathrm{WCA}}(r)$. The system consists of two particles at a temperature $T$ whose separation $r$ is confined to the interval $[0, R]$. All calculations are performed in reduced units where $\\varepsilon=\\sigma=k_{\\mathrm{B}}=1$.\n\nThe free energy difference is defined via thermodynamic integration (TI):\n$$\n\\Delta A = A(\\lambda=1) - A(\\lambda=0) = \\int_{0}^{1} \\left\\langle \\frac{\\partial U_{\\lambda}}{\\partial \\lambda} \\right\\rangle_{\\lambda} \\,d\\lambda\n$$\nwhere $U_{\\lambda}(r) = (1-\\lambda)U_{\\mathrm{LJ}}(r) + \\lambda U_{\\mathrm{WCA}}(r)$.\n\nWhile the TI formula is a valid definition, a more direct and computationally efficient method exists for this specific problem. The Helmholtz free energy $A$ is related to the canonical partition function $Z$ by the fundamental relation $A = -k_{\\mathrm{B}}T \\ln Z$. In the specified reduced units, this becomes $A = -T \\ln Z$. The free energy difference is therefore:\n$$\n\\Delta A = A(U=U_{\\mathrm{WCA}}) - A(U=U_{\\mathrm{LJ}}) = -T \\ln Z_{1} - (-T \\ln Z_{0}) = -T \\ln\\left(\\frac{Z_{1}}{Z_{0}}\\right)\n$$\nHere, $Z_{0}$ and $Z_{1}$ are the configurational integrals for the system with potentials $U_{\\mathrm{LJ}}$ and $U_{\\mathrm{WCA}}$, respectively. The center-of-mass motion is separable and its contribution to the partition function cancels in the ratio, so we only consider the relative configurational integral over the separation $r$:\n$$\nZ = \\int_{0}^{R} e^{-U(r)/T} 4\\pi r^2 \\,dr\n$$\nThus, we must compute:\n$$\nZ_{0} = \\int_{0}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr\n$$\n$$\nZ_{1} = \\int_{0}^{R} e^{-U_{\\mathrm{WCA}}(r)/T} 4\\pi r^2 \\,dr\n$$\nThe potentials in reduced units are:\n$$\nU_{\\mathrm{LJ}}(r) = 4\\left(r^{-12} - r^{-6}\\right)\n$$\n$$\nU_{\\mathrm{WCA}}(r) = \n\\begin{cases}\nU_{\\mathrm{LJ}}(r) + 1, & r \\le r_{\\mathrm{c}} \\\\\n0, & r > r_{\\mathrm{c}}\n\\end{cases}\n$$\nwhere the cutoff is at the minimum of the LJ potential, $r_{\\mathrm{c}} = 2^{1/6}$.\n\nThe calculation strategy depends on the relationship between the confinement radius $R$ and the WCA cutoff $r_{\\mathrm{c}}$.\n\nFirst, we analyze the case where $R \\le r_{\\mathrm{c}}$. This condition applies to Test Case $5$. In this regime, the separation $r$ is always less than or equal to $r_{\\mathrm{c}}$. Therefore, for all accessible configurations, the WCA potential is $U_{\\mathrm{WCA}}(r) = U_{\\mathrm{LJ}}(r) + 1$. The partition function $Z_{1}$ becomes:\n$$\nZ_{1} = \\int_{0}^{R} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr = e^{-1/T} \\int_{0}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr = e^{-1/T}Z_{0}\n$$\nThe free energy difference is then analytically determined:\n$$\n\\Delta A = -T \\ln\\left(\\frac{Z_{1}}{Z_{0}}\\right) = -T \\ln\\left(\\frac{e^{-1/T}Z_{0}}{Z_{0}}\\right) = -T \\ln(e^{-1/T}) = -T \\left(-\\frac{1}{T}\\right) = 1\n$$\nFor any test case where $R \\le r_{\\mathrm{c}}$, $\\Delta A = 1$ in units of $\\varepsilon$.\n\nSecond, we analyze the case where $R > r_{\\mathrm{c}}$. This condition applies to Test Cases $1$, $2$, $3$, and $4$. The integrals for $Z_{0}$ and $Z_{1}$ must be split at $r=r_{\\mathrm{c}}$.\nFor $Z_{0}$, the integral is:\n$$\nZ_{0} = \\int_{0}^{r_{\\mathrm{c}}} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr + \\int_{r_{\\mathrm{c}}}^{R} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr\n$$\nLet us define these two numerical integrals as $I_{\\mathrm{LJ},1}$ and $I_{\\mathrm{LJ},2}$ respectively. So, $Z_{0} = I_{\\mathrm{LJ},1} + I_{\\mathrm{LJ},2}$.\n\nFor $Z_{1}$, the potential changes form at $r_{\\mathrm{c}}$:\n$$\nZ_{1} = \\int_{0}^{r_{\\mathrm{c}}} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr + \\int_{r_{\\mathrm{c}}}^{R} e^{-0/T} 4\\pi r^2 \\,dr\n$$\nThe first integral is related to $I_{\\mathrm{LJ},1}$:\n$$\n\\int_{0}^{r_{\\mathrm{c}}} e^{-(U_{\\mathrm{LJ}}(r)+1)/T} 4\\pi r^2 \\,dr = e^{-1/T} \\int_{0}^{r_{\\mathrm{c}}} e^{-U_{\\mathrm{LJ}}(r)/T} 4\\pi r^2 \\,dr = e^{-1/T} I_{\\mathrm{LJ},1}\n$$\nThe second integral is analytical, representing the volume of a spherical shell accessible to a non-interacting particle:\n$$\n\\int_{r_{\\mathrm{c}}}^{R} 4\\pi r^2 \\,dr = 4\\pi \\left[\\frac{r^3}{3}\\right]_{r_{\\mathrm{c}}}^{R} = \\frac{4\\pi}{3}(R^3 - r_{\\mathrm{c}}^3)\n$$\nLet us denote this volume term as $V_{\\text{shell}}$.\nThus, for $R > r_{\\mathrm{c}}$:\n$$\nZ_{1} = e^{-1/T} I_{\\mathrm{LJ},1} + V_{\\text{shell}}\n$$\nThe free energy difference is:\n$$\n\\Delta A = -T \\ln\\left(\\frac{e^{-1/T} I_{\\mathrm{LJ},1} + \\frac{4\\pi}{3}(R^3 - r_{\\mathrm{c}}^3)}{I_{\\mathrm{LJ},1} + I_{\\mathrm{LJ},2}}\\right)\n$$\nThe integrals $I_{\\mathrm{LJ},1}$ and $I_{\\mathrm{LJ},2}$ do not have analytical solutions and must be computed numerically. The integrand $f(r,T) = 4\\pi r^2 \\exp(-U_{\\mathrm{LJ}}(r)/T)$ is well-behaved, approaching $0$ as $r \\to 0$ due to the extreme repulsion of the $r^{-12}$ term dominating the potential, which makes the Boltzmann factor vanish. Standard numerical quadrature methods are sufficient for high-precision evaluation.\n\nThe computational procedure is as follows:\nFor each pair of parameters $(T, R)$:\n1.  Check if $R \\le r_{\\mathrm{c}}$. If so, the result is $\\Delta A = 1.0$.\n2.  If $R > r_{\\mathrm{c}}$, numerically compute the integrals $I_{\\mathrm{LJ},1} = \\int_{0}^{r_{\\mathrm{c}}} f(r,T) \\,dr$ and $I_{\\mathrm{LJ},2} = \\int_{r_{\\mathrm{c}}}^{R} f(r,T) \\,dr$.\n3.  Calculate $Z_0$ and $Z_1$ using the expressions derived above.\n4.  Compute $\\Delta A = -T \\ln(Z_1/Z_0)$.\n5.  The final results are rounded to $6$ decimal places.\nThis procedure will be implemented to solve for all specified test cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import integrate\n\ndef solve():\n    \"\"\"\n    Computes the free energy difference Delta A for the transformation\n    from a Lennard-Jones to a Weeks-Chandler-Andersen potential.\n    \"\"\"\n\n    # Define constants in reduced units\n    SIGMA = 1.0\n    EPSILON = 1.0\n    KB = 1.0\n    PI = np.pi\n    \n    # WCA cutoff radius (minimum of LJ potential)\n    R_C = 2**(1/6) * SIGMA\n\n    # Define the test cases (T_star, R)\n    test_cases = [\n        (1.0, 4.0),                      # Case 1\n        (0.5, 4.0),                      # Case 2\n        (2.0, 4.0),                      # Case 3\n        (1.0, 1.05 * R_C),               # Case 4\n        (1.0, 0.95 * R_C),               # Case 5\n    ]\n\n    results = []\n    for T_star, R in test_cases:\n        \n        # Case where R = r_c, result is analytical\n        if R = R_C:\n            delta_A = 1.0\n            results.append(delta_A)\n            continue\n\n        # Case where R > r_c, requires numerical integration\n\n        # Define the integrand for the LJ partition function integrals\n        def lj_integrand(r, T):\n            \"\"\"\n            Integrand for the configurational integral with LJ potential.\n            f(r, T) = 4 * pi * r^2 * exp(-U_LJ(r)/T)\n            \"\"\"\n            # Handle r=0 case to avoid division by zero\n            if r == 0:\n                return 0.0\n            \n            # Using r_inv to avoid repeated power calculations\n            r_inv = 1.0 / r\n            r_inv6 = r_inv**6\n            r_inv12 = r_inv6**2\n            \n            # Lennard-Jones potential in reduced units\n            u_lj = 4.0 * (r_inv12 - r_inv6)\n            \n            boltzmann_factor = np.exp(-u_lj / T)\n            \n            return 4.0 * PI * r**2 * boltzmann_factor\n\n        # Numerically compute the two parts of the Z_0 integral\n        # I_LJ_1 = integral from 0 to r_c\n        # I_LJ_2 = integral from r_c to R\n        try:\n            I_LJ_1, _ = integrate.quad(lj_integrand, 0, R_C, args=(T_star,))\n            I_LJ_2, _ = integrate.quad(lj_integrand, R_C, R, args=(T_star,))\n        except Exception as e:\n            # In case of integration failure which is not expected for these parameters\n            # Append a placeholder and print an error.\n            print(f\"Integration failed for case (T={T_star}, R={R}): {e}\")\n            results.append(np.nan)\n            continue\n\n        # Calculate Z_0 = I_LJ_1 + I_LJ_2\n        Z_0 = I_LJ_1 + I_LJ_2\n\n        # Calculate Z_1\n        # Part 1: Integral from 0 to r_c\n        z1_part1 = np.exp(-1.0 / T_star) * I_LJ_1\n        \n        # Part 2: Integral from r_c to R (analytical for U_WCA = 0)\n        # Volume of the spherical shell\n        V_shell = (4.0 * PI / 3.0) * (R**3 - R_C**3)\n        \n        Z_1 = z1_part1 + V_shell\n        \n        # Check for non-positive arguments to log which might arise from numerical error\n        if Z_0 = 0 or Z_1 = 0:\n            delta_A = np.nan # Or handle as an error\n        else:\n            delta_A = -T_star * np.log(Z_1 / Z_0)\n        \n        results.append(delta_A)\n\n    # Format output as a string with 6 decimal places per result\n    formatted_results = [\"{:.6f}\".format(r) for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2466007"}, {"introduction": "A successful computation yields not just a number, but also an estimate of its uncertainty. This final exercise delves into the practical art of designing an efficient TI calculation by analyzing its sources of error. You will explore the fundamental trade-off between systematic error (bias), which arises from the number of discrete $\\lambda$ points, and statistical error (variance), which comes from finite sampling time, learning how to optimize your computational budget for the most reliable result [@problem_id:2465970].", "problem": "You are studying Thermodynamic Integration (TI) in computational chemistry. The free energy difference between two states coupled by a dimensionless alchemical parameter is given by the fundamental definition\n$$\n\\Delta F \\;=\\; \\int_{0}^{1} g(\\lambda)\\, d\\lambda,\n$$\nwhere $g(\\lambda) = \\langle \\partial U / \\partial \\lambda \\rangle_{\\lambda}$ is the equilibrium ensemble average of the derivative of the potential energy with respect to the coupling parameter $\\lambda$. In a numerical experiment, you approximate the integral using the composite trapezoidal rule on a uniform grid of $N$ points with spacing $h = 1/(N-1)$ and weights $w_0 = w_{N-1} = h/2$, $w_i = h$ for $i = 1,\\dots,N-2$. At each grid point $\\lambda_i = i/(N-1)$, you run an independent molecular dynamics simulation of duration $t$ to estimate $g(\\lambda_i)$ by time averaging. Assume the following idealized but standard model for the statistical uncertainty: the time-average estimator at each $\\lambda_i$ is unbiased for the true $g(\\lambda_i)$ and has variance\n$$\n\\mathrm{Var}\\big(\\widehat{g}(\\lambda_i)\\big) \\;=\\; \\frac{\\alpha(\\lambda_i)}{t},\n$$\nwith independence across different $\\lambda$ points because the simulations are independent. This functional form follows from the Central Limit Theorem for stationary correlated processes and the notion of integrated autocorrelation time absorbed into the function $\\alpha(\\lambda)$.\n\nFor this problem, consider a smooth, physically plausible observable\n$$\ng(\\lambda) \\;=\\; a \\;+\\; b\\,\\lambda \\;+\\; c\\,\\sin(\\pi \\lambda),\n$$\nwhere the argument of the sine is in radians, and constants $a$, $b$, and $c$ are in $\\mathrm{kJ/mol}$. The simulation-time-dependent variance prefactor is\n$$\n\\alpha(\\lambda) \\;=\\; \\alpha_0\\left(1 + p \\,\\sin^2(\\pi \\lambda)\\right),\n$$\nwith $\\alpha_0$ in $(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns}$ and $p$ dimensionless. You will use the composite trapezoidal rule estimator\n$$\n\\widehat{\\Delta F} \\;=\\; \\sum_{i=0}^{N-1} w_i\\,\\widehat{g}(\\lambda_i).\n$$\nDefine the bias as the difference between the expected value of the numerical quadrature applied to the exact $g(\\lambda)$ and the true integral,\n$$\n\\mathrm{bias} \\;=\\; \\left(\\sum_{i=0}^{N-1} w_i\\, g(\\lambda_i)\\right) - \\int_{0}^{1} g(\\lambda)\\, d\\lambda,\n$$\nand the variance of the estimator by propagation of variances through the weighted sum with independence across $\\lambda$,\n$$\n\\mathrm{Var}(\\widehat{\\Delta F}) \\;=\\; \\sum_{i=0}^{N-1} w_i^2\\, \\mathrm{Var}\\big(\\widehat{g}(\\lambda_i)\\big).\n$$\nThe mean-squared error is then\n$$\n\\mathrm{MSE} \\;=\\; \\mathrm{bias}^2 \\;+\\; \\mathrm{Var}(\\widehat{\\Delta F}),\n$$\nand the root-mean-squared error (RMSE) is $\\mathrm{RMSE} = \\sqrt{\\mathrm{MSE}}$.\n\nUse the fixed model parameters\n$$\na = 3.0,\\quad b = 2.0,\\quad c = 4.0\\quad \\text{in }\\mathrm{kJ/mol},\\qquad \\alpha_0 = 1.0\\ \\text{in }(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns},\\quad p = 4.0.\n$$\nAll simulation times must be treated in $\\mathrm{ns}$ (nanoseconds), and the final RMSE must be expressed in $\\mathrm{kJ/mol}$.\n\nImplement a program that, for each test case $(N,t)$ below, computes the expected $\\mathrm{RMSE}$ by:\n- computing the true integral $\\int_{0}^{1} g(\\lambda)\\, d\\lambda$ exactly,\n- computing the composite trapezoidal rule applied to the exact $g(\\lambda)$ on the uniform grid to obtain the expected estimator and thus the bias,\n- computing the variance using the weights and the variance model with independence across $\\lambda$,\n- combining these to obtain the $\\mathrm{RMSE}$.\n\nTest suite (grid sizes $N$ and per-$\\lambda$ simulation durations $t$ in $\\mathrm{ns}$):\n- Case $1$: $N=5$, $t=5.0$.\n- Case $2$: $N=11$, $t=2.0$.\n- Case $3$: $N=3$, $t=20.0$.\n- Case $4$: $N=2$, $t=50.0$.\n- Case $5$: $N=21$, $t=0.5$.\n\nAngle units: the sine function uses radians.\n\nYour program should produce a single line of output containing the $\\mathrm{RMSE}$ results, in $\\mathrm{kJ/mol}$, rounded to $6$ decimal places, as a comma-separated list enclosed in square brackets, for example $[x_1,x_2,x_3,x_4,x_5]$.", "solution": "The problem is well-posed and scientifically sound, representing a standard exercise in the error analysis of thermodynamic integration calculations. The objective is to compute the expected Root-Mean-Squared Error ($\\mathrm{RMSE}$) for a free energy difference, $\\Delta F$, estimated via a numerical procedure. The $\\mathrm{RMSE}$ is a comprehensive measure of an estimator's quality, defined as the square root of the Mean-Squared Error ($\\mathrm{MSE}$), which additively combines the squared bias and the variance:\n$$\n\\mathrm{RMSE} \\;=\\; \\sqrt{\\mathrm{MSE}} \\;=\\; \\sqrt{\\mathrm{bias}^2 \\;+\\; \\mathrm{Var}(\\widehat{\\Delta F})}\n$$\nHere, $\\widehat{\\Delta F}$ is the estimator for the free energy difference, $\\mathrm{bias}$ is its systematic error, and $\\mathrm{Var}(\\widehat{\\Delta F})$ is its statistical variance. The calculation must be performed for several test cases, each defined by a number of grid points, $N$, and a simulation time per grid point, $t$. The model system is defined by fixed parameters: $a = 3.0\\,\\mathrm{kJ/mol}$, $b = 2.0\\,\\mathrm{kJ/mol}$, $c = 4.0\\,\\mathrm{kJ/mol}$, $\\alpha_0 = 1.0\\,(\\mathrm{kJ/mol})^2\\cdot \\mathrm{ns}$, and $p = 4.0$. My analysis proceeds in two main steps: calculating the bias and calculating the variance.\n\nFirst, the bias of the estimator is determined. It is defined as the difference between the expected value of the estimator and the true value of the quantity being estimated:\n$$\n\\mathrm{bias} \\;=\\; E[\\widehat{\\Delta F}] \\;-\\; \\Delta F_{\\text{true}}\n$$\nThe true free energy difference, $\\Delta F_{\\text{true}}$, is found by analytically integrating the given function $g(\\lambda) = a + b\\lambda + c\\sin(\\pi\\lambda)$ over the interval $\\lambda \\in [0, 1]$:\n$$\n\\Delta F_{\\text{true}} \\;=\\; \\int_{0}^{1} g(\\lambda)\\, d\\lambda \\;=\\; \\int_{0}^{1} \\left(a + b\\lambda + c\\sin(\\pi \\lambda)\\right)\\, d\\lambda\n$$\nThe integral evaluates to:\n$$\n\\Delta F_{\\text{true}} \\;=\\; \\left[a\\lambda + \\frac{b\\lambda^2}{2} - \\frac{c}{\\pi}\\cos(\\pi\\lambda)\\right]_0^1 \\;=\\; \\left(a + \\frac{b}{2} - \\frac{c}{\\pi}\\cos(\\pi)\\right) - \\left(0 + 0 - \\frac{c}{\\pi}\\cos(0)\\right)\n$$\n$$\n\\Delta F_{\\text{true}} \\;=\\; a + \\frac{b}{2} - \\frac{c}{\\pi}(-1) + \\frac{c}{\\pi}(1) \\;=\\; a + \\frac{b}{2} + \\frac{2c}{\\pi}\n$$\nThe expected value of the estimator, $E[\\widehat{\\Delta F}]$, corresponds to the numerical approximation of the integral using the composite trapezoidal rule on the exact function $g(\\lambda)$. This follows because the local estimator $\\widehat{g}(\\lambda_i)$ is unbiased, meaning $E[\\widehat{g}(\\lambda_i)] = g(\\lambda_i)$. Therefore:\n$$\nE[\\widehat{\\Delta F}] \\;=\\; E\\left[\\sum_{i=0}^{N-1} w_i \\widehat{g}(\\lambda_i)\\right] \\;=\\; \\sum_{i=0}^{N-1} w_i E[\\widehat{g}(\\lambda_i)] \\;=\\; \\sum_{i=0}^{N-1} w_i g(\\lambda_i)\n$$\nThis sum is computed over a uniform grid of $N$ points, $\\lambda_i = i/(N-1)$ for $i \\in \\{0, 1, \\dots, N-1\\}$. The grid spacing is $h = 1/(N-1)$, and the trapezoidal weights are $w_i = h$ for interior points ($i \\in \\{1, \\dots, N-2\\}$) and $w_0 = w_{N-1} = h/2$ for the endpoints. The bias is thus entirely the result of the discretization error of the trapezoidal rule for the function $g(\\lambda)$.\n\nSecond, the variance of the estimator, $\\mathrm{Var}(\\widehat{\\Delta F})$, is determined. As the simulations at different $\\lambda_i$ points are specified to be independent, the variance of the weighted sum is simply the weighted sum of the individual variances:\n$$\n\\mathrm{Var}(\\widehat{\\Delta F}) \\;=\\; \\mathrm{Var}\\left(\\sum_{i=0}^{N-1} w_i \\widehat{g}(\\lambda_i)\\right) \\;=\\; \\sum_{i=0}^{N-1} w_i^2 \\mathrm{Var}(\\widehat{g}(\\lambda_i))\n$$\nThe problem specifies a physically plausible model for the variance of the local estimator $\\widehat{g}(\\lambda_i)$:\n$$\n\\mathrm{Var}(\\widehat{g}(\\lambda_i)) \\;=\\; \\frac{\\alpha(\\lambda_i)}{t}\n$$\nwhere $t$ is the simulation time and the variance prefactor is $\\alpha(\\lambda) = \\alpha_0(1 + p\\sin^2(\\pi\\lambda))$. Substituting this into the expression for $\\mathrm{Var}(\\widehat{\\Delta F})$ yields:\n$$\n\\mathrm{Var}(\\widehat{\\Delta F}) \\;=\\; \\sum_{i=0}^{N-1} w_i^2 \\frac{\\alpha_0(1 + p\\sin^2(\\pi\\lambda_i))}{t} \\;=\\; \\frac{\\alpha_0}{t} \\sum_{i=0}^{N-1} w_i^2 \\left(1 + p\\sin^2(\\pi\\lambda_i)\\right)\n$$\nThis sum is evaluated over the same uniform grid of $\\lambda_i$ points.\n\nFinally, with both bias and variance terms expressed mathematically, the $\\mathrm{RMSE}$ for a given test case $(N, t)$ is assembled as:\n$$\n\\mathrm{RMSE}(N, t) \\;=\\; \\sqrt{\\left(\\left(\\sum_{i=0}^{N-1} w_i g(\\lambda_i)\\right) - \\left(a + \\frac{b}{2} + \\frac{2c}{\\pi}\\right)\\right)^2 + \\frac{\\alpha_0}{t} \\sum_{i=0}^{N-1} w_i^2 \\left(1 + p\\sin^2(\\pi\\lambda_i)\\right)}\n$$\nThe provided code implements this formula. It iterates through each test case, calculates the true integral, the numerical integral, the bias, and the total variance, and combines them to obtain the final $\\mathrm{RMSE}$.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the expected Root-Mean-Squared Error (RMSE) for a set of\n    Thermodynamic Integration (TI) test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (Number of grid points N, simulation time t in ns)\n        (5, 5.0),\n        (11, 2.0),\n        (3, 20.0),\n        (2, 50.0),\n        (21, 0.5)\n    ]\n    \n    # Fixed model parameters\n    a = 3.0        # kJ/mol\n    b = 2.0        # kJ/mol\n    c = 4.0        # kJ/mol\n    alpha_0 = 1.0  # (kJ/mol)^2 * ns\n    p = 4.0        # dimensionless\n\n    results = []\n    \n    for N, t in test_cases:\n        # Step 1: Compute the true integral (analytical solution)\n        # delta_F_true = integral from 0 to 1 of (a + b*lambda + c*sin(pi*lambda)) d(lambda)\n        # = a + b/2 + 2*c/pi\n        delta_F_true = a + b / 2.0 + (2.0 * c) / np.pi\n\n        # Step 2: Compute the numerical integral and the resulting bias\n        # The problem statement implies N = 2, which is true for all test cases.\n        # h = 1/(N-1) is therefore well-defined.\n        h = 1.0 / (N - 1)\n        lambdas = np.linspace(0.0, 1.0, N)\n\n        # Evaluate g(lambda) on the grid\n        g_vals = a + b * lambdas + c * np.sin(np.pi * lambdas)\n\n        # Define composite trapezoidal rule weights\n        weights = np.full(N, h)\n        if N  1:\n            weights[0] = h / 2.0\n            weights[-1] = h / 2.0\n        # This handles the N=2 case correctly as weights[0] and weights[-1] are distinct indices.\n        \n        # Calculate the numerical integral using the trapezoidal rule\n        delta_F_num = np.sum(weights * g_vals)\n        \n        # Bias is the difference between the numerical and true integrals\n        bias = delta_F_num - delta_F_true\n\n        # Step 3: Compute the variance of the TI estimator\n        # Evaluate alpha(lambda) on the grid\n        alpha_vals = alpha_0 * (1.0 + p * np.sin(np.pi * lambdas)**2)\n\n        # Variance of the point estimator g_hat at each lambda\n        var_g_hat = alpha_vals / t\n\n        # Total variance of the TI estimator by propagation of errors\n        var_delta_F = np.sum(weights**2 * var_g_hat)\n\n        # Step 4: Combine bias and variance to get MSE and RMSE\n        mse = bias**2 + var_delta_F\n        rmse = np.sqrt(mse)\n        \n        results.append(rmse)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2465970"}]}