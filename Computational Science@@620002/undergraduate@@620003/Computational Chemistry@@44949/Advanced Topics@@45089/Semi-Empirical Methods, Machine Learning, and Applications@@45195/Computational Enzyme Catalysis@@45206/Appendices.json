{"hands_on_practices": [{"introduction": "A central goal in computational enzyme catalysis is to predict whether a particular arrangement of a substrate in an active site is kinetically viable. This practice will guide you through this process using a simplified but powerful Empirical Valence Bond (EVB) model, which is a common approach in QM/MM simulations. By constructing the potential energy surface for the reaction, you will learn to identify the reactant, product, and transition states, calculate the activation energy barrier, and ultimately predict the turnover rate using Transition State Theory, providing a direct link between a molecular model and experimental kinetics [@problem_id:2452864].", "problem": "You are asked to write a complete program that evaluates whether a proposed substrate binding pose in an enzyme active site is kinetically competent for catalysis within a simplified Quantum Mechanics/Molecular Mechanics (QM/MM) framework. The goal is to decide, for several parameter sets representing different poses, if the computed turnover rate is at least a specified threshold, using a principled model derived from quantum mechanics and transition state theory.\n\nAssume the following physical and modeling principles as the fundamental base:\n\n- The Born–Oppenheimer approximation states that electronic and nuclear motions can be separated. The reactive electronic energy along a reaction coordinate $x$ can be modeled with an Empirical Valence Bond (EVB) two-state Hamiltonian that approximates QM/MM energies as a $2 \\times 2$ matrix with diabatic states representing reactant-like and product-like configurations embedded in a fixed Molecular Mechanics (MM) environment.\n- The diabatic potential energies are defined as\n  $$U_1(x) = \\tfrac{1}{2} k_1 (x - x_1)^2 + s_1 (x - x_{\\mathrm{ref}}) + c_1,$$\n  $$U_2(x) = \\Delta_0 + \\tfrac{1}{2} k_2 (x - x_2)^2 + s_2 (x - x_{\\mathrm{ref}}) + c_2,$$\n  where $x$ is the one-dimensional reaction coordinate in $\\mathrm{\\AA}$, $k_1$ and $k_2$ are harmonic curvatures in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_1$ and $x_2$ are diabatic minima locations in $\\mathrm{\\AA}$, $s_1$ and $s_2$ are linear coupling terms in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$ modeling environment polarization along $x$, $x_{\\mathrm{ref}}$ is a reference position in $\\mathrm{\\AA}$, $c_1$ and $c_2$ are constant offsets in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, and $\\Delta_0$ is an environment-shifted diabatic offset in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$. The constant diabatic coupling is $V$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\n- The adiabatic lower surface $E_{-}(x)$, representing the Born–Oppenheimer ground-state potential along $x$, is the lower eigenvalue of the Hamiltonian\n  $$\\mathbf{H}(x) = \\begin{pmatrix} U_1(x) & V \\\\ V & U_2(x) \\end{pmatrix},$$\n  which is given by\n  $$E_{-}(x) = \\tfrac{1}{2}\\left[U_1(x) + U_2(x) - \\sqrt{\\left(U_1(x) - U_2(x)\\right)^2 + 4 V^2}\\right].$$\n- The activation free energy $\\Delta G^{\\ddagger}$ is approximated as the energy difference on the adiabatic surface between the transition state at position $x^{\\ddagger}$ (the local maximum between reactant and product minima) and the reactant minimum at $x_{\\mathrm{R}}$, both along $E_{-}(x)$:\n  $$\\Delta G^{\\ddagger} = E_{-}(x^{\\ddagger}) - E_{-}(x_{\\mathrm{R}}).$$\n- Transition State Theory (TST), specifically the Eyring equation, gives the turnover rate constant $k$ as\n  $$k = \\frac{k_{\\mathrm{B}} T}{h} \\exp\\!\\left(-\\frac{\\Delta G^{\\ddagger}}{R T}\\right),$$\n  where $k_{\\mathrm{B}}$ is the Boltzmann constant, $h$ is the Planck constant, $R$ is the gas constant, and $T$ is the absolute temperature. Use $R$ in $\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ and ensure unit consistency by converting $\\Delta G^{\\ddagger}$ from $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ to $\\mathrm{J}\\,\\mathrm{mol}^{-1}$ where needed.\n\nYour program must:\n\n- For each parameter set, numerically evaluate $E_{-}(x)$ on a uniform grid in $x$ spanning from $x_{\\min} = \\min(x_1, x_2) - \\delta$ to $x_{\\max} = \\max(x_1, x_2) + \\delta$ with $\\delta = 0.3\\,\\mathrm{\\AA}$, locate the reactant minimum $x_{\\mathrm{R}}$ to the left of the midpoint $x_{\\mathrm{mid}} = \\tfrac{1}{2}(x_1 + x_2)$, locate the product minimum to the right of $x_{\\mathrm{mid}}$, then identify the maximum between these minima to obtain $x^{\\ddagger}$.\n- Compute $\\Delta G^{\\ddagger}$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, then compute $k$ in $\\mathrm{s}^{-1}$ using the Eyring equation at the specified $T$.\n- Decide kinetic competence by checking whether $k \\ge k_{\\mathrm{thr}}$, where $k_{\\mathrm{thr}}$ is a specified threshold in $\\mathrm{s}^{-1}$.\n- Return a boolean result for each test case.\n\nUse the following constants and units:\n\n- $k_{\\mathrm{B}} = 1.380649 \\times 10^{-23}\\,\\mathrm{J}\\,\\mathrm{K}^{-1}$, $h = 6.62607015 \\times 10^{-34}\\,\\mathrm{J}\\,\\mathrm{s}$, $R = 8.314462618\\,\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$.\n- Temperature $T$ is in $\\mathrm{K}$.\n- Reaction coordinate $x$ is in $\\mathrm{\\AA}$.\n- Energies $U_1$, $U_2$, $V$, $\\Delta_0$, $c_1$, $c_2$, and $\\Delta G^{\\ddagger}$ are in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\n- The rate constant $k$ and threshold $k_{\\mathrm{thr}}$ are in $\\mathrm{s}^{-1}$.\n\nTest suite (three cases designed to probe a typical competent pose, an incompetent high-barrier pose for a new binding mode, and a borderline case):\n\n- Case $1$ (competent canonical-like pose):\n  - $k_1 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_1 = 2.4\\,\\mathrm{\\AA}$,\n  - $k_2 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_2 = 1.4\\,\\mathrm{\\AA}$,\n  - $\\Delta_0 = 5.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $V = 2.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $s_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$, $s_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$,\n  - $c_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $c_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $x_{\\mathrm{ref}} = 2.0\\,\\mathrm{\\AA}$, $T = 300.0\\,\\mathrm{K}$, $k_{\\mathrm{thr}} = 10.0\\,\\mathrm{s}^{-1}$.\n- Case $2$ (new pose with higher barrier, expected incompetent):\n  - $k_1 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_1 = 2.4\\,\\mathrm{\\AA}$,\n  - $k_2 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_2 = 1.4\\,\\mathrm{\\AA}$,\n  - $\\Delta_0 = 20.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $V = 2.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $s_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$, $s_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$,\n  - $c_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $c_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $x_{\\mathrm{ref}} = 2.0\\,\\mathrm{\\AA}$, $T = 300.0\\,\\mathrm{K}$, $k_{\\mathrm{thr}} = 10.0\\,\\mathrm{s}^{-1}$.\n- Case $3$ (borderline new pose, near threshold):\n  - $k_1 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_1 = 2.4\\,\\mathrm{\\AA}$,\n  - $k_2 = 500.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-2}$, $x_2 = 1.4\\,\\mathrm{\\AA}$,\n  - $\\Delta_0 = 12.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $V = 2.4\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $s_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$, $s_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{\\AA}^{-1}$,\n  - $c_1 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, $c_2 = 0.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$,\n  - $x_{\\mathrm{ref}} = 2.0\\,\\mathrm{\\AA}$, $T = 300.0\\,\\mathrm{K}$, $k_{\\mathrm{thr}} = 10.0\\,\\mathrm{s}^{-1}$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[True,False,True]\"). Each element must be a boolean indicating whether the corresponding case is kinetically competent ($\\mathrm{True}$ if $k \\ge k_{\\mathrm{thr}}$, otherwise $\\mathrm{False}$). There must be no extra text before or after this line. No user input is required. All computations should be deterministic.", "solution": "The problem presented is a standard, well-defined exercise in computational chemical kinetics, specifically within the framework of simplified Quantum Mechanics/Molecular Mechanics (QM/MM) modeling using the Empirical Valence Bond (EVB) method. The task is to evaluate the kinetic competence of a substrate binding pose by calculating the enzymatic turnover rate and comparing it against a given threshold. The problem is scientifically grounded, logically consistent, and provides all necessary information for a deterministic solution. Therefore, we proceed with the analysis.\n\nThe solution is constructed by following a rigorous, step-by-step application of the physical and mathematical principles outlined in the problem statement.\n\nFirst, we define the one-dimensional reactive potential energy surface. The system is described by two diabatic states, representing reactant-like and product-like electronic configurations. Their potential energies, $U_1(x)$ and $U_2(x)$, are given as functions of a generalized reaction coordinate $x$. These are defined as:\n$$U_1(x) = \\tfrac{1}{2} k_1 (x - x_1)^2 + s_1 (x - x_{\\mathrm{ref}}) + c_1$$\n$$U_2(x) = \\Delta_0 + \\tfrac{1}{2} k_2 (x - x_2)^2 + s_2 (x - x_{\\mathrm{ref}}) + c_2$$\nHere, $k_1$ and $k_2$ are force constants, $x_1$ and $x_2$ are the positions of the diabatic minima, $\\Delta_0$ is a diabatic energy offset, and the terms involving $s_1$, $s_2$, $c_1$, and $c_2$ account for environmental effects and energy shifts. These two states are coupled by a constant off-diagonal term, $V$.\n\nThe Born-Oppenheimer ground-state potential energy surface, denoted as the lower adiabatic surface $E_{-}(x)$, is obtained from the lower eigenvalue of the $2 \\times 2$ EVB Hamiltonian matrix:\n$$\\mathbf{H}(x) = \\begin{pmatrix} U_1(x) & V \\\\ V & U_2(x) \\end{pmatrix}$$\nThe analytical expression for this eigenvalue is provided:\n$$E_{-}(x) = \\tfrac{1}{2}\\left[U_1(x) + U_2(x) - \\sqrt{\\left(U_1(x) - U_2(x)\\right)^2 + 4 V^2}\\right]$$\n\nThe core of the computational task is to analyze the topology of this adiabatic surface $E_{-}(x)$. We must numerically evaluate this function over a specified range of the reaction coordinate, from $x_{\\min} = \\min(x_1, x_2) - \\delta$ to $x_{\\max} = \\max(x_1, x_2) + \\delta$, where $\\delta = 0.3\\,\\mathrm{\\AA}$. To ensure accuracy, we discretize this range into a fine, uniform grid of points.\n\nOn this numerical representation of $E_{-}(x)$, we must identify the critical points: the reactant state minimum, the product state minimum, and the transition state maximum that separates them. Following the problem's convention, the reactant region is defined to be to the left of the midpoint $x_{\\mathrm{mid}} = \\tfrac{1}{2}(x_1 + x_2)$, and the product region is to the right. We locate the position of the reactant minimum, $x_{\\mathrm{R}}$, by finding the point of minimum energy in the reactant region of the grid. Similarly, we find the product minimum, $x_{\\mathrm{P}}$. The transition state, at position $x^{\\ddagger}$, corresponds to the point of maximum energy on the path connecting $x_{\\mathrm{R}}$ and $x_{\\mathrm{P}}$.\n\nWith these points identified, we calculate the activation free energy, $\\Delta G^{\\ddagger}$. Within this model, it is approximated as the potential energy difference between the transition state and the reactant state:\n$$\\Delta G^{\\ddagger} = E_{-}(x^{\\ddagger}) - E_{-}(x_{\\mathrm{R}})$$\nThe units for this energy are $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\n\nFinally, we apply Transition State Theory (TST) via the Eyring equation to compute the turnover rate constant, $k$:\n$$k = \\frac{k_{\\mathrm{B}} T}{h} \\exp\\!\\left(-\\frac{\\Delta G^{\\ddagger}}{R T}\\right)$$\nHere, $k_{\\mathrm{B}}$ is the Boltzmann constant, $h$ is the Planck constant, $T$ is the absolute temperature, and $R$ is the ideal gas constant. It is critical to maintain unit consistency. Since $R$ is given in $\\mathrm{J}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$, we must convert $\\Delta G^{\\ddagger}$ from $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ to $\\mathrm{J}\\,\\mathrm{mol}^{-1}$ by multiplying by $1000$.\n\nThe kinetic competence of the substrate pose is determined by a simple Boolean condition: the pose is deemed competent if its calculated rate constant $k$ is greater than or equal to the specified threshold rate $k_{\\mathrm{thr}}$. The program will implement this entire procedure for each of the three test cases provided, generating a list of Boolean results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the computational enzyme catalysis problem for a set of test cases.\n    \"\"\"\n\n    # Physical constants\n    KB = 1.380649e-23  # Boltzmann constant in J/K\n    H = 6.62607015e-34   # Planck constant in J*s\n    R = 8.314462618     # Gas constant in J/(mol*K)\n\n    def is_kinetically_competent(params):\n        \"\"\"\n        Evaluates a single parameter set for kinetic competence.\n\n        Args:\n            params (tuple): A tuple containing all parameters for a single case.\n\n        Returns:\n            bool: True if k >= k_thr, False otherwise.\n        \"\"\"\n        k1, x1, k2, x2, delta0, V, s1, s2, c1, c2, x_ref, T, k_thr = params\n\n        # Set up the reaction coordinate grid\n        delta = 0.3\n        x_min = min(x1, x2) - delta\n        x_max = max(x1, x2) + delta\n        # Use a high-resolution grid for numerical accuracy\n        num_points = 20000\n        x_grid = np.linspace(x_min, x_max, num_points)\n\n        # Calculate diabatic potential energies U1(x) and U2(x)\n        U1 = 0.5 * k1 * (x_grid - x1)**2 + s1 * (x_grid - x_ref) + c1\n        U2 = delta0 + 0.5 * k2 * (x_grid - x2)**2 + s2 * (x_grid - x_ref) + c2\n\n        # Calculate the adiabatic ground-state potential energy surface E_(x)\n        E_minus = 0.5 * (U1 + U2 - np.sqrt((U1 - U2)**2 + 4 * V**2))\n\n        # Partition the grid into reactant and product regions\n        x_mid = 0.5 * (x1 + x2)\n        mid_idx = np.abs(x_grid - x_mid).argmin()\n\n        # Locate the reactant minimum (left of midpoint)\n        reactant_E_slice = E_minus[:mid_idx]\n        reactant_x_slice = x_grid[:mid_idx]\n        reactant_min_idx_local = np.argmin(reactant_E_slice)\n        E_R = reactant_E_slice[reactant_min_idx_local]\n        reactant_min_idx_global = reactant_min_idx_local\n        \n        # Locate the product minimum (right of midpoint)\n        product_E_slice = E_minus[mid_idx:]\n        product_min_idx_local = np.argmin(product_E_slice)\n        product_min_idx_global = mid_idx + product_min_idx_local\n\n        # Locate the transition state as the maximum between the two minima\n        # Ensure the slice indices are in the correct order\n        start_idx = min(reactant_min_idx_global, product_min_idx_global)\n        end_idx = max(reactant_min_idx_global, product_min_idx_global)\n\n        ts_E_slice = E_minus[start_idx : end_idx + 1]\n        \n        # Avoid issues with empty slices if minima are adjacent\n        if ts_E_slice.size == 0:\n            # If there's no barrier, reaction is extremely fast.\n            # This case won't be triggered by the provided parameters.\n            return True \n            \n        ts_max_idx_local = np.argmax(ts_E_slice)\n        E_TS = ts_E_slice[ts_max_idx_local]\n\n        # Calculate activation energy in kJ/mol\n        delta_G_ddagger_kjmol = E_TS - E_R\n\n        # Convert activation energy to J/mol for the Eyring equation\n        delta_G_ddagger_jmol = delta_G_ddagger_kjmol * 1000.0\n\n        # Calculate the rate constant k using the Eyring equation\n        k = (KB * T / H) * np.exp(-delta_G_ddagger_jmol / (R * T))\n\n        # Compare with the threshold\n        return k >= k_thr\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1 (competent canonical-like pose)\n        (500.0, 2.4, 500.0, 1.4, 5.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 300.0, 10.0),\n        # Case 2 (new pose with higher barrier, expected incompetent)\n        (500.0, 2.4, 500.0, 1.4, 20.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 300.0, 10.0),\n        # Case 3 (borderline new pose, near threshold)\n        (500.0, 2.4, 500.0, 1.4, 12.0, 2.4, 0.0, 0.0, 0.0, 0.0, 2.0, 300.0, 10.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        result = is_kinetically_competent(case)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452864"}, {"introduction": "Enzyme-catalyzed reactions are not isolated events; they are exquisitely sensitive to their chemical environment, particularly the ambient $\\mathrm{pH}$. This exercise delves into this complexity by modeling how the enzyme's electrostatic field modulates the protonation state of a key catalytic residue. You will implement a multi-step workflow that first predicts the effective $\\mathrm{p}K_a$ of a histidine, determines its catalytically active population at a given $\\mathrm{pH}$, and then calculates the overall activation free energy, demonstrating how pre-equilibrium and the intrinsic reaction barrier combine to determine the observed rate [@problem_id:2452903].", "problem": "You are asked to write a complete, runnable program that models a coupled protonation-state and Quantum Mechanics/Molecular Mechanics (QM/MM) activation free energy for a proton transfer step catalyzed by a histidine residue in an enzyme active site. The program must, for each test case, first estimate the effective acid dissociation constant ($\\mathrm{p}K_a$) of the histidine using an electrostatic shift model analogous to what is used in structure-based predictors, then compute the histidine protonation fraction at $\\mathrm{pH}$ $7$, and finally use this information to compute a one-dimensional activation free energy for a proton transfer reaction using a two-state harmonic (Marcus-type) approximation embedded in a dielectric environment. The final results to report are the total activation free energies in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ for the provided test cases, rounded to three decimals, printed as a single line list in the required format.\n\nBegin from the following physically grounded definitions and relations.\n\n- Coulomb electrostatic potential at a site due to a single point charge: use the molecular simulation convention\n  $$\\phi = \\dfrac{k_e\\,q_{\\text{env}}}{\\varepsilon_r\\,r},$$\n  where $\\phi$ is the electrostatic potential at the site in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{e}^{-1}$, $k_e = 138.935458$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}\\,\\mathrm{e}^{-2}$ is the electrostatic constant in convenient units, $q_{\\text{env}}$ is the environmental point charge in elementary charge units ($\\mathrm{e}$), $\\varepsilon_r$ is the relative dielectric constant (dimensionless), and $r$ is the separation in $\\mathrm{nm}$.\n- Relation between deprotonation free energy and $\\mathrm{p}K_a$: if $\\Delta G_{\\text{deprot}}$ is the standard-state deprotonation free energy in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, then\n  $$\\Delta G_{\\text{deprot}} = R\\,T\\,\\ln(10)\\,\\mathrm{p}K_a,$$\n  where $R$ is the gas constant in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ and $T$ is the absolute temperature in $\\mathrm{K}$.\n- Electrostatic shift of $\\mathrm{p}K_a$ for a site that changes charge by $+\\!1$ upon protonation (histidine going from neutral to $\\mathrm{HisH}^{+}$): the change in deprotonation free energy induced by the environment is $\\Delta G_{\\text{deprot,env}} = -\\phi$, so the effective $\\mathrm{p}K_a$ at the site is\n  $$\\mathrm{p}K_{a,\\text{eff}} = \\mathrm{p}K_{a,\\text{model}} - \\dfrac{\\phi}{R\\,T\\,\\ln(10)}.$$\n- Henderson–Hasselbalch relation for the fraction of the acid form (protonated histidine) at a given $\\mathrm{pH}$:\n  $$f_{\\text{prot}} = \\dfrac{1}{1 + 10^{\\mathrm{pH} - \\mathrm{p}K_{a,\\text{eff}}}}.$$\n- Reaction standard free energy for a proton transfer from donor (histidine) to acceptor (substrate) in terms of their effective acidities:\n  $$\\Delta G^\\circ = R\\,T\\,\\ln(10)\\,\\left(\\mathrm{p}K_{a,\\text{donor,eff}} - \\mathrm{p}K_{a,\\text{acceptor,eff}}\\right).$$\n- Two-state harmonic (Marcus-type) activation free energy for a nuclear transfer with equal curvature parabolas and reorganization free energy $\\lambda$:\n  $$\\Delta G^\\ddagger_{\\text{intrinsic}} = \\dfrac{\\lambda}{4}\\left(1 + \\dfrac{\\Delta G^\\circ}{\\lambda}\\right)^2.$$\n- Population gating penalty because only the protonated histidine initiates transfer: if the observable rate is proportional to $f_{\\text{prot}}$ times the intrinsic rate, then in free-energy terms\n  $$\\Delta G^\\ddagger_{\\text{pop}} = -R\\,T\\,\\ln\\left(f_{\\text{prot}}\\right).$$\n- The total effective activation free energy is\n  $$\\Delta G^\\ddagger_{\\text{eff}} = \\Delta G^\\ddagger_{\\text{intrinsic}} + \\Delta G^\\ddagger_{\\text{pop}}.$$\n\nProgram requirements.\n\n- Implement the above equations precisely. Use $R = 8.314462618\\times 10^{-3}$ $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ and compute $T$ and $\\ln(10)$ numerically as specified per test case and definition. All energies must be computed and returned in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$. All distances are in $\\mathrm{nm}$. All charges are in elementary charge units. All dielectric constants are dimensionless. Angles do not appear.\n- For each test case:\n  1. Compute the electrostatic potential $\\phi_{\\text{His}}$ at the histidine site and $\\phi_{\\text{Acc}}$ at the acceptor site from the same environmental charge.\n  2. Compute $\\mathrm{p}K_{a,\\text{His,eff}}$ and $\\mathrm{p}K_{a,\\text{Acc,eff}}$ using the electrostatic shift equation, with the provided $\\mathrm{p}K_{a,\\text{model}}$ for histidine and the provided solution $\\mathrm{p}K_a$ for the acceptor as its model value.\n  3. Compute $f_{\\text{prot}}$ at $\\mathrm{pH}$ $7$ using the Henderson–Hasselbalch relation and $\\mathrm{p}K_{a,\\text{His,eff}}$.\n  4. Compute $\\Delta G^\\circ$, then $\\Delta G^\\ddagger_{\\text{intrinsic}}$ with the given $\\lambda$.\n  5. Compute $\\Delta G^\\ddagger_{\\text{pop}}$ and finally $\\Delta G^\\ddagger_{\\text{eff}}$.\n- Test suite: use the following four cases, each defined as an ordered tuple\n  $(\\mathrm{p}K_{a,\\text{His,model}}, q_{\\text{env}}, \\varepsilon_r, r_{\\text{His}}\\,\\mathrm{(nm)}, \\mathrm{pH}, \\mathrm{p}K_{a,\\text{Acc,sol}}, r_{\\text{Acc}}\\,\\mathrm{(nm)}, \\lambda\\,\\mathrm{(kJ/mol)}, T\\,\\mathrm{(K)})$:\n  - Case $1$ (typical buried negative environment, favorable donor): $(6.50, -1.00, 20.0, 0.50, 7.00, 4.50, 0.60, 40.0, 300.0)$.\n  - Case $2$ (no environmental charge, donor slightly weaker than acceptor): $(6.50, 0.00, 20.0, 0.50, 7.00, 7.50, 0.50, 40.0, 300.0)$.\n  - Case $3$ (strongly buried negative environment near donor): $(6.50, -1.00, 10.0, 0.30, 7.00, 5.00, 0.50, 30.0, 300.0)$.\n  - Case $4$ (positive environment destabilizing donor protonation): $(6.50, +1.00, 15.0, 0.40, 7.00, 7.50, 0.50, 50.0, 300.0)$.\n- Output: your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, for example, $[x_1,x_2,x_3,x_4]$, where each $x_i$ is the value of $\\Delta G^\\ddagger_{\\text{eff}}$ for case $i$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$, rounded to three decimals.\n\nYour implementation must not read any input and must not access any files or network resources. It must run as-is and print exactly one line in the specified format.", "solution": "The problem requires the computation of the effective activation free energy, $\\Delta G^\\ddagger_{\\text{eff}}$, for a proton transfer reaction catalyzed by a histidine residue. This task is approached by constructing a multi-step model grounded in fundamental principles of physical chemistry and computational biophysics. The model integrates the influence of the enzyme's electrostatic environment on reactant properties with a classical theory of reaction kinetics.\n\nThe calculation proceeds sequentially for each test case. The parameters for each case are: the model $\\mathrm{p}K_a$ of the histidine catalyst ($\\mathrm{p}K_{a,\\text{His,model}}$), the environmental point charge ($q_{\\text{env}}$), the relative dielectric constant ($\\varepsilon_r$), the distance from the environmental charge to the histidine protonation site ($r_{\\text{His}}$), the system $\\mathrm{pH}$, the solution $\\mathrm{p}K_a$ of the proton acceptor ($\\mathrm{p}K_{a,\\text{Acc,sol}}$), the distance from the environmental charge to the acceptor protonation site ($r_{\\text{Acc}}$), the reorganization energy for proton transfer ($\\lambda$), and the absolute temperature ($T$).\n\nThe first step is to quantify the effect of the enzyme's electrostatic environment on the proton affinity of the catalytic histidine and the substrate acceptor. This is achieved by calculating the electrostatic potential, $\\phi$, generated by the environmental charge $q_{\\text{env}}$ at the location of the histidine and acceptor sites. Using the standard formula for an electrostatic potential in a continuous dielectric medium:\n$$ \\phi = \\dfrac{k_e\\,q_{\\text{env}}}{\\varepsilon_r\\,r} $$\nwhere $k_e = 138.935458\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{nm}\\,\\mathrm{e}^{-2}$ is the Coulomb constant, $q_{\\text{env}}$ is the charge in elementary units, $\\varepsilon_r$ is the relative dielectric constant, and $r$ is the distance in $\\mathrm{nm}$. We compute two potentials, $\\phi_{\\text{His}}$ and $\\phi_{\\text{Acc}}$, using the respective distances $r_{\\text{His}}$ and $r_{\\text{Acc}}$.\n\nThe calculated potentials represent the electrostatic work required to bring a unit positive charge from infinity to the respective sites. This work directly modifies the free energy of deprotonation. The change in the standard deprotonation free energy for a group that is more positive by one unit in its protonated state (like histidine) is $\\Delta\\Delta G_{\\text{deprot}} = -\\phi$. This leads to a shift in the acid dissociation constant, $\\mathrm{p}K_a$. The effective $\\mathrm{p}K_a$ is given by:\n$$ \\mathrm{p}K_{a,\\text{eff}} = \\mathrm{p}K_{a,\\text{model}} - \\dfrac{\\phi}{R\\,T\\,\\ln(10)} $$\nwhere $R = 8.314462618\\times 10^{-3}\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}\\,\\mathrm{K}^{-1}$ is the gas constant and $T$ is the temperature in Kelvin. This equation is applied to calculate both $\\mathrm{p}K_{a,\\text{His,eff}}$ and $\\mathrm{p}K_{a,\\text{Acc,eff}}$, using their respective model $\\mathrm{p}K_a$ values and calculated potentials. For the acceptor, its given solution $\\mathrm{p}K_a$ serves as its model $\\mathrm{p}K_a$.\n\nThe catalytic cycle is initiated by the protonated form of histidine. Therefore, its availability at the physiological $\\mathrm{pH}$ is critical. The fraction of histidine that is protonated, $f_{\\text{prot}}$, is determined by the Henderson-Hasselbalch equation, using its newly computed effective $\\mathrm{p}K_a$:\n$$ f_{\\text{prot}} = \\dfrac{1}{1 + 10^{\\mathrm{pH} - \\mathrm{p}K_{a,\\text{His,eff}}}} $$\nThe specified $\\mathrm{pH}$ is $7.00$ for all test cases.\n\nWith the effective acidities of the donor (histidine) and acceptor established, we can calculate the standard free energy change, $\\Delta G^\\circ$, for the proton transfer reaction itself:\n$$ \\Delta G^\\circ = R\\,T\\,\\ln(10)\\,\\left(\\mathrm{p}K_{a,\\text{His,eff}} - \\mathrm{p}K_{a,\\text{Acc,eff}}\\right) $$\nThis $\\Delta G^\\circ$ represents the thermodynamic driving force of the reaction step.\n\nThe activation energy of the chemical step is modeled using a two-state harmonic approximation, which is a simplified form of Marcus theory. For parabolas of equal curvature, the intrinsic activation free energy, $\\Delta G^\\ddagger_{\\text{intrinsic}}$, is given by:\n$$ \\Delta G^\\ddagger_{\\text{intrinsic}} = \\dfrac{\\lambda}{4}\\left(1 + \\dfrac{\\Delta G^\\circ}{\\lambda}\\right)^2 $$\nwhere $\\lambda$ is the reorganization energy, a parameter that quantifies the energetic cost of structural rearrangement of the system (protein and solvent) from the reactant to the product equilibrium geometries.\n\nFinally, the overall effective activation free energy must account for the probability of the enzyme being in the catalytically competent (protonated) state. This is a pre-equilibrium or \"population gating\" effect. In free energy terms, this adds a penalty, $\\Delta G^\\ddagger_{\\text{pop}}$, to the intrinsic barrier:\n$$ \\Delta G^\\ddagger_{\\text{pop}} = -R\\,T\\,\\ln\\left(f_{\\text{prot}}\\right) $$\nThis term is always non-negative, as $f_{\\text{prot}} \\le 1$. It becomes large when the active form is sparsely populated.\n\nThe total effective activation free energy, which corresponds to the experimentally observable rate constant, is the sum of the intrinsic barrier and the population gating penalty:\n$$ \\Delta G^\\ddagger_{\\text{eff}} = \\Delta G^\\ddagger_{\\text{intrinsic}} + \\Delta G^\\ddagger_{\\text{pop}} $$\nThis composite value reflects both the thermodynamics of the active site protonation states and the kinetics of the elementary proton transfer step. The implementation will perform these calculations for each set of input parameters and report the final $\\Delta G^\\ddagger_{\\text{eff}}$ in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to orchestrate the calculation for all test cases and print the results.\n    \"\"\"\n    # Define physical constants as per the problem statement.\n    K_E = 138.935458  # kJ/mol * nm / e^2\n    R_GAS = 8.314462618e-3  # kJ/mol/K\n\n    # Test cases as provided in the problem statement.\n    # Each tuple contains:\n    # (pKa_His_model, q_env, eps_r, r_His, pH, pKa_Acc_sol, r_Acc, lambda, T)\n    test_cases = [\n        (6.50, -1.00, 20.0, 0.50, 7.00, 4.50, 0.60, 40.0, 300.0),\n        (6.50, 0.00, 20.0, 0.50, 7.00, 7.50, 0.50, 40.0, 300.0),\n        (6.50, -1.00, 10.0, 0.30, 7.00, 5.00, 0.50, 30.0, 300.0),\n        (6.50, 1.00, 15.0, 0.40, 7.00, 7.50, 0.50, 50.0, 300.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        pka_his_model, q_env, eps_r, r_his, ph, pka_acc_sol, r_acc, lambda_val, temp = case\n        \n        # Calculate the activation energy for the current case.\n        result = calculate_activation_energy(\n            pka_his_model, q_env, eps_r, r_his, ph, pka_acc_sol, r_acc, lambda_val, temp,\n            K_E, R_GAS\n        )\n        results.append(result)\n\n    # Format the results for printing: rounded to three decimal places.\n    formatted_results = [f\"{res:.3f}\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef calculate_activation_energy(pka_his_model, q_env, eps_r, r_his, ph, pka_acc_sol, r_acc, lambda_val, temp, k_e, r_gas):\n    \"\"\"\n    Calculates the total effective activation free energy for a single test case.\n    \n    Args:\n        pka_his_model (float): Model pKa of histidine.\n        q_env (float): Environmental point charge in elementary charge units.\n        eps_r (float): Relative dielectric constant.\n        r_his (float): Distance from charge to His site (nm).\n        ph (float): System pH.\n        pka_acc_sol (float): Solution pKa of the acceptor.\n        r_acc (float): Distance from charge to acceptor site (nm).\n        lambda_val (float): Reorganization free energy (kJ/mol).\n        temp (float): Absolute temperature (K).\n        k_e (float): Electrostatic constant.\n        r_gas (float): Gas constant.\n        \n    Returns:\n        float: The calculated total effective activation free energy (kJ/mol).\n    \"\"\"\n    \n    # 1. Compute common thermodynamic factors.\n    ln10 = np.log(10)\n    rt_ln10 = r_gas * temp * ln10\n    rt_val = r_gas * temp\n\n    # 2. Compute electrostatic potentials at His and acceptor sites.\n    # phi = (k_e * q_env) / (eps_r * r)\n    phi_his = (k_e * q_env) / (eps_r * r_his)\n    phi_acc = (k_e * q_env) / (eps_r * r_acc)\n    \n    # 3. Compute effective pKa values.\n    # pKa_eff = pKa_model - phi / (R * T * ln(10))\n    pka_his_eff = pka_his_model - phi_his / rt_ln10\n    pka_acc_eff = pka_acc_sol - phi_acc / rt_ln10 # pka_acc_sol is used as its model value.\n    \n    # 4. Compute the protonation fraction of histidine.\n    # f_prot = 1 / (1 + 10^(pH - pKa_eff))\n    f_prot = 1.0 / (1.0 + 10**(ph - pka_his_eff))\n    \n    # 5. Compute the standard free energy of the proton transfer reaction.\n    # dG_reaction = R * T * ln(10) * (pKa_donor_eff - pKa_acceptor_eff)\n    dG_reaction = rt_ln10 * (pka_his_eff - pka_acc_eff)\n    \n    # 6. Compute the intrinsic activation free energy (Marcus-type model).\n    # dG_intrinsic = (lambda / 4) * (1 + dG_reaction / lambda)^2\n    dG_intrinsic = (lambda_val / 4.0) * (1.0 + dG_reaction / lambda_val)**2\n    \n    # 7. Compute the population gating free energy penalty.\n    # dG_pop = - R * T * ln(f_prot)\n    # Handle the case where f_prot is exactly 1 to avoid log(1) = -0.0 issues.\n    if f_prot > 1.0 - 1e-9: # Effectively f_prot is 1.0\n        dG_pop = 0.0\n    else:\n        dG_pop = -rt_val * np.log(f_prot)\n        \n    # 8. Compute the total effective activation free energy.\n    # dG_eff = dG_intrinsic + dG_pop\n    dG_eff = dG_intrinsic + dG_pop\n\n    return dG_eff\n\n# Execute the main function when the script is run.\nif __name__ == \"__main__\":\n    solve()\n\n```", "id": "2452903"}, {"introduction": "While static models provide a valuable first approximation, a deeper understanding of enzyme catalysis requires considering the dynamic nature of the protein environment. This advanced practice bridges the gap between static potential energy surfaces and dynamic free energy landscapes, or Potentials of Mean Force ($W(x)$). Starting from fundamental statistical mechanics, you will compare a simple static cluster model to a more sophisticated QM/MM model that accounts for the effects of environmental fluctuations and conformational entropy, allowing you to quantify catalytic contributions that only emerge from a dynamic perspective [@problem_id:2452929].", "problem": "You will implement a principled comparison between two simplified models of an enzyme-catalyzed reaction along a single reaction coordinate. The goal is to quantify and interpret the catalytic effects captured by a fully atomistic Quantum Mechanics/Molecular Mechanics (QM/MM) Molecular Dynamics (MD) model but missed by a static Quantum Mechanics (QM) cluster model with implicit solvent. To maintain scientific realism while ensuring solvability, you will model the reaction along a single coordinate $x$ with a double-well potential representing reactant and product basins and a central transition state. You will derive the effective free energy profiles from fundamental statistical mechanics and then compute activation free energies under both models.\n\nFundamental base:\n- Transition State Theory (TST) relates the rate constant to the activation free energy by $k \\propto \\exp(-\\beta \\Delta G^{\\ddagger})$, where $\\beta = 1/(k_{\\mathrm{B}} T)$ and $k_{\\mathrm{B}}$ is the Boltzmann constant. For energies per mole, use the gas constant $R$ in place of $k_{\\mathrm{B}}$, hence $\\beta = 1/(R T)$.\n- The potential of mean force $W(x)$ is defined by the marginalization over environmental degrees of freedom, $W(x) = -k_{\\mathrm{B}} T \\ln \\int \\mathrm{d}\\mathbf{s}\\, p(\\mathbf{s}) \\exp\\left(-\\beta U(x,\\mathbf{s})\\right)$, where $U(x,\\mathbf{s})$ is the total potential energy and $p(\\mathbf{s})$ is the equilibrium distribution of environmental coordinates $\\mathbf{s}$ at fixed $x$.\n- If the environment couples to the reaction coordinate through a linear interaction with a scalar field $E$ and if $E$ is a Gaussian random variable with mean $\\bar{E}$ and variance $\\sigma_{E}^{2}$, then the PMF can be obtained by analytically integrating over $E$.\n\nModel definitions:\n- Bare gas-phase reactive potential along $x$ (dimensionless): $V_{0}(x) = A \\left(x^{2} - x_{0}^{2}\\right)^{2}$, which has minima near $x \\approx \\pm x_{0}$ and a barrier near $x \\approx 0$ of height approximately $A x_{0}^{4}$.\n- Reaction-coupled “charge separation strength” along $x$: $q(x) = q_{\\mathrm{TS}} \\exp\\!\\left(-\\dfrac{(x - x_{\\mathrm{TS}})^{2}}{2 s_{q}^{2}}\\right)$ with $x_{\\mathrm{TS}} = 0$. This models that charge reorganization is maximized near the transition state.\n- Conformational gating factor (number of accessible configurations) along $x$: $g(x) = 1 + c_{g} \\exp\\!\\left(-\\dfrac{(x - x_{\\mathrm{TS}})^{2}}{2 s_{g}^{2}}\\right)$. This models an entropic contribution due to multiple TS-aligned conformations, which decreases $W(x)$ by $-k_{\\mathrm{B}} T \\ln g(x)$.\n\nModels to compare:\n- QM cluster with implicit solvent (static continuum reaction field). Assume a mean-field interaction energy of the form $U_{\\mathrm{imp}}(x) = - \\bar{E}\\, q(x)$, so the cluster-model free energy profile is\n  $$\n  W_{\\mathrm{cl}}(x) = V_{0}(x) - \\bar{E}\\, q(x).\n  $$\n- QM/MM MD (fully atomistic environment integration). Starting from the PMF definition\n  $$\n  W_{\\mathrm{QM/MM}}(x) = -k_{\\mathrm{B}} T \\ln \\int_{-\\infty}^{\\infty} \\mathrm{d}E\\, \\mathcal{N}(E \\mid \\bar{E}, \\sigma_{E}^{2}) \\exp\\!\\left(-\\beta \\left[V_{0}(x) - q(x) E\\right]\\right) \\;-\\; k_{\\mathrm{B}} T \\ln g(x),\n  $$\n  where $\\mathcal{N}(E \\mid \\bar{E}, \\sigma_{E}^{2})$ is a Gaussian distribution with mean $\\bar{E}$ and variance $\\sigma_{E}^{2}$. You must carry out this Gaussian integral to obtain a closed-form expression for $W_{\\mathrm{QM/MM}}(x)$ in terms of $V_{0}(x)$, $q(x)$, $\\bar{E}$, $\\sigma_{E}^{2}$, $\\beta$, and $g(x)$. This result should make transparent the roles of mean electrostatics, electrostatic fluctuations, and entropic gating.\n\nActivation free energies:\n- For each model, define the transition state location as $x_{\\mathrm{TS}} = 0$ and compute the reactant-state minimum $x_{\\mathrm{R}}$ by minimizing the corresponding $W(x)$ over a domain that contains the left well (reactant basin). Then compute the activation free energy\n  $$\n  \\Delta G_{\\mathrm{cl}}^{\\ddagger} = W_{\\mathrm{cl}}(x_{\\mathrm{TS}}) - \\min_{x \\in \\mathcal{D}_{\\mathrm{R}}} W_{\\mathrm{cl}}(x), \\quad\n  \\Delta G_{\\mathrm{QM/MM}}^{\\ddagger} = W_{\\mathrm{QM/MM}}(x_{\\mathrm{TS}}) - \\min_{x \\in \\mathcal{D}_{\\mathrm{R}}} W_{\\mathrm{QM/MM}}(x).\n  $$\n- Interpret the difference $\\Delta \\Delta G^{\\ddagger} = \\Delta G_{\\mathrm{QM/MM}}^{\\ddagger} - \\Delta G_{\\mathrm{cl}}^{\\ddagger}$ by decomposing it into two catalytic effects that the cluster model misses:\n  1. Electrostatic fluctuation stabilization (arising from $\\sigma_{E}^{2} > 0$).\n  2. Entropic gating (arising from $g(x)$, with $c_{g} > 0$).\n  Using the derived $W_{\\mathrm{QM/MM}}(x)$, estimate the individual contributions to barrier lowering relative to the cluster model as the difference in each term between $x_{\\mathrm{TS}}$ and $x_{\\mathrm{R}}$, and decide which effects are significant using a numerical threshold of $0.05$ in energy units.\n\nUnits and constants:\n- All energies must be in $\\mathrm{kJ\\,mol^{-1}}$.\n- Temperature must be in $\\mathrm{K}$.\n- Use $R = 8.314462618 \\times 10^{-3}\\ \\mathrm{kJ\\,mol^{-1}\\,K^{-1}}$.\n- Report activation free energies in $\\mathrm{kJ\\,mol^{-1}}$, rounded to three decimal places.\n\nTest suite:\nImplement your program to compute results for the following $4$ cases. Parameter order is $(A, x_{0}, q_{\\mathrm{TS}}, s_{q}, \\bar{E}, \\sigma_{E}, c_{g}, s_{g}, T)$:\n1. $(50.0, 1.0, 1.0, 0.2, 5.0, 10.0, 1.0, 0.3, 300.0)$\n2. $(50.0, 1.0, 1.0, 0.2, 5.0, 0.0, 1.0, 0.3, 300.0)$\n3. $(50.0, 1.0, 1.0, 0.2, 5.0, 10.0, 0.0, 0.3, 300.0)$\n4. $(50.0, 1.0, 1.0, 0.2, 5.0, 0.0, 0.0, 0.3, 300.0)$\n\nOutput specification:\n- For each test case, output a list of the form $[\\Delta G_{\\mathrm{cl}}^{\\ddagger}, \\Delta G_{\\mathrm{QM/MM}}^{\\ddagger}, C]$, where $C$ is an integer classification code indicating which catalytic effects the cluster model misses:\n  - $0$: none significant,\n  - $1$: electrostatic fluctuations only,\n  - $2$: entropic gating only,\n  - $3$: both effects.\n- Your program should produce a single line of output containing the results as a comma-separated list of the $4$ lists enclosed in square brackets, for example: $[[a_{1},b_{1},c_{1}],[a_{2},b_{2},c_{2}],[a_{3},b_{3},c_{3}],[a_{4},b_{4},c_{4}]]$, where each $a_{i}$ and $b_{i}$ are floats rounded to three decimal places and each $c_{i}$ is an integer.\n\nImplementation constraints:\n- The transition state location is fixed at $x_{\\mathrm{TS}} = 0$.\n- The reactant minimum must be found by continuous optimization within a left-well domain $\\mathcal{D}_{\\mathrm{R}}$; choose a robust bounded interval that contains the left minimum (for example, an interval spanning negative $x$ values that includes $-x_{0}$).\n- The code must be a complete, runnable program that produces exactly the single output line described above with no additional text.", "solution": "The problem posed is a valid exercise in computational chemistry and statistical mechanics. It is scientifically grounded in the principles of Transition State Theory and the definition of the Potential of Mean Force (PMF). The models provided, while simplified, are representative of common approaches used to understand enzymatic catalysis, namely the static QM cluster model with an implicit solvent reaction field and a more dynamic QM/MM model that explicitly accounts for environmental fluctuations and conformational effects. The problem is well-posed, with all necessary parameters, constants, and functional forms defined, allowing for a unique and meaningful solution. It is expressed objectively and contains no scientific or logical contradictions. The task of deriving a closed-form expression for the PMF from a Gaussian integral is a standard and solvable procedure. Consequently, I will proceed with a full solution.\n\nThe core of the problem is to derive the analytical form for the QM/MM free energy profile, $W_{\\mathrm{QM/MM}}(x)$, and then to use it for quantitative comparison against the simpler cluster model, $W_{\\mathrm{cl}}(x)$.\n\nLet us begin with the derivation of $W_{\\mathrm{QM/MM}}(x)$. The definition is given as a sum of two terms. The second term, $-k_{\\mathrm{B}} T \\ln g(x)$, represents the entropic gating contribution, which can be treated separately. Let us focus on the first term, which involves an integral over the environmental electric field $E$:\n$$\nW_{\\mathrm{int}}(x) = -k_{\\mathrm{B}} T \\ln \\int_{-\\infty}^{\\infty} \\mathrm{d}E\\, \\mathcal{N}(E \\mid \\bar{E}, \\sigma_{E}^{2}) \\exp\\left(-\\beta \\left[V_{0}(x) - q(x) E\\right]\\right)\n$$\nwhere $\\beta = 1/(RT)$ for molar energies, and $\\mathcal{N}(E \\mid \\bar{E}, \\sigma_{E}^{2}) = \\frac{1}{\\sqrt{2\\pi\\sigma_{E}^{2}}} \\exp\\left(-\\frac{(E-\\bar{E})^2}{2\\sigma_{E}^2}\\right)$ is the Gaussian probability density function for $E$.\n\nLet the integral be denoted by $I(x)$. We can factor out the terms independent of $E$:\n$$\nI(x) = \\exp\\left(-\\beta V_{0}(x)\\right) \\int_{-\\infty}^{\\infty} \\frac{1}{\\sqrt{2\\pi\\sigma_{E}^{2}}} \\exp\\left(-\\frac{(E-\\bar{E})^2}{2\\sigma_{E}^2} + \\beta q(x) E\\right) \\mathrm{d}E\n$$\nThe argument of the exponential inside the integral can be rearranged by completing the square with respect to $E$:\n\\begin{align*}\n-\\frac{(E-\\bar{E})^2}{2\\sigma_{E}^2} + \\beta q(x) E &= -\\frac{E^2 - 2E\\bar{E} + \\bar{E}^2}{2\\sigma_{E}^2} + \\beta q(x) E \\\\\n&= -\\frac{1}{2\\sigma_{E}^2} \\left[ E^2 - 2E\\bar{E} + \\bar{E}^2 - 2\\sigma_{E}^2 \\beta q(x) E \\right] \\\\\n&= -\\frac{1}{2\\sigma_{E}^2} \\left[ E^2 - 2E(\\bar{E} + \\sigma_{E}^2 \\beta q(x)) + \\bar{E}^2 \\right] \\\\\n\\end{align*}\nTo complete the square, we define a new mean $\\mu' = \\bar{E} + \\sigma_{E}^2 \\beta q(x)$. The expression becomes:\n\\begin{align*}\n&= -\\frac{1}{2\\sigma_{E}^2} \\left[ (E - \\mu')^2 - (\\mu')^2 + \\bar{E}^2 \\right] \\\\\n&= -\\frac{(E - \\mu')^2}{2\\sigma_{E}^2} + \\frac{(\\mu')^2 - \\bar{E}^2}{2\\sigma_{E}^2} \\\\\n&= -\\frac{(E - \\mu')^2}{2\\sigma_{E}^2} + \\frac{(\\bar{E} + \\sigma_{E}^2 \\beta q(x))^2 - \\bar{E}^2}{2\\sigma_{E}^2} \\\\\n&= -\\frac{(E - \\mu')^2}{2\\sigma_{E}^2} + \\frac{2\\bar{E}\\sigma_{E}^2 \\beta q(x) + (\\sigma_{E}^2 \\beta q(x))^2}{2\\sigma_{E}^2} \\\\\n&= -\\frac{(E - \\mu')^2}{2\\sigma_{E}^2} + \\beta \\bar{E} q(x) + \\frac{1}{2} \\beta^2 \\sigma_{E}^2 q(x)^2\n\\end{align*}\nSubstituting this back into the integral for $I(x)$:\n$$\nI(x) = \\exp\\left(-\\beta V_{0}(x)\\right) \\exp\\left(\\beta \\bar{E} q(x) + \\frac{1}{2} \\beta^2 \\sigma_{E}^2 q(x)^2\\right) \\int_{-\\infty}^{\\infty} \\frac{1}{\\sqrt{2\\pi\\sigma_{E}^{2}}} \\exp\\left(-\\frac{(E - \\mu')^2}{2\\sigma_{E}^2}\\right) \\mathrm{d}E\n$$\nThe remaining integral is the integral of a Gaussian probability density function over its entire domain, which is equal to $1$. Thus:\n$$\nI(x) = \\exp\\left(-\\beta V_{0}(x) + \\beta \\bar{E} q(x) + \\frac{1}{2} \\beta^2 \\sigma_{E}^2 q(x)^2\\right)\n$$\nNow, we compute $W_{\\mathrm{int}}(x) = -k_{\\mathrm{B}} T \\ln I(x) = -\\frac{1}{\\beta} \\ln I(x)$:\n$$\nW_{\\mathrm{int}}(x) = -\\frac{1}{\\beta} \\left( -\\beta V_{0}(x) + \\beta \\bar{E} q(x) + \\frac{1}{2} \\beta^2 \\sigma_{E}^2 q(x)^2 \\right) = V_{0}(x) - \\bar{E} q(x) - \\frac{1}{2} \\beta \\sigma_{E}^2 q(x)^2\n$$\nCombining this with the entropic gating term, we obtain the full expression for the QM/MM free energy profile:\n$$\nW_{\\mathrm{QM/MM}}(x) = V_{0}(x) - \\bar{E} q(x) - \\frac{1}{2} \\beta \\sigma_{E}^2 q(x)^2 - RT \\ln g(x)\n$$\nWe can recognize that the first two terms are precisely the cluster model free energy, $W_{\\mathrm{cl}}(x) = V_{0}(x) - \\bar{E} q(x)$. This allows for a clear decomposition:\n$$\nW_{\\mathrm{QM/MM}}(x) = W_{\\mathrm{cl}}(x) + \\Delta W_{\\mathrm{fluc}}(x) + \\Delta W_{\\mathrm{gate}}(x)\n$$\nwhere $\\Delta W_{\\mathrm{fluc}}(x) = - \\frac{1}{2} \\beta \\sigma_{E}^2 q(x)^2$ is the stabilization from electrostatic fluctuations, and $\\Delta W_{\\mathrm{gate}}(x) = -RT \\ln g(x)$ is the stabilization from entropic gating.\n\nTo compute the activation free energies, $\\Delta G^{\\ddagger} = W(x_{\\mathrm{TS}}) - W(x_{\\mathrm{R}})$, for each model, we must first find the location of the reactant minimum, $x_{\\mathrm{R}}$, by numerically minimizing the corresponding potential $W(x)$ over the reactant basin domain $\\mathcal{D}_{\\mathrm{R}}$. Given the form of $V_{0}(x)$, this domain can be robustly chosen as an interval of negative $x$ values, for example $[-2x_0, 0)$. The transition state is fixed at $x_{\\mathrm{TS}} = 0$.\n\nTo interpret the difference in activation barriers, we estimate the contribution of each additional effect in the QM/MM model to the lowering of the activation barrier relative to the cluster model. This is estimated by evaluating the change in each new energy term between the transition state and the reactant state of the unperturbed (cluster) model.\nThe barrier lowering due to electrostatic fluctuations is:\n$$\n\\Delta(\\Delta G^{\\ddagger})_{\\mathrm{fluc}} \\approx -[\\Delta W_{\\mathrm{fluc}}(x_{\\mathrm{TS}}) - \\Delta W_{\\mathrm{fluc}}(x_{\\mathrm{R,cl}})] = \\frac{1}{2} \\beta \\sigma_{E}^2 (q(x_{\\mathrm{TS}})^2 - q(x_{\\mathrm{R,cl}})^2)\n$$\nThe barrier lowering due to entropic gating is:\n$$\n\\Delta(\\Delta G^{\\ddagger})_{\\mathrm{gate}} \\approx -[\\Delta W_{\\mathrm{gate}}(x_{\\mathrm{TS}}) - \\Delta W_{\\mathrm{gate}}(x_{\\mathrm{R,cl}})] = RT (\\ln g(x_{\\mathrm{TS}}) - \\ln g(x_{\\mathrm{R,cl}}))\n$$\nEach effect is considered significant if its contribution to barrier lowering exceeds $0.05\\ \\mathrm{kJ\\,mol^{-1}}$. The classification code $C$ is determined as follows: $C=0$ if neither is significant; $C=1$ if only fluctuations are significant; $C=2$ if only gating is significant; and $C=3$ if both are significant.\n\nThe following program implements this complete procedure. It defines the energy functions, numerically determines the reactant minima and activation energies for both models for each test case, and then evaluates the significance of the catalytic contributions to generate the final classification.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import minimize_scalar\n\ndef solve():\n    \"\"\"\n    Solves the enzyme catalysis model comparison problem for a given set of test cases.\n    \"\"\"\n    \n    # Universal gas constant in kJ mol^-1 K^-1\n    R = 8.314462618e-3\n\n    # Define the test cases as per the problem statement.\n    # Parameters: (A, x0, q_TS, s_q, E_bar, sigma_E, c_g, s_g, T)\n    test_cases = [\n        (50.0, 1.0, 1.0, 0.2, 5.0, 10.0, 1.0, 0.3, 300.0),\n        (50.0, 1.0, 1.0, 0.2, 5.0, 0.0, 1.0, 0.3, 300.0),\n        (50.0, 1.0, 1.0, 0.2, 5.0, 10.0, 0.0, 0.3, 300.0),\n        (50.0, 1.0, 1.0, 0.2, 5.0, 0.0, 0.0, 0.3, 300.0),\n    ]\n\n    results = []\n\n    for case in test_cases:\n        A, x0, q_TS, s_q, E_bar, sigma_E, c_g, s_g, T = case\n        \n        beta = 1.0 / (R * T)\n        x_TS = 0.0\n\n        # Define the fundamental components of the potentials\n        def V0(x):\n            return A * (x**2 - x0**2)**2\n\n        def q(x):\n            return q_TS * np.exp(-(x - x_TS)**2 / (2 * s_q**2))\n\n        def g(x):\n            return 1.0 + c_g * np.exp(-(x - x_TS)**2 / (2 * s_g**2))\n\n        # Define the free energy profiles for both models\n        def W_cl(x):\n            return V0(x) - E_bar * q(x)\n\n        def W_qmmm(x):\n            fluc_term = -0.5 * beta * sigma_E**2 * q(x)**2\n            gate_term = -(1.0 / beta) * np.log(g(x))\n            return W_cl(x) + fluc_term + gate_term\n\n        # --- Cluster Model Calculation ---\n        # Find reactant minimum for the cluster model\n        # Search in the left well, e.g., [-2*x0, 0)\n        res_cl = minimize_scalar(W_cl, bounds=(-2.0 * x0, -1e-9), method='bounded')\n        x_R_cl = res_cl.x\n        W_R_cl = res_cl.fun\n        \n        # Calculate activation energy for the cluster model\n        W_TS_cl = W_cl(x_TS)\n        dG_cl = W_TS_cl - W_R_cl\n\n        # --- QM/MM Model Calculation ---\n        # Find reactant minimum for the QM/MM model\n        res_qmmm = minimize_scalar(W_qmmm, bounds=(-2.0 * x0, -1e-9), method='bounded')\n        x_R_qmmm = res_qmmm.x\n        W_R_qmmm = res_qmmm.fun\n        \n        # Calculate activation energy for the QM/MM model\n        W_TS_qmmm = W_qmmm(x_TS)\n        dG_qmmm = W_TS_qmmm - W_R_qmmm\n\n        # --- Interpretation and Classification ---\n        # Estimate catalytic contributions based on perturbations to the cluster model\n        # evaluated at the cluster model's stationary points (TS and Reactant).\n        \n        # Contribution from electrostatic fluctuations\n        fluc_lowering = 0.0\n        if sigma_E > 0:\n            fluc_term_at_ts = -0.5 * beta * sigma_E**2 * q(x_TS)**2\n            fluc_term_at_r = -0.5 * beta * sigma_E**2 * q(x_R_cl)**2\n            fluc_lowering = -(fluc_term_at_ts - fluc_term_at_r)\n        \n        # Contribution from entropic gating\n        gate_lowering = 0.0\n        if c_g > 0:\n            gate_term_at_ts = -(1.0 / beta) * np.log(g(x_TS))\n            gate_term_at_r = -(1.0 / beta) * np.log(g(x_R_cl))\n            gate_lowering = -(gate_term_at_ts - gate_term_at_r)\n\n        # Determine significance\n        threshold = 0.05\n        is_fluc_significant = fluc_lowering > threshold\n        is_gate_significant = gate_lowering > threshold\n\n        # Assign classification code C\n        # 0: none, 1: fluc, 2: gate, 3: both\n        C = int(is_fluc_significant) + 2 * int(is_gate_significant)\n\n        results.append([round(dG_cl, 3), round(dG_qmmm, 3), C])\n    \n    # Format the results into the required single-line string\n    # e.g., [[val1, val2, val3], [val4, val5, val6]]\n    result_str = \"[\" + \",\".join([str(r) for r in results]) + \"]\"\n    print(result_str.replace(\" \", \"\"))\n\n\nsolve()\n\n```", "id": "2452929"}]}