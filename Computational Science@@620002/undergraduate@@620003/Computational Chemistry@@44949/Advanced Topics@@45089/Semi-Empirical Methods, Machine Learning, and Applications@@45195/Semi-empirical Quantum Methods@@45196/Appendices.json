{"hands_on_practices": [{"introduction": "At the heart of semi-empirical methods lies the process of transforming a Fock matrix, which represents the approximate one-electron energy operator, into molecular orbital energies. This foundational exercise guides you through the manual diagonalization of a simple $2 \\times 2$ Fock matrix for the ethylene $\\pi$-system, a classic pedagogical example. By completing this practice [@problem_id:2462038], you will gain direct experience with the final and most crucial step of any Hartree-Fock based calculation: extracting physical observables from the mathematical constructs.", "problem": "Ethylene has a two-orbital $\\pi$ system spanned by one carbon $2p_{z}$ atomic orbital on each carbon atom. In the Complete Neglect of Differential Overlap (CNDO/2) method, the overlap matrix for these valence orbitals is the identity, so the $\\pi$-system secular equation reduces to the standard eigenvalue problem for the $\\pi$-block of the Fock matrix. Consider a CNDO/2 calculation on ethylene in the minimal $\\{2p_{z}(\\mathrm{C}_{1}),\\,2p_{z}(\\mathrm{C}_{2})\\}$ basis giving the $\\pi$-block Fock matrix (in electronvolts) as\n$$\nF_{\\pi}=\\begin{pmatrix}\n-11.42 & -2.80\\\\\n-2.80 & -11.42\n\\end{pmatrix}.\n$$\nAssuming a closed-shell ground state with two $\\pi$ electrons occupying the lower-energy molecular orbital, manually diagonalize $F_{\\pi}$ to determine the energies of the highest occupied molecular orbital (HOMO) and the lowest unoccupied molecular orbital (LUMO). Report your final answer as two numbers in electronvolts, ordered as HOMO energy followed by LUMO energy, rounded to four significant figures.", "solution": "The problem as stated is valid. It is scientifically grounded, well-posed, and objective. It presents a standard eigenvalue problem in the context of semi-empirical quantum chemistry, which is a soluble and meaningful task. All necessary information is provided.\n\nThe objective is to determine the energies of the highest occupied molecular orbital (HOMO) and the lowest unoccupied molecular orbital (LUMO) for the $\\pi$ system of ethylene. In the framework of Hartree-Fock theory and its semi-empirical approximations like CNDO/$2$, the canonical molecular orbital (MO) energies are the eigenvalues of the Fock matrix, $F$. The problem states that within the CNDO/$2$ approximation, the overlap matrix $S$ for the valence orbitals is treated as the identity matrix, $I$. This simplifies the Roothaan-Hall secular equations, $FC = SCE$, where $C$ is the matrix of MO coefficients and $E$ is the diagonal matrix of orbital energies $\\epsilon_i$, to the standard eigenvalue problem $FC = CE$.\n\nWe are given the $\\pi$-block of the Fock matrix, $F_{\\pi}$, in the basis of two carbon $2p_{z}$ atomic orbitals:\n$$\nF_{\\pi}=\\begin{pmatrix}\n-11.42 & -2.80\\\\\n-2.80 & -11.42\n\\end{pmatrix} \\, \\text{eV}\n$$\nThe eigenvalues $\\epsilon$ of this matrix correspond to the MO energies. They are found by solving the characteristic equation:\n$$\n\\det(F_{\\pi} - \\epsilon I) = 0\n$$\nSubstituting the given matrix $F_{\\pi}$ and the $2 \\times 2$ identity matrix $I$:\n$$\n\\det \\begin{pmatrix}\n-11.42 - \\epsilon & -2.80\\\\\n-2.80 & -11.42 - \\epsilon\n\\end{pmatrix} = 0\n$$\nEvaluating the determinant gives a quadratic equation for $\\epsilon$:\n$$\n(-11.42 - \\epsilon)(-11.42 - \\epsilon) - (-2.80)(-2.80) = 0\n$$\n$$\n(-11.42 - \\epsilon)^{2} - (-2.80)^{2} = 0\n$$\n$$\n(-11.42 - \\epsilon)^{2} = (2.80)^{2}\n$$\nTaking the square root of both sides, we obtain two linear equations:\n$$\n-11.42 - \\epsilon = \\pm 2.80\n$$\nSolving for $\\epsilon$:\n$$\n-\\epsilon = 11.42 \\pm 2.80\n$$\n$$\n\\epsilon = -11.42 \\mp 2.80\n$$\nThis yields the two molecular orbital energies:\nThe lower energy, corresponding to the bonding $\\pi$ molecular orbital, is:\n$$\n\\epsilon_{1} = -11.42 - 2.80 = -14.22 \\, \\text{eV}\n$$\nThe higher energy, corresponding to the antibonding $\\pi^{*}$ molecular orbital, is:\n$$\n\\epsilon_{2} = -11.42 + 2.80 = -8.62 \\, \\text{eV}\n$$\nThe problem specifies a closed-shell ground state for ethylene, which has $2$ $\\pi$ electrons. According to the Aufbau principle, these $2$ electrons occupy the molecular orbital with the lowest energy, $\\epsilon_{1}$, with paired spins.\nTherefore, the highest occupied molecular orbital (HOMO) is the bonding $\\pi$ orbital. Its energy is:\n$$\nE_{\\mathrm{HOMO}} = \\epsilon_{1} = -14.22 \\, \\text{eV}\n$$\nThe lowest unoccupied molecular orbital (LUMO) is the antibonding $\\pi^{*}$ orbital. Its energy is:\n$$\nE_{\\mathrm{LUMO}} = \\epsilon_{2} = -8.62 \\, \\text{eV}\n$$\nThe problem requires the results to be reported to four significant figures.\nThe HOMO energy, $-14.22$, already has $4$ significant figures.\nThe LUMO energy, $-8.62$, has $3$ significant figures. To express it with $4$ significant figures, we write it as $-8.620$.\nThe final answer is ordered as HOMO energy followed by LUMO energy.", "answer": "$$\n\\boxed{\\begin{pmatrix}-14.22 & -8.620\\end{pmatrix}}\n$$", "id": "2462038"}, {"introduction": "Semi-empirical methods achieve their efficiency by simplifying the Hamiltonian matrix using a small set of parameters fit to experimental data. This exercise [@problem_id:2462030] challenges you to build a simple \"tight-binding\" Hamiltonian, a model that is foundational to understanding the electronic structure of conjugated polymers and crystalline solids. By parameterizing the on-site energies ($\\alpha$) and nearest-neighbor interactions ($\\beta$), you will see how a few key parameters can generate the entire band of molecular orbital energies for an extended system.", "problem": "You are to implement a minimal, semi-empirical tight-binding model for a one-dimensional chain of hydrogen atoms. Start from the Linear Combination of Atomic Orbitals (LCAO) framework and the time-independent Schrödinger equation in matrix form, where the Hamiltonian matrix is constructed using only two semi-empirical parameters: an on-site energy $\\,\\alpha\\,$ for each atom and a nearest-neighbor resonance integral $\\,\\beta\\,$ coupling only adjacent atoms. Assume the following foundational approximations and definitions:\n- A minimal basis of one atomic orbital per atom (hydrogen $1s$ orbital), forming an orthonormal basis so that the overlap matrix is the identity.\n- The Hamiltonian matrix elements are defined by an on-site energy $\\,\\alpha\\,$ for each atom and a nearest-neighbor resonance integral $\\,\\beta\\,$ coupling only adjacent atoms.\n- Open boundary conditions: only nearest neighbors within the chain interact, and there is no coupling between the first and last atoms.\n\nUnder these assumptions, for a chain of length $\\,N\\,$, the Hamiltonian matrix $\\,H\\in\\mathbb{R}^{N\\times N}\\,$ is tridiagonal with $\\,H_{ii}=\\alpha\\,$ and $\\,H_{i,i+1}=H_{i+1,i}=\\beta\\,$ for $\\,i=1,\\dots,N-1\\,$, and all other elements equal to zero. The molecular orbital energies are obtained by solving the eigenvalue problem $\\,H\\mathbf{c}=E\\mathbf{c}\\,$.\n\nTask:\n- Write a program that, given $\\,N\\,$, $\\,\\alpha\\,$ (in electronvolts), and $\\,\\beta\\,$ (in electronvolts), constructs the matrix $\\,H\\,$ as described and returns the sorted list of eigenvalues $\\,E_1\\le\\cdots\\le E_N\\,$.\n- Express all energies in electronvolts (eV).\n- Round each eigenvalue to $\\,6\\,$ decimal places.\n\nTest suite:\nYour program must evaluate the following parameter sets and aggregate the results:\n1. $\\,N=10\\,$, $\\,\\alpha=0.0\\,$ eV, $\\,\\beta=-2.5\\,$ eV.\n2. $\\,N=10\\,$, $\\,\\alpha=-11.0\\,$ eV, $\\,\\beta=-1.5\\,$ eV.\n3. $\\,N=10\\,$, $\\,\\alpha=0.5\\,$ eV, $\\,\\beta=2.5\\,$ eV.\n4. $\\,N=1\\,$, $\\,\\alpha=1.0\\,$ eV, $\\,\\beta=-3.0\\,$ eV.\n\nFinal output format:\n- Your program should produce a single line of output containing the results for all test cases as a list of lists. Each inner list is the sorted list of eigenvalues for one test case (rounded as specified). Use square brackets and commas to separate elements, with no spaces anywhere in the output.\n- The final output must be a single line in the format of a list of lists, for example, a structure like \"[[result_list_for_case_1],[result_list_for_case_2],...]\" where each \"result_list_for_case_i\" is a comma-separated sequence of floats.", "solution": "We construct the tight-binding Hamiltonian for a one-dimensional chain using the Linear Combination of Atomic Orbitals (LCAO) approach under standard semi-empirical approximations. The time-independent Schrödinger equation in a finite basis reads $\\,H\\mathbf{c}=E S\\mathbf{c}\\,$. In the present model, one assumes an orthonormal minimal basis such that the overlap matrix is $\\,S=I\\,$. The Hamiltonian matrix elements are parameterized by two semi-empirical constants: an on-site energy $\\,\\alpha\\,$ and a nearest-neighbor resonance integral $\\,\\beta\\,$. All other couplings are neglected. For a linear chain of $\\,N\\,$ atoms with open boundaries, this yields\n$$\nH_{ij}=\n\\begin{cases}\n\\alpha,& i=j,\\\\\n\\beta,& |i-j|=1,\\\\\n0,& \\text{otherwise}.\n\\end{cases}\n$$\nThis is a real, symmetric, tridiagonal matrix. The molecular orbital energies $\\,E\\,$ are the eigenvalues of $\\,H\\,$, obtained by solving the standard eigenvalue problem $\\,H\\mathbf{c}=E\\mathbf{c}\\,$. Because $\\,H\\,$ is symmetric, all eigenvalues are real and can be ordered $\\,E_1\\le E_2\\le \\cdots \\le E_N\\,$.\n\nPrinciple-based derivation connecting to the model:\n- Begin with the LCAO representation $\\,\\psi(\\mathbf{r})=\\sum_{i=1}^{N} c_i \\phi_i(\\mathbf{r})\\,$, where $\\,\\phi_i\\,$ are localized atomic orbitals on site $\\,i\\,$.\n- Insert into the Schrödinger equation $\\,\\hat{H}\\psi=E\\psi\\,$, project onto $\\,\\phi_j\\,$, and assume the orthogonality approximation $\\,\\langle \\phi_i|\\phi_j\\rangle=\\delta_{ij}\\,$ to obtain $\\,\\sum_i H_{ji} c_i = E c_j\\,$.\n- Impose the semi-empirical parametrization: $\\,H_{ii}=\\alpha\\,$ (on-site orbital energy) and $\\,H_{i,i\\pm 1}=\\beta\\,$ (nearest-neighbor coupling) with all other $\\,H_{ij}=0\\,$, consistent with an open chain (no coupling between the first and last sites).\n- This directly yields the tridiagonal $\\,H\\,$ above, completing the construction from first principles within the approximation.\n\nAnalytic structure for validation and insight:\nFor an open linear chain, the eigenvectors are standing waves $\\,c_j^{(k)} \\propto \\sin\\!\\left(\\frac{k\\pi j}{N+1}\\right)\\,$ with $\\,k=1,2,\\dots,N\\,$. Substituting these into the tight-binding recurrence from $\\,H\\mathbf{c}=E\\mathbf{c}\\,$ produces the well-known spectrum\n$$\nE_k=\\alpha+2\\beta \\cos\\!\\left(\\frac{k\\pi}{N+1}\\right),\n$$\nwith the angle in radians. Although we do not rely on this closed-form expression in the algorithm, it confirms that the spectrum is real, ordered, and symmetric about $\\,\\alpha\\,$ when $\\,\\beta\\,$ couples only nearest neighbors.\n\nAlgorithm design:\n1. For each test case, construct $\\,H\\in\\mathbb{R}^{N\\times N}\\,$ with diagonal entries $\\,\\alpha\\,$ and first off-diagonals $\\,\\beta\\,$.\n2. Compute all eigenvalues using a symmetric eigensolver (for example, by diagonalizing $\\,H\\,$).\n3. Sort the eigenvalues in ascending order (symmetric eigensolvers typically return sorted results by construction).\n4. Round each eigenvalue to $\\,6\\,$ decimal places to produce the final, reproducible numeric outputs in electronvolts.\n5. Aggregate the results for all test cases and print a single line containing the list of lists with no spaces.\n\nComputed results for the specified test suite (each list sorted in ascending order, electronvolts, rounded to $\\,6\\,$ decimal places):\n- Case $\\,1\\,$ ($\\,N=10\\,$, $\\,\\alpha=0.0\\,$, $\\,\\beta=-2.5\\,$):\n$-4.797465$, $-4.206268$, $-3.274304$, $-2.077075$, $-0.711574$, $0.711574$, $2.077075$, $3.274304$, $4.206268$, $4.797465$.\n- Case $\\,2\\,$ ($\\,N=10\\,$, $\\,\\alpha=-11.0\\,$, $\\,\\beta=-1.5\\,$):\n$-13.878479$, $-13.523761$, $-12.964582$, $-12.246245$, $-11.426945$, $-10.573055$, $-9.753755$, $-9.035418$, $-8.476239$, $-8.121521$.\n- Case $\\,3\\,$ ($\\,N=10\\,$, $\\,\\alpha=0.5\\,$, $\\,\\beta=2.5\\,$):\n$-4.297465$, $-3.706268$, $-2.774304$, $-1.577075$, $-0.211574$, $1.211574$, $2.577075$, $3.774304$, $4.706268$, $5.297465$.\n- Case $\\,4\\,$ ($\\,N=1\\,$, $\\,\\alpha=1.0\\,$, $\\,\\beta=-3.0\\,$):\n$1.0$.\n\nThese values follow directly from diagonalizing the defined tridiagonal Hamiltonian for each parameter set. The formatting constraint is satisfied by emitting a single line containing a list of lists with no spaces.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport json\n\ndef tight_binding_eigenvalues(N: int, alpha: float, beta: float):\n    \"\"\"\n    Construct the N x N tight-binding Hamiltonian with open boundaries:\n    H_ii = alpha, H_{i,i+1} = H_{i+1,i} = beta, others = 0.\n    Return sorted eigenvalues.\n    \"\"\"\n    # Construct Hamiltonian\n    H = np.zeros((N, N), dtype=float)\n    np.fill_diagonal(H, alpha)\n    if N >= 2:\n        # Fill first off-diagonals with beta\n        for i in range(N - 1):\n            H[i, i + 1] = beta\n            H[i + 1, i] = beta\n    # Compute eigenvalues (symmetric)\n    evals = np.linalg.eigvalsh(H)\n    return np.sort(evals)\n\ndef round_eigenvalues(evals, ndigits=6):\n    rounded = []\n    for x in evals:\n        r = round(float(x), ndigits)\n        # Normalize -0.0 to 0.0\n        if r == 0.0:\n            r = 0.0\n        rounded.append(r)\n    return rounded\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (N, alpha [eV], beta [eV])\n    test_cases = [\n        (10, 0.0, -2.5),\n        (10, -11.0, -1.5),\n        (10, 0.5, 2.5),\n        (1, 1.0, -3.0),\n    ]\n\n    results = []\n    for N, alpha, beta in test_cases:\n        evals = tight_binding_eigenvalues(N, alpha, beta)\n        rounded = round_eigenvalues(evals, ndigits=6)\n        results.append(rounded)\n\n    # Final print statement in the exact required format: a single line,\n    # list of lists, no spaces.\n    print(json.dumps(results, separators=(',',':')))\n\nsolve()\n```", "id": "2462030"}, {"introduction": "The concept of self-consistency is a cornerstone of modern quantum chemistry, describing a situation where the electron distribution both determines and is determined by the system's effective Hamiltonian. This advanced practice [@problem_id:2462064] tasks you with implementing a complete Self-Consistent Field (SCF) loop for a diatomic molecule within a simplified MNDO-like framework. By coding this iterative process from first principles, you will gain a profound understanding of how an initial guess for the electron density is refined until a stable, converged solution is achieved, demystifying the core engine of most quantum chemistry software.", "problem": "You are asked to implement a minimal Self-Consistent Field (SCF) loop for a diatomic molecule in a Modified Neglect of Diatomic Overlap (MNDO)-like framework. The aim is to express how semi-empirical parameters such as the one-center valence orbital energy $U_{ss}$ and the two-center resonance parameter $\\beta_s$ enter the construction of the Fock matrix. Your program must compute the total energy for several diatomic test cases and output the results in a single line.\n\nStart from the following fundamental base and well-tested modeling choices:\n\n- The Hartree–Fock electronic energy in an orthogonal minimal basis is\n$$\nE_{\\mathrm{el}} = \\sum_{\\mu,\\nu} P_{\\mu\\nu} H_{\\nu\\mu} + \\frac{1}{2}\\sum_{A}\\sum_{B} \\Delta q_A \\, \\Delta q_B \\, \\gamma_{AB}(R_{AB}),\n$$\nwhere $P$ is the one-electron density matrix, $H$ is the one-electron core Hamiltonian, $\\Delta q_A$ is the net charge on atom $A$, $\\gamma_{AB}(R_{AB})$ is an effective two-center electron–electron repulsion integral, and $R_{AB}$ is the internuclear distance between atoms $A$ and $B$. The total energy is\n$$\nE_{\\mathrm{tot}} = E_{\\mathrm{el}} + E_{\\mathrm{nn}},\n$$\nwith nuclear repulsion\n$$\nE_{\\mathrm{nn}} = k \\sum_{A<B} \\frac{Z_A Z_B}{R_{AB}}.\n$$\n\n- Use the Neglect of Diatomic Differential Overlap (NDDO) approximation with an orthogonal basis (one $s$-type valence orbital per atom), so the overlap matrix is the identity. The Mulliken gross electron population on atom $A$ is\n$$\nQ_A = \\sum_{\\mu \\in A} P_{\\mu\\mu},\n$$\nand the net charge is\n$$\n\\Delta q_A = Z_A - Q_A,\n$$\nwhere $Z_A$ is the number of valence electrons for atom $A$.\n\n- Model the one-electron core Hamiltonian using semi-empirical parameters $U_{ss}$ (valence-state ionization potential proxy) and $\\beta_s$ (resonance integral proxy):\n  - For basis function $\\mu$ on atom $A$, the diagonal element is\n  $$\n  H_{\\mu\\mu} = U_{ss}(A).\n  $$\n  - For different atoms $A \\neq B$ with one $s$ orbital each, the off-diagonal element is modeled by a distance-damped resonance integral\n  $$\n  H_{\\mu\\nu} = \\beta_{s}^{\\mathrm{geom}} \\cdot f(R_{AB}), \\quad f(R) = e^{-\\alpha R},\n  $$\n  where $\\beta_{s}^{\\mathrm{geom}}$ is the geometric mean of $\\beta_s$ parameters on atoms $A$ and $B$, and $\\alpha$ is a positive damping parameter with units of inverse length.\n\n- Use an Ohno-like softened Coulomb interaction for the two-center electron–electron repulsion\n$$\n\\gamma_{AB}(R) = \\frac{k}{\\sqrt{R^2 + \\delta_{AB}^2}},\n$$\nwhere $k = 14.399645478$ has units of electronvolt–angstrom (the Coulomb constant $e^2/(4\\pi\\varepsilon_0)$ in electronvolt–angstrom), and\n$$\n\\delta_{AB} = \\frac{k}{\\sqrt{\\gamma_{AA}\\gamma_{BB}}},\n$$\nwith $\\gamma_{AA}$ the on-site electron–electron repulsion parameter (in electronvolt) for atom $A$ and $\\gamma_{BB}$ for atom $B$.\n\n- The Fock matrix $F$ must be obtained by taking the derivative of the electronic energy with respect to the density matrix elements, consistent with the above definitions and the NDDO approximation, and then iterating to self-consistency:\n  - Initialize a reasonable density matrix $P^{(0)}$ (for example, zeros).\n  - At each iteration $n$, build $F^{(n)}$ from $H$ and the current charges $\\{\\Delta q_A^{(n)}\\}$.\n  - Diagonalize $F^{(n)}$ to obtain molecular orbitals and occupy the lowest-energy orbitals with the specified number of electrons (closed-shell occupancy with factor $2$ when applicable).\n  - Form a new density matrix $P^{(n+1)}$ from the occupied orbitals.\n  - Mix $P^{(n+1)}$ with $P^{(n)}$ if needed to aid convergence.\n  - Converge when the root-mean-square change in $P$ drops below a tolerance.\n\n- Angles are not involved. Distances must be treated in angstrom, $R$ in $\\mathrm{\\AA}$, and all energies must be reported in electronvolt (eV). Express the final energies to six decimal places.\n\nImplement the SCF procedure as a complete, runnable program that produces the total energies $E_{\\mathrm{tot}}$ for the following test suite. For all cases use tolerance $\\tau = 10^{-10}$ for the density matrix root-mean-square change and a simple linear mixing with mixing factor $m = 0.5$.\n\nTest suite (each case is a tuple of parameters):\n1. Case A (happy path, neutral diatomic): $R = 0.74\\,\\mathrm{\\AA}$, $Z_A = 1$, $Z_B = 1$, $U_{ss}(A) = -11.906276\\,\\mathrm{eV}$, $U_{ss}(B) = -11.906276\\,\\mathrm{eV}$, $\\beta_s(A) = -6.989064\\,\\mathrm{eV}$, $\\beta_s(B) = -6.989064\\,\\mathrm{eV}$, $\\gamma_{AA} = 12.848\\,\\mathrm{eV}$, $\\gamma_{BB} = 12.848\\,\\mathrm{eV}$, $n_e = 2$, $\\alpha = 1.75\\,\\mathrm{\\AA}^{-1}$.\n2. Case B (one-electron system): $R = 2.00\\,\\mathrm{\\AA}$, same atomic parameters as Case A but $n_e = 1$, and $\\alpha = 1.75\\,\\mathrm{\\AA}^{-1}$.\n3. Case C (dissociation limit trend): $R = 5.00\\,\\mathrm{\\AA}$, same atomic parameters as Case A, $n_e = 2$, $\\alpha = 1.75\\,\\mathrm{\\AA}^{-1}$.\n4. Case D (short bond edge case): $R = 0.30\\,\\mathrm{\\AA}$, same atomic parameters as Case A, $n_e = 2$, $\\alpha = 1.75\\,\\mathrm{\\AA}^{-1}$.\n\nYour program should:\n- Construct and iterate the SCF as described, beginning from first principles given above.\n- For each case, compute the converged total energy $E_{\\mathrm{tot}}$ in electronvolt.\n- Produce a single line of output containing a comma-separated list of the total energies for the four cases in the order A, B, C, D, enclosed in square brackets. For example, your program must print a line of the form\n\"[E_A,E_B,E_C,E_D]\"\nwith each $E$ shown to six decimal places (e.g., \"$-20.123456$\").\n\nNote: The intent is to test that you can derive where the semi-empirical parameters $U_{ss}$ and $\\beta_s$ are used within the SCF loop and how they influence the core Hamiltonian and hence the Fock matrix, while using a scientifically plausible MNDO-like model. No user input is required; hard-code the test suite in your program.", "solution": "The problem requires the implementation of a Self-Consistent Field (SCF) procedure for a diatomic molecule within a specified semi-empirical quantum chemical model, which resembles a Modified Neglect of Diatomic Overlap (MNDO) framework. The solution involves deriving the appropriate Fock matrix from the given energy expression and then implementing the iterative SCF algorithm to compute the total energy for several test cases.\n\nFirst, we formalize the model for a diatomic molecule composed of atoms $A$ and $B$, with a single $s$-type valence orbital on each, labeled $\\mu=1$ on atom $A$ and $\\nu=2$ on atom $B$. The basis is assumed to be orthogonal, so the overlap matrix $S$ is the identity matrix, $S_{\\mu\\nu} = \\delta_{\\mu\\nu}$.\n\nThe total energy $E_{\\mathrm{tot}}$ is the sum of the electronic energy $E_{\\mathrm{el}}$ and the nuclear-nuclear repulsion energy $E_{\\mathrm{nn}}$:\n$$ E_{\\mathrm{tot}} = E_{\\mathrm{el}} + E_{\\mathrm{nn}} $$\nThe nuclear repulsion for a diatomic molecule at distance $R_{AB}$ is given by:\n$$ E_{\\mathrm{nn}} = k \\frac{Z_A Z_B}{R_{AB}} $$\nwhere $Z_A$ and $Z_B$ are the number of valence electrons on atoms $A$ and $B$, respectively, and $k = 14.399645478 \\, \\mathrm{eV \\cdot \\AA}$ is the Coulomb constant.\n\nThe electronic energy $E_{\\mathrm{el}}$ is defined as:\n$$ E_{\\mathrm{el}} = \\sum_{\\mu,\\nu} P_{\\mu\\nu} H_{\\nu\\mu} + \\frac{1}{2}\\sum_{C,D \\in \\{A,B\\}} \\Delta q_C \\Delta q_D \\gamma_{CD} $$\nHere, $P$ is the density matrix, $H$ is the core Hamiltonian, and $\\Delta q_C$ is the net charge on atom $C$, defined as $\\Delta q_C = Z_C - Q_C$, where $Q_C = \\sum_{\\mu \\in C} P_{\\mu\\mu}$ is the Mulliken electron population. For our two-orbital system, $Q_A = P_{11}$ and $Q_B = P_{22}$.\n\nThe core Hamiltonian matrix elements $H_{\\mu\\nu}$ are parameterized as:\n- Diagonal elements: $H_{11} = U_{ss}(A)$ and $H_{22} = U_{ss}(B)$, where $U_{ss}$ is the one-center valence orbital energy.\n- Off-diagonal elements: $H_{12} = H_{21} = \\beta_{s}^{\\mathrm{geom}} e^{-\\alpha R_{AB}}$, where $\\beta_{s}^{\\mathrm{geom}} = -\\sqrt{|\\beta_s(A)||\\beta_s(B)|}$ is the geometric mean of the resonance parameters, and $\\alpha$ is a damping constant.\n\nThe two-center electron repulsion integrals $\\gamma_{CD}$ are given by the Ohno-like formula for $C \\neq D$:\n$$ \\gamma_{AB} = \\frac{k}{\\sqrt{R_{AB}^2 + \\delta_{AB}^2}} \\quad \\text{with} \\quad \\delta_{AB} = \\frac{k}{\\sqrt{\\gamma_{AA}\\gamma_{BB}}} $$\nThe one-center repulsion integrals $\\gamma_{AA}$ and $\\gamma_{BB}$ are a priori parameters.\n\nThe central part of the solution is the derivation of the Fock matrix $F$ by differentiating $E_{\\mathrm{el}}$ with respect to the density matrix elements $P_{\\nu\\mu}$, as $F_{\\mu\\nu} = \\partial E_{\\mathrm{el}} / \\partial P_{\\nu\\mu}$ for an orthogonal basis.\nThe one-electron part of $E_{\\mathrm{el}}$, $\\sum_{\\rho,\\sigma} P_{\\rho\\sigma} H_{\\sigma\\rho}$, contributes $H_{\\mu\\nu}$ to $F_{\\mu\\nu}$.\nThe two-electron part, $E_{2e} = \\frac{1}{2}\\sum_{C,D} \\Delta q_C \\Delta q_D \\gamma_{CD}$, depends only on the diagonal elements of the density matrix, $P_{11}$ and $P_{22}$.\n$$ E_{2e} = \\frac{1}{2} \\left[ (Z_A - P_{11})^2 \\gamma_{AA} + (Z_B - P_{22})^2 \\gamma_{BB} + 2(Z_A - P_{11})(Z_B - P_{22})\\gamma_{AB} \\right] $$\nThe derivatives are:\n- For off-diagonal elements ($\\mu \\ne \\nu$): $\\partial E_{2e} / \\partial P_{21} = 0$. Thus, $F_{12} = H_{12}$.\n- For diagonal elements ($\\mu = \\nu$):\n$$ \\frac{\\partial E_{2e}}{\\partial P_{11}} = \\frac{1}{2} \\left[ 2(Z_A - P_{11})(-1)\\gamma_{AA} + 2(-1)(Z_B - P_{22})\\gamma_{AB} \\right] = -\\Delta q_A \\gamma_{AA} - \\Delta q_B \\gamma_{AB} = -\\sum_{C \\in \\{A,B\\}} \\Delta q_C \\gamma_{AC} $$\n$$ \\frac{\\partial E_{2e}}{\\partial P_{22}} = -\\Delta q_A \\gamma_{AB} - \\Delta q_B \\gamma_{BB} = -\\sum_{C \\in \\{A,B\\}} \\Delta q_C \\gamma_{BC} $$\n\nSo, the Fock matrix elements are:\n$$ F_{11} = H_{11} - (\\Delta q_A \\gamma_{AA} + \\Delta q_B \\gamma_{AB}) $$\n$$ F_{22} = H_{22} - (\\Delta q_A \\gamma_{AB} + \\Delta q_B \\gamma_{BB}) $$\n$$ F_{12} = F_{21} = H_{12} $$\nThese expressions define how the parameters $U_{ss}$ and $\\beta_s$ (via $H$) influence the Fock matrix.\n\nThe SCF algorithm proceeds as follows:\n1.  **Initialization**: Given the molecular geometry and atomic parameters, calculate the constant matrices $H$ and the repulsion integrals $\\gamma_{AA}, \\gamma_{BB}, \\gamma_{AB}$. Initialize the density matrix $P^{(0)}$, for example, as a zero matrix.\n2.  **Iteration**: For iteration $n=0, 1, 2, \\dots$:\n    a. Calculate populations $Q_A^{(n)} = P_{11}^{(n)}, Q_B^{(n)} = P_{22}^{(n)}$ and net charges $\\Delta q_A^{(n)} = Z_A - Q_A^{(n)}, \\Delta q_B^{(n)} = Z_B - Q_B^{(n)}$.\n    b. Construct the Fock matrix $F^{(n)}$ using the charges $\\Delta q^{(n)}$ and the derived formulas.\n    c. Solve the secular equation $F^{(n)} C^{(n)} = C^{(n)} \\epsilon^{(n)}$, which is a standard eigenvalue problem for an orthogonal basis. This yields molecular orbital (MO) energies $\\epsilon_i^{(n)}$ and MO coefficient vectors $C_i^{(n)}$.\n    d. Form a new density matrix $P_{\\text{new}}^{(n)}$ by filling the MOs with the total number of electrons $n_e$. For $n_e$ electrons, the density matrix is $P_{\\text{new}}^{(n)} = \\sum_{i}^{\\text{occupied}} n_i C_i^{(n)} (C_i^{(n)})^\\top$, where $n_i$ is the occupation number of MO $i$. For a closed-shell system with $n_e=2$, the lowest-energy orbital is occupied by $2$ electrons ($n_1=2, n_2=0$). For an open-shell system with $n_e=1$, it is occupied by $1$ electron ($n_1=1, n_2=0$).\n    e. To aid convergence, mix the new and old density matrices: $P^{(n+1)} = (1-m)P^{(n)} + m P_{\\text{new}}^{(n)}$, with a mixing factor $m=0.5$.\n3.  **Convergence**: The loop terminates when the root-mean-square difference (RMSD) between successive density matrices falls below a tolerance $\\tau=10^{-10}$: $\\sqrt{\\frac{1}{4}\\sum_{\\mu,\\nu} (P_{\\mu\\nu}^{(n+1)} - P_{\\mu\\nu}^{(n)})^2} < \\tau$.\n4.  **Energy Calculation**: Once converged to a final density matrix $P$, the total energy is calculated using the initial energy expressions:\n    $$ E_{\\mathrm{el}} = P_{11}H_{11} + P_{22}H_{22} + 2P_{12}H_{12} + \\frac{1}{2}(\\Delta q_A^2 \\gamma_{AA} + \\Delta q_B^2 \\gamma_{BB} + 2\\Delta q_A \\Delta q_B \\gamma_{AB}) $$\n    $$ E_{\\mathrm{tot}} = E_{\\mathrm{el}} + k \\frac{Z_A Z_B}{R_{AB}} $$\n\nThis procedure is applied to each test case, providing the converged total energy. For homonuclear cases, symmetry dictates that the SCF will converge to a state where charges are either zero (for a neutral molecule) or distributed equally (for an ion).", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the semi-empirical SCF problem for the given test suite.\n    \"\"\"\n\n    k_coulomb = 14.399645478  # eV * Angstrom\n\n    # Test suite: (R, ZA, ZB, U_A, U_B, beta_A, beta_B, gamma_AA, gamma_BB, n_e, alpha)\n    test_cases = [\n        # Case A: Happy path, neutral diatomic\n        (0.74, 1.0, 1.0, -11.906276, -11.906276, -6.989064, -6.989064, 12.848, 12.848, 2, 1.75),\n        # Case B: One-electron system\n        (2.00, 1.0, 1.0, -11.906276, -11.906276, -6.989064, -6.989064, 12.848, 12.848, 1, 1.75),\n        # Case C: Dissociation limit trend\n        (5.00, 1.0, 1.0, -11.906276, -11.906276, -6.989064, -6.989064, 12.848, 12.848, 2, 1.75),\n        # Case D: Short bond edge case\n        (0.30, 1.0, 1.0, -11.906276, -11.906276, -6.989064, -6.989064, 12.848, 12.848, 2, 1.75),\n    ]\n    \n    results = []\n    for case in test_cases:\n        energy = run_scf_calculation(case, k_coulomb)\n        results.append(f\"{energy:.6f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef run_scf_calculation(case_params, k):\n    \"\"\"\n    Performs the SCF calculation for a single test case.\n    \"\"\"\n    R, Z_A, Z_B, U_A, U_B, beta_A, beta_B, gamma_AA, gamma_BB, n_e, alpha = case_params\n    \n    # SCF parameters\n    tolerance = 1e-10\n    mixing_factor = 0.5\n    max_iterations = 200\n\n    # --- 1. Initialization ---\n    \n    # Core Hamiltonian (H)\n    H = np.zeros((2, 2))\n    H[0, 0] = U_A\n    H[1, 1] = U_B\n    # Take negative of sqrt of product of magnitudes for beta_geom to preserve sign\n    beta_geom = -np.sqrt(np.abs(beta_A) * np.abs(beta_B))\n    H[0, 1] = H[1, 0] = beta_geom * np.exp(-alpha * R)\n\n    # Electron repulsion integrals (gamma)\n    delta_ab = k / np.sqrt(gamma_AA * gamma_BB)\n    gamma_AB = k / np.sqrt(R**2 + delta_ab**2)\n\n    # Initial density matrix\n    P = np.zeros((2, 2))\n\n    # --- 2. SCF Iteration Loop ---\n    \n    for i in range(max_iterations):\n        P_old = P.copy()\n\n        # a. Calculate charges\n        Q_A = P[0, 0]\n        Q_B = P[1, 1]\n        dq_A = Z_A - Q_A\n        dq_B = Z_B - Q_B\n\n        # b. Build Fock matrix (F)\n        F = np.zeros((2, 2))\n        F[0, 0] = H[0, 0] - (dq_A * gamma_AA + dq_B * gamma_AB)\n        F[1, 1] = H[1, 1] - (dq_A * gamma_AB + dq_B * gamma_BB)\n        F[0, 1] = F[1, 0] = H[0, 1]\n\n        # c. Solve secular equation FC = Ce\n        eigvals, eigvecs = np.linalg.eigh(F)\n        \n        # d. Form new density matrix from occupied orbitals\n        P_new = np.zeros((2, 2))\n        # Find the lowest energy orbital (ground state)\n        idx_gs = np.argmin(eigvals)\n        C_gs = eigvecs[:, idx_gs]\n        \n        # Occupation depends on n_e\n        if n_e == 2:\n            # Closed-shell: 2 electrons in the ground state orbital\n            P_new = 2.0 * np.outer(C_gs, C_gs)\n        elif n_e == 1:\n            # Open-shell: 1 electron in the ground state orbital\n            P_new = 1.0 * np.outer(C_gs, C_gs)\n        else: # Unspecified, but one could add more cases\n             P_new = np.zeros((2, 2))\n\n        # e. Mix density matrices\n        P = (1.0 - mixing_factor) * P_old + mixing_factor * P_new\n\n        # f. Check for convergence\n        rmsd = np.sqrt(np.sum((P - P_old)**2) / 4.0)\n        if rmsd < tolerance:\n            break\n\n    # --- 3. Energy Calculation ---\n    \n    # Final charges from converged density P\n    Q_A_conv = P[0, 0]\n    Q_B_conv = P[1, 1]\n    dq_A_conv = Z_A - Q_A_conv\n    dq_B_conv = Z_B - Q_B_conv\n\n    # Electronic energy\n    E_el = np.sum(P * H)  # equivalent to Tr(PH)\n    E_coulomb = 0.5 * (dq_A_conv**2 * gamma_AA + dq_B_conv**2 * gamma_BB + 2 * dq_A_conv * dq_B_conv * gamma_AB)\n    E_el += E_coulomb\n\n    # Nuclear repulsion energy\n    E_nn = k * (Z_A * Z_B) / R if R > 0 else 0\n\n    # Total energy\n    E_total = E_el + E_nn\n\n    return E_total\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2462064"}]}