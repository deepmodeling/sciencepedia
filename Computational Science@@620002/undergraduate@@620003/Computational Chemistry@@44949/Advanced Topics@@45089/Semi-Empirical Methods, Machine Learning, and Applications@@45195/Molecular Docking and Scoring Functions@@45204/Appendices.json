{"hands_on_practices": [{"introduction": "Before we can trust a computational model to predict the unknown, we must first confirm its ability to reproduce the known. This exercise explores the fundamental concept of \"redocking,\" a critical first step in structure-based drug design projects. By performing this validation, we build confidence in our chosen docking algorithm and scoring function, ensuring they are suitable for the specific biological system we are studying [@problem_id:2150153].", "problem": "In a structure-based drug design project, a researcher obtains a high-resolution X-ray crystal structure of a target enzyme in complex with its known, potent inhibitor. The Protein Data Bank (PDB) file contains the coordinates for both the enzyme and the bound inhibitor. Before proceeding to screen a large virtual library of novel compounds against this enzyme, the researcher performs an initial computational step called \"redocking.\" This involves computationally removing the inhibitor from the binding site, treating it as a flexible ligand, and then using a docking software to place it back into the same binding site on the rigid enzyme.\n\nWhat is the primary scientific goal of this redocking procedure?\n\nA. To validate that the chosen docking algorithm and scoring function can accurately reproduce the experimentally observed binding pose of the known inhibitor.\n\nB. To calculate the precise, absolute binding free energy of the inhibitor to the enzyme.\n\nC. To discover alternative, previously unknown binding sites on the surface of the enzyme.\n\nD. To computationally refine and improve the resolution of the initial X-ray crystal structure of the enzyme.\n\nE. To generate a set of new, structurally diverse compounds that are predicted to bind more tightly than the original inhibitor.", "solution": "We begin by defining the redocking procedure: given an enzyme-inhibitor complex with an experimentally determined pose from X-ray crystallography, the inhibitor is computationally removed and then docked back into the binding site of a rigid receptor using a chosen docking algorithm and scoring function. The scientific role of this step is to test whether the docking protocol can recover the crystallographic binding mode (pose) of a known ligand under conditions that closely match the experimental complex.\n\nThe primary goal is therefore methodological validation: if the algorithm and scoring function can reproduce the experimentally observed pose with small root-mean-square deviation from the crystallographic coordinates, they are considered suitable (or can be tuned) for prospective virtual screening on novel compounds for the same target. This establishes confidence in pose prediction and ranking within the specific system.\n\nWe now exclude alternative interpretations:\n- Option B is incorrect because docking scoring functions are not designed to yield precise, absolute binding free energies; accurate absolute free energy calculations require rigorous methods such as alchemical free energy calculations, not standard docking.\n- Option C is incorrect because discovering alternative binding sites typically involves blind docking or binding site detection algorithms; redocking focuses on a known site and known ligand.\n- Option D is incorrect because improving crystallographic resolution is a crystallography/refinement task (e.g., refinement against diffraction data), not a docking task.\n- Option E is incorrect because generating new compounds is a design or enumeration activity; while validated docking may later be used to screen new compounds, redocking itself does not generate novel molecules.\n\nTherefore, the primary scientific goal of redocking is to validate the docking algorithm and scoring function by reproducing the known experimental pose.", "answer": "$$\\boxed{A}$$", "id": "2150153"}, {"introduction": "Molecular docking combines two key components: a search algorithm to explore possible ligand poses and a scoring function to evaluate their quality. This practice demystifies this process by having you implement a simplified scoring function and a stochastic search method. By varying the \"exhaustiveness\" of the search, you will gain hands-on insight into how the extent of conformational sampling impacts the ability to locate the lowest-energy binding mode within a complex energy landscape [@problem_id:2458158].", "problem": "You are given a mathematically defined surrogate model of a docking scoring function for a flexible ligand in a constrained pocket. The ligand has two rotatable bonds described by torsion angles $\\theta_1$ and $\\theta_2$ (angles in radians), and a one-dimensional translational degree of freedom $d$ (distance in Angstroms) along the pocket axis. The total energy $E(d,\\theta_1,\\theta_2)$ in kilocalories per mole (kcal/mol) is defined as the sum of four terms:\n$$\nE(d,\\theta_1,\\theta_2) \\;=\\; E_{\\mathrm{vdW}}(d) \\;+\\; E_{\\mathrm{HB}}(d,\\theta_1) \\;+\\; E_{\\mathrm{tors}}(\\theta_1,\\theta_2) \\;+\\; E_{\\mathrm{shape}}(d,\\theta_2).\n$$\nAll distances are in Angstroms, all angles are in radians, and all energies are in kilocalories per mole. The four terms are given by:\n1. A Lennard–Jones (van der Waals) interaction centered at a receptor site at $d_{\\mathrm{site}}$:\n$$\nE_{\\mathrm{vdW}}(d) \\;=\\; 4\\varepsilon \\left[\\left(\\frac{\\sigma}{r_{\\mathrm{core}} + |d - d_{\\mathrm{site}}|}\\right)^{12} - \\left(\\frac{\\sigma}{r_{\\mathrm{core}} + |d - d_{\\mathrm{site}}|}\\right)^{6}\\right],\n$$\nwith parameters $\\varepsilon = 0.8$, $\\sigma = 1.5$, and $r_{\\mathrm{core}} = 0.3$.\n2. A directional hydrogen-bond-like term:\n$$\nE_{\\mathrm{HB}}(d,\\theta_1) \\;=\\; -A \\,\\cos^2(\\theta_1 - \\phi)\\, \\exp\\!\\left(-\\frac{\\left(|d - d_{\\mathrm{site}}| - r_h\\right)^2}{2 s^2}\\right),\n$$\nwith parameters $A = 2.0$, $r_h = 2.0$, $s = 0.5$, and an orientation preference $\\phi$.\n3. A torsional preference for each rotatable bond:\n$$\nE_{\\mathrm{tors}}(\\theta_1,\\theta_2) \\;=\\; \\frac{k_1}{2}\\left(1 - \\cos(3\\theta_1)\\right) \\;+\\; \\frac{k_2}{2}\\left(1 - \\cos(3\\theta_2)\\right),\n$$\nwith $k_1 = 1.2$ and $k_2 = 0.6$.\n4. A shape constraint penalizing configurations that do not fit into a spherical pocket of radius $R$:\n$$\nE_{\\mathrm{shape}}(d,\\theta_2) \\;=\\; B \\,\\max\\!\\left(0,\\, |d| + q\\,(1 + \\cos\\theta_2) - R\\right)^2,\n$$\nwith $B = 5.0$ and $q = 0.6$.\n\nThe domain of the variables is $d \\in [-R, R]$, $\\theta_1 \\in [-\\pi,\\pi]$, and $\\theta_2 \\in [-\\pi,\\pi]$.\n\nTo formalize the notion of an “exhaustiveness” parameter for the search, consider the following pseudorandom sequence. Let $m = 2147483647$, $a = 48271$, $c = 0$, and the seed $u_0 = 12345$. Define the linear congruential generator (LCG) by\n$$\nu_{k+1} = (a\\,u_k + c) \\bmod m, \\quad \\text{and} \\quad x_k = \\frac{u_k}{m},\n$$\nso that $x_k \\in (0,1)$ for all $k \\ge 1$. For a given positive integer $n$, define the set $S_n$ to be the first $n$ points in the search space obtained by mapping triples of successive pseudorandom variables to the degrees of freedom as follows. For the $i$-th sample, take $(x_{3i-2}, x_{3i-1}, x_{3i})$ and define\n$$\nd_i = -R + 2R\\,x_{3i-2}, \\quad \\theta_{1,i} = -\\pi + 2\\pi\\,x_{3i-1}, \\quad \\theta_{2,i} = -\\pi + 2\\pi\\,x_{3i}.\n$$\nDefine the best energy found at exhaustiveness $n$ as\n$$\nE_{\\min}(n; R, d_{\\mathrm{site}}, \\phi) \\;=\\; \\min_{1 \\le i \\le n} \\; E(d_i,\\theta_{1,i},\\theta_{2,i}).\n$$\n\nYour task is to compute $E_{\\min}(n; R, d_{\\mathrm{site}}, \\phi)$ for each parameter set in the following test suite. For each test case, independently reinitialize the pseudorandom sequence with the same seed $u_0 = 12345$ and start from $x_1$ as defined above. Use the constants provided above for all terms and parameters not listed in the test suite. The required angle unit is radians, and the required energy unit is kilocalories per mole. Report each result as a floating-point number in kilocalories per mole rounded to $6$ decimal places.\n\nTest suite (each tuple is $(R, d_{\\mathrm{site}}, \\phi, n)$):\n- $\\left(2.5, \\; 0.0, \\; 0, \\; 1\\right)$\n- $\\left(2.5, \\; 0.0, \\; 0, \\; 64\\right)$\n- $\\left(2.5, \\; 0.0, \\; 0, \\; 512\\right)$\n- $\\left(1.2, \\; 0.4, \\; \\frac{\\pi}{3}, \\; 64\\right)$\n- $\\left(1.2, \\; 0.4, \\; \\frac{\\pi}{3}, \\; 512\\right)$\n- $\\left(1.0, \\; 0.4, \\; \\frac{\\pi}{3}, \\; 512\\right)$\n\nFinal output format: Your program should produce a single line of output containing the results, in order corresponding to the test suite above, as a comma-separated list enclosed in square brackets. For example, an acceptable format is a string like \"[r1,r2,r3,r4,r5,r6]\" where each $r_j$ is the rounded floating-point result for the $j$-th test case, expressed in kilocalories per mole with $6$ decimal places and no additional text. Angles must be in radians as specified, and energies must be reported in kilocalories per mole.", "solution": "The problem presented is a well-defined computational task in the field of computational chemistry, specifically concerning the evaluation of a simplified molecular docking scoring function. The problem is scientifically grounded, mathematically complete, and algorithmically specified. It is therefore deemed valid and a solution will be constructed.\n\nThe objective is to find the minimum value of a total energy function, $E(d,\\theta_1,\\theta_2)$, which models the binding of a flexible ligand within a receptor pocket. The ligand's conformation is described by three degrees of freedom: one translational coordinate $d$ (in Angstroms) and two torsional angles $\\theta_1$ and $\\theta_2$ (in radians). The total energy is the sum of four distinct terms:\n$$\nE(d,\\theta_1,\\theta_2) = E_{\\mathrm{vdW}}(d) + E_{\\mathrm{HB}}(d,\\theta_1) + E_{\\mathrm{tors}}(\\theta_1,\\theta_2) + E_{\\mathrm{shape}}(d,\\theta_2)\n$$\nEach term represents a specific physical interaction or constraint:\n\n1.  **Van der Waals Interaction ($E_{\\mathrm{vdW}}$)**: This term is modeled by a Lennard-Jones $12-6$ potential, describing non-bonded interactions between the ligand and a specific site in the receptor at position $d_{\\mathrm{site}}$. The functional form is:\n    $$\n    E_{\\mathrm{vdW}}(d) = 4\\varepsilon \\left[\\left(\\frac{\\sigma}{r_{\\mathrm{core}} + |d - d_{\\mathrm{site}}|}\\right)^{12} - \\left(\\frac{\\sigma}{r_{\\mathrm{core}} + |d - d_{\\mathrm{site}}|}\\right)^{6}\\right]\n    $$\n    The parameters are specified as $\\varepsilon = 0.8 \\, \\text{kcal/mol}$, $\\sigma = 1.5 \\, \\text{Å}$, and $r_{\\mathrm{core}} = 0.3 \\, \\text{Å}$.\n\n2.  **Hydrogen Bond Interaction ($E_{\\mathrm{HB}}$)**: This term models a directional, distance-dependent hydrogen bond. Its energy is favorable when the angle $\\theta_1$ aligns with a preferred orientation $\\phi$ and the ligand is at a specific distance $r_h$ from the site $d_{\\mathrm{site}}$. The function is:\n    $$\n    E_{\\mathrm{HB}}(d,\\theta_1) = -A \\,\\cos^2(\\theta_1 - \\phi)\\, \\exp\\!\\left(-\\frac{\\left(|d - d_{\\mathrm{site}}| - r_h\\right)^2}{2 s^2}\\right)\n    $$\n    The parameters are given as $A = 2.0 \\, \\text{kcal/mol}$, $r_h = 2.0 \\, \\text{Å}$, and $s = 0.5 \\, \\text{Å}$.\n\n3.  **Torsional Energy ($E_{\\mathrm{tors}}$)**: This term accounts for the intrinsic energetic preference of the two rotatable bonds, described by angles $\\theta_1$ and $\\theta_2$. A simple periodic potential is used:\n    $$\n    E_{\\mathrm{tors}}(\\theta_1,\\theta_2) = \\frac{k_1}{2}\\left(1 - \\cos(3\\theta_1)\\right) + \\frac{k_2}{2}\\left(1 - \\cos(3\\theta_2)\\right)\n    $$\n    The torsional force constants are $k_1 = 1.2 \\, \\text{kcal/mol}$ and $k_2 = 0.6 \\, \\text{kcal/mol}$.\n\n4.  **Shape Constraint ($E_{\\mathrm{shape}}$)**: This term imposes a severe energy penalty if the ligand's conformation extends beyond a spherical pocket of radius $R$. It is a quadratic penalty function:\n    $$\n    E_{\\mathrm{shape}}(d,\\theta_2) = B \\,\\max\\!\\left(0,\\, |d| + q\\,(1 + \\cos\\theta_2) - R\\right)^2\n    $$\n    The parameters are $B = 5.0 \\, \\text{kcal/mol/Å}^2$ and $q = 0.6 \\, \\text{Å}$.\n\nThe search for the minimum energy $E_{\\min}$ is performed not over the entire continuous domain, but over a discrete set of points $S_n$ containing $n$ samples. These samples are generated using a deterministic pseudorandom process. A Linear Congruential Generator (LCG) is defined by $u_{k+1} = (a\\,u_k + c) \\pmod m$ with parameters $m = 2147483647$, $a = 48271$, $c = 0$, and seed $u_0 = 12345$. The integer sequence $u_k$ is mapped to a sequence of real numbers $x_k = u_k/m$ in the interval $(0,1)$.\n\nFor each test case, defined by a tuple $(R, d_{\\mathrm{site}}, \\phi, n)$, the LCG must be re-initialized. Then, for $i$ from $1$ to $n$, a triplet of pseudorandom numbers $(x_{3i-2}, x_{3i-1}, x_{3i})$ is generated and mapped to the ligand's degrees of freedom $(d_i, \\theta_{1,i}, \\theta_{2,i})$ as follows:\n$$\nd_i = -R + 2R\\,x_{3i-2}\n$$\n$$\n\\theta_{1,i} = -\\pi + 2\\pi\\,x_{3i-1}\n$$\n$$\n\\theta_{2,i} = -\\pi + 2\\pi\\,x_{3i}\n$$\nThe total energy $E(d_i, \\theta_{1,i}, \\theta_{2,i})$ is calculated for each of the $n$ sampled conformations. The minimum energy found across these $n$ samples, $E_{\\min}(n; R, d_{\\mathrm{site}}, \\phi)$, is the desired result for that test case.\n\nThe solution is implemented as a computational procedure. For each set of parameters $(R, d_{\\mathrm{site}}, \\phi, n)$ provided in the test suite:\n1.  A function implementing the specified LCG is used to generate a sequence of $3n$ pseudorandom numbers.\n2.  A loop iterates $n$ times. In each iteration $i$, three consecutive numbers from the sequence are consumed.\n3.  These three numbers are transformed into the coordinates $(d_i, \\theta_{1,i}, \\theta_{2,i})$ using the given mapping equations.\n4.  The total energy $E_i$ is computed by summing the four energy components, each evaluated with the sampled coordinates and the specific parameters for the test case.\n5.  A variable tracking the minimum energy is updated if the current energy $E_i$ is lower than the minimum found so far. The initial minimum is set to positive infinity.\n6.  After $n$ iterations, the final minimum energy is stored. This process is repeated for all test cases.\n7.  The collected results are formatted to $6$ decimal places and presented in the required comma-separated list format.", "answer": "```python\nimport numpy as np\n\n# Global constants for energy terms\nEPSILON = 0.8\nSIGMA = 1.5\nR_CORE = 0.3\nA_HB = 2.0\nR_H = 2.0\nS_HB = 0.5\nK1 = 1.2\nK2 = 0.6\nB_SHAPE = 5.0\nQ_SHAPE = 0.6\n\n# Global constants for LCG\nM = 2147483647\nA_LCG = 48271\nC_LCG = 0\nU0 = 12345\n\ndef lcg_generator(n_vals):\n    \"\"\"\n    Generator for pseudorandom numbers using the specified LCG parameters.\n    Yields n_vals numbers in the interval (0, 1).\n    \"\"\"\n    u = U0\n    for _ in range(n_vals):\n        u = (A_LCG * u + C_LCG) % M\n        # u will be in [1, m-1] since m is prime, c=0, and u0 != 0\n        yield u / M\n\ndef calculate_energy(d, theta1, theta2, R, d_site, phi):\n    \"\"\"\n    Calculates the total energy E(d, theta1, theta2) for a given conformation\n    and a set of environmental parameters (R, d_site, phi).\n    \"\"\"\n    # E_vdW: van der Waals interaction\n    dist_from_site = abs(d - d_site)\n    vdw_term = SIGMA / (R_CORE + dist_from_site)\n    e_vdw = 4.0 * EPSILON * (vdw_term**12 - vdw_term**6)\n\n    # E_HB: Hydrogen bond interaction\n    exp_arg = -((dist_from_site - R_H)**2) / (2.0 * S_HB**2)\n    e_hb = -A_HB * (np.cos(theta1 - phi)**2) * np.exp(exp_arg)\n\n    # E_tors: Torsional energy\n    e_tors = (K1 / 2.0) * (1.0 - np.cos(3.0 * theta1)) + \\\n             (K2 / 2.0) * (1.0 - np.cos(3.0 * theta2))\n\n    # E_shape: Shape constraint penalty\n    penalty_base = abs(d) + Q_SHAPE * (1.0 + np.cos(theta2)) - R\n    e_shape = B_SHAPE * (max(0.0, penalty_base)**2)\n\n    return e_vdw + e_hb + e_tors + e_shape\n\ndef find_min_energy(R, d_site, phi, n):\n    \"\"\"\n    Performs a pseudorandom search to find the minimum energy for a given\n    set of parameters and exhaustiveness n.\n    \"\"\"\n    min_energy = float('inf')\n    \n    # Each call requires a fresh, independent sequence of random numbers.\n    rand_gen = lcg_generator(3 * n)\n    \n    for _ in range(n):\n        # Generate three pseudorandom numbers for one sample\n        x_d = next(rand_gen)\n        x_th1 = next(rand_gen)\n        x_th2 = next(rand_gen)\n        \n        # Map random numbers to the search space coordinates\n        d = -R + 2.0 * R * x_d\n        theta1 = -np.pi + 2.0 * np.pi * x_th1\n        theta2 = -np.pi + 2.0 * np.pi * x_th2\n        \n        # Calculate the energy for the sampled conformation\n        energy = calculate_energy(d, theta1, theta2, R, d_site, phi)\n        \n        # Update the minimum energy found\n        if energy  min_energy:\n            min_energy = energy\n            \n    return min_energy\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the results in the\n    specified format.\n    \"\"\"\n    test_cases = [\n        # (R, d_site, phi, n)\n        (2.5, 0.0, 0.0, 1),\n        (2.5, 0.0, 0.0, 64),\n        (2.5, 0.0, 0.0, 512),\n        (1.2, 0.4, np.pi / 3.0, 64),\n        (1.2, 0.4, np.pi / 3.0, 512),\n        (1.0, 0.4, np.pi / 3.0, 512),\n    ]\n    \n    results = []\n    for R, d_site, phi, n in test_cases:\n        min_e = find_min_energy(R, d_site, phi, n)\n        results.append(f\"{min_e:.6f}\")\n        \n    print(f\"[{','.join(results)}]\")\n\n# Execute the solver\nsolve()\n```", "id": "2458158"}, {"introduction": "In practice, a trade-off often exists between the speed and accuracy of scoring functions, leading to multi-stage docking strategies like \"rescoring.\" This exercise simulates a realistic pipeline where you will score a set of poses using both a fast empirical function and a more physically rigorous QM-like model that includes polarization effects. By comparing the rankings from each method, you will learn how to quantify the agreement between different scoring models and appreciate the nuances of choosing the right tool for the right stage of a computational drug discovery project [@problem_id:2458163].", "problem": "You are given a set of $10$ docked ligand poses in reduced units for a fixed receptor pocket and a single ligand. Your task is to compute two scoring functions for each pose: an empirical docking score and a quantum-mechanics-inspired (QM-like) rescoring based on physically motivated terms, then compare their rankings using the Spearman rank correlation coefficient. All quantities are dimensionless and expressed in reduced units where the electrostatic prefactor is set to $k_e = 1$, and all distances, energies, and charges are consistent with this choice.\n\nDefinitions and parameters:\n- There are $M$ receptor interaction sites indexed by $j \\in \\{0,1,\\dots,M-1\\}$ and $N$ ligand atoms indexed by $i \\in \\{0,1,\\dots,N-1\\}$.\n- Each receptor site $j$ has position $\\mathbf{R}_j \\in \\mathbb{R}^3$, charge $Q_j$, Lennard–Jones parameters $\\sigma_j$ and $\\varepsilon_j$, isotropic polarizability $\\alpha_j$, and a hydrophobic flag $H_j \\in \\{0,1\\}$.\n- Each ligand atom $i$ has parameters: intrinsic charge $q_i$, Lennard–Jones parameters $\\sigma_i$ and $\\varepsilon_i$, isotropic polarizability $\\alpha_i$, and a hydrophobic flag $h_i \\in \\{0,1\\}$. For each pose $p \\in \\{0,1,\\dots,9\\}$, the atom has a position $\\mathbf{r}_{i}^{(p)} \\in \\mathbb{R}^3$.\n- For any pair $(i,j)$ and pose $p$, let $r_{ij}^{(p)} = \\|\\mathbf{r}_{i}^{(p)} - \\mathbf{R}_j\\|$ and define Lennard–Jones combining rules $\\sigma_{ij} = \\dfrac{\\sigma_i + \\sigma_j}{2}$ and $\\varepsilon_{ij} = \\sqrt{\\varepsilon_i \\varepsilon_j}$.\n\nEmpirical docking score for pose $p$:\n- Let the screened electrostatics use a distance-dependent dielectric $\\epsilon(r) = d \\, r$, where $d = 4$.\n- Define the pairwise Lennard–Jones interaction as\n$$\nU_{ij}^{\\mathrm{LJ}}(r) = 4 \\, \\varepsilon_{ij} \\left[ \\left(\\dfrac{\\sigma_{ij}}{r}\\right)^{12} - \\left(\\dfrac{\\sigma_{ij}}{r}\\right)^{6} \\right].\n$$\n- Define the screened Coulomb interaction as\n$$\nU_{ij}^{\\mathrm{el,emp}}(r) = \\dfrac{q_i Q_j}{\\epsilon(r) \\, r} = \\dfrac{q_i Q_j}{d \\, r^2}.\n$$\n- Define a hydrophobic contact count $C^{(p)}$ as the number of pairs $(i,j)$ for which $h_i = 1$, $H_j = 1$, and $r_{ij}^{(p)} \\le r_c$ with cutoff $r_c = 1.2$. The hydrophobic contribution is $- \\gamma \\, C^{(p)}$ with $\\gamma = 0.05$.\n- The empirical docking score is\n$$\nS_{\\mathrm{emp}}^{(p)} = \\sum_{i=0}^{N-1} \\sum_{j=0}^{M-1} \\left[ U_{ij}^{\\mathrm{LJ}}\\!\\left(r_{ij}^{(p)}\\right) + U_{ij}^{\\mathrm{el,emp}}\\!\\left(r_{ij}^{(p)}\\right) \\right] - \\gamma \\, C^{(p)}.\n$$\n\nQM-like rescoring for pose $p$:\n- Use unscreened Coulomb interaction\n$$\nU_{ij}^{\\mathrm{el,qm}}(r) = \\dfrac{q_i Q_j}{r}.\n$$\n- Define the electric field at ligand atom $i$ due to permanent receptor charges as\n$$\n\\mathbf{E}_i^{(p)} = \\sum_{j=0}^{M-1} Q_j \\, \\dfrac{\\mathbf{r}_{i}^{(p)} - \\mathbf{R}_j}{\\left(r_{ij}^{(p)}\\right)^3}.\n$$\n- Define the electric field at receptor site $j$ due to permanent ligand charges as\n$$\n\\mathbf{E}_j^{(p)} = \\sum_{i=0}^{N-1} q_i \\, \\dfrac{\\mathbf{R}_j - \\mathbf{r}_{i}^{(p)}}{\\left(r_{ij}^{(p)}\\right)^3}.\n$$\n- The polarization energy uses the first-order induced-dipole approximation:\n$$\nE_{\\mathrm{pol}}^{(p)} = -\\dfrac{1}{2}\\left( \\sum_{i=0}^{N-1} \\alpha_i \\, \\left\\|\\mathbf{E}_i^{(p)}\\right\\|^2 + \\sum_{j=0}^{M-1} \\alpha_j \\, \\left\\|\\mathbf{E}_j^{(p)}\\right\\|^2 \\right).\n$$\n- The QM-like rescoring energy is\n$$\nE_{\\mathrm{qm}}^{(p)} = \\sum_{i=0}^{N-1} \\sum_{j=0}^{M-1} \\left[ U_{ij}^{\\mathrm{LJ}}\\!\\left(r_{ij}^{(p)}\\right) + U_{ij}^{\\mathrm{el,qm}}\\!\\left(r_{ij}^{(p)}\\right) \\right] + E_{\\mathrm{pol}}^{(p)}.\n$$\n\nRanking and correlation:\n- For each scoring function, smaller values are better. Rank the $10$ poses by increasing score. In case two scores are equal to within a tolerance of $\\tau = 10^{-12}$, break ties by the smaller pose index.\n- Compute the Spearman rank correlation coefficient $\\rho$ between the two rankings using\n$$\n\\rho = 1 - \\dfrac{6 \\sum_{p=0}^{9} d_p^2}{n(n^2 - 1)},\n$$\nwhere $n = 10$ and $d_p$ is the difference between the rank positions (starting at $0$ for best) assigned to pose $p$ under the two scoring functions.\n\nData set (test suite):\n- Receptor has $M = 4$ sites with parameters:\n  - $j = 0$: $\\mathbf{R}_0 = (0.00, 0.00, 0.00)$, $Q_0 = -0.5$, $\\sigma_0 = 1.00$, $\\varepsilon_0 = 0.20$, $\\alpha_0 = 0.10$, $H_0 = 0$.\n  - $j = 1$: $\\mathbf{R}_1 = (1.50, 0.00, 0.20)$, $Q_1 = +0.4$, $\\sigma_1 = 1.00$, $\\varepsilon_1 = 0.20$, $\\alpha_1 = 0.08$, $H_1 = 0$.\n  - $j = 2$: $\\mathbf{R}_2 = (0.00, 1.80, -0.30)$, $Q_2 = 0.0$, $\\sigma_2 = 1.20$, $\\varepsilon_2 = 0.25$, $\\alpha_2 = 0.12$, $H_2 = 1$.\n  - $j = 3$: $\\mathbf{R}_3 = (-1.40, -0.50, 0.40)$, $Q_3 = -0.2$, $\\sigma_3 = 1.10$, $\\varepsilon_3 = 0.22$, $\\alpha_3 = 0.09$, $H_3 = 1$.\n- Ligand has $N = 3$ atoms with parameters:\n  - $i = 0$: $q_0 = +0.3$, $\\sigma_0 = 1.00$, $\\varepsilon_0 = 0.18$, $\\alpha_0 = 0.12$, $h_0 = 0$.\n  - $i = 1$: $q_1 = -0.2$, $\\sigma_1 = 0.90$, $\\varepsilon_1 = 0.15$, $\\alpha_1 = 0.10$, $h_1 = 1$.\n  - $i = 2$: $q_2 = -0.1$, $\\sigma_2 = 0.85$, $\\varepsilon_2 = 0.14$, $\\alpha_2 = 0.09$, $h_2 = 1$.\n- The $10$ poses $p \\in \\{0,1,\\dots,9\\}$ provide $\\mathbf{r}_i^{(p)}$:\n  - $p = 0$: $\\mathbf{r}_0^{(0)} = (0.2, 0.4, 0.1)$, $\\mathbf{r}_1^{(0)} = (0.9, 0.4, 0.1)$, $\\mathbf{r}_2^{(0)} = (0.2, 1.1, 0.1)$.\n  - $p = 1$: $\\mathbf{r}_0^{(1)} = (0.8, 0.1, 0.2)$, $\\mathbf{r}_1^{(1)} = (1.4, 0.1, 0.2)$, $\\mathbf{r}_2^{(1)} = (0.8, 0.7, 0.2)$.\n  - $p = 2$: $\\mathbf{r}_0^{(2)} = (-0.8, -0.2, 0.3)$, $\\mathbf{r}_1^{(2)} = (-0.1, -0.2, 0.3)$, $\\mathbf{r}_2^{(2)} = (-0.8, 0.5, 0.3)$.\n  - $p = 3$: $\\mathbf{r}_0^{(3)} = (0.1, 1.2, -0.1)$, $\\mathbf{r}_1^{(3)} = (0.8, 1.2, -0.1)$, $\\mathbf{r}_2^{(3)} = (0.1, 1.9, -0.1)$.\n  - $p = 4$: $\\mathbf{r}_0^{(4)} = (0.3, 0.1, 0.0)$, $\\mathbf{r}_1^{(4)} = (0.9, 0.1, 0.0)$, $\\mathbf{r}_2^{(4)} = (0.3, 0.7, 0.0)$.\n  - $p = 5$: $\\mathbf{r}_0^{(5)} = (2.5, 2.5, 0.0)$, $\\mathbf{r}_1^{(5)} = (3.2, 2.5, 0.0)$, $\\mathbf{r}_2^{(5)} = (2.5, 3.2, 0.0)$.\n  - $p = 6$: $\\mathbf{r}_0^{(6)} = (1.2, -0.1, 0.2)$, $\\mathbf{r}_1^{(6)} = (1.8, -0.1, 0.2)$, $\\mathbf{r}_2^{(6)} = (1.2, 0.6, 0.2)$.\n  - $p = 7$: $\\mathbf{r}_0^{(7)} = (-1.0, -0.6, 0.4)$, $\\mathbf{r}_1^{(7)} = (-0.3, -0.6, 0.4)$, $\\mathbf{r}_2^{(7)} = (-1.0, 0.1, 0.4)$.\n  - $p = 8$: $\\mathbf{r}_0^{(8)} = (0.1, 0.2, 0.9)$, $\\mathbf{r}_1^{(8)} = (0.8, 0.2, 0.9)$, $\\mathbf{r}_2^{(8)} = (0.1, 0.9, 0.9)$.\n  - $p = 9$: $\\mathbf{r}_0^{(9)} = (5.0, 5.0, 5.0)$, $\\mathbf{r}_1^{(9)} = (5.7, 5.0, 5.0)$, $\\mathbf{r}_2^{(9)} = (5.0, 5.7, 5.0)$.\n\nRequirements:\n- Compute $S_{\\mathrm{emp}}^{(p)}$ and $E_{\\mathrm{qm}}^{(p)}$ for each $p \\in \\{0,\\dots,9\\}$ using the definitions above.\n- Produce two rankings by sorting poses in increasing order of $S_{\\mathrm{emp}}^{(p)}$ and $E_{\\mathrm{qm}}^{(p)}$ respectively, with tie-breaking by smaller $p$ when scores are equal within $\\tau = 10^{-12}$.\n- Compute the Spearman rank correlation coefficient $\\rho$ between the two rankings using the formula provided.\n- Final output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, namely $[\\text{empirical\\_ranking},\\text{qm\\_ranking},\\rho]$, where each ranking is a list of the $10$ pose indices in order of increasing score, and $\\rho$ is printed as a decimal rounded to six digits after the decimal point. For example, the structure must be like $[[a_0,a_1,\\dots,a_9],[b_0,b_1,\\dots,b_9],0.123456]$.", "solution": "The problem presented is a well-defined exercise in computational chemistry, specifically in the domain of molecular docking and scoring. It requires the implementation and comparison of two distinct scoring functions for a set of ligand poses within a receptor pocket. The first function, $S_{\\mathrm{emp}}$, is an empirical score, designed for computational efficiency. The second, $E_{\\mathrm{qm}}$, is a more physically detailed model that includes polarization effects, aiming for higher accuracy. Our objective is to calculate these scores for ten given poses, rank the poses according to each score, and quantify the agreement between the two rankings using the Spearman rank correlation coefficient, $\\rho$.\n\nThe entire calculation is performed in a system of reduced, dimensionless units where the electrostatic prefactor $k_e$ is unity. All provided parameters and coordinates are consistent with this system.\n\nThe computational procedure is executed as follows:\nFirst, all provided data for the receptor, the ligand, and the ten poses are stored in appropriate data structures. We have $M=4$ receptor sites and $N=3$ ligand atoms. The poses are indexed by $p \\in \\{0, 1, \\dots, 9\\}$.\n\nFor each pose $p$, we compute the two scores, $S_{\\mathrm{emp}}^{(p)}$ and $E_{\\mathrm{qm}}^{(p)}$. This involves iterating through all $N \\times M$ pairs of ligand atoms $(i)$ and receptor sites $(j)$.\n\nFor each pair $(i, j)$, we first compute the distance $r_{ij}^{(p)} = \\|\\mathbf{r}_{i}^{(p)} - \\mathbf{R}_j\\|$, where $\\mathbf{r}_{i}^{(p)}$ is the position of ligand atom $i$ in pose $p$ and $\\mathbf{R}_j$ is the position of receptor site $j$. We also determine the combined Lennard-Jones parameters using the provided mixing rules: $\\sigma_{ij} = (\\sigma_i + \\sigma_j)/2$ and $\\varepsilon_{ij} = \\sqrt{\\varepsilon_i \\varepsilon_j}$.\n\nThe Lennard-Jones potential, a standard model for van der Waals interactions, is calculated for each pair:\n$$\nU_{ij}^{\\mathrm{LJ}}(r_{ij}^{(p)}) = 4 \\, \\varepsilon_{ij} \\left[ \\left(\\dfrac{\\sigma_{ij}}{r_{ij}^{(p)}}\\right)^{12} - \\left(\\dfrac{\\sigma_{ij}}{r_{ij}^{(p)}}\\right)^{6} \\right]\n$$\nThis term contributes to both scoring functions, representing short-range repulsion and medium-range attraction.\n\nThe two scoring functions differ primarily in their treatment of electrostatic interactions.\n\nThe empirical score, $S_{\\mathrm{emp}}^{(p)}$, employs a simplified model for computational speed. It uses a distance-dependent dielectric, $\\epsilon(r) = d \\cdot r$ with $d=4$, to mimic solvent screening effects. The electrostatic interaction is:\n$$\nU_{ij}^{\\mathrm{el,emp}}(r_{ij}^{(p)}) = \\dfrac{q_i Q_j}{d \\, (r_{ij}^{(p)})^2}\n$$\nAdditionally, $S_{\\mathrm{emp}}^{(p)}$ includes an empirical hydrophobic term. We count the number of hydrophobic contacts, $C^{(p)}$, where a contact is defined for pairs $(i,j)$ with hydrophobic flags $h_i=1$ and $H_j=1$ and a distance $r_{ij}^{(p)} \\le r_c = 1.2$. This term contributes $-\\gamma \\, C^{(p)}$ to the score, with $\\gamma = 0.05$.\nThe total empirical score for a pose is the sum over all pairs and the hydrophobic bonus:\n$$\nS_{\\mathrm{emp}}^{(p)} = \\sum_{i=0}^{N-1} \\sum_{j=0}^{M-1} \\left[ U_{ij}^{\\mathrm{LJ}}\\!\\left(r_{ij}^{(p)}\\right) + U_{ij}^{\\mathrm{el,emp}}\\!\\left(r_{ij}^{(p)}\\right) \\right] - \\gamma \\, C^{(p)}\n$$\n\nThe QM-like score, $E_{\\mathrm{qm}}^{(p)}$, aims for greater physical realism. It uses the fundamental unscreened Coulomb law for direct electrostatic interactions:\n$$\nU_{ij}^{\\mathrm{el,qm}}(r_{ij}^{(p)}) = \\dfrac{q_i Q_j}{r_{ij}^{(p)}}\n$$\nCrucially, this model also accounts for electronic polarization, an induction effect where the charge distribution of each molecule is distorted by the electric field of the other. This is calculated using a first-order approximation. First, the electric field exerted by the receptor's permanent charges on each ligand atom $i$ is computed:\n$$\n\\mathbf{E}_i^{(p)} = \\sum_{j=0}^{M-1} Q_j \\, \\dfrac{\\mathbf{r}_{i}^{(p)} - \\mathbf{R}_j}{\\left(r_{ij}^{(p)}\\right)^3}\n$$\nSimilarly, the field at each receptor site $j$ from the ligand's charges is:\n$$\n\\mathbf{E}_j^{(p)} = \\sum_{i=0}^{N-1} q_i \\, \\dfrac{\\mathbf{R}_j - \\mathbf{r}_{i}^{(p)}}{\\left(r_{ij}^{(p)}\\right)^3}\n$$\nThe polarization energy is then the work done to create these induced dipoles:\n$$\nE_{\\mathrm{pol}}^{(p)} = -\\dfrac{1}{2}\\left( \\sum_{i=0}^{N-1} \\alpha_i \\, \\left\\|\\mathbf{E}_i^{(p)}\\right\\|^2 + \\sum_{j=0}^{M-1} \\alpha_j \\, \\left\\|\\mathbf{E}_j^{(p)}\\right\\|^2 \\right)\n$$\nwhere $\\alpha_i$ and $\\alpha_j$ are the isotropic polarizabilities. The total QM-like score is the sum of Lennard-Jones, unscreened Coulomb, and polarization energies:\n$$\nE_{\\mathrm{qm}}^{(p)} = \\sum_{i=0}^{N-1} \\sum_{j=0}^{M-1} \\left[ U_{ij}^{\\mathrm{LJ}}\\!\\left(r_{ij}^{(p)}\\right) + U_{ij}^{\\mathrm{el,qm}}\\!\\left(r_{ij}^{(p)}\\right) \\right] + E_{\\mathrm{pol}}^{(p)}\n$$\n\nAfter computing the $10$ values for $S_{\\mathrm{emp}}^{(p)}$ and $E_{\\mathrm{qm}}^{(p)}$, we rank the poses. For each scoring function, the poses are sorted in ascending order of their scores (lower score is better). A custom sorting comparison is used to handle ties: if two scores are within a tolerance $\\tau = 10^{-12}$ of each other, the pose with the lower original index $p$ is ranked higher. This produces two ranked lists of pose indices.\n\nFinally, we assess the correlation between these two rankings using the Spearman rank correlation coefficient, $\\rho$. For each pose $p$, we find its rank (from $0$ to $9$) in the empirical list, $\\text{rank}_{\\mathrm{emp}}(p)$, and its rank in the QM-like list, $\\text{rank}_{\\mathrm{qm}}(p)$. The squared difference in ranks, $d_p^2 = (\\text{rank}_{\\mathrm{emp}}(p) - \\text{rank}_{\\mathrm{qm}}(p))^2$, is calculated for each pose. The coefficient is then given by:\n$$\n\\rho = 1 - \\dfrac{6 \\sum_{p=0}^{9} d_p^2}{n(n^2 - 1)}\n$$\nwhere the number of poses is $n=10$. This value of $\\rho$ ranges from $+1$ (perfect correlation) to $-1$ (perfect anti-correlation), with $0$ indicating no correlation.\n\nThe final output will consist of the two ordered lists of pose indices and the calculated value of $\\rho$, rounded to six decimal places.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom functools import cmp_to_key\n\ndef solve():\n    \"\"\"\n    Computes and compares empirical and QM-like scoring functions for 10 ligand poses.\n    \"\"\"\n    \n    # --- Data Definition ---\n    # Receptor parameters (M=4 sites)\n    receptor_params = {\n        'R': np.array([\n            [0.00, 0.00, 0.00], [1.50, 0.00, 0.20], [0.00, 1.80, -0.30], [-1.40, -0.50, 0.40]\n        ]),\n        'Q': np.array([-0.5, 0.4, 0.0, -0.2]),\n        'sigma': np.array([1.00, 1.00, 1.20, 1.10]),\n        'epsilon': np.array([0.20, 0.20, 0.25, 0.22]),\n        'alpha': np.array([0.10, 0.08, 0.12, 0.09]),\n        'H': np.array([0, 0, 1, 1], dtype=int)\n    }\n    M = 4\n\n    # Ligand parameters (N=3 atoms)\n    ligand_params = {\n        'q': np.array([0.3, -0.2, -0.1]),\n        'sigma': np.array([1.00, 0.90, 0.85]),\n        'epsilon': np.array([0.18, 0.15, 0.14]),\n        'alpha': np.array([0.12, 0.10, 0.09]),\n        'h': np.array([0, 1, 1], dtype=int)\n    }\n    N = 3\n\n    # Ligand poses (10 poses, p=0..9)\n    poses = np.array([\n        [[0.2, 0.4, 0.1], [0.9, 0.4, 0.1], [0.2, 1.1, 0.1]],         # p=0\n        [[0.8, 0.1, 0.2], [1.4, 0.1, 0.2], [0.8, 0.7, 0.2]],         # p=1\n        [[-0.8, -0.2, 0.3], [-0.1, -0.2, 0.3], [-0.8, 0.5, 0.3]],    # p=2\n        [[0.1, 1.2, -0.1], [0.8, 1.2, -0.1], [0.1, 1.9, -0.1]],      # p=3\n        [[0.3, 0.1, 0.0], [0.9, 0.1, 0.0], [0.3, 0.7, 0.0]],         # p=4\n        [[2.5, 2.5, 0.0], [3.2, 2.5, 0.0], [2.5, 3.2, 0.0]],         # p=5\n        [[1.2, -0.1, 0.2], [1.8, -0.1, 0.2], [1.2, 0.6, 0.2]],       # p=6\n        [[-1.0, -0.6, 0.4], [-0.3, -0.6, 0.4], [-1.0, 0.1, 0.4]],    # p=7\n        [[0.1, 0.2, 0.9], [0.8, 0.2, 0.9], [0.1, 0.9, 0.9]],         # p=8\n        [[5.0, 5.0, 5.0], [5.7, 5.0, 5.0], [5.0, 5.7, 5.0]],         # p=9\n    ])\n    num_poses = 10\n\n    # Constants\n    d_diel = 4.0\n    gamma_hydrophobic = 0.05\n    rc_hydrophobic = 1.2\n    tau_tiebreak = 1e-12\n    \n    emp_scores = np.zeros(num_poses)\n    qm_scores = np.zeros(num_poses)\n\n    for p in range(num_poses):\n        S_emp_p = 0.0\n        E_qm_p = 0.0\n        hydrophobic_contacts = 0\n        ligand_E_fields = np.zeros((N, 3))\n        receptor_E_fields = np.zeros((M, 3))\n\n        for i in range(N):\n            for j in range(M):\n                r_vec = poses[p, i, :] - receptor_params['R'][j, :]\n                r_dist = np.linalg.norm(r_vec)\n\n                # Avoid division by zero, though not expected with this data\n                if r_dist  1e-9:\n                    S_emp_p = float('inf')\n                    E_qm_p = float('inf')\n                    continue\n\n                # Lennard-Jones parameters and energy\n                sigma_ij = (ligand_params['sigma'][i] + receptor_params['sigma'][j]) / 2.0\n                epsilon_ij = np.sqrt(ligand_params['epsilon'][i] * receptor_params['epsilon'][j])\n                ratio = sigma_ij / r_dist\n                U_lj = 4.0 * epsilon_ij * (ratio**12 - ratio**6)\n                \n                # Empirical score terms\n                U_el_emp = (ligand_params['q'][i] * receptor_params['Q'][j]) / (d_diel * r_dist**2)\n                S_emp_p += U_lj + U_el_emp\n                \n                # QM-like score terms\n                U_el_qm = (ligand_params['q'][i] * receptor_params['Q'][j]) / r_dist\n                E_qm_p += U_lj + U_el_qm\n                \n                # Hydrophobic contact\n                if ligand_params['h'][i] == 1 and receptor_params['H'][j] == 1 and r_dist = rc_hydrophobic:\n                    hydrophobic_contacts += 1\n                \n                # Electric field contributions\n                r_vec_over_r_cubed = r_vec / r_dist**3\n                ligand_E_fields[i, :] += receptor_params['Q'][j] * r_vec_over_r_cubed\n                receptor_E_fields[j, :] -= ligand_params['q'][i] * r_vec_over_r_cubed\n\n\n        # Finalize empirical score\n        S_emp_p -= gamma_hydrophobic * hydrophobic_contacts\n        emp_scores[p] = S_emp_p\n\n        # Finalize QM-like score\n        E_pol = 0.0\n        # Ligand polarization\n        E_i_norm_sq = np.sum(ligand_E_fields**2, axis=1)\n        E_pol -= 0.5 * np.sum(ligand_params['alpha'] * E_i_norm_sq)\n        # Receptor polarization\n        E_j_norm_sq = np.sum(receptor_E_fields**2, axis=1)\n        E_pol -= 0.5 * np.sum(receptor_params['alpha'] * E_j_norm_sq)\n        \n        E_qm_p += E_pol\n        qm_scores[p] = E_qm_p\n\n    # --- Ranking ---\n    def compare_scores(item1, item2):\n        score1, idx1 = item1\n        score2, idx2 = item2\n        if abs(score1 - score2) = tau_tiebreak:\n            return idx1 - idx2\n        return -1 if score1  score2 else 1\n\n    emp_scores_with_indices = [(score, i) for i, score in enumerate(emp_scores)]\n    qm_scores_with_indices = [(score, i) for i, score in enumerate(qm_scores)]\n    \n    sorted_emp = sorted(emp_scores_with_indices, key=cmp_to_key(compare_scores))\n    emp_ranking = [item[1] for item in sorted_emp]\n    \n    sorted_qm = sorted(qm_scores_with_indices, key=cmp_to_key(compare_scores))\n    qm_ranking = [item[1] for item in sorted_qm]\n\n    # --- Spearman Correlation ---\n    n = num_poses\n    emp_ranks = {pose_idx: rank for rank, pose_idx in enumerate(emp_ranking)}\n    qm_ranks = {pose_idx: rank for rank, pose_idx in enumerate(qm_ranking)}\n    \n    sum_d_sq = 0.0\n    for p in range(n):\n        d = emp_ranks[p] - qm_ranks[p]\n        sum_d_sq += d**2\n        \n    rho = 1.0 - (6.0 * sum_d_sq) / (n * (n**2 - 1))\n\n    # --- Final Output ---\n    emp_ranking_str = f\"[{','.join(map(str, emp_ranking))}]\"\n    qm_ranking_str = f\"[{','.join(map(str, qm_ranking))}]\"\n    rho_str = f\"{rho:.6f}\"\n    \n    print(f\"[{emp_ranking_str},{qm_ranking_str},{rho_str}]\")\n\n\nsolve()\n```", "id": "2458163"}]}