{"hands_on_practices": [{"introduction": "A central goal of computational chemistry is to predict thermochemical properties that can be compared directly with experiment. This first practice focuses on calculating the standard heat of formation, $\\Delta H_f^\\circ$, a fundamental quantity for assessing molecular stability. You will apply the standard semi-empirical formula to convert raw electronic energies into this valuable thermochemical descriptor, and in doing so, discover how the choice of method can dramatically affect predictions for challenging molecules [@problem_id:2452543].", "problem": "You are given method-specific energetic reference data for two semi-empirical quantum chemical models, Parametric Method 3 (PM3) and Parametric Method 7 (PM7). In the Neglect of Diatomic Differential Overlap (NDDO) family of semi-empirical methods, the standard heat of formation at temperature $298\\,\\mathrm{K}$ and pressure $1\\,\\mathrm{bar}$ for a molecule with composition $\\{n_i\\}$ is defined relative to isolated gas-phase atoms. Your task is to compute the standard heat of formation in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ for sulfur hexafluoride ($\\mathrm{SF}_6$), and to validate the atomic and additivity limits using the same definition. All answers must be expressed in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ and rounded to one decimal place.\n\nInput data:\n- Gas-phase atomic heats of formation at $298\\,\\mathrm{K}$: fluorine atom $79.3$, sulfur atom $277.0$ (both in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$).\n- PM3 semi-empirical total energies (gas-phase, in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$): sulfur atom $-250.0$, fluorine atom $-75.0$, $\\mathrm{SF}_6$ molecule $-300.0$.\n- PM7 semi-empirical total energies (gas-phase, in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$): sulfur atom $-300.0$, fluorine atom $-90.0$, $\\mathrm{SF}_6$ molecule $-2793.0$.\n\nTest suite to evaluate:\n1. Compute the standard heat of formation of $\\mathrm{SF}_6$ with PM3, using the $\\mathrm{SF}_6$ total energy $-300.0$, composition $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$, the PM3 atomic total energies, and the given atomic heats of formation. Report a single floating-point number in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ rounded to one decimal place.\n2. Compute the standard heat of formation of $\\mathrm{SF}_6$ with PM7, using the $\\mathrm{SF}_6$ total energy $-2793.0$, composition $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$, the PM7 atomic total energies, and the given atomic heats of formation. Report a single floating-point number in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ rounded to one decimal place.\n3. Boundary case (single atom): compute the standard heat of formation of a single fluorine atom with PM3, using the fluorine total energy $-75.0$, composition $\\{\\mathrm{F}:1\\}$, the PM3 atomic total energies, and the given atomic heats of formation. Report a single floating-point number in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ rounded to one decimal place.\n4. Edge case (nonbonded additivity): consider a nonbonded cluster $\\{\\mathrm{S}:1,\\mathrm{F}:6\\}$ in PM7 whose total energy equals the sum of the PM7 atomic total energies $-840.0$. Compute its standard heat of formation using the PM7 atomic total energies and the given atomic heats of formation. Report a single floating-point number in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ rounded to one decimal place.\n\nFinal output format:\nYour program should produce a single line of output containing the four results for the test suite, in order, as a comma-separated list enclosed in square brackets, for example, $[x_1,x_2,x_3,x_4]$, where each $x_i$ is rounded to one decimal place in $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ and contains a decimal point.", "solution": "The problem as stated is scientifically grounded, well-posed, and contains all necessary information for a complete solution. It describes a standard calculation in computational chemistry. We shall proceed with the derivation.\n\nThe fundamental equation to compute the standard heat of formation, $\\Delta H_f^\\circ$, for a molecule M with composition $\\{n_i\\}$ in semi-empirical Neglect of Diatomic Differential Overlap (NDDO) methods, such as PM3 and PM7, is given by:\n\n$$ \\Delta H_f^\\circ(\\text{M}) = E_{\\text{elec}}^{\\text{SE}}(\\text{M}) - \\sum_{i \\in \\text{atoms}} n_i E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i) + \\sum_{i \\in \\text{atoms}} n_i \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i) $$\n\nHere, $E_{\\text{elec}}^{\\text{SE}}(\\text{M})$ is the semi-empirical total energy of the molecule, $n_i$ is the number of atoms of element $i$, $E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i)$ is the semi-empirical total energy of the isolated gas-phase atom $i$, and $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i)$ is the experimental gas-phase heat of formation of atom $i$. The term $(E_{\\text{elec}}^{\\text{SE}}(\\text{M}) - \\sum_i n_i E_{\\text{elec}}^{\\text{SE}}(\\text{Atom}_i))$ represents the theoretically calculated atomization energy. All energies are provided in units of $\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\n\nWe are given the following experimental atomic heats of formation:\n- $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{F}) = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $\\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{S}) = 277.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\nThe composition of sulfur hexafluoride, $\\mathrm{SF}_6$, is one sulfur atom ($n_\\text{S} = 1$) and six fluorine atoms ($n_\\text{F} = 6$). The sum of experimental atomic heats of formation for this composition is:\n$$ \\sum_{i} n_i \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{Atom}_i) = (1 \\times 277.0) + (6 \\times 79.3) = 277.0 + 475.8 = 752.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\nWe now evaluate each of the four test cases.\n\n**Test Case 1: Standard heat of formation of $\\mathrm{SF}_6$ with PM3**\nThe PM3-specific data are:\n- $E_{\\text{elec}}^{\\text{PM3}}(\\mathrm{SF}_6) = -300.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{S}) = -250.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\nFirst, we compute the sum of PM3 atomic energies for the constituent atoms:\n$$ \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM3}}(\\text{Atom}_i) = (1 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{S})) + (6 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{F})) = (1 \\times -250.0) + (6 \\times -75.0) = -250.0 - 450.0 = -700.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\nNow, we apply the formula for $\\Delta H_f^\\circ(\\mathrm{SF}_6)$:\n$$ \\Delta H_f^\\circ(\\mathrm{SF}_6)_{\\text{PM3}} = -300.0 - (-700.0) + 752.8 = -300.0 + 700.0 + 752.8 = 1152.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\n**Test Case 2: Standard heat of formation of $\\mathrm{SF}_6$ with PM7**\nThe PM7-specific data are:\n- $E_{\\text{elec}}^{\\text{PM7}}(\\mathrm{SF}_6) = -2793.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{S}) = -300.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{F}) = -90.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n\nThe sum of PM7 atomic energies for the constituent atoms is:\n$$ \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM7}}(\\text{Atom}_i) = (1 \\times E_{\\text{elec}}^{\\text{PM7}}(\\text{S})) + (6 \\times E_{\\text{elec}}^{\\text{PM7}}(\\text{F})) = (1 \\times -300.0) + (6 \\times -90.0) = -300.0 - 540.0 = -840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\nApplying the formula for $\\Delta H_f^\\circ(\\mathrm{SF}_6)$:\n$$ \\Delta H_f^\\circ(\\mathrm{SF}_6)_{\\text{PM7}} = -2793.0 - (-840.0) + 752.8 = -2793.0 + 840.0 + 752.8 = -1953.0 + 752.8 = -1200.2\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\n\n**Test Case 3: Boundary case (single atom F) with PM3**\nThis case validates that the formulation correctly reproduces the experimental data for a single atom. We compute the heat of formation of a single fluorine atom, for which $n_\\text{F} = 1$ and all other $n_i = 0$.\nThe data are:\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- $E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$ (This is both the molecular and atomic energy)\n\nThe sum of atomic energies is simply $1 \\times E_{\\text{elec}}^{\\text{PM3}}(\\text{F}) = -75.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\nThe sum of experimental heats of formation is $1 \\times \\Delta H_{f, \\text{atom}}^{\\circ, \\text{exp}}(\\text{F}) = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\nApplying the formula:\n$$ \\Delta H_f^\\circ(\\text{F})_{\\text{PM3}} = -75.0 - (-75.0) + 79.3 = -75.0 + 75.0 + 79.3 = 79.3\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\nThe result correctly recovers the experimental atomic heat of formation, as expected by the definition.\n\n**Test Case 4: Edge case (nonbonded additivity) with PM7**\nThis case examines a nonbonded cluster of atoms $\\{\\mathrm{S}:1, \\mathrm{F}:6\\}$, for which the total energy is defined as the sum of the individual atomic energies. This validates the additivity limit.\nThe data are:\n- $E_{\\text{elec}}^{\\text{PM7}}(\\text{cluster}) = -840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$\n- Sum of PM7 atomic energies: As calculated in Test Case 2, this is also $-840.0\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1}$.\n\nBy definition, the atomization energy for this nonbonded cluster is zero:\n$$ E_{\\text{elec}}^{\\text{PM7}}(\\text{cluster}) - \\sum_{i} n_i E_{\\text{elec}}^{\\text{PM7}}(\\text{Atom}_i) = -840.0 - (-840.0) = 0 $$\nApplying the formula for the heat of formation:\n$$ \\Delta H_f^\\circ(\\text{cluster})_{\\text{PM7}} = -840.0 - (-840.0) + 752.8 = 0 + 752.8 = 752.8\\,\\mathrm{kJ}\\,\\mathrm{mol}^{-1} $$\nThe result is the sum of the experimental atomic heats of formation. This is the correct outcome for a system with zero binding energy.\n\nThe final results rounded to one decimal place are: $1152.8$, $-1200.2$, $79.3$, and $752.8$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes standard heats of formation for SF6 and related systems\n    using PM3 and PM7 semi-empirical methods.\n    \"\"\"\n\n    # --- GIVEN DATA ---\n    # Experimental atomic heats of formation (kJ/mol) at 298 K, 1 bar\n    hf_exp_atoms = {\n        'F': 79.3,\n        'S': 277.0\n    }\n\n    # PM3 semi-empirical total energies (kJ/mol)\n    E_elec_pm3 = {\n        'S': -250.0,\n        'F': -75.0,\n        'SF6': -300.0,\n    }\n\n    # PM7 semi-empirical total energies (kJ/mol)\n    E_elec_pm7 = {\n        'S': -300.0,\n        'F': -90.0,\n        'SF6': -2793.0,\n        'cluster': -840.0, # nonbonded S + 6F\n    }\n    \n    # Define compositions for the systems\n    composition_sf6 = {'S': 1, 'F': 6}\n    composition_f = {'F': 1}\n\n    def calculate_heat_of_formation(\n        mol_energy: float,\n        composition: dict,\n        atomic_energies: dict,\n        atomic_exp_hf: dict\n    ) -> float:\n        \"\"\"\n        Calculates the standard heat of formation using the standard semi-empirical formula.\n\n        Args:\n            mol_energy (float): Semi-empirical total energy of the molecule/system.\n            composition (dict): Dictionary of atom counts, e.g., {'S': 1, 'F': 6}.\n            atomic_energies (dict): Dictionary of semi-empirical atomic energies.\n            atomic_exp_hf (dict): Dictionary of experimental atomic heats of formation.\n\n        Returns:\n            float: Calculated standard heat of formation in kJ/mol.\n        \"\"\"\n        sum_atomic_energies = sum(\n            count * atomic_energies[element]\n            for element, count in composition.items()\n        )\n        \n        sum_exp_atomic_hf = sum(\n            count * atomic_exp_hf[element]\n            for element, count in composition.items()\n        )\n        \n        heat_of_formation = (\n            mol_energy - sum_atomic_energies + sum_exp_atomic_hf\n        )\n        \n        return heat_of_formation\n\n    # --- Test Suite Evaluation ---\n    test_cases = [\n        # 1. PM3 SF6\n        (E_elec_pm3['SF6'], composition_sf6, {'S': E_elec_pm3['S'], 'F': E_elec_pm3['F']}, hf_exp_atoms),\n        # 2. PM7 SF6\n        (E_elec_pm7['SF6'], composition_sf6, {'S': E_elec_pm7['S'], 'F': E_elec_pm7['F']}, hf_exp_atoms),\n        # 3. PM3 Fluorine Atom\n        (E_elec_pm3['F'], composition_f, {'S': E_elec_pm3['S'], 'F': E_elec_pm3['F']}, hf_exp_atoms),\n        # 4. PM7 Nonbonded Cluster\n        (E_elec_pm7['cluster'], composition_sf6, {'S': E_elec_pm7['S'], 'F': E_elec_pm7['F']}, hf_exp_atoms)\n    ]\n    \n    results = []\n    for case in test_cases:\n        mol_E, comp, atom_E, atom_hf = case\n        result = calculate_heat_of_formation(mol_E, comp, atom_E, atom_hf)\n        results.append(result)\n\n    # Format the final output as a comma-separated list of floats with one decimal place.\n    # The f-string format '{:.1f}' ensures one decimal place is always shown.\n    formatted_results = [f\"{res:.1f}\" for res in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2452543"}, {"introduction": "Beyond static properties, semi-empirical methods are powerful tools for exploring molecular flexibility and dynamics. This exercise guides you through modeling a key conformational change: the rotation around a chemical bond. By constructing and analyzing a simplified torsional potential energy function, you will calculate the rotational energy barrier, gaining hands-on experience in how these methods quantify the energetic landscape that governs a molecule's shape and motion [@problem_id:2452507].", "problem": "You are asked to determine the rotational barrier about the sulfur–sulfur bond in diphenyl disulfide using simplified torsional energy profiles that approximate three common semi-empirical methods: Austin Model 1 (AM1), Parameterized Model 3 (PM3), and Parameterized Method 7 (PM7). For a given method, the relative electronic energy as a function of the dihedral angle $\\phi$ about the sulfur–sulfur bond is modeled by the truncated Fourier series\n$$\nE_{\\text{method}}(\\phi) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(n \\,\\phi_{\\text{rad}})\\bigr),\n$$\nwhere $\\phi_{\\text{rad}}$ is the angle in radians corresponding to the dihedral angle $\\phi$ expressed in degrees via $\\phi_{\\text{rad}} = \\phi \\,\\pi/180$, and $k_{n,\\text{method}}$ are method-specific nonnegative coefficients. The rotational barrier $\\Delta E_{\\text{method}}$ is defined as\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi) \\;-\\; \\min_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\nAll energies must be reported in kilojoules per mole (kJ/mol). All angles are in degrees and trigonometric functions use radians.\n\nUse the following coefficient sets (in kJ/mol) for the test suite:\n- AM1 (Austin Model 1): $k_{1,\\text{AM1}} = 8.0$, $k_{2,\\text{AM1}} = 16.0$, $k_{3,\\text{AM1}} = 4.0$.\n- PM3 (Parameterized Model 3): $k_{1,\\text{PM3}} = 9.0$, $k_{2,\\text{PM3}} = 17.0$, $k_{3,\\text{PM3}} = 0.0$.\n- PM7 (Parameterized Method 7): $k_{1,\\text{PM7}} = 11.0$, $k_{2,\\text{PM7}} = 20.0$, $k_{3,\\text{PM7}} = 6.0$.\n\nTasks:\n1. For each method in the test suite, compute the rotational barrier $\\Delta E_{\\text{method}}$ as defined above. Express each barrier in kJ/mol and round to one decimal place.\n2. Provide the results in the order AM1, PM3, PM7.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[result1,result2,result3]\"), where each result is a float rounded to one decimal place in kJ/mol.\n\nAngle unit requirement:\n- Use degrees for $\\phi$ and convert to radians for evaluating the cosine.\n\nNote:\n- The provided test suite covers three distinct parametrizations. The case with $k_{3,\\text{PM3}} = 0.0$ probes a boundary where the third Fourier component is absent.", "solution": "The problem statement has been validated and is deemed scientifically grounded, well-posed, and objective. It provides a clear mathematical model and all necessary parameters to compute the rotational barriers for the specified semi-empirical methods. We shall proceed with the solution.\n\nThe problem requires the calculation of the rotational barrier, $\\Delta E_{\\text{method}}$, for diphenyl disulfide, as modeled by a simplified torsional energy profile for three different semi-empirical methods: AM1, PM3, and PM7. The relative electronic energy, $E_{\\text{method}}(\\phi)$, is given as a function of the dihedral angle $\\phi$ (in degrees) by the truncated Fourier series:\n$$\nE_{\\text{method}}(\\phi) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(n \\,\\phi_{\\text{rad}})\\bigr)\n$$\nwhere $\\phi_{\\text{rad}} = \\phi \\cdot \\pi/180$ is the angle in radians, and $k_{n,\\text{method}}$ are given non-negative coefficients in units of kJ/mol.\n\nThe rotational barrier is defined as the difference between the maximum and minimum energy values over the full range of the dihedral angle:\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi) \\;-\\; \\min_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\n\nOur first step is to determine the minimum value of $E_{\\text{method}}(\\phi)$. The function is a sum of terms of the form $k_n(1 - \\cos(n\\phi_{\\text{rad}}))$. Since the coefficients $k_n$ are specified as non-negative ($k_n \\ge 0$) and the cosine function ranges from $-1$ to $1$, each term $(1 - \\cos(n\\phi_{\\text{rad}}))$ must be non-negative, ranging from $0$ to $2$. Consequently, the total energy $E_{\\text{method}}(\\phi)$ is always non-negative.\nThe minimum value is achieved when all terms are simultaneously zero. This occurs when $\\cos(n\\phi_{\\text{rad}}) = 1$ for $n=1, 2, 3$. This condition is met when $\\phi_{\\text{rad}} = 0$, which corresponds to $\\phi = 0^\\circ$. At this angle,\n$$\nE_{\\text{method}}(0) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - \\cos(0)\\bigr) \\;=\\; \\sum_{n=1}^{3} k_{n,\\text{method}} \\,\\bigl(1 - 1\\bigr) \\;=\\; 0.\n$$\nThus, for all three methods, the minimum energy is $\\min_{\\phi} E_{\\text{method}}(\\phi) = 0$ kJ/mol.\n\nThe problem of finding the rotational barrier simplifies to finding the global maximum of the energy function:\n$$\n\\Delta E_{\\text{method}} \\;=\\; \\max_{\\phi \\in [0, 360)} E_{\\text{method}}(\\phi).\n$$\nThis is a standard optimization problem. To find the maximum, we must identify the critical points by setting the first derivative of the energy function with respect to the angle to zero. Let $\\theta = \\phi_{\\text{rad}}$:\n$$\n\\frac{dE}{d\\theta} \\;=\\; k_1 \\sin(\\theta) + 2k_2 \\sin(2\\theta) + 3k_3 \\sin(3\\theta) \\;=\\; 0.\n$$\nWhile an analytical solution of this trigonometric equation is possible, it leads to a complex polynomial in $\\cos(\\theta)$ and is computationally intensive. A more robust and pragmatic approach, standard in scientific computation, is to use numerical optimization. We can find the maximum of $E(\\phi)$ by finding the minimum of its negative, $-E(\\phi)$, over the interval $\\phi \\in [0, 360]$. We will employ a numerical minimization algorithm for this task.\n\nThe calculation proceeds as follows for each set of coefficients:\n\n1.  **Austin Model 1 (AM1):**\n    The coefficients are $k_{1,\\text{AM1}} = 8.0$, $k_{2,\\text{AM1}} = 16.0$, and $k_{3,\\text{AM1}} = 4.0$ kJ/mol.\n    The energy function is:\n    $$E_{\\text{AM1}}(\\phi) \\;=\\; 8.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 16.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})) + 4.0 \\,(1 - \\cos(3\\phi_{\\text{rad}})).$$\n    Numerically maximizing this function over $\\phi \\in [0, 360)$ yields a maximum energy value.\n    $\\max E_{\\text{AM1}}(\\phi) \\approx 44.1206$ kJ/mol.\n    The barrier is $\\Delta E_{\\text{AM1}} = 44.1206 - 0 = 44.1206$ kJ/mol. Rounded to one decimal place, this is $44.1$ kJ/mol.\n\n2.  **Parameterized Model 3 (PM3):**\n    The coefficients are $k_{1,\\text{PM3}} = 9.0$, $k_{2,\\text{PM3}} = 17.0$, and $k_{3,\\text{PM3}} = 0.0$ kJ/mol.\n    The energy function simplifies as the $k_3$ term is zero:\n    $$E_{\\text{PM3}}(\\phi) \\;=\\; 9.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 17.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})).$$\n    Numerically maximizing this function over $\\phi \\in [0, 360)$ yields a maximum energy value.\n    $\\max E_{\\text{PM3}}(\\phi) \\approx 43.5955$ kJ/mol.\n    The barrier is $\\Delta E_{\\text{PM3}} = 43.5955 - 0 = 43.5955$ kJ/mol. Rounded to one decimal place, this is $43.6$ kJ/mol.\n\n3.  **Parameterized Method 7 (PM7):**\n    The coefficients are $k_{1,\\text{PM7}} = 11.0$, $k_{2,\\text{PM7}} = 20.0$, and $k_{3,\\text{PM7}} = 6.0$ kJ/mol.\n    The energy function is:\n    $$E_{\\text{PM7}}(\\phi) \\;=\\; 11.0 \\,(1 - \\cos(\\phi_{\\text{rad}})) + 20.0 \\,(1 - \\cos(2\\phi_{\\text{rad}})) + 6.0 \\,(1 - \\cos(3\\phi_{\\text{rad}})).$$\n    Numerically maximizing this function over $\\phi \\in [0, 360)$ yields a maximum energy value.\n    $\\max E_{\\text{PM7}}(\\phi) \\approx 57.2919$ kJ/mol.\n    The barrier is $\\Delta E_{\\text{PM7}} = 57.2919 - 0 = 57.2919$ kJ/mol. Rounded to one decimal place, this is $57.3$ kJ/mol.\n\nIn summary, the computed rotational barriers, rounded to one decimal place, are $44.1$ kJ/mol for AM1, $43.6$ kJ/mol for PM3, and $57.3$ kJ/mol for PM7. The following program implements this numerical optimization procedure to produce the final results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize_scalar\n\ndef solve():\n    \"\"\"\n    Computes the rotational barrier for diphenyl disulfide using simplified\n    torsional energy profiles for AM1, PM3, and PM7 semi-empirical methods.\n    \"\"\"\n    \n    # Define the test cases with parameter sets (k1, k2, k3) in kJ/mol\n    # for AM1, PM3, and PM7, respectively.\n    test_cases = [\n        (8.0, 16.0, 4.0),   # AM1: Austin Model 1\n        (9.0, 17.0, 0.0),   # PM3: Parameterized Model 3\n        (11.0, 20.0, 6.0),  # PM7: Parameterized Method 7\n    ]\n\n    results = []\n\n    def energy(phi, k1, k2, k3):\n        \"\"\"\n        Calculates the relative electronic energy for a given dihedral angle.\n        \n        Args:\n            phi (float): The dihedral angle in degrees.\n            k1, k2, k3 (float): The method-specific coefficients for the Fourier series.\n        \n        Returns:\n            float: The calculated energy in kJ/mol.\n        \"\"\"\n        # Convert angle from degrees to radians for trigonometric functions.\n        phi_rad = np.deg2rad(phi)\n        \n        # Calculate energy using the provided truncated Fourier series.\n        e = (k1 * (1.0 - np.cos(phi_rad)) +\n             k2 * (1.0 - np.cos(2.0 * phi_rad)) +\n             k3 * (1.0 - np.cos(3.0 * phi_rad)))\n        return e\n\n    # Iterate through each parameter set to calculate the rotational barrier.\n    for k_coeffs in test_cases:\n        # The problem is to find max(E) - min(E).\n        # As established in the reasoning, min(E) = 0 for phi=0 because all k_n >= 0.\n        # Therefore, the barrier is simply max(E).\n        # To find max(E), we can minimize -E(phi).\n        \n        # Define the function to be minimized (negative of the energy function).\n        neg_energy_func = lambda phi: -energy(phi, *k_coeffs)\n\n        # Use a numerical optimization routine to find the minimum of -E(phi)\n        # over the interval [0, 360) degrees. This is equivalent to finding the\n        # maximum of E(phi). The 'bounded' method is suitable for this simple\n        # one-dimensional optimization.\n        opt_result = minimize_scalar(\n            neg_energy_func,\n            bounds=(0.0, 360.0),\n            method='bounded'\n        )\n        \n        # The maximum energy is the negative of the found minimum value of the\n        # negative energy function.\n        max_energy = -opt_result.fun\n        \n        # The rotational barrier is the maximum energy, as the minimum is zero.\n        barrier = max_energy\n        \n        # Round the result to one decimal place as specified.\n        results.append(round(barrier, 1))\n        \n    # Final print statement in the exact required format: [result1,result2,result3]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452507"}, {"introduction": "Real-world chemistry often involves a complex interplay between a molecule's intrinsic properties and its environment. This advanced practice challenges you to investigate such a scenario by modeling the stability of the glycine zwitterion, which is highly sensitive to solvent effects. You will construct a hybrid model that combines quantum mechanical data from semi-empirical methods with classical electrostatic and continuum solvation theories, providing a deeper understanding of how computational chemists tackle multi-faceted problems [@problem_id:2452540].", "problem": "Amino acids can exist as a neutral form or as a zwitterion. Consider glycine modeled as a two-state system along an effective proton transfer coordinate. Assume the relative electronic energy of the zwitterion with respect to the neutral form can be approximated by the sum of three physically motivated contributions: an intramolecular deprotonation cost that depends on the chosen semi-empirical method, an internal Coulomb interaction between the formal charges, and a continuum solvation stabilization for the ion pair. The semi-empirical methods are Austin Model 1 (AM1), Parametric Method 3 (PM3), and Parametric Method 7 (PM7).\n\nLet the total energy difference of the zwitterion relative to the neutral form be\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) \\;=\\; \\Delta E_{\\text{intra}}(\\text{method}) \\;+\\; \\Delta E_{\\text{Coul}}(\\varepsilon) \\;+\\; \\Delta G_{\\text{solv}}(\\varepsilon),\n$$\nwhere the following physically grounded model applies.\n\n1. The intramolecular deprotonation costs are method dependent and given in kilocalories per mole:\n$$\n\\Delta E_{\\text{intra}}(\\text{AM1}) = 210.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM3}) = 200.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM7}) = 185.0.\n$$\n\n2. The internal Coulomb interaction between the ammonium and carboxylate formal charges is modeled by Coulomb’s law with a dielectric scaling:\n$$\n\\Delta E_{\\text{Coul}}(\\varepsilon) \\;=\\; - \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}},\n$$\nwith $k_e = 332.06371$ kilocalories mole$^{-1}$ ångström electron charge$^{-2}$, $q = 1.0$ electron charge, $r_{\\text{int}} = 3.0$ ångström, and $\\varepsilon$ the dimensionless dielectric constant.\n\n3. The continuum solvation stabilization of the ion pair is modeled by the Born expression applied to two ions:\n$$\n\\Delta G_{\\text{solv}}(\\varepsilon) \\;=\\; -\\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr)\\, k_e q^2\\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right),\n$$\nwith $R_+ = 1.5$ ångström and $R_- = 1.5$ ångström.\n\nAssume the neutral reference has zero energy. A zwitterion is considered a stable minimum in this two-state model if and only if the zwitterion energy is strictly lower than the neutral energy, that is, if and only if $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$. Express all energies in kilocalories per mole.\n\nYour task is to write a program that, for a specified test suite of method and dielectric-constant pairs, returns a boolean per test indicating whether the zwitterion is a stable minimum according to the above model. Use the following ordered test suite, where each test case is a pair $(\\text{method},\\varepsilon)$:\n\n- Test $1$: $(\\text{PM7}, 1.0)$,\n- Test $2$: $(\\text{PM7}, 78.4)$,\n- Test $3$: $(\\text{PM7}, \\varepsilon_c(\\text{PM7}))$ where $\\varepsilon_c(\\text{method})$ is the critical dielectric constant at which $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon)$ equals $0$, computed analytically from the model,\n- Test $4$: $(\\text{AM1}, 1.0)$,\n- Test $5$: $(\\text{PM3}, 1.0)$,\n- Test $6$: $(\\text{AM1}, 10.0)$,\n- Test $7$: $(\\text{PM3}, \\varepsilon_c(\\text{PM3}))$,\n- Test $8$: $(\\text{PM7}, 2.0)$.\n\nThe analytical expression for the critical dielectric constant can be derived by solving $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) = 0$ for $\\varepsilon$, and it must be used for Tests $3$ and $7$.\n\nYour program should produce a single line of output containing the results as a comma-separated list of booleans enclosed in square brackets (for example, \"[True,False,...]\"), following the exact order of the tests above. No additional text should be printed. A result is True if $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$ and False otherwise.", "solution": "We model the zwitterion–neutral energy difference of glycine as a sum of three terms grounded in electrostatics and a method-dependent intramolecular cost, with all energies in kilocalories per mole. The total energy difference is\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) \\;=\\; \\Delta E_{\\text{intra}}(\\text{method}) \\;-\\; \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}}\n\\;-\\; \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\nThe first term, $\\Delta E_{\\text{intra}}(\\text{method})$, represents the intrinsic energy penalty to form the ion pair from the neutral molecule due to proton transfer and electronic reorganization. At the semi-empirical level, different parametrizations yield different values; here we use fixed values for Austin Model 1 (AM1), Parametric Method 3 (PM3), and Parametric Method 7 (PM7):\n$$\n\\Delta E_{\\text{intra}}(\\text{AM1}) = 210.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM3}) = 200.0,\\quad \\Delta E_{\\text{intra}}(\\text{PM7}) = 185.0.\n$$\nThe second term is the internal Coulomb attraction between charges $+q$ and $-q$ separated by $r_{\\text{int}}$, screened by the dielectric constant $\\varepsilon$:\n$$\n\\Delta E_{\\text{Coul}}(\\varepsilon) \\;=\\; - \\frac{k_e q^2}{\\varepsilon\\, r_{\\text{int}}}.\n$$\nThe third term is the Born solvation stabilization for two ions with radii $R_+$ and $R_-$ in a medium of dielectric constant $\\varepsilon$:\n$$\n\\Delta G_{\\text{solv}}(\\varepsilon) \\;=\\; - \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\nWe use $k_e = 332.06371$, $q = 1.0$, $r_{\\text{int}} = 3.0$, $R_+ = 1.5$, and $R_- = 1.5$ (all distances in ångström).\n\nIt is convenient to define\n$$\nA(\\text{method}) \\equiv \\Delta E_{\\text{intra}}(\\text{method}),\n\\quad\nB \\equiv \\frac{k_e q^2}{r_{\\text{int}}},\n\\quad\nC \\equiv k_e q^2 \\left(\\frac{1}{2 R_+} + \\frac{1}{2 R_-}\\right).\n$$\nWith these, the total energy simplifies to\n$$\n\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon)\n= A - \\frac{B}{\\varepsilon} - \\Bigl(1 - \\frac{1}{\\varepsilon}\\Bigr) C\n= (A - C) + \\left(C - B\\right)\\frac{1}{\\varepsilon}.\n$$\nThis linear dependence in $1/\\varepsilon$ allows an analytic expression for the critical dielectric constant $\\varepsilon_c(\\text{method})$ at which the zwitterion and neutral are isoenergetic, obtained by solving $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) = 0$:\n$$\n0 \\;=\\; (A - C) + \\left(C - B\\right)\\frac{1}{\\varepsilon_c}\n\\;\\;\\Rightarrow\\;\\;\n\\varepsilon_c(\\text{method}) \\;=\\; \\frac{C - B}{C - A(\\text{method})}.\n$$\nFor our constants, we compute\n$$\nB = \\frac{332.06371}{3.0} \\approx 110.6879033,\\quad\n\\frac{1}{2 R_+} + \\frac{1}{2 R_-} = \\frac{1}{3.0} + \\frac{1}{3.0} = \\frac{2}{3},\n$$\nhence\n$$\nC = 332.06371 \\times \\frac{2}{3} \\approx 221.3758067.\n$$\nTherefore,\n- For PM7, $A = 185.0$, giving\n$$\n\\varepsilon_c(\\text{PM7}) = \\frac{221.3758067 - 110.6879033}{221.3758067 - 185.0} \\approx \\frac{110.6879034}{36.3758067} \\approx 3.043.\n$$\n- For PM3, $A = 200.0$, giving\n$$\n\\varepsilon_c(\\text{PM3}) \\approx \\frac{110.6879034}{21.3758067} \\approx 5.177.\n$$\n- For AM1, $A = 210.0$, giving\n$$\n\\varepsilon_c(\\text{AM1}) \\approx \\frac{110.6879034}{11.3758067} \\approx 9.729.\n$$\nDecision criterion: the zwitterion is a stable minimum in this two-state model if and only if $\\Delta E_{\\text{tot}}(\\text{method},\\varepsilon) < 0$. At exactly $\\varepsilon = \\varepsilon_c$, $\\Delta E_{\\text{tot}} = 0$, so the decision is False by the strict inequality.\n\nAlgorithmic steps for each test case $(\\text{method},\\varepsilon)$:\n1. Compute $A$ from the method, and constants $B$ and $C$ once.\n2. Compute $\\Delta E_{\\text{tot}} = (A - C) + (C - B)/\\varepsilon$.\n3. Return True if $\\Delta E_{\\text{tot}} < 0$, else False.\n\nApplying this:\n- Test $1$ $(\\text{PM7}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 185.0 - 110.6879 - 0 \\approx 74.3 > 0 \\Rightarrow$ False.\n- Test $2$ $(\\text{PM7}, 78.4)$: strong stabilization, $\\Delta E_{\\text{tot}} < 0 \\Rightarrow$ True.\n- Test $3$ $(\\text{PM7}, \\varepsilon_c(\\text{PM7}))$: by construction $\\Delta E_{\\text{tot}} = 0 \\Rightarrow$ False.\n- Test $4$ $(\\text{AM1}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 210.0 - 110.6879 \\approx 99.3 > 0 \\Rightarrow$ False.\n- Test $5$ $(\\text{PM3}, 1.0)$: $\\Delta E_{\\text{tot}} \\approx 200.0 - 110.6879 \\approx 89.3 > 0 \\Rightarrow$ False.\n- Test $6$ $(\\text{AM1}, 10.0)$: $\\varepsilon = 10.0 > \\varepsilon_c(\\text{AM1}) \\approx 9.729 \\Rightarrow \\Delta E_{\\text{tot}} < 0 \\Rightarrow$ True.\n- Test $7$ $(\\text{PM3}, \\varepsilon_c(\\text{PM3}))$: $\\Delta E_{\\text{tot}} = 0 \\Rightarrow$ False.\n- Test $8$ $(\\text{PM7}, 2.0)$: $\\varepsilon = 2.0 < \\varepsilon_c(\\text{PM7}) \\approx 3.043 \\Rightarrow \\Delta E_{\\text{tot}} > 0 \\Rightarrow$ False.\n\nInterpretation regarding the method’s intrinsic treatment of solvation: in the gas phase ($\\varepsilon = 1.0$), PM7 yields $\\Delta E_{\\text{tot}} > 0$ (False for stability), indicating that the zwitterion is not predicted to be a stable minimum without an external dielectric. This implies that PM7, like AM1 and PM3, does not intrinsically include bulk solvation stabilization; explicit or implicit solvation must be invoked to stabilize the zwitterion, as reflected by the transition to True at sufficiently large $\\varepsilon$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n# No external input; prints a single line result list as specified.\ndef solve():\n    # Physical constants and parameters (kcal/mol, Angstrom, unitless)\n    k_e = 332.06371  # kcal mol^-1 Å e^-2\n    q = 1.0          # e\n    r_int = 3.0      # Å\n    R_plus = 1.5     # Å\n    R_minus = 1.5    # Å\n\n    # Method-dependent intramolecular deprotonation energies (kcal/mol)\n    A_map = {\n        \"AM1\": 210.0,\n        \"PM3\": 200.0,\n        \"PM7\": 185.0,\n    }\n\n    # Precompute constants B and C for efficiency\n    B = k_e * (q ** 2) / r_int\n    C = k_e * (q ** 2) * (1.0 / (2.0 * R_plus) + 1.0 / (2.0 * R_minus))\n\n    def delta_E(method: str, eps: float) -> float:\n        \"\"\"Total zwitterion-relative energy (kcal/mol) per the model.\"\"\"\n        A = A_map[method]\n        return (A - C) + (C - B) / eps\n\n    def eps_crit(method: str) -> float:\n        \"\"\"Critical dielectric at which delta_E == 0 (analytic).\"\"\"\n        A = A_map[method]\n        denom = (C - A)\n        # In the unlikely case denom <= 0, return a very large epsilon\n        if denom <= 0:\n            return float('inf')\n        return (C - B) / denom\n\n    # Define the ordered test suite: (method, epsilon)\n    test_cases = [\n        (\"PM7\", 1.0),                 # Test 1\n        (\"PM7\", 78.4),                # Test 2\n        (\"PM7\", eps_crit(\"PM7\")),     # Test 3\n        (\"AM1\", 1.0),                 # Test 4\n        (\"PM3\", 1.0),                 # Test 5\n        (\"AM1\", 10.0),                # Test 6\n        (\"PM3\", eps_crit(\"PM3\")),     # Test 7\n        (\"PM7\", 2.0),                 # Test 8\n    ]\n\n    results = []\n    for method, eps in test_cases:\n        dE = delta_E(method, eps)\n        # Zwitterion is a stable minimum if total energy difference is strictly negative\n        is_stable = dE < 0.0\n        results.append(is_stable)\n\n    # Final print statement in the exact required format (no spaces).\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2452540"}]}