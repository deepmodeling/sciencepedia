{"hands_on_practices": [{"introduction": "Mastering plane-wave calculations begins with understanding how to choose the two most important numerical parameters: the kinetic energy cutoff ($E_{\\text{cut}}$) and the density of the k-point mesh. This first exercise guides you through the essential process of convergence testing for a model crystal. By systematically calculating the electronic band gap at different values of $E_{\\text{cut}}$ and for different k-point grids, you will gain a practical understanding of how these parameters control the accuracy of your simulation and learn the fundamental skills required to obtain reliable results for any crystalline material. [@problem_id:2460283]", "problem": "You are asked to study the convergence of the indirect band gap of crystalline silicon with respect to the plane-wave kinetic energy cutoff and the density of the crystal momentum sampling mesh. For computational tractability while retaining key physics of a plane-wave basis and Bragg scattering, use a simplified three-dimensional nearly-free-electron model with a cosine periodic potential on a simple cubic Bravais lattice, which captures an indirect gap via coupling at the Brillouin zone boundary. The task is to implement a complete program that constructs the single-electron Hamiltonian in a plane-wave basis at each crystal momentum point, diagonalizes it to obtain the lowest two energy bands, and estimates the indirect band gap as the difference between the minimum of the second band and the maximum of the first band across sampled crystal momentum points. All energies must be reported in electronvolts, and all lengths in angstroms.\n\nDefinitions and model:\n- Let the lattice parameter be $a = 5.43\\,\\text{\\AA}$. The reciprocal lattice primitive vectors are $\\mathbf{b}_1 = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$, $\\mathbf{b}_2 = \\frac{2\\pi}{a}\\hat{\\mathbf{y}}$, and $\\mathbf{b}_3 = \\frac{2\\pi}{a}\\hat{\\mathbf{z}}$. The first Brillouin zone is the cube $k_i \\in [-\\pi/a,\\pi/a)$ for $i \\in \\{x,y,z\\}$.\n- The electron kinetic energy is $T(\\mathbf{q}) = \\frac{\\hbar^2 |\\mathbf{q}|^2}{2 m_e}$ with $\\frac{\\hbar^2}{2m_e} = 3.8099819442818976\\,\\text{eV}\\cdot\\text{\\AA}^2$.\n- The periodic potential is $V(\\mathbf{r}) = 2 V_c \\left[\\cos\\left(\\mathbf{b}_1 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_2 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_3 \\cdot \\mathbf{r}\\right)\\right]$, with Fourier coefficients $V_{\\pm \\mathbf{b}_1} = V_{\\pm \\mathbf{b}_2} = V_{\\pm \\mathbf{b}_3} = V_c$ and all other Fourier coefficients equal to zero. Use $V_c = -1.25\\,\\text{eV}$. The unit-cell average of $V(\\mathbf{r})$ is zero.\n- For each crystal momentum $\\mathbf{k}$, the plane-wave basis consists of the set of states indexed by integer triples $\\mathbf{n} = (n_x,n_y,n_z)$ with wavevectors $\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k}) = \\mathbf{k} + n_x \\mathbf{b}_1 + n_y \\mathbf{b}_2 + n_z \\mathbf{b}_3$ that satisfy the kinetic energy cutoff condition $T\\left(\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k})\\right) \\le E_{\\text{cut}}$, where $E_{\\text{cut}}$ is a positive parameter in electronvolts. The Hamiltonian in this basis has matrix elements\n$$\nH_{\\mathbf{n},\\mathbf{m}}(\\mathbf{k}) =\n\\begin{cases}\nT\\left(\\mathbf{q}_{\\mathbf{n}}(\\mathbf{k})\\right), & \\text{if } \\mathbf{n} = \\mathbf{m},\\\\\nV_c, & \\text{if } \\mathbf{n} - \\mathbf{m} \\in \\{\\pm(1,0,0), \\pm(0,1,0), \\pm(0,0,1)\\},\\\\\n0, & \\text{otherwise.}\n\\end{cases}\n$$\n\nCrystal momentum sampling:\n- For an integer $N_k \\ge 1$, sample the first Brillouin zone on a uniform grid with $N_k$ points per Cartesian direction at\n$$\nk_i(j) = -\\frac{\\pi}{a} + \\frac{2\\pi}{a}\\,\\frac{j}{N_k}, \\quad j \\in \\{0,1,\\dots,N_k-1\\}, \\quad i \\in \\{x,y,z\\}.\n$$\nThis yields $N_k^3$ points $\\mathbf{k}$ to evaluate. For each such $\\mathbf{k}$, construct $H(\\mathbf{k})$ using the basis defined by the cutoff.\n\nBand edges and gap:\n- For each $\\mathbf{k}$ where the basis contains at least one plane wave, let $E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots$ be the ascending eigenvalues of $H(\\mathbf{k})$. Across the set of $\\mathbf{k}$ points where at least one eigenvalue exists, define the valence band maximum as $E_v = \\max_{\\mathbf{k}} E_1(\\mathbf{k})$. Across the set of $\\mathbf{k}$ points where at least two eigenvalues exist, define the conduction band minimum as $E_c = \\min_{\\mathbf{k}} E_2(\\mathbf{k})$. The estimated indirect band gap is $E_g = E_c - E_v$ in electronvolts. If no $\\mathbf{k}$ point has at least two eigenvalues, $E_g$ is undefined.\n\nTest suite:\nCompute $E_g$ (in electronvolts) for the following parameter pairs $(E_{\\text{cut}}, N_k)$:\n- Case $1$: $(6.0, 1)$.\n- Case $2$: $(6.0, 4)$.\n- Case $3$: $(8.0, 4)$.\n- Case $4$: $(12.0, 10)$.\n- Case $5$: $(20.0, 12)$.\n\nOutput requirements:\n- Your program must produce a single line of output containing the five results as a comma-separated list enclosed in square brackets, for example $[x_1,x_2,x_3,x_4,x_5]$, with each $x_i$ the floating-point value of $E_g$ in electronvolts for the corresponding case, rounded to $6$ decimal places. If a particular $E_g$ is undefined due to insufficient basis size, output the string representation of a not-a-number value as given by the programming language for that case, but do not change the formatting of the list.", "solution": "The problem statement has been subjected to rigorous validation and is deemed valid. It is scientifically grounded, well-posed, objective, and contains all necessary information to proceed with a unique and verifiable solution. It represents a standard, albeit simplified, problem in computational solid-state physics, suitable for illustrating the principles of electronic band structure calculation using a plane-wave basis set. We shall now proceed to the solution.\n\nThe fundamental task is to solve the time-independent Schrödinger equation for a single electron in a periodic potential, $\\hat{H}\\psi(\\mathbf{r}) = E\\psi(\\mathbf{r})$, where the Hamiltonian is $\\hat{H} = \\hat{T} + \\hat{V} = -\\frac{\\hbar^2}{2m_e}\\nabla^2 + V(\\mathbf{r})$. The periodicity of the potential, $V(\\mathbf{r}) = V(\\mathbf{r}+\\mathbf{R})$ for any direct lattice vector $\\mathbf{R}$, imposes a specific structure on the eigenstates. According to Bloch's theorem, the solutions can be written in the form $\\psi_{\\mathbf{k}}(\\mathbf{r}) = e^{i\\mathbf{k}\\cdot\\mathbf{r}}u_{\\mathbf{k}}(\\mathbf{r})$, where $\\mathbf{k}$ is a crystal momentum vector in the first Brillouin zone and $u_{\\mathbf{k}}(\\mathbf{r})$ is a cell-periodic function, $u_{\\mathbf{k}}(\\mathbf{r}) = u_{\\mathbf{k}}(\\mathbf{r}+\\mathbf{R})$.\n\nGiven that $u_{\\mathbf{k}}(\\mathbf{r})$ is periodic, it can be expanded in a Fourier series over the reciprocal lattice vectors $\\mathbf{G}$: $u_{\\mathbf{k}}(\\mathbf{r}) = \\sum_{\\mathbf{G}} c_{\\mathbf{k}}(\\mathbf{G}) e^{i\\mathbf{G}\\cdot\\mathbf{r}}$. Substituting this into the Bloch form for the wavefunction gives the plane-wave expansion:\n$$\n\\psi_{\\mathbf{k}}(\\mathbf{r}) = \\sum_{\\mathbf{G}} c_{\\mathbf{k}}(\\mathbf{G}) e^{i(\\mathbf{k}+\\mathbf{G})\\cdot\\mathbf{r}}\n$$\nInserting this expansion into the Schrödinger equation transforms it into an infinite-dimensional matrix eigenvalue problem for the coefficients $c_{\\mathbf{k}}(\\mathbf{G})$ for each $\\mathbf{k}$. The matrix elements of the Hamiltonian in this plane-wave basis $|\\mathbf{k}+\\mathbf{G}\\rangle$ are given by $H_{\\mathbf{G},\\mathbf{G}'}(\\mathbf{k}) = \\langle \\mathbf{k}+\\mathbf{G} | \\hat{H} | \\mathbf{k}+\\mathbf{G}' \\rangle$.\n\nThe kinetic energy operator $\\hat{T}$ is diagonal in this basis:\n$$\n\\langle \\mathbf{k}+\\mathbf{G} | \\hat{T} | \\mathbf{k}+\\mathbf{G}' \\rangle = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}|^2}{2m_e} \\delta_{\\mathbf{G},\\mathbf{G}'}\n$$\nThe potential energy operator $\\hat{V}$ has matrix elements determined by the Fourier coefficients of the potential, $V(\\mathbf{r}) = \\sum_{\\mathbf{G}} V_{\\mathbf{G}} e^{i\\mathbf{G}\\cdot\\mathbf{r}}$:\n$$\n\\langle \\mathbf{k}+\\mathbf{G} | \\hat{V} | \\mathbf{k}+\\mathbf{G}' \\rangle = V_{\\mathbf{G}-\\mathbf{G}'}\n$$\nCombining these, the full Hamiltonian matrix elements are:\n$$\nH_{\\mathbf{G},\\mathbf{G}'}(\\mathbf{k}) = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}|^2}{2m_e} \\delta_{\\mathbf{G},\\mathbf{G}'} + V_{\\mathbf{G}-\\mathbf{G}'}\n$$\nThe problem specifies a simple cubic Bravais lattice with lattice parameter $a = 5.43\\,\\text{\\AA}$. The reciprocal lattice is also simple cubic, with primitive vectors $\\mathbf{b}_1 = \\frac{2\\pi}{a}\\hat{\\mathbf{x}}$, $\\mathbf{b}_2 = \\frac{2\\pi}{a}\\hat{\\mathbf{y}}$, and $\\mathbf{b}_3 = \\frac{2\\pi}{a}\\hat{\\mathbf{z}}$. A general reciprocal lattice vector is $\\mathbf{G}_{\\mathbf{n}} = n_x \\mathbf{b}_1 + n_y \\mathbf{b}_2 + n_z \\mathbf{b}_3$ for an integer vector $\\mathbf{n} = (n_x, n_y, n_z)$.\n\nThe periodic potential is $V(\\mathbf{r}) = 2 V_c \\left[\\cos\\left(\\mathbf{b}_1 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_2 \\cdot \\mathbf{r}\\right) + \\cos\\left(\\mathbf{b}_3 \\cdot \\mathbf{r}\\right)\\right]$. Using Euler's formula, $\\cos(x) = (e^{ix}+e^{-ix})/2$, we identify its non-zero Fourier coefficients as $V_{\\mathbf{G}} = V_c$ for $\\mathbf{G} \\in \\{\\pm\\mathbf{b}_1, \\pm\\mathbf{b}_2, \\pm\\mathbf{b}_3\\}$ and $V_{\\mathbf{G}} = 0$ for all other $\\mathbf{G} \\ne 0$. The average potential $V_{\\mathbf{G}=0}$ is zero. This implies that the potential couples a plane wave $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}\\rangle$ only to plane waves $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{m}}\\rangle$ where the difference $\\mathbf{G}_{\\mathbf{n}}-\\mathbf{G}_{\\mathbf{m}}$ is one of the six shortest non-zero reciprocal lattice vectors. This corresponds to the condition that $\\mathbf{n}-\\mathbf{m}$ is one of $\\pm(1,0,0)$, $\\pm(0,1,0)$, or $\\pm(0,0,1)$.\n\nIn a practical computation, the infinite basis must be truncated. This is achieved via a kinetic energy cutoff, $E_{\\text{cut}}$. For each crystal momentum $\\mathbf{k}$, we include in our basis only those plane waves $|\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}\\rangle$ for which the kinetic energy is below the cutoff:\n$$\nT(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}) = \\frac{\\hbar^2 |\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}|^2}{2m_e} \\le E_{\\text{cut}}\n$$\nThis results in a finite-dimensional, $\\mathbf{k}$-dependent Hamiltonian matrix $H(\\mathbf{k})$, whose elements are precisely those specified in the problem statement. The eigenvalues of this matrix, $E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots$, constitute the electronic band structure.\n\nThe computational algorithm is as follows:\n1.  For each given pair of parameters $(E_{\\text{cut}}, N_k)$, initialize the calculation. The required physical constants are $a = 5.43\\,\\text{\\AA}$, $\\frac{\\hbar^2}{2m_e} = 3.8099819442818976\\,\\text{eV}\\cdot\\text{\\AA}^2$, and $V_c = -1.25\\,\\text{eV}$.\n2.  Generate the uniform grid of $N_k^3$ crystal momentum vectors $\\mathbf{k}$ sampling the first Brillouin zone according to the rule $k_i(j) = -\\frac{\\pi}{a} + \\frac{2\\pi}{a}\\,\\frac{j}{N_k}$ for $j=0, \\dots, N_k-1$.\n3.  For each $\\mathbf{k}$ vector in the grid:\n    a. Determine the finite set of integer vectors $\\mathbf{n} = (n_x, n_y, n_z)$ that satisfy the kinetic energy cutoff condition. This is done by searching a sufficiently large cubic range of integers $\\mathbf{n}$ and retaining those that satisfy $T(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}}) \\le E_{\\text{cut}}$.\n    b. If the basis set is empty, no eigenvalues can be computed for this $\\mathbf{k}$. Proceed to the next $\\mathbf{k}$.\n    c. If the basis is non-empty, construct the Hamiltonian matrix $H(\\mathbf{k})$ of size $N_{basis} \\times N_{basis}$. The diagonal elements are $H_{\\mathbf{n},\\mathbf{n}}(\\mathbf{k}) = T(\\mathbf{k}+\\mathbf{G}_{\\mathbf{n}})$. The off-diagonal element $H_{\\mathbf{n},\\mathbf{m}}(\\mathbf{k})$ is $V_c$ if $\\mathbf{n}-\\mathbf{m}$ is a unit vector in one of the six Cartesian directions, and $0$ otherwise.\n    d. The resulting matrix is Hermitian. Diagonalize it to find its real eigenvalues. The eigenvalues are sorted in ascending order: $E_1(\\mathbf{k}) \\le E_2(\\mathbf{k}) \\le \\dots \\le E_{N_{basis}}(\\mathbf{k})$.\n    e. Collect the first eigenvalue $E_1(\\mathbf{k})$ and, if it exists, the second eigenvalue $E_2(\\mathbf{k})$.\n4.  After iterating through all $\\mathbf{k}$ points, determine the valence band maximum, $E_v = \\max_{\\mathbf{k}} E_1(\\mathbf{k})$, where the maximum is taken over all $\\mathbf{k}$ points that yielded at least one eigenvalue.\n5.  Similarly, determine the conduction band minimum, $E_c = \\min_{\\mathbf{k}} E_2(\\mathbf{k})$, where the minimum is taken over all $\\mathbf{k}$ points that yielded at least two eigenvalues.\n6.  If $E_c$ could not be determined (i.e., no $\\mathbf{k}$ point produced a basis of size two or greater), the band gap $E_g$ is undefined. Otherwise, calculate the indirect band gap as $E_g = E_c - E_v$.\n7.  This procedure is repeated for all five test cases, and the results are reported in the specified format. This systematic process ensures a correct and reproducible numerical solution to the problem as stated.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the indirect band gap of a model crystal using a plane-wave basis.\n    \"\"\"\n    # Physical constants and model parameters\n    A_LATTICE = 5.43  # Lattice parameter in Angstroms\n    HBAR_SQ_2ME = 3.8099819442818976  # h-bar^2 / (2*m_e) in eV * Angstrom^2\n    V_C = -1.25  # Potential strength in eV\n\n    # Reciprocal lattice vector magnitude\n    B_SCALAR = 2 * np.pi / A_LATTICE\n\n    # Test cases: (E_cut in eV, N_k)\n    test_cases = [\n        (6.0, 1),\n        (6.0, 4),\n        (8.0, 4),\n        (12.0, 10),\n        (20.0, 12),\n    ]\n\n    results = []\n    for E_cut, N_k in test_cases:\n        e1_all_k = []\n        e2_all_k = []\n\n        # Generate k-point mesh\n        k_coords_1d = -np.pi / A_LATTICE + (2 * np.pi / A_LATTICE) * np.arange(N_k) / N_k\n        kx_grid, ky_grid, kz_grid = np.meshgrid(k_coords_1d, k_coords_1d, k_coords_1d, indexing='ij')\n        k_points = np.stack([kx_grid.ravel(), ky_grid.ravel(), kz_grid.ravel()], axis=-1)\n\n        # Determine search range for integer vectors n = (nx, ny, nz)\n        # Bounding box must account for k-vector shift.\n        # |k_i| <= pi/a. We need C * (k_i + n_i*B)^2 <= E_cut.\n        # |n_i*B| <= sqrt(E_cut/C) + |k_i| <= sqrt(E_cut/C) + pi/a\n        # |n_i| <= (sqrt(E_cut/C) + pi/a) / B = a/(2pi) * sqrt(E_cut/C) + 1/2\n        n_lim = int(np.ceil((np.sqrt(E_cut / HBAR_SQ_2ME) + np.pi / A_LATTICE) / B_SCALAR))\n        n_range = np.arange(-n_lim, n_lim + 1)\n        nx_v, ny_v, nz_v = np.meshgrid(n_range, n_range, n_range, indexing='ij')\n        n_candidates = np.stack([nx_v.ravel(), ny_v.ravel(), nz_v.ravel()], axis=-1)\n\n        for k_vec in k_points:\n            # Generate basis set for the current k-point\n            G_vectors = n_candidates * B_SCALAR\n            q_vectors = k_vec + G_vectors\n            \n            kinetic_energies = HBAR_SQ_2ME * np.sum(q_vectors**2, axis=-1)\n            \n            basis_indices = np.where(kinetic_energies <= E_cut)[0]\n            \n            if basis_indices.size == 0:\n                continue\n            \n            basis_n_vectors = n_candidates[basis_indices]\n            basis_ke = kinetic_energies[basis_indices]\n            N_basis = len(basis_n_vectors)\n            \n            # Construct Hamiltonian\n            H = np.diag(basis_ke)\n            \n            # Map n-vectors to matrix indices for efficient lookup\n            n_to_idx = {tuple(n): i for i, n in enumerate(basis_n_vectors)}\n            \n            # Off-diagonal elements\n            deltas = np.array([[1,0,0], [-1,0,0], [0,1,0], [0,-1,0], [0,0,1], [0,0,-1]])\n            for i, n_i in enumerate(basis_n_vectors):\n                for delta in deltas:\n                    n_j_tuple = tuple(n_i + delta)\n                    if n_j_tuple in n_to_idx:\n                        j = n_to_idx[n_j_tuple]\n                        # Only fill upper triangle for eigh\n                        if i < j:\n                            H[i, j] = V_C\n                            H[j, i] = V_C\n\n            # Diagonalize and collect eigenvalues\n            if N_basis > 0:\n                # eigvalsh is efficient for Hermitian matrices and returns sorted eigenvalues\n                eigenvalues = np.linalg.eigvalsh(H)\n                e1_all_k.append(eigenvalues[0])\n                if N_basis >= 2:\n                    e2_all_k.append(eigenvalues[1])\n\n        # Calculate band gap for the current (E_cut, N_k) pair\n        if not e2_all_k:\n            Eg = np.nan\n        else:\n            E_v = np.max(e1_all_k)\n            E_c = np.min(e2_all_k)\n            Eg = E_c - E_v\n            \n        results.append(Eg)\n\n    # Format output as specified\n    formatted_results = []\n    for r in results:\n        if np.isnan(r):\n            formatted_results.append(\"nan\")\n        else:\n            formatted_results.append(f\"{r:.6f}\")\n\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2460283"}, {"introduction": "While perfect crystals are a useful starting point, real materials are often defined by their imperfections. This practice introduces the supercell method, a cornerstone technique for modeling localized defects, impurities, or surfaces using plane-wave codes designed for periodic systems. You will construct a one-dimensional model of a crystal with a single impurity and investigate how the impurity's energy signature converges as you increase the size of the supercell, providing direct insight into managing finite-size errors that arise from artificial interactions between periodic images of the defect. [@problem_id:2460291]", "problem": "Consider a one-dimensional crystal modeled with periodic boundary conditions and a plane-wave basis. A primitive crystal has lattice constant $a$ and host potential $V_{\\text{host}}(x)=V_c \\cos\\left(\\frac{2\\pi x}{a}\\right)$. A single substitutional impurity is modeled within a supercell of length $L=N a$ by adding a localized impurity potential $V_{\\text{imp}}(x)$ centered at $x=0$, repeated periodically with period $L$ by virtue of the boundary conditions. The impurity potential is given by a Gaussian of amplitude $A$ and width $\\sigma$, that is, $V_{\\text{imp}}(x) = A \\sum_{m\\in\\mathbb{Z}} \\exp\\!\\left(-\\frac{(x-mL)^2}{\\sigma^2}\\right)$. The total potential in the supercell is thus $V(x)=V_{\\text{host}}(x)+V_{\\text{imp}}(x)$.\n\nIn Hartree atomic units (length in bohr and energy in Hartree), consider a single non-interacting electron governed by the time-independent Schrödinger equation with periodic boundary conditions in the supercell,\n$$\n\\hat{H} \\psi(x) = E \\psi(x), \\quad \\hat{H} = -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} + V(x), \\quad \\psi(x+L)=\\psi(x).\n$$\nRestrict the Hilbert space to plane waves at the Gamma point (zero crystal momentum), truncated by a kinetic energy cutoff $E_{\\text{cut}}$. That is, use basis functions $\\phi_G(x) = \\frac{1}{\\sqrt{L}} e^{i G x}$ with reciprocal vectors $G=\\frac{2\\pi n}{L}$ for integer $n$ such that $\\frac{1}{2}G^2 \\le E_{\\text{cut}}$.\n\nFor each parameter set below, compute the lowest eigenvalue $E_{\\text{defect}}(N,E_{\\text{cut}})$ of $\\hat{H}$ with the total potential $V(x)$, and the lowest eigenvalue $E_{\\text{host}}(N,E_{\\text{cut}})$ of $\\hat{H}$ with the host potential $V_{\\text{host}}(x)$ alone (that is, with $A=0$). Report the impurity-induced energy shift\n$$\n\\Delta E(N,E_{\\text{cut}}) = E_{\\text{defect}}(N,E_{\\text{cut}}) - E_{\\text{host}}(N,E_{\\text{cut}}),\n$$\nin Hartree. Study the convergence of $\\Delta E$ with supercell size $N$.\n\nAll quantities must be treated in Hartree atomic units, and all reported energies must be expressed in Hartree as decimal floats.\n\nUse the following test suite of parameter values, where each tuple is $(N,E_{\\text{cut}},a,V_c,A,\\sigma)$:\n\n- Case $1$: $(4, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- Case $2$: $(8, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- Case $3$: $(16, 20.0, 1.0, 0.5, -0.4, 0.15)$\n- Case $4$: $(6, 20.0, 1.0, 0.5, 0.0, 0.15)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the cases above. For example, the format must be exactly like $[\\Delta E_1,\\Delta E_2,\\Delta E_3,\\Delta E_4]$, where each $\\Delta E_i$ is a float in Hartree. No other text must be printed.", "solution": "The problem presented is a standard exercise in computational solid-state physics, specifically the application of a plane-wave basis set to solve the time-independent Schrödinger equation for a one-dimensional periodic system with an impurity. The problem is scientifically grounded, well-posed, and all necessary parameters are provided. Therefore, a solution can be constructed.\n\nThe governing equation is the one-dimensional, single-electron Schrödinger equation in Hartree atomic units ($\\hbar = 1, m_e = 1, e=1, 4\\pi\\epsilon_0=1$):\n$$\n\\hat{H} \\psi(x) = \\left( -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} + V(x) \\right) \\psi(x) = E \\psi(x)\n$$\nThe calculation is performed within a supercell of length $L = N a$, imposing periodic boundary conditions $\\psi(x+L)=\\psi(x)$. The total potential is $V(x) = V_{\\text{host}}(x) + V_{\\text{imp}}(x)$.\n\nWe expand the wavefunction $\\psi(x)$ in a basis of plane waves. As the problem specifies calculations at the Gamma point (crystal momentum $k=0$), the basis functions are the reciprocal lattice vectors of the supercell:\n$$\n\\phi_G(x) = \\frac{1}{\\sqrt{L}} e^{i G x}, \\quad \\text{where} \\quad G = \\frac{2\\pi n}{L} \\quad \\text{for } n \\in \\mathbb{Z}\n$$\nThe expansion is $\\psi(x) = \\sum_{G} c_G \\phi_G(x)$. This converts the differential Schrödinger equation into a matrix eigenvalue problem in the basis of plane-wave coefficients $\\{c_G\\}$. The Hamiltonian matrix elements are $H_{G', G} = \\langle \\phi_{G'} | \\hat{H} | \\phi_G \\rangle$.\n\nThe Hilbert space is truncated by a kinetic energy cutoff $E_{\\text{cut}}$, which restricts the set of basis functions to those with kinetic energy $\\frac{1}{2}G^2 \\le E_{\\text{cut}}$. This implies:\n$$\n\\frac{1}{2} \\left(\\frac{2\\pi n}{L}\\right)^2 \\le E_{\\text{cut}} \\implies |n| \\le \\frac{L}{\\pi}\\sqrt{\\frac{E_{\\text{cut}}}{2}}\n$$\nLet $n_{\\text{max}} = \\lfloor \\frac{L}{\\pi}\\sqrt{\\frac{E_{\\text{cut}}}{2}} \\rfloor$. The basis will consist of plane waves with integer indices $n$ from $-n_{\\text{max}}$ to $n_{\\text{max}}$, resulting in a basis of size $N_b = 2n_{\\text{max}}+1$.\n\nThe Hamiltonian matrix elements $H_{G', G}$ are the sum of the kinetic and potential energy matrix elements:\n$$\nH_{G', G} = \\langle \\phi_{G'} | -\\frac{1}{2}\\frac{\\mathrm{d}^2}{\\mathrm{d}x^2} | \\phi_G \\rangle + \\langle \\phi_{G'} | V(x) | \\phi_G \\rangle\n$$\n\nThe kinetic energy operator is diagonal in the plane-wave basis:\n$$\nT_{G', G} = \\langle \\phi_{G'} | \\frac{1}{2}G^2 | \\phi_G \\rangle = \\frac{1}{2}G^2 \\delta_{G',G}\n$$\nOn our integer index grid, this becomes $T_{n', n} = \\frac{1}{2}\\left(\\frac{2\\pi n}{L}\\right)^2 \\delta_{n',n}$.\n\nThe potential energy matrix element is given by the Fourier transform of the potential:\n$$\nV_{G', G} = \\frac{1}{L} \\int_0^L e^{-iG'x} V(x) e^{iGx} dx = \\frac{1}{L} \\int_0^L V(x) e^{i(G-G')x} dx = V_{G'-G}\n$$\nwhere $V_{K}$ is the Fourier coefficient of $V(x)$ for the wavevector $K = G'-G$. Since the total potential is a sum, its Fourier coefficients are the sum of the coefficients of its parts: $V_{G'-G} = V_{\\text{host}, G'-G} + V_{\\text{imp}, G'-G}$.\n\nFor the host potential, $V_{\\text{host}}(x)=V_c \\cos\\left(\\frac{2\\pi x}{a}\\right) = \\frac{V_c}{2}\\left( e^{i\\frac{2\\pi x}{a}} + e^{-i\\frac{2\\pi x}{a}} \\right)$. Its Fourier coefficients are non-zero only for wavevectors $K = \\pm \\frac{2\\pi}{a}$. The matrix element $V_{\\text{host}, G'-G}$ is non-zero if $G'-G = \\pm \\frac{2\\pi}{a}$. In terms of integer indices:\n$$\n\\frac{2\\pi n'}{L} - \\frac{2\\pi n}{L} = \\pm \\frac{2\\pi}{a} \\implies \\frac{n'-n}{Na} = \\pm \\frac{1}{a} \\implies n'-n = \\pm N\n$$\nThus, $V_{\\text{host}, n', n} = \\frac{V_c}{2}$ if $n'-n = \\pm N$, and $0$ otherwise.\n\nFor the impurity potential, $V_{\\text{imp}}(x) = A \\sum_{m\\in\\mathbb{Z}} \\exp\\!\\left(-\\frac{(x-mL)^2}{\\sigma^2}\\right)$, the Fourier coefficient for a wavevector $K$ is found by integrating over one period:\n$$\nV_{\\text{imp}, K} = \\frac{1}{L} \\int_{-\\infty}^{\\infty} A \\exp\\left(-\\frac{x^2}{\\sigma^2}\\right) e^{-iKx} dx = \\frac{A}{L} \\left( \\sigma\\sqrt{\\pi} \\exp\\left(-\\frac{K^2\\sigma^2}{4}\\right) \\right)\n$$\nThis is derived by recognizing the sum of shifted Gaussians is a periodic function, and its Fourier coefficient integral over one period equals the Fourier transform of a single Gaussian. Substituting $K=G'-G=\\frac{2\\pi(n'-n)}{L}$, the impurity potential matrix elements are:\n$$\nV_{\\text{imp}, n', n} = \\frac{A \\sigma\\sqrt{\\pi}}{L} \\exp\\left(-\\frac{1}{4}\\left(\\frac{2\\pi(n'-n)}{L}\\right)^2 \\sigma^2 \\right)\n$$\nSince both potentials $V_{\\text{host}}(x)$ and $V_{\\text{imp}}(x)$ are real and even functions, the resulting Hamiltonian matrix is real and symmetric.\n\nThe algorithm proceeds as follows for each test case:\n$1$. Define the basis set by calculating $n_{\\text{max}}$.\n$2$. Construct the host Hamiltonian matrix, $H_{\\text{host}}$, of size $(2n_{\\text{max}}+1) \\times (2n_{\\text{max}}+1)$. Its elements are $H_{\\text{host}, n', n} = T_{n', n} + V_{\\text{host}, n', n}$.\n$3$. Construct the defect Hamiltonian matrix, $H_{\\text{defect}}$, by adding the impurity potential matrix to the host Hamiltonian: $H_{\\text{defect}, n', n} = H_{\\text{host}, n', n} + V_{\\text{imp}, n', n}$.\n$4$. Numerically diagonalize both real symmetric matrices to find their eigenvalues. The lowest eigenvalue for each system, $E_{\\text{host}}$ and $E_{\\text{defect}}$, is the ground state energy.\n$5$. The impurity-induced energy shift is $\\Delta E = E_{\\text{defect}} - E_{\\text{host}}$. For Case $4$, $A=0$, so $V_{\\text{imp}}=0$, and thus $\\Delta E$ must be $0$. This serves as a validation of the method.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to process test cases and print results.\n    \"\"\"\n    test_cases = [\n        (4, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (8, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (16, 20.0, 1.0, 0.5, -0.4, 0.15),\n        (6, 20.0, 1.0, 0.5, 0.0, 0.15),\n    ]\n\n    results = []\n    for case in test_cases:\n        N, E_cut, a, V_c, A, sigma = case\n        \n        # Calculate lowest eigenvalues for the defect and host systems.\n        E_defect = calculate_lowest_eigenvalue(N, E_cut, a, V_c, A, sigma)\n        E_host = calculate_lowest_eigenvalue(N, E_cut, a, V_c, 0.0, sigma)\n        \n        # Calculate the impurity-induced energy shift.\n        delta_E = E_defect - E_host\n        results.append(delta_E)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.12f}' for r in results)}]\")\n\ndef calculate_lowest_eigenvalue(N, E_cut, a, V_c, A, sigma):\n    \"\"\"\n    Calculates the lowest eigenvalue of the Hamiltonian for a given set of parameters.\n    The parameter A (impurity amplitude) determines whether it is a defect (A != 0)\n    or host (A = 0) calculation.\n    \"\"\"\n    # 1. Define the supercell and basis set parameters\n    L = N * a\n    \n    # Determine the range of integer indices n for the plane-wave basis\n    # based on the kinetic energy cutoff E_cut.\n    n_max = int(np.floor((L / np.pi) * np.sqrt(E_cut / 2.0)))\n    basis_size = 2 * n_max + 1\n    \n    # Array of integer indices for G vectors: n = -n_max, ..., n_max\n    n_indices = np.arange(-n_max, n_max + 1)\n\n    # 2. Construct the Hamiltonian matrix\n    H = np.zeros((basis_size, basis_size), dtype=float)\n\n    # 2a. Kinetic Energy Term (diagonal)\n    # G_n = 2*pi*n/L. T = 0.5 * G_n^2\n    G_vals = 2.0 * np.pi * n_indices / L\n    T_matrix_diag = 0.5 * G_vals**2\n    H += np.diag(T_matrix_diag)\n\n    # 2b. Host Potential Term (off-diagonal)\n    # V_host couples states n and n' where |n - n'| = N.\n    # In matrix indices (i,j), this means |i-j| = N.\n    if V_c != 0.0:\n        for i in range(basis_size):\n            if i + N < basis_size:\n                H[i, i + N] += V_c / 2.0\n                H[i + N, i] += V_c / 2.0\n\n    # 2c. Impurity Potential Term (dense matrix)\n    # This term is added only if the impurity amplitude A is non-zero.\n    if A != 0.0:\n        # Create a matrix of index differences (j - i) using broadcasting\n        # This corresponds to n' - n for matrix element H[j, i]\n        matrix_indices = np.arange(basis_size)\n        diff_n_matrix = matrix_indices[:, None] - matrix_indices[None, :]\n        \n        # K = G' - G = 2*pi*(n'-n)/L\n        K_matrix = 2.0 * np.pi * diff_n_matrix / L\n        \n        # V_imp(K) = (A * sigma * sqrt(pi) / L) * exp(-K^2 * sigma^2 / 4)\n        V_imp_matrix = (A * sigma * np.sqrt(np.pi) / L) * \\\n                       np.exp(-K_matrix**2 * sigma**2 / 4.0)\n        \n        H += V_imp_matrix\n\n    # 3. Diagonalize the Hamiltonian\n    # Since H is a real symmetric matrix, np.linalg.eigh is efficient\n    # and returns sorted eigenvalues.\n    eigenvalues = np.linalg.eigh(H)[0]\n    \n    # The lowest eigenvalue is the first element.\n    return eigenvalues[0]\n\nsolve()\n```", "id": "2460291"}, {"introduction": "This final exercise provides a tangible and intuitive meaning for the energy cutoff, framing it as the resolving power of your computational microscope. The kinetic energy cutoff determines the shortest-wavelength variations the basis set can represent, which is crucial for describing sharp features in the electron density that distinguish chemical structures. By determining the minimum $E_{\\text{cut}}$ required to tell two chemical isomers apart based on their density difference, you will develop a powerful conceptual link between this abstract parameter and its concrete impact on describing chemically significant details. [@problem_id:2460258]", "problem": "You are asked to write a complete and runnable program that determines the minimum plane-wave kinetic energy cutoff required to distinguish between the cis and trans isomers of $1,2$-dichloroethene in a periodic supercell, using a first-principles, Fourier-space criterion and a mathematically well-defined surrogate for the electronic density difference. The system is modeled as follows.\n\nConsider a cubic supercell of edge length $L$ (in $\\text{\\AA}$) with periodic boundary conditions. Let the positions of the two chlorine atoms be the only contributors to the isomer-dependent component of the smooth pseudo-electron density, while the carbon and hydrogen contributions are assumed identical for the two isomers and thus cancel in the density difference. The carbon-carbon double bond lies on the $x$-axis with carbon atoms at positions $(-a/2,0,0)$ and $(+a/2,0,0)$, where $a$ is the carbon-carbon bond length (in $\\text{\\AA}$). The left chlorine atom is at $(-a/2, +b, 0)$ for both isomers. The right chlorine atom is at $(+a/2, +b, 0)$ for the cis isomer and at $(+a/2, -b, 0)$ for the trans isomer, where $b$ is the carbon-chlorine bond offset along the $y$ direction (in $\\text{\\AA}$). The contribution of each chlorine atom to the smooth pseudo-density is modeled by an identical normalized three-dimensional Gaussian\n$$\n\\phi(\\mathbf{r}) = \\frac{1}{\\pi^{3/2}\\sigma^3}\\exp\\!\\left(-\\frac{|\\mathbf{r}|^2}{\\sigma^2}\\right),\n$$\nwhere $\\sigma$ (in $\\text{\\AA}$) controls the spatial smoothness.\n\nLet $\\rho_{\\text{cis}}(\\mathbf{r})$ and $\\rho_{\\text{trans}}(\\mathbf{r})$ be the pseudo-densities for the cis and trans isomers, each the sum of two such Gaussians centered at the corresponding chlorine positions. Define the difference $\\Delta \\rho(\\mathbf{r}) = \\rho_{\\text{cis}}(\\mathbf{r}) - \\rho_{\\text{trans}}(\\mathbf{r})$. In a plane-wave basis for the periodic supercell, use orthonormal basis functions $\\exp(i\\mathbf{G}\\cdot \\mathbf{r})/\\sqrt{V}$, where $\\mathbf{G} = \\frac{2\\pi}{L}(n_x,n_y,n_z)$ with $n_x,n_y,n_z \\in \\mathbb{Z}$, and $V=L^3$. The plane-wave coefficients of the density difference are\n$$\n\\Delta \\rho_{\\mathbf{G}} = \\frac{1}{\\sqrt{V}}\\int_V \\Delta \\rho(\\mathbf{r})\\, e^{-i\\mathbf{G}\\cdot \\mathbf{r}}\\, d^3\\mathbf{r}.\n$$\nFor the Gaussian $\\phi(\\mathbf{r})$ given above, the Fourier transform factor is $\\exp(-\\sigma^2 |\\mathbf{G}|^2/4)$. With the described geometry, and using the fact that the left chlorine position is the same in both isomers, one finds that only the right chlorine contributes to the difference, so that for each $\\mathbf{G}\\neq \\mathbf{0}$,\n$$\n|\\Delta \\rho_{\\mathbf{G}}|^2 \\propto e^{-\\sigma^2|\\mathbf{G}|^2/2}\\,\\left[\\,2 - 2\\cos\\!\\left(\\mathbf{G}\\cdot \\Delta \\mathbf{R}\\right)\\right],\n$$\nwhere $\\Delta \\mathbf{R} = (0,2b,0)$ is the displacement of the right chlorine between cis and trans. The proportionality constant and the volume factor cancel in the ratio defined below.\n\nDefine the truncated distinguishability fraction at a kinetic energy cutoff by\n$$\nF(G_{\\max}) = \\frac{\\sum_{\\mathbf{G}\\ne \\mathbf{0},\\,|\\mathbf{G}|\\le G_{\\max}} |\\Delta \\rho_{\\mathbf{G}}|^2}{\\sum_{\\mathbf{G}\\ne \\mathbf{0}} |\\Delta \\rho_{\\mathbf{G}}|^2},\n$$\nwhere the sums are over the discrete reciprocal lattice vectors of the supercell. The kinetic energy cutoff $E_{\\text{cut}}$ (in electronvolts) is related to $G_{\\max}$ (in $\\text{\\AA}^{-1}$) by\n$$\nE_{\\text{cut}} = \\frac{\\hbar^2}{2 m_e}\\, |\\mathbf{G}_{\\max}|^2,\n$$\nwhere $\\hbar$ is the reduced Planck constant and $m_e$ is the electron mass; ensure that units are consistent by converting $|\\mathbf{G}_{\\max}|$ from $\\text{\\AA}^{-1}$ to $\\text{m}^{-1}$ in this relation and express $E_{\\text{cut}}$ in electronvolts. All trigonometric function arguments must be treated in radians, and all lengths are in $\\text{\\AA}$.\n\nFor each test case below, let $r$ be a specified real number with $0 \\le r < 1$. Your task is to compute the minimum $E_{\\text{cut}}$ (in electronvolts) such that $F(G_{\\max}) \\ge r$. If $r=0$, the minimum $E_{\\text{cut}}$ is defined to be $0$.\n\nTest suite parameter sets are specified as tuples $(L, a, b, \\sigma, r)$ with all lengths in $\\text{\\AA}$ and $r$ dimensionless:\n- Test 1: $(L,a,b,\\sigma,r) = (20.0, 1.34, 1.73, 0.50, 0.90)$\n- Test 2: $(L,a,b,\\sigma,r) = (20.0, 1.34, 1.73, 1.00, 0.90)$\n- Test 3: $(L,a,b,\\sigma,r) = (20.0, 1.34, 1.73, 0.50, 0.99)$\n- Test 4: $(L,a,b,\\sigma,r) = (10.0, 1.34, 1.73, 0.50, 0.90)$\n- Test 5: $(L,a,b,\\sigma,r) = (20.0, 1.34, 1.73, 0.50, 0.00)$\n\nYour program must compute, for each test case, the minimum kinetic energy cutoff $E_{\\text{cut}}$ in electronvolts that satisfies the inequality $F(G_{\\max}) \\ge r$, using the discrete reciprocal lattice vectors of the specified supercell. Round each resulting $E_{\\text{cut}}$ to three decimal places.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the same order as the test suite, for example, $[\\text{result}_1,\\text{result}_2,\\dots]$, with each value rounded to three decimal places and expressed in electronvolts.", "solution": "The problem statement has been validated and is deemed scientifically sound, well-posed, and computationally tractable. The problem asks for the minimum kinetic energy cutoff, $E_{\\text{cut}}$, required to distinguish between cis and trans isomers of $1,2$-dichloroethene using a specific mathematical criterion. The criterion is based on a simplified model of the electron density difference, $\\Delta\\rho(\\mathbf{r})$, within a periodic supercell.\n\nThe core of the problem lies in the analysis of the Fourier series expansion of the density difference in a plane-wave basis. The problem defines a distinguishability fraction, $F(G_{\\max})$, as the ratio of the power in the Fourier components up to a wavevector magnitude $G_{\\max}$ to the total power over all components. We are tasked with finding the minimum $E_{\\text{cut}}$, which is directly related to $G_{\\max}$, such that this fraction reaches a given threshold $r$.\n\nThe solution proceeds as follows:\n\nFirst, we formalize the mathematical quantities involved. The system is in a cubic supercell of side length $L$. The reciprocal lattice vectors are given by $\\mathbf{G} = \\frac{2\\pi}{L}(n_x, n_y, n_z)$, where $n_x, n_y, n_z$ are integers. The squared magnitude of a reciprocal lattice vector is thus $|\\mathbf{G}|^2 = (\\frac{2\\pi}{L})^2 (n_x^2 + n_y^2 + n_z^2)$.\n\nThe problem provides the squared magnitude of the Fourier coefficients of the density difference, $|\\Delta \\rho_{\\mathbf{G}}|^2$, as being proportional to a term we shall call $S_{\\mathbf{G}}$:\n$$\n|\\Delta \\rho_{\\mathbf{G}}|^2 \\propto S_{\\mathbf{G}} = \\exp\\left(-\\frac{\\sigma^2 |\\mathbf{G}|^2}{2}\\right) \\left[ 2 - 2\\cos(\\mathbf{G} \\cdot \\Delta \\mathbf{R}) \\right]\n$$\nwhere $\\mathbf{G} \\neq \\mathbf{0}$. The displacement vector between the distinguishing chlorine atoms is $\\Delta \\mathbf{R} = (0, 2b, 0)$. The dot product in the cosine term is therefore:\n$$\n\\mathbf{G} \\cdot \\Delta \\mathbf{R} = \\frac{2\\pi}{L}(n_x, n_y, n_z) \\cdot (0, 2b, 0) = \\frac{4\\pi b}{L} n_y\n$$\nNote that the term $S_{\\mathbf{G}}$ is zero if $n_y=0$, as $\\cos(0)=1$. This is physically correct: plane waves with no spatial variation along the $y$-axis cannot capture a structural difference that occurs purely in the $y$-direction. The parameter $a$, the carbon-carbon bond length, does not appear in the final expression, as it is part of the common geometry that cancels out in the density difference.\n\nThe distinguishability fraction, $F(G_{\\max})$, can be written using $S_{\\mathbf{G}}$ since the unknown proportionality constant cancels:\n$$\nF(G_{\\max}) = \\frac{\\sum_{\\mathbf{G}\\ne \\mathbf{0},\\,|\\mathbf{G}|\\le G_{\\max}} S_{\\mathbf{G}}}{\\sum_{\\mathbf{G}\\ne \\mathbf{0}} S_{\\mathbf{G}}}\n$$\nThe computational strategy is to find the minimum $G_{\\max}$ satisfying $F(G_{\\max}) \\ge r$.\n\n1.  **Total Summation**: The denominator, $S_{\\text{total}} = \\sum_{\\mathbf{G}\\ne \\mathbf{0}} S_{\\mathbf{G}}$, is an infinite sum. However, the exponential factor $\\exp(-\\frac{\\sigma^2 |\\mathbf{G}|^2}{2})$ ensures rapid convergence. We can approximate this sum with high accuracy by truncating it, i.e., by summing over a sufficiently large finite box of integer indices $(n_x, n_y, n_z)$. A range for each index, for instance from $-40$ to $40$, is more than adequate for the given parameters.\n\n2.  **Shell-based Accumulation**: The values of $|\\mathbf{G}|^2$ are discrete, and multiple distinct $\\mathbf{G}$ vectors can have the same magnitude (degeneracy). It is efficient to group the contributions, $S_{\\mathbf{G}}$, based on their common value of $|\\mathbf{G}|^2$. This is equivalent to grouping by the integer sum of squares $n_{sq} = n_x^2 + n_y^2 + n_z^2$. We create a data structure, such as a dictionary, that maps each unique value of $n_{sq}$ to the sum of $S_{\\mathbf{G}}$ for all triplets $(n_x, n_y, n_z)$ that produce that $n_{sq}$.\n\n3.  **Finding the Threshold**: We first compute $S_{\\text{total}}$ and the required cumulative sum, $S_{\\text{target}} = r \\cdot S_{\\text{total}}$. Then, we take the generated shells of contributions, sort them in ascending order of $n_{sq}$ (and thus of $|\\mathbf{G}|^2$), and iterate through them, accumulating the sum. The first shell for which the cumulative sum meets or exceeds $S_{\\text{target}}$ determines the required $(n_{sq})_{\\max}$. The corresponding wavevector magnitude is $|\\mathbf{G}_{\\max}|^2 = (\\frac{2\\pi}{L})^2 (n_{sq})_{\\max}$. For the special case where $r=0$, the problem defines $E_{\\text{cut}}=0$, corresponding to $G_{\\max}=0$.\n\n4.  **Energy Calculation**: The kinetic energy cutoff $E_{\\text{cut}}$ is related to $G_{\\max}$ by the fundamental formula from solid-state physics:\n$$\nE_{\\text{cut}} = \\frac{\\hbar^2}{2 m_e} |\\mathbf{G}_{\\max}|^2\n$$\nTo ensure correct units, $|\\mathbf{G}_{\\max}|^2$ must be in $\\text{m}^{-2}$ if using SI units for the reduced Planck constant $\\hbar$ and electron mass $m_e$. The result in Joules is then converted to electronvolts (eV). A pre-calculated conversion factor is useful:\n$$\nC = \\frac{\\hbar^2}{2 m_e} \\frac{(10^{10} \\text{ m}/\\text{\\AA})^2}{1.602176634 \\times 10^{-19} \\text{ J/eV}} \\approx 3.80998 \\text{ eV}\\cdot\\text{\\AA}^2\n$$\nThe final energy is $E_{\\text{cut}} [\\text{eV}] = C \\cdot |\\mathbf{G}_{\\max}|^2 [\\text{\\AA}^{-2}]$.\n\nThis algorithm systematically constructs the sum, identifies the minimum set of basis functions required to meet the distinguishability criterion, and calculates the corresponding energy cutoff, providing a complete solution to the problem.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases.\n    \"\"\"\n    \n    # Fundamental constants\n    HBAR = 1.054571817e-34  # J.s\n    M_E = 9.1093837015e-31   # kg\n    E_CHARGE = 1.602176634e-19 # C (J/eV)\n\n    # Conversion factor from G^2 (in Angstrom^-2) to E_cut (in eV)\n    # E_cut[eV] = (hbar^2 * (1e10)^2 / (2 * m_e * e)) * G_max^2[A^-2]\n    EV_A2_FACTOR = HBAR**2 * 1e20 / (2 * M_E * E_CHARGE)\n\n    test_cases = [\n        # (L, a, b, sigma, r)\n        (20.0, 1.34, 1.73, 0.50, 0.90),\n        (20.0, 1.34, 1.73, 1.00, 0.90),\n        (20.0, 1.34, 1.73, 0.50, 0.99),\n        (10.0, 1.34, 1.73, 0.50, 0.90),\n        (20.0, 1.34, 1.73, 0.50, 0.00),\n    ]\n\n    results = []\n    for case in test_cases:\n        L, a, b, sigma, r = case\n        \n        # Per problem statement, if r=0, the minimum E_cut is 0.\n        if r == 0.0:\n            results.append(0.0)\n            continue\n\n        # Set a sufficiently large summation limit for the integer indices (n_x, n_y, n_z)\n        # to ensure convergence of the total sum.\n        n_max_summation = 40\n\n        # Pre-calculate constants for the loop\n        k_G_sq_factor = (2 * np.pi / L)**2\n        k_b = 4 * np.pi * b / L\n        k_sigma_factor = sigma**2 / 2.0\n\n        g_shells = {}  # Dictionary to store sum of contributions for each n_sq shell\n        total_sum = 0.0\n\n        # Sum over a cubic grid of integer indices (n_x, n_y, n_z)\n        for nx in range(-n_max_summation, n_max_summation + 1):\n            for ny in range(-n_max_summation, n_max_summation + 1):\n                for nz in range(-n_max_summation, n_max_summation + 1):\n                    # Skip the G=0 term\n                    if nx == 0 and ny == 0 and nz == 0:\n                        continue\n\n                    # The integer sum of squares determining the G-vector magnitude\n                    n_sq = nx**2 + ny**2 + nz**2\n                    \n                    # Squared magnitude of the G-vector\n                    g_sq = k_G_sq_factor * n_sq\n\n                    # The term proportional to |delta_rho_G|^2\n                    # The cos term depends only on n_y\n                    cos_val = np.cos(k_b * ny)\n                    term = np.exp(-k_sigma_factor * g_sq) * (2.0 - 2.0 * cos_val)\n                    \n                    if term > 0:\n                        total_sum += term\n                        g_shells[n_sq] = g_shells.get(n_sq, 0.0) + term\n\n        # Sort the shells by n_sq (which is proportional to |G|^2)\n        sorted_shells = sorted(g_shells.items())\n\n        # Determine the target sum based on the fraction r\n        target_sum = r * total_sum\n        \n        cumulative_sum = 0.0\n        n_sq_max = 0\n        \n        # Find the smallest G_max that satisfies the condition\n        for n_sq, shell_sum in sorted_shells:\n            cumulative_sum += shell_sum\n            if cumulative_sum >= target_sum:\n                n_sq_max = n_sq\n                break\n        \n        # Calculate the final energy cutoff\n        g_max_sq = k_G_sq_factor * n_sq_max\n        e_cut = EV_A2_FACTOR * g_max_sq\n        results.append(e_cut)\n\n    # Format the final output string as specified\n    formatted_results = [f\"{res:.3f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2460258"}]}