{"hands_on_practices": [{"introduction": "This first practice serves as a fundamental entry point into computational solid-state physics. You will implement a tight-binding model from first principles to compute the band structure and density of states for simple one-dimensional crystals [@problem_id:2454017]. By contrasting a uniform atomic chain with an alternating one, you will gain hands-on experience with how the atomic makeup of a unit cell governs the emergence of a band gap, a cornerstone concept distinguishing metals from insulators.", "problem": "You are asked to implement a program that numerically predicts and compares the density of states (DOS) and band gaps for one-dimensional tight-binding models that represent a uniform atomic chain and an alternating two-atom chain. All results must be computed from first principles starting from the definitions below, without relying on any pre-derived expressions for band energies or the density of states. Energies must be expressed in electronvolts (eV), wave vectors in reciprocal length, and the density of states in states per electronvolt per unit cell. Round all requested floating-point outputs to $6$ decimal places.\n\nUse the following foundational base:\n- The tight-binding (TB) Hamiltonian in real space for a one-dimensional chain with nearest-neighbor coupling and periodic boundary conditions is defined by an on-site term and a hopping term between nearest neighbors. For a single-atom unit cell (uniform chain), there is one atomic orbital per cell with on-site energy $\\varepsilon$ and hopping integral $t$ between neighboring cells separated by lattice constant $a$. For a two-atom unit cell (alternating chain), there are two orbitals per cell, A and B, with on-site energies $\\varepsilon_A$ and $\\varepsilon_B$, respectively, and nearest-neighbor hopping $t$ between A and B orbitals in adjacent and the same unit cell.\n- By Bloch's theorem, eigenstates can be labeled by a wave vector $k$ in the first Brillouin zone (BZ), and the tight-binding Hamiltonian becomes a finite-dimensional Bloch Hamiltonian $H(k)$ for each $k$ that can be diagonalized to obtain band energies $E_n(k)$.\n- The density of states (DOS) per unit cell is given by $g(E) = \\frac{1}{N_k} \\sum_{k \\in \\mathrm{BZ}} \\sum_{n} \\delta\\!\\left(E - E_n(k)\\right)$ in the discrete sampling limit, where $N_k$ is the number of $k$-points used to approximate the Brillouin zone integral. To obtain a numerically stable estimate, replace the Dirac delta by a normalized Gaussian of width $\\sigma$: $\\delta(E) \\to \\frac{1}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{E^2}{2\\sigma^2}\\right)$.\n\nYour program must:\n- Construct the Bloch Hamiltonian $H(k)$ from the real-space tight-binding description for both the uniform one-atom chain and the alternating two-atom chain, for each $k$ in a uniform grid sampling of the first Brillouin zone $k \\in [-\\pi/a,\\pi/a]$ (inclusive).\n- Diagonalize $H(k)$ for each $k$ to obtain the set of band energies $\\{E_n(k)\\}$ for all bands $n$ and all $k$-points.\n- Compute the band gap at Fermi energy $E_F = 0$ eV as $\\Delta = E_{\\min}^{(+)} - E_{\\max}^{(-)}$, where $E_{\\min}^{(+)}$ is the smallest eigenvalue strictly greater than $E_F$ and $E_{\\max}^{(-)}$ is the largest eigenvalue strictly less than $E_F$. If either set is empty, or if $E_F$ lies at a band crossing or within a band such that the computed difference would be negative due to discretization, return $\\Delta = 0$ eV.\n- Compute the density of states at the Fermi energy $g(E_F)$ using the Gaussian-broadened definition with width $\\sigma$ and the $k$-point average. Report the DOS in states per electronvolt per unit cell.\n- Use a uniform $k$-point mesh of size $N_k$ over the first Brillouin zone, including both endpoints. Use the lattice constant $a$ to set the Brillouin zone limits.\n\nTest suite:\n- Use the following four parameter sets. Each test case specifies the model type, on-site energies, hopping, lattice constant, number of $k$-points, and Gaussian width. Energies are in electronvolts (eV), lattice constants in angstroms (Ã…), and $\\sigma$ in electronvolts (eV). The Fermi energy is fixed at $E_F = 0$ eV for all cases.\n    1. Uniform chain (single-atom unit cell): $(\\text{model}=\\text{mono},\\, \\varepsilon = 0.0\\,\\text{eV},\\, t = 1.0\\,\\text{eV},\\, a = 1.0\\,\\text{\\AA},\\, N_k = 4001,\\, \\sigma = 0.05\\,\\text{eV})$.\n    2. Alternating chain (two-atom unit cell): $(\\text{model}=\\text{diatomic},\\, \\varepsilon_A = 1.0\\,\\text{eV},\\, \\varepsilon_B = -1.0\\,\\text{eV},\\, t = 1.0\\,\\text{eV},\\, a = 1.0\\,\\text{\\AA},\\, N_k = 4001,\\, \\sigma = 0.05\\,\\text{eV})$.\n    3. Alternating chain (small contrast): $(\\text{model}=\\text{diatomic},\\, \\varepsilon_A = 0.1\\,\\text{eV},\\, \\varepsilon_B = -0.1\\,\\text{eV},\\, t = 1.0\\,\\text{eV},\\, a = 1.0\\,\\text{\\AA},\\, N_k = 4001,\\, \\sigma = 0.02\\,\\text{eV})$.\n    4. Uniform chain (wider band): $(\\text{model}=\\text{mono},\\, \\varepsilon = 0.0\\,\\text{eV},\\, t = 2.0\\,\\text{eV},\\, a = 1.0\\,\\text{\\AA},\\, N_k = 4001,\\, \\sigma = 0.05\\,\\text{eV})$.\n\nFinal outputs:\n- For each test case, compute two quantities: the band gap $\\Delta$ in eV, and the density of states at the Fermi energy $g(E_F)$ in states per eV per unit cell, both rounded to $6$ decimal places.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order $[\\Delta_1, g_1, \\Delta_2, g_2, \\Delta_3, g_3, \\Delta_4, g_4]$.\n- The program must be entirely self-contained and must not read any input. It must embed and execute the specified test suite.", "solution": "The problem statement presented is valid. It is scientifically grounded in the principles of solid-state physics, specifically the tight-binding approximation, and is mathematically well-posed. All required parameters, constants, and definitions are provided, forming a self-contained and unambiguous problem. The task is to numerically compute band gaps and the density of states for two variants of a one-dimensional crystal. We will proceed by first deriving the necessary theoretical constructs and then outlining the computational algorithm.\n\nThe core of the problem is the construction of the Bloch Hamiltonian, $H(k)$, for each model. Its eigenvalues provide the electronic band structure $E_n(k)$.\n\n**1. Uniform (Monoatomic) Chain**\n\nThis model consists of a one-dimensional chain of identical atoms. The unit cell contains a single atom with one orbital, and its basis vector can be denoted as $|j\\rangle$ for the orbital in cell $j$. The lattice constant is $a$. The Hamiltonian includes on-site energy $\\varepsilon$ and nearest-neighbor hopping $t$. The matrix elements in the real-space atomic orbital basis are:\n$$\n\\langle j|H|m\\rangle = \\begin{cases} \\varepsilon & \\text{if } j = m \\\\ t & \\text{if } |j - m| = 1 \\\\ 0 & \\text{otherwise} \\end{cases}\n$$\nAccording to Bloch's theorem, the eigenstates of a periodic system can be written as Bloch waves, constructed from a basis of cell-periodic functions. For a single orbital per unit cell, the Bloch Hamiltonian $H(k)$ is a $1 \\times 1$ matrix (a scalar), whose element is given by the Fourier transform of the real-space Hamiltonian matrix elements:\n$$\nH(k) = \\sum_{m} e^{ik(m-j)a} \\langle j|H|m \\rangle\n$$\nSetting the reference cell $j=0$:\n$$\nH(k) = \\sum_{m} e^{ikma} \\langle 0|H|m \\rangle\n$$\nThe sum has three non-zero terms:\n- For $m=0$: $\\langle 0|H|0 \\rangle = \\varepsilon$. The term is $\\varepsilon e^{ik(0)a} = \\varepsilon$.\n- For $m=1$: $\\langle 0|H|1 \\rangle = t$. The term is $t e^{ika}$.\n- For $m=-1$: $\\langle 0|H|-1 \\rangle = t$. The term is $t e^{-ika}$.\n\nSumming these terms gives the Bloch Hamiltonian:\n$$\nH(k) = \\varepsilon + t(e^{ika} + e^{-ika}) = \\varepsilon + 2t\\cos(ka)\n$$\nAs this is a scalar, the single energy band is directly given by $E(k) = \\varepsilon + 2t\\cos(ka)$. However, to adhere to the problem's requirement of not using pre-derived expressions for energy, we will construct this $1 \\times 1$ matrix and numerically find its eigenvalue for each $k$.\n\n**2. Alternating (Diatomic) Chain**\n\nThis model describes a chain with a two-atom basis, atoms A and B, in each unit cell. The on-site energies are $\\varepsilon_A$ and $\\varepsilon_B$. The hopping parameter $t$ connects nearest-neighbor A and B atoms. The unit cell can be visualized as ...-[A-B]-[A-B]-..., where the lattice constant $a$ is the distance between consecutive A atoms. Within a unit cell $j$, there are two basis orbitals, $|A_j\\rangle$ and $|B_j\\rangle$. The Hamiltonian matrix elements in this real-space basis are:\n- On-site: $\\langle A_j|H|A_j\\rangle = \\varepsilon_A$, $\\langle B_j|H|B_j\\rangle = \\varepsilon_B$.\n- Intra-cell hopping: $\\langle A_j|H|B_j\\rangle = t$.\n- Inter-cell hopping: $\\langle A_j|H|B_{j-1}\\rangle = t$.\n\nThe Bloch Hamiltonian $H(k)$ is a $2 \\times 2$ matrix in the basis of Bloch sums $|\\phi_{A,k}\\rangle, |\\phi_{B,k}\\rangle$. The matrix elements are $H_{\\mu\\nu}(k) = \\sum_m e^{ikma} \\langle \\mu_0|H|\\nu_m\\rangle$ where $\\mu, \\nu \\in \\{A, B\\}$.\n\n- **Diagonal elements:**\n  - $H_{AA}(k) = \\langle A_0|H|A_0 \\rangle = \\varepsilon_A$.\n  - $H_{BB}(k) = \\langle B_0|H|B_0 \\rangle = \\varepsilon_B$.\n\n- **Off-diagonal elements:**\n  - $H_{AB}(k) = \\sum_m e^{ikma} \\langle A_0|H|B_m\\rangle$. The non-zero terms are for neighbors of $A_0$: atom $B_0$ (same cell, $m=0$) and atom $B_{-1}$ (previous cell, $m=-1$).\n  $$\n  H_{AB}(k) = e^{ik(0)a} \\langle A_0|H|B_0\\rangle + e^{ik(-1)a} \\langle A_0|H|B_{-1}\\rangle = t + te^{-ika} = t(1 + e^{-ika})\n  $$\n  - $H_{BA}(k)$ is the Hermitian conjugate of $H_{AB}(k)$. Assuming $t$ is real:\n  $$\n  H_{BA}(k) = (H_{AB}(k))^* = t(1 + e^{ika})\n  $$\n\nThe resulting $2 \\times 2$ Bloch Hamiltonian is:\n$$\nH(k) = \\begin{pmatrix} \\varepsilon_A & t(1 + e^{-ika}) \\\\ t(1 + e^{ika}) & \\varepsilon_B \\end{pmatrix}\n$$\nThe two energy bands, $E_n(k)$ for $n=1,2$, are the two eigenvalues of this matrix for each wave vector $k$.\n\n**3. Numerical Computation Algorithm**\n\nFor each specified test case, the following procedure is implemented:\n\n**a. Discretization of the Brillouin Zone:** The first Brillouin zone, $k \\in [-\\pi/a, \\pi/a]$, is sampled using a uniform grid of $N_k$ points, inclusive of the endpoints.\n\n**b. Band Structure Calculation:** A loop iterates through each $k$ value in the grid. In each iteration, the appropriate Bloch Hamiltonian matrix $H(k)$ ($1 \\times 1$ for uniform, $2 \\times 2$ for alternating) is constructed. The eigenvalues of this matrix are computed using a numerical eigensolver for Hermitian matrices. All computed eigenvalues $\\{E_n(k)\\}$ are collected into a single flat list.\n\n**c. Band Gap Calculation:** The band gap $\\Delta$ is calculated with respect to the Fermi energy $E_F = 0 \\, \\text{eV}$. The set of all computed eigenvalues is partitioned into two subsets: those strictly greater than $E_F$ and those strictly less than $E_F$. The minimum of the first set, $E_{\\min}^{(+)}$, and the maximum of the second set, $E_{\\max}^{(-)}$, are determined. The gap is $\\Delta = E_{\\min}^{(+)} - E_{\\max}^{(-)}$. If either subset is empty, or if the calculated difference is negative due to discretization effects, the gap is set to $\\Delta = 0$.\n\n**d. Density of States Calculation:** The density of states per unit cell at the Fermi level, $g(E_F)$, is computed by approximating the Dirac delta function with a normalized Gaussian function of standard deviation $\\sigma$. The formula given is implemented directly:\n$$\ng(E_F) = \\frac{1}{N_k} \\sum_{k,n} \\frac{1}{\\sqrt{2\\pi}\\sigma} \\exp \\left( -\\frac{(E_F - E_n(k))^2}{2\\sigma^2} \\right)\n$$\nThe sum is taken over all computed eigenvalues $\\{E_n(k)\\}$, and the result is normalized by the number of $k$-points, $N_k$.\n\nThis rigorous, step-by-step procedure starting from the fundamental tight-binding Hamiltonian definition ensures that the solutions are derived from first principles as required. The final program implements this logic to process the test suite and produce the required outputs.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport scipy  # Imported to adhere to problem spec, but not explicitly used.\n\ndef solve():\n    \"\"\"\n    Solves the tight-binding problem for the given test cases.\n    \"\"\"\n    \n    # Test suite as defined in the problem statement.\n    test_cases = [\n        {\"model\": \"mono\", \"params\": {\"eps\": 0.0, \"t\": 1.0, \"a\": 1.0, \"Nk\": 4001, \"sigma\": 0.05}},\n        {\"model\": \"diatomic\", \"params\": {\"epsA\": 1.0, \"epsB\": -1.0, \"t\": 1.0, \"a\": 1.0, \"Nk\": 4001, \"sigma\": 0.05}},\n        {\"model\": \"diatomic\", \"params\": {\"epsA\": 0.1, \"epsB\": -0.1, \"t\": 1.0, \"a\": 1.0, \"Nk\": 4001, \"sigma\": 0.02}},\n        {\"model\": \"mono\", \"params\": {\"eps\": 0.0, \"t\": 2.0, \"a\": 1.0, \"Nk\": 4001, \"sigma\": 0.05}},\n    ]\n    \n    E_F = 0.0  # Fermi energy in eV is fixed at 0.\n    all_results = []\n\n    for case in test_cases:\n        model = case[\"model\"]\n        params = case[\"params\"]\n        \n        a = params[\"a\"]\n        Nk = params[\"Nk\"]\n        sigma = params[\"sigma\"]\n        t = params.get(\"t\")\n\n        k_grid = np.linspace(-np.pi / a, np.pi / a, Nk)\n        all_energies = []\n\n        if model == \"mono\":\n            eps = params[\"eps\"]\n            for k in k_grid:\n                # Construct 1x1 Bloch Hamiltonian\n                # H(k) = eps + 2*t*cos(k*a)\n                # Using complex numbers for consistency, though it's real\n                H_k = np.array([[(eps + 2 * t * np.cos(k * a))]], dtype=np.complex128)\n                # Diagonalize to get eigenvalues\n                eigenvalues = np.linalg.eigh(H_k)[0]\n                all_energies.extend(eigenvalues)\n\n        elif model == \"diatomic\":\n            epsA = params[\"epsA\"]\n            epsB = params[\"epsB\"]\n            for k in k_grid:\n                # Construct 2x2 Bloch Hamiltonian\n                # H(k) = [[epsA, t*(1+exp(-i*k*a))], [t*(1+exp(i*k*a)), epsB]]\n                off_diagonal = t * (1 + np.exp(-1j * k * a))\n                H_k = np.array([\n                    [epsA, off_diagonal],\n                    [np.conj(off_diagonal), epsB]\n                ], dtype=np.complex128)\n                # Diagonalize to get eigenvalues\n                eigenvalues = np.linalg.eigh(H_k)[0]\n                all_energies.extend(eigenvalues)\n\n        energies = np.array(all_energies)\n\n        # Calculate band gap\n        energies_gt_ef = energies[energies > E_F]\n        energies_lt_ef = energies[energies  E_F]\n\n        if energies_gt_ef.size == 0 or energies_lt_ef.size == 0:\n            band_gap = 0.0\n        else:\n            E_min_plus = np.min(energies_gt_ef)\n            E_max_minus = np.max(energies_lt_ef)\n            band_gap = E_min_plus - E_max_minus\n            if band_gap  0:\n                band_gap = 0.0\n        \n        # Calculate Density of States at Fermi energy\n        # g(E) = (1/Nk) * sum_{k,n} (1/sqrt(2*pi*sigma^2)) * exp(-(E-E_n(k))^2 / (2*sigma^2))\n        gaussian_term = (1 / (np.sqrt(2 * np.pi) * sigma)) * np.exp(-((E_F - energies)**2) / (2 * sigma**2))\n        dos_at_ef = np.sum(gaussian_term) / Nk\n        \n        # Append formatted results\n        all_results.append(f\"{band_gap:.6f}\")\n        all_results.append(f\"{dos_at_ef:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n\n```", "id": "2454017"}, {"introduction": "Building upon the 1D chain model, this exercise explores the Peierls distortion, a famous mechanism where a one-dimensional metal can spontaneously lower its energy by undergoing a structural change that opens a band gap [@problem_id:2454038]. You will simulate the Su-Schrieffer-Heeger (SSH) model by introducing a bond-alternation parameter, $\\eta$, directly observing how this geometric distortion creates and controls the size of the band gap at the Fermi level. This practice reveals the profound link between a material's atomic structure and its electronic properties.", "problem": "Consider a one-dimensional carbon chain with bond alternation (Peierls distortion) modeled by a nearest-neighbor tight-binding Hamiltonian with a two-atom basis per unit cell. Let the lattice constant be $a$ (in angstrom), and let the two alternating hopping amplitudes be $t_{1}$ and $t_{2}$ (in electronvolt). Define a baseline hopping magnitude $t$ (in electronvolt) and a dimensionless bond-alternation parameter $\\eta \\in [0,1]$ such that $t_{1} = t (1+\\eta)$ and $t_{2} = t (1-\\eta)$. Assume zero on-site energy on both sublattices and ignore spin. At half-filling, the Fermi level is $E_{F} = 0$ (in electronvolt). Under the Bornâ€“von KÃ¡rmÃ¡n periodic boundary condition, the Bloch wave vector $k$ spans the first Brillouin zone (BZ) $k \\in [-\\pi/a,\\pi/a)$.\n\nThe Bloch Hamiltonian in the sublattice basis is the $2 \\times 2$ Hermitian matrix\n$$\nH(k) =\n\\begin{pmatrix}\n0  -\\big(t_{1} + t_{2} e^{-i k a}\\big) \\\\\n-\\big(t_{1} + t_{2} e^{i k a}\\big)  0\n\\end{pmatrix}.\n$$\nThe band energies at a given $k$ are the eigenvalues of $H(k)$. The band gap at the Fermi level, $E_{\\mathrm{gap}}$ (in electronvolt), is the minimal direct gap between the conduction and valence bands over the Brillouin zone:\n$$\nE_{\\mathrm{gap}} = \\min_{k \\in [-\\pi/a,\\pi/a)} \\Big(E_{\\text{conduction}}(k) - E_{\\text{valence}}(k)\\Big).\n$$\n\nDefine the density of states (DOS) as follows. The density of states (DOS) per unit cell, $D(E)$ (in electronvolt$^{-1}$), is given in the continuum by\n$$\nD(E) = \\frac{a}{2\\pi} \\sum_{n} \\int_{-\\pi/a}^{\\pi/a} \\delta\\!\\big(E - E_{n}(k)\\big)\\, \\mathrm{d}k,\n$$\nwhere $E_{n}(k)$ are the band energies. For numerical evaluation with a uniform mesh of $N_{k}$ $k$-points sampling the Brillouin zone, approximate the Dirac delta by a normalized Gaussian of standard deviation $\\sigma$ (in electronvolt),\n$$\n\\delta(E - \\varepsilon) \\approx \\frac{1}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{(E-\\varepsilon)^{2}}{2\\sigma^{2}}\\right),\n$$\nand approximate the integral by a Riemann sum. With this, the discretized DOS per unit cell at energy $E$ is\n$$\nD(E) \\approx \\frac{1}{N_{k}} \\sum_{k}\\sum_{n} \\frac{1}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{(E-E_{n}(k))^{2}}{2\\sigma^{2}}\\right).\n$$\n\nTask: For each parameter set in the test suite below, compute two quantities:\n- The band gap at the Fermi level, $E_{\\mathrm{gap}}$ (in electronvolt), defined above.\n- The density of states at the Fermi level, $D(E_{F})$ (in electronvolt$^{-1}$), using the Gaussian-broadened discretized definition above with the given $\\sigma$ and $N_{k}$.\n\nExpress $E_{\\mathrm{gap}}$ in electronvolt and $D(E_{F})$ in electronvolt$^{-1}$ per unit cell. Round both quantities to exactly $6$ decimal places.\n\nTest suite (each tuple lists $(t,\\eta,a,N_{k},\\sigma)$):\n- Case $1$: $(2.50,\\,0.00,\\,1.40,\\,4001,\\,0.02)$\n- Case $2$: $(2.50,\\,0.10,\\,1.40,\\,1001,\\,0.02)$\n- Case $3$: $(2.50,\\,0.30,\\,1.40,\\,1001,\\,0.02)$\n- Case $4$: $(2.50,\\,1.00,\\,1.40,\\,1001,\\,0.02)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each case is reported as a two-element list $[E_{\\mathrm{gap}}, D(E_{F})]$, in the same order as the test suite, with no spaces. For example, the output format must be\n$$\n\\big[ [E_{\\mathrm{gap}}^{(1)},D(E_{F})^{(1)}],[E_{\\mathrm{gap}}^{(2)},D(E_{F})^{(2)}],[E_{\\mathrm{gap}}^{(3)},D(E_{F})^{(3)}],[E_{\\mathrm{gap}}^{(4)},D(E_{F})^{(4)}] \\big],\n$$\nprinted as a single line with numeric values rounded to $6$ decimal places and no spaces.", "solution": "The user has provided a problem from computational solid-state physics, which must be validated before a solution is attempted.\n\n### Step 1: Extract Givens\n- **Model**: A one-dimensional carbon chain with bond alternation (Peierls distortion), modeled using a nearest-neighbor tight-binding Hamiltonian.\n- **Basis**: A two-atom basis per unit cell.\n- **Lattice Constant**: $a$.\n- **Hopping Amplitudes**: $t_{1} = t (1+\\eta)$ and $t_{2} = t (1-\\eta)$, where $t$ is a baseline hopping magnitude and $\\eta \\in [0,1]$ is a dimensionless bond-alternation parameter.\n- **On-site Energy**: Assumed to be zero on both sublattices.\n- **Fermi Level**: $E_{F} = 0$ eV, corresponding to half-filling.\n- **Brillouin Zone (BZ)**: The Bloch wave vector $k$ spans $[-\\pi/a, \\pi/a)$.\n- **Bloch Hamiltonian**: $H(k) = \\begin{pmatrix} 0  -\\big(t_{1} + t_{2} e^{-i k a}\\big) \\\\ -\\big(t_{1} + t_{2} e^{i k a}\\big)  0 \\end{pmatrix}$.\n- **Band Energies**: $E_{n}(k)$, the eigenvalues of $H(k)$.\n- **Band Gap**: $E_{\\mathrm{gap}} = \\min_{k \\in [-\\pi/a,\\pi/a)} \\Big(E_{\\text{conduction}}(k) - E_{\\text{valence}}(k)\\Big)$.\n- **Numerical Density of States (DOS)**: $D(E) \\approx \\frac{1}{N_{k}} \\sum_{k}\\sum_{n} \\frac{1}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{(E-E_{n}(k))^{2}}{2\\sigma^{2}}\\right)$, for a uniform mesh of $N_{k}$ k-points and Gaussian broadening $\\sigma$.\n- **Task**: Compute the band gap $E_{\\mathrm{gap}}$ and the density of states at the Fermi level $D(E_{F})$.\n- **Test Suite**:\n    - Case 1: $(t,\\eta,a,N_{k},\\sigma) = (2.50, 0.00, 1.40, 4001, 0.02)$\n    - Case 2: $(t,\\eta,a,N_{k},\\sigma) = (2.50, 0.10, 1.40, 1001, 0.02)$\n    - Case 3: $(t,\\eta,a,N_{k},\\sigma) = (2.50, 0.30, 1.40, 1001, 0.02)$\n    - Case 4: $(t,\\eta,a,N_{k},\\sigma) = (2.50, 1.00, 1.40, 1001, 0.02)$\n\n### Step 2: Validate Using Extracted Givens\nThe problem is subjected to rigorous validation.\n1.  **Scientific Grounding**: The problem describes the Su-Schrieffer-Heeger (SSH) model, a cornerstone of condensed matter physics for one-dimensional systems with topological properties. All conceptsâ€”the tight-binding Hamiltonian, Bloch's theorem, band structure, density of states, and Gaussian broadeningâ€”are standard and fundamentally sound. The provided Hamiltonian is correct for a two-site basis with alternating hopping. The parameters are physically realistic for carbon $\\pi$-conjugated systems. The problem is scientifically grounded.\n2.  **Well-Posedness**: The problem statement is complete, providing all necessary mathematical definitions and numerical parameters ($t, \\eta, a, N_{k}, \\sigma$) required for computation. The tasks are defined unambiguously, leading to a unique numerical solution for each case. The problem is well-posed.\n3.  **Objectivity**: The language is formal and mathematical, devoid of any subjectivity or ambiguity. The problem is objective.\n\n### Step 3: Verdict and Action\nThe problem is deemed **valid** as it is scientifically sound, well-posed, objective, and contains no discernible flaws. A solution will now be provided.\n\n### Principle-Based Solution\nThe solution is derived in two parts: calculation of a) the band gap $E_{\\mathrm{gap}}$ and b) the density of states at the Fermi level $D(E_{F}=0)$.\n\n**a) Band Gap Calculation**\nThe band energies $E(k)$ are the eigenvalues of the Hamiltonian $H(k)$. The characteristic equation is $\\det(H(k) - E I) = 0$.\n$$\n\\det \\begin{pmatrix} -E  -(t_{1} + t_{2} e^{-i k a}) \\\\ -(t_{1} + t_{2} e^{i k a})  -E \\end{pmatrix} = E^2 - |t_{1} + t_{2} e^{-i k a}|^2 = 0\n$$\nThe term $|t_{1} + t_{2} e^{-i k a}|^2$ is calculated as:\n$$\n|t_{1} + t_{2}(\\cos(ka) - i\\sin(ka))|^2 = (t_{1} + t_{2}\\cos(ka))^2 + (-t_{2}\\sin(ka))^2 = t_{1}^2 + t_2^2 + 2t_{1}t_{2}\\cos(ka)\n$$\nThe band energies are symmetric around $E=0$:\n$$\nE_{\\pm}(k) = \\pm \\sqrt{t_1^2 + t_2^2 + 2t_{1}t_{2}\\cos(ka)}\n$$\n$E_{+}(k)$ is the conduction band and $E_{-}(k)$ is the valence band. The direct energy gap at a given $k$ is $E_{+}(k) - E_{-}(k) = 2|E_{+}(k)|$. The overall band gap $E_{\\mathrm{gap}}$ is the minimum of this quantity over the Brillouin zone. The minimum occurs when the term under the square root is minimized. Since $t_{1} = t(1+\\eta) > 0$ and $t_{2} = t(1-\\eta) \\ge 0$, the minimum occurs when $\\cos(ka) = -1$, i.e., at the Brillouin zone edge $k = \\pm\\pi/a$.\n$$\nE_{\\mathrm{gap}} = 2 \\sqrt{t_1^2 + t_2^2 - 2t_{1}t_{2}} = 2 \\sqrt{(t_1 - t_2)^2} = 2|t_1 - t_2|\n$$\nSubstituting $t_{1} = t(1+\\eta)$ and $t_{2} = t(1-\\eta)$:\n$$\nt_1 - t_2 = t(1+\\eta) - t(1-\\eta) = 2t\\eta\n$$\nSince $t > 0$ and $\\eta \\ge 0$, the absolute value is redundant. The band gap is given by the simple analytical formula:\n$$\nE_{\\mathrm{gap}} = 4t\\eta\n$$\n\n**b) Density of States Calculation**\nThe density of states at the Fermi level, $E_{F}=0$, is to be computed using the provided numerical formula:\n$$\nD(E_F=0) \\approx \\frac{1}{N_{k}} \\sum_{k}\\sum_{n} \\frac{1}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{(0-E_{n}(k))^{2}}{2\\sigma^{2}}\\right)\n$$\nThe sum over bands $n$ includes the conduction ($n=+$) and valence ($n=-$) bands. Since $E_{-}(k) = -E_{+}(k)$, their squares are identical: $E_{-}^2(k) = E_{+}^2(k) = E(k)^2$, where $E(k)^2 = t_1^2 + t_2^2 + 2t_{1}t_{2}\\cos(ka)$. The sum over $n$ can be simplified:\n$$\n\\sum_{n=\\pm} \\exp\\!\\left(-\\frac{E_{n}(k)^{2}}{2\\sigma^{2}}\\right) = 2\\exp\\!\\left(-\\frac{E(k)^{2}}{2\\sigma^{2}}\\right)\n$$\nThis leads to the final expression for the numerical DOS at $E_F=0$:\n$$\nD(0) \\approx \\frac{1}{N_{k}} \\sum_{k} \\frac{2}{\\sqrt{2\\pi}\\,\\sigma}\\exp\\!\\left(-\\frac{t_1^2 + t_2^2 + 2t_{1}t_{2}\\cos(ka)}{2\\sigma^{2}}\\right)\n$$\nThe summation is performed over a uniform mesh of $N_{k}$ $k$-points in the first Brillouin zone, $k \\in [-\\pi/a, \\pi/a)$.\n\n### Algorithmic Implementation\nFor each given parameter set $(t,\\eta,a,N_{k},\\sigma)$:\n1.  Calculate $E_{\\mathrm{gap}} = 4t\\eta$.\n2.  Initialize the sum for the DOS calculation to zero.\n3.  Generate a uniform vector of $N_{k}$ $k$-points from $-\\pi/a$ to $\\pi/a$ (exclusive of the upper bound).\n4.  For this vector of $k$-points, compute the vector of corresponding $E(k)^2$ values using the derived expression.\n5.  Apply the Gaussian broadening function element-wise to the energy-squared vector, and sum the resulting terms.\n6.  Multiply the sum by the prefactors $\\frac{1}{N_k}$ and $\\frac{2}{\\sqrt{2\\pi}\\sigma}$ to obtain $D(0)$.\n7.  Round both $E_{\\mathrm{gap}}$ and $D(0)$ to $6$ decimal places and store them.\n8.  Format the final output as specified.\nThe calculations will be implemented using `numpy` for efficient vector operations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test suite, computing the band gap\n    and density of states at the Fermi level for a 1D tight-binding model.\n    \"\"\"\n    \n    # Test suite: each tuple contains (t, eta, a, Nk, sigma)\n    test_cases = [\n        (2.50, 0.00, 1.40, 4001, 0.02),\n        (2.50, 0.10, 1.40, 1001, 0.02),\n        (2.50, 0.30, 1.40, 1001, 0.02),\n        (2.50, 1.00, 1.40, 1001, 0.02),\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        t, eta, a, Nk, sigma = case\n        \n        # 1. Calculate the band gap (E_gap)\n        # The analytical formula for the band gap is E_gap = 4*t*eta.\n        E_gap = 4.0 * t * eta\n        \n        # 2. Calculate the Density of States (DOS) at the Fermi level (E_F = 0)\n        # Define hopping parameters t1 and t2\n        t1 = t * (1.0 + eta)\n        t2 = t * (1.0 - eta)\n        \n        # Create a uniform mesh of k-points in the first Brillouin Zone [-pi/a, pi/a)\n        # using Nk points.\n        k_vec = np.linspace(-np.pi / a, np.pi / a, Nk, endpoint=False)\n        \n        # Calculate cos(k*a) for all k-points\n        cos_ka = np.cos(k_vec * a)\n        \n        # Calculate the square of the energy eigenvalues, E(k)^2. This is identical\n        # for both the valence and conduction bands.\n        # E(k)^2 = t1^2 + t2^2 + 2*t1*t2*cos(k*a)\n        energy_sq_vec = t1**2 + t2**2 + 2.0 * t1 * t2 * cos_ka\n        \n        # The DOS formula involves a sum over bands and k-points.\n        # For E_F = 0, the contribution from the valence and conduction bands\n        # for each k-point is identical, hence the factor of 2.\n        # D(0) approx (1/Nk) * sum_k [ 2 * (1/sqrt(2pi)/sigma) * exp(-E(k)^2 / (2*sigma^2)) ]\n        \n        # Argument of the exponential function for all k-points\n        gauss_arg = -energy_sq_vec / (2.0 * sigma**2)\n        \n        # The sum of Gaussian terms over all k-points\n        sum_of_gaussians = np.sum(np.exp(gauss_arg))\n        \n        # Prefactor for the DOS calculation\n        prefactor = 2.0 / (np.sqrt(2.0 * np.pi) * sigma)\n        \n        # Final DOS at E_F = 0\n        dos_at_ef = (1.0 / Nk) * prefactor * sum_of_gaussians\n        \n        # Format the result pair as a string \"[E_gap, D0]\" with 6 decimal places\n        result_str = f\"[{E_gap:.6f},{dos_at_ef:.6f}]\"\n        all_results.append(result_str)\n\n    # Final print statement in the exact required format.\n    # e.g., [[val1,val2],[val3,val4]]\n    print(f\"[{','.join(all_results)}]\")\n\nsolve()\n```", "id": "2454038"}, {"introduction": "We now advance from one-dimensional chains to the fascinating world of 2D materials, focusing on graphene's unique electronic structure [@problem_id:2454056]. Instead of building a full tight-binding model, you will work with the low-energy effective Dirac Hamiltonian, which describes the famous massless charge carriers near the Fermi level. This practice demonstrates how an external perturbation, such as a substrate that breaks sublattice symmetry, introduces a mass term $\\Delta$ that opens a crucial band gap in graphene's otherwise gapless spectrum.", "problem": "Consider a monolayer of graphene placed on a hexagonal boron nitride (h-BN) substrate that breaks inversion symmetry and opens a small gap at the Dirac point. Model the low-energy electronic structure near a single valley by the two-dimensional Dirac Hamiltonian with a sublattice-staggered mass term\n$$\nH = \\hbar v_F \\left( \\sigma_x k_x + \\sigma_y k_y \\right) + \\Delta \\, \\sigma_z,\n$$\nwhere $\\hbar$ is the reduced Planck constant, $v_F$ is the Fermi velocity, $\\boldsymbol{\\sigma}$ are the Pauli matrices, $(k_x,k_y)$ are the components of the crystal momentum $\\mathbf{k}$ measured from the valley center, and $\\Delta  0$ is one-half of the spectral gap (so the full gap is $2\\Delta$). Assume spin degeneracy and two valleys remain effectively degenerate so that the total degeneracy factor is $g_{\\mathrm{deg}}=4$. Take $\\hbar$ in electronvolt-seconds (eVÂ·s), energies in electronvolts (eV), wavevectors in inverse meters (m$^{-1}$), and velocities in meters per second (m/s).\n\nYour task is to compute two physically measurable quantities from first principles implied by this model:\n1. The positive-branch conduction-band energy $E_+(\\mathbf{k})$ along the $k_x$ axis (i.e., $k_y=0$) at specified values of $k_x$.\n2. The single-particle electronic density of states (DOS) per unit area $D(E)$ at specified energies $E \\ge 0$, including the effects of the gap opening. The DOS must be expressed in units of $\\mathrm{(eV \\cdot m^2)^{-1}}$ and must incorporate the degeneracy factor $g_{\\mathrm{deg}}$.\n\nUse the following constants and conventions across all test cases:\n- Reduced Planck constant: $\\hbar = 6.582119569 \\times 10^{-16}$ eVÂ·s.\n- Fermi velocity: $v_F = 1.0 \\times 10^6$ m/s.\n- Degeneracy factor: $g_{\\mathrm{deg}} = 4$.\n- For the dispersion, set $k_y = 0$ and use $k \\equiv |k_x|$ as the scalar wavevector magnitude.\n- For the density of states $D(E)$, use the definition appropriate for a two-dimensional system with isotropic dispersion, expressed per unit area, and include the gap-opening effect induced by $\\Delta$. The DOS must be identically zero for energies strictly inside the gap.\n\nAngle units are not applicable. All requested energies must be reported in eV, wavevectors in m$^{-1}$, and DOS values in $\\mathrm{(eV \\cdot m^2)^{-1}}$. All numerical outputs must be produced in scientific notation with exactly six digits after the decimal point.\n\nTest suite. For each parameter set below, compute the requested quantity and return a single number:\n- Case 1 (DOS): $\\Delta = 0.000$ eV, $E = 0.000$ eV.\n- Case 2 (DOS): $\\Delta = 0.000$ eV, $E = 0.050$ eV.\n- Case 3 (DOS): $\\Delta = 0.025$ eV, $E = 0.020$ eV.\n- Case 4 (DOS): $\\Delta = 0.025$ eV, $E = 0.025$ eV.\n- Case 5 (DOS): $\\Delta = 0.025$ eV, $E = 0.100$ eV.\n- Case 6 (DOS): $\\Delta = 0.100$ eV, $E = 0.050$ eV.\n- Case 7 (Conduction-band energy $E_+(k)$ along $k_x$): $\\Delta = 0.025$ eV, $k = 0.0$ m$^{-1}$.\n- Case 8 (Conduction-band energy $E_+(k)$ along $k_x$): $\\Delta = 0.000$ eV, $k = 1.0 \\times 10^8$ m$^{-1}$.\n- Case 9 (Conduction-band energy $E_+(k)$ along $k_x$): $\\Delta = 0.050$ eV, $k = 1.0 \\times 10^8$ m$^{-1}$.\n\nFinal output format. Your program should produce a single line of output containing the results, in the same order as the cases above, as a comma-separated list enclosed in square brackets, with each number formatted in scientific notation with exactly six digits after the decimal point. For example, the output format must be\n\"[x1,x2,x3,x4,x5,x6,x7,x8,x9]\"\nwith each $x_i$ shown as, for instance, $1.234567\\mathrm{e}{-03}$.", "solution": "The problem statement has been evaluated and is determined to be valid. It is a well-posed, scientifically grounded problem from condensed matter physics that is free of contradictions or ambiguity. We shall proceed with the derivation and solution.\n\nThe task is to compute the conduction band energy $E_+(k)$ and the density of states $D(E)$ for a two-dimensional massive Dirac system described by the Hamiltonian:\n$$\nH = \\hbar v_F \\left( \\sigma_x k_x + \\sigma_y k_y \\right) + \\Delta \\, \\sigma_z\n$$\nHere, $\\boldsymbol{\\sigma} = (\\sigma_x, \\sigma_y, \\sigma_z)$ are the Pauli matrices. In the standard basis where $\\sigma_z$ is diagonal, the Hamiltonian is represented as a $2 \\times 2$ matrix:\n$$\n\\sigma_x = \\begin{pmatrix} 0  1 \\\\ 1  0 \\end{pmatrix}, \\quad \\sigma_y = \\begin{pmatrix} 0  -i \\\\ i  0 \\end{pmatrix}, \\quad \\sigma_z = \\begin{pmatrix} 1  0 \\\\ 0  -1 \\end{pmatrix}\n$$\nSubstituting these matrices into the expression for $H$ yields:\n$$\nH = \\hbar v_F \\begin{pmatrix} 0  k_x - i k_y \\\\ k_x + i k_y  0 \\end{pmatrix} + \\Delta \\begin{pmatrix} 1  0 \\\\ 0  -1 \\end{pmatrix} = \\begin{pmatrix} \\Delta  \\hbar v_F (k_x - i k_y) \\\\ \\hbar v_F (k_x + i k_y)  -\\Delta \\end{pmatrix}\n$$\nThe energy eigenvalues $E$ are the solutions to the secular equation $\\det(H - E I) = 0$, where $I$ is the $2 \\times 2$ identity matrix.\n$$\n\\det \\begin{pmatrix} \\Delta - E  \\hbar v_F (k_x - i k_y) \\\\ \\hbar v_F (k_x + i k_y)  -\\Delta - E \\end{pmatrix}} = 0\n$$\n$$\n(\\Delta - E)(-\\Delta - E) - \\left( \\hbar v_F \\right)^2 (k_x - i k_y)(k_x + i k_y) = 0\n$$\n$$\nE^2 - \\Delta^2 - \\left( \\hbar v_F \\right)^2 (k_x^2 + k_y^2) = 0\n$$\nLet $k = \\sqrt{k_x^2 + k_y^2}$ be the magnitude of the wavevector $\\mathbf{k}$. The dispersion relation becomes:\n$$\nE^2 = \\Delta^2 + (\\hbar v_F k)^2\n$$\nThis gives two energy bands, a conduction band ($+$) and a valence band ($-$):\n$$\nE_{\\pm}(k) = \\pm \\sqrt{\\Delta^2 + (\\hbar v_F k)^2}\n$$\nThe problem asks for the positive-branch conduction-band energy, $E_+(\\mathbf{k})$, along the $k_x$ axis, where $k_y=0$ and thus $k = |k_x|$. The formula is:\n$$\nE_+(k) = \\sqrt{\\Delta^2 + (\\hbar v_F k)^2}\n$$\nThis expression will be used to compute the results for cases $7$ through $9$.\n\nNext, we derive the single-particle electronic density of states (DOS) per unit area, $D(E)$. For a two-dimensional system with spin and valley degeneracy $g_{\\mathrm{deg}}$, the DOS is defined as:\n$$\nD(E) = g_{\\mathrm{deg}} \\int \\frac{d^2k}{(2\\pi)^2} \\delta(E - E_+(k))\n$$\nWe consider only the positive energy branch $E_+(k)$ for $E \\ge 0$. Since the dispersion $E_+(k)$ is isotropic, we can integrate over the angular component in k-space by transforming to polar coordinates ($d^2k = k \\, dk \\, d\\theta$). The integration over $\\theta$ from $0$ to $2\\pi$ yields a factor of $2\\pi$.\n$$\nD(E) = g_{\\mathrm{deg}} \\frac{2\\pi}{(2\\pi)^2} \\int_0^\\infty k \\, \\delta(E - \\sqrt{\\Delta^2 + (\\hbar v_F k)^2}) \\, dk\n$$\nTo evaluate the integral involving the Dirac delta function, we find the root $k_0$ of its argument, $E = \\sqrt{\\Delta^2 + (\\hbar v_F k_0)^2}$. This requires $E^2 = \\Delta^2 + (\\hbar v_F k_0)^2$, which is solvable for $k_0 \\ge 0$ only if $E \\ge \\Delta$. If $0 \\le E  \\Delta$, there are no states, and thus $D(E)=0$.\nFor $E \\ge \\Delta$, the root is $k_0 = \\frac{\\sqrt{E^2 - \\Delta^2}}{\\hbar v_F}$.\nUsing the identity $\\int f(x) \\delta(g(x)) dx = \\sum_i \\frac{f(x_i)}{|g'(x_i)|}$, where $x_i$ are the roots of $g(x)=0$, we have $f(k)=k$ and $g(k) = E - E_+(k)$. The derivative is:\n$$\n\\frac{dE_+(k)}{dk} = \\frac{d}{dk} \\sqrt{\\Delta^2 + (\\hbar v_F k)^2} = \\frac{(\\hbar v_F)^2 k}{\\sqrt{\\Delta^2 + (\\hbar v_F k)^2}} = \\frac{(\\hbar v_F)^2 k}{E_+(k)}\n$$\nAt the root $k_0$, the magnitude of the derivative of the argument of the delta function is $|- \\frac{dE_+}{dk}|_{k=k_0} = \\frac{(\\hbar v_F)^2 k_0}{E}$.\nSubstituting this into the DOS expression:\n$$\nD(E) = g_{\\mathrm{deg}} \\frac{1}{2\\pi} \\frac{k_0}{\\frac{(\\hbar v_F)^2 k_0}{E}} = g_{\\mathrm{deg}} \\frac{E}{2\\pi (\\hbar v_F)^2}\n$$\nGiven the degeneracy factor $g_{\\mathrm{deg}} = 4$, the final expression for the DOS is:\n$$\nD(E) = \\begin{cases} \\frac{2E}{\\pi(\\hbar v_F)^2}  \\text{if } E \\ge \\Delta \\\\ 0  \\text{if } 0 \\le E  \\Delta \\end{cases}\n$$\nNote that for the gapless case $\\Delta=0$, the expression simplifies to $D(E) = \\frac{2E}{\\pi(\\hbar v_F)^2}$ for all $E \\ge 0$, which is the correct linear DOS for pristine graphene. For $E=0$ and $\\Delta=0$, $D(0)=0$. These formulas will be used to compute the results for cases $1$ through $6$.\n\nThe calculations will be performed using the provided constants:\n- $\\hbar = 6.582119569 \\times 10^{-16}$ eVÂ·s\n- $v_F = 1.0 \\times 10^6$ m/s\n- $g_{\\mathrm{deg}} = 4$", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for band energy and density of states for gapped graphene model.\n    \"\"\"\n    # Define physical constants from the problem statement.\n    HBAR_EVS = 6.582119569e-16  # eVÂ·s\n    V_F = 1.0e6  # m/s\n    G_DEG = 4.0  # Degeneracy factor\n\n    # Pre-compute useful quantities.\n    HBAR_VF = HBAR_EVS * V_F  # eVÂ·m\n    HBAR_VF_SQ = HBAR_VF**2  # (eVÂ·m)^2\n    \n    # Pre-factor for DOS calculation: g_deg / (2 * pi * (hbar*v_f)^2)\n    # With g_deg=4, this is 2 / (pi * (hbar*v_f)^2)\n    DOS_PREFACTOR = 2.0 / (np.pi * HBAR_VF_SQ)\n\n    # Test suite from the problem statement.\n    # Format: (type, parameter1, parameter2)\n    # For 'DOS': (Delta in eV, E in eV)\n    # For 'ENERGY': (Delta in eV, k in m^-1)\n    test_cases = [\n        ('DOS',    0.000, 0.000),      # Case 1\n        ('DOS',    0.000, 0.050),      # Case 2\n        ('DOS',    0.025, 0.020),      # Case 3\n        ('DOS',    0.025, 0.025),      # Case 4\n        ('DOS',    0.025, 0.100),      # Case 5\n        ('DOS',    0.100, 0.050),      # Case 6\n        ('ENERGY', 0.025, 0.0),        # Case 7\n        ('ENERGY', 0.000, 1.0e8),      # Case 8\n        ('ENERGY', 0.050, 1.0e8),      # Case 9\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        case_type, param1, param2 = case\n        \n        if case_type == 'DOS':\n            # Parameters for DOS calculation\n            delta, energy = param1, param2\n            \n            # DOS is zero for energies inside the gap.\n            if energy  delta:\n                dos = 0.0\n            else:\n                # D(E) = (g_deg * E) / (2 * pi * (hbar*v_f)^2) for E >= Delta\n                # which simplifies with the pre-calculated factor.\n                dos = DOS_PREFACTOR * energy\n            \n            results.append(dos)\n\n        elif case_type == 'ENERGY':\n            # Parameters for energy calculation\n            delta, k_magnitude = param1, param2\n            \n            # E_+(k) = sqrt(Delta^2 + (hbar*v_f*k)^2)\n            energy_k = HBAR_VF * k_magnitude\n            conduction_band_energy = np.sqrt(delta**2 + energy_k**2)\n            \n            results.append(conduction_band_energy)\n\n    # Format the results according to the specification.\n    # Each number in scientific notation with 6 digits after the decimal point.\n    formatted_results = [f\"{res:.6e}\" for res in results]\n    \n    # Print the final output in the required single-line format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2454056"}]}