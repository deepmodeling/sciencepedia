{"hands_on_practices": [{"introduction": "Embarking on computational simulations requires fluency in the language of the underlying code, which often operates in atomic units. This exercise provides essential practice in converting the key Car-Parrinello parameters—fictitious mass $\\mu$ and time step $\\Delta t$—from abstract atomic units to the more intuitive physical units used in literature. Mastering these conversions is the first step toward developing an intuition for setting up stable and efficient simulations. [@problem_id:2878271]", "problem": "In Car-Parrinello molecular dynamics (CPMD), the electronic degrees of freedom are assigned a fictitious mass parameter $\\mu$ and are propagated with a finite time step $\\Delta t$. Consider a CPMD simulation that uses $\\mu = 400$ in atomic units (a.u.) of mass and $\\Delta t = 5$ in atomic units of time. Starting from base definitions of atomic units, derive conversion formulas to express $\\Delta t$ in femtoseconds and $\\mu$ in unified atomic mass units. Then carry out the conversions numerically.\n\nUse only the following fundamental definitions and constants as the base:\n- The atomic unit of time is $t_{\\mathrm{au}} \\equiv \\hbar / E_{\\mathrm{h}}$.\n- The atomic unit of mass is $m_{\\mathrm{au}} \\equiv m_{e}$.\n- One femtosecond is $1\\,\\mathrm{fs} = 10^{-15}\\,\\mathrm{s}$.\n- One unified atomic mass unit is $1\\,\\mathrm{u} = 1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}$.\n- Reduced Planck constant: $\\hbar = 1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s}$.\n- Hartree energy: $E_{\\mathrm{h}} = 4.3597447222071 \\times 10^{-18}\\,\\mathrm{J}$.\n- Electron mass: $m_{e} = 9.1093837015 \\times 10^{-31}\\,\\mathrm{kg}$.\n\nFor reference to assess reasonableness, many CPMD studies report that for $\\mu$ in the range $300$–$800$ a.u., stable time steps commonly fall in the range $0.08$–$0.20\\,\\mathrm{fs}$, provided adiabatic separation is maintained.\n\nTasks:\n1. Derive expressions to convert an arbitrary time step $\\Delta t_{\\mathrm{au}}$ (in atomic units) to femtoseconds and an arbitrary fictitious mass $\\mu_{\\mathrm{au}}$ (in atomic units) to unified atomic mass units.\n2. Apply your formulas to the given values $\\Delta t_{\\mathrm{au}} = 5$ and $\\mu_{\\mathrm{au}} = 400$.\n3. Briefly justify whether the converted $\\Delta t$ is consistent with the typical literature range stated above for the given $\\mu$.\n4. Report the converted $\\Delta t$ in femtoseconds, rounded to four significant figures. Express the final answer in $\\mathrm{fs}$.\n\nOnly the converted $\\Delta t$ is to be reported as your final numerical answer; all reasoning and unit checks should appear in your derivation.", "solution": "The goal is to convert the fictitious electronic mass parameter $\\mu$ from atomic units to unified atomic mass units and the time step $\\Delta t$ from atomic units to femtoseconds, starting from the base definitions of atomic units.\n\nBy definition, the atomic unit of time is\n$$\nt_{\\mathrm{au}} \\equiv \\frac{\\hbar}{E_{\\mathrm{h}}}.\n$$\nThus, any time step $\\Delta t_{\\mathrm{au}}$ expressed in atomic units corresponds to a physical time\n$$\n\\Delta t = \\Delta t_{\\mathrm{au}} \\, t_{\\mathrm{au}} = \\Delta t_{\\mathrm{au}} \\, \\frac{\\hbar}{E_{\\mathrm{h}}}.\n$$\nTo express $\\Delta t$ in femtoseconds, we use $1\\,\\mathrm{fs} = 10^{-15}\\,\\mathrm{s}$ and write\n$$\n\\Delta t_{\\mathrm{fs}} = \\Delta t_{\\mathrm{au}} \\, \\frac{\\hbar}{E_{\\mathrm{h}}} \\times \\frac{1}{10^{-15}}.\n$$\nInserting the given constants,\n$$\nt_{\\mathrm{au}} = \\frac{\\hbar}{E_{\\mathrm{h}}} = \\frac{1.054571817 \\times 10^{-34}\\,\\mathrm{J\\,s}}{4.3597447222071 \\times 10^{-18}\\,\\mathrm{J}} = 2.4188843265857 \\times 10^{-17}\\,\\mathrm{s}.\n$$\nTherefore,\n$$\nt_{\\mathrm{au}} = 2.4188843265857 \\times 10^{-17}\\,\\mathrm{s} = 0.024188843265857\\,\\mathrm{fs}.\n$$\nFor the given $\\Delta t_{\\mathrm{au}} = 5$,\n$$\n\\Delta t_{\\mathrm{fs}} = 5 \\times 0.024188843265857 = 0.120944216329285\\,\\mathrm{fs}.\n$$\n\nNext, for the fictitious mass parameter, the atomic unit of mass is defined as\n$$\nm_{\\mathrm{au}} \\equiv m_{e}.\n$$\nHence a fictitious mass $\\mu_{\\mathrm{au}}$ in atomic units corresponds to a physical mass\n$$\n\\mu = \\mu_{\\mathrm{au}} \\, m_{e}.\n$$\nTo express $\\mu$ in unified atomic mass units, use $1\\,\\mathrm{u} = 1.66053906660 \\times 10^{-27}\\,\\mathrm{kg}$. Thus,\n$$\n\\mu_{\\mathrm{u}} = \\frac{\\mu}{1\\,\\mathrm{u}} = \\mu_{\\mathrm{au}} \\, \\frac{m_{e}}{1\\,\\mathrm{u}}.\n$$\nWith $\\mu_{\\mathrm{au}} = 400$,\n$$\n\\mu = 400 \\times 9.1093837015 \\times 10^{-31}\\,\\mathrm{kg} = 3.6437534806 \\times 10^{-28}\\,\\mathrm{kg},\n$$\nand\n$$\n\\mu_{\\mathrm{u}} = \\frac{3.6437534806 \\times 10^{-28}}{1.66053906660 \\times 10^{-27}} = 0.219432\\,\\mathrm{u}.\n$$\nEquivalently, using the known ratio $m_{e} = 5.48579909065 \\times 10^{-4}\\,\\mathrm{u}$,\n$$\n\\mu_{\\mathrm{u}} = 400 \\times 5.48579909065 \\times 10^{-4} = 0.219431963626\\,\\mathrm{u},\n$$\nconsistent with the direct division above.\n\nConsistency check with literature: For $\\mu$ in the range $300$–$800$ a.u., reported stable time steps are commonly in the range $0.08$–$0.20\\,\\mathrm{fs}$. Our converted value $\\Delta t_{\\mathrm{fs}} \\approx 0.120944216329285\\,\\mathrm{fs}$ lies well within this range, which is consistent with typical CPMD practice and the adiabatic separation requirement.\n\nFinally, rounding $\\Delta t_{\\mathrm{fs}}$ to four significant figures yields\n$$\n\\Delta t_{\\mathrm{fs}} = 0.1209\\,\\mathrm{fs}.\n$$", "answer": "$$\\boxed{0.1209}$$", "id": "2878271"}, {"introduction": "A pivotal concept in *ab initio* molecular dynamics is the distinction between tracking the true Born-Oppenheimer ground state (BOMD) and the fictitious dynamics of Car-Parrinello MD (CPMD). This practice directly contrasts the two paradigms by simulating a simple system, focusing on how the total energy is conserved in each case. By implementing and comparing both methods, you will gain a concrete understanding of the approximations inherent in CPMD and the nature of its unique conserved energy quantity. [@problem_id:2448304]", "problem": "You are to model and compare energy conservation in two first-principles molecular dynamics paradigms applied to a simplified water dimer along a single intermolecular coordinate. Consider a one-dimensional nuclear coordinate $R$ representing the oxygen–oxygen separation, measured in Bohr radii ($a_0$). The nuclear motion is governed by a Born–Oppenheimer potential energy surface approximated by a Morse potential\n$$\nE_{\\mathrm{BO}}(R) \\;=\\; D \\left[\\left(1 - e^{-a(R - R_e)}\\right)^2 - 1\\right],\n$$\nwith parameters $D$, $a$, and $R_e$ specified below. Alongside this, consider an auxiliary electronic collective coordinate $q$ (dimensionless) whose instantaneous ground-state manifold is given by $q^\\star(R) = c\\,R$. Define an extended energy\n$$\nE_{\\mathrm{CP}}(R,q) \\;=\\; E_{\\mathrm{BO}}(R) \\;+\\; \\tfrac{1}{2} k_e \\left(q - c\\,R\\right)^2,\n$$\nwith coupling stiffness $k_e$ and dimensionless proportionality constant $c$. You must perform two types of dynamics over a trajectory of duration $T = 1\\,\\mathrm{ps}$:\n- Born–Oppenheimer Molecular Dynamics (BOMD): Nuclear coordinate $R$ evolves on $E_{\\mathrm{BO}}(R)$ with no explicit electronic dynamics.\n- Car–Parrinello Molecular Dynamics (CPMD): Nuclear coordinate $R$ and the auxiliary coordinate $q$ evolve according to the extended energy $E_{\\mathrm{CP}}(R,q)$, with a fictitious electron mass $M_q$.\n\nUse the following equations of motion, with dot denoting time derivatives:\n- For BOMD:\n$$\nM_R \\,\\ddot{R} \\;=\\; -\\frac{dE_{\\mathrm{BO}}}{dR}.\n$$\n- For CPMD:\n$$\nM_R \\,\\ddot{R} \\;=\\; -\\frac{dE_{\\mathrm{BO}}}{dR} \\;+\\; k_e\\,c\\left(q - c\\,R\\right),\n\\qquad\nM_q \\,\\ddot{q} \\;=\\; -k_e \\left(q - c\\,R\\right).\n$$\nTake the nuclear mass $M_R$ to be the reduced mass of two oxygen atoms along the $R$ coordinate:\n$$\nM_R \\;=\\; \\frac{1}{2} m_{\\mathrm{O}},\n\\qquad\nm_{\\mathrm{O}} \\;=\\; 15.999 \\,u,\n\\qquad\n1\\,u \\;=\\; 1822.888486209 \\,m_e,\n$$\nexpressed in atomic units where the electron mass $m_e = 1$. The Morse parameters and couplings are:\n$$\nD \\;=\\; \\frac{0.22\\,\\mathrm{eV}}{27.211386245988\\,\\mathrm{eV/Ha}} \\;\\mathrm{Ha},\n\\quad\na \\;=\\; 3.0 \\;a_0^{-1},\n\\quad\nR_e \\;=\\; 5.5 \\;a_0,\n$$\n$$\nk_e \\;=\\; 0.5 \\;\\mathrm{Ha},\n\\qquad\nc \\;=\\; 0.05.\n$$\nUse initial conditions at time $t=0$:\n$$\nR(0) \\;=\\; R_e + 0.1 \\;a_0,\n\\qquad\n\\dot{R}(0) \\;=\\; 0,\n\\qquad\nq(0) \\;=\\; c\\,R(0),\n\\qquad\n\\dot{q}(0) \\;=\\; 0.\n$$\nSimulate both BOMD and CPMD for a total duration $T = 1\\,\\mathrm{ps}$. The equations should be integrated in atomic units of time, with the conversion $1\\,\\mathrm{a.u.\\ of\\ time} = 2.4188843265857 \\times 10^{-17}\\,\\mathrm{s}$ and $1\\,\\mathrm{fs} = 10^{-15}\\,\\mathrm{s}$. The total energies to be monitored are:\n- For BOMD:\n$$\nE_{\\mathrm{tot}}^{\\mathrm{BO}}(t) \\;=\\; \\tfrac{1}{2} M_R \\dot{R}^2 \\;+\\; E_{\\mathrm{BO}}(R).\n$$\n- For CPMD:\n$$\nE_{\\mathrm{tot}}^{\\mathrm{CP}}(t) \\;=\\; \\tfrac{1}{2} M_R \\dot{R}^2 \\;+\\; \\tfrac{1}{2} M_q \\dot{q}^2 \\;+\\; E_{\\mathrm{CP}}(R,q).\n$$\nFor each simulation, compute the absolute total energy drift over the trajectory,\n$$\n\\Delta E \\;=\\; \\left| E_{\\mathrm{tot}}(T) - E_{\\mathrm{tot}}(0) \\right|,\n$$\nand report $\\Delta E$ in electronvolts (eV), rounded to exactly $6$ decimal places.\n\nTest suite. For each of the following parameter sets $(\\Delta t, M_q)$, run both BOMD and CPMD for duration $T = 1\\,\\mathrm{ps}$, where $\\Delta t$ is the numerical time step used for integration:\n- Case A: $\\Delta t = 0.25\\,\\mathrm{fs}$, $M_q = 400$.\n- Case B: $\\Delta t = 0.50\\,\\mathrm{fs}$, $M_q = 400$.\n- Case C: $\\Delta t = 0.50\\,\\mathrm{fs}$, $M_q = 1600$.\n\nRequired final output format. Your program should produce a single line of output containing a list of six floating-point numbers representing the energy drifts in eV for BOMD and CPMD in Cases A, B, and C, respectively, each rounded to exactly $6$ decimal places, in the following order:\n$$\n[\\Delta E_{\\mathrm{BO}}^{A}, \\Delta E_{\\mathrm{CP}}^{A}, \\Delta E_{\\mathrm{BO}}^{B}, \\Delta E_{\\mathrm{CP}}^{B}, \\Delta E_{\\mathrm{BO}}^{C}, \\Delta E_{\\mathrm{CP}}^{C}].\n$$\nThe output must be a single line and must match the specified format precisely (for example, $[0.000001,0.000002,0.000003,0.000004,0.000005,0.000006]$).", "solution": "The task is to simulate the classical dynamics of a one-dimensional nuclear coordinate, $R$, under two different theoretical frameworks: Born-Oppenheimer Molecular Dynamics (BOMD) and Car-Parrinello Molecular Dynamics (CPMD). The primary objective is to compare the numerical conservation of total energy in each paradigm. The analysis will be conducted in atomic units (a.u.), where the electron mass $m_e$, elementary charge $e$, reduced Planck constant $\\hbar$, and Bohr radius $a_0$ are set to unity. The unit of energy is the Hartree, Ha.\n\nFirst, we establish the constants and parameters in atomic units.\nThe Hartree to electronvolt conversion is given as $1\\,\\mathrm{Ha} \\approx 27.211386245988\\,\\mathrm{eV}$.\nThe Morse potential dissociation energy is $D = \\frac{0.22}{27.211386245988}\\,\\mathrm{Ha} \\approx 0.0080850\\,\\mathrm{Ha}$.\nThe other Morse parameters are $a = 3.0\\,a_0^{-1}$ and $R_e = 5.5\\,a_0$.\nThe nuclear mass $M_R$ for the oxygen dimer reduced motion is:\n$$\nM_R = \\frac{1}{2} m_{\\mathrm{O}} = \\frac{1}{2} (15.999\\,u) = \\frac{1}{2} \\times 15.999 \\times 1822.888486209 \\,m_e \\approx 14581.285 \\,m_e\n$$\nThe CPMD coupling parameters are $k_e = 0.5\\,\\mathrm{Ha}$ and $c = 0.05$.\nThe simulation time $T = 1\\,\\mathrm{ps} = 1000\\,\\mathrm{fs}$. The conversion from femtoseconds to atomic time units is:\n$$\n1\\,\\mathrm{fs} = \\frac{10^{-15}\\,\\mathrm{s}}{2.4188843265857 \\times 10^{-17}\\,\\mathrm{s/a.u.}} \\approx 41.3413745758\\,\\mathrm{a.u.}\n$$\nThus, $T \\approx 41341.37\\,\\mathrm{a.u.}$ The time steps are $\\Delta t_A = 0.25\\,\\mathrm{fs} \\approx 10.335\\,\\mathrm{a.u.}$ and $\\Delta t_B = \\Delta t_C = 0.50\\,\\mathrm{fs} \\approx 20.671\\,\\mathrm{a.u.}$\n\nThe equations of motion are integrated using the Velocity Verlet algorithm. This is a time-reversible and symplectic integrator, known for its excellent long-term energy conservation properties in microcanonical ensemble simulations. For a coordinate $x$ with mass $M$ and force $F(x)$, the algorithm proceeds as:\n1. $v(t + \\frac{\\Delta t}{2}) = v(t) + \\frac{1}{2} \\frac{F(x(t))}{M} \\Delta t$\n2. $x(t + \\Delta t) = x(t) + v(t + \\frac{\\Delta t}{2}) \\Delta t$\n3. $v(t + \\Delta t) = v(t + \\frac{\\Delta t}{2}) + \\frac{1}{2} \\frac{F(x(t+\\Delta t))}{M} \\Delta t$\n\nThe forces required for the integration are derived from the respective potential energies.\nFor BOMD, the force on the nuclear coordinate $R$ is:\n$$\nF_R^{\\mathrm{BO}} = -\\frac{dE_{\\mathrm{BO}}}{dR} = -2aD \\left(1 - e^{-a(R - R_e)}\\right) e^{-a(R - R_e)}\n$$\nFor CPMD, the forces on the coupled coordinates $(R, q)$ are:\n$$\nF_R^{\\mathrm{CP}} = -\\frac{\\partial E_{\\mathrm{CP}}}{\\partial R} = -\\frac{dE_{\\mathrm{BO}}}{dR} + k_e c(q - cR) = F_R^{\\mathrm{BO}} + k_e c(q - cR)\n$$\n$$\nF_q^{\\mathrm{CP}} = -\\frac{\\partial E_{\\mathrm{CP}}}{\\partial q} = -k_e(q - cR)\n$$\nThis defines a two-dimensional system $(R, q)$ propelled by forces $(F_R^{\\mathrm{CP}}, F_q^{\\mathrm{CP}})$ with corresponding masses $(M_R, M_q)$.\n\nThe initial conditions are: $R(0) = 5.5 + 0.1 = 5.6\\,a_0$, $\\dot{R}(0) = 0$, $q(0) = c R(0) = 0.05 \\times 5.6 = 0.28$, and $\\dot{q}(0) = 0$.\nThe system is initialized at rest from a displaced nuclear geometry, with the fictitious electronic coordinate satisfying the ground-state condition $q=cR$.\n\nThe conserved total energy for each simulation is calculated at the beginning ($t=0$) and end ($t=T$) of the trajectory.\nFor BOMD, the total energy is:\n$$\nE_{\\mathrm{tot}}^{\\mathrm{BO}}(t) = \\frac{1}{2} M_R \\dot{R}(t)^2 + D \\left[\\left(1 - e^{-a(R(t) - R_e)}\\right)^2 - 1\\right]\n$$\nFor CPMD, the conserved extended or fictitious energy is:\n$$\nE_{\\mathrm{tot}}^{\\mathrm{CP}}(t) = \\frac{1}{2} M_R \\dot{R}(t)^2 + \\frac{1}{2} M_q \\dot{q}(t)^2 + E_{\\mathrm{BO}}(R(t)) + \\frac{1}{2} k_e (q(t) - cR(t))^2\n$$\nThe absolute energy drift $\\Delta E = |E_{\\mathrm{tot}}(T) - E_{\\mathrm{tot}}(0)|$ is computed for each of the six simulations (BOMD/CPMD for cases A, B, C). The final result is converted from Hartree to eV and reported with the specified precision.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    # --- Constants and Unit Conversions ---\n    EV_PER_HA = 27.211386245988\n    AMU_PER_ME = 1822.888486209\n    AU_TIME_PER_S = 2.4188843265857e-17\n    FS_PER_S = 1e-15\n    FS_TO_AU_TIME = FS_PER_S / AU_TIME_PER_S\n\n    # --- System Parameters in Atomic Units ---\n    D_ev = 0.22\n    D_ha = D_ev / EV_PER_HA\n    A_au = 3.0\n    RE_au = 5.5\n    \n    M_O_u = 15.999\n    M_R_me = 0.5 * M_O_u * AMU_PER_ME\n    \n    K_E_ha = 0.5\n    C_dimless = 0.05\n\n    # --- Simulation Time ---\n    T_ps = 1.0\n    T_fs = T_ps * 1000.0\n    T_au = T_fs * FS_TO_AU_TIME\n\n    # --- Initial Conditions in Atomic Units ---\n    R0 = RE_au + 0.1\n    R_DOT0 = 0.0\n    Q0 = C_dimless * R0\n    Q_DOT0 = 0.0\n\n    # --- Energy and Force Functions ---\n    def e_bo(r):\n        term = 1.0 - np.exp(-A_au * (r - RE_au))\n        return D_ha * (term**2 - 1.0)\n\n    def f_bo(r):\n        exp_term = np.exp(-A_au * (r - RE_au))\n        return -2.0 * A_au * D_ha * (1.0 - exp_term) * exp_term\n\n    def e_cp(r, q):\n        return e_bo(r) + 0.5 * K_E_ha * (q - C_dimless * r)**2\n    \n    def f_cp_r(r, q):\n        return f_bo(r) + K_E_ha * C_dimless * (q - C_dimless * r)\n        \n    def f_cp_q(r, q):\n        return -K_E_ha * (q - C_dimless * r)\n\n    # --- Simulation Functions ---\n    def run_bomd(dt_fs):\n        dt_au = dt_fs * FS_TO_AU_TIME\n        num_steps = int(round(T_au / dt_au))\n\n        r = R0\n        r_dot = R_DOT0\n\n        e_initial = 0.5 * M_R_me * r_dot**2 + e_bo(r)\n        \n        accel = f_bo(r) / M_R_me\n        for _ in range(num_steps):\n            r_dot += 0.5 * accel * dt_au\n            r += r_dot * dt_au\n            accel = f_bo(r) / M_R_me\n            r_dot += 0.5 * accel * dt_au\n        \n        e_final = 0.5 * M_R_me * r_dot**2 + e_bo(r)\n        \n        delta_e_ha = np.abs(e_final - e_initial)\n        return delta_e_ha * EV_PER_HA\n\n    def run_cpmd(dt_fs, M_q_me):\n        dt_au = dt_fs * FS_TO_AU_TIME\n        num_steps = int(round(T_au / dt_au))\n\n        r, r_dot = R0, R_DOT0\n        q, q_dot = Q0, Q_DOT0\n\n        e_initial = 0.5 * M_R_me * r_dot**2 + 0.5 * M_q_me * q_dot**2 + e_cp(r, q)\n\n        accel_r = f_cp_r(r, q) / M_R_me\n        accel_q = f_cp_q(r, q) / M_q_me\n        for _ in range(num_steps):\n            # Update velocities (half step)\n            r_dot += 0.5 * accel_r * dt_au\n            q_dot += 0.5 * accel_q * dt_au\n            \n            # Update positions\n            r += r_dot * dt_au\n            q += q_dot * dt_au\n            \n            # Update accelerations\n            accel_r = f_cp_r(r, q) / M_R_me\n            accel_q = f_cp_q(r, q) / M_q_me\n            \n            # Update velocities (full step)\n            r_dot += 0.5 * accel_r * dt_au\n            q_dot += 0.5 * accel_q * dt_au\n\n        e_final = 0.5 * M_R_me * r_dot**2 + 0.5 * M_q_me * q_dot**2 + e_cp(r, q)\n        \n        delta_e_ha = np.abs(e_final - e_initial)\n        return delta_e_ha * EV_PER_HA\n\n    # --- Test Cases ---\n    test_cases = [\n        # (dt_fs, M_q_me)\n        (0.25, 400.0),  # Case A\n        (0.50, 400.0),  # Case B\n        (0.50, 1600.0), # Case C\n    ]\n\n    results = []\n    \n    # Case A\n    dt_A, Mq_A = test_cases[0]\n    results.append(run_bomd(dt_A))\n    results.append(run_cpmd(dt_A, Mq_A))\n\n    # Case B\n    dt_B, Mq_B = test_cases[1]\n    # BOMD results for dt=0.50fs are identical for Cases B  C\n    bomd_b_drift = run_bomd(dt_B)\n    results.append(bomd_b_drift)\n    results.append(run_cpmd(dt_B, Mq_B))\n    \n    # Case C\n    dt_C, Mq_C = test_cases[2]\n    # Re-use BOMD result\n    results.append(bomd_b_drift) # dt is the same as in B\n    results.append(run_cpmd(dt_C, Mq_C))\n\n    # --- Format and Print Output ---\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2448304"}, {"introduction": "Running a successful CPMD simulation is an art that goes beyond simply integrating the equations of motion; it requires a carefully designed protocol to prepare the system. This exercise challenges you to think like a seasoned researcher and design an optimal equilibration strategy, learning to balance ionic heating with the crucial need to maintain electronic adiabaticity. By evaluating different thermostatting and ramping schemes, you will learn to navigate the practical trade-offs required to achieve a stable and physically meaningful simulation trajectory. [@problem_id:2626874]", "problem": "You are setting up a Car-Parrinello molecular dynamics (CPMD) equilibration for an ionic solution, intending to bring the ionic subsystem to a target temperature while keeping the electronic subsystem cold. In CPMD, the electronic degrees of freedom are propagated with a fictitious electronic mass so that they follow the Born-Oppenheimer surface adiabatically. Assume the following foundational facts:\n\n- The equipartition theorem gives the instantaneous temperature of a classical subsystem via $K = \\frac{f}{2} k_{\\mathrm{B}} T$, where $K$ is the kinetic energy, $f$ is the number of quadratic degrees of freedom, $k_{\\mathrm{B}}$ is the Boltzmann constant, and $T$ is the temperature.\n- In CPMD, the ionic temperature $T_{\\mathrm{i}}$ and electronic “temperature” $T_{\\mathrm{e}}$ can be defined from the ionic kinetic energy $K_{\\mathrm{i}}$ and the fictitious electronic kinetic energy $K_{\\mathrm{e}}$ using the equipartition relation with appropriate $f_{\\mathrm{i}}$ and $f_{\\mathrm{e}}$, respectively.\n- Adiabatic separation requires that the characteristic electronic frequencies $\\omega_{\\mathrm{e}}$ remain much larger than the ionic frequencies $\\omega_{\\mathrm{i}}$ so that energy transfer from ionic motion to the fictitious electronic kinetic energy is minimized. Practically, this is supported by choosing a small fictitious mass and a small time step so that $\\omega_{\\mathrm{e}} \\gg \\omega_{\\mathrm{i}}$, and by applying slow external perturbations relative to ionic timescales.\n- A thermostat characterized by a relaxation time $\\tau$ (for example, a Nosé-Hoover chain or a Langevin scheme with friction $\\gamma \\sim 1/\\tau$) controls the temperature of a target subsystem by exchanging energy with a notional heat bath, with weaker coupling for larger $\\tau$.\n\nYou are told that the highest-frequency ionic mode in your system has a period of approximately $10$ fs. You will use a time step $\\Delta t = 0.12$ fs and a fictitious electronic mass chosen such that the electronic frequencies satisfy $\\omega_{\\mathrm{e}} \\gg \\omega_{\\mathrm{i}}$. Your goal is to equilibrate the ions from $T_{\\mathrm{i}} \\approx 0$ K to $T_{\\mathrm{target}} = 300$ K, while maintaining $T_{\\mathrm{e}} \\approx 0$ K throughout.\n\nWhich of the following equilibration protocols is most consistent with these principles and most likely to achieve the stated goals in a robust and scientifically sound manner?\n\nA. Pre-optimize the geometry and quench the electronic subsystem using damped dynamics until $K_{\\mathrm{e}}$ is negligible. Choose a small fictitious mass and $\\Delta t$ as given to enforce $\\omega_{\\mathrm{e}} \\gg \\omega_{\\mathrm{i}}$. Apply a Nosé-Hoover chain thermostat to the ions with a relaxation time $\\tau_{\\mathrm{i,th}} \\approx 100$ fs, ramping $T_{\\mathrm{i}}$ linearly from $0$ K to $300$ K over $\\tau_{\\mathrm{ramp}} \\approx 10$ ps, then hold at $300$ K for an additional $5$ ps. Apply a weak thermostat to the electronic degrees at a setpoint $T_{\\mathrm{e,set}} \\in [0,10]$ K with relaxation time $\\tau_{\\mathrm{e,th}} \\approx 5$ fs during the ramp to drain any leaked energy, and then either increase $\\tau_{\\mathrm{e,th}}$ or remove this thermostat after the plateau is stable. Monitor $T_{\\mathrm{i}}$, $T_{\\mathrm{e}}$, the ratio $K_{\\mathrm{e}}/K_{\\mathrm{i}}$ (keep $K_{\\mathrm{e}}/K_{\\mathrm{i}} \\lesssim 0.02$), the drift of the conserved Car-Parrinello energy (target $\\lvert dE_{\\mathrm{CP}}/dt \\rvert \\ll 1$ meV/ps), and orbital orthonormality.\n\nB. Apply a single global thermostat at $300$ K to all degrees of freedom (ions and electrons) from $t=0$, with a relaxation time $\\tau_{\\mathrm{th}} \\approx 10$ fs, and ramp the target temperature from $0$ K to $300$ K over $0.1$ ps. Monitor only the total kinetic energy to confirm heating and accept any drift in the Car-Parrinello energy as part of the ramp.\n\nC. Keep the ionic subsystem microcanonical (no thermostat) and apply a strong Langevin thermostat to the electronic degrees of freedom at $T_{\\mathrm{e,set}} = 300$ K with a friction coefficient corresponding to $\\tau_{\\mathrm{e}} \\approx 1$ fs. Heat is expected to conduct from electrons to ions via the coupling inherent in CPMD until the ions reach $300$ K. Monitor pressure and ionic temperature; do not track $K_{\\mathrm{e}}$ or the Car-Parrinello energy.\n\nD. Use a Nosé-Hoover thermostat on the ions ramping from $0$ K to $300$ K over $1$ ps with a short relaxation time $\\tau_{\\mathrm{i,th}} \\approx 5$ fs. Do not thermostat the electrons; instead, choose a large fictitious electronic mass to slow the electronic motion so that it does not absorb energy during the ramp. Monitor only $T_{\\mathrm{i}}$ and accept an initial increase in $K_{\\mathrm{e}}$ as unavoidable.", "solution": "To determine the best equilibration protocol, we must analyze each option against the core principles of Car-Parrinello Molecular Dynamics (CPMD), particularly the requirement of adiabatic separation. The goal is to heat the ions to 300 K while keeping the fictitious electronic kinetic energy near zero. This means any external perturbation (like heating) must be applied gently and slowly to avoid transferring energy from the ionic subsystem to the electronic subsystem.\n\n**Analysis of Protocol A:** This protocol is a textbook example of a correct and robust equilibration procedure.\n- **Preparation**: Starting with an optimized geometry and quenched electronic kinetic energy ($K_e \\approx 0$) ensures the simulation begins on the Born-Oppenheimer surface.\n- **Ionic Heating**: The ionic thermostat is weak ($\\tau_{\\mathrm{i,th}} \\approx 100$ fs, which is much longer than the fastest ionic period of 10 fs), and the temperature ramp is very slow ($\\tau_{\\mathrm{ramp}} \\approx 10$ ps). This gentle heating is crucial for maintaining adiabaticity.\n- **Electronic Cooling**: A separate, weak thermostat on the electrons at a very low temperature acts as an \"energy sink,\" actively removing any small amount of energy that leaks from the hot ions. This is a standard and highly effective technique for enforcing adiabaticity.\n- **Monitoring**: It includes a comprehensive set of diagnostics ($T_i$, $T_e$, $K_e/K_i$, energy drift) that are essential for verifying the simulation's physical validity.\nThis protocol correctly balances all requirements.\n\n**Analysis of Protocol B:** This protocol is fundamentally flawed.\n- **Global Thermostat at 300 K**: Applying a thermostat to the electrons with a target of 300 K is the opposite of what is required. The goal is to keep the electrons cold ($T_e \\approx 0$ K). This would pump massive energy into the fictitious electronic system, destroying the adiabatic separation.\n- **Fast Ramp and Strong Coupling**: The ramp time of 0.1 ps and thermostat relaxation time of 10 fs are both far too aggressive, constituting \"shock heating\" that would guarantee a breakdown of adiabaticity.\n\n**Analysis of Protocol C:** This protocol is based on a misunderstanding of CPMD physics.\n- **Heating Mechanism**: It suggests heating the ions by thermostatting the electrons at 300 K and letting the energy \"conduct\" to the ions. The coupling between ions and the fictitious electrons is intentionally weak to maintain adiabaticity; using it for heat transfer is both unphysical and inefficient, and it relies on breaking the core approximation of the method.\n\n**Analysis of Protocol D:** This protocol contains critical errors.\n- **Large Fictitious Mass**: It incorrectly suggests using a *large* fictitious mass. Adiabaticity requires a *small* mass so that the electronic degrees of freedom are \"light\" and \"fast\" enough to follow the ionic motion instantaneously. A large mass would lower the electronic frequencies, causing resonance with ionic frequencies and a catastrophic breakdown of adiabaticity.\n- **Strong Ionic Thermostat**: The relaxation time of 5 fs is shorter than the fastest ionic period, representing a violent thermostat that would inject high-frequency noise and cause energy leakage.\n\n**Conclusion:** Protocol A is the only option that adheres to the established best practices for CPMD equilibration. It employs slow perturbations and separate, gentle control over the ionic and electronic subsystems to achieve the desired physical state while maintaining the validity of the underlying theoretical approximations.", "answer": "$$\\boxed{A}$$", "id": "2626874"}]}