{"hands_on_practices": [{"introduction": "Before applying any computational method, it's crucial to verify that its implementation is correct. A fundamental check for any dynamics simulation of a closed system is the conservation of total energy. This practice guides you through the implementation of a time-reversible numerical integrator for Ehrenfest dynamics and challenges you to demonstrate that it conserves the total hybrid quantum-classical energy to machine precision [@problem_id:2454724]. Mastering this is a foundational skill for building reliable simulation tools in computational science.", "problem": "Design and implement a program that numerically tests conservation of the total energy in Ehrenfest dynamics for a minimal coupled quantum/classical model in atomic units. Begin from the following fundamental laws and definitions: the time-dependent Schrödinger equation (TDSE) for the electronic wavefunction $|\\psi(t)\\rangle$ with Hamiltonian $\\hat{H}_{\\mathrm{e}}(R)$ depending on the classical coordinate $R(t)$, given by $\\mathrm{i}\\,\\frac{d}{dt}|\\psi(t)\\rangle=\\hat{H}_{\\mathrm{e}}(R(t))|\\psi(t)\\rangle$, and Newton’s second law for the classical coordinate of mass $M$, given by $M\\,\\frac{d^{2}R}{dt^{2}}=-\\langle\\psi(t)|\\frac{\\partial \\hat{H}_{\\mathrm{e}}(R)}{\\partial R}|\\psi(t)\\rangle$. The total energy is the sum of classical and quantum contributions, $E_{\\mathrm{tot}}(t)=\\frac{P(t)^{2}}{2M}+\\langle\\psi(t)|\\hat{H}_{\\mathrm{e}}(R(t))|\\psi(t)\\rangle$, where $P(t)=M\\,\\frac{dR}{dt}$ is the classical momentum. Use atomic units so that $\\hbar=1$.\n\nThe model to be used is a one-dimensional classical coordinate $R(t)$ coupled to a two-level quantum system with the electronic Hamiltonian\n$$\n\\hat{H}_{\\mathrm{e}}(R)=\n\\begin{pmatrix}\n\\frac{\\Delta}{2}+\\kappa R & V \\\\\nV & -\\frac{\\Delta}{2}-\\kappa R\n\\end{pmatrix},\n$$\nand its coordinate derivative\n$$\n\\frac{\\partial \\hat{H}_{\\mathrm{e}}}{\\partial R}=\n\\begin{pmatrix}\n\\kappa & 0\\\\\n0 & -\\kappa\n\\end{pmatrix}.\n$$\nLet the electronic state be parameterized by a normalized two-component complex vector $C(t)=\\begin{pmatrix}c_{1}(t)\\\\ c_{2}(t)\\end{pmatrix}$ so that $\\langle\\psi|\\cdot|\\psi\\rangle=C^{\\dagger}(\\cdot)C$. Then the classical force is $F(R,C)=-\\langle\\psi|\\frac{\\partial \\hat{H}_{\\mathrm{e}}}{\\partial R}|\\psi\\rangle=-\\kappa\\left(|c_{1}|^{2}-|c_{2}|^{2}\\right)$.\n\nYour task is to implement a time-reversible implicit midpoint (Crank–Nicolson form for the TDSE) integrator for the coupled Ehrenfest equations that advances one time step $\\Delta t$ from $(R_{n},P_{n},C_{n})$ to $(R_{n+1},P_{n+1},C_{n+1})$ using midpoint averages $R_{\\mathrm{avg}}=\\frac{R_{n}+R_{n+1}}{2}$, $P_{\\mathrm{avg}}=\\frac{P_{n}+P_{n+1}}{2}$, and $C_{\\mathrm{avg}}=\\frac{C_{n}+C_{n+1}}{2}$. The discrete equations to be solved self-consistently at each step are:\n- $R_{n+1}=R_{n}+\\Delta t\\,\\frac{P_{\\mathrm{avg}}}{M}$,\n- $P_{n+1}=P_{n}+\\Delta t\\,F\\!\\left(R_{\\mathrm{avg}},C_{\\mathrm{avg}}\\right)$,\n- $\\left(\\mathbb{I}+\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}})\\right)C_{n+1}=\\left(\\mathbb{I}-\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}})\\right)C_{n}$,\nwith $C$ renormalized to unit norm after convergence of the fixed-point iteration to machine tolerance. This scheme should, for sufficiently small $\\Delta t$ and tight self-consistency tolerance, numerically demonstrate conservation of $E_{\\mathrm{tot}}(t)$ up to machine precision over a finite simulation time.\n\nImplement the simulation for the following test suite of parameter sets, all in atomic units, with initial conditions and integrator settings as specified. For each case, run for a total time $T=N_{\\mathrm{steps}}\\times\\Delta t$ and return the maximum absolute relative drift of the total energy,\n$$\n\\max_{0\\le n\\le N_{\\mathrm{steps}}}\\frac{\\left|E_{\\mathrm{tot}}(t_{n})-E_{\\mathrm{tot}}(t_{0})\\right|}{\\left|E_{\\mathrm{tot}}(t_{0})\\right|},\n$$\nas a floating-point number.\n\nTest suite (each tuple gives $(M,\\Delta,V,\\kappa,R_{0},P_{0},C_{0},\\Delta t,N_{\\mathrm{steps}})$):\n- Case A (general coupled motion): $(M=\\;1836.0,\\;\\Delta=\\;0.5,\\;V=\\;0.1,\\;\\kappa=\\;0.05,\\;R_{0}=\\;0.0,\\;P_{0}=\\;1.0,\\;C_{0}=(1+0\\mathrm{i},\\;0+0\\mathrm{i}),\\;\\Delta t=\\;0.05,\\;N_{\\mathrm{steps}}=\\;1000)$.\n- Case B (heavy classical particle): $(M=\\;20000.0,\\;\\Delta=\\;1.0,\\;V=\\;0.2,\\;\\kappa=\\;0.1,\\;R_{0}=\\;-1.0,\\;P_{0}=\\;0.5,\\;C_{0}=\\frac{1}{\\sqrt{2}}(1+0\\mathrm{i},\\;\\mathrm{i}),\\;\\Delta t=\\;0.05,\\;N_{\\mathrm{steps}}=\\;1000)$.\n- Case C (decoupled limit): $(M=\\;1000.0,\\;\\Delta=\\;2.0,\\;V=\\;0.3,\\;\\kappa=\\;0.0,\\;R_{0}=\\;0.2,\\;P_{0}=\\;-0.3,\\;C_{0}=\\text{normalized }(0.8,\\;0.6\\mathrm{i}),\\;\\Delta t=\\;0.05,\\;N_{\\mathrm{steps}}=\\;1000)$.\n\nRequirements:\n- Use only atomic units; there are no physical unit conversions to perform. Report the final numbers as dimensionless floating-point values.\n- Implement a fixed-point iteration at each time step to enforce the midpoint self-consistency to a tight tolerance so that numerical energy drift is limited by floating-point roundoff.\n- For each case, compute the maximum absolute relative drift of $E_{\\mathrm{tot}}$ over the trajectory.\n- Final output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (for example, $[x_{A},x_{B},x_{C}]$), where $x_{A}$, $x_{B}$, and $x_{C}$ are the computed floats for Cases A, B, and C respectively, in that order.", "solution": "The problem requires the design and implementation of a numerical simulation to test the conservation of total energy within the framework of Ehrenfest dynamics. This is a fundamental check on the quality of a numerical integrator for mixed quantum-classical systems. The problem is well-posed, scientifically sound, and provides all necessary information to proceed with a solution.\n\nThe core of the problem lies in the coupled evolution of a classical degree of freedom, the coordinate $R(t)$ with mass $M$ and momentum $P(t)$, and a quantum two-level system described by a state vector $|\\psi(t)\\rangle$. The dynamics are governed by Newton's second law for the classical particle and the time-dependent Schrödinger equation (TDSE) for the quantum system. In atomic units ($\\hbar=1$), these are:\n$$\nM\\,\\frac{d^{2}R}{dt^{2}} = -\\left\\langle\\psi(t)\\left|\\frac{\\partial \\hat{H}_{\\mathrm{e}}(R)}{\\partial R}\\right|\\psi(t)\\right\\rangle\n$$\n$$\n\\mathrm{i}\\,\\frac{d}{dt}|\\psi(t)\\rangle = \\hat{H}_{\\mathrm{e}}(R(t))|\\psi(t)\\rangle\n$$\nThe total energy of the combined system, which should be a conserved quantity, is the sum of the classical kinetic energy and the quantum expectation value of the electronic Hamiltonian:\n$$\nE_{\\mathrm{tot}}(t) = \\frac{P(t)^{2}}{2M} + \\langle\\psi(t)|\\hat{H}_{\\mathrm{e}}(R(t))|\\psi(t)\\rangle\n$$\nThe electronic state is represented by a normalized two-component complex vector, $C(t) = \\begin{pmatrix} c_1(t) \\\\ c_2(t) \\end{pmatrix}$, such that $C^\\dagger C = 1$. The electronic Hamiltonian $\\hat{H}_{\\mathrm{e}}(R)$ and its derivative with respect to $R$ are given as:\n$$\n\\hat{H}_{\\mathrm{e}}(R) = \\begin{pmatrix} \\frac{\\Delta}{2}+\\kappa R & V \\\\ V & -\\frac{\\Delta}{2}-\\kappa R \\end{pmatrix}, \\quad \\frac{\\partial \\hat{H}_{\\mathrm{e}}}{\\partial R} = \\begin{pmatrix} \\kappa & 0 \\\\ 0 & -\\kappa \\end{pmatrix}\n$$\nThe classical force is therefore $F = -\\langle\\psi|\\frac{\\partial \\hat{H}_{\\mathrm{e}}}{\\partial R}|\\psi\\rangle = -C^{\\dagger} \\begin{pmatrix} \\kappa & 0 \\\\ 0 & -\\kappa \\end{pmatrix} C = -\\kappa(|c_1|^2 - |c_2|^2)$.\n\nTo propagate the system in time, we must employ the specified implicit midpoint integrator. This method is time-reversible and symplectic, properties which are highly desirable for demonstrating energy conservation over long simulations. For a time step $\\Delta t$, we advance the state from $(R_n, P_n, C_n)$ at time $t_n$ to $(R_{n+1}, P_{n+1}, C_{n+1})$ at time $t_{n+1} = t_n + \\Delta t$. The discrete update equations are defined using midpoint averages of the state variables:\n- $R_{\\mathrm{avg}} = \\frac{R_n + R_{n+1}}{2}$\n- $P_{\\mathrm{avg}} = \\frac{P_n + P_{n+1}}{2}$\n- $C_{\\mathrm{avg}} = \\frac{C_n + C_{n+1}}{2}$\n\nThe system of equations to be solved is:\n1. $R_{n+1} = R_n + \\Delta t\\,\\frac{P_{\\mathrm{avg}}}{M} = R_n + \\frac{\\Delta t}{2M}(P_n + P_{n+1})$\n2. $P_{n+1} = P_n + \\Delta t\\,F(R_{\\mathrm{avg}}, C_{\\mathrm{avg}})$\n3. $(\\mathbb{I}+\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}}))C_{n+1} = (\\mathbb{I}-\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}}))C_n$\n\nThese equations are implicitly coupled: $R_{n+1}$ depends on $P_{n+1}$, which depends on $C_{n+1}$ and $R_{n+1}$ through the midpoint average arguments of the force $F$, and $C_{n+1}$ itself depends on $R_{n+1}$ through $R_{\\mathrm{avg}}$. This circular dependency necessitates a self-consistent field (SCF) or fixed-point iteration procedure at each time step.\n\nThe algorithmic procedure for one time step is as follows:\n1.  **Initialize Guess**: Start with an initial guess for the state at $t_{n+1}$. A simple and effective choice is to use the state at $t_n$: $R_{n+1}^{(0)} = R_n$, $P_{n+1}^{(0)} = P_n$.\n2.  **SCF Iteration**: Iterate until the state variables converge to a self-consistent solution. In iteration $k$:\n    a. Compute the average position based on the current guess $R_{n+1}^{(k)}$: $R_{\\mathrm{avg}} = (R_n + R_{n+1}^{(k)})/2$.\n    b. Construct the midpoint Hamiltonian $\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}})$.\n    c. Solve the linear system (the Crank-Nicolson step) for an updated quantum state vector $C_{n+1}^{(k+1)}$:\n       $$\n       C_{n+1}^{(k+1)} = \\left(\\mathbb{I}+\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}})\\right)^{-1} \\left(\\mathbb{I}-\\mathrm{i}\\,\\frac{\\Delta t}{2}\\,\\hat{H}_{\\mathrm{e}}(R_{\\mathrm{avg}})\\right)C_n\n       $$\n       The Crank-Nicolson propagator is unitary, so if $C_n$ is normalized, $C_{n+1}^{(k+1)}$ will be as well, up to numerical precision.\n    d. Compute the average quantum state vector $C_{\\mathrm{avg}} = (C_n + C_{n+1}^{(k+1)})/2$. Note that this average vector is not normalized to unity.\n    e. Calculate the average force using this $C_{\\mathrm{avg}}$: $F_{\\mathrm{avg}} = -\\kappa(|c_{1,\\mathrm{avg}}|^2-|c_{2,\\mathrm{avg}}|^2)$.\n    f. Update the classical momentum and position to obtain the next guess:\n       $$\n       P_{n+1}^{(k+1)} = P_n + \\Delta t\\,F_{\\mathrm{avg}}\n       $$\n       $$\n       R_{n+1}^{(k+1)} = R_n + \\frac{\\Delta t}{2M}(P_n + P_{n+1}^{(k+1)})\n       $$\n    g. Check for convergence by comparing the change in a variable, for instance $|R_{n+1}^{(k+1)} - R_{n+1}^{(k)}|$, against a small tolerance.\n3.  **Finalize Step**: Once convergence is achieved, the final iterated values become the state $(R_{n+1}, P_{n+1}, C_{n+1})$. As a final step to counteract any accumulated numerical error, the vector $C_{n+1}$ is explicitly renormalized to unit norm before proceeding to the next time step.\n\nThe simulation starts from the initial conditions $(R_0, P_0, C_0)$ at $t_0=0$. The initial energy $E_{\\mathrm{tot}}(t_0)$ is computed. The system is propagated for $N_{\\mathrm{steps}}$, and the total energy $E_{\\mathrm{tot}}(t_n)$ is calculated at each step. Finally, the maximum absolute relative energy drift is computed using the specified formula:\n$$\n\\text{Drift} = \\max_{0\\le n\\le N_{\\mathrm{steps}}}\\frac{\\left|E_{\\mathrm{tot}}(t_{n})-E_{\\mathrm{tot}}(t_{0})\\right|}{\\left|E_{\\mathrm{tot}}(t_{0})\\right|}\n$$\nThis protocol is implemented for each of the three test cases provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Ehrenfest dynamics problem for three test cases and prints the results.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A: (M, Delta, V, kappa, R0, P0, C0, dt, N_steps)\n        (1836.0, 0.5, 0.1, 0.05, 0.0, 1.0, np.array([1.0 + 0.0j, 0.0 + 0.0j]), 0.05, 1000),\n        # Case B\n        (20000.0, 1.0, 0.2, 0.1, -1.0, 0.5, np.array([1.0/np.sqrt(2) + 0.0j, 0.0 + 1.0j/np.sqrt(2)]), 0.05, 1000),\n        # Case C\n        (1000.0, 2.0, 0.3, 0.0, 0.2, -0.3, np.array([0.8 + 0.0j, 0.0 + 0.6j]), 0.05, 1000),\n    ]\n\n    results = []\n    for case in test_cases:\n        M, Delta, V, kappa, R0, P0, C0, dt, N_steps = case\n        \n        # SCF convergence settings\n        scf_tol = 1e-15\n        scf_max_iter = 100\n\n        def get_H(R_val, delta_param, v_param, kappa_param):\n            \"\"\"Constructs the electronic Hamiltonian matrix for a given R.\"\"\"\n            return np.array([\n                [delta_param/2 + kappa_param * R_val, v_param],\n                [v_param, -delta_param/2 - kappa_param * R_val]\n            ], dtype=np.complex128)\n\n        def get_F(C_val, kappa_param):\n            \"\"\"Calculates the classical force from the electronic state.\"\"\"\n            # F(R,C) = -kappa * (|c1|^2 - |c2|^2)\n            return -kappa_param * (np.abs(C_val[0])**2 - np.abs(C_val[1])**2)\n\n        def get_E_tot(R_val, P_val, C_val, m_param, delta_param, v_param, kappa_param):\n            \"\"\"Calculates the total energy of the system.\"\"\"\n            E_kin = P_val**2 / (2 * m_param)\n            H = get_H(R_val, delta_param, v_param, kappa_param)\n            # C must be a column vector for matrix multiplication\n            C_col = C_val.reshape(2, 1)\n            # E_pot must be real\n            E_pot = (C_col.conj().T @ H @ C_col).item().real\n            return E_kin + E_pot\n\n        # Initialize simulation variables\n        R_n, P_n, C_n = R0, P0, C0\n        \n        energies = []\n        \n        E_initial = get_E_tot(R_n, P_n, C_n, M, Delta, V, kappa)\n        energies.append(E_initial)\n        \n        # Main time-stepping loop\n        for _ in range(N_steps):\n            # --- Self-Consistent Field (SCF) Iteration ---\n            # Initial guess for the next step's state variables\n            R_next = R_n\n            \n            for i in range(scf_max_iter):\n                R_prev_scf = R_next\n                \n                # 1. Compute midpoint values based on the current guess\n                R_avg = (R_n + R_next) / 2.0\n                \n                # 2. Update electronic state C using Crank-Nicolson\n                H_avg = get_H(R_avg, Delta, V, kappa)\n                Id = np.identity(2, dtype=np.complex128)\n                \n                # Propagator matrices\n                A_mat = Id + 0.5j * dt * H_avg\n                B_mat = Id - 0.5j * dt * H_avg\n                \n                # Solve the linear system for the new C\n                C_next = np.linalg.solve(A_mat, B_mat @ C_n)\n                \n                # 3. Update classical P and R\n                C_avg = (C_n + C_next) / 2.0\n                F_avg = get_F(C_avg, kappa)\n                \n                P_next = P_n + dt * F_avg\n                R_next = R_n + (dt / (2.0 * M)) * (P_n + P_next)\n                \n                # 4. Check for convergence\n                if np.abs(R_next - R_prev_scf)  scf_tol:\n                    break\n            else:\n                # This block runs if the loop finishes without `break`,\n                # indicating non-convergence. For this problem, we assume it converges.\n                pass\n            \n            # --- Update state for the next time step ---\n            R_n = R_next\n            P_n = P_next\n            \n            # Renormalize C to correct for any numerical drift\n            norm_C = np.linalg.norm(C_next)\n            C_n = C_next / norm_C if norm_C > 0 else C_next\n            \n            # Calculate and store the total energy for this step\n            energies.append(get_E_tot(R_n, P_n, C_n, M, Delta, V, kappa))\n            \n        # --- Calculate final metric ---\n        energies = np.array(energies)\n        # Denominator should be absolute value\n        E0_abs = np.abs(E_initial)\n        # Avoid division by zero, though unlikely for these cases\n        if E0_abs  1e-12:\n            E0_abs = 1.0\n\n        max_rel_drift = np.max(np.abs(energies - E_initial) / E0_abs)\n        results.append(max_rel_drift)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.15e}' for r in results)}]\")\n\nsolve()\n```", "id": "2454724"}, {"introduction": "While powerful, Ehrenfest dynamics is fundamentally a mean-field theory, which can lead to unphysical results in certain situations. This exercise has you simulate a classic model system where Ehrenfest dynamics incorrectly predicts a nuclear trajectory becomes trapped at a potential energy maximum, whereas a full quantum treatment would show the wavepacket splitting into two different product channels [@problem_id:2454685]. By observing this well-known artifact, you will gain critical insight into the limitations of the mean-field approximation and when it may fail to describe chemical reality.", "problem": "You must write a complete, runnable program that constructs a one-dimensional, two-state potential energy surface in atomic units and simulates Ehrenfest dynamics to demonstrate a case where the mean-field prediction traps the nuclear trajectory at the top of a barrier between two product channels. Use the following diabatic Hamiltonian definition for the electronic subsystem:\n$$\n\\hat{H}(x) \\;=\\; \\begin{pmatrix}\nV_{11}(x)  V_{12}(x) \\\\\nV_{12}(x)  V_{22}(x)\n\\end{pmatrix},\n$$\nwith\n$$\nV_{11}(x) \\;=\\; \\tfrac{1}{2}\\,k\\,(x-d)^2,\\quad\nV_{22}(x) \\;=\\; \\tfrac{1}{2}\\,k\\,(x+d)^2,\\quad\nV_{12}(x) \\;=\\; \\Delta,\n$$\nand adopt atomic units so that the reduced Planck constant is $1$ and the electron mass is $1$. The derivative of the Hamiltonian with respect to position is\n$$\n\\frac{\\partial \\hat{H}}{\\partial x}(x) \\;=\\; \\begin{pmatrix}\nk\\,(x-d)  0 \\\\\n0  k\\,(x+d)\n\\end{pmatrix}.\n$$\nThe Ehrenfest equations of motion are\n$$\n\\mathrm{i}\\,\\frac{d}{dt}\\,\\mathbf{c}(t) \\;=\\; \\hat{H}\\big(x(t)\\big)\\,\\mathbf{c}(t),\n$$\n$$\nm\\,\\frac{d^2 x}{dt^2} \\;=\\; -\\,\\left\\langle \\mathbf{c}(t) \\left| \\frac{\\partial \\hat{H}}{\\partial x}\\big(x(t)\\big) \\right| \\mathbf{c}(t) \\right\\rangle,\n$$\nwith the normalization constraint\n$$\n\\langle \\mathbf{c}(t) | \\mathbf{c}(t) \\rangle \\;=\\; 1.\n$$\nHere, $\\mathbf{c}(t)$ is the two-component complex electronic state vector, $x(t)$ is the classical nuclear coordinate, and $m$ is the nuclear mass. Adopt the following fixed parameters for the potential and mass:\n$$\nk \\;=\\; 0.2,\\quad d \\;=\\; 2.0,\\quad \\Delta \\;=\\; 0.1,\\quad m \\;=\\; 1836.\n$$\nThese choices ensure that the lower adiabatic surface has two minima near $x \\approx -d$ and $x \\approx +d$ separated by a barrier near $x \\approx 0$, with barrier height\n$$\nE_{\\text{barrier}} \\;=\\; \\tfrac{1}{2}\\,k\\,d^2 - \\Delta \\;=\\; 0.5 \\cdot 0.2 \\cdot (2.0)^2 - 0.1 \\;=\\; 0.3.\n$$\nYou must simulate the coupled Ehrenfest dynamics for the following test suite of three cases, each specified by an an initial position $x(0)$, initial velocity $v(0)$ (with $v \\equiv dx/dt$), and an initial normalized electronic state $\\mathbf{c}(0)$:\n- Case $1$: $x(0)=0.0$, $v(0)=0.0$, $\\mathbf{c}(0)=\\frac{1}{\\sqrt{2}}(1,\\,1)$, total simulation time $T=50.0$, time step $\\Delta t=0.01$.\n- Case $2$: $x(0)=0.0$, $v(0)=0.0$, $\\mathbf{c}(0)=(\\sqrt{0.8},\\,\\sqrt{0.2})$, total simulation time $T=200.0$, time step $\\Delta t=0.01$.\n- Case $3$: $x(0)=0.0$, $v(0)=0.02$, $\\mathbf{c}(0)=\\frac{1}{\\sqrt{2}}(1,\\,1)$, total simulation time $T=150.0$, time step $\\Delta t=0.01$.\n\nUse atomic units throughout. Angles are not used. For classification of outcomes, define the product regions as $x \\le -x_{\\text{prod}}$ (left product) and $x \\ge +x_{\\text{prod}}$ (right product), with\n$$\nx_{\\text{prod}} \\;=\\; 1.0.\n$$\nDefine the barrier-top trapping region by\n$$\n|x(T)| \\;\\; x_{\\text{trap}} \\quad \\text{and} \\quad |v(T)| \\;\\; v_{\\text{trap}},\n$$\nwith thresholds\n$$\nx_{\\text{trap}} \\;=\\; 0.05, \\qquad v_{\\text{trap}} \\;=\\; 10^{-3}.\n$$\nFor each case, integrate up to the specified final time $T$ and output a classification integer according to:\n- Output $-1$ if $x(T) \\le -x_{\\text{prod}}$.\n- Output $+1$ if $x(T) \\ge +x_{\\text{prod}}$.\n- Output $0$ if $|x(T)|  x_{\\text{trap}}$ and $|v(T)|  v_{\\text{trap}}$.\n- If none of the above criteria are met, output $0$.\n\nYour program should produce a single line of output containing the results as a comma-separated list of the three classification integers enclosed in square brackets, for example $[a,b,c]$. The output must be unitless and contain no additional text or spaces.", "solution": "The problem presented is a valid exercise in computational physics, specifically in the domain of non-adiabatic molecular dynamics. It requires the implementation of the Ehrenfest mean-field method for a canonical two-state, one-dimensional model system. The objective is to simulate the coupled quantum-classical dynamics and demonstrate a known artifact of the Ehrenfest approximation: the trapping of a nuclear trajectory on a potential energy barrier where a correct quantum treatment would predict bifurcation. All parameters and conditions are well-defined, and the problem is scientifically sound.\n\nThe core of the problem lies in the numerical integration of the coupled Ehrenfest equations of motion. For a system with a classical nuclear coordinate $x(t)$ and a quantum electronic state vector $\\mathbf{c}(t)$, these equations are:\n$$\n\\mathrm{i}\\,\\hbar\\,\\frac{d}{dt}\\,\\mathbf{c}(t) \\;=\\; \\hat{H}\\big(x(t)\\big)\\,\\mathbf{c}(t)\n$$\n$$\nm\\,\\frac{d^2 x}{dt^2} \\;=\\; -\\,\\left\\langle \\mathbf{c}(t) \\left| \\frac{\\partial \\hat{H}}{\\partial x}\\big(x(t)\\big) \\right| \\mathbf{c}(t) \\right\\rangle\n$$\nIn atomic units, the reduced Planck constant $\\hbar$ is set to $1$. The first equation is the time-dependent Schrödinger equation for the electronic subsystem, governed by the electronic Hamiltonian $\\hat{H}(x)$ which depends parametrically on the nuclear position. The second is Newton's second law for the nucleus, where the force is the expectation value of the negative gradient of the Hamiltonian operator. This force is known as the Ehrenfest or mean-field force.\n\nFor the specified diabatic Hamiltonian,\n$$\n\\hat{H}(x) \\;=\\; \\begin{pmatrix}\n\\tfrac{1}{2}\\,k\\,(x-d)^2  \\Delta \\\\\n\\Delta  \\tfrac{1}{2}\\,k\\,(x+d)^2\n\\end{pmatrix}\n$$\nand its derivative with respect to position,\n$$\n\\frac{\\partial \\hat{H}}{\\partial x}(x) \\;=\\; \\begin{pmatrix}\nk\\,(x-d)  0 \\\\\n0  k\\,(x+d)\n\\end{pmatrix}\n$$\nthe Ehrenfest force on the nucleus, with $\\mathbf{c}(t) = (c_1(t), c_2(t))^T$, is explicitly calculated as:\n$$\nF_{\\text{Ehrenfest}} = -\\left( c_1^*, c_2^* \\right) \\begin{pmatrix} k(x-d)  0 \\\\ 0  k(x+d) \\end{pmatrix} \\begin{pmatrix} c_1 \\\\ c_2 \\end{pmatrix} = - \\left( |c_1|^2 k(x-d) + |c_2|^2 k(x+d) \\right)\n$$\nThis force is a weighted average of the forces corresponding to the two diabatic potential surfaces, $V_{11}(x)$ and $V_{22}(x)$, with the weights being the electronic populations, $|c_1|^2$ and $|c_2|^2$.\n\nTo propagate the system in time, we employ a robust numerical integration scheme. A synchronized Velocity Verlet algorithm is chosen for the classical degree of freedom, praised for its time-reversibility and energy conservation properties. The quantum propagation of the electronic state vector $\\mathbf{c}(t)$ is handled with a symmetric split-operator technique to ensure accuracy and unitarity.\n\nThe algorithm for a single time step from $t_n$ to $t_{n+1} = t_n + \\Delta t$ is as follows:\n$1$. Update the nuclear position:\n$$x_{n+1} = x_n + v_n \\Delta t + \\frac{1}{2} a_n (\\Delta t)^2$$\nwhere $a_n = F(x_n, \\mathbf{c}_n) / m$ is the acceleration at the beginning of the step.\n\n$2$. Propagate the electronic state vector. To maintain second-order accuracy, a symmetric splitting is used: the state is propagated for a half-step using the Hamiltonian at $x_n$, and for another half-step using the Hamiltonian at $x_{n+1}$:\n$$ \\mathbf{c}' = \\exp\\left(-\\mathrm{i}\\,\\hat{H}(x_n)\\,\\frac{\\Delta t}{2}\\right) \\mathbf{c}_n $$\n$$ \\mathbf{c}_{n+1} = \\exp\\left(-\\mathrm{i}\\,\\hat{H}(x_{n+1})\\,\\frac{\\Delta t}{2}\\right) \\mathbf{c}' $$\n\n$3$. Calculate the new acceleration. The force at the end of the step, $F_{n+1}$, is computed using the updated position $x_{n+1}$ and the updated state vector $\\mathbf{c}_{n+1}$:\n$$a_{n+1} = \\frac{F(x_{n+1}, \\mathbf{c}_{n+1})}{m}$$\n\n$4$. Update the nuclear velocity:\n$$v_{n+1} = v_n + \\frac{1}{2}(a_n + a_{n+1})\\Delta t$$\nThe quantities $(x_{n+1}, v_{n+1}, \\mathbf{c}_{n+1}, a_{n+1})$ then serve as the initial values for the next time step.\n\nThe quantum propagator, $\\exp(-\\mathrm{i} \\hat{H} \\tau)$, where $\\tau$ is the time interval, is computed analytically. For the given $2 \\times 2$ Hamiltonian $\\hat{H} = \\begin{pmatrix} A  C \\\\ C  B \\end{pmatrix}$, we can write it as $\\hat{H} = \\bar{E}I + H_0$, where $\\bar{E} = (A+B)/2$ is the average diagonal energy, $I$ is the identity matrix, and $H_0 = \\begin{pmatrix} \\delta  C \\\\ C  -\\delta \\end{pmatrix}$ with $\\delta = (A-B)/2$. The propagator is then:\n$$\n\\exp(-\\mathrm{i} \\hat{H} \\tau) = e^{-\\mathrm{i}\\bar{E}\\tau} \\left( \\cos(\\Omega \\tau)I - \\mathrm{i}\\frac{\\sin(\\Omega \\tau)}{\\Omega} H_0 \\right)\n$$\nwhere $\\Omega = \\sqrt{\\delta^2 + C^2}$ is the generalized Rabi frequency. This analytical formula is numerically stable and exact.\n\nThe three test cases explore the behavior of this system under different initial conditions:\n- **Case 1**: Starts at $x(0)=0$ with $v(0)=0$ in a symmetric superposition $\\mathbf{c}(0)=\\frac{1}{\\sqrt{2}}(1,1)$, which is the upper adiabatic eigenstate at $x=0$. The initial Ehrenfest force is exactly zero. Due to symmetry, the particle remains stationary at the top of the barrier, demonstrating trapping. The outcome is expected to be $0$.\n- **Case 2**: Starts at $x(0)=0$ with $v(0)=0$ but with an asymmetric superposition $\\mathbf{c}(0)=(\\sqrt{0.8}, \\sqrt{0.2})$. This asymmetry creates a non-zero initial force, $F(0) = -[0.8 k(-d) + 0.2 k(d)] = 0.6kd > 0$. The particle is pushed toward the right-hand product channel, corresponding to an outcome of $+1$.\n- **Case 3**: Same as Case 1, but with a small initial velocity $v(0)=0.02$. This kick displaces the particle from the unstable equilibrium point. The mean-field potential for the upper adiabatic state has a maximum at $x=0$. However, the Ehrenfest force, determined by the evolving populations, acts as a restoring force, pulling the nucleus back towards the origin. This leads to oscillations around $x=0$ and eventual trapping, a classic example of the failure of the mean-field approximation to describe bond-breaking or reaction branching. The outcome is expected to be $0$.\n\nThe provided program implements this complete algorithm to simulate the specified cases and determine the final classification for each.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Ehrenfest dynamics problem for the three specified test cases.\n    \"\"\"\n\n    # Fixed parameters in atomic units\n    K_CONST = 0.2\n    D_CONST = 2.0\n    DELTA_CONST = 0.1\n    MASS = 1836.0\n\n    # Classification thresholds\n    X_PROD = 1.0\n    X_TRAP = 0.05\n    V_TRAP = 1e-3\n\n    test_cases = [\n        # Case 1: x(0)=0.0, v(0)=0.0, c(0)=(1,1)/sqrt(2), T=50.0, dt=0.01\n        (0.0, 0.0, np.array([1.0, 1.0], dtype=np.complex128) / np.sqrt(2.0), 50.0, 0.01),\n        # Case 2: x(0)=0.0, v(0)=0.0, c(0)=(sqrt(0.8), sqrt(0.2)), T=200.0, dt=0.01\n        (0.0, 0.0, np.array([np.sqrt(0.8), np.sqrt(0.2)], dtype=np.complex128), 200.0, 0.01),\n        # Case 3: x(0)=0.0, v(0)=0.02, c(0)=(1,1)/sqrt(2), T=150.0, dt=0.01\n        (0.0, 0.02, np.array([1.0, 1.0], dtype=np.complex128) / np.sqrt(2.0), 150.0, 0.01),\n    ]\n\n    results = []\n\n    def get_hamiltonian(x, k, d, delta_):\n        \"\"\"Constructs the 2x2 diabatic Hamiltonian matrix.\"\"\"\n        v11 = 0.5 * k * (x - d)**2\n        v22 = 0.5 * k * (x + d)**2\n        v12 = delta_\n        return np.array([[v11, v12], [v12, v22]], dtype=np.complex128)\n\n    def get_hamiltonian_derivative(x, k, d):\n        \"\"\"Constructs the derivative of the Hamiltonian w.r.t. position x.\"\"\"\n        dv11_dx = k * (x - d)\n        dv22_dx = k * (x + d)\n        return np.array([[dv11_dx, 0.0], [0.0, dv22_dx]], dtype=np.complex128)\n\n    def calculate_force(x, c, k, d):\n        \"\"\"Calculates the Ehrenfest force on the nucleus.\"\"\"\n        dH_dx = get_hamiltonian_derivative(x, k, d)\n        # F = -c|dH/dx|c\n        force = -np.real(np.vdot(c, dH_dx @ c))\n        return force\n\n    def propagate_c(c_in, H, dt):\n        \"\"\"Propagates the electronic state vector c by time dt under Hamiltonian H.\"\"\"\n        A = H[0, 0]\n        B = H[1, 1]\n        C = H[0, 1]\n        \n        E_bar = (A + B) / 2.0\n        delta = (A - B) / 2.0\n        \n        omega = np.sqrt(delta**2 + C**2)\n        \n        # Handle the case omega = 0 to avoid division by zero, though unlikely here\n        if np.abs(omega)  1e-15:\n            sin_omega_dt_over_omega = dt\n        else:\n            sin_omega_dt_over_omega = np.sin(omega * dt) / omega\n\n        cos_omega_dt = np.cos(omega * dt)\n        \n        # H0 = H - E_bar * I\n        H0 = np.array([[delta, C], [C, -delta]], dtype=np.complex128)\n        \n        # Propagator: U = e^(-i*E_bar*dt) * (cos(omega*dt)*I - i*sin(omega*dt)/omega * H0)\n        propagator = np.exp(-1j * E_bar * dt) * (\n            cos_omega_dt * np.identity(2) - 1j * sin_omega_dt_over_omega * H0\n        )\n        \n        c_out = propagator @ c_in\n        return c_out\n\n    for case in test_cases:\n        x, v, c, T, dt = case\n        num_steps = int(T / dt)\n        \n        # Initial force and acceleration\n        force = calculate_force(x, c, K_CONST, D_CONST)\n        accel = force / MASS\n\n        for _ in range(num_steps):\n            # Synchronized Velocity Verlet integration scheme\n            # 1. Update position\n            x_new = x + v * dt + 0.5 * accel * dt**2\n\n            # 2. Propagate electronic state (symmetric splitting)\n            H_old = get_hamiltonian(x, K_CONST, D_CONST, DELTA_CONST)\n            c_half = propagate_c(c, H_old, dt / 2.0)\n            \n            H_new = get_hamiltonian(x_new, K_CONST, D_CONST, DELTA_CONST)\n            c_new = propagate_c(c_half, H_new, dt / 2.0)\n            \n            # 3. Calculate new force and acceleration\n            force_new = calculate_force(x_new, c_new, K_CONST, D_CONST)\n            accel_new = force_new / MASS\n\n            # 4. Update velocity\n            v_new = v + 0.5 * (accel + accel_new) * dt\n\n            # 5. Update state for the next step\n            x, v, c, accel = x_new, v_new, c_new, accel_new\n\n        # Classify the outcome\n        final_x = x\n        final_v = v\n        \n        if final_x = -X_PROD:\n            results.append(-1)\n        elif final_x >= X_PROD:\n            results.append(1)\n        elif abs(final_x)  X_TRAP and abs(final_v)  V_TRAP:\n            results.append(0)\n        else:\n            results.append(0) # Default case as per problem description\n\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2454685"}, {"introduction": "The previous practice demonstrated an unphysical trapping artifact computationally; now, we will explore a related phenomenon analytically. Conical intersections (CIs) are points of electronic degeneracy that often govern reaction pathways and branching, and they are notoriously challenging for mean-field methods. This exercise asks you to derive the precise mathematical conditions on the electronic state and nuclear velocity that cause an Ehrenfest trajectory to become permanently \"stuck\" at a CI [@problem_id:2454725]. This deep dive into the underlying equations provides a rigorous theoretical understanding of the method's behavior in these critical regions of a potential energy surface.", "problem": "Consider a two-state molecular system in the vicinity of a conical intersection (CI) between two electronic states, modeled in the diabatic basis by the linear vibronic coupling (LVC) Hamiltonian\n$$\n\\hat{H}_{\\text{dia}}(\\mathbf{R}) \\;=\\; V_{0}(\\mathbf{R})\\, \\hat{I} \\;+\\; (\\mathbf{g}\\cdot\\mathbf{R})\\, \\hat{\\sigma}_{z} \\;+\\; (\\mathbf{h}\\cdot\\mathbf{R})\\, \\hat{\\sigma}_{x},\n$$\nwhere $\\mathbf{R}$ is the nuclear coordinate vector, $\\hat{I}$ is the identity operator in the two-state electronic subspace, and $\\hat{\\sigma}_{x}$ and $\\hat{\\sigma}_{z}$ are Pauli matrices. The constant vectors $\\mathbf{g}$ and $\\mathbf{h}$ are noncollinear and span the local branching plane of the CI. Assume $V_{0}(\\mathbf{R}_{\\text{CI}})=0$ and $\\nabla_{\\mathbf{R}} V_{0}(\\mathbf{R}_{\\text{CI}})=\\mathbf{0}$ at the CI point $\\mathbf{R}_{\\text{CI}}=\\mathbf{0}$.\n\nWithin Ehrenfest dynamics (mean-field dynamics), the electrons evolve according to the time-dependent Schrödinger equation\n$$\ni\\hbar \\frac{d}{dt} \\begin{pmatrix} c_{1}(t) \\\\ c_{2}(t) \\end{pmatrix} \\;=\\; \\hat{H}_{\\text{dia}}(\\mathbf{R}(t)) \\begin{pmatrix} c_{1}(t) \\\\ c_{2}(t) \\end{pmatrix},\n$$\nwith normalized electronic amplitudes $|c_{1}(t)|^{2}+|c_{2}(t)|^{2}=1$, and the nuclei obey Newton’s equation\n$$\nM \\ddot{\\mathbf{R}}(t) \\;=\\; -\\, \\nabla_{\\mathbf{R}} \\left\\langle \\psi_{e}(t) \\middle| \\hat{H}_{\\text{dia}}(\\mathbf{R}(t)) \\middle| \\psi_{e}(t) \\right\\rangle,\n$$\nwhere $M$ is a scalar mass parameter and $\\left|\\psi_{e}(t)\\right\\rangle = c_{1}(t)\\,|1\\rangle + c_{2}(t)\\,|2\\rangle$ is the electronic state in the diabatic basis $\\{|1\\rangle,|2\\rangle\\}$.\n\nYou initialize the system at the CI point with $\\mathbf{R}(0)=\\mathbf{0}$, nuclear velocity $\\dot{\\mathbf{R}}(0)=\\mathbf{v}_{0}$, and an arbitrary normalized electronic state with complex amplitudes $c_{1}(0)$ and $c_{2}(0)$. Work from the definitions above to derive necessary and sufficient conditions on the electronic amplitudes and the nuclear velocity such that the Ehrenfest trajectory remains at the CI point for all time, that is, $\\mathbf{R}(t)=\\mathbf{0}$ for all $t\\ge 0$.\n\nThen, for the special case that the electronic populations are equal at $t=0$, i.e., $|c_{1}(0)|=|c_{2}(0)|\\neq 0$, write $c_{2}(0)=\\exp(i\\phi)\\,c_{1}(0)$ with real $\\phi\\in[0,2\\pi)$. Under your derived conditions that ensure the trajectory remains at the CI point, what is the smallest positive value of the relative phase $\\phi$ (in radians)? Provide your answer as a single real number in radians. No rounding is required.", "solution": "The problem requires the derivation of necessary and sufficient conditions for an Ehrenfest trajectory to remain stationary at a conical intersection, defined as the point $\\mathbf{R}_{\\text{CI}} = \\mathbf{0}$. The trajectory is specified to remain at this point for all time $t \\ge 0$, which means $\\mathbf{R}(t) = \\mathbf{0}$ for all $t \\ge 0$.\n\nFor this condition to hold, the nuclear position, velocity, and acceleration must be zero for all time $t \\ge 0$.\nThe initial position is given as $\\mathbf{R}(0) = \\mathbf{0}$.\nThe velocity must be zero for all time, $\\dot{\\mathbf{R}}(t) = \\mathbf{0}$. This implies the initial velocity must be zero, so the first condition is:\n$$\n\\dot{\\mathbf{R}}(0) = \\mathbf{v}_{0} = \\mathbf{0}\n$$\nThe acceleration must also be zero for all time, $\\ddot{\\mathbf{R}}(t) = \\mathbf{0}$. From Newton's equation of motion for the nuclei, this means the force on the nuclei must be zero for all $t \\ge 0$:\n$$\nM \\ddot{\\mathbf{R}}(t) = \\mathbf{F}(t) = - \\nabla_{\\mathbf{R}} \\left\\langle \\psi_{e}(t) \\middle| \\hat{H}_{\\text{dia}}(\\mathbf{R}(t)) \\middle| \\psi_{e}(t) \\right\\rangle = \\mathbf{0}\n$$\nThe quantity inside the gradient is the mean-field or Ehrenfest potential energy, $E_{\\text{Ehrenfest}}(\\mathbf{R}, t) = \\left\\langle \\psi_{e}(t) \\middle| \\hat{H}_{\\text{dia}}(\\mathbf{R}) \\middle| \\psi_{e}(t) \\right\\rangle$. We must evaluate this force at the trajectory's position, $\\mathbf{R}(t)=\\mathbf{0}$.\n\nFirst, let us examine the evolution of the electronic state under the condition $\\mathbf{R}(t) = \\mathbf{0}$. The electronic Hamiltonian becomes:\n$$\n\\hat{H}_{\\text{dia}}(\\mathbf{R}=\\mathbf{0}) = V_{0}(\\mathbf{0})\\, \\hat{I} + (\\mathbf{g}\\cdot\\mathbf{0})\\, \\hat{\\sigma}_{z} + (\\mathbf{h}\\cdot\\mathbf{0})\\, \\hat{\\sigma}_{x}\n$$\nUsing the given condition $V_{0}(\\mathbf{R}_{\\text{CI}})=V_{0}(\\mathbf{0})=0$, the Hamiltonian at the conical intersection is identically zero: $\\hat{H}_{\\text{dia}}(\\mathbf{0}) = 0$.\nThe time-dependent Schrödinger equation for the electronic amplitudes $\\mathbf{c}(t) = \\begin{pmatrix} c_{1}(t) \\\\ c_{2}(t) \\end{pmatrix}$ is then:\n$$\ni\\hbar \\frac{d}{dt} \\mathbf{c}(t) = \\hat{H}_{\\text{dia}}(\\mathbf{0}) \\mathbf{c}(t) = \\mathbf{0}\n$$\nThis implies that $\\frac{d}{dt} \\mathbf{c}(t) = \\mathbf{0}$, meaning the electronic amplitudes are constant in time: $c_{1}(t) = c_{1}(0)$ and $c_{2}(t) = c_{2}(0)$ for all $t$.\n\nNow we evaluate the Ehrenfest potential energy. In the diabatic basis, it is:\n$$\nE_{\\text{Ehrenfest}}(\\mathbf{R}, t) = \\begin{pmatrix} c_1(t)^*  c_2(t)^* \\end{pmatrix} \\begin{pmatrix} V_0(\\mathbf{R}) + \\mathbf{g}\\cdot\\mathbf{R}  \\mathbf{h}\\cdot\\mathbf{R} \\\\ \\mathbf{h}\\cdot\\mathbf{R}  V_0(\\mathbf{R}) - \\mathbf{g}\\cdot\\mathbf{R} \\end{pmatrix} \\begin{pmatrix} c_1(t) \\\\ c_2(t) \\end{pmatrix}\n$$\nExpanding this expression gives:\n$$\nE_{\\text{Ehrenfest}}(\\mathbf{R}, t) = V_0(\\mathbf{R})(|c_1(t)|^2+|c_2(t)|^2) + (\\mathbf{g}\\cdot\\mathbf{R})(|c_1(t)|^2-|c_2(t)|^2) + (\\mathbf{h}\\cdot\\mathbf{R})(c_1(t)^*c_2(t) + c_2(t)^*c_1(t))\n$$\nUsing the normalization condition $|c_1(t)|^2+|c_2(t)|^2=1$ and the identity $z+z^* = 2\\text{Re}(z)$, this simplifies to:\n$$\nE_{\\text{Ehrenfest}}(\\mathbf{R}, t) = V_0(\\mathbf{R}) + (\\mathbf{g}\\cdot\\mathbf{R})(|c_1(t)|^2-|c_2(t)|^2) + (\\mathbf{h}\\cdot\\mathbf{R})(2 \\text{Re}[c_1(t)^* c_2(t)])\n$$\nThe force on the nuclei is the negative gradient of this potential with respect to $\\mathbf{R}$:\n$$\n\\mathbf{F}(\\mathbf{R}, t) = - \\nabla_{\\mathbf{R}} E_{\\text{Ehrenfest}}(\\mathbf{R}, t) = - \\left( \\nabla_{\\mathbf{R}}V_0(\\mathbf{R}) + \\mathbf{g}(|c_1(t)|^2-|c_2(t)|^2) + \\mathbf{h}(2 \\text{Re}[c_1(t)^* c_2(t)]) \\right)\n$$\nThe condition that the trajectory remains at the origin, $\\mathbf{R}(t)=\\mathbf{0}$, requires this force to be zero for all time when evaluated at $\\mathbf{R}=\\mathbf{0}$. As shown above, the electronic coefficients are constant, $c_k(t) = c_k(0)$. We are also given that $\\nabla_{\\mathbf{R}} V_{0}(\\mathbf{R}_{\\text{CI}}) = \\mathbf{0}$. Evaluating the force at $\\mathbf{R}=\\mathbf{0}$:\n$$\n\\mathbf{F}(\\mathbf{0}, t) = - \\left( \\mathbf{g}(|c_1(0)|^2-|c_2(0)|^2) + \\mathbf{h}(2 \\text{Re}[c_1(0)^* c_2(0)]) \\right) = \\mathbf{0}\n$$\nThis vector equation must hold. The problem states that the vectors $\\mathbf{g}$ and $\\mathbf{h}$ are noncollinear, which means they are linearly independent. Therefore, for their linear combination to be the zero vector, the scalar coefficients of both $\\mathbf{g}$ and $\\mathbf{h}$ must be zero:\n$$\n|c_1(0)|^2 - |c_2(0)|^2 = 0\n$$\n$$\n2 \\text{Re}[c_1(0)^* c_2(0)] = 0\n$$\nThese two conditions on the initial electronic state, along with the condition on the initial nuclear velocity $\\mathbf{v}_{0} = \\mathbf{0}$, are the necessary and sufficient conditions for the trajectory to remain at the conical intersection.\n\nFor the second part of the problem, we consider the special case where the initial electronic populations are equal, $|c_1(0)| = |c_2(0)| \\neq 0$. This automatically satisfies the first electronic condition, $|c_1(0)|^2 - |c_2(0)|^2 = 0$. The normalization $|c_1(0)|^2 + |c_2(0)|^2 = 1$ then implies $2|c_1(0)|^2=1$, so $|c_1(0)|=|c_2(0)|=1/\\sqrt{2}$.\n\nWe are given the relation $c_2(0) = \\exp(i\\phi) c_1(0)$ for some real phase $\\phi \\in [0, 2\\pi)$. We must now enforce the second electronic condition:\n$$\n\\text{Re}[c_1(0)^* c_2(0)] = 0\n$$\nSubstituting the expression for $c_2(0)$:\n$$\n\\text{Re}[c_1(0)^* (\\exp(i\\phi) c_1(0))] = 0\n$$\n$$\n\\text{Re}[\\exp(i\\phi) |c_1(0)|^2] = 0\n$$\nSince $|c_1(0)|^2 = 1/2$ is a real, non-zero constant, we can divide it from the equation:\n$$\n\\text{Re}[\\exp(i\\phi)] = 0\n$$\nUsing Euler's formula, $\\exp(i\\phi) = \\cos(\\phi) + i\\sin(\\phi)$, the condition becomes:\n$$\n\\cos(\\phi) = 0\n$$\nThe solutions for $\\phi$ in the interval $[0, 2\\pi)$ are $\\phi = \\pi/2$ and $\\phi = 3\\pi/2$. The problem asks for the smallest positive value of $\\phi$. This value is $\\pi/2$.\nThe condition $\\mathbf{v}_0=\\mathbf{0}$ must also be met, but the question is about the phase $\\phi$.", "answer": "$$\\boxed{\\frac{\\pi}{2}}$$", "id": "2454725"}]}