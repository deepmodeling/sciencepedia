{"hands_on_practices": [{"introduction": "The core of any DFT-D method is the mathematical model used to estimate the dispersion energy. This first practice invites you to build a D3 dispersion correction model from its fundamental components. By coding the pairwise energy summation and the crucial Becke-Johnson damping function for a simplified model of a Guanine-Cytosine DNA base pair, you will gain a tangible understanding of how these corrections are implemented in practice [@problem_id:2455220]. This exercise will solidify your knowledge of the D3 formula and highlight the significant role that dispersion forces play in stabilizing vital biological structures.", "problem": "You will model the interaction energy of a guanine–cytosine (G–C) DNA base pair by combining a base density functional theory (DFT) binding energy with an empirical third-generation dispersion (D3) correction. The goal is to compute, for several parameter sets, the fraction of the total binding energy attributable to the D3 correction. Use the following self-contained model and data.\n\nAssume the total binding energy is given by\n$$\nE_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}},\n$$\nwhere $E_{\\text{DFT, base}}$ is the baseline DFT binding energy without dispersion and $E_{\\text{D3}}$ is the pairwise-additive dispersion energy. Model $E_{\\text{D3}}$ as\n$$\nE_{\\text{D3}} = - s_6 \\sum_{(i,j)} f_6(r_{ij}) \\frac{C_{6,ij}}{r_{ij}^6} - s_8 \\sum_{(i,j)} f_8(r_{ij}) \\frac{C_{8,ij}}{r_{ij}^8},\n$$\nwith Becke–Johnson-type damping functions\n$$\nf_n(r_{ij})=\\frac{1}{1 + 6 \\left(\\frac{r_{ij}}{a_1 R_{0,ij} + a_2}\\right)^{-\\alpha_n}},\n$$\nwhere $n \\in \\{6,8\\}$, $\\alpha_6=\\alpha_8=14$, and\n$$\nR_{0,ij}=\\sqrt{\\frac{C_{8,ij}}{C_{6,ij}}}.\n$$\nAll inter-fragment pair distances $r_{ij}$ are in ångströms, $C_{6,ij}$ has units $\\text{kJ mol}^{-1}\\ \\text{Å}^6$, $C_{8,ij}$ has units $\\text{kJ mol}^{-1}\\ \\text{Å}^8$, and all energies must be reported in $\\text{kJ mol}^{-1}$. The G–C base pair is represented in this model by the following $12$ inter-fragment atom pairs (indexed by $(i,j)$) with distances and dispersion coefficients:\n- Pair $1$: $r_{1}=3.0$, $C_{6,1}=2500$, $C_{8,1}=35000$.\n- Pair $2$: $r_{2}=3.2$, $C_{6,2}=2700$, $C_{8,2}=37800$.\n- Pair $3$: $r_{3}=3.5$, $C_{6,3}=3000$, $C_{8,3}=42000$.\n- Pair $4$: $r_{4}=3.8$, $C_{6,4}=3300$, $C_{8,4}=46200$.\n- Pair $5$: $r_{5}=4.2$, $C_{6,5}=3600$, $C_{8,5}=50400$.\n- Pair $6$: $r_{6}=4.5$, $C_{6,6}=4000$, $C_{8,6}=56000$.\n- Pair $7$: $r_{7}=5.0$, $C_{6,7}=4500$, $C_{8,7}=63000$.\n- Pair $8$: $r_{8}=5.5$, $C_{6,8}=5000$, $C_{8,8}=70000$.\n- Pair $9$: $r_{9}=6.0$, $C_{6,9}=5500$, $C_{8,9}=77000$.\n- Pair $10$: $r_{10}=6.5$, $C_{6,10}=6000$, $C_{8,10}=84000$.\n- Pair $11$: $r_{11}=7.0$, $C_{6,11}=6500$, $C_{8,11}=91000$.\n- Pair $12$: $r_{12}=7.5$, $C_{6,12}=7000$, $C_{8,12}=98000$.\n\nFor each test case described below, the program must compute $E_{\\text{D3}}$, then $E_{\\text{bind, total}}$, and finally the fraction\n$$\n\\phi=\\frac{\\lvert E_{\\text{D3}}\\rvert}{\\lvert E_{\\text{bind, total}}\\rvert},\n$$\nreported as a decimal (no percent sign). If a test case involves a uniform scaling of all distances, use $r_{ij}^{(\\text{scaled})}=\\lambda \\cdot r_{ij}$ with the given scale factor $\\lambda$. Angles are not involved. The final answers for all test cases must be expressed as dimensionless decimals rounded to exactly six digits after the decimal point.\n\nTest suite:\n- Case A (general case): $s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-65.0$, no distance scaling ($\\lambda=1.0$).\n- Case B (no $C_8$ term): $s_6=1.0$, $s_8=0.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-65.0$, no distance scaling ($\\lambda=1.0$).\n- Case C (purely dispersion-bound baseline): $s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=0.0$, no distance scaling ($\\lambda=1.0$).\n- Case D (stretched geometry): $s_6=1.0$, $s_8=1.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-50.0$, distance scaling $\\lambda=1.15$.\n- Case E (boundary with dispersion disabled): $s_6=0.0$, $s_8=0.0$, $a_1=1.0$, $a_2=0.0$, $E_{\\text{DFT, base}}=-60.0$, no distance scaling ($\\lambda=1.0$).\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of Cases A through E. Each result must be the decimal $\\phi$ for that case rounded to six digits after the decimal point. For example, the output must have the form \"[x_A,x_B,x_C,x_D,x_E]\".", "solution": "The problem as stated is valid. It is scientifically grounded in the principles of computational chemistry, specifically the empirical dispersion correction method known as DFT-D3. All necessary equations, constants, and data are provided, rendering the problem self-contained, well-posed, and free of ambiguity or contradiction. A unique, stable, and meaningful solution can be algorithmically determined. We shall now proceed with the derivation and computation.\n\nThe objective is to compute the fraction, $\\phi$, of the total binding energy attributable to the empirical dispersion correction for a model of a guanine–cytosine base pair. This fraction is defined as:\n$$\n\\phi = \\frac{\\lvert E_{\\text{D3}}\\rvert}{\\lvert E_{\\text{bind, total}}\\rvert}\n$$\nThe total binding energy, $E_{\\text{bind, total}}$, is given as the sum of a baseline Density Functional Theory (DFT) energy and the dispersion correction energy, $E_{\\text{D3}}$:\n$$\nE_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}}\n$$\nFor each test case, the value of $E_{\\text{DFT, base}}$ is provided. The central task is to calculate $E_{\\text{D3}}$ based on the provided model and data.\n\nThe D3 dispersion energy is formulated as a pairwise sum over all interacting atom pairs $(i,j)$, incorporating terms for dipole-dipole ($C_6$) and dipole-quadrupole ($C_8$) interactions:\n$$\nE_{\\text{D3}} = - s_6 \\sum_{(i,j)} f_6(r_{ij}) \\frac{C_{6,ij}}{r_{ij}^6} - s_8 \\sum_{(i,j)} f_8(r_{ij}) \\frac{C_{8,ij}}{r_{ij}^8}\n$$\nHere, $s_6$ and $s_8$ are global scaling parameters specific to the functional being corrected, provided in each test case. The summation extends over the $12$ specified inter-fragment atom pairs.\n\nTo prevent unphysical behavior at short interatomic distances (the so-called \"dispersion catastrophe\"), a damping function, $f_n(r_{ij})$, is applied to each term. The problem specifies a Becke–Johnson-type damping function of the form:\n$$\nf_n(r_{ij})=\\frac{1}{1 + 6 \\left(\\frac{r_{ij}}{a_1 R_{0,ij} + a_2}\\right)^{-\\alpha_n}}\n$$\nwhere $n \\in \\{6, 8\\}$. The parameters $a_1$ and $a_2$ modify the damping radius and are specified for each test case. The exponent $\\alpha_n$ controls the steepness of the damping; it is given as a constant $\\alpha_6 = \\alpha_8 = 14$. The characteristic damping radius, $R_{0,ij}$, is defined in terms of the dispersion coefficients:\n$$\nR_{0,ij} = \\sqrt{\\frac{C_{8,ij}}{C_{6,ij}}}\n$$\nAn analysis of the provided data for all $12$ pairs reveals that the ratio $\\frac{C_{8,ij}}{C_{6,ij}}$ is constant and equal to $14$. Therefore, $R_{0,ij} = \\sqrt{14}\\ \\text{Å}$ for all pairs $(i,j)$ in this model. Since $\\alpha_6 = \\alpha_8$, the damping functions $f_6(r_{ij})$ and $f_8(r_{ij})$ are identical for any given pair.\n\nThe computational procedure for each test case is as follows:\n1.  Retrieve the case-specific parameters: $s_6$, $s_8$, $a_1$, $a_2$, $E_{\\text{DFT, base}}$, and the distance scaling factor $\\lambda$.\n2.  Initialize the dispersion energy accumulator, $E_{\\text{D3}} = 0$.\n3.  Iterate through each of the $12$ atom pairs provided. For each pair $(i,j)$ with data ($r_{ij}$, $C_{6,ij}$, $C_{8,ij}$):\n    a. Apply the distance scaling: $r_{ij}^{\\text{scaled}} = \\lambda \\cdot r_{ij}$.\n    b. Calculate the damping radius $R_{0,ij} = \\sqrt{C_{8,ij}/C_{6,ij}} = \\sqrt{14}$.\n    c. Calculate the modified damping radius $R'_{0,ij} = a_1 R_{0,ij} + a_2$.\n    d. Calculate the value of the damping function $f_n(r_{ij}^{\\text{scaled}})$ using $\\alpha_n = 14$.\n    e. Compute the energy contributions from the $C_6$ and $C_8$ terms:\n    $$\n    E_{6}^{(i,j)} = -s_6 f_6(r_{ij}^{\\text{scaled}}) \\frac{C_{6,ij}}{(r_{ij}^{\\text{scaled}})^6}\n    $$\n    $$\n    E_{8}^{(i,j)} = -s_8 f_8(r_{ij}^{\\text{scaled}}) \\frac{C_{8,ij}}{(r_{ij}^{\\text{scaled}})^8}\n    $$\n    f. Add these contributions to the total dispersion energy: $E_{\\text{D3}} = E_{\\text{D3}} + E_{6}^{(i,j)} + E_{8}^{(i,j)}$.\n4.  After iterating through all pairs, the final $E_{\\text{D3}}$ is obtained.\n5.  Calculate the total binding energy: $E_{\\text{bind, total}} = E_{\\text{DFT, base}} + E_{\\text{D3}}$.\n6.  Compute the final fraction $\\phi = \\frac{\\lvert E_{\\text{D3}} \\rvert}{\\lvert E_{\\text{bind, total}} \\rvert}$. A special case arises if $E_{\\text{bind, total}} = 0$. In this problem's context (Case C), this occurs when $E_{\\text{DFT, base}} = 0$, leading to $E_{\\text{bind, total}} = E_{\\text{D3}}$, thus $\\phi = 1$ (since $E_{\\text{D3}} \\neq 0$). Another special case (Case E) has $s_6=s_8=0$, which makes $E_{\\text{D3}}=0$ and thus $\\phi=0$.\n7.  The result for $\\phi$ is rounded to six decimal places as required.\n\nThis procedure is systematically applied to each of the five test cases to generate the final list of results.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Calculates the fraction of total binding energy from D3 dispersion correction\n    for a model G-C DNA base pair across several test cases.\n    \"\"\"\n\n    # Define constants from the problem statement.\n    ALPHA_N = 14.0\n\n    # Define the 12 inter-fragment atom pairs with their data.\n    # Data is structured as (r_ij in Å, C_6,ij, C_8,ij).\n    # Units for C_6 are kJ mol^-1 Å^6 and for C_8 are kJ mol^-1 Å^8.\n    atom_pairs = [\n        (3.0, 2500.0, 35000.0), (3.2, 2700.0, 37800.0),\n        (3.5, 3000.0, 42000.0), (3.8, 3300.0, 46200.0),\n        (4.2, 3600.0, 50400.0), (4.5, 4000.0, 56000.0),\n        (5.0, 4500.0, 63000.0), (5.5, 5000.0, 70000.0),\n        (6.0, 5500.0, 77000.0), (6.5, 6000.0, 84000.0),\n        (7.0, 6500.0, 91000.0), (7.5, 7000.0, 98000.0)\n    ]\n\n    # Define the test cases from the problem statement.\n    # Data is structured as (s6, s8, a1, a2, E_DFT_base, lambda).\n    test_cases = [\n        # Case A: general case\n        (1.0, 1.0, 1.0, 0.0, -65.0, 1.0),\n        # Case B: no C8 term\n        (1.0, 0.0, 1.0, 0.0, -65.0, 1.0),\n        # Case C: purely dispersion-bound baseline\n        (1.0, 1.0, 1.0, 0.0, 0.0, 1.0),\n        # Case D: stretched geometry\n        (1.0, 1.0, 1.0, 0.0, -50.0, 1.15),\n        # Case E: boundary with dispersion disabled\n        (0.0, 0.0, 1.0, 0.0, -60.0, 1.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        s6, s8, a1, a2, e_dft_base, lam = case\n        \n        e_d3 = 0.0\n\n        # The loop calculates E_D3. If s6 and s8 are both zero, E_D3 remains zero.\n        if not (s6 == 0.0 and s8 == 0.0):\n            for r_ij, c6_ij, c8_ij in atom_pairs:\n                # Apply distance scaling factor lambda\n                r_scaled = lam * r_ij\n                \n                # Calculate the damping radius R_0,ij\n                r0_ij = np.sqrt(c8_ij / c6_ij)\n                \n                # Calculate the modified damping radius R'_0,ij\n                r0_prime = a1 * r0_ij + a2\n                \n                # The damping function f_n is identical for n=6 and n=8\n                # because alpha_6 = alpha_8.\n                ratio = r_scaled / r0_prime\n                f_n = 1.0 / (1.0 + 6.0 * np.power(ratio, -ALPHA_N))\n                \n                # Calculate dispersion energy terms for this pair\n                e6_term = -s6 * f_n * (c6_ij / np.power(r_scaled, 6))\n                e8_term = -s8 * f_n * (c8_ij / np.power(r_scaled, 8))\n                \n                # Accumulate the total D3 energy\n                e_d3 += (e6_term + e8_term)\n\n        # Calculate the total binding energy\n        e_bind_total = e_dft_base + e_d3\n        \n        # Calculate the fraction phi = |E_D3| / |E_bind,total|\n        # Handle potential division by zero, although it is not an issue for the given test cases.\n        if np.isclose(e_bind_total, 0.0):\n            # This occurs in Case C where E_DFT_base = 0.\n            # E_bind_total = E_D3, so phi = |E_D3|/|E_D3| = 1, as E_D3 is non-zero.\n            # If E_D3 were also zero, phi would be 0/0, which we define as 0.\n            phi = 1.0 if not np.isclose(e_d3, 0.0) else 0.0\n        else:\n            phi = abs(e_d3) / abs(e_bind_total)\n\n        # Append the result formatted to exactly six decimal places.\n        results.append(f\"{phi:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2455220"}, {"introduction": "Building a model is the first step; understanding its limitations is the mark of an expert. While empirical corrections are powerful, they can sometimes lead to unphysical artifacts if not applied with care. This thought experiment challenges you to diagnose a classic failure mode of early dispersion models: the spurious collapse of atoms into an unphysically short contact [@problem_id:2455224]. By dissecting how different damping functions and the inclusion of many-body terms prevent this \"steric collapse,\" you'll learn to think critically about the robustness of a computational method and the importance of choosing the right level of theory for your system.", "problem": "An atom-pairwise empirical dispersion correction for Density Functional Theory (DFT), such as the Grimme $D3$ scheme, augments a base exchange–correlation functional by adding an attractive dispersion energy that scales approximately as a sum of pairwise terms $-C_6/R^6$, multiplied by a short-range damping function. In the original “standard” $D3(0)$ implementation with so-called zero damping (denoted here as $D3(0)$), the short-range damping is relatively weak compared to Becke–Johnson (BJ) damping, and three-body Axilrod–Teller–Muto (ATM) terms are not included by default. Consider intramolecular nonbonded contacts that may be influenced by such corrections during geometry optimization. Assume the van der Waals radius of hydrogen is $1.2\\,\\text{\\AA}$, so the sum of two hydrogen van der Waals radii is $2.4\\,\\text{\\AA}$. For this problem, define “unphysically short” for a nonbonded $H\\cdots H$ contact as an optimized distance below $2.4\\,\\text{\\AA}$ in a neutral hydrocarbon lacking any special bonding motif (for example, no dihydrogen bonding or agostic interactions).\n\nWhich of the following hypothetical computational setups is most likely to lead to a spurious, unphysically short intramolecular $H\\cdots H$ contact after geometry optimization due to an overattractive dispersion correction?\n\nA. A linear, all-trans n-hexane conformation in vacuum with all terminal groups far apart, treated with $D3(\\text{BJ})$ (Becke–Johnson damping) including the Axilrod–Teller–Muto (ATM) three-body term; the shortest nonbonded $H\\cdots H$ separation at the start is greater than $4.0\\,\\text{\\AA}$.\n\nB. A folded “hairpin” n-hexane in vacuum where the two terminal methyl groups face each other such that a specific nonbonded $H\\cdots H$ separation is initially $2.2\\,\\text{\\AA}$; the optimization uses the standard $D3(0)$ pairwise correction (no three-body term) with a generalized-gradient base functional.\n\nC. An ortho-terphenyl molecule in vacuum with adjacent rings twisted by $60^\\circ$ to reduce steric crowding; the closest ortho $H\\cdots H$ separation at the start is $2.8\\,\\text{\\AA}$; the optimization uses $D3(\\text{BJ})$ including the Axilrod–Teller–Muto (ATM) three-body term.\n\nD. A cyclohexane chair in vacuum with no unusually close nonbonded contacts (all $H\\cdots H$ nonbonded separations at the start exceed $2.6\\,\\text{\\AA}$), treated with the $D4$ dispersion model with its charge-dependent $C_6$ coefficients.\n\nSelect the single best choice.", "solution": "The problem asks to identify the computational setup most likely to produce a spurious, unphysically short intramolecular $H\\cdots H$ contact due to an overattractive empirical dispersion correction. An \"unphysically short\" contact is defined as a distance below the sum of the van der Waals radii of two hydrogen atoms, which is given as $2.4\\,\\text{\\AA}$. This artifact arises when the attractive part of the model potential is too strong at short to medium range, overwhelming the natural steric repulsion and creating a false potential energy minimum at an unphysically small separation.\n\nWe must analyze the components of the dispersion correction models provided in the options.\n\nThe general form of the pairwise dispersion energy is:\n$$E_{\\text{disp}}^{(2)} = - \\sum_{A<B} s_6 \\frac{C_{6,AB}}{R_{AB}^6} f_{\\text{damp}}(R_{AB})$$\nwhere $C_{6,AB}$ is the dispersion coefficient for the atom pair $A,B$, $R_{AB}$ is the internuclear distance, $s_6$ is a global scaling factor, and $f_{\\text{damp}}(R_{AB})$ is a damping function that attenuates the correction at short range to prevent divergence and double-counting of correlation effects.\n\nThe key differences between the methods lie in the damping function $f_{\\text{damp}}$ and the inclusion of a three-body term $E_{\\text{disp}}^{(3)}$.\n\n1.  **Damping Functions: $D3(0)$ vs. $D3(\\text{BJ})$**\n    *   **$D3(0)$ (zero damping):** This scheme uses a damping function that becomes active only at very short distances. As stated in the problem, its damping is \"relatively weak.\" This means the attractive $-C_6/R^6$ term is less attenuated at separations near the van der Waals minimum. This makes the potential strongly attractive in this region, creating a higher risk of pulling atoms too close together, an artifact known as \"overbinding\" or \"steric collapse.\"\n    *   **$D3(\\text{BJ})$ (Becke–Johnson damping):** This scheme uses a more sophisticated damping function that activates more gradually and at longer distances. It provides a \"stiffer\" repulsive wall at short range, explicitly designed to prevent the unphysical collapse sometimes observed with weaker damping schemes like $D3(0)$. Therefore, $D3(\\text{BJ})$ is significantly less prone to causing over-attraction artifacts than $D3(0)$.\n\n2.  **Three-Body Term: Axilrod–Teller–Muto (ATM)**\n    *   The ATM term, $E_{\\text{disp}}^{(3)}$, accounts for non-additive three-body dispersion effects. For three atoms in a sterically crowded arrangement (e.g., a compressed triangle), this term is typically positive (repulsive). Its inclusion therefore counteracts the sum of pairwise attractive forces, preventing the system from becoming too compact. Omitting the ATM term in a sterically congested system removes this crucial repulsive contribution, increasing the risk of overbinding.\n\n3.  **$D4$ Model**\n    *   The $D4$ model is a more recent and physically refined successor to $D3$. It incorporates geometry-dependent charge information to calculate $C_6$ coefficients and utilizes an improved damping formalism. It is generally considered more robust and less prone to the artifacts of its predecessors.\n\n4.  **Initial Geometry**\n    *   An optimization is a search for a local minimum on the potential energy surface. The search starts from the initial geometry. If the initial nonbonded distance is already in a region where the model potential is pathologically over-attractive (e.g., just inside the sum of vdW radii), the optimizer is highly likely to follow the gradient to the spurious minimum. An initial distance of $2.2\\,\\text{\\AA}$ is a prime example. Conversely, if the initial contacts are far apart (e.g., $> 4.0\\,\\text{\\AA}$), the dispersion forces are very weak, and it is unlikely the optimization will lead to a drastically shortened contact.\n\nWith these principles, we evaluate each option.\n\n**A. A linear, all-trans n-hexane conformation in vacuum with all terminal groups far apart, treated with $D3(\\text{BJ})$ (Becke–Johnson damping) including the Axilrod–Teller–Muto (ATM) three-body term; the shortest nonbonded $H\\cdots H$ separation at the start is greater than $4.0\\,\\text{\\AA}$.**\nThis setup is the least likely to cause a problem. It uses the robust $D3(\\text{BJ})$ damping and includes the repulsive ATM term. Furthermore, the initial $H\\cdots H$ separation is very large ($> 4.0\\,\\text{\\AA}$), so there is no significant initial attractive force that would drive the formation of a short contact.\n**Verdict: Incorrect.**\n\n**B. A folded “hairpin” n-hexane in vacuum where the two terminal methyl groups face each other such that a specific nonbonded $H\\cdots H$ separation is initially $2.2\\,\\text{\\AA}$; the optimization uses the standard $D3(0)$ pairwise correction (no three-body term) with a generalized-gradient base functional.**\nThis setup combines all the risk factors for producing the artifact.\n1.  **Method:** It uses $D3(0)$, which has weak damping and is known to be prone to over-attraction at short-to-medium range.\n2.  **Three-Body Term:** The repulsive ATM term is not included, exacerbating the over-attraction from the pairwise $D3(0)$ term in the crowded hairpin geometry.\n3.  **Initial Geometry:** The starting $H\\cdots H$ distance is $2.2\\,\\text{\\AA}$, which is less than the vdW sum of $2.4\\,\\text{\\AA}$. This places the system directly in the region where the weak damping of $D3(0)$ makes the attractive dispersion term dominant over the steric repulsion from the base functional. The optimization is therefore very likely to proceed to a spurious minimum at an even shorter, unphysical distance.\nThis is the archetypal scenario for observing this particular failure mode of the $D3(0)$ method.\n**Verdict: Correct.**\n\n**C. An ortho-terphenyl molecule in vacuum with adjacent rings twisted by $60^\\circ$ to reduce steric crowding; the closest ortho $H\\cdots H$ separation at the start is $2.8\\,\\text{\\AA}$; the optimization uses $D3(\\text{BJ})$ including the Axilrod–Teller–Muto (ATM) three-body term.**\nThis setup uses a robust methodology. The $D3(\\text{BJ})$ damping and the included ATM term are specifically designed to handle sterically crowded systems like ortho-terphenyl correctly. The initial distance of $2.8\\,\\text{\\AA}$ is reasonable, and the robust correction scheme is expected to find a physically meaningful equilibrium distance, not collapse to an unphysical one.\n**Verdict: Incorrect.**\n\n**D. A cyclohexane chair in vacuum with no unusually close nonbonded contacts (all $H\\cdots H$ nonbonded separations at the start exceed $2.6\\,\\text{\\AA}$), treated with the $D4$ dispersion model with its charge-dependent $C_6$ coefficients.**\nThis setup is also very unlikely to cause the artifact. It uses the modern and robust $D4$ model, which is an improvement over D3. The initial geometry is standard and lacks any pre-existing steric clashes that would prime the system for collapse. The result of this calculation should be a standard, physically correct cyclohexane chair geometry.\n**Verdict: Incorrect.**\n\nBased on the analysis, option B presents the combination of a known problematic method ($D3(0)$ without the ATM term) and an initial geometry that is perfectly poised to expose the method's failure mode. It is therefore the setup most likely to lead to the described spurious result.", "answer": "$$\\boxed{B}$$", "id": "2455224"}, {"introduction": "The power of an empirical model lies in its ability to be applied to systems beyond the set it was trained on—a property known as transferability. This final practice delves into this advanced topic by asking you to quantify the difference between dispersion parameters trained for neutral molecules and a hypothetical set refit for charged systems [@problem_id:2455218]. You will implement a model with a different style of damping and apply a geometric-mean rule for combining atomic dispersion coefficients, skills that are directly relevant to modern force field development and gaining a deeper appreciation for the nuances of building a truly predictive model.", "problem": "You will implement a program to quantitatively assess the transferability of empirically fitted dispersion parameters from neutral organic molecules to charged amino acid dimers, within the framework of Density Functional Theory with empirical dispersion (DFT-D). Start from the established physical base that long-range dispersion interactions arise from correlated instantaneous dipoles and are well represented at leading orders by pairwise additive London terms of the form proportional to $C_6/R^6$ and $C_8/R^8$, where $C_6$ and $C_8$ are dispersion coefficients and $R$ is an interatomic separation. Use a physically reasonable short-range rational damping to avoid double counting with base Density Functional Theory at small $R$, and assume pairwise additivity across inter-fragment atom pairs. Do not assume environment-dependent coefficients; use element-resolved coefficients combined by a symmetric mixing rule.\n\nYour task is to:\n- Implement a dispersion energy model that, for a given dimer with a list of inter-fragment atom pairs $\\{(i,j)\\}$ at separations $R_{ij}$, computes the total dispersion correction $E_{\\mathrm{disp}}$ in kilojoules per mole by summing contributions from $C_6/R^6$ and $C_8/R^8$ terms with rational short-range damping applied to each term.\n- Use geometric-mean combination rules for element-resolved dispersion coefficients: for elements $A$ and $B$, $C_6^{AB} = \\sqrt{C_6^A C_6^B}$ and $C_8^{AB} = \\sqrt{C_8^A C_8^B}$.\n- Use the following two parameter sets, interpreted as a neutral-organics-trained set and a hypothetical refit targeted toward charged systems, respectively:\n  - Neutral-trained parameters: $s_6 = 1.0$, $s_8 = 1.2$, $a_1 = 0.40$, $a_2 = 4.50$.\n  - Charged-system refit: $s_6 = 1.0$, $s_8 = 0.9$, $a_1 = 0.35$, $a_2 = 5.00$.\n- Use the following element-resolved dispersion coefficients in atomic units (Hartree-Bohr powers): for element Hydrogen ($\\mathrm{H}$): $C_6^{\\mathrm{H}} = 6.5$, $C_8^{\\mathrm{H}} = 124$; Carbon ($\\mathrm{C}$): $C_6^{\\mathrm{C}} = 46.6$, $C_8^{\\mathrm{C}} = 1560$; Nitrogen ($\\mathrm{N}$): $C_6^{\\mathrm{N}} = 24.2$, $C_8^{\\mathrm{N}} = 900$; Oxygen ($\\mathrm{O}$): $C_6^{\\mathrm{O}} = 15.6$, $C_8^{\\mathrm{O}} = 650$.\n- Units and constants: interatomic separations $R_{ij}$ will be provided in Angstroms and must be converted to Bohr using $1\\,\\text{\\AA} = 1.889726125\\,\\text{Bohr}$. The total energy must be reported in kilojoules per mole, using $1\\ E_h = 2625.49962\\ \\text{kJ mol}^{-1}$.\n\nFor each dimer, compute two dispersion energies, $E_{\\mathrm{disp}}^{\\text{neutral}}$ using the neutral-trained parameters and $E_{\\mathrm{disp}}^{\\text{charged}}$ using the charged-system refit. For each test case, output the absolute difference $\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$ in kilojoules per mole, rounded to $5$ decimal places.\n\nTest suite (each entry is a list of cross-fragment pairs, where each pair is given as $(\\text{element of atom } i, \\text{element of atom } j, R_{ij}\\ \\text{in}\\ \\text{\\AA}))$:\n\n- Case $1$ (Lysine ammonium $\\text{NH}_3^+$ with glutamate carboxylate $\\text{COO}^-$, close salt-bridge contact):\n  - Pairs:\n    - $(\\mathrm{H}, \\mathrm{O}, 2.1)$, $(\\mathrm{H}, \\mathrm{O}, 2.3)$, $(\\mathrm{H}, \\mathrm{O}, 2.5)$,\n    - $(\\mathrm{N}, \\mathrm{O}, 2.9)$, $(\\mathrm{N}, \\mathrm{O}, 3.1)$,\n    - $(\\mathrm{C}, \\mathrm{O}, 3.2)$, $(\\mathrm{C}, \\mathrm{O}, 3.6)$,\n    - $(\\mathrm{C}, \\mathrm{C}, 4.0)$.\n\n- Case $2$ (Arginine guanidinium $\\text{C(NH}_2)_3^+$ with aspartate $\\text{COO}^-$, close contact):\n  - Pairs:\n    - $(\\mathrm{H}, \\mathrm{O}, 2.0)$, $(\\mathrm{H}, \\mathrm{O}, 2.2)$,\n    - $(\\mathrm{N}, \\mathrm{O}, 2.8)$, $(\\mathrm{N}, \\mathrm{O}, 3.0)$, $(\\mathrm{N}, \\mathrm{O}, 3.2)$,\n    - $(\\mathrm{C}, \\mathrm{O}, 3.3)$,\n    - $(\\mathrm{C}, \\mathrm{N}, 3.5)$.\n\n- Case $3$ (Lysine ammonium with aspartate at long separation):\n  - Pairs:\n    - $(\\mathrm{H}, \\mathrm{O}, 7.0)$, $(\\mathrm{H}, \\mathrm{O}, 7.5)$,\n    - $(\\mathrm{N}, \\mathrm{O}, 8.0)$,\n    - $(\\mathrm{C}, \\mathrm{O}, 7.2)$,\n    - $(\\mathrm{C}, \\mathrm{C}, 8.0)$.\n\n- Case $4$ (Arginine guanidinium with glutamate, compressed):\n  - Pairs:\n    - $(\\mathrm{H}, \\mathrm{O}, 2.0)$, $(\\mathrm{H}, \\mathrm{O}, 2.0)$, $(\\mathrm{H}, \\mathrm{O}, 2.1)$,\n    - $(\\mathrm{N}, \\mathrm{O}, 2.6)$, $(\\mathrm{N}, \\mathrm{O}, 2.7)$,\n    - $(\\mathrm{C}, \\mathrm{O}, 3.0)$,\n    - $(\\mathrm{C}, \\mathrm{N}, 3.1)$.\n\n- Case $5$ (Lysine ammonium with arginine guanidinium, like-charge dimer at moderate separation):\n  - Pairs:\n    - $(\\mathrm{H}, \\mathrm{H}, 6.5)$,\n    - $(\\mathrm{N}, \\mathrm{N}, 6.0)$,\n    - $(\\mathrm{N}, \\mathrm{H}, 5.5)$,\n    - $(\\mathrm{C}, \\mathrm{N}, 6.2)$.\n\nAngle units are not involved in this problem. All distances are to be treated as straight-line separations in Angstroms as given.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (for example, $[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4,\\text{result}_5]$), where each $\\text{result}_k$ is the absolute difference $\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$ for case $k$ in $\\mathrm{kJ\\,mol^{-1}}$, rounded to $5$ decimal places.", "solution": "The problem requires the implementation of a pairwise-additive empirical dispersion energy model, commonly used in conjunction with Density Functional Theory (DFT-D), to assess the transferability of parameters between neutral and charged chemical systems. The problem statement is validated as scientifically grounded, well-posed, and objective. It provides all necessary data, constants, and computational tasks, although it omits the explicit functional form of the damping function. However, the provided parameters, specifically $a_1$ and $a_2$, strongly and uniquely imply a rational damping scheme of the form popularized by Grimme and coworkers in the D4 dispersion model. A competent student of the field is expected to recognize this form. I will proceed under this well-justified inference.\n\nThe total dispersion energy, $E_{\\mathrm{disp}}$, is calculated as a sum over all specified inter-fragment atom pairs $\\{i,j\\}$. The contribution from each pair is given by the sum of damped $C_6/R^6$ and $C_8/R^8$ terms. The energy expression is:\n\n$$E_{\\mathrm{disp}} = \\sum_{\\{i,j\\}} \\Delta E_{ij}$$\n\nwhere $\\Delta E_{ij}$ is the interaction energy for a single pair of atoms $i$ and $j$, separated by a distance $R_{ij}$. This term includes scaling parameters, $s_6$ and $s_8$, and a rational damping function to prevent singularities at small $R_{ij}$ and to avoid double-counting of correlation effects already captured by the underlying DFT functional. The specific form for $\\Delta E_{ij}$ is:\n\n$$\n\\Delta E_{ij} = - \\left( s_6 \\frac{C_6^{ij}}{R_{ij}^6} f_{\\mathrm{damp},6}(R_{ij}) + s_8 \\frac{C_8^{ij}}{R_{ij}^8} f_{\\mathrm{damp},8}(R_{ij}) \\right)\n$$\n\nThe problem describes a rational damping function. Based on the provided parameters $a_1$ and $a_2$, this function is inferred to be:\n\n$$\nf_{\\mathrm{damp},n}(R_{ij}) = \\frac{R_{ij}^n}{R_{ij}^n + (R_{thr,ij})^n}, \\quad \\text{for } n \\in \\{6, 8\\}\n$$\n\nwhere $R_{thr,ij}$ is a damping radius dependent on the atomic species. Substituting this into the energy expression yields a numerically stable form:\n\n$$\n\\Delta E_{ij} = - \\left( s_6 \\frac{C_6^{ij}}{R_{ij}^6 + (R_{thr,ij})^6} + s_8 \\frac{C_8^{ij}}{R_{ij}^8 + (R_{thr,ij})^8} \\right)\n$$\n\nThe damping radius $R_{thr,ij}$ is calculated as:\n\n$$\nR_{thr,ij} = a_1 R_{0,ij} + a_2\n$$\n\nHere, $a_1$ is a dimensionless parameter and $a_2$ is a parameter with units of length. The characteristic radius, $R_{0,ij}$, is derived from the dispersion coefficients:\n\n$$\nR_{0,ij} = \\sqrt{\\frac{C_8^{ij}}{C_6^{ij}}}\n$$\n\nAll calculations must be performed in atomic units (Hartree for energy, Bohr for distance). The provided interatomic distances $R_{ij}$ are in Angstroms ($\\text{\\AA}$) and must be converted using the constant $1\\,\\text{\\AA} = 1.889726125\\,\\text{Bohr}$. The parameters $a_2$ are assumed to be in units of Bohr. The dispersion coefficients for a heteroatomic pair, $C_n^{ij}$, are calculated using a geometric mean combining rule from the homonuclear atomic coefficients $C_n^i$ and $C_n^j$:\n\n$$\nC_6^{ij} = \\sqrt{C_6^i C_6^j}\n$$\n$$\nC_8^{ij} = \\sqrt{C_8^i C_8^j}\n$$\n\nThe atomic coefficients are provided in atomic units (Hartree-Bohr powers):\n-   Hydrogen ($\\mathrm{H}$): $C_6^{\\mathrm{H}} = 6.5$, $C_8^{\\mathrm{H}} = 124$\n-   Carbon ($\\mathrm{C}$): $C_6^{\\mathrm{C}} = 46.6$, $C_8^{\\mathrm{C}} = 1560$\n-   Nitrogen ($\\mathrm{N}$): $C_6^{\\mathrm{N}} = 24.2$, $C_8^{\\mathrm{N}} = 900$\n-   Oxygen ($\\mathrm{O}$): $C_6^{\\mathrm{O}} = 15.6$, $C_8^{\\mathrm{O}} = 650$\n\nTwo sets of damping parameters are to be used:\n1.  Neutral-trained: $s_6 = 1.0$, $s_8 = 1.2$, $a_1 = 0.40$, $a_2 = 4.50$.\n2.  Charged-system refit: $s_6 = 1.0$, $s_8 = 0.9$, $a_1 = 0.35$, $a_2 = 5.00$.\n\nThe algorithm for each test case is as follows:\n1.  Initialize two total energy accumulators, $E_{\\mathrm{disp}}^{\\text{neutral}}$ and $E_{\\mathrm{disp}}^{\\text{charged}}$, to zero.\n2.  For each atom pair $(\\text{element } i, \\text{element } j, R_{ij})$ in the test case:\n    a. Convert $R_{ij}$ from Angstroms to Bohr.\n    b. Calculate the combined coefficients $C_6^{ij}$ and $C_8^{ij}$.\n    c. Calculate the characteristic radius $R_{0,ij}$.\n    d. For each parameter set ('neutral' and 'charged'):\n        i.  Calculate the damping radius $R_{thr,ij}$.\n        ii. Calculate the pair energy contribution $\\Delta E_{ij}$ using the corresponding parameters.\n        iii. Add this contribution to the respective total energy accumulator.\n3.  After iterating through all pairs, the total energies $E_{\\mathrm{disp}}^{\\text{neutral}}$ and $E_{\\mathrm{disp}}^{\\text{charged}}$ are in Hartrees. Convert both to kilojoules per mole using the constant $1\\,E_h = 2625.49962\\,\\mathrm{kJ\\,mol^{-1}}$.\n4.  Compute the absolute difference: $\\lvert E_{\\mathrm{disp}}^{\\text{neutral}} - E_{\\mathrm{disp}}^{\\text{charged}} \\rvert$. This value is the result for the test case.\n\nThis procedure is executed for all five test cases provided. The final output is an array of these absolute differences, rounded to five decimal places.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the absolute difference in DFT-D dispersion energy between two\n    parameter sets for several molecular dimer test cases.\n    \"\"\"\n\n    # --- Givens from the problem statement ---\n\n    # Physical constants\n    BOHR_PER_ANGSTROM = 1.889726125\n    KJPERMOL_PER_HARTREE = 2625.49962\n\n    # Element-resolved dispersion coefficients in atomic units (Hartree-Bohr powers)\n    C_COEFFS = {\n        'H': {'C6': 6.5, 'C8': 124.0},\n        'C': {'C6': 46.6, 'C8': 1560.0},\n        'N': {'C6': 24.2, 'C8': 900.0},\n        'O': {'C6': 15.6, 'C8': 650.0},\n    }\n\n    # Parameter sets\n    PARAMS_NEUTRAL = {'s6': 1.0, 's8': 1.2, 'a1': 0.40, 'a2': 4.50}\n    PARAMS_CHARGED = {'s6': 1.0, 's8': 0.9, 'a1': 0.35, 'a2': 5.00}\n\n    # Test suite: list of lists of pairs (elem1, elem2, distance in Angstroms)\n    test_cases = [\n        # Case 1: Lys-NH3+ /// Glu-COO- (close)\n        [('H', 'O', 2.1), ('H', 'O', 2.3), ('H', 'O', 2.5), ('N', 'O', 2.9), \n         ('N', 'O', 3.1), ('C', 'O', 3.2), ('C', 'O', 3.6), ('C', 'C', 4.0)],\n        # Case 2: Arg-Guan+ /// Asp-COO- (close)\n        [('H', 'O', 2.0), ('H', 'O', 2.2), ('N', 'O', 2.8), ('N', 'O', 3.0),\n         ('N', 'O', 3.2), ('C', 'O', 3.3), ('C', 'N', 3.5)],\n        # Case 3: Lys-NH3+ /// Asp-COO- (long separation)\n        [('H', 'O', 7.0), ('H', 'O', 7.5), ('N', 'O', 8.0), ('C', 'O', 7.2),\n         ('C', 'C', 8.0)],\n        # Case 4: Arg-Guan+ /// Glu-COO- (compressed)\n        [('H', 'O', 2.0), ('H', 'O', 2.0), ('H', 'O', 2.1), ('N', 'O', 2.6),\n         ('N', 'O', 2.7), ('C', 'O', 3.0), ('C', 'N', 3.1)],\n        # Case 5: Lys-NH3+ /// Arg-Guan+ (like-charge)\n        [('H', 'H', 6.5), ('N', 'N', 6.0), ('N', 'H', 5.5), ('C', 'N', 6.2)],\n    ]\n\n    # --- Core Logic ---\n\n    def calculate_dispersion_energy(pairs, params):\n        \"\"\"\n        Calculates the total dispersion energy for a list of atom pairs\n        using a given set of DFT-D parameters.\n        \n        Args:\n            pairs (list): A list of tuples, each representing an atom pair\n                          (element1_str, element2_str, distance_in_angstrom).\n            params (dict): A dictionary of parameters (s6, s8, a1, a2).\n\n        Returns:\n            float: The total dispersion energy in Hartrees.\n        \"\"\"\n        total_energy_hartree = 0.0\n        \n        s6, s8, a1, a2 = params['s6'], params['s8'], params['a1'], params['a2']\n        \n        for elem1, elem2, r_angstrom in pairs:\n            # Convert distance to Bohr\n            r_bohr = r_angstrom * BOHR_PER_ANGSTROM\n            \n            # Get atomic coefficients\n            c6_1, c8_1 = C_COEFFS[elem1]['C6'], C_COEFFS[elem1]['C8']\n            c6_2, c8_2 = C_COEFFS[elem2]['C6'], C_COEFFS[elem2]['C8']\n            \n            # Apply geometric mean combination rule\n            c6_12 = np.sqrt(c6_1 * c6_2)\n            c8_12 = np.sqrt(c8_1 * c8_2)\n            \n            # Calculate characteristic radius\n            r0_12 = np.sqrt(c8_12 / c6_12)\n            \n            # Calculate damping threshold radius\n            r_thr = a1 * r0_12 + a2\n            \n            # Calculate energy contribution using rational damping form\n            e6_term = s6 * c6_12 / (r_bohr**6 + r_thr**6)\n            e8_term = s8 * c8_12 / (r_bohr**8 + r_thr**8)\n            \n            total_energy_hartree -= (e6_term + e8_term)\n            \n        return total_energy_hartree\n\n    # --- Main Execution Loop ---\n\n    results = []\n    for case_pairs in test_cases:\n        # Calculate energy for neutral-trained parameters\n        e_neutral_hartree = calculate_dispersion_energy(case_pairs, PARAMS_NEUTRAL)\n        e_neutral_kjmol = e_neutral_hartree * KJPERMOL_PER_HARTREE\n        \n        # Calculate energy for charged-system parameters\n        e_charged_hartree = calculate_dispersion_energy(case_pairs, PARAMS_CHARGED)\n        e_charged_kjmol = e_charged_hartree * KJPERMOL_PER_HARTREE\n        \n        # Calculate the absolute difference and format the result\n        diff = abs(e_neutral_kjmol - e_charged_kjmol)\n        results.append(f\"{diff:.5f}\")\n\n    # Print the final result in the specified format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2455218"}]}