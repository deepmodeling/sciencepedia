{"hands_on_practices": [{"introduction": "The process of translation relies on a fundamental rule: the messenger RNA (mRNA) sequence is read in sequential, non-overlapping groups of three nucleotides called codons. The starting point of this grouping defines the \"reading frame,\" and a disruption to it can scramble the entire genetic message. This practice [@problem_id:1528639] explores the classic concept of a frameshift mutation, challenging you to predict how a single nucleotide insertion, followed by a nearby deletion, affects the final protein product. Mastering this concept is crucial for understanding the impact of genetic mutations and the underlying logic of the genetic code.", "problem": "A hypothetical bacterial gene, *enzY*, encodes a catalytic enzyme essential for metabolizing a specific sugar. The fully functional enzyme is a single polypeptide chain of 300 amino acids.\n\nA researcher creates a mutant strain, designated Mutant A, which is unable to grow on media containing only this sugar. DNA sequencing of Mutant A reveals that a single guanine (G) nucleotide has been inserted into the coding sequence of the *enzY* gene immediately after the 30th nucleotide.\n\nSubsequently, the researcher exposes a population of Mutant A to a mutagenic agent and selects for \"revertant\" strains that have regained the ability to metabolize the sugar, even if not as efficiently as the original wild-type strain. One such strain, designated Mutant B, is isolated. Sequencing of the *enzY* gene in Mutant B reveals that the original guanine insertion is still present. However, a new, second mutation has occurred: a single nucleotide deletion at the position corresponding to nucleotide 46 in the original wild-type sequence.\n\nBased on this information and your understanding of the process of translation of messenger Ribonucleic Acid (mRNA), which of the following statements most accurately describes the EnzY protein produced in the Mutant B strain compared to the wild-type protein?\n\nA. The protein will have the same N-terminal sequence as the wild-type, followed by a short segment of incorrect amino acids, and then the C-terminal sequence will be identical to the wild-type.\n\nB. The protein will be identical to the wild-type protein because the effects of the insertion and the deletion completely cancel each other out.\n\nC. The protein will be severely truncated and non-functional because the insertion mutation introduces a premature stop codon that is not suppressed by the downstream deletion.\n\nD. The protein will differ from the wild-type by only a single amino acid substitution.\n\nE. The protein will have a completely different amino acid sequence from the position of the first insertion through to its C-terminus.", "solution": "Translation reads mRNA in non-overlapping codons of length $3$, so each amino acid is encoded by a triplet of nucleotides. A polypeptide of $300$ amino acids corresponds to $300 \\times 3 = 900$ coding nucleotides (excluding the stop codon). In the wild-type gene, codon $k$ uses nucleotides $3k-2, 3k-1, 3k$.\n\nThe single-nucleotide insertion in Mutant A occurs immediately after nucleotide $30$. Since $30 \\equiv 0 \\pmod{3}$, this insertion happens exactly at a codon boundary (after codon $10$). A single-nucleotide insertion shifts the reading frame by $+1$ from that point forward, so in Mutant A the first $10$ amino acids (encoded by nucleotides $1$ through $30$) are unchanged, and the reading frame from codon $11$ onward is altered (frameshift), generally producing a run of incorrect amino acids and often an early stop codon.\n\nIn Mutant B, the original insertion remains, but there is an additional single-nucleotide deletion at the position corresponding to nucleotide $46$ in the wild-type sequence. Since $45 \\equiv 0 \\pmod{3}$, nucleotide $46$ is the first base of wild-type codon $16$ (wild-type codons: $11$ uses $31$–$33$, $12$ uses $34$–$36$, $13$ uses $37$–$39$, $14$ uses $40$–$42$, $15$ uses $43$–$45$, $16$ uses $46$–$48$). A single-nucleotide deletion shifts the reading frame by $-1$ from that point forward. Therefore, the $+1$ phase induced by the insertion (after nucleotide $30$) is exactly cancelled by the $-1$ phase induced by the deletion (at nucleotide $46$), restoring the original reading frame downstream of the deletion.\n\nTo see the consequences for the amino-acid sequence, compare codon groupings before and after the two mutations. After the insertion (but before the deletion), codons realign as:\n- Wild-type codon $11$: $31$–$33$ becomes, in the shifted frame, $(\\text{inserted base})$–$31$–$32$;\n- Wild-type codon $12$: $34$–$36$ becomes $33$–$35$; and so on, until the region spanning wild-type nucleotides $31$ through $46$ is translated in the wrong frame.\n\nDeleting nucleotide $46$ in Mutant B returns the phase to the original frame immediately downstream of the deletion, so codons fully downstream (beginning at wild-type codon $17$, which is $49$–$51$) match the wild-type codons exactly. Consequently:\n- The N-terminus (first $10$ amino acids) is identical to wild-type (no change before nucleotide $31$).\n- The segment translated from the insertion point up to and including the codon that spans the deletion site is in the wrong frame and thus encodes a short run of incorrect amino acids.\n- From the first codon fully downstream of the deletion (from wild-type codon $17$ onward), the reading frame and codons are restored to wild-type, yielding an identical C-terminal sequence.\n\nTherefore, the protein in Mutant B will have the same N-terminal sequence as wild-type, then a short stretch of altered amino acids between the insertion and deletion sites, followed by a C-terminal sequence that is identical to wild-type. This matches option A and rules out B (not identical overall), C (not severely truncated; the frame is restored), D (more than a single substitution occurs in the frameshifted segment), and E (not completely different to the C-terminus because the frame is restored).", "answer": "$$\\boxed{A}$$", "id": "1528639"}, {"introduction": "While we often learn a single, \"standard\" genetic code, the book of life contains some fascinating dialects. Different organisms and even organelles can use slightly different mappings of codons to amino acids. This exercise [@problem_id:1528611] delves into one of the most prominent examples: the variant genetic code used in human mitochondria. By comparing how a specific mutation is interpreted by cytoplasmic versus mitochondrial ribosomes, you will gain a deeper appreciation for the non-universality of the genetic code and its importance in bioinformatics and molecular medicine.", "problem": "A researcher is studying a human metabolic enzyme that is encoded by a nuclear gene, translated in the cytoplasm, and subsequently imported into the mitochondria to perform its function. The wild-type (WT) version of this enzyme is a single polypeptide chain of 380 amino acids. A crucial tryptophan (Trp) residue at position 150 is essential for its catalytic activity.\n\nIn a patient with a metabolic disorder, genetic sequencing reveals a single-nucleotide polymorphism (SNP) in this gene. The SNP results in a single base change in the messenger RNA (mRNA) transcript, altering the codon for the amino acid at position 150 from UGG in the WT to UGA in the patient.\n\nTo investigate the direct consequences of this mutation on protein synthesis, the researcher prepares two separate *in vitro* translation systems.\n1.  **System C:** Contains purified human cytoplasmic ribosomes and all necessary translation factors from the cytoplasm.\n2.  **System M:** Contains purified human mitochondrial ribosomes and all necessary translation factors from the mitochondria.\n\nThe patient-derived mutant mRNA is introduced into both systems. Assume that translation initiates correctly and proceeds at a normal rate in both setups.\n\nYou are given the following information about the relevant genetic codes:\n- In the standard genetic code used by cytoplasmic ribosomes, the codon UGG specifies the amino acid Tryptophan, and the codon UGA is a termination (stop) codon.\n- In the human mitochondrial genetic code, both UGG and UGA specify the amino acid Tryptophan.\n\nBased on this information, predict the primary polypeptide product that will be synthesized in System C and System M. Choose the option that correctly describes the outcomes.\n\nA. System C: A truncated polypeptide of 149 amino acids. System M: A full-length polypeptide of 380 amino acids.\n\nB. System C: A full-length polypeptide of 380 amino acids. System M: A truncated polypeptide of 149 amino acids.\n\nC. Both systems will produce a truncated polypeptide of 149 amino acids.\n\nD. Both systems will produce a full-length polypeptide of 380 amino acids.\n\nE. System C: No polypeptide will be produced due to immediate degradation. System M: A full-length polypeptide of 380 amino acids.", "solution": "Define the coding context. Let the wild-type polypeptide length be $L=380$ amino acids, and let the codon position of interest be $p=150$. The mutation changes the codon at position $p$ from UGG (Tryptophan) to UGA in the mRNA.\n\nUse the genetic code mappings:\n- Cytoplasmic (standard) code: $g_{C}(\\text{UGG})=\\text{Trp}$ and $g_{C}(\\text{UGA})=\\text{Stop}$.\n- Human mitochondrial code: $g_{M}(\\text{UGG})=\\text{Trp}$ and $g_{M}(\\text{UGA})=\\text{Trp}$.\n\nApply translation termination logic. In any translation system, when a stop codon is encountered, a release factor binds and catalyzes hydrolysis of the peptidyl-tRNA, terminating elongation. Therefore, if a stop codon is at position $p$, the nascent chain contains exactly the amino acids from positions $1$ through $p-1$, hence the product length is\n$$\nL_{\\text{trunc}}=p-1.\n$$\n\nAnalyze System C (cytoplasmic ribosomes). At position $p=150$, the codon is UGA, and under the standard code $g_{C}(\\text{UGA})=\\text{Stop}$. Thus translation terminates at position $p$, yielding\n$$\nL_{C}=p-1=150-1=149,\n$$\ni.e., a truncated polypeptide of 149 amino acids.\n\nAnalyze System M (mitochondrial ribosomes). At position $p=150$, the codon is UGA, and under the human mitochondrial code $g_{M}(\\text{UGA})=\\text{Trp}$. Therefore, elongation proceeds past position $p$ without termination, continuing until the authentic stop codon at the end of the coding sequence. Hence the product is full-length:\n$$\nL_{M}=L=380.\n$$\n\nMap to the provided options. The outcome is: System C produces a truncated polypeptide of 149 amino acids, and System M produces a full-length polypeptide of 380 amino acids, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1528611"}, {"introduction": "Moving from the mechanics of a single gene to genome-wide patterns, we encounter the phenomenon of codon usage bias—the observation that synonymous codons are not used with equal frequency. This bias can be a faint signal of natural selection acting on translational efficiency, but it is often obscured by stronger confounding factors like regional mutation patterns (e.g., local GC content). This advanced bioinformatics exercise [@problem_id:2436458] equips you with a powerful statistical tool, the Cochran–Mantel–Haenszel test, to disentangle these effects. You will learn how to perform a stratified analysis to determine if a gene family exhibits significant codon preference, a core skill for anyone studying molecular evolution and genomics.", "problem": "You are given a question in computational biology and bioinformatics about translation and codon usage. Consider two synonymous codon categories across twofold-degenerate sites: those ending with guanine or cytosine at the third codon position (GC3) and those ending with adenine or thymine at the third codon position (AT3). For a specific gene family and for the genomic background (the rest of the genome), you are provided counts per stratum of local guanine-cytosine content (GC). You must determine whether the codon usage of the gene family deviates significantly from the genomic background after controlling for local GC. Formally, for each stratum indexed by $k \\in \\{1,\\dots,K\\}$, consider a $2 \\times 2$ table with row 1 corresponding to the gene family and row 2 corresponding to the genomic background, and with column 1 corresponding to GC3 and column 2 corresponding to AT3. Let $a_k$ be the count for the gene family in GC3, $b_k$ the count for the gene family in AT3, $c_k$ the count for the background in GC3, and $d_k$ the count for the background in AT3, with stratum size $n_k = a_k + b_k + c_k + d_k$. The null hypothesis is that, conditional on each stratum $k$, the distribution of GC3 versus AT3 in the gene family equals that in the background, interpreted as a common odds ratio equal to $1$ across strata. You must test this hypothesis at significance level $\\alpha = 0.05$ and output, for each test case, an integer decision: output $1$ if you reject the null hypothesis and output $0$ otherwise.\n\nUse the following test suite. Each test case consists of $K$ strata. For each stratum $k$, you are given the local GC as a decimal fraction $g_k \\in [0,1]$ (for documentation; the hypothesis test must control for strata but does not require $g_k$ numerically), and the counts $(a_k,b_k,c_k,d_k)$ defined above. All counts are nonnegative integers.\n\nTest case A (general case with three strata):\n- Stratum $k=1$: $g_1 = 0.30$, $a_1 = 40$, $b_1 = 60$, $c_1 = 120$, $d_1 = 280$.\n- Stratum $k=2$: $g_2 = 0.50$, $a_2 = 120$, $b_2 = 80$, $c_2 = 200$, $d_2 = 200$.\n- Stratum $k=3$: $g_3 = 0.70$, $a_3 = 98$, $b_3 = 22$, $c_3 = 350$, $d_3 = 150$.\n\nTest case B (null-consistent case with three strata):\n- Stratum $k=1$: $g_1 = 0.30$, $a_1 = 30$, $b_1 = 70$, $c_1 = 60$, $d_1 = 140$.\n- Stratum $k=2$: $g_2 = 0.50$, $a_2 = 50$, $b_2 = 50$, $c_2 = 150$, $d_2 = 150$.\n- Stratum $k=3$: $g_3 = 0.70$, $a_3 = 35$, $b_3 = 15$, $c_3 = 210$, $d_3 = 90$.\n\nTest case C (edge case with small counts and zero cells, two strata):\n- Stratum $k=1$: $g_1 = 0.20$, $a_1 = 0$, $b_1 = 5$, $c_1 = 1$, $d_1 = 9$.\n- Stratum $k=2$: $g_2 = 0.80$, $a_2 = 5$, $b_2 = 0$, $c_2 = 9$, $d_2 = 1$.\n\nYour program must, for each test case independently, conduct a valid hypothesis test of the stated null hypothesis that controls for the strata and produces the decision at significance level $\\alpha = 0.05$. The final output format must be a single line containing a comma-separated list of the decisions in the order A, B, C enclosed in square brackets, for example, [$1$,$0$,$0$].", "solution": "We formalize the problem using contingency tables and conditional inference. Translation involves mapping codons to amino acids. When comparing codon usage between a gene family and the genomic background, a correct comparison should be restricted to synonymous variability, here captured as GC3 versus AT3 among twofold-degenerate sites. Local guanine-cytosine (GC) content can confound codon usage because GC-biased regions may prefer GC-ending codons independent of any family-specific selection. Therefore, the statistical test must control for local GC by conditioning on strata defined by local GC.\n\nFor each stratum indexed by $k \\in \\{1,\\dots,K\\}$, define the $2 \\times 2$ table\n$$\n\\begin{array}{c|cc}\n & \\text{GC3} & \\text{AT3} \\\\\n\\hline\n\\text{Family} & a_k & b_k \\\\\n\\text{Background} & c_k & d_k \\\\\n\\end{array}\n$$\nwith row totals $n_{1k} = a_k + b_k$, $n_{2k} = c_k + d_k$, column totals $m_{1k} = a_k + c_k$, $m_{2k} = b_k + d_k$, and grand total $n_k = n_{1k} + n_{2k} = a_k + b_k + c_k + d_k$.\n\nUnder the null hypothesis that the conditional distributions match in every stratum with a common odds ratio equal to $1$, and conditioning on the fixed row and column totals in each stratum, the distribution of $a_k$ is hypergeometric with expectation and variance:\n$$\n\\mathbb{E}[a_k] = \\frac{n_{1k} m_{1k}}{n_k}, \\quad \\mathrm{Var}(a_k) = \\frac{n_{1k} n_{2k} m_{1k} m_{2k}}{n_k^2 (n_k - 1)}.\n$$\nA principled stratified test that aggregates evidence across strata is the Cochran–Mantel–Haenszel (CMH) statistic, derived from first principles by summing the centered counts and scaling by the variance under the hypergeometric model:\n$$\nX^2_{\\mathrm{CMH}} = \\frac{\\left(\\sum_{k=1}^{K} (a_k - \\mathbb{E}[a_k])\\right)^2}{\\sum_{k=1}^{K} \\mathrm{Var}(a_k)}.\n$$\nUnder the null, for sufficiently large $n_k$, $X^2_{\\mathrm{CMH}}$ is approximately chi-square distributed with $1$ degree of freedom. A two-sided test at significance level $\\alpha$ rejects the null when the upper-tail probability satisfies $p = 1 - F_{\\chi^2_1}(X^2_{\\mathrm{CMH}}) < \\alpha$, where $F_{\\chi^2_1}(\\cdot)$ is the cumulative distribution function of the chi-square distribution with $1$ degree of freedom. If a stratum has $\\mathrm{Var}(a_k) = 0$ (e.g., degenerate margins), it contributes no information and is excluded from the sum; if the total variance in the denominator is $0$, then the test is undefined and we conservatively set $p = 1$ (no rejection).\n\nWe now apply this to the provided test cases.\n\nTest case A. Three strata with:\n- $k=1$: $(a_1,b_1,c_1,d_1) = (40,60,120,280)$, so $n_{1,1} = 100$, $m_{1,1} = 160$, $n_1 = 500$. Then $\\mathbb{E}[a_1] = \\frac{100 \\cdot 160}{500} = 32$, and $\\mathrm{Var}(a_1) = \\frac{100 \\cdot 400 \\cdot 160 \\cdot 340}{500^2 \\cdot 499} \\approx 17.438$.\n- $k=2$: $(a_2,b_2,c_2,d_2) = (120,80,200,200)$, so $n_{1,2} = 200$, $m_{1,2} = 320$, $n_2 = 600$. Then $\\mathbb{E}[a_2] = \\frac{200 \\cdot 320}{600} \\approx 106.667$, and $\\mathrm{Var}(a_2) \\approx 33.250$.\n- $k=3$: $(a_3,b_3,c_3,d_3) = (98,22,350,150)$, so $n_{1,3} = 120$, $m_{1,3} = 448$, $n_3 = 620$. Then $\\mathbb{E}[a_3] \\approx 86.710$, and $\\mathrm{Var}(a_3) \\approx 19.440$.\n\nSumming deviations gives $\\sum_k (a_k - \\mathbb{E}[a_k]) \\approx (40 - 32) + (120 - 106.667) + (98 - 86.710) \\approx 32.624$. The summed variance is $\\sum_k \\mathrm{Var}(a_k) \\approx 17.438 + 33.250 + 19.440 \\approx 70.128$. Therefore,\n$$\nX^2_{\\mathrm{CMH}} \\approx \\frac{(32.624)^2}{70.128} \\approx 15.18,\n$$\nyielding an upper-tail probability $p \\ll 0.05$. Decision: reject, output $1$.\n\nTest case B. Three strata with matched conditional proportions:\n- $k=1$: $(a_1,b_1,c_1,d_1) = (30,70,60,140)$, so $\\mathbb{E}[a_1] = \\frac{100 \\cdot 90}{300} = 30$ and $a_1 - \\mathbb{E}[a_1] = 0$.\n- $k=2$: $(a_2,b_2,c_2,d_2) = (50,50,150,150)$, so $\\mathbb{E}[a_2] = \\frac{100 \\cdot 200}{400} = 50$ and $a_2 - \\mathbb{E}[a_2] = 0$.\n- $k=3$: $(a_3,b_3,c_3,d_3) = (35,15,210,90)$, so $\\mathbb{E}[a_3] = \\frac{50 \\cdot 245}{350} = 35$ and $a_3 - \\mathbb{E}[a_3] = 0$.\n\nThus $\\sum_k (a_k - \\mathbb{E}[a_k]) = 0$, so $X^2_{\\mathrm{CMH}} = 0$ and $p = 1 \\ge 0.05$. Decision: do not reject, output $0$.\n\nTest case C. Two strata with small counts and zeros:\n- $k=1$: $(a_1,b_1,c_1,d_1) = (0,5,1,9)$, so $n_{1,1} = 5$, $m_{1,1} = 1$, $n_1 = 15$. Then $\\mathbb{E}[a_1] = \\frac{5 \\cdot 1}{15} = \\frac{1}{3}$ and $\\mathrm{Var}(a_1) = \\frac{5 \\cdot 10 \\cdot 1 \\cdot 14}{15^2 \\cdot 14} = \\frac{50}{225} \\approx 0.222$.\n- $k=2$: $(a_2,b_2,c_2,d_2) = (5,0,9,1)$, so $n_{1,2} = 5$, $m_{1,2} = 14$, $n_2 = 15$. Then $\\mathbb{E}[a_2] = \\frac{5 \\cdot 14}{15} = \\frac{14}{3}$ and $\\mathrm{Var}(a_2) = \\frac{5 \\cdot 10 \\cdot 14 \\cdot 1}{15^2 \\cdot 14} = \\frac{50}{225} \\approx 0.222$.\n\nThe centered counts are $(a_1 - \\mathbb{E}[a_1]) = -\\frac{1}{3}$ and $(a_2 - \\mathbb{E}[a_2]) = +\\frac{1}{3}$, so they cancel in the sum, yielding $\\sum_k (a_k - \\mathbb{E}[a_k]) = 0$, hence $X^2_{\\mathrm{CMH}} = 0$ and $p = 1 \\ge 0.05$. Decision: do not reject, output $0$.\n\nTherefore, the required outputs for the three test cases A, B, and C are the integers $1$, $0$, and $0$, respectively, to be printed as a single line in the format [$1$,$0$,$0$].", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import chi2\n\ndef cmh_decision(strata, alpha=0.05):\n    \"\"\"\n    Compute the Cochran–Mantel–Haenszel (CMH) chi-square test for K 2x2 strata.\n    Each stratum is a tuple (a, b, c, d) with:\n      a: family GC3\n      b: family AT3\n      c: background GC3\n      d: background AT3\n    Returns 1 if reject H0 at level alpha, else 0.\n    \"\"\"\n    dev_sum = 0.0\n    var_sum = 0.0\n    for (a, b, c, d) in strata:\n        n1 = a + b\n        n2 = c + d\n        m1 = a + c\n        m2 = b + d\n        n = n1 + n2\n        # Skip degenerate strata where variance is undefined or zero\n        if n <= 1:\n            continue\n        # Expected value and variance under hypergeometric model\n        exp_a = (n1 * m1) / n if n != 0 else 0.0\n        # Variance formula: n1*n2*m1*m2 / (n^2 * (n-1))\n        # Only accumulate if denominator is nonzero and variance positive\n        denom = (n * n) * (n - 1)\n        if denom == 0:\n            continue\n        var_a = (n1 * n2 * m1 * m2) / denom\n        # If variance is zero, the stratum contributes no information\n        if var_a <= 0.0:\n            continue\n        dev_sum += (a - exp_a)\n        var_sum += var_a\n    if var_sum <= 0.0:\n        # No informative strata; cannot reject\n        return 0\n    x2 = (dev_sum * dev_sum) / var_sum\n    p_value = 1.0 - chi2.cdf(x2, df=1)\n    return 1 if p_value < alpha else 0\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each test case is a list of strata; each stratum includes the GC (unused) and counts (a,b,c,d).\n    # We only extract (a,b,c,d) for the CMH test.\n    test_cases = [\n        # Test case A\n        [\n            (0.30, 40, 60, 120, 280),\n            (0.50, 120, 80, 200, 200),\n            (0.70, 98, 22, 350, 150),\n        ],\n        # Test case B\n        [\n            (0.30, 30, 70, 60, 140),\n            (0.50, 50, 50, 150, 150),\n            (0.70, 35, 15, 210, 90),\n        ],\n        # Test case C\n        [\n            (0.20, 0, 5, 1, 9),\n            (0.80, 5, 0, 9, 1),\n        ],\n    ]\n\n    results = []\n    for case in test_cases:\n        strata = [(a, b, c, d) for (_g, a, b, c, d) in case]\n        result = cmh_decision(strata, alpha=0.05)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2436458"}]}