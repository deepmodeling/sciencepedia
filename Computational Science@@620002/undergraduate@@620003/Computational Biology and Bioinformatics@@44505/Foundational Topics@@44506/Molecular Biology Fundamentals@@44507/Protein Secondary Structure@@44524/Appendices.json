{"hands_on_practices": [{"introduction": "Before we can predict secondary structures, we must understand the fundamental geometric rules that govern how a polypeptide chain can fold. This practice explores the stereochemical basis of protein structure by examining the relationship between local backbone conformation, defined by the $\\phi$ and $\\psi$ dihedral angles, and the chirality of the constituent amino acids. By considering a hypothetical protein made of D-amino acids, this thought experiment ([@problem_id:2421209]) reveals the profound and symmetric consequences of inverting stereochemistry on the allowed regions of the Ramachandran plot, solidifying your grasp of the basic principles of protein folding.", "problem": "In computational structural biology, the allowable backbone torsion angles of a polypeptide are summarized on the Ramachandran plot as pairs $\\left(\\phi,\\psi\\right)$, where $\\phi$ is the dihedral about the $N$–$C_{\\alpha}$ bond and $\\psi$ is the dihedral about the $C_{\\alpha}$–$C^{\\prime}$ bond. The sign of each dihedral is defined by the right-hand rule in a fixed laboratory coordinate system. For polypeptides composed of the common $L$-amino acids with trans peptide bonds, an ideal right-handed $\\alpha$-helix occupies a compact region with angles approximately $\\left(\\phi_{0},\\psi_{0}\\right)$, with $\\phi_{0}<0$ and $\\psi_{0}<0$.\n\nSuppose a hypothetical helix is constructed identically except that every residue is the enantiomer (i.e., the $C_{\\alpha}$ stereocenter is inverted) and peptide bonds remain trans. In terms of the original ideal helical angles $\\left(\\phi_{0},\\psi_{0}\\right)$, which transformation best describes the ideal $\\left(\\phi,\\psi\\right)$ angles for this enantiomeric helix?\n\nA. They remain unchanged: $\\left(\\phi,\\psi\\right)=\\left(\\phi_{0},\\psi_{0}\\right)$.\n\nB. Both angles change sign: $\\left(\\phi,\\psi\\right)=\\left(-\\phi_{0},-\\psi_{0}\\right)$.\n\nC. They swap: $\\left(\\phi,\\psi\\right)=\\left(\\psi_{0},\\phi_{0}\\right)$.\n\nD. Only one changes sign: $\\left(\\phi,\\psi\\right)=\\left(\\phi_{0},-\\psi_{0}\\right)$.\n\nE. Both angles increase by $180^{\\circ}$: $\\left(\\phi,\\psi\\right)=\\left(\\phi_{0}+180^{\\circ},\\psi_{0}+180^{\\circ}\\right)$.", "solution": "This problem is valid and addresses the fundamental principles of stereochemistry in protein structure.\n\nA helix constructed from D-amino acids is the enantiomer (mirror image) of one constructed from L-amino acids. A mirror-image transformation inverts the sign of all dihedral angles. Since $\\phi$ and $\\psi$ are dihedral angles, if the ideal angles for the L-amino acid helix are $(\\phi_0, \\psi_0)$, the ideal angles for the D-amino acid helix must be $(-\\phi_0, -\\psi_0)$. This corresponds to a point-reflection symmetry in the Ramachandran plot. A right-handed $\\alpha$-helix of L-amino acids (with $\\phi_0  0, \\psi_0  0$) has its mirror image in a left-handed $\\alpha$-helix of D-amino acids (with $\\phi > 0, \\psi > 0$).\n\nTherefore:\n*   **A. $(\\phi,\\psi)=\\left(\\phi_{0},\\psi_{0}\\right)$:** Incorrect. This would cause severe steric clashes for D-residues.\n*   **B. $(\\phi,\\psi)=\\left(-\\phi_{0},-\\psi_{0}\\right)$:** Correct. This is the definition of the enantiomeric transformation for dihedral angles.\n*   **C. $(\\phi,\\psi)=\\left(\\psi_{0},\\phi_{0}\\right)$:** Incorrect. Swapping coordinates is not related to stereochemical inversion.\n*   **D. $(\\phi,\\psi)=\\left(\\phi_{0},-\\psi_{0}\\right)$:** Incorrect. This is a reflection across one axis, not a point reflection.\n*   **E. $\\left(\\phi,\\psi\\right)=\\left(\\phi_{0}+180^{\\circ},\\psi_{0}+180^{\\circ}\\right)$:** Incorrect. This is a different, unrelated transformation.", "answer": "$$\\boxed{B}$$", "id": "2421209"}, {"introduction": "Early computational methods for secondary structure prediction sought to codify the statistical preferences of amino acids for certain structures. This exercise ([@problem_id:2421464]) provides a hands-on look into one such classic algorithm, the Garnier–Osguthorpe–Robson (GOR) method. You will step into the role of the computer and manually calculate the information scores for a single residue, gaining a concrete understanding of how evidence from a sequence window is summed to make a prediction.", "problem": "Consider the Garnier–Osguthorpe–Robson (GOR) method for protein secondary structure prediction. For a fixed window of width $17$ centered on residue index $i$, the information content for assigning the central residue to structure $s \\in \\{H,E,C\\}$ is defined as\n$$\nI(s) \\;=\\; \\sum_{k=-8}^{+8} w_{s}\\!\\left(a_{i+k},\\,k\\right),\n$$\nwhere $a_{i+k}$ is the amino acid at relative offset $k$ from the central position, and $w_{s}(a,k)$ is the base-$2$ log-odds contribution in bits for observing amino acid $a$ at offset $k$ given the central state $s$. The $w_{s}(a,k)$ values for the observed residues in the window are provided below.\n\nThe $17$-residue peptide window (from $k=-8$ to $k=+8$) is:\nV, A, G, L, E, K, P, V, A, E, L, G, I, S, D, T, P\nso that the central residue ($k=0$) is A.\n\nUse the following information contributions (in bits) for the observed residue at each relative position $k$:\n- $k=-8$, V: $w_{H}=-0.15$, $w_{E}=+0.30$, $w_{C}=-0.05$\n- $k=-7$, A: $w_{H}=+0.25$, $w_{E}=-0.10$, $w_{C}=-0.05$\n- $k=-6$, G: $w_{H}=-0.20$, $w_{E}=-0.10$, $w_{C}=+0.30$\n- $k=-5$, L: $w_{H}=+0.30$, $w_{E}=+0.05$, $w_{C}=-0.15$\n- $k=-4$, E: $w_{H}=+0.30$, $w_{E}=-0.10$, $w_{C}=-0.10$\n- $k=-3$, K: $w_{H}=+0.25$, $w_{E}=-0.10$, $w_{C}=-0.10$\n- $k=-2$, P: $w_{H}=-0.30$, $w_{E}=-0.10$, $w_{C}=+0.40$\n- $k=-1$, V: $w_{H}=-0.10$, $w_{E}=+0.25$, $w_{C}=-0.05$\n- $k=0$, A: $w_{H}=+0.40$, $w_{E}=-0.20$, $w_{C}=-0.10$\n- $k=+1$, E: $w_{H}=+0.35$, $w_{E}=-0.15$, $w_{C}=-0.10$\n- $k=+2$, L: $w_{H}=+0.35$, $w_{E}=+0.00$, $w_{C}=-0.20$\n- $k=+3$, G: $w_{H}=-0.25$, $w_{E}=-0.10$, $w_{C}=+0.35$\n- $k=+4$, I: $w_{H}=-0.10$, $w_{E}=+0.30$, $w_{C}=-0.05$\n- $k=+5$, S: $w_{H}=-0.10$, $w_{E}=-0.05$, $w_{C}=+0.15$\n- $k=+6$, D: $w_{H}=-0.15$, $w_{E}=-0.10$, $w_{C}=+0.25$\n- $k=+7$, T: $w_{H}=-0.05$, $w_{E}=+0.05$, $w_{C}=+0.05$\n- $k=+8$, P: $w_{H}=-0.35$, $w_{E}=-0.10$, $w_{C}=+0.45$\n\nCompute $I(H)$, $I(E)$, and $I(C)$ for the central residue using the definition above. Express each value in bits. Do not round; report the exact sums.", "solution": "The problem statement has been subjected to rigorous validation and is deemed to be valid. It is scientifically grounded in the principles of computational biology, specifically the Garnier–Osguthorpe–Robson (GOR) method. The problem is well-posed, objective, and provides all necessary data for a unique solution. It is a straightforward computational exercise based on a given formula and data set.\n\nThe task is to compute the information content $I(s)$ for each of the three secondary structure states $s \\in \\{H, E, C\\}$, where $H$ denotes alpha-helix, $E$ denotes beta-sheet, and $C$ denotes coil. The information content is defined as the sum of log-odds contributions from each residue in a symmetric window of width $17$ centered at the residue of interest. The governing equation is:\n$$\nI(s) = \\sum_{k=-8}^{+8} w_{s}(a_{i+k}, k)\n$$\nwhere $w_{s}(a_{i+k}, k)$ is the provided information contribution in bits for observing amino acid $a_{i+k}$ at position $k$ relative to the center, given that the central residue is in state $s$.\n\nWe will perform the summation for each state separately using the provided table of weights.\n\nFor the alpha-helix state ($H$):\n$$\nI(H) = \\sum_{k=-8}^{+8} w_{H}(a_{i+k}, k)\n$$\nSubstituting the given values:\n$$\n\\begin{aligned}\nI(H) =  (-0.15) + (0.25) + (-0.20) + (0.30) + (0.30) + (0.25) + (-0.30) \\\\\n + (-0.10) + (0.40) + (0.35) + (0.35) + (-0.25) + (-0.10) + (-0.10) \\\\\n + (-0.15) + (-0.05) + (-0.35)\n\\end{aligned}\n$$\nThe sum of the positive terms is:\n$0.25 + 0.30 + 0.30 + 0.25 + 0.40 + 0.35 + 0.35 = 2.20$\nThe sum of the negative terms is:\n$(-0.15) + (-0.20) + (-0.30) + (-0.10) + (-0.25) + (-0.10) + (-0.10) + (-0.15) + (-0.05) + (-0.35) = -1.75$\nThus, the total information content for the helix state is:\n$$\nI(H) = 2.20 - 1.75 = 0.45 \\text{ bits}\n$$\n\nFor the beta-sheet state ($E$):\n$$\nI(E) = \\sum_{k=-8}^{+8} w_{E}(a_{i+k}, k)\n$$\nSubstituting the given values:\n$$\n\\begin{aligned}\nI(E) =  (0.30) + (-0.10) + (-0.10) + (0.05) + (-0.10) + (-0.10) + (-0.10) \\\\\n + (0.25) + (-0.20) + (-0.15) + (0.00) + (-0.10) + (0.30) + (-0.05) \\\\\n + (-0.10) + (0.05) + (-0.10)\n\\end{aligned}\n$$\nThe sum of the positive terms is:\n$0.30 + 0.05 + 0.25 + 0.00 + 0.30 + 0.05 = 0.95$\nThe sum of the negative terms is:\n$(-0.10) + (-0.10) + (-0.10) + (-0.10) + (-0.10) + (-0.20) + (-0.15) + (-0.10) + (-0.05) + (-0.10) + (-0.10) = -1.20$\nThus, the total information content for the sheet state is:\n$$\nI(E) = 0.95 - 1.20 = -0.25 \\text{ bits}\n$$\n\nFor the coil state ($C$):\n$$\nI(C) = \\sum_{k=-8}^{+8} w_{C}(a_{i+k}, k)\n$$\nSubstituting the given values:\n$$\n\\begin{aligned}\nI(C) =  (-0.05) + (-0.05) + (0.30) + (-0.15) + (-0.10) + (-0.10) + (0.40) \\\\\n + (-0.05) + (-0.10) + (-0.10) + (-0.20) + (0.35) + (-0.05) + (0.15) \\\\\n + (0.25) + (0.05) + (0.45)\n\\end{aligned}\n$$\nThe sum of the positive terms is:\n$0.30 + 0.40 + 0.35 + 0.15 + 0.25 + 0.05 + 0.45 = 1.95$\nThe sum of the negative terms is:\n$(-0.05) + (-0.05) + (-0.15) + (-0.10) + (-0.10) + (-0.05) + (-0.10) + (-0.10) + (-0.20) + (-0.05) = -0.95$\nThus, the total information content for the coil state is:\n$$\nI(C) = 1.95 - 0.95 = 1.00 \\text{ bits}\n$$\nThe computed values are $I(H) = 0.45$, $I(E) = -0.25$, and $I(C) = 1.00$. The GOR method would predict the state with the highest information content, which in this case is the coil state ($C$).", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n0.45  -0.25  1.00\n\\end{pmatrix}\n}\n$$", "id": "2421464"}, {"introduction": "While residue-based propensities are useful, protein structures also exhibit patterns at a higher level; for instance, a helical segment is often followed by a coil. This practice ([@problem_id:2421171]) introduces a more sophisticated tool for capturing these sequential dependencies: the first-order Markov chain. By calculating transition probabilities between secondary structure states, you will build a simple probabilistic model and learn about the crucial role of smoothing in creating generalizable models from finite data.", "problem": "You are given a set of sequences over the finite alphabet of protein secondary structure states $\\{H, E, C\\}$, where $H$ denotes an $\\alpha$-helix, $E$ denotes a $\\beta$-strand, and $C$ denotes coil. Model these sequences as being generated by a time-homogeneous first-order Markov chain over the state space $S = \\{H, E, C\\}$. For each ordered pair $(i, j) \\in S \\times S$, let $n_{ij}$ denote the total count of adjacent transitions from state $i$ to state $j$ found by scanning all sequences and counting each adjacent pair of states within a sequence as one transition. A sequence of length $L$ contributes exactly $L-1$ transitions, one for each adjacent pair; there are no start or end tokens.\n\nFor a given nonnegative smoothing parameter $\\alpha \\in \\mathbb{R}_{\\ge 0}$, define the estimated transition probabilities by Laplace (add-$\\alpha$) smoothing as\n$$\n\\hat{P}(j \\mid i) \\;=\\; \\frac{n_{ij} + \\alpha}{\\sum_{k \\in S} n_{ik} + \\alpha \\, |S|},\n$$\nwhere $|S| = 3$. When $\\alpha = 0$, this reduces to the maximum likelihood estimate based on relative frequencies. All probability values must be expressed as decimals rounded to exactly $6$ decimal places.\n\nTest suite. For each case below, you are given:\n- a list of sequences over $\\{H,E,C\\}$,\n- a smoothing parameter $\\alpha$,\n- an ordered query pair $(i,j)$,\n\nand you must compute the single value $\\hat{P}(j \\mid i)$.\n\n- Case A:\n  - sequences: [\"HEHEHE\"]\n  - $\\alpha = 0$\n  - query pair $(i,j) = (E, H)$\n- Case B:\n  - sequences: [\"HHHH\"]\n  - $\\alpha = 0.5$\n  - query pair $(i,j) = (H, E)$\n- Case C:\n  - sequences: [\"HH\", \"CC\"]\n  - $\\alpha = 1.0$\n  - query pair $(i,j) = (E, H)$\n- Case D:\n  - sequences: [\"HHHEECCC\", \"HECHHEE\", \"CCCEEEHHH\"]\n  - $\\alpha = 0$\n  - query pair $(i,j) = (C, C)$\n- Case E:\n  - sequences: [\"EE\"]\n  - $\\alpha = 0.25$\n  - query pair $(i,j) = (E, H)$\n\nFinal output format. Your program should produce a single line of output containing the results for Cases A through E, in that order, as a comma-separated list enclosed in square brackets. Each entry must be the decimal value of $\\hat{P}(j \\mid i)$ rounded to exactly $6$ decimal places. For example, a valid format is \"[rA,rB,rC,rD,rE]\" where each rX is a decimal rounded to exactly $6$ places. No additional characters or lines should be printed.", "solution": "The problem is valid. It is scientifically grounded in the principles of probabilistic sequence modeling, specifically using first-order Markov chains, which is a standard method in computational biology. The problem is well-posed, objective, and provides all necessary information to compute a unique solution for each test case. The formula for Laplace smoothing is correctly stated, and the test cases are computationally feasible.\n\nThe objective is to compute the estimated transition probability $\\hat{P}(j \\mid i)$ for a first-order Markov chain over the state space $S = \\{H, E, C\\}$. The state space size is $|S| = 3$. The estimation is performed using add-$\\alpha$ smoothing, according to the formula:\n$$\n\\hat{P}(j \\mid i) \\;=\\; \\frac{n_{ij} + \\alpha}{\\sum_{k \\in S} n_{ik} + \\alpha \\, |S|}\n$$\nwhere $n_{ij}$ represents the count of observed transitions from state $i$ to state $j$, and $\\alpha \\ge 0$ is the smoothing parameter.\n\nThe procedure for each test case is as follows:\n1.  Construct a $3 \\times 3$ transition count matrix, $N$, where the entry $n_{ij}$ stores the number of transitions from state $i$ to state $j$. This is done by scanning all provided sequences. Each adjacent pair of characters in a sequence of length $L$ contributes one transition, for a total of $L-1$ transitions per sequence.\n2.  Identify the query pair $(i,j)$ and the smoothing parameter $\\alpha$.\n3.  Extract the specific count $n_{ij}$ from the matrix $N$.\n4.  Calculate the total number of transitions originating from state $i$, which is the sum of the $i$-th row of matrix $N$: $\\sum_{k \\in S} n_{ik}$.\n5.  Substitute these values into the given formula to calculate $\\hat{P}(j \\mid i)$.\n6.  Round the final probability to $6$ decimal places.\n\n**Case A:**\n- Sequences: `[\"HEHEHE\"]`\n- $\\alpha = 0$\n- Query: $(i,j) = (E, H)$\n\nThe single sequence \"HEHEHE\" of length $L=6$ provides $L-1=5$ transitions: $H \\to E$, $E \\to H$, $H \\to E$, $E \\to H$, $H \\to E$. The transition counts are $n_{HE} = 3$ and $n_{EH} = 2$. All other counts $n_{ij}$ are $0$.\nThe query is for $\\hat{P}(H \\mid E)$, so the state of origin is $i=E$. The total number of transitions from state $E$ is $\\sum_{k \\in S} n_{Ek} = n_{EE} + n_{EH} + n_{EC} = 0 + 2 + 0 = 2$. The specific count for the transition $E \\to H$ is $n_{EH} = 2$.\nUsing the formula:\n$$ \\hat{P}(H \\mid E) = \\frac{n_{EH} + \\alpha}{\\sum_{k \\in S} n_{Ek} + \\alpha |S|} = \\frac{2 + 0}{2 + 0 \\cdot 3} = \\frac{2}{2} = 1.0 $$\nThe result is $1.000000$.\n\n**Case B:**\n- Sequences: `[\"HHHH\"]`\n- $\\alpha = 0.5$\n- Query: $(i,j) = (H, E)$\n\nThe sequence \"HHHH\" of length $L=4$ provides $3$ transitions, all of which are $H \\to H$. Thus, $n_{HH} = 3$ and all other $n_{ij} = 0$.\nThe query is for $\\hat{P}(E \\mid H)$, so $i=H$. The total number of transitions from $H$ is $\\sum_{k \\in S} n_{Hk} = n_{HH} + n_{HE} + n_{HC} = 3 + 0 + 0 = 3$. The specific count for $H \\to E$ is $n_{HE} = 0$.\nUsing the formula:\n$$ \\hat{P}(E \\mid H) = \\frac{n_{HE} + \\alpha}{\\sum_{k \\in S} n_{Hk} + \\alpha |S|} = \\frac{0 + 0.5}{3 + 0.5 \\cdot 3} = \\frac{0.5}{3 + 1.5} = \\frac{0.5}{4.5} = \\frac{1}{9} \\approx 0.11111111... $$\nThe result, rounded to $6$ decimal places, is $0.111111$.\n\n**Case C:**\n- Sequences: `[\"HH\", \"CC\"]`\n- $\\alpha = 1.0$\n- Query: $(i,j) = (E, H)$\n\nThe sequence \"HH\" contributes one transition $H \\to H$. The sequence \"CC\" contributes one transition $C \\to C$. So, $n_{HH} = 1$, $n_{CC} = 1$, and all other $n_{ij}=0$.\nThe query is for $\\hat{P}(H \\mid E)$, so $i=E$. The total number of transitions from $E$ is $\\sum_{k \\in S} n_{Ek} = n_{EE} + n_{EH} + n_{EC} = 0 + 0 + 0 = 0$. The specific count for $E \\to H$ is $n_{EH} = 0$.\nUsing the formula:\n$$ \\hat{P(H \\mid E)} = \\frac{n_{EH} + \\alpha}{\\sum_{k \\in S} n_{Ek} + \\alpha |S|} = \\frac{0 + 1.0}{0 + 1.0 \\cdot 3} = \\frac{1.0}{3.0} = \\frac{1}{3} \\approx 0.33333333... $$\nThe result, rounded to $6$ decimal places, is $0.333333$.\n\n**Case D:**\n- Sequences: `[\"HHHEECCC\", \"HECHHEE\", \"CCCEEEHHH\"]`\n- $\\alpha = 0$\n- Query: $(i,j) = (C, C)$\n\nWe aggregate transition counts across all three sequences:\n- \"HHHEECCC\": $n_{HH}=2$, $n_{HE}=1$, $n_{EE}=1$, $n_{EC}=1$, $n_{CC}=2$.\n- \"HECHHEE\": $n_{HE}=2$, $n_{EC}=1$, $n_{CH}=1$, $n_{HH}=1$, $n_{EE}=1$.\n- \"CCCEEEHHH\": $n_{CC}=2$, $n_{CE}=1$, $n_{EE}=2$, $n_{EH}=1$, $n_{HH}=2$.\nTotal counts are: $n_{HH} = 5$, $n_{HE} = 3$, $n_{HC} = 0$, $n_{EH} = 1$, $n_{EE} = 4$, $n_{EC} = 2$, $n_{CH} = 1$, $n_{CE} = 1$, $n_{CC} = 4$.\nThe query is for $\\hat{P}(C \\mid C)$, so $i=C$. The total number of transitions from $C$ is $\\sum_{k \\in S} n_{Ck} = n_{CH} + n_{CE} + n_{CC} = 1 + 1 + 4 = 6$. The specific count for $C \\to C$ is $n_{CC} = 4$.\nUsing the formula:\n$$ \\hat{P}(C \\mid C) = \\frac{n_{CC} + \\alpha}{\\sum_{k \\in S} n_{Ck} + \\alpha |S|} = \\frac{4 + 0}{6 + 0 \\cdot 3} = \\frac{4}{6} = \\frac{2}{3} \\approx 0.66666666... $$\nThe result, rounded to $6$ decimal places, is $0.666667$.\n\n**Case E:**\n- Sequences: `[\"EE\"]`\n- $\\alpha = 0.25$\n- Query: $(i,j) = (E, H)$\n\nThe sequence \"EE\" of length $L=2$ provides $1$ transition, $E \\to E$. Thus, $n_{EE} = 1$ and all other $n_{ij}=0$.\nThe query is for $\\hat{P}(H \\mid E)$, so $i=E$. The total number of transitions from $E$ is $\\sum_{k \\in S} n_{Ek} = n_{EE} + n_{EH} + n_{EC} = 1 + 0 + 0 = 1$. The specific count for $E \\to H$ is $n_{EH} = 0$.\nUsing the formula:\n$$ \\hat{P}(H \\mid E) = \\frac{n_{EH} + \\alpha}{\\sum_{k \\in S} n_{Ek} + \\alpha |S|} = \\frac{0 + 0.25}{1 + 0.25 \\cdot 3} = \\frac{0.25}{1 + 0.75} = \\frac{0.25}{1.75} = \\frac{1}{7} \\approx 0.14285714... $$\nThe result, rounded to $6$ decimal places, is $0.142857$.", "answer": "[1.000000,0.111111,0.333333,0.666667,0.142857]", "id": "2421171"}]}