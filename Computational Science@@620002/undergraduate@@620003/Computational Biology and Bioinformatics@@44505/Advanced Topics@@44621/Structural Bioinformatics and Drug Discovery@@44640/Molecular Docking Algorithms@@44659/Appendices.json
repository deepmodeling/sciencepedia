{"hands_on_practices": [{"introduction": "Molecular docking aims to predict how a flexible ligand fits into a protein's binding site. The ligand's flexibility is a major challenge, as each rotatable bond can adopt multiple conformations. This exercise illustrates the 'combinatorial explosion' that arises from this flexibility, helping you calculate the immense size of the search space for even a relatively simple molecule. Understanding this scale is the first step in appreciating why direct, exhaustive searches are often infeasible and why more sophisticated algorithms are necessary. [@problem_id:2407471]", "problem": "A small-molecule ligand is to be docked into a rigid protein binding site using a systematic conformational search. The ligand possesses $10$ independent rotatable single bonds. For each such bond, experimental data indicate exactly $3$ distinct, energetically stable rotameric states that fully cover the low-energy torsional landscape for that bond. Assume that:\n- Rotameric states across different bonds are independent,\n- The $3$ states for each bond are mutually exclusive and collectively exhaustive,\n- Stereochemical symmetry does not reduce the count of distinguishable internal conformations.\n\nUnder these assumptions, a systematic internal search enumerates all distinct assignments of rotameric states across the $10$ bonds. What is the total number of distinct internal conformations generated by this search?\n\nGive your answer as a single exact integer with no units. No rounding is required.", "solution": "The problem shall be validated before any attempt at a solution is made.\n\nFirst, I will extract the given information from the problem statement.\n1. A small-molecule ligand has a number of independent rotatable single bonds, $N = 10$.\n2. For each bond, there are a number of distinct, energetically stable rotameric states, $k = 3$.\n3. The rotameric states across different bonds are independent.\n4. The $k=3$ states for each bond are mutually exclusive and collectively exhaustive.\n5. Stereochemical symmetry does not reduce the count of distinguishable internal conformations.\n\nNext, I will validate the problem based on these givens.\nThe problem is scientifically grounded. The concepts of rotatable bonds, discrete rotameric states, and conformational search are fundamental principles in computational chemistry and structural biology, specifically within the domain of molecular docking. The assumptions of independence and a discrete state space represent a standard simplification used in systematic search algorithms to make the combinatorial problem tractable.\nThe problem is well-posed. It provides all necessary data ($N=10$, $k=3$) and a clear set of constraints (independence of bonds) to calculate a single, unambiguous answer. There is no missing or contradictory information.\nThe problem is objective. The language is precise and devoid of subjective or speculative content.\n\nThe verdict is that the problem is valid. It is a straightforward application of combinatorial principles to a well-defined model in computational biology.\n\nThe solution proceeds as follows.\nThe problem asks for the total number of distinct internal conformations of a ligand. A specific internal conformation is defined by a unique assignment of a rotameric state to each of the $10$ independent rotatable bonds.\nLet the number of rotatable bonds be $N$. From the problem statement, we have $N = 10$.\nLet the number of available rotameric states for each bond be $k$. The problem states that $k = 3$.\nThe problem specifies that the choice of a rotameric state for any given bond is independent of the choices for all other bonds.\n\nThis is a classical combinatorial problem that can be solved using the rule of product. If there are $k_1$ ways to make a first choice, $k_2$ ways to make a second choice, and so on, up to $k_N$ ways to make an $N$-th choice, and these choices are independent, then the total number of ways to make the sequence of $N$ choices is the product $k_1 \\times k_2 \\times \\dots \\times k_N$.\n\nIn this specific case, the \"choices\" are the selections of rotameric states for each of the $N$ bonds.\nFor the first bond, there are $k=3$ possible states.\nFor the second bond, there are also $k=3$ possible states.\n...\nFor the $N$-th (i.e., $10$-th) bond, there are $k=3$ possible states.\n\nLet $C_{\\text{total}}$ be the total number of distinct internal conformations. According to the rule of product, $C_{\\text{total}}$ is the product of the number of states for each of the $N$ bonds:\n$$C_{\\text{total}} = \\underbrace{k \\times k \\times \\dots \\times k}_{N \\text{ times}}$$\nThis can be expressed in exponential form as:\n$$C_{\\text{total}} = k^{N}$$\nSubstituting the given values, $N = 10$ and $k = 3$:\n$$C_{\\text{total}} = 3^{10}$$\nWe now compute the numerical value.\n$$3^2 = 9$$\n$$3^4 = (3^2)^2 = 9^2 = 81$$\n$$3^5 = 3^4 \\times 3 = 81 \\times 3 = 243$$\n$$3^{10} = (3^5)^2 = 243^2$$\nCalculating the square of $243$:\n$$243 \\times 243 = 59049$$\nThus, the total number of distinct internal conformations generated by the systematic search is $59049$. The assumption that stereochemical symmetry does not reduce the count confirms that we do not need to apply any correction for symmetry, so this result is the final answer.", "answer": "$$\\boxed{59049}$$", "id": "2407471"}, {"introduction": "To manage the vast search space, many docking algorithms simplify the problem by using a grid. In this approach, the ligand's possible positions are restricted to discrete points in space, and the interaction energy is pre-calculated at each point. This hands-on exercise uses a simple 2D toy model to let you perform a complete docking calculation by hand, systematically testing all possible ligand placements to find the one with the lowest energy. This will give you an intuitive feel for the core logic of grid-based search and scoring algorithms. [@problem_id:2407435]", "problem": "Consider a discrete grid-based molecular docking toy model that abstracts a receptor cavity and a small ligand. The receptor is defined on a $5 \\times 5$ integer lattice of grid cells with row index $i \\in \\{1,2,3,4,5\\}$ increasing downward and column index $j \\in \\{1,2,3,4,5\\}$ increasing to the right. The cavity consists only of the $3 \\times 3$ central cells with indices $i \\in \\{2,3,4\\}$ and $j \\in \\{2,3,4\\}$. All other cells are rigid, impenetrable walls that cannot be occupied by any part of the ligand. A scalar receptor field $E(i,j)$ (dimensionless docking energy contribution per occupied cell) is defined only on the cavity cells as follows:\n$E(2,2) = -1$, $E(2,3) = -3$, $E(2,4) = 0$, $E(3,2) = -4$, $E(3,3) = -5$, $E(3,4) = -1$, $E(4,2) = 0$, $E(4,3) = -2$, $E(4,4) = -1$.\n\nThe ligand is a rigid $L$-shaped triomino occupying $3$ unit grid cells in a corner configuration. In its canonical body frame, its occupied coordinates are $\\{(0,0),(1,0),(0,1)\\}$. Rigid rotations by $0^{\\circ}$, $90^{\\circ}$, $180^{\\circ}$, and $270^{\\circ}$ and integer translations are permitted. A placement is valid if and only if all occupied cells of the rotated and translated ligand lie entirely within the cavity cells $\\{2,3,4\\} \\times \\{2,3,4\\}$; any overlap with walls is forbidden. For any valid placement with occupied receptor cells $\\{(i_{1},j_{1}),(i_{2},j_{2}),(i_{3},j_{3})\\}$, the total docking energy is\n$$U \\;=\\; \\sum_{k=1}^{3} E(i_{k},j_{k}).$$\nAmong all valid placements (all rotations and all translations that keep the ligand entirely within the cavity), determine the minimal possible value of $U$. Express your final answer as an integer with no units. No rounding is required.", "solution": "The problem asks for the minimum total docking energy, $U$, for a rigid L-shaped triomino ligand placed within a specified receptor cavity. This is a discrete optimization problem that requires a systematic search over all possible valid placements of the ligand. A placement is defined by a translation and a rotation. The search space is finite, consisting of a set of allowed integer translations and four discrete rotations.\n\nFirst, we must validate the problem statement.\nThe givens are:\n- A $5 \\times 5$ grid with indices $i, j \\in \\{1,2,3,4,5\\}$.\n- A receptor cavity defined by the cell indices $\\mathcal{C} = \\{(i,j) \\mid i \\in \\{2,3,4\\}, j \\in \\{2,3,4\\}\\}$.\n- A dimensionless energy field $E(i,j)$ defined on the cavity cells:\n$$\nE(i,j) = \n\\begin{pmatrix}\n-1 & -3 & 0 \\\\\n-4 & -5 & -1 \\\\\n0 & -2 & -1\n\\end{pmatrix}\n$$\nfor $i,j$ corresponding to the indices $\\{2,3,4\\} \\times \\{2,3,4\\}$. For instance, $E(2,2) = -1$ and $E(3,3) = -5$.\n- A rigid L-shaped triomino ligand that occupies $3$ cells. Its canonical configuration is given by $\\{(0,0),(1,0),(0,1)\\}$ in its local coordinate system.\n- Allowed transformations are rotations by $R \\in \\{0^\\circ, 90^\\circ, 180^\\circ, 270^\\circ\\}$ and translations.\n- A placement is valid if all three cells of the ligand lie within the cavity $\\mathcal{C}$.\n- The total docking energy for a valid placement is $U = \\sum_{k=1}^{3} E(i_{k},j_{k})$.\nThe objective is to find $\\min(U)$ over all valid placements.\n\nThe problem is valid. It is a well-posed, scientifically grounded toy problem in computational biology, representing a simplified docking scenario. All information is provided, and there are no contradictions. We proceed to solve it.\n\nThe solution methodology is to enumerate all possible valid placements of the ligand, calculate the energy $U$ for each, and identify the minimum value. A placement is defined by one of four rotations and a translation that positions the ligand within the cavity. We can define the shape of the rotated ligand relative to an anchor point $(i,j)$ and then determine which anchor points result in valid placements.\n\nLet the anchor point $(i,j)$ be the cell corresponding to the $(0,0)$ coordinate in the ligand's body frame.\n\nCase 1: Rotation $R = 0^\\circ$\nThe ligand occupies cells $\\{(i,j), (i+1,j), (i,j+1)\\}$. For this placement to be valid, we must have $\\{i, i+1\\} \\subset \\{2,3,4\\}$ and $\\{j, j+1\\} \\subset \\{2,3,4\\}$. This restricts the anchor point to $i \\in \\{2,3\\}$ and $j \\in \\{2,3\\}$. There are $4$ such valid placements.\n- Anchor $(2,2)$: Cells are $\\{(2,2), (3,2), (2,3)\\}$. $U = E(2,2) + E(3,2) + E(2,3) = (-1) + (-4) + (-3) = -8$.\n- Anchor $(2,3)$: Cells are $\\{(2,3), (3,3), (2,4)\\}$. $U = E(2,3) + E(3,3) + E(2,4) = (-3) + (-5) + 0 = -8$.\n- Anchor $(3,2)$: Cells are $\\{(3,2), (4,2), (3,3)\\}$. $U = E(3,2) + E(4,2) + E(3,3) = (-4) + 0 + (-5) = -9$.\n- Anchor $(3,3)$: Cells are $\\{(3,3), (4,3), (3,4)\\}$. $U = E(3,3) + E(4,3) + E(3,4) = (-5) + (-2) + (-1) = -8$.\nThe minimum energy for this orientation is $-9$.\n\nCase 2: Rotation $R = 90^\\circ$ (clockwise)\nThe ligand shape becomes $\\{(i,j), (i+1,j), (i,j-1)\\}$. For validity, $\\{i, i+1\\} \\subset \\{2,3,4\\}$ and $\\{j-1, j\\} \\subset \\{2,3,4\\}$. This restricts the anchor point to $i \\in \\{2,3\\}$ and $j \\in \\{3,4\\}$. There are $4$ such valid placements.\n- Anchor $(2,3)$: Cells are $\\{(2,3), (3,3), (2,2)\\}$. $U = E(2,3) + E(3,3) + E(2,2) = (-3) + (-5) + (-1) = -9$.\n- Anchor $(2,4)$: Cells are $\\{(2,4), (3,4), (2,3)\\}$. $U = E(2,4) + E(3,4) + E(2,3) = 0 + (-1) + (-3) = -4$.\n- Anchor $(3,3)$: Cells are $\\{(3,3), (4,3), (3,2)\\}$. $U = E(3,3) + E(4,3) + E(3,2) = (-5) + (-2) + (-4) = -11$.\n- Anchor $(3,4)$: Cells are $\\{(3,4), (4,4), (3,3)\\}$. $U = E(3,4) + E(4,4) + E(3,3) = (-1) + (-1) + (-5) = -7$.\nThe minimum energy for this orientation is $-11$.\n\nCase 3: Rotation $R = 180^\\circ$\nThe ligand shape becomes $\\{(i,j), (i-1,j), (i,j-1)\\}$. For validity, $\\{i-1, i\\} \\subset \\{2,3,4\\}$ and $\\{j-1, j\\} \\subset \\{2,3,4\\}$. This restricts the anchor point to $i \\in \\{3,4\\}$ and $j \\in \\{3,4\\}$. There are $4$ such valid placements.\n- Anchor $(3,3)$: Cells are $\\{(3,3), (2,3), (3,2)\\}$. $U = E(3,3) + E(2,3) + E(3,2) = (-5) + (-3) + (-4) = -12$.\n- Anchor $(3,4)$: Cells are $\\{(3,4), (2,4), (3,3)\\}$. $U = E(3,4) + E(2,4) + E(3,3) = (-1) + 0 + (-5) = -6$.\n- Anchor $(4,3)$: Cells are $\\{(4,3), (3,3), (4,2)\\}$. $U = E(4,3) + E(3,3) + E(4,2) = (-2) + (-5) + 0 = -7$.\n- Anchor $(4,4)$: Cells are $\\{(4,4), (3,4), (4,3)\\}$. $U = E(4,4) + E(3,4) + E(4,3) = (-1) + (-1) + (-2) = -4$.\nThe minimum energy for this orientation is $-12$.\n\nCase 4: Rotation $R = 270^\\circ$ (clockwise)\nThe ligand shape becomes $\\{(i,j), (i-1,j), (i,j+1)\\}$. For validity, $\\{i-1, i\\} \\subset \\{2,3,4\\}$ and $\\{j, j+1\\} \\subset \\{2,3,4\\}$. This restricts the anchor point to $i \\in \\{3,4\\}$ and $j \\in \\{2,3\\}$. There are $4$ such valid placements.\n- Anchor $(3,2)$: Cells are $\\{(3,2), (2,2), (3,3)\\}$. $U = E(3,2) + E(2,2) + E(3,3) = (-4) + (-1) + (-5) = -10$.\n- Anchor $(3,3)$: Cells are $\\{(3,3), (2,3), (3,4)\\}$. $U = E(3,3) + E(2,3) + E(3,4) = (-5) + (-3) + (-1) = -9$.\n- Anchor $(4,2)$: Cells are $\\{(4,2), (3,2), (4,3)\\}$. $U = E(4,2) + E(3,2) + E(4,3) = 0 + (-4) + (-2) = -6$.\n- Anchor $(4,3)$: Cells are $\\{(4,3), (3,3), (4,4)\\}$. $U = E(4,3) + E(3,3) + E(4,4) = (-2) + (-5) + (-1) = -8$.\nThe minimum energy for this orientation is $-10$.\n\nComparing the minimum energies from all four orientations: $\\min\\{-9, -11, -12, -10\\}$. The global minimum energy is $-12$. This corresponds to the ligand rotated by $180^\\circ$ and placed with its anchor at $(3,3)$, thus occupying the cells $(3,3)$, $(2,3)$, and $(3,2)$, which have the most favorable energy contributions combined.", "answer": "$$\\boxed{-12}$$", "id": "2407435"}, {"introduction": "After understanding the conceptual basis of grid searching, the next step is to implement it using a physics-based scoring function. This practice moves beyond simple toy models by using the Lennard-Jones potential, a fundamental equation for modeling the attractive and repulsive forces between atoms. By writing code to perform a grid search for a single-atom ligand, you will directly engage with the mathematical and algorithmic details of calculating interaction energies and finding the optimal binding position. This exercise bridges the crucial gap between theoretical formulas and their practical application in a computational setting. [@problem_id:2407466]", "problem": "You are given a finite set of protein atom coordinates in three-dimensional ($3$D) Euclidean space with per-atom Lennard–Jones (LJ) parameters, and a single-atom ligand with its own LJ parameters. For any candidate ligand position $\\mathbf{r} \\in \\mathbb{R}^3$, the ligand–protein interaction energy is defined by the sum of pairwise LJ potentials with Lorentz–Berthelot mixing rules. Let the protein have atoms indexed by $i \\in \\{1,\\dots,N\\}$ at fixed positions $\\mathbf{R}_i \\in \\mathbb{R}^3$, each with parameters $\\epsilon_i > 0$ and $\\sigma_i > 0$. The ligand has parameters $\\epsilon_L > 0$ and $\\sigma_L > 0$. For a given protein atom $i$, define the mixed parameters by\n$$\n\\epsilon_{iL} \\;=\\; \\sqrt{\\epsilon_i \\,\\epsilon_L},\\qquad\n\\sigma_{iL} \\;=\\; \\frac{\\sigma_i + \\sigma_L}{2}.\n$$\nFor a ligand position $\\mathbf{r}$, with separation $r_i \\;=\\; \\|\\mathbf{r}-\\mathbf{R}_i\\|_2$, the pairwise LJ potential is\n$$\nV_{iL}(r_i) \\;=\\; 4\\,\\epsilon_{iL}\\left[\\left(\\frac{\\sigma_{iL}}{r_i}\\right)^{12} - \\left(\\frac{\\sigma_{iL}}{r_i}\\right)^{6}\\right],\n$$\nand the total energy is\n$$\nV(\\mathbf{r}) \\;=\\; \\sum_{i=1}^{N} V_{iL}\\!\\left(\\|\\mathbf{r}-\\mathbf{R}_i\\|_2\\right).\n$$\nDefine a steric clash factor $\\beta \\in (0,1)$ and declare a candidate position $\\mathbf{r}$ invalid if there exists any $i$ such that $r_i < \\beta\\,\\sigma_{iL}$; otherwise $\\mathbf{r}$ is valid. Consider a rectangular grid domain\n$$\n\\mathcal{G} \\;=\\; \\left\\{(x,y,z)\\;:\\; x = x_{\\min} + k_x h,\\; y = y_{\\min} + k_y h,\\; z = z_{\\min} + k_z h,\\;\nk_x,k_y,k_z \\in \\mathbb{Z},\\; x \\le x_{\\max},\\; y \\le y_{\\max},\\; z \\le z_{\\max}\\right\\},\n$$\nwhere $h>0$ is the grid spacing, and the bounds $[x_{\\min},x_{\\max}]$, $[y_{\\min},y_{\\max}]$, $[z_{\\min},z_{\\max}]$ are closed intervals aligned with the Cartesian axes. Let $\\mathcal{G}_{\\text{valid}} \\subseteq \\mathcal{G}$ be the subset of valid points. Define\n$$\nE^\\star \\;=\\; \\min_{\\mathbf{r} \\in \\mathcal{G}_{\\text{valid}}} V(\\mathbf{r}),\n$$\nwith the convention that if $\\mathcal{G}_{\\text{valid}} = \\emptyset$ then $E^\\star = +\\infty$. All energies must be expressed in Lennard–Jones reduced energy units, and the final numerical answers must be rounded to $6$ decimal places.\n\nYour task is to compute $E^\\star$ for each of the following test cases. Each test case specifies the protein atoms, their LJ parameters, the ligand LJ parameters, the grid bounds, the grid spacing, and the steric clash factor. When an interval has equal endpoints (e.g., $z_{\\min}=z_{\\max}$), the grid includes exactly that single coordinate along that axis. The required final program output is a single line containing the list of the resulting $E^\\star$ values for the test cases in order, formatted as a comma-separated list enclosed in square brackets, for example, $[e_1,e_2,\\dots]$, where each $e_j$ is a float rounded to $6$ decimal places.\n\nTest Suite:\n\n- Test Case $1$:\n  - Protein ($N=1$): positions $\\mathbf{R}_1 = (0,0,0)$, parameters $\\epsilon_1 = 0.2$, $\\sigma_1 = 3.5$.\n  - Ligand: $\\epsilon_L = 0.1$, $\\sigma_L = 3.0$.\n  - Grid: $x,y,z \\in [-5,5]$ with spacing $h=1.0$.\n  - Steric clash factor: $\\beta = 0.8$.\n\n- Test Case $2$:\n  - Protein ($N=2$): positions $\\mathbf{R}_1 = (-2,0,0)$, $\\mathbf{R}_2 = (2,0,0)$, parameters $\\epsilon_1 = 0.2$, $\\sigma_1 = 3.5$, $\\epsilon_2 = 0.2$, $\\sigma_2 = 3.5$.\n  - Ligand: $\\epsilon_L = 0.1$, $\\sigma_L = 3.0$.\n  - Grid: $x,y,z \\in [-3,3]$ with spacing $h=1.0$.\n  - Steric clash factor: $\\beta = 0.8$.\n\n- Test Case $3$:\n  - Protein ($N=3$): positions $\\mathbf{R}_1 = (0,0,0)$, $\\mathbf{R}_2 = (4,0,0)$, $\\mathbf{R}_3 = (0,4,0)$, parameters $\\epsilon_1 = 0.15$, $\\sigma_1 = 3.2$; $\\epsilon_2 = 0.25$, $\\sigma_2 = 3.6$; $\\epsilon_3 = 0.30$, $\\sigma_3 = 3.0$.\n  - Ligand: $\\epsilon_L = 0.2$, $\\sigma_L = 3.4$.\n  - Grid: $x,y \\in [-1,5]$, $z \\in [0,0]$, spacing $h=1.0$.\n  - Steric clash factor: $\\beta = 0.85$.\n\n- Test Case $4$:\n  - Protein ($N=1$): position $\\mathbf{R}_1 = (1,1,1)$, parameters $\\epsilon_1 = 0.2$, $\\sigma_1 = 3.0$.\n  - Ligand: $\\epsilon_L = 0.05$, $\\sigma_L = 2.5$.\n  - Grid: $x,y,z \\in [0,2]$ with spacing $h=1.0$.\n  - Steric clash factor: $\\beta = 0.75$.\n\nFinal Output Format:\n\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of Test Case $1$, Test Case $2$, Test Case $3$, Test Case $4$. Each entry must be a float rounded to $6$ decimal places, for example, $[-0.123456,-0.234567,-0.345678,-0.456789]$.", "solution": "The problem statement has been analyzed and is deemed valid. It is scientifically grounded in the principles of molecular mechanics, specifically the Lennard-Jones potential, and is well-posed as a discrete optimization problem. All definitions, parameters, and constraints are provided unambiguously, making the problem self-contained and solvable. The task is to find the minimum of a potential energy function over a finite set of points, which guarantees that a solution exists.\n\nThe problem requires the computation of the minimum interaction energy, $E^\\star$, for a single-atom ligand on a specified discrete grid of positions, $\\mathcal{G}$, around a fixed protein structure. The solution is found by a systematic, brute-force search over all points in the grid. The methodology for each test case is as follows.\n\nFirst, the search domain, a rectangular grid $\\mathcal{G}$, must be constructed. The grid is defined by the minimum and maximum coordinates along each Cartesian axis, $[x_{\\min}, x_{\\max}]$, $[y_{\\min}, y_{\\max}]$, $[z_{\\min}, z_{\\max}]$, and a uniform grid spacing, $h > 0$. The set of grid points $\\mathbf{r} = (x,y,z)$ is given by:\n$$\n\\mathcal{G} = \\left\\{ (x_{\\min} + k_x h, y_{\\min} + k_y h, z_{\\min} + k_z h) \\;\\middle|\\; k_x, k_y, k_z \\in \\mathbb{Z}_{\\ge 0};\\; x \\le x_{\\max}, y \\le y_{\\max}, z \\le z_{\\max} \\right\\}.\n$$\nAn algorithm must generate all points in this finite set.\n\nSecond, for each grid point $\\mathbf{r} \\in \\mathcal{G}$, we must determine if it is a valid position for the ligand. A position is declared invalid if it results in a steric clash with any of the $N$ protein atoms. According to the problem definition, a clash with protein atom $i$ occurs if the distance between the ligand and that atom, $r_i = \\|\\mathbf{r} - \\mathbf{R}_i\\|_2$, is less than a specified threshold. This threshold is defined by a factor $\\beta \\in (0,1)$ of the mixed Lennard-Jones radius parameter, $\\sigma_{iL}$. A position $\\mathbf{r}$ is valid if and only if for all protein atoms $i \\in \\{1, \\dots, N\\}$, the condition\n$$\nr_i \\ge \\beta \\sigma_{iL}\n$$\nis satisfied. The mixed parameter $\\sigma_{iL}$ is determined by the Lorentz-Berthelot mixing rule:\n$$\n\\sigma_{iL} = \\frac{\\sigma_i + \\sigma_L}{2},\n$$\nwhere $\\sigma_i$ and $\\sigma_L$ are the Lennard-Jones radii of protein atom $i$ and the ligand, respectively. If a grid point is found to be invalid, it is discarded from further consideration.\n\nThird, for every valid grid point $\\mathbf{r} \\in \\mathcal{G}_{\\text{valid}}$, the total interaction energy $V(\\mathbf{r})$ must be calculated. This total energy is the sum of pairwise Lennard-Jones potentials between the ligand and each protein atom:\n$$\nV(\\mathbf{r}) = \\sum_{i=1}^{N} V_{iL}(r_i),\n$$\nwhere $r_i = \\|\\mathbf{r} - \\mathbf{R}_i\\|_2$. The pairwise potential $V_{iL}$ is given by the standard $12$-$6$ Lennard-Jones form:\n$$\nV_{iL}(r_i) = 4 \\epsilon_{iL} \\left[ \\left(\\frac{\\sigma_{iL}}{r_i}\\right)^{12} - \\left(\\frac{\\sigma_{iL}}{r_i}\\right)^{6} \\right].\n$$\nThe mixed energy parameter, $\\epsilon_{iL}$, is also calculated using the Lorentz-Berthelot mixing rule:\n$$\n\\epsilon_{iL} = \\sqrt{\\epsilon_i \\epsilon_L},\n$$\nwhere $\\epsilon_i$ and $\\epsilon_L$ are the well-depth parameters for protein atom $i$ and the ligand.\n\nFinally, the target quantity $E^\\star$ is the global minimum of the energy function $V(\\mathbf{r})$ over the set of all valid grid points, $\\mathcal{G}_{\\text{valid}}$:\n$$\nE^\\star = \\min_{\\mathbf{r} \\in \\mathcal{G}_{\\text{valid}}} V(\\mathbf{r}).\n$$\nTo find this minimum, one initializes a variable $E_{\\min}$ to positive infinity ($+\\infty$). Then, one iterates through all grid points. If a point is valid, its energy is calculated and compared to $E_{\\min}$. If the new energy is lower, $E_{\\min}$ is updated. After all grid points have been processed, the final value of $E_{\\min}$ is the desired result $E^\\star$. If the set of valid points $\\mathcal{G}_{\\text{valid}}$ is empty, no energy calculations are performed, and the result remains $E^\\star = +\\infty$, as per the problem's convention. The final numerical values are rounded to $6$ decimal places.\n\nThis procedure is implemented for each test case to obtain the required set of minimum energy values.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the molecular docking grid search problem for a series of test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"protein_atoms\": [(np.array([0.0, 0.0, 0.0]), 0.2, 3.5)],\n            \"ligand\": (0.1, 3.0),\n            \"grid_bounds\": ([-5.0, 5.0], [-5.0, 5.0], [-5.0, 5.0]),\n            \"h\": 1.0,\n            \"beta\": 0.8\n        },\n        {\n            \"protein_atoms\": [\n                (np.array([-2.0, 0.0, 0.0]), 0.2, 3.5),\n                (np.array([2.0, 0.0, 0.0]), 0.2, 3.5),\n            ],\n            \"ligand\": (0.1, 3.0),\n            \"grid_bounds\": ([-3.0, 3.0], [-3.0, 3.0], [-3.0, 3.0]),\n            \"h\": 1.0,\n            \"beta\": 0.8\n        },\n        {\n            \"protein_atoms\": [\n                (np.array([0.0, 0.0, 0.0]), 0.15, 3.2),\n                (np.array([4.0, 0.0, 0.0]), 0.25, 3.6),\n                (np.array([0.0, 4.0, 0.0]), 0.30, 3.0),\n            ],\n            \"ligand\": (0.2, 3.4),\n            \"grid_bounds\": ([-1.0, 5.0], [-1.0, 5.0], [0.0, 0.0]),\n            \"h\": 1.0,\n            \"beta\": 0.85\n        },\n        {\n            \"protein_atoms\": [(np.array([1.0, 1.0, 1.0]), 0.2, 3.0)],\n            \"ligand\": (0.05, 2.5),\n            \"grid_bounds\": ([0.0, 2.0], [0.0, 2.0], [0.0, 2.0]),\n            \"h\": 1.0,\n            \"beta\": 0.75\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        protein_atoms_data = case[\"protein_atoms\"]\n        eps_L, sig_L = case[\"ligand\"]\n        (x_min, x_max), (y_min, y_max), (z_min, z_max) = case[\"grid_bounds\"]\n        h = case[\"h\"]\n        beta = case[\"beta\"]\n\n        # Generate grid coordinates\n        # Use a small tolerance in arange to include the endpoint robustly\n        x_coords = np.arange(x_min, x_max + h/2, h)\n        y_coords = np.arange(y_min, y_max + h/2, h)\n        z_coords = np.arange(z_min, z_max + h/2, h)\n\n        # Create all grid points\n        grid_points = np.stack(np.meshgrid(x_coords, y_coords, z_coords, indexing='ij'), axis=-1).reshape(-1, 3)\n\n        # Pre-calculate mixed parameters and clash distances\n        mixed_params = []\n        for R_i, eps_i, sig_i in protein_atoms_data:\n            eps_iL = np.sqrt(eps_i * eps_L)\n            sig_iL = (sig_i + sig_L) / 2.0\n            clash_dist = beta * sig_iL\n            mixed_params.append({\n                \"R_i\": R_i,\n                \"eps_iL\": eps_iL,\n                \"sig_iL\": sig_iL,\n                \"clash_dist\": clash_dist\n            })\n\n        min_total_energy = np.inf\n\n        for r_ligand in grid_points:\n            total_energy = 0.0\n            is_valid = True\n            for params in mixed_params:\n                R_i = params[\"R_i\"]\n                eps_iL = params[\"eps_iL\"]\n                sig_iL = params[\"sig_iL\"]\n                clash_dist = params[\"clash_dist\"]\n\n                dist = np.linalg.norm(r_ligand - R_i)\n\n                # Steric clash check\n                if dist < clash_dist:\n                    is_valid = False\n                    break\n                \n                # Although clash check prevents d=0 for beta>0, it's good practice.\n                if dist == 0.0:\n                    is_valid = False\n                    break\n\n                ratio = sig_iL / dist\n                ratio6 = ratio**6\n                ratio12 = ratio6**2\n                pairwise_energy = 4.0 * eps_iL * (ratio12 - ratio6)\n                total_energy += pairwise_energy\n            \n            if is_valid:\n                min_total_energy = min(min_total_energy, total_energy)\n        \n        results.append(min_total_energy)\n\n    # Format the final output string as specified.\n    formatted_results = []\n    for res in results:\n        if np.isfinite(res):\n            formatted_results.append(f\"{res:.6f}\")\n        else:\n            # Handle the case of positive infinity\n            formatted_results.append('inf')\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2407466"}]}