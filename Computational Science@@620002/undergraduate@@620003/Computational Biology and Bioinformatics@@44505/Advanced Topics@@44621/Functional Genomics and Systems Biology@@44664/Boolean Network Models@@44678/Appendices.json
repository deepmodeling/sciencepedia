{"hands_on_practices": [{"introduction": "Understanding the dynamics of a Boolean network begins with the ability to simulate its evolution over time from a given starting point. This hands-on practice guides you through the process of calculating a network's state trajectory step-by-step using a synchronous update scheme. By tracing the sequence of states, you will directly observe how the defined logical rules lead the system towards its long-term fate, known as an attractor, which could be a stable fixed point or a recurring cycle [@problem_id:1419905].", "problem": "Consider a simplified model of a gene regulatory network consisting of four genes, denoted $G_1, G_2, G_3$, and $G_4$. The state of each gene can be either ON (represented by 1) or OFF (represented by 0). The state of the entire network at a discrete time step $t$ is described by a vector $S(t) = (x_1(t), x_2(t), x_3(t), x_4(t))$, where $x_i(t)$ is the state of gene $G_i$.\n\nThe network evolves according to a synchronous update scheme, where the state of all genes at time $t+1$ is determined simultaneously based on the state of the network at time $t$. The logical rules governing the interactions are as follows:\n\n- The expression of gene $G_1$ is repressed by gene $G_4$:\n  $x_1(t+1) = \\text{NOT } x_4(t)$\n\n- The expression of gene $G_2$ requires both genes $G_1$ and $G_3$ to be ON:\n  $x_2(t+1) = x_1(t) \\text{ AND } x_3(t)$\n\n- The expression of gene $G_3$ is activated if either gene $G_1$ or gene $G_2$ is ON:\n  $x_3(t+1) = x_1(t) \\text{ OR } x_2(t)$\n\n- The expression of gene $G_4$ is activated by gene $G_3$:\n  $x_4(t+1) = x_3(t)$\n\nIn this context, the logical operations are defined for binary values: NOT 1 = 0, NOT 0 = 1; 1 AND 1 = 1, otherwise 0; 0 OR 0 = 0, otherwise 1.\n\nThe network is initialized at time $t=0$ in the state $S(0) = (1, 0, 0, 0)$. Determine the long-term behavior (the attractor) of the network starting from this initial state.\n\nA. The network reaches a fixed point at $(0, 0, 0, 0)$.\n\nB. The network reaches a fixed point at $(1, 1, 1, 1)$.\n\nC. The network enters a limit cycle of length 2.\n\nD. The network enters a limit cycle of length 4.\n\nE. The network enters a limit cycle of length 7.\n\nF. The network enters a limit cycle of a length other than 2, 4, or 7.", "solution": "We represent the Boolean update rules arithmetically for binary variables $x_{i}(t) \\in \\{0,1\\}$:\n$$x_{1}(t+1)=1-x_{4}(t),\\quad x_{2}(t+1)=x_{1}(t)\\,x_{3}(t),\\quad x_{3}(t+1)=x_{1}(t)+x_{2}(t)-x_{1}(t)\\,x_{2}(t),\\quad x_{4}(t+1)=x_{3}(t).$$\nStarting from $S(0)=(1,0,0,0)$, compute iterates synchronously.\n\nAt $t=1$:\n$$x_{1}(1)=1-x_{4}(0)=1-0=1,$$\n$$x_{2}(1)=x_{1}(0)\\,x_{3}(0)=1\\cdot 0=0,$$\n$$x_{3}(1)=x_{1}(0)+x_{2}(0)-x_{1}(0)\\,x_{2}(0)=1+0-0=1,$$\n$$x_{4}(1)=x_{3}(0)=0,$$\nso $S(1)=(1,0,1,0)$.\n\nAt $t=2$:\n$$x_{1}(2)=1-x_{4}(1)=1-0=1,$$\n$$x_{2}(2)=x_{1}(1)\\,x_{3}(1)=1\\cdot 1=1,$$\n$$x_{3}(2)=x_{1}(1)+x_{2}(1)-x_{1}(1)\\,x_{2}(1)=1+0-0=1,$$\n$$x_{4}(2)=x_{3}(1)=1,$$\nso $S(2)=(1,1,1,1)$.\n\nAt $t=3$:\n$$x_{1}(3)=1-x_{4}(2)=1-1=0,$$\n$$x_{2}(3)=x_{1}(2)\\,x_{3}(2)=1\\cdot 1=1,$$\n$$x_{3}(3)=x_{1}(2)+x_{2}(2)-x_{1}(2)\\,x_{2}(2)=1+1-1=1,$$\n$$x_{4}(3)=x_{3}(2)=1,$$\nso $S(3)=(0,1,1,1)$.\n\nAt $t=4$:\n$$x_{1}(4)=1-x_{4}(3)=1-1=0,$$\n$$x_{2}(4)=x_{1}(3)\\,x_{3}(3)=0\\cdot 1=0,$$\n$$x_{3}(4)=x_{1}(3)+x_{2}(3)-x_{1}(3)\\,x_{2}(3)=0+1-0=1,$$\n$$x_{4}(4)=x_{3}(3)=1,$$\nso $S(4)=(0,0,1,1)$.\n\nAt $t=5$:\n$$x_{1}(5)=1-x_{4}(4)=1-1=0,$$\n$$x_{2}(5)=x_{1}(4)\\,x_{3}(4)=0\\cdot 1=0,$$\n$$x_{3}(5)=x_{1}(4)+x_{2}(4)-x_{1}(4)\\,x_{2}(4)=0+0-0=0,$$\n$$x_{4}(5)=x_{3}(4)=1,$$\nso $S(5)=(0,0,0,1)$.\n\nAt $t=6$:\n$$x_{1}(6)=1-x_{4}(5)=1-1=0,$$\n$$x_{2}(6)=x_{1}(5)\\,x_{3}(5)=0\\cdot 0=0,$$\n$$x_{3}(6)=x_{1}(5)+x_{2}(5)-x_{1}(5)\\,x_{2}(5)=0+0-0=0,$$\n$$x_{4}(6)=x_{3}(5)=0,$$\nso $S(6)=(0,0,0,0)$.\n\nAt $t=7$:\n$$x_{1}(7)=1-x_{4}(6)=1-0=1,$$\n$$x_{2}(7)=x_{1}(6)\\,x_{3}(6)=0\\cdot 0=0,$$\n$$x_{3}(7)=x_{1}(6)+x_{2}(6)-x_{1}(6)\\,x_{2}(6)=0+0-0=0,$$\n$$x_{4}(7)=x_{3}(6)=0,$$\nso $S(7)=(1,0,0,0)=S(0)$.\n\nThe trajectory visits the seven distinct states\n$$(1,0,0,0)\\to(1,0,1,0)\\to(1,1,1,1)\\to(0,1,1,1)\\to(0,0,1,1)\\to(0,0,0,1)\\to(0,0,0,0)\\to(1,0,0,0),$$\nand returns to the initial state for the first time at $t=7$. Therefore, the attractor is a limit cycle of length $7$, corresponding to option E.", "answer": "$$\\boxed{E}$$", "id": "1419905"}, {"introduction": "While some networks evolve through long cycles, many biological systems settle into stable steady states, also known as fixed points, which can represent distinct cellular phenotypes like differentiation or disease. This exercise challenges you to identify these fixed points by solving the network's governing equations, moving beyond simple step-by-step simulation. By comparing two slightly different network designs, you will uncover how a small change in a logical rule can dramatically alter the number of stable states, a concept fundamental to understanding biological switches and bistability [@problem_id:1419897].", "problem": "Consider a synthetic gene regulatory network comprised of two genes, Gene 1 (G1) and Gene 2 (G2). In a Boolean model of this network, the state of each gene can be either 'ON' (represented by 1) or 'OFF' (represented by 0). The state of the entire system at a discrete time step $t$ is given by the pair of values $(g_{1,t}, g_{2,t})$, where $g_{i,t}$ is the state of Gene $i$. The system updates synchronously, meaning the state at time $t+1$ is determined entirely by the state at time $t$.\n\nIn an initial design, referred to as Circuit A, the network's behavior is governed by two external input signals, S1 and S2 (also represented by 0 or 1), and a set of logical rules. The state of each gene at the next time step is determined as follows, using standard Boolean OR logic:\n- $g_{1,t+1} = S_1 \\text{ OR } g_{2,t}$\n- $g_{2,t+1} = S_2 \\text{ OR } g_{1,t}$\n\nA steady state (or fixed point) of the network is a state $(g_1, g_2)$ that, once reached, does not change over time. That is, if the system is in a steady state at time $t$, it remains in that same state at time $t+1$. Let $N_A$ be the total number of distinct steady states for Circuit A in the absence of any external signals (i.e., when $S_1=0$ and $S_2=0$).\n\nNext, the design is modified to create Circuit B. The logical rule for the activation of G1 is changed from OR to AND, while the rule for G2 remains the same:\n- $g_{1,t+1} = S_1 \\text{ AND } g_{2,t}$\n- $g_{2,t+1} = S_2 \\text{ OR } g_{1,t}$\n\nLet $N_B$ be the total number of distinct steady states for this modified Circuit B, also in the absence of external signals ($S_1=0$ and $S_2=0$).\n\nDetermine the values of $N_A$ and $N_B$. Which of the following options correctly reports the pair $(N_A, N_B)$?\n\nA. (1, 1)\n\nB. (2, 1)\n\nC. (2, 2)\n\nD. (4, 2)\n\nE. (1, 0)", "solution": "We consider synchronous Boolean updates and fixed points defined by $(g_{1,t+1}, g_{2,t+1})=(g_{1,t}, g_{2,t})$.\n\nFor Circuit A with $S_{1}=0$ and $S_{2}=0$, the update rules reduce to\n$$\ng_{1,t+1}=g_{2,t}, \\quad g_{2,t+1}=g_{1,t}.\n$$\nA steady state $(g_{1},g_{2})$ must satisfy\n$$\ng_{1}=g_{2}, \\quad g_{2}=g_{1},\n$$\nwhich implies $g_{1}=g_{2}$. Since $g_{1},g_{2}\\in\\{0,1\\}$, the steady states are $(0,0)$ and $(1,1)$. Therefore, $N_{A}=2$.\n\nFor Circuit B with $S_{1}=0$ and $S_{2}=0$, the update rules reduce to\n$$\ng_{1,t+1}=0\\land g_{2,t}=0, \\quad g_{2,t+1}=0\\lor g_{1,t}=g_{1,t}.\n$$\nA steady state $(g_{1},g_{2})$ must satisfy\n$$\ng_{1}=0, \\quad g_{2}=g_{1}=0,\n$$\nwhich yields the unique fixed point $(0,0)$. Therefore, $N_{B}=1$.\n\nThus $(N_{A},N_{B})=(2,1)$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1419897"}, {"introduction": "The predictions of a Boolean model depend not only on the logical rules between nodes but also on the assumptions made about the timing of their updates. This practice introduces a critical distinction between synchronous updates, where all nodes change in unison, and asynchronous updates, where nodes change one at a time, which can be a more realistic scenario in biology. You will investigate whether an attractor identified under a synchronous scheme persists when the model is switched to an asynchronous framework, revealing how sensitive a network's behavior can be to its underlying modeling assumptions [@problem_id:1419944].", "problem": "In the study of genetic regulatory networks, Boolean network models offer a simplified yet powerful framework for understanding system dynamics. A network's evolution can be modeled using different update schemes. In a synchronous scheme, all nodes update their states simultaneously at each discrete time step. In contrast, under a General Asynchronous (GA) scheme, only one node, chosen uniformly at random at each time step, updates its state.\n\nConsider a small hypothetical gene regulatory network consisting of three nodes (genes), represented by Boolean variables $X_1, X_2, \\text{and } X_3$, where a state of 1 represents an \"ON\" (expressed) gene and 0 represents an \"OFF\" (inhibited) gene. The regulatory logic is described by the following Boolean update functions:\n\n$f_1(X_3) = \\neg X_3$\n$f_2(X_1) = X_1$\n$f_3(X_1, X_2) = X_1 \\land X_2$\n\nHere, $\\neg$ denotes the NOT operator and $\\land$ denotes the AND operator. Under a synchronous update scheme, this network is known to exhibit a single complex attractor, a limit cycle of length 5, and it has no steady states (fixed points).\n\nYour task is to analyze the behavior of this network under the General Asynchronous (GA) updating scheme. A state is defined as a steady-state attractor in the GA scheme if an update of any single, randomly chosen node leaves the overall state of the network unchanged.\n\nWhich of the following options correctly describes the complete set of steady-state attractors for this network under the GA scheme?\n\nA. The single state (0, 0, 0)\n\nB. The single state (1, 1, 1)\n\nC. The two states (1, 1, 0) and (0, 0, 1)\n\nD. The states (1, 0, 0) and (0, 1, 1)\n\nE. No steady states exist.", "solution": "Under the GA scheme, a state is a steady-state attractor if updating any single node leaves the state unchanged. This means that in such a state each node already equals the value prescribed by its update function given the current values of its inputs. Therefore, a GA steady state must satisfy the fixed-point equations\n$$\nX_{1}=f_{1}(X_{3})=\\neg X_{3},\\quad X_{2}=f_{2}(X_{1})=X_{1},\\quad X_{3}=f_{3}(X_{1},X_{2})=X_{1}\\land X_{2}.\n$$\nWe solve these simultaneously. From $X_{2}=X_{1}$, substitute into $X_{3}=X_{1}\\land X_{2}$ to obtain\n$$\nX_{3}=X_{1}\\land X_{1}=X_{1}.\n$$\nSubstitute $X_{3}=X_{1}$ into $X_{1}=\\neg X_{3}$ to get\n$$\nX_{1}=\\neg X_{1}.\n$$\nNo Boolean value satisfies $X_{1}=\\neg X_{1}$, hence the system has no solution. Therefore, there are no states for which an update of any single node leaves the state unchanged under GA.\n\nConsequently, the correct choice is that no steady states exist.", "answer": "$$\\boxed{E}$$", "id": "1419944"}]}