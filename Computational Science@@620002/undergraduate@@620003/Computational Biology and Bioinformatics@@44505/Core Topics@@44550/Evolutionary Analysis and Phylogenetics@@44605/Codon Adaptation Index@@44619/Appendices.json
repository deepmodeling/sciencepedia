{"hands_on_practices": [{"introduction": "This first practice exercise is designed to solidify your understanding of the core mechanics behind the Codon Adaptation Index (CAI). By working through a concrete example [@problem_id:2843211], you will see how a gene's sequence is converted into a quantitative score reflecting its potential for efficient translation. This hands-on calculation will reinforce why the CAI uses a geometric mean, a crucial choice that makes the index sensitive to translational \"bottlenecks\" that can limit protein synthesis.", "problem": "In a prokaryotic genome, patterns of codon usage reflect selection for translational efficiency and accuracy, grounded in the Central Dogma of Molecular Biology and the degeneracy of the genetic code. In many bacteria, highly expressed genes exhibit biased usage of synonymous codons that match abundant transfer ribonucleic acid (tRNA) species. This observation motivates a quantitative measure of how well a gene’s codon composition matches that of a reference set of highly expressed genes. The codon adaptation index (CAI) is constructed from codon-specific relative adaptiveness values derived from the reference set, where each codon’s relative adaptiveness can be obtained, for example, by normalizing its Relative Synonymous Codon Usage (RSCU) by the maximum RSCU among its synonymous codons.\n\nYou are given a messenger ribonucleic acid (mRNA) coding sequence (reading frame $+1$) for a putative open reading frame beginning with a canonical start codon and ending with a stop codon (stop codon shown for completeness but not to be scored in CAI). The coding sequence, written $5'$ to $3'$, is:\nAUG GCU GCU GAA GAA UUU UUC CGU CGC AGA UGG GCG AAG UAA.\n\nA reference set of highly expressed genes for this organism has been used to compute organism-specific relative adaptiveness weights $w(\\text{codon})$ for the codons that appear in the above sequence. Those weights are:\n- Methionine (AUG): $1.00$.\n- Alanine (GCU): $0.35$; Alanine (GCG): $0.80$.\n- Glutamate (GAA): $0.65$.\n- Phenylalanine (UUU): $0.55$; Phenylalanine (UUC): $1.00$.\n- Arginine (CGU): $0.40$; Arginine (CGC): $0.95$; Arginine (AGA): $0.85$.\n- Tryptophan (UGG): $1.00$.\n- Lysine (AAG): $1.00$.\n\nTasks:\n1. Starting from the fundamental observations about degeneracy of the genetic code and codon usage bias in highly expressed genes, provide a precise, graduate-level definition of the codon adaptation index (CAI) that explains its construction from codon-specific relative adaptiveness values and justifies the use of a length-normalized multiplicative aggregation rather than an additive one.\n2. Using only the codons between the start codon and the terminal stop codon (exclude the stop codon itself), compute the CAI for this open reading frame under the standard construction implied above, taking single-codon amino acids (methionine and tryptophan) to have weight $1$. Round your final numerical answer to four significant figures. The CAI is dimensionless; report it as a pure number.", "solution": "The problem statement as presented is scientifically grounded, well-posed, and objective. It is based on established principles of molecular genetics and bioinformatics, specifically the Central Dogma, the degeneracy of the genetic code, and the concept of codon usage bias. The provided data—a messenger ribonucleic acid (mRNA) sequence and a set of codon-specific relative adaptiveness weights—are sufficient and consistent for the required calculations. The tasks are clearly defined and formalizable. Therefore, the problem is valid and a solution will be provided.\n\nThe problem consists of two tasks: first, to provide a formal definition of the Codon Adaptation Index (CAI), and second, to calculate its value for a given sequence.\n\nTask 1: Definition of the Codon Adaptation Index (CAI)\n\nThe theoretical foundation of the Codon Adaptation Index (CAI) lies in fundamental observations of molecular biology. The genetic code is degenerate, meaning that most amino acids are encoded by more than one codon, known as synonymous codons. It has been empirically observed, particularly in rapidly dividing microorganisms, that synonymous codons are not used with equal frequency. This phenomenon is termed codon usage bias. The prevailing hypothesis, supported by substantial evidence, is that this bias is a result of natural selection acting to optimize translational efficiency and accuracy. Genes that must be expressed at very high levels, such as those for ribosomal proteins or glycolytic enzymes, show a strong bias towards using a specific subset of \"optimal\" codons. These optimal codons are recognized by the most abundant species of transfer RNA (tRNA) in the cell, thus facilitating rapid and efficient polypeptide elongation.\n\nBased on these principles, the CAI is a quantitative measure designed to assess the extent to which a gene utilizes these preferred codons. It predicts the level of expression of a gene under the assumption that translational selection is the dominant force shaping its codon usage pattern. A higher CAI value suggests that a gene is likely to be highly expressed.\n\nThe construction of the CAI proceeds as follows:\n\n1.  A reference set of highly expressed genes for a specific organism is defined. This set is presumed to represent the \"optimal\" codon usage for that organism.\n\n2.  From this reference set, the relative adaptiveness, $w_c$, of each codon, $c$, is calculated. For a given amino acid, the codon used most frequently in the reference set is assigned a relative adaptiveness of $1.0$. The relative adaptiveness of any other synonymous codon, $c_i$, for that same amino acid is the ratio of its frequency of use, $f_i$, to the frequency of the most-used codon, $f_{\\text{max}}$.\n    $$w_{c_i} = \\frac{f_i}{f_{\\text{max}}}$$\n    For amino acids encoded by only one codon (Methionine, encoded by `AUG`, and Tryptophan, encoded by `UGG`), there is no codon choice, and their relative adaptiveness is defined as $1.0$.\n\n3.  The CAI for a given gene of length $L$ codons (excluding the stop codon) is then calculated as the geometric mean of the relative adaptiveness values for each codon in its coding sequence. If $w_k$ is the relative adaptiveness of the $k$-th codon in the gene, the CAI is given by the formula:\n    $$ \\text{CAI} = \\left( \\prod_{k=1}^{L} w_k \\right)^{\\frac{1}{L}} $$\n    This can also be expressed equivalently using logarithms, which is often more numerically stable:\n    $$ \\text{CAI} = \\exp\\left( \\frac{1}{L} \\sum_{k=1}^{L} \\ln(w_k) \\right) $$\n\nThe use of a multiplicative aggregation (geometric mean) rather than an additive one (arithmetic mean) is a critical feature of the CAI. Protein synthesis is a sequential process where each codon is translated in order. The overall rate of synthesis can be limited by the slowest step, which corresponds to the translation of the codon with the lowest adaptiveness (i.e., the one recognized by the rarest tRNA). An arithmetic mean would obscure this \"bottleneck\" effect, as a few highly optimal codons could numerically compensate for one very poor codon. The geometric mean, however, is highly sensitive to low values. A single codon with a relative adaptiveness approaching zero will drive the entire CAI value towards zero, correctly reflecting the disproportionate negative impact of a single rate-limiting step on overall translational efficiency.\n\nTask 2: Calculation of the CAI\n\nThe provided mRNA sequence is $5'$-`AUG GCU GCU GAA GAA UUU UUC CGU CGC AGA UGG GCG AAG UAA`-$3'$. The problem requires the calculation to exclude the stop codon (`UAA`). The coding sequence to be scored therefore begins with the start codon `AUG` and ends with `AAG`. The total length of the sequence to be scored is $L = 13$ codons.\n\nThe sequence of codons and their corresponding relative adaptiveness weights, $w_k$, as provided are:\n1.  Codon 1: `AUG`, $w_1 = 1.00$\n2.  Codon 2: `GCU`, $w_2 = 0.35$\n3.  Codon 3: `GCU`, $w_3 = 0.35$\n4.  Codon 4: `GAA`, $w_4 = 0.65$\n5.  Codon 5: `GAA`, $w_5 = 0.65$\n6.  Codon 6: `UUU`, $w_6 = 0.55$\n7.  Codon 7: `UUC`, $w_7 = 1.00$\n8.  Codon 8: `CGU`, $w_8 = 0.40$\n9.  Codon 9: `CGC`, $w_9 = 0.95$\n10. Codon 10: `AGA`, $w_{10} = 0.85$\n11. Codon 11: `UGG`, $w_{11} = 1.00$\n12. Codon 12: `GCG`, $w_{12} = 0.80$\n13. Codon 13: `AAG`, $w_{13} = 1.00$\n\nThe CAI is the geometric mean of these $13$ weights:\n$$ \\text{CAI} = \\left( w_1 \\times w_2 \\times w_3 \\times \\dots \\times w_{13} \\right)^{\\frac{1}{13}} $$\nFirst, we compute the product of the weights:\n$$ \\prod_{k=1}^{13} w_k = (1.00) \\times (0.35) \\times (0.35) \\times (0.65) \\times (0.65) \\times (0.55) \\times (1.00) \\times (0.40) \\times (0.95) \\times (0.85) \\times (1.00) \\times (0.80) \\times (1.00) $$\n$$ \\prod_{k=1}^{13} w_k = (0.35)^2 \\times (0.65)^2 \\times 0.55 \\times 0.40 \\times 0.95 \\times 0.85 \\times 0.80 $$\n$$ \\prod_{k=1}^{13} w_k = (0.1225) \\times (0.4225) \\times (0.55) \\times (0.40) \\times (0.95) \\times (0.85) \\times (0.80) $$\n$$ \\prod_{k=1}^{13} w_k = 0.007355600375 $$\nNow, we take the $13$-th root of this product:\n$$ \\text{CAI} = (0.007355600375)^{\\frac{1}{13}} $$\n$$ \\text{CAI} \\approx 0.68532408 $$\nThe problem requires the answer to be rounded to four significant figures.\n$$ \\text{CAI} \\approx 0.6853 $$\nThis value, being between $0$ and $1$, represents a moderate level of codon adaptation for the given gene in the context of the specified organism's translational machinery.", "answer": "$$\\boxed{0.6853}$$", "id": "2843211"}, {"introduction": "Moving from pure calculation to practical application, this next exercise places you in the role of a synthetic biologist aiming to optimize a gene for higher expression. The challenge [@problem_id:2380006] is to devise an algorithm that can identify the single most effective synonymous codon substitution to boost a gene's CAI. This problem not only tests your understanding of CAI but also encourages an efficient, algorithmic approach to problem-solving, a cornerstone of computational biology.", "problem": "You are given the task of computing the Codon Adaptation Index (CAI) and determining, for each supplied gene, the single synonymous codon substitution that leads to the largest possible increase in CAI. The Codon Adaptation Index is a measure derived from codon usage bias in a reference set of highly expressed genes. It is based on the following fundamental concepts from the Central Dogma of molecular biology: deoxyribonucleic acid (DNA) is translated into protein via triplet codons, each codon specifying an amino acid; several codons can code for the same amino acid, and their usage can be biased in a given organism or condition.\n\nDefinitions and constraints:\n- Let a coding DNA sequence be a string over the alphabet $\\{A,C,G,T\\}$ whose length is divisible by $3$, partitioned into $n$ codons. Assume the standard genetic code and that there are no stop codons inside the sequence.\n- For each amino acid, a reference codon usage table specifies, for each sense codon $c$, a nonnegative reference value $f(c)$ that is proportional to how often that codon is used in highly expressed genes.\n- For each amino acid $a$, let $\\mathcal{S}(a)$ be its set of synonymous sense codons. Define the relative adaptiveness weight $w(c)$ of a codon $c \\in \\mathcal{S}(a)$ by $w(c) = f(c) / \\max\\{f(c') : c' \\in \\mathcal{S}(a)\\}$. For amino acids with a single codon, $w(c) = 1$ by definition.\n- The Codon Adaptation Index (CAI) of a gene comprising codons $(c_1, c_2, \\dots, c_n)$ is the geometric mean of their relative adaptiveness weights, that is, the $n$th root of the product of $w(c_i)$ over all positions $i \\in \\{1,\\dots,n\\}$.\n- A single codon change is defined here as altering exactly one codon in the gene to another codon that is synonymous for the amino acid at that position (thereby leaving the encoded amino acid sequence unchanged). You may choose any synonymous codon as the replacement (not restricted to a single-nucleotide mutation).\n- If no synonymous substitution increases the CAI, the required result for that gene is $0$, since you could choose to make no change.\n\nTask:\n- Using the definitions above as the fundamental base, implement a program that, for each given gene, computes the maximum achievable increase in CAI obtainable by exactly one synonymous codon substitution anywhere in the gene. Use only the provided reference codon usage table below. Ignore start and stop special cases beyond the standard genetic code mapping; compute CAI strictly from $w(c)$ over all codons present in the gene.\n\nReference codon usage table $f(c)$ (hypothetical organism, standard genetic code, sense codons only). For each amino acid, the values $f(c)$ are proportional to usage within its synonymous set:\n- Phenylalanine (F): $TTT \\mapsto 0.3$, $TTC \\mapsto 0.7$.\n- Leucine (L): $TTA \\mapsto 0.05$, $TTG \\mapsto 0.1$, $CTT \\mapsto 0.1$, $CTC \\mapsto 0.2$, $CTA \\mapsto 0.05$, $CTG \\mapsto 0.5$.\n- Isoleucine (I): $ATT \\mapsto 0.35$, $ATC \\mapsto 0.6$, $ATA \\mapsto 0.05$.\n- Methionine (M): $ATG \\mapsto 1.0$.\n- Valine (V): $GTT \\mapsto 0.2$, $GTC \\mapsto 0.25$, $GTA \\mapsto 0.05$, $GTG \\mapsto 0.5$.\n- Serine (S): $TCT \\mapsto 0.15$, $TCC \\mapsto 0.3$, $TCA \\mapsto 0.04$, $TCG \\mapsto 0.1$, $AGT \\mapsto 0.06$, $AGC \\mapsto 0.35$.\n- Proline (P): $CCT \\mapsto 0.2$, $CCC \\mapsto 0.2$, $CCA \\mapsto 0.1$, $CCG \\mapsto 0.5$.\n- Threonine (T): $ACT \\mapsto 0.2$, $ACC \\mapsto 0.55$, $ACA \\mapsto 0.1$, $ACG \\mapsto 0.15$.\n- Alanine (A): $GCT \\mapsto 0.2$, $GCC \\mapsto 0.5$, $GCA \\mapsto 0.1$, $GCG \\mapsto 0.2$.\n- Tyrosine (Y): $TAT \\mapsto 0.3$, $TAC \\mapsto 0.7$.\n- Histidine (H): $CAT \\mapsto 0.3$, $CAC \\mapsto 0.7$.\n- Glutamine (Q): $CAA \\mapsto 0.3$, $CAG \\mapsto 0.7$.\n- Asparagine (N): $AAT \\mapsto 0.3$, $AAC \\mapsto 0.7$.\n- Lysine (K): $AAA \\mapsto 0.4$, $AAG \\mapsto 0.6$.\n- Aspartic acid (D): $GAT \\mapsto 0.4$, $GAC \\mapsto 0.6$.\n- Glutamic acid (E): $GAA \\mapsto 0.6$, $GAG \\mapsto 0.4$.\n- Cysteine (C): $TGT \\mapsto 0.35$, $TGC \\mapsto 0.65$.\n- Tryptophan (W): $TGG \\mapsto 1.0$.\n- Arginine (R): $CGT \\mapsto 0.35$, $CGC \\mapsto 0.4$, $CGA \\mapsto 0.1$, $CGG \\mapsto 0.1$, $AGA \\mapsto 0.03$, $AGG \\mapsto 0.02$.\n- Glycine (G): $GGT \\mapsto 0.3$, $GGC \\mapsto 0.45$, $GGA \\mapsto 0.15$, $GGG \\mapsto 0.1$.\n\nTest suite:\nCompute the required quantity (maximum CAI increase achievable by one synonymous codon change) for each of the following genes. All sequences use the standard genetic code, contain only sense codons, and have length divisible by $3$.\n- Gene $1$: $ATGAGGATATTATCAGAAGGTGTTAAACAT$.\n- Gene $2$: $ATGCTGCGCAGCATCGTGCCGGCC$.\n- Gene $3$: $ATGTGGATGTGGATGTGG$.\n\nOutput specification:\n- For each gene, output a real number equal to the maximum CAI increase achievable by exactly one synonymous codon substitution (or $0$ if no increase is possible), rounded to exactly six digits after the decimal point.\n- Your program should produce a single line of output containing the results for the three genes as a comma-separated list enclosed in square brackets, with no spaces. For example, the format must be exactly like $[x_1,x_2,x_3]$ where each $x_i$ is a decimal with six digits after the decimal point.\n- There are no physical units involved in this computation. Do not use percentage signs; report decimal numbers.\n\nNotes:\n- You must implement the standard genetic code mapping for sense codons.\n- Your implementation must be general for any valid input gene using the provided reference table.", "solution": "The problem requires the calculation of the maximum possible increase in the Codon Adaptation Index (CAI) for a given gene sequence, achievable by a single synonymous codon substitution. The problem is scientifically grounded, well-posed, and provides all necessary information for a deterministic solution.\n\nFirst, we formalize the definitions provided. A gene is a sequence of $n$ codons, $(c_1, c_2, \\dots, c_n)$. For each codon $c$, which codes for an amino acid $a$, its relative adaptiveness weight $w(c)$ is defined as:\n$$ w(c) = \\frac{f(c)}{\\max\\{f(c') : c' \\in \\mathcal{S}(a)\\}} $$\nwhere $\\mathcal{S}(a)$ is the set of synonymous codons for amino acid $a$, and $f(c)$ is a reference frequency value. By this definition, for any amino acid, there exists at least one \"optimal\" codon $c_{\\text{opt}}$ for which $w(c_{\\text{opt}}) = 1$. For all other synonymous codons $c'$, $w(c') \\le 1$. For amino acids with a single codon (Methionine, Tryptophan), the weight is defined as $1$.\n\nThe Codon Adaptation Index (CAI) of the gene is the geometric mean of these weights:\n$$ \\text{CAI} = \\left( \\prod_{i=1}^{n} w(c_i) \\right)^{1/n} $$\nFor numerical stability, it is preferable to compute this using logarithms:\n$$ \\ln(\\text{CAI}) = \\frac{1}{n} \\sum_{i=1}^{n} \\ln(w(c_i)) \\implies \\text{CAI} = \\exp\\left(\\frac{1}{n} \\sum_{i=1}^{n} \\ln(w(c_i))\\right) $$\n\nOur objective is to find the maximum increase, $\\Delta\\text{CAI}_{\\max}$, resulting from changing exactly one codon $c_j$ at some position $j \\in \\{1, \\dots, n\\}$ to a synonymous codon $c_s \\in \\mathcal{S}(a_j)$, where $a_j$ is the amino acid coded by $c_j$.\n\nLet the initial index be $\\text{CAI}_{\\text{initial}}$. If we substitute codon $c_j$ with $c_s$, the new index, $\\text{CAI}_{\\text{new}}$, is given by:\n$$ \\text{CAI}_{\\text{new}} = \\left( w(c_1) \\cdot \\dots \\cdot w(c_{j-1}) \\cdot w(c_s) \\cdot w(c_{j+1}) \\cdot \\dots \\cdot w(c_n) \\right)^{1/n} $$\nWe can express this in terms of the initial CAI. The product of weights changes by a factor of $w(c_s)/w(c_j)$.\n$$ \\prod_{i=1, i \\ne j}^{n} w(c_i) \\cdot w(c_s) = \\left(\\prod_{i=1}^{n} w(c_i)\\right) \\cdot \\frac{w(c_s)}{w(c_j)} $$\nTaking the $n$-th root of both sides gives:\n$$ \\text{CAI}_{\\text{new}} = \\left(\\left(\\prod_{i=1}^{n} w(c_i)\\right) \\cdot \\frac{w(c_s)}{w(c_j)}\\right)^{1/n} = \\left(\\prod_{i=1}^{n} w(c_i)\\right)^{1/n} \\cdot \\left(\\frac{w(c_s)}{w(c_j)}\\right)^{1/n} = \\text{CAI}_{\\text{initial}} \\cdot \\left(\\frac{w(c_s)}{w(c_j)}\\right)^{1/n} $$\nThe increase in CAI is $\\Delta\\text{CAI} = \\text{CAI}_{\\text{new}} - \\text{CAI}_{\\text{initial}} = \\text{CAI}_{\\text{initial}} \\left[ \\left(\\frac{w(c_s)}{w(c_j)}\\right)^{1/n} - 1 \\right]$.\n\nTo maximize this increase, we must maximize the term $\\left(w(c_s)/w(c_j)\\right)^{1/n}$. Since $n$ is a positive constant for a given gene, this is equivalent to maximizing the ratio $w(c_s)/w(c_j)$. This must be done over all possible positions $j$ and all possible synonymous substitutions $c_s$ at that position.\n\nLet us analyze the maximization logic. For any given position $j$, the codon $c_j$ and its weight $w(c_j)$ are fixed. We want to choose a synonymous codon $c_s$ that maximizes $w(c_s)$. As established, the maximum possible value for any $w(c)$ is $1$, which is achieved by the optimal codon $c_{\\text{opt}}$ for that amino acid. Thus, for any position $j$, the best possible substitution is to replace $c_j$ with $c_{\\text{opt}}$, making the new weight $w(c_s) = 1$. The resulting ratio is $1/w(c_j)$.\n\nNow we must choose the position $j$ that gives the overall maximum increase. This means we must find the position $j$ that maximizes the ratio $1/w(c_j)$. This is equivalent to finding the position $j$ with the minimum weight $w(c_j)$.\n\nLet $w_{\\min} = \\min_{i=1, \\dots, n} \\{w(c_i)\\}$. This minimum weight corresponds to the codon that is least adapted in the sequence. By replacing this codon with its optimal synonymous counterpart (with weight $1$), we achieve the maximum possible CAI for a single substitution.\n\nThe algorithm is therefore as follows:\n1.  **Pre-computation**:\n    a. Construct a mapping from each of the $61$ sense codons to its corresponding amino acid based on the standard genetic code.\n    b. Using the provided table of $f(c)$ values, for each amino acid $a$, find the maximum frequency value, $\\max\\{f(c') : c' \\in \\mathcal{S}(a)\\}$.\n    c. Compute and store the relative adaptiveness weight $w(c)$ for every sense codon.\n\n2.  **Per-Gene Calculation**: For each input gene sequence:\n    a. Parse the gene into its sequence of $n$ codons $(c_1, \\dots, c_n)$.\n    b. Create a list of the corresponding weights $(w(c_1), \\dots, w(c_n))$ using the pre-computed table.\n    c. Find the minimum weight in this list, $w_{\\min}$.\n    d. If $w_{\\min} \\ge 1.0$, every codon is already optimal or belongs to a single-codon family. No synonymous substitution can increase the CAI. The result is $0.0$.\n    e. If $w_{\\min} < 1.0$, an increase is possible. First, calculate the initial CAI for the gene, $\\text{CAI}_{\\text{initial}}$.\n    f. The maximum achievable CAI with one substitution is $\\text{CAI}_{\\text{final}} = \\text{CAI}_{\\text{initial}} \\cdot (1/w_{\\min})^{1/n}$.\n    g. The maximum increase is the difference: $\\Delta\\text{CAI}_{\\max} = \\text{CAI}_{\\text{final}} - \\text{CAI}_{\\text{initial}}$.\n\nThis refined algorithm avoids re-calculating the full CAI for every possible mutation, making it highly efficient. It identifies the single most impactful substitution and calculates its effect.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the maximum CAI increase for a list of genes.\n    \"\"\"\n    # Define the reference codon usage table f(c)\n    f_table = {\n        'TTT': 0.3, 'TTC': 0.7, 'TTA': 0.05, 'TTG': 0.1, 'CTT': 0.1, 'CTC': 0.2, 'CTA': 0.05, 'CTG': 0.5,\n        'ATT': 0.35, 'ATC': 0.6, 'ATA': 0.05, 'ATG': 1.0, 'GTT': 0.2, 'GTC': 0.25, 'GTA': 0.05, 'GTG': 0.5,\n        'TCT': 0.15, 'TCC': 0.3, 'TCA': 0.04, 'TCG': 0.1, 'AGT': 0.06, 'AGC': 0.35, 'CCT': 0.2, 'CCC': 0.2,\n        'CCA': 0.1, 'CCG': 0.5, 'ACT': 0.2, 'ACC': 0.55, 'ACA': 0.1, 'ACG': 0.15, 'GCT': 0.2, 'GCC': 0.5,\n        'GCA': 0.1, 'GCG': 0.2, 'TAT': 0.3, 'TAC': 0.7, 'CAT': 0.3, 'CAC': 0.7, 'CAA': 0.3, 'CAG': 0.7,\n        'AAT': 0.3, 'AAC': 0.7, 'AAA': 0.4, 'AAG': 0.6, 'GAT': 0.4, 'GAC': 0.6, 'GAA': 0.6, 'GAG': 0.4,\n        'TGT': 0.35, 'TGC': 0.65, 'TGG': 1.0, 'CGT': 0.35, 'CGC': 0.4, 'CGA': 0.1, 'CGG': 0.1,\n        'AGA': 0.03, 'AGG': 0.02, 'GGT': 0.3, 'GGC': 0.45, 'GGA': 0.15, 'GGG': 0.1\n    }\n\n    # Standard genetic code for sense codons\n    genetic_code = {\n        'TTT': 'F', 'TTC': 'F', 'TTA': 'L', 'TTG': 'L', 'CTT': 'L', 'CTC': 'L', 'CTA': 'L', 'CTG': 'L',\n        'ATT': 'I', 'ATC': 'I', 'ATA': 'I', 'ATG': 'M', 'GTT': 'V', 'GTC': 'V', 'GTA': 'V', 'GTG': 'V',\n        'TCT': 'S', 'TCC': 'S', 'TCA': 'S', 'TCG': 'S', 'AGT': 'S', 'AGC': 'S', 'CCT': 'P', 'CCC': 'P',\n        'CCA': 'P', 'CCG': 'P', 'ACT': 'T', 'ACC': 'T', 'ACA': 'T', 'ACG': 'T', 'GCT': 'A', 'GCC': 'A',\n        'GCA': 'A', 'GCG': 'A', 'TAT': 'Y', 'TAC': 'Y', 'CAT': 'H', 'CAC': 'H', 'CAA': 'Q', 'CAG': 'Q',\n        'AAT': 'N', 'AAC': 'N', 'AAA': 'K', 'AAG': 'K', 'GAT': 'D', 'GAC': 'D', 'GAA': 'E', 'GAG': 'E',\n        'TGT': 'C', 'TGC': 'C', 'TGG': 'W', 'CGT': 'R', 'CGC': 'R', 'CGA': 'R', 'CGG': 'R',\n        'AGA': 'R', 'AGG': 'R', 'GGT': 'G', 'GGC': 'G', 'GGA': 'G', 'GGG': 'G'\n    }\n\n    # Pre-computation step 1: Group codons by amino acid\n    synonymous_codons = {}\n    for codon, aa in genetic_code.items():\n        if aa not in synonymous_codons:\n            synonymous_codons[aa] = []\n        synonymous_codons[aa].append(codon)\n\n    # Pre-computation step 2: Find max f(c) for each amino acid\n    max_f_table = {}\n    for aa, codons in synonymous_codons.items():\n        max_f = 0.0\n        for codon in codons:\n            if codon in f_table:\n                max_f = max(max_f, f_table[codon])\n        max_f_table[aa] = max_f\n\n    # Pre-computation step 3: Calculate w(c) for all codons\n    w_table = {}\n    for codon, aa in genetic_code.items():\n        max_f = max_f_table[aa]\n        if max_f > 0:\n            w_table[codon] = f_table[codon] / max_f\n        else: # Should not happen for sense codons with f_table data\n            w_table[codon] = 1.0\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        \"ATGAGGATATTATCAGAAGGTGTTAAACAT\",\n        \"ATGCTGCGCAGCATCGTGCCGGCC\",\n        \"ATGTGGATGTGGATGTGG\",\n    ]\n\n    results = []\n    for gene_seq in test_cases:\n        # Main logic to calculate the result for one case goes here.\n        n = len(gene_seq) // 3\n        if n == 0:\n            results.append(f\"{0.0:.6f}\")\n            continue\n            \n        codons = [gene_seq[i:i+3] for i in range(0, len(gene_seq), 3)]\n        \n        weights = [w_table[c] for c in codons]\n        w_min = min(weights)\n        \n        # If w_min is 1.0 or greater, no improvement is possible.\n        if w_min >= 1.0:\n            result = 0.0\n        else:\n            # Calculate initial CAI using numerically stable log-exp method\n            log_weights = np.log(weights)\n            log_cai_initial = np.mean(log_weights)\n            cai_initial = np.exp(log_cai_initial)\n\n            # Calculate the increase from the single best substitution\n            #\n            # CAI_final = CAI_initial * (1/w_min)^(1/n)\n            # Increase = CAI_final - CAI_initial = CAI_initial * ( (1/w_min)^(1/n) - 1 )\n            \n            increase = cai_initial * (np.power(1.0 / w_min, 1.0 / n) - 1.0)\n            result = increase\n            \n        results.append(f\"{result:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2380006"}, {"introduction": "The final practice exercise pivots from calculation and optimization to the critical skill of data interpretation. In biological research, a model's predictions are often just the starting point for discovery, and the most interesting findings can come from data that does not fit the model. This problem [@problem_id:2429436] presents a common scenario where a gene's actual protein abundance is far from what its CAI would predict, challenging you to think like a scientist and hypothesize about the complex biological regulation that might be at play.", "problem": "You are analyzing the relationship between protein expression and codon bias across a prokaryotic genome in a single, fixed growth condition. For each gene indexed by $i \\in \\{1,\\dots,n\\}$, you fit a simple linear regression\n$$\ny_i \\;=\\; \\beta_0 \\;+\\; \\beta_1 x_i \\;+\\; \\varepsilon_i,\n$$\nwhere $y_i$ is the natural logarithm of protein abundance for gene $i$, $x_i$ is the Codon Adaptation Index (CAI) for gene $i$, and $\\varepsilon_i$ are independent errors with mean $0$ and constant variance. After fitting the model by ordinary least squares, you identify a particular gene with a studentized residual less than $-3$, and you describe it as a “massive negative outlier.”\n\nWhich of the following statements are appropriate interpretations or actions regarding this gene? Select all that apply.\n\nA. The gene’s observed protein abundance is far lower than predicted by the fitted linear relationship with Codon Adaptation Index (CAI). Biologically, this could reflect post-transcriptional or post-translational regulation, such as translational repression or rapid protein degradation under the assayed condition.\n\nB. The gene must have an unusually low Codon Adaptation Index (CAI) and therefore necessarily has high leverage; it should be dropped from the model solely for that reason.\n\nC. The presence of a massive negative outlier implies that the estimated slope $\\hat{\\beta}_1$ is negative, meaning higher Codon Adaptation Index (CAI) predicts lower protein abundance.\n\nD. The gene has a large negative residual relative to its predicted value, so it is prudent to evaluate its influence on the fit (for example, via a suitable influence measure) before deciding on exclusion; biologically, it may indicate regulation beyond codon bias.\n\nE. Because the outlier’s residual is strongly negative, the constant-variance assumption is violated and inference from the model is invalid.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- A simple linear regression model is specified as $y_i \\;=\\; \\beta_0 \\;+\\; \\beta_1 x_i \\;+\\; \\varepsilon_i$.\n- The index $i$ ranges from $1$ to $n$, representing genes.\n- The response variable $y_i$ is the natural logarithm of protein abundance for gene $i$.\n- The predictor variable $x_i$ is the Codon Adaptation Index (CAI) for gene $i$.\n- The error terms $\\varepsilon_i$ are independent with mean $0$ and constant variance.\n- The model is fitted using ordinary least squares.\n- A specific gene is identified with a studentized residual less than $-3$.\n- This gene is described as a “massive negative outlier.”\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding:** The problem is well-grounded in computational biology and statistics. The relationship between codon bias (measured by CAI) and protein expression is a standard subject of investigation. The use of simple linear regression and logarithmic transformation is common and appropriate methodology.\n- **Well-Posedness:** The problem is well-posed. It presents a clear scenario from data analysis and asks for the correct interpretation of a specific statistical result (a large negative studentized residual).\n- **Objectivity:** The problem is stated objectively, using precise statistical terms.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. It is self-contained, scientifically sound, and unambiguous. We shall proceed to the derivation and evaluation of the options.\n\n**Derivation of Principles**\n\nThe simple linear regression model is given by:\n$$y_i = \\beta_0 + \\beta_1 x_i + \\varepsilon_i$$\nAfter fitting by ordinary least squares (OLS), we obtain estimates $\\hat{\\beta}_0$ and $\\hat{\\beta}_1$, which define the fitted line:\n$$\\hat{y}_i = \\hat{\\beta}_0 + \\hat{\\beta}_1 x_i$$\nThe residual for observation $i$ is the difference between the observed and fitted values:\n$$e_i = y_i - \\hat{y}_i$$\nA negative residual ($e_i  0$) means the observed value $y_i$ is below the regression line.\n\nThe studentized residual, $r_i$, standardizes the raw residual by dividing it by an estimate of its standard deviation. A studentized residual with a value less than $-3$ is a rare event under the standard model assumptions (normality of errors), signifying that the observation is an outlier in the vertical direction relative to the fitted line. Specifically, it means that the observed response $y_i$ is significantly lower than the value $\\hat{y}_i$ predicted by the model based on its predictor value $x_i$.\n\nBiologically, the model attempts to explain protein abundance ($y_i$) using translational efficiency as proxied by codon usage ($x_i$, the CAI). The general expectation is that $\\beta_1 > 0$, as genes with codons optimized for translation (high CAI) are expected to produce more protein. The error term $\\varepsilon_i$ accounts for all other sources of variation, including other biological regulatory mechanisms and measurement noise. A large residual indicates that these other sources are substantial for the gene in question.\n\n**Option-by-Option Analysis**\n\n**A. The gene’s observed protein abundance is far lower than predicted by the fitted linear relationship with Codon Adaptation Index (CAI). Biologically, this could reflect post-transcriptional or post-translational regulation, such as translational repression or rapid protein degradation under the assayed condition.**\n\nA studentized residual less than $-3$ signifies a large negative raw residual, $e_i = y_i - \\hat{y}_i \\ll 0$. This directly implies that the observed value, $y_i$ (log protein abundance), is far lower than the predicted value, $\\hat{y}_i$. The statistical part of the statement is a correct definition of a negative outlier. The biological interpretation is also correct. The model accounts only for codon bias. If the prediction fails so dramatically, it points to other biological processes not included in the model that are strongly affecting the final protein abundance. These processes include regulation at the post-transcriptional level (e.g., mRNA degradation) and post-translational level (e.g., translational repression or enhanced protein degradation). This outlier is not a nuisance; it is a potential biological discovery.\n\n**Verdict: Correct.**\n\n**B. The gene must have an unusually low Codon Adaptation Index (CAI) and therefore necessarily has high leverage; it should be dropped from the model solely for that reason.**\n\nThis statement contains multiple errors.\n$1$. An outlier is a point with a large residual, meaning it is far from the regression line in the $y$-direction. This says nothing about its position in the $x$-direction. The gene's CAI ($x_i$) could be low, average, or high. The statement that it \"must have an unusually low\" CAI is false.\n$2$. Leverage is determined by how far an observation's $x_i$ value is from the mean of the predictor variables, $\\bar{x}$. A point has high leverage if its $x_i$ is unusual. Since the first clause is false, the conclusion of high leverage is unfounded. A point can have a large residual at any level of leverage.\n$3$. The recommendation to drop a data point \"solely for that reason\" (i.e., for having high leverage) is poor statistical practice. High leverage points can be highly informative. Exclusion of data must be justified by substantive reasons (e.g., confirmed measurement error, belonging to a different population), not just statistical properties alone.\n\n**Verdict: Incorrect.**\n\n**C. The presence of a massive negative outlier implies that the estimated slope $\\hat{\\beta}_1$ is negative, meaning higher Codon Adaptation Index (CAI) predicts lower protein abundance.**\n\nThis is a fallacious conclusion. The estimated slope $\\hat{\\beta}_1$ is determined by the overall trend of all $n$ data points. While a single influential outlier can pull the line towards it, it does not by itself determine the sign of the slope, especially in a large dataset typical of genomic studies. The established biological trend is for higher CAI to be associated with higher expression, so we expect $\\hat{\\beta}_1 > 0$. A single outlier is highly unlikely to reverse this overall trend. Its effect on the slope depends on its leverage (its $x_i$ value); a negative outlier with $x_i > \\bar{x}$ will pull the slope down, while one with $x_i  \\bar{x}$ will pull the slope up. It does not guarantee a negative slope.\n\n**Verdict: Incorrect.**\n\n**D. The gene has a large negative residual relative to its predicted value, so it is prudent to evaluate its influence on the fit (for example, via a suitable influence measure) before deciding on exclusion; biologically, it may indicate regulation beyond codon bias.**\n\nThis statement describes the canonical and correct approach to dealing with outliers.\n$1$. Identification: The gene has a large negative residual (a studentized residual less than $-3$).\n$2$. Diagnosis: The appropriate next step is to assess the point's influence on the model parameters ($\\hat{\\beta}_0, \\hat{\\beta}_1$). Influence is a combination of leverage and residual size. Measures such as Cook's distance, DFFITS, and DFBETAS are designed for this purpose. A decision on exclusion is a serious step that should be informed by such influence diagnostics.\n$3$. Interpretation: As in option A, the statement correctly notes that the outlier is biologically interesting, potentially indicating that the gene is subject to regulatory mechanisms not captured by the simple model.\n\nThis represents sound statistical procedure and correct biological reasoning.\n\n**Verdict: Correct.**\n\n**E. Because the outlier’s residual is strongly negative, the constant-variance assumption is violated and inference from the model is invalid.**\n\nThis is a misinterpretation of model assumptions. The constant variance (homoscedasticity) assumption posits that the variance of the error term $\\varepsilon_i$ is the same for all observations, i.e., $\\text{Var}(\\varepsilon_i) = \\sigma^2$ for all $i$. A violation of this assumption would be a systematic pattern, such as the spread of residuals increasing with the fitted values. The existence of a *single* outlier does not, in itself, constitute evidence of such a systematic pattern. It is an isolated event. This single point could be the result of a non-normal (e.g., heavy-tailed) error distribution, or simply a true anomaly, without disproving that the variance is constant for the bulk of the data. To claim the entire assumption is violated based on one point is an overstatement and logically flawed.\n\n**Verdict: Incorrect.**", "answer": "$$\\boxed{AD}$$", "id": "2429436"}]}