{"hands_on_practices": [{"introduction": "The best way to truly understand an algorithm is to roll up your sleeves and work through it step-by-step. This first exercise provides a perfect entry point into the mechanics of the Neighbor-Joining method. By applying the NJ selection criterion to a genetic distance matrix for several sunflower species, you will perform the crucial first step of the algorithm: identifying which pair of taxa to join together to form the first internal node of the tree [@problem_id:1771208].", "problem": "A team of botanists is studying the evolutionary relationships among five recently discovered species of sunflowers. They have sequenced a specific gene from each species and calculated a pairwise genetic distance matrix, which quantifies the divergence between each pair. The species are *Helianthus arcanus* (HA), *Helianthus borealis* (HB), *Helianthus campestris* (HC), *Helianthus deserticola* (HD), and *Helianthus elegans* (HE).\n\nThe botanists decide to construct a phylogenetic tree using the Neighbor-Joining (NJ) algorithm. Your task is to perform the very first step of this algorithm to determine which two species are the first to be grouped together and form a new internal node.\n\nThe genetic distance matrix, where values represent a unitless measure of genetic divergence, is given below:\n\n|        | HA | HB | HC | HD | HE |\n| :----: | :-: | :-: | :-: | :-: | :-: |\n| **HA** | 0  | 5  | 4  | 7  | 6  |\n| **HB** | 5  | 0  | 7  | 10 | 9  |\n| **HC** | 4  | 7  | 0  | 7  | 6  |\n| **HD** | 7  | 10 | 7  | 0  | 5  |\n| **HE** | 6  | 9  | 6  | 5  | 0  |\n\nBased on this matrix, which of the following statements correctly describes the outcome of the first joining step of the Neighbor-Joining algorithm?\n\nA. The pair (*H. deserticola*, *H. elegans*) is joined. The new distances from this node are: 4 to *H. arcanus*, 7 to *H. borealis*, and 4 to *H. campestris*.\n\nB. The pair (*H. arcanus*, *H. borealis*) is joined. The new distances from this node are: 3 to *H. campestris*, 6 to *H. deserticola*, and 5 to *H. elegans*.\n\nC. The pair (*H. arcanus*, *H. campestris*) is joined. The new distances from this node are: 4 to *H. borealis*, 5 to *H. deserticola*, and 4 to *H. elegans*.\n\nD. The pair (*H. deserticola*, *H. elegans*) is joined. The new distances from this node are: 3 to *H. arcanus*, 2 to *H. borealis*, and 3 to *H. campestris*.\n\nE. The pair (*H. campestris*, *H. deserticola*) is joined. The new distances from this node are: 5.5 to *H. arcanus*, 8 to *H. borealis*, and 4 to *H. elegans*.", "solution": "To perform the first step of the Neighbor-Joining (NJ) algorithm with taxa $\\{\\mathrm{HA}, \\mathrm{HB}, \\mathrm{HC}, \\mathrm{HD}, \\mathrm{HE}\\}$ and distance matrix $d(i,j)$, compute the row sums $r_{i}=\\sum_{k} d(i,k)$ and the $Q$-matrix entries\n$$\nQ(i,j)=(n-2)\\,d(i,j)-r_{i}-r_{j},\n$$\nwhere $n=5$.\n\nFirst compute the row sums:\n$$\n\\begin{aligned}\nr_{\\mathrm{HA}}&=d(\\mathrm{HA},\\mathrm{HB})+d(\\mathrm{HA},\\mathrm{HC})+d(\\mathrm{HA},\\mathrm{HD})+d(\\mathrm{HA},\\mathrm{HE})=5+4+7+6=22,\\\\\nr_{\\mathrm{HB}}&=5+7+10+9=31,\\\\\nr_{\\mathrm{HC}}&=4+7+7+6=24,\\\\\nr_{\\mathrm{HD}}&=7+10+7+5=29,\\\\\nr_{\\mathrm{HE}}&=6+9+6+5=26.\n\\end{aligned}\n$$\nWith $n-2=3$, compute the $Q$-values:\n$$\n\\begin{aligned}\nQ(\\mathrm{HA},\\mathrm{HB})&=3\\cdot 5-22-31=15-53=-38,\\\\\nQ(\\mathrm{HA},\\mathrm{HC})&=3\\cdot 4-22-24=12-46=-34,\\\\\nQ(\\mathrm{HA},\\mathrm{HD})&=3\\cdot 7-22-29=21-51=-30,\\\\\nQ(\\mathrm{HA},\\mathrm{HE})&=3\\cdot 6-22-26=18-48=-30,\\\\\nQ(\\mathrm{HB},\\mathrm{HC})&=3\\cdot 7-31-24=21-55=-34,\\\\\nQ(\\mathrm{HB},\\mathrm{HD})&=3\\cdot 10-31-29=30-60=-30,\\\\\nQ(\\mathrm{HB},\\mathrm{HE})&=3\\cdot 9-31-26=27-57=-30,\\\\\nQ(\\mathrm{HC},\\mathrm{HD})&=3\\cdot 7-24-29=21-53=-32,\\\\\nQ(\\mathrm{HC},\\mathrm{HE})&=3\\cdot 6-24-26=18-50=-32,\\\\\nQ(\\mathrm{HD},\\mathrm{HE})&=3\\cdot 5-29-26=15-55=-40.\n\\end{aligned}\n$$\nThe minimum $Q$ is $Q(\\mathrm{HD},\\mathrm{HE})=-40$, so the first joined pair is $(\\mathrm{HD},\\mathrm{HE})$.\n\nThe NJ reduction gives the distances from the new node $U$ joining $\\mathrm{HD}$ and $\\mathrm{HE}$ to any remaining taxon $k$ by\n$$\nd(U,k)=\\frac{d(\\mathrm{HD},k)+d(\\mathrm{HE},k)-d(\\mathrm{HD},\\mathrm{HE})}{2}.\n$$\nCompute these for $k\\in\\{\\mathrm{HA},\\mathrm{HB},\\mathrm{HC}\\}$ using $d(\\mathrm{HD},\\mathrm{HE})=5$:\n$$\n\\begin{aligned}\nd(U,\\mathrm{HA})&=\\frac{d(\\mathrm{HD},\\mathrm{HA})+d(\\mathrm{HE},\\mathrm{HA})-d(\\mathrm{HD},\\mathrm{HE})}{2}=\\frac{7+6-5}{2}=4,\\\\\nd(U,\\mathrm{HB})&=\\frac{10+9-5}{2}=7,\\\\\nd(U,\\mathrm{HC})&=\\frac{7+6-5}{2}=4.\n\\end{aligned}\n$$\nThus the first join is $(\\mathrm{HD},\\mathrm{HE})$ with new distances $4$ to $\\mathrm{HA}$, $7$ to $\\mathrm{HB}$, and $4$ to $\\mathrm{HC}$, which matches option A.", "answer": "$$\\boxed{A}$$", "id": "1771208"}, {"introduction": "While the Neighbor-Joining method is a powerful and widely used tool, it is not infallible. This practice explores a famous pitfall in phylogenetics known as \"long-branch attraction,\" a scenario where the algorithm can be deceived into inferring an incorrect evolutionary history. By working through this classic example from the \"Felsenstein zone,\" you will see firsthand how the NJ method can incorrectly group distantly related taxa that have undergone rapid evolution, providing a deeper understanding of the method's assumptions and limitations [@problem_id:2408887].", "problem": "A four-taxon case illustrating the long-branch attraction configuration known as the Felsenstein zone is constructed as follows. The true unrooted topology is the split $(A,B)\\,|\\,(C,D)$, with taxa $A$ and $C$ having long external branches and taxa $B$ and $D$ having short external branches, separated by a short internal branch. Suppose that, instead of using a model-corrected evolutionary distance, one uses the uncorrected Hamming distance (also called the $p$-distance) estimated from sufficiently long independent and identically distributed sites, yielding the following symmetric distance matrix $D = (d_{ij})$ on taxa $\\{A,B,C,D\\}$:\n$$\nD \\;=\\;\n\\begin{pmatrix}\n0 & 0.6669 & 0.7366 & 0.6692 \\\\\n0.6669 & 0 & 0.6692 & 0.2603 \\\\\n0.7366 & 0.6692 & 0 & 0.6669 \\\\\n0.6692 & 0.2603 & 0.6669 & 0\n\\end{pmatrix}.\n$$\nApply the neighbor-joining (NJ) method to $D$ step-by-step to determine the unrooted topology NJ would infer, and explain why that topology is incorrect relative to the true split $(A,B)\\,|\\,(C,D)$. As your reported numerical result, compute the most negative entry of the NJ $Q$-matrix in the first NJ iteration. Round your answer to four significant figures. Express the final answer as a pure number without units.", "solution": "The neighbor-joining algorithm begins by constructing a $Q$-matrix from the distance matrix $D$. For a set of $n=4$ taxa, the entries of the $Q$-matrix are defined as:\n$$\nQ_{ij} = (n-2)d_{ij} - u_i - u_j = 2d_{ij} - u_i - u_j\n$$\nwhere $u_i = \\sum_{k=1}^{n} d_{ik}$ is the sum of distances from taxon $i$ to all other taxa.\n\nFirst, we calculate the values of $u_i$ for each taxon $i \\in \\{A, B, C, D\\}$:\n$$\nu_A = d_{AB} + d_{AC} + d_{AD} = 0.6669 + 0.7366 + 0.6692 = 2.0727\n$$\n$$\nu_B = d_{BA} + d_{BC} + d_{BD} = 0.6669 + 0.6692 + 0.2603 = 1.5964\n$$\n$$\nu_C = d_{CA} + d_{CB} + d_{CD} = 0.7366 + 0.6692 + 0.6669 = 2.0727\n$$\n$$\nu_D = d_{DA} + d_{DB} + d_{DC} = 0.6692 + 0.2603 + 0.6669 = 1.5964\n$$\n\nNext, we compute the off-diagonal entries of the $Q$-matrix:\n$$\nQ_{AB} = 2(0.6669) - 2.0727 - 1.5964 = -2.3353\n$$\n$$\nQ_{AC} = 2(0.7366) - 2.0727 - 2.0727 = -2.6722\n$$\n$$\nQ_{AD} = 2(0.6692) - 2.0727 - 1.5964 = -2.3307\n$$\n$$\nQ_{BC} = 2(0.6692) - 1.5964 - 2.0727 = -2.3307\n$$\n$$\nQ_{BD} = 2(0.2603) - 1.5964 - 1.5964 = -2.6722\n$$\n$$\nQ_{CD} = 2(0.6669) - 2.0727 - 1.5964 = -2.3353\n$$\n\nThe most negative entry in the $Q$-matrix is $-2.6722$, occurring for pairs $(A,C)$ and $(B,D)$. The NJ algorithm selects the pair of taxa $(i,j)$ for which $Q_{ij}$ is minimum. In this case, choosing either $(A,C)$ or $(B,D)$ leads to the same inferred topology. If we join $(A,C)$, the resulting tree groups them together, giving the unrooted topology $(A,C)\\,|\\,(B,D)$.\n\nThis inferred topology is incorrect, as the true topology is $(A,B)\\,|\\,(C,D)$. The failure is due to long-branch attraction (LBA). The uncorrected distances underestimate the true evolutionary distance between the long-branched taxa $A$ and $C$ due to saturation of substitutions. This makes them appear artifactually closer to each other than to their true sister taxa, misleading the NJ algorithm into joining the long branches. The most negative entry of the Q-matrix is $-2.6722$, which rounds to $-2.672$.", "answer": "$$\n\\boxed{-2.672}\n$$", "id": "2408887"}, {"introduction": "Building on our understanding of the algorithm's potential weaknesses, this advanced exercise challenges you to think like an algorithm designer. Can we engineer a more robust version of the Neighbor-Joining method? This problem explores a proposed modification to the NJ selection criterion, replacing the standard summation term $\\sum_{k} d(i,k)$ with a more outlier-resistant statistical measure, the median. By implementing and testing both the classic and robust criteria, you will gain hands-on experience in evaluating and enhancing bioinformatic tools [@problem_id:2408937].", "problem": "You are given finite sets of taxa with pairwise dissimilarities encoded as symmetric distance matrices that satisfy nonnegativity and zero diagonal. For a current set of taxa indices $\\mathcal{T}$ with $|\\mathcal{T}|=n$, the classical Neighbor-Joining (NJ) pair-selection criterion defines, for each unordered pair $\\{i,j\\}\\subset\\mathcal{T}$ with $i\\neq j$, the score\n$$\nQ(i,j) \\;=\\; (n-2)\\,d(i,j)\\;-\\;\\sum_{k\\in\\mathcal{T}} d(i,k)\\;-\\;\\sum_{k\\in\\mathcal{T}} d(j,k).\n$$\nConsider a robust alternative where the summation terms are replaced by the median of the set of distances, namely\n$$\nQ_{\\mathrm{med}}(i,j) \\;=\\; (n-2)\\,d(i,j)\\;-\\;\\mathrm{median}\\big(\\{d(i,k)\\;:\\;k\\in\\mathcal{T},\\,k\\neq i\\}\\big)\\;-\\;\\mathrm{median}\\big(\\{d(j,k)\\;:\\;k\\in\\mathcal{T},\\,k\\neq j\\}\\big).\n$$\nThe median of a finite multiset of real numbers is defined as the middle element after sorting; in the case of an even count, it is the arithmetic mean of the two middle elements.\n\nYour task is to write a complete program that, for each test case below, does all of the following in purely mathematical terms:\n- Treat the taxa as labeled by consecutive integers starting at $0$.\n- Compute the unordered pair $\\{i,j\\}$ that minimizes $Q(i,j)$ and the unordered pair that minimizes $Q_{\\mathrm{med}}(i,j)$ over all $\\{i,j\\}\\subset\\mathcal{T}$ with $i\\neq j$. In the event of a tie in the minimum value, break ties by choosing the lexicographically smallest ordered pair $(i,j)$ with $i<j$ among the tied unordered pairs.\n- A designated subset $\\mathcal{O}\\subseteq\\mathcal{T}$ of “outlier” taxa and a designated set $\\mathcal{S}$ of “target sibling” unordered pairs are provided for each test case. Define an indicator $I$ as follows: $I=1$ if the classical minimum pair is a “bad” pair consisting of two elements of $\\mathcal{O}$, while the robust-median minimum pair is one of the pairs in $\\mathcal{S}$; otherwise $I=0$.\n\nTest suite. Each test case specifies $(\\mathcal{T},D,\\mathcal{O},\\mathcal{S})$, where $D=(d(i,j))_{i,j\\in\\mathcal{T}}$ is the distance matrix.\n\n- Test case $1$ (balanced, no outlier):\n  - $\\mathcal{T}=\\{0,1,2,3\\}$.\n  - Distance matrix\n    $$\n    D^{(1)}=\\begin{pmatrix}\n    0 & 2 & 6 & 6\\\\\n    2 & 0 & 6 & 6\\\\\n    6 & 6 & 0 & 2\\\\\n    6 & 6 & 2 & 0\n    \\end{pmatrix}.\n    $$\n  - Outliers $\\mathcal{O}=\\varnothing$.\n  - Target siblings $\\mathcal{S}=\\big\\{\\{0,1\\},\\{2,3\\}\\big\\}$.\n\n- Test case $2$ (two long-branch outliers that are close to each other):\n  - $\\mathcal{T}=\\{0,1,2,3,4,5\\}$.\n  - Distance matrix\n    $$\n    D^{(2)}=\\begin{pmatrix}\n    0 & 2 & 20 & 20 & 50 & 50\\\\\n    2 & 0 & 20 & 20 & 50 & 50\\\\\n    20 & 20 & 0 & 2 & 50 & 50\\\\\n    20 & 20 & 2 & 0 & 50 & 50\\\\\n    50 & 50 & 50 & 50 & 0 & 30\\\\\n    50 & 50 & 50 & 50 & 30 & 0\n    \\end{pmatrix}.\n    $$\n  - Outliers $\\mathcal{O}=\\{4,5\\}$.\n  - Target siblings $\\mathcal{S}=\\big\\{\\{0,1\\},\\{2,3\\}\\big\\}$.\n\n- Test case $3$ (boundary with $3$ taxa and one outlier):\n  - $\\mathcal{T}=\\{0,1,2\\}$.\n  - Distance matrix\n    $$\n    D^{(3)}=\\begin{pmatrix}\n    0 & 2 & 50\\\\\n    2 & 0 & 50\\\\\n    50 & 50 & 0\n    \\end{pmatrix}.\n    $$\n  - Outliers $\\mathcal{O}=\\{2\\}$.\n  - Target siblings $\\mathcal{S}=\\big\\{\\{0,1\\}\\big\\}$.\n\nFinal output format. Your program must produce a single line containing a list of results for all test cases, in order. The result for each test case is a list of five integers $[c_i,c_j,r_i,r_j,I]$, where $(c_i,c_j)$ with $c_i<c_j$ is the classical $Q$-minimizing pair, $(r_i,r_j)$ with $r_i<r_j$ is the robust $Q_{\\mathrm{med}}$-minimizing pair, and $I\\in\\{0,1\\}$ is the indicator defined above. The combined output must be emitted as a single line with no extra characters, for example\n$$\n\\big[\\,[c^{(1)}_i,c^{(1)}_j,r^{(1)}_i,r^{(1)}_j,I^{(1)}],\\;[c^{(2)}_i,c^{(2)}_j,r^{(2)}_i,r^{(2)}_j,I^{(2)}],\\;[c^{(3)}_i,c^{(3)}_j,r^{(3)}_i,r^{(3)}_j,I^{(3)}]\\,\\big].\n$$\nThere are no physical units involved. Angles are not used. All numerical outputs are plain integers as specified.", "solution": "The solution requires calculating the minimizing pairs for the classical ($Q$) and robust-median ($Q_{\\mathrm{med}}$) scores for three test cases, then determining an indicator value $I$.\n\n**Test Case 1**\n- $\\mathcal{T}=\\{0,1,2,3\\}$, $n=4$, $n-2=2$. $\\mathcal{O}=\\varnothing$, $\\mathcal{S}=\\big\\{\\{0,1\\},\\{2,3\\}\\big\\}$.\n- **Classical Score $Q(i,j)$**: The row sums are $S_0=S_1=S_2=S_3=14$.\n  - $Q(0,1) = 2 \\cdot 2 - 14 - 14 = -24$.\n  - $Q(2,3) = 2 \\cdot 2 - 14 - 14 = -24$.\n  - Other scores are higher. The minimum is $-24$. The lexicographically smallest pair is $(0,1)$. So, $(c_i, c_j) = (0,1)$.\n- **Robust-Median Score $Q_{\\mathrm{med}}(i,j)$**: The multisets of off-diagonal distances for each row are $\\{2,6,6\\}$ (in some order). The median is $M_0=M_1=M_2=M_3=6$.\n  - $Q_{\\mathrm{med}}(0,1) = 2 \\cdot 2 - 6 - 6 = -8$.\n  - $Q_{\\mathrm{med}}(2,3) = 2 \\cdot 2 - 6 - 6 = -8$.\n  - Other scores are higher. The minimum is $-8$. The lexicographically smallest pair is $(0,1)$. So, $(r_i, r_j) = (0,1)$.\n- **Indicator $I$**: The classical pair $\\{0,1\\}$ is not a subset of $\\mathcal{O}=\\varnothing$. The first condition for $I=1$ fails. Thus, $I^{(1)}=0$.\n- **Result 1**: $[0, 1, 0, 1, 0]$.\n\n---\n\n**Test Case 2**\n- $\\mathcal{T}=\\{0,1,2,3,4,5\\}$, $n=6$, $n-2=4$. $\\mathcal{O}=\\{4,5\\}$, $\\mathcal{S}=\\big\\{\\{0,1\\},\\{2,3\\}\\big\\}$.\n- **Classical Score $Q(i,j)$**: Row sums are $S_0=S_1=S_2=S_3 = 142$ and $S_4=S_5 = 230$.\n  - $Q(0,1) = 4 \\cdot 2 - 142 - 142 = -276$.\n  - $Q(2,3) = 4 \\cdot 2 - 142 - 142 = -276$.\n  - $Q(4,5) = 4 \\cdot 30 - 230 - 230 = -340$.\n  - The minimum score is $-340$. The unique minimizing pair is $(4,5)$. So, $(c_i, c_j) = (4,5)$.\n- **Robust-Median Score $Q_{\\mathrm{med}}(i,j)$**: For $i \\in \\{0,1,2,3\\}$, the off-diagonal distances are $\\{2,20,20,50,50\\}$. The median is $M_0=M_1=M_2=M_3=20$. For $i \\in \\{4,5\\}$, the distances are $\\{30,50,50,50,50\\}$. The median is $M_4=M_5=50$.\n  - $Q_{\\mathrm{med}}(0,1) = 4 \\cdot 2 - 20 - 20 = -32$.\n  - $Q_{\\mathrm{med}}(2,3) = 4 \\cdot 2 - 20 - 20 = -32$.\n  - $Q_{\\mathrm{med}}(4,5) = 4 \\cdot 30 - 50 - 50 = 20$.\n  - The minimum score is $-32$. The lexicographically smallest pair is $(0,1)$. So, $(r_i, r_j) = (0,1)$.\n- **Indicator $I$**: Is the classical pair $\\{4,5\\} \\subseteq \\mathcal{O}=\\{4,5\\}$? Yes. Is the robust pair $\\{0,1\\} \\in \\mathcal{S}$? Yes. Both conditions are met. Thus, $I^{(2)}=1$.\n- **Result 2**: $[4, 5, 0, 1, 1]$.\n\n---\n\n**Test Case 3**\n- $\\mathcal{T}=\\{0,1,2\\}$, $n=3$, $n-2=1$. $\\mathcal{O}=\\{2\\}$, $\\mathcal{S}=\\big\\{\\{0,1\\}\\big\\}$.\n- **Classical Score $Q(i,j)$**: Row sums are $S_0=52$, $S_1=52$, $S_2=100$.\n  - $Q(0,1) = 1 \\cdot 2 - 52 - 52 = -102$.\n  - $Q(0,2) = 1 \\cdot 50 - 52 - 100 = -102$.\n  - $Q(1,2) = 1 \\cdot 50 - 52 - 100 = -102$.\n  - All scores are tied at $-102$. The lexicographically smallest pair is $(0,1)$. So, $(c_i, c_j) = (0,1)$.\n- **Robust-Median Score $Q_{\\mathrm{med}}(i,j)$**: The off-diagonal distances are sets of size 2. The median is the average.\n  - For $i=0$: distances $\\{2,50\\}$, $M_0 = (2+50)/2 = 26$.\n  - For $i=1$: distances $\\{2,50\\}$, $M_1 = 26$.\n  - For $i=2$: distances $\\{50,50\\}$, $M_2 = 50$.\n  - $Q_{\\mathrm{med}}(0,1) = 1 \\cdot 2 - 26 - 26 = -50$.\n  - $Q_{\\mathrm{med}}(0,2) = 1 \\cdot 50 - 26 - 50 = -26$.\n  - The minimum score is $-50$. The unique minimizing pair is $(0,1)$. So, $(r_i, r_j) = (0,1)$.\n- **Indicator $I$**: Is the classical pair $\\{0,1\\} \\subseteq \\mathcal{O}=\\{2\\}$? No. (The rule requires a pair of two elements from $\\mathcal{O}$). The first condition fails. Thus, $I^{(3)}=0$.\n- **Result 3**: $[0, 1, 0, 1, 0]$.", "answer": "$$\n\\big[\\,[0,1,0,1,0],\\;[4,5,0,1,1],\\;[0,1,0,1,0]\\,\\big]\n$$", "id": "2408937"}]}