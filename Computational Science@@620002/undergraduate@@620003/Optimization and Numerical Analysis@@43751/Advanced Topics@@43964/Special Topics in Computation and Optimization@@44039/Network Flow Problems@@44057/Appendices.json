{"hands_on_practices": [{"introduction": "The first step in mastering network flow is learning to translate a real-world scenario into a graph model. This exercise provides a classic logistics problem, asking you to determine the maximum cargo capacity between two points in a distribution network. By modeling cities as nodes and transport routes as edges with capacities, you will practice setting up and solving a fundamental maximum flow problem, laying the groundwork for more complex analyses. [@problem_id:2189479]", "problem": "A logistics company, \"Streamline Shippers,\" is tasked with moving goods from a central manufacturing plant in city A to a major distribution center in city D. The company has several transportation routes available, some of which pass through intermediate hubs in cities B and C. All transportation capacities are given in tons of cargo per day.\n\nThe available routes and their daily maximum capacities are as follows:\n- From city A to city B (by truck): 100 tons.\n- From city A to city C (by rail): 120 tons.\n- From city B to city C (local transfer): 30 tons.\n- From city B to city D (by air): 70 tons.\n- From city C to city D (by express train): 150 tons.\n\nGoods can only be moved in the directions specified. For example, cargo can be moved from B to C, but not from C to B. Assuming the company wishes to maximize the amount of cargo moved from A to D, calculate the maximum total tonnage that can be transported per day. Express your final answer in tons per day.", "solution": "Model the network as a directed graph with source A and sink D. Let the flows on the edges be $f_{AB}, f_{AC}, f_{BC}, f_{BD}, f_{CD}$, each constrained by $0 \\le f_{XY} \\le c_{XY}$ where the capacities are $c_{AB}=100$, $c_{AC}=120$, $c_{BC}=30$, $c_{BD}=70$, $c_{CD}=150$. Let $v$ denote the total flow from A to D.\n\nFlow conservation and capacity constraints are:\n- At A (source): \n$$f_{AB}+f_{AC}=v,$$\nwith $0 \\le f_{AB} \\le 100$ and $0 \\le f_{AC} \\le 120$.\n- At B:\n$$f_{AB}=f_{BD}+f_{BC},$$\nwith $0 \\le f_{BD} \\le 70$ and $0 \\le f_{BC} \\le 30$.\n- At C:\n$$f_{AC}+f_{BC}=f_{CD},$$\nwith $0 \\le f_{CD} \\le 150$.\n- At D (sink):\n$$f_{BD}+f_{CD}=v.$$\n\nTo achieve a large feasible flow, send the full capacity out of A:\n$f_{AB}=100, \\quad f_{AC}=120$.\nRoute the B flow as\n$f_{BD}=70, \\quad f_{BC}=30$,\nwhich respects $f_{BD} \\le 70$ and $f_{BC} \\le 30$, and satisfies $f_{AB}=f_{BD}+f_{BC}=100$. Then C receives\n$f_{AC}+f_{BC}=120+30=150$,\nso set\n$f_{CD}=150$,\nwhich saturates the $C \\to D$ edge but respects its capacity. The sink inflow is\n$v=f_{BD}+f_{CD}=70+150=220$,\nand the source outflow is $f_{AB}+f_{AC}=100+120=220$, so all conservation laws hold. Thus a flow of $v=220$ is feasible.\n\nTo prove optimality, apply the max-flow min-cut theorem. Consider the cut that separates $\\{A\\}$ from $\\{B,C,D\\}$. Its capacity is the sum of capacities of edges leaving A:\n$c(\\{A\\},\\{B,C,D\\})=c_{AB}+c_{AC}=100+120=220$.\nBy the max-flow min-cut theorem, any $s$-$t$ flow satisfies $v \\le 220$. Since we have constructed a feasible flow with $v=220$, it is maximum.\n\nTherefore, the maximum total tonnage that can be transported per day is $220$.", "answer": "$$\\boxed{220}$$", "id": "2189479"}, {"introduction": "Knowing the maximum capacity of a network is useful, but identifying what limits that capacity is even more powerful. This problem challenges you to analyze an assembly line, not only to find its maximum production rate but also to pinpoint the bottleneck stations that constrain the entire system. This practice will deepen your understanding of the max-flow min-cut theorem by showing how the minimum cut directly corresponds to the physical bottlenecks in a network. [@problem_id:2189492]", "problem": "A company designs a modular assembly line for manufacturing electronic devices. The workflow can be modeled as a directed network where nodes represent stations and the directed edges represent transfer paths with a given capacity. The capacity of a path is the maximum number of units that can be transferred per hour.\n\nThe network consists of a Supply Depot (S), where raw components enter, and a Finishing station (T), where completed devices exit. In between, there are four processing stations: Station A, Station B, Station C, and Station D. The connections and their maximum hourly capacities are as follows:\n- From Supply Depot (S) to Station A: 40 units/hr\n- From Supply Depot (S) to Station B: 30 units/hr\n- From Station A to Station C: 20 units/hr\n- From Station A to Station D: 15 units/hr\n- From Station B to Station C: 5 units/hr\n- From Station B to Station D: 15 units/hr\n- From Station C to Finishing (T): 25 units/hr\n- From Station D to Finishing (T): 25 units/hr\n\nYou are tasked with analyzing the production capacity of this assembly line.\n\n1.  Determine the maximum possible production rate of the assembly line, which is the maximum number of units that can be processed from the Supply Depot to the Finishing station per hour.\n2.  The overall process is limited by a bottleneck. The set of bottleneck stations consists of all intermediate stations (i.e., not S or T) that belong to the source-side partition of a minimum cut. Determine this set of stations from the options below.\n\nA. {A, B}\n\nB. {C, D}\n\nC. {A, C}\n\nD. {A, B, D}\n\nE. {B, C, D}\n\nProvide your answer as a pair of values, with the first value being the maximum production rate and the second value being the uppercase letter of the correct option.", "solution": "This problem can be solved by finding the maximum flow in the given network from the source node S (Supply Depot) to the sink node T (Finishing). The maximum production rate is equal to the value of this maximum flow. The set of bottleneck stations is determined by identifying the nodes in the source-side partition of the minimum cut.\n\nWe will use the Ford-Fulkerson algorithm to find the maximum flow by repeatedly finding augmenting paths in the residual graph. The capacity of an edge $(u,v)$ is denoted by $c(u,v)$. The residual capacity is denoted by $c_f(u,v)$.\n\nThe initial capacities are:\n$c(S,A)=40$, $c(S,B)=30$, $c(A,C)=20$, $c(A,D)=15$, $c(B,C)=5$, $c(B,D)=15$, $c(C,T)=25$, $c(D,T)=25$. All other capacities are 0.\n\n**Step 1: Find a first augmenting path.**\nPath 1: $S \\rightarrow A \\rightarrow C \\rightarrow T$.\nThe bottleneck capacity of this path is $\\min(c(S,A), c(A,C), c(C,T)) = \\min(40, 20, 25) = 20$.\nWe push 20 units of flow along this path. The total flow is now 20.\nThe residual capacities are updated:\n$c_f(S,A) = 40 - 20 = 20$. A reverse edge is created: $c_f(A,S) = 20$.\n$c_f(A,C) = 20 - 20 = 0$. A reverse edge is created: $c_f(C,A) = 20$.\n$c_f(C,T) = 25 - 20 = 5$. A reverse edge is created: $c_f(T,C) = 20$.\n\n**Step 2: Find a second augmenting path.**\nPath 2: $S \\rightarrow B \\rightarrow D \\rightarrow T$.\nThe bottleneck capacity of this path in the current residual graph is $\\min(c(S,B), c(B,D), c(D,T)) = \\min(30, 15, 25) = 15$.\nWe push 15 units of flow. The total flow is now $20 + 15 = 35$.\nThe residual capacities are updated:\n$c_f(S,B) = 30 - 15 = 15$. A reverse edge is created: $c_f(B,S) = 15$.\n$c_f(B,D) = 15 - 15 = 0$. A reverse edge is created: $c_f(D,B) = 15$.\n$c_f(D,T) = 25 - 15 = 10$. A reverse edge is created: $c_f(T,D) = 15$.\n\n**Step 3: Find a third augmenting path.**\nPath 3: $S \\rightarrow A \\rightarrow D \\rightarrow T$.\nThe bottleneck capacity is $\\min(c_f(S,A), c(A,D), c_f(D,T)) = \\min(20, 15, 10) = 10$.\nWe push 10 units of flow. The total flow is now $35 + 10 = 45$.\nThe residual capacities are updated:\n$c_f(S,A) = 20 - 10 = 10$. The reverse edge is updated: $c_f(A,S) = 20 + 10 = 30$.\n$c_f(A,D) = 15 - 10 = 5$. A reverse edge is created: $c_f(D,A) = 10$.\n$c_f(D,T) = 10 - 10 = 0$. The reverse edge is updated: $c_f(T,D) = 15 + 10 = 25$.\n\n**Step 4: Find a fourth augmenting path.**\nPath 4: $S \\rightarrow B \\rightarrow C \\rightarrow T$.\nThe bottleneck capacity is $\\min(c_f(S,B), c(B,C), c_f(C,T)) = \\min(15, 5, 5) = 5$.\nWe push 5 units of flow. The total flow is now $45 + 5 = 50$.\nThe residual capacities are updated:\n$c_f(S,B) = 15 - 5 = 10$. The reverse edge is updated: $c_f(B,S) = 15 + 5 = 20$.\n$c_f(B,C) = 5 - 5 = 0$. A reverse edge is created: $c_f(C,B) = 5$.\n$c_f(C,T) = 5 - 5 = 0$. The reverse edge is updated: $c_f(T,C) = 20 + 5 = 25$.\n\n**Step 5: Check for more augmenting paths.**\nThe final residual graph has forward capacities:\n$c_f(S,A) = 10$, $c_f(S,B) = 10$\n$c_f(A,C) = 0$, $c_f(A,D) = 5$\n$c_f(B,C) = 0$, $c_f(B,D) = 0$\n$c_f(C,T) = 0$, $c_f(D,T) = 0$\nAt this point, we need to check if there is any path from S to T in this residual graph (including reverse edges). Let's find all nodes reachable from S:\n1. Start with the set of reachable nodes $R = \\{S\\}$.\n2. From S, we can reach A because $c_f(S,A) = 10 > 0$. Add A to R. $R = \\{S, A\\}$.\n3. From S, we can reach B because $c_f(S,B) = 10 > 0$. Add B to R. $R = \\{S, A, B\\}$.\n4. From A (in R), we can reach D because $c_f(A,D) = 5 > 0$. Add D to R. $R = \\{S, A, B, D\\}$.\n5. From any node in $R=\\{S, A, B, D\\}$, we check for outgoing edges to nodes not in R.\n   - From A: $c_f(A,C)=0$. No path.\n   - From B: $c_f(B,C)=0$. No path.\n   - From D: $c_f(D,T)=0$. No path.\n   - There are no other forward edges from $R$ to $\\{C, T\\}$.\nSince T is not in the set of reachable nodes R, there are no more augmenting paths.\n\nThe maximum flow is the sum of flows pushed, which is $50$. So, the maximum production rate is 50 units/hr.\n\n**Part 2: Identifying the Bottleneck Stations**\nAccording to the max-flow min-cut theorem, the capacity of the minimum cut is equal to the maximum flow. The minimum cut is the partition of the vertices $(V_S, V_T)$ where $V_S$ is the set of all vertices reachable from S in the final residual graph, and $V_T$ is the rest.\nFrom our analysis in Step 5, the set of reachable nodes is $V_S = \\{S, A, B, D\\}$.\nThe set of unreachable nodes is $V_T = \\{C, T\\}$.\n\nThe problem defines the set of bottleneck stations as the intermediate stations (not S or T) in the source-side partition ($V_S$) of the minimum cut.\nThe intermediate stations in $V_S$ are $\\{A, B, D\\}$.\nComparing this to the given options:\nA. {A, B}\nB. {C, D}\nC. {A, C}\nD. {A, B, D}\nE. {B, C, D}\nThe correct option is D.\n\nThe final answer is the pair (maximum rate, bottleneck option). This is (50, D).", "answer": "$$\\boxed{\\begin{pmatrix} 50 & D \\end{pmatrix}}$$", "id": "2189492"}, {"introduction": "Real-world systems are not static; they evolve with strategic investments. This advanced exercise introduces a parameter, $\\lambda$, representing an upgrade to a network link, and asks you to determine the maximum throughput as a function of this investment. This practice moves beyond simple calculation to strategic analysis, requiring you to use the max-flow min-cut theorem to understand how the network's bottleneck shifts as its structure is improved. [@problem_id:2189457]", "problem": "A technology company is analyzing the data throughput of its Wide Area Network (WAN), which connects its headquarters (node $s$) to a major data center (node $t$). The network consists of several interconnected routing stations, represented as nodes in a directed graph. The links between stations are directional fiber optic cables with fixed data-carrying capacities, measured in Terabits per second (Tbps).\n\nThe network topology is defined by the set of nodes $V = \\{s, a, b, c, d, t\\}$ and a set of directed edges with the following capacities:\n- $c(s, a) = 15$\n- $c(s, b) = 5$\n- $c(a, c) = 20$\n- $c(b, c) = 4$\n- $c(b, d) = 10$\n- $c(c, d) = 3$\n- $c(c, t) = 8$\n- $c(d, t) = 14$\n\nThe company is considering a strategic investment to upgrade the link between stations a and b. This specific link, represented by the directed edge $(a,b)$, currently has a base capacity of 1 Tbps. The upgrade would add an additional capacity of $\\lambda$ Tbps, where $\\lambda \\ge 0$. Thus, the capacity of the edge $(a,b)$ is given by $c(a,b) = 1 + \\lambda$.\n\nAssuming data can be routed arbitrarily through the network up to the capacity limits of the links, determine the maximum total throughput from the headquarters $s$ to the data center $t$, denoted as $v(\\lambda)$, as a function of the investment parameter $\\lambda$. Provide the complete analytic expression for $v(\\lambda)$ for all $\\lambda \\ge 0$.", "solution": "The problem asks for the maximum flow, $v(\\lambda)$, in a network from a source node $s$ to a sink node $t$, where the capacity of one edge $(a,b)$ is a function of a parameter $\\lambda$.\n\nAccording to the max-flow min-cut theorem, the maximum flow in a network is equal to the minimum capacity of an s-t cut. An s-t cut is a partition of the set of vertices $V$ into two disjoint sets, $S$ and $T$, such that $s \\in S$ and $t \\in T$. The capacity of the cut $(S,T)$ is the sum of the capacities of all edges $(u,v)$ where $u \\in S$ and $v \\in T$.\n$$ v(\\lambda) = \\min_{(S,T) \\text{ s.t. } s \\in S, t \\in T} \\left( \\sum_{u \\in S, v \\in T} c(u,v) \\right) $$\nThe capacity of the edge $(a,b)$ is $c(a,b) = 1+\\lambda$. We can categorize all possible s-t cuts based on how they partition the nodes $a$ and $b$, since this determines whether their capacity depends on $\\lambda$.\n\n**Case 1: Cuts where the capacity is independent of $\\lambda$.**\nThis occurs if the edge $(a,b)$ does not cross from $S$ to $T$. This means either both $a,b$ are in $S$, or both are in $T$, or $a \\in T$ and $b \\in S$.\n\nLet's evaluate the capacities of some key cuts of this type:\n1.  The cut with $S = \\{s\\}$. The set $T$ contains all other nodes: $T=\\{a,b,c,d,t\\}$. The edges crossing from $S$ to $T$ are $(s,a)$ and $(s,b)$.\n    The capacity is $C_1 = c(s,a) + c(s,b) = 15 + 5 = 20$.\n    In this cut, $a,b \\in T$.\n\n2.  The cut with $T = \\{t\\}$. The set $S$ contains all other nodes: $S=\\{s,a,b,c,d\\}$. The edges crossing from $S$ to $T$ are $(c,t)$ and $(d,t)$.\n    The capacity is $C_2 = c(c,t) + c(d,t) = 8 + 14 = 22$.\n    In this cut, $a,b \\in S$.\n\n3.  Consider the cut where $a \\in T$ and $b \\in S$. The capacity is constant because the directed edge $(a,b)$ goes from $T$ to $S$, not $S$ to $T$. Let's test the cut $S = \\{s,b\\}, T=\\{a,c,d,t\\}$.\n    The edges from $S$ to $T$ are $(s,a)$, $(b,c)$, and $(b,d)$.\n    The capacity is $C_3 = c(s,a) + c(b,c) + c(b,d) = 15 + 4 + 10 = 29$.\n\n4.  Consider another cut with $a,b \\in S$, for instance $S = \\{s,a,b,d\\}, T=\\{c,t\\}$.\n    The edges from $S$ to $T$ are $(a,c)$ and $(b,c)$.\n    The capacity is $C_4 = c(a,c) + c(b,c) = 20 + 4 = 24$.\n\nComparing the constant-capacity cuts found ($C_1=20, C_2=22, C_3=29, C_4=24$), the minimum capacity is 20. Let's denote the minimum capacity of all constant cuts as $C_{const} = 20$.\n\n**Case 2: Cuts where the capacity depends on $\\lambda$.**\nThis occurs if the edge $(a,b)$ crosses from $S$ to $T$, which requires $a \\in S$ and $b \\in T$. The capacity of such a cut will have the form $K + c(a,b) = K + 1 + \\lambda$, where $K$ is the sum of capacities of all other edges crossing from $S$ to $T$. We want to find the cut in this family with the smallest capacity.\n\nLet's evaluate some key cuts of this type:\n1.  Consider the cut $S = \\{s,a\\}, T=\\{b,c,d,t\\}$.\n    The edges from $S$ to $T$ are $(s,b)$, $(a,b)$, and $(a,c)$.\n    The capacity is $C_5(\\lambda) = c(s,b) + c(a,c) + c(a,b) = 5 + 20 + (1+\\lambda) = 26 + \\lambda$.\n\n2.  Consider the cut $S = \\{s,a,c\\}, T=\\{b,d,t\\}$.\n    The edges from $S$ to $T$ are $(s,b)$, $(a,b)$, $(c,d)$, and $(c,t)$.\n    The capacity is $C_6(\\lambda) = c(s,b) + c(c,d) + c(c,t) + c(a,b) = 5 + 3 + 8 + (1+\\lambda) = 17 + \\lambda$.\n\nComparing the $\\lambda$-dependent cuts found ($26+\\lambda$ and $17+\\lambda$), the minimum capacity for any $\\lambda \\ge 0$ is $C_{\\lambda} = 17 + \\lambda$.\n\n**Overall Minimum Cut Capacity**\nThe max-flow value $v(\\lambda)$ is the minimum of all cut capacities. We need to find the minimum between the minimal constant capacity and the minimal $\\lambda$-dependent capacity.\n$$ v(\\lambda) = \\min(C_{const}, C_{\\lambda}) = \\min(20, 17+\\lambda) $$\n\nNow we analyze this expression for $\\lambda \\ge 0$:\n- If $17+\\lambda \\le 20$, the minimum is $17+\\lambda$. This condition holds for $0 \\le \\lambda \\le 3$.\n- If $17+\\lambda > 20$, the minimum is $20$. This condition holds for $\\lambda > 3$.\n\nThis gives a piecewise function for the maximum throughput $v(\\lambda)$:\nFor $0 \\le \\lambda \\le 3$, the bottleneck is the cut $S=\\{s,a,c\\}$, and increasing the capacity of the $(a,b)$ link directly increases the total network throughput. The rate of increase is 1.\nWhen $\\lambda$ exceeds 3, the capacity of this cut surpasses 20. The bottleneck then switches to the cut $S=\\{s\\}$, which has a constant capacity of 20. Any further investment in the $(a,b)$ link (increasing $\\lambda$ beyond 3) yields no improvement in the total throughput.\n\nThe final functional form for $v(\\lambda)$ is:\n$v(\\lambda) = \\begin{cases} 17 + \\lambda & \\text{if } 0 \\le \\lambda \\le 3 \\\\ 20 & \\text{if } \\lambda > 3 \\end{cases}$", "answer": "$$\\boxed{\\begin{cases} 17 + \\lambda & \\text{if } 0 \\le \\lambda \\le 3 \\\\ 20 & \\text{if } \\lambda > 3 \\end{cases}}$$", "id": "2189457"}]}