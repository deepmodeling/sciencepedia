{"hands_on_practices": [{"introduction": "The first step in mastering numerical stability is to understand that the choice of a finite difference scheme is not arbitrary; it must respect the underlying physics of the equation. This exercise explores the one-dimensional advection equation, a fundamental model for transport phenomena. By analyzing a Forward-Time, Backward-Space (FTBS) scheme for a flow moving from right to left, you will discover the critical importance of 'upwinding'—discretizing the spatial derivative using information from the direction the flow is coming from—and see firsthand how violating this principle leads to unconditional instability [@problem_id:2225619].", "problem": "A meteorologist is developing a one-dimensional numerical model for a cold front. The temperature distribution $T(x,t)$ is governed by the linear advection equation:\n$$\n\\frac{\\partial T}{\\partial t} + v \\frac{\\partial T}{\\partial x} = 0\n$$\nwhere the velocity $v$ is a negative constant, indicating that the front moves from right to left (in the negative $x$-direction).\n\nTo solve this equation numerically, a grid is defined with a uniform spatial step size $\\Delta x$ and a time step size $\\Delta t$. Let $T_j^n$ denote the numerical approximation of the temperature at position $x_j = j\\Delta x$ and time $t_n = n\\Delta t$. The proposed numerical scheme is a Forward-Time, Backward-Space (FTBS) method, which is discretized as:\n$$\n\\frac{T_j^{n+1} - T_j^n}{\\Delta t} + v \\frac{T_j^n - T_{j-1}^n}{\\Delta x} = 0\n$$\n\nThe stability of this scheme is analyzed in terms of the Courant number, which we define for this problem as $\\alpha = \\frac{v \\Delta t}{\\Delta x}$. Note that since $v < 0$, the Courant number $\\alpha$ is also negative.\n\nUsing von Neumann stability analysis, determine the stability of this specific FTBS scheme for the given advection problem where $v < 0$. Choose the correct conclusion from the options below.\n\nA) The scheme is stable if and only if $-1 \\le \\alpha \\le 0$.\n\nB) The scheme is stable if and only if $-2 \\le \\alpha \\le 0$.\n\nC) The scheme is unconditionally stable for all valid $\\alpha < 0$.\n\nD) The scheme is unconditionally unstable for any $\\alpha < 0$.", "solution": "We start from the FTBS discretization\n$$\n\\frac{T_{j}^{n+1}-T_{j}^{n}}{\\Delta t}+v\\frac{T_{j}^{n}-T_{j-1}^{n}}{\\Delta x}=0,\n$$\nwhich can be written as\n$$\nT_{j}^{n+1}=T_{j}^{n}-\\alpha\\left(T_{j}^{n}-T_{j-1}^{n}\\right),\n\\qquad \\alpha=\\frac{v\\Delta t}{\\Delta x}.\n$$\nPerform a von Neumann analysis by inserting a Fourier mode $T_{j}^{n}=\\hat{T}^{n}\\exp(i\\kappa j)$ with $\\kappa=k\\Delta x$. This gives $T_{j-1}^{n}=\\exp(-i\\kappa)T_{j}^{n}$ and hence the amplification factor $G$ defined by $T_{j}^{n+1}=G\\,T_{j}^{n}$ satisfies\n$$\nG=1-\\alpha\\left(1-\\exp(-i\\kappa)\\right).\n$$\nIts modulus squared is\n$$\n|G|^{2}=\\left[1-\\alpha\\left(1-\\cos\\kappa\\right)\\right]^{2}+\\left[\\alpha\\sin\\kappa\\right]^{2}.\n$$\nExpand and simplify using $(1-\\cos\\kappa)^{2}+\\sin^{2}\\kappa=2-2\\cos\\kappa$ to obtain\n$$\n|G|^{2}=1-2\\alpha(1-\\cos\\kappa)+\\alpha^{2}\\left(2-2\\cos\\kappa\\right)\n=1+2\\alpha(\\alpha-1)\\left(1-\\cos\\kappa\\right).\n$$\nFor stability, we require $|G|\\leq 1$ for all $\\kappa$, i.e.,\n$$\n|G|^{2}\\leq 1 \\quad \\text{for all } \\kappa.\n$$\nSince $1-\\cos\\kappa\\geq 0$ for all $\\kappa$, the condition $|G|^{2}\\leq 1$ for all $\\kappa$ is equivalent to\n$$\n\\alpha(\\alpha-1)\\leq 0 \\quad \\Longleftrightarrow \\quad 0\\leq \\alpha \\leq 1.\n$$\nIn this problem, $v<0$ implies $\\alpha=\\frac{v\\Delta t}{\\Delta x}<0$, so the stability interval $0\\leq \\alpha \\leq 1$ cannot be satisfied for any valid negative $\\alpha$. Therefore, for this FTBS scheme applied to leftward advection ($v<0$), the method is unstable for any $\\alpha<0$.\n\nHence the correct choice is that the scheme is unconditionally unstable for any $\\alpha<0$.", "answer": "$$\\boxed{D}$$", "id": "2225619"}, {"introduction": "Simply knowing a scheme is unstable is not enough; a true expert understands the nature of the instability itself. This practice examines the notoriously unstable Forward-Time, Centered-Space (FTCS) scheme for the advection equation, but with a twist [@problem_id:2225581]. Instead of just proving that the amplification factor's magnitude $|G|$ can exceed one, your task is to pinpoint the exact Fourier mode (or wavenumber $k$) that grows the fastest, revealing the 'fingerprint' of the instability. This analysis provides deeper insight into how numerical errors manifest and dominate a simulation, a key skill for debugging and developing more robust methods.", "problem": "Consider the one-dimensional linear advection equation, which describes the transport of a quantity $u(x,t)$ at a constant positive speed $c$:\n$$ \\frac{\\partial u}{\\partial t} + c \\frac{\\partial u}{\\partial x} = 0 $$\nAn engineer attempts to solve this equation numerically on a uniform grid with spatial step size $\\Delta x$ and time step size $\\Delta t$. They employ the Forward-in-Time, Centered-in-Space (FTCS) scheme, which is given by the following finite difference equation:\n$$ \\frac{u_j^{n+1} - u_j^n}{\\Delta t} + c \\frac{u_{j+1}^n - u_{j-1}^n}{2\\Delta x} = 0 $$\nwhere $u_j^n$ is the numerical approximation of $u(j\\Delta x, n\\Delta t)$.\n\nThis scheme is known to be unconditionally unstable, causing any initial round-off errors to grow over time. The error can be decomposed into a superposition of Fourier modes. The evolution of a single Fourier mode with wavenumber $k$ from one time step to the next is governed by a complex amplification factor, $G(k)$. The mode that corresponds to the largest magnitude of this factor, $|G(k)|$, will grow most rapidly and eventually dominate the numerical solution.\n\nYour task is to identify the specific wavenumber $k$ of the Fourier mode that experiences the fastest growth. Express this wavenumber $k$ as a symbolic expression in terms of the spatial grid spacing $\\Delta x$.", "solution": "Consider the FTCS scheme\n$$\\frac{u_{j}^{n+1}-u_{j}^{n}}{\\Delta t}+c\\,\\frac{u_{j+1}^{n}-u_{j-1}^{n}}{2\\Delta x}=0.$$\nPerform a von Neumann analysis by inserting a single Fourier mode\n$$u_{j}^{n}=\\hat{u}^{n}\\exp(i j \\theta),\\quad \\theta=k\\Delta x,$$\nand define the amplification factor by $u_{j}^{n+1}=G\\,u_{j}^{n}$. Substituting gives\n$$\\frac{G-1}{\\Delta t}+c\\,\\frac{\\exp(i\\theta)-\\exp(-i\\theta)}{2\\Delta x}=0.$$\nUsing $\\exp(i\\theta)-\\exp(-i\\theta)=2i\\sin\\theta$, we obtain\n$$\\frac{G-1}{\\Delta t}+c\\,\\frac{i\\sin\\theta}{\\Delta x}=0 \\quad\\Longrightarrow\\quad G=1-i\\nu\\sin\\theta,$$\nwhere $\\nu=\\frac{c\\,\\Delta t}{\\Delta x}$ is the Courant number. The magnitude of the amplification factor is\n$$|G|=\\sqrt{1+\\nu^{2}\\sin^{2}\\theta}.$$\nFor fixed $\\nu$, the growth per time step is maximized when $|G|$ is maximized, which occurs when $|\\sin\\theta|$ is maximal. Since $|\\sin\\theta|$ attains its maximum value $1$ at\n$$\\theta=\\frac{\\pi}{2}+m\\pi,\\quad m\\in\\mathbb{Z},$$\nthe corresponding wavenumbers satisfy\n$$k\\Delta x=\\frac{\\pi}{2}+m\\pi \\quad\\Longrightarrow\\quad k=\\frac{(2m+1)\\pi}{2\\Delta x}.$$\nRestricting to the principal wavenumber in the first Brillouin zone yields the specific fastest-growing mode\n$$k=\\frac{\\pi}{2\\Delta x}.$$", "answer": "$$\\boxed{\\frac{\\pi}{2\\Delta x}}$$", "id": "2225581"}, {"introduction": "Having explored fundamental principles in one dimension, we now scale up to a more realistic and complex application: simulating the movement of smoke in a two-dimensional flow. This scenario is modeled by the advection-diffusion equation, which combines transport by a velocity field (advection) and molecular spreading (diffusion). Your challenge is to derive the stability constraint for a scheme that correctly uses upwinding for advection and central differencing for diffusion, integrating the stability requirements of both physical processes in 2D [@problem_id:2449689]. This capstone problem bridges the gap between simple test cases and practical computational fluid dynamics, demonstrating how to engineer a stable scheme for a multi-dimensional, multi-physics simulation.", "problem": "Consider the two-dimensional transport of a passive scalar field $\\rho(x,y,t)$ used to model smoke density in computer graphics, governed by the linear advection-diffusion equation\n$$\n\\partial_t \\rho + u_x \\,\\partial_x \\rho + u_y \\,\\partial_y \\rho \\;=\\; \\kappa \\left(\\partial_{xx} \\rho + \\partial_{yy} \\rho\\right),\n$$\nwhere $u_x$ and $u_y$ are constant velocities measured in $\\mathrm{m/s}$ and $\\kappa$ is a constant diffusion coefficient measured in $\\mathrm{m^2/s}$. The computational domain is discretized on a uniform Cartesian grid with spacings $\\Delta x$ and $\\Delta y$, measured in $\\mathrm{m}$, and periodic boundary conditions are imposed in both spatial directions.\n\nDefine a fully explicit finite-difference time-stepping scheme with time step $\\Delta t$ measured in $\\mathrm{s}$ as follows:\n- Time derivative is approximated by the forward difference in time.\n- Advection terms in $x$ and $y$ use first-order upwind differences determined by the sign of $u_x$ and $u_y$, respectively. Specifically, for the $x$-derivative at grid index $(i,j)$,\n$$\n\\partial_x \\rho \\approx\n\\begin{cases}\n\\displaystyle \\frac{\\rho_{i,j}^n - \\rho_{i-1,j}^n}{\\Delta x},  \\text{if } u_x \\ge 0 \\\\[1em]\n\\displaystyle \\frac{\\rho_{i+1,j}^n - \\rho_{i,j}^n}{\\Delta x},  \\text{if } u_x  0\n\\end{cases}\n$$\nand analogously for the $y$-derivative using $\\Delta y$ and the sign of $u_y$.\n- Diffusion uses the standard second-order central differences in each spatial direction, i.e., the $5$-point Laplacian stencil.\n\nAssume periodic boundary conditions and a spatially infinite Fourier decomposition so that stability can be assessed by requiring that the magnitude of the amplification factor does not exceed $1$ for all discrete Fourier modes. Determine, in terms of $u_x$, $u_y$, $\\kappa$, $\\Delta x$, and $\\Delta y$, the largest time step $\\Delta t_{\\max}$ (in $\\mathrm{s}$) such that the scheme is stable in the above sense for all Fourier modes. Then, for each parameter set in the test suite below, compute $\\Delta t_{\\max}$ and decide whether a provided $\\Delta t$ is stable by checking if $\\Delta t \\le \\Delta t_{\\max}$.\n\nAll velocities $u_x$ and $u_y$ must be given in $\\mathrm{m/s}$, the diffusion coefficient $\\kappa$ in $\\mathrm{m^2/s}$, grid spacings $\\Delta x$ and $\\Delta y$ in $\\mathrm{m}$, and time steps $\\Delta t$ and $\\Delta t_{\\max}$ in $\\mathrm{s}$. Express the final $\\Delta t_{\\max}$ values in $\\mathrm{s}$ rounded to $6$ decimal places. The stability indicator must be a boolean value with the convention that $\\text{True}$ means stable and $\\text{False}$ means unstable.\n\nTest suite (each case is $(u_x,u_y,\\kappa,\\Delta x,\\Delta y,\\Delta t)$ with the units specified above):\n- Case $1$: $(+1.0,\\,-0.5,\\,0.01,\\,0.02,\\,0.02,\\,0.004)$\n- Case $2$: $(+0.4,\\,+0.6,\\,0.0,\\,1.0,\\,1.0,\\,1.0)$\n- Case $3$: $(0.0,\\,0.0,\\,0.2,\\,0.5,\\,0.25,\\,0.125)$\n- Case $4$: $(-2.0,\\,0.0,\\,0.0,\\,0.01,\\,0.01,\\,0.006)$\n- Case $5$: $(0.0,\\,0.0,\\,0.001,\\,0.005,\\,0.01,\\,0.02)$\n- Case $6$: $(+3.0,\\,+1.0,\\,0.05,\\,0.1,\\,0.2,\\,0.05)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each entry is a two-element list $[\\Delta t_{\\max},\\,\\text{is\\_stable}]$ corresponding to the cases in the given order. For example, the output format must be like\n$[[\\Delta t_{\\max,1},\\text{is\\_stable}_1],[\\Delta t_{\\max,2},\\text{is\\_stable}_2],\\dots]$,\nwith each $\\Delta t_{\\max}$ rounded to $6$ decimal places and each $\\text{is\\_stable}$ a boolean.", "solution": "The problem as stated is valid. It is scientifically grounded in the principles of computational fluid dynamics, specifically the numerical solution of the advection-diffusion equation. The finite difference scheme is well-defined, and the task of determining its stability via von Neumann analysis is a standard, well-posed problem in numerical analysis. The provided parameters are complete and physically consistent. We may proceed with the solution.\n\nThe governing partial differential equation (PDE) for the transport of the scalar field $\\rho(x,y,t)$ is given by:\n$$\n\\partial_t \\rho + u_x \\,\\partial_x \\rho + u_y \\,\\partial_y \\rho \\;=\\; \\kappa \\left(\\partial_{xx} \\rho + \\partial_{yy} \\rho\\right)\n$$\nHere, $u_x$ and $u_y$ are constant advection velocities, and $\\kappa$ is the constant diffusion coefficient. The domain is a uniform Cartesian grid with spacings $\\Delta x$ and $\\Delta y$.\n\nThe problem specifies a fully explicit finite-difference scheme. We discretize the PDE by replacing each derivative with its finite-difference approximation. Let $\\rho_{i,j}^n$ denote the value of $\\rho$ at grid point $(i\\Delta x, j\\Delta y)$ at time $n\\Delta t$.\n\n1.  **Time Derivative**: The forward difference in time (Forward Euler method) is used:\n    $$ \\partial_t \\rho \\approx \\frac{\\rho_{i,j}^{n+1} - \\rho_{i,j}^n}{\\Delta t} $$\n\n2.  **Advection Terms**: First-order upwind differencing is used. The choice of stencil points depends on the sign of the velocity components. This can be expressed compactly using the notation $u^+ = \\max(u, 0)$ and $u^- = \\min(u, 0)$, where $u = u^+ + u^-$. The spatial derivative $\\partial_x \\rho$ is approximated as:\n    $$ u_x \\partial_x \\rho \\approx u_x^+ \\frac{\\rho_{i,j}^n - \\rho_{i-1,j}^n}{\\Delta x} + u_x^- \\frac{\\rho_{i+1,j}^n - \\rho_{i,j}^n}{\\Delta x} $$\n    An analogous expression holds for $u_y \\partial_y \\rho$. Note that $u_x^+ - u_x^- = |u_x|$.\n\n3.  **Diffusion Terms**: The standard second-order central difference is used for the Laplacian operator $\\nabla^2 \\rho = \\partial_{xx} \\rho + \\partial_{yy} \\rho$:\n    $$ \\kappa \\nabla^2 \\rho \\approx \\kappa \\left( \\frac{\\rho_{i+1,j}^n - 2\\rho_{i,j}^n + \\rho_{i-1,j}^n}{(\\Delta x)^2} + \\frac{\\rho_{i,j+1}^n - 2\\rho_{i,j}^n + \\rho_{i,j-1}^n}{(\\Delta y)^2} \\right) $$\n\nSubstituting these approximations into the PDE and solving for $\\rho_{i,j}^{n+1}$ yields the complete update rule:\n$$ \\frac{\\rho_{i,j}^{n+1} - \\rho_{i,j}^n}{\\Delta t} = - \\left( u_x^+ \\frac{\\rho_{i,j}^n - \\rho_{i-1,j}^n}{\\Delta x} + u_x^- \\frac{\\rho_{i+1,j}^n - \\rho_{i,j}^n}{\\Delta x} \\right) - \\left( u_y^+ \\frac{\\rho_{i,j}^n - \\rho_{i,j-1}^n}{\\Delta y} + u_y^- \\frac{\\rho_{i,j+1}^n - \\rho_{i,j}^n}{\\Delta y} \\right) + \\kappa \\left( \\frac{\\rho_{i+1,j}^n - 2\\rho_{i,j}^n + \\rho_{i-1,j}^n}{(\\Delta x)^2} + \\frac{\\rho_{i,j+1}^n - 2\\rho_{i,j}^n + \\rho_{i,j-1}^n}{(\\Delta y)^2} \\right) $$\nWe can rearrange this equation by collecting the coefficients for the values of $\\rho^n$ at the different stencil points:\n$$\n\\begin{aligned}\n\\rho_{i,j}^{n+1} =  \\left(1 - \\frac{\\Delta t}{\\Delta x}(u_x^+ - u_x^-) - \\frac{\\Delta t}{\\Delta y}(u_y^+ - u_y^-) - 2\\kappa \\frac{\\Delta t}{(\\Delta x)^2} - 2\\kappa \\frac{\\Delta t}{(\\Delta y)^2}\\right) \\rho_{i,j}^n \\\\\n + \\left(\\frac{u_x^+ \\Delta t}{\\Delta x} + \\frac{\\kappa \\Delta t}{(\\Delta x)^2}\\right) \\rho_{i-1,j}^n + \\left(-\\frac{u_x^- \\Delta t}{\\Delta x} + \\frac{\\kappa \\Delta t}{(\\Delta x)^2}\\right) \\rho_{i+1,j}^n \\\\\n + \\left(\\frac{u_y^+ \\Delta t}{\\Delta y} + \\frac{\\kappa \\Delta t}{(\\Delta y)^2}\\right) \\rho_{i,j-1}^n + \\left(-\\frac{u_y^- \\Delta t}{\\Delta y} + \\frac{\\kappa \\Delta t}{(\\Delta y)^2}\\right) \\rho_{i,j+1}^n\n\\end{aligned}\n$$\nUsing the identities $u_x^+ - u_x^- = |u_x|$ and $u_y^+ - u_y^- = |u_y|$, the coefficient of $\\rho_{i,j}^n$ simplifies:\n$$ C_{i,j} = 1 - \\frac{|u_x|\\Delta t}{\\Delta x} - \\frac{|u_y|\\Delta t}{\\Delta y} - 2\\kappa\\Delta t \\left(\\frac{1}{(\\Delta x)^2} + \\frac{1}{(\\Delta y)^2}\\right) $$\nFor von Neumann stability, we require that the magnitude of the amplification factor, $|G|$, does not exceed $1$ for any Fourier mode. A sufficient condition for stability, which for this scheme is also necessary, is that the update for $\\rho_{i,j}^{n+1}$ is a convex combination of the values at the previous time step. This requires two conditions on the stencil coefficients:\n1.  All coefficients must be non-negative.\n2.  The sum of all coefficients must equal $1$.\n\nLet us verify the sum of coefficients. Adding all coefficients gives:\n$$ C_{sum} = (C_{i,j}) + \\left(\\frac{u_x^+\\Delta t}{\\Delta x} + \\dots\\right) + \\left(\\frac{-u_x^-\\Delta t}{\\Delta x} + \\dots\\right) + \\dots = 1 $$\nThis is because terms involving $\\Delta t$ cancel out. For example, the terms related to the $x$-direction sum to:\n$$ \\left(1 - \\frac{|u_x|\\Delta t}{\\Delta x}\\right) + \\left(\\frac{u_x^+\\Delta t}{\\Delta x}\\right) + \\left(\\frac{-u_x^-\\Delta t}{\\Delta x}\\right) = 1 - \\frac{(u_x^+ - u_x^-)\\Delta t}{\\Delta x} + \\frac{(u_x^+ - u_x^-)\\Delta t}{\\Delta x} = 1 $$\nThe sum is indeed $1$. Now we enforce non-negativity.\n-   Coefficient of $\\rho_{i-1,j}^n$: $(\\frac{u_x^+ \\Delta t}{\\Delta x} + \\frac{\\kappa \\Delta t}{(\\Delta x)^2}) \\ge 0$. This holds since $u_x^+ \\ge 0$ and $\\kappa \\ge 0$.\n-   Coefficient of $\\rho_{i+1,j}^n$: $(-\\frac{u_x^- \\Delta t}{\\Delta x} + \\frac{\\kappa \\Delta t}{(\\Delta x)^2}) \\ge 0$. This holds since $u_x^- \\le 0$ and $\\kappa \\ge 0$.\n-   Similarly, coefficients of $\\rho_{i,j-1}^n$ and $\\rho_{i,j+1}^n$ are non-negative.\n\nThe only remaining constraint comes from requiring the coefficient of $\\rho_{i,j}^n$ to be non-negative:\n$$ 1 - \\frac{|u_x|\\Delta t}{\\Delta x} - \\frac{|u_y|\\Delta t}{\\Delta y} - 2\\kappa\\Delta t \\left(\\frac{1}{(\\Delta x)^2} + \\frac{1}{(\\Delta y)^2}\\right) \\ge 0 $$\nSolving for $\\Delta t$:\n$$ \\Delta t \\left(\\frac{|u_x|}{\\Delta x} + \\frac{|u_y|}{\\Delta y} + 2\\kappa \\left(\\frac{1}{(\\Delta x)^2} + \\frac{1}{(\\Delta y)^2}\\right)\\right) \\le 1 $$\nThis gives the stability limit for the time step, $\\Delta t_{\\max}$. If the denominator is zero (i.e., $u_x=u_y=0$ and $\\kappa=0$), the scheme is unconditionally stable, and $\\Delta t_{\\max}$ is infinite. Otherwise:\n$$ \\Delta t_{\\max} = \\frac{1}{\\frac{|u_x|}{\\Delta x} + \\frac{|u_y|}{\\Delta y} + 2\\kappa \\left(\\frac{1}{(\\Delta x)^2} + \\frac{1}{(\\Delta y)^2}\\right)} $$\nThe numerical scheme is stable if and only if the chosen time step $\\Delta t$ satisfies $\\Delta t \\le \\Delta t_{\\max}$.\n\nWe now apply this formula to each test case.\n-   **Case 1**: $\\Delta t_{\\max} = 1 / (|1.0|/0.02 + |-0.5|/0.02 + 2(0.01)(1/0.02^2 + 1/0.02^2)) = 1 / (50 + 25 + 100) = 1/175 \\approx 0.005714$. Since $\\Delta t=0.004 \\le 0.005714$, it is stable.\n-   **Case 2**: $\\Delta t_{\\max} = 1 / (|0.4|/1.0 + |0.6|/1.0 + 0) = 1 / (0.4 + 0.6) = 1.0$. Since $\\Delta t=1.0 \\le 1.0$, it is stable.\n-   **Case 3**: $\\Delta t_{\\max} = 1 / (0 + 0 + 2(0.2)(1/0.5^2 + 1/0.25^2)) = 1 / (0.4(4 + 16)) = 1/8 = 0.125$. Since $\\Delta t=0.125 \\le 0.125$, it is stable.\n-   **Case 4**: $\\Delta t_{\\max} = 1 / (|-2.0|/0.01 + 0 + 0) = 1/200 = 0.005$. Since $\\Delta t=0.006  0.005$, it is unstable.\n-   **Case 5**: $\\Delta t_{\\max} = 1 / (0 + 0 + 2(0.001)(1/0.005^2 + 1/0.01^2)) = 1 / (0.002(40000 + 10000)) = 1/100 = 0.01$. Since $\\Delta t=0.02  0.01$, it is unstable.\n-   **Case 6**: $\\Delta t_{\\max} = 1 / (|3.0|/0.1 + |1.0|/0.2 + 2(0.05)(1/0.1^2 + 1/0.2^2)) = 1 / (30 + 5 + 0.1(100+25)) = 1/(35 + 12.5) = 1/47.5 \\approx 0.021053$. Since $\\Delta t=0.05  0.021053$, it is unstable.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the stability of a finite difference scheme for the 2D\n    advection-diffusion equation for a series of test cases.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Each case is a tuple: (ux, uy, kappa, dx, dy, dt)\n    test_cases = [\n        (1.0, -0.5, 0.01, 0.02, 0.02, 0.004),\n        (0.4, 0.6, 0.0, 1.0, 1.0, 1.0),\n        (0.0, 0.0, 0.2, 0.5, 0.25, 0.125),\n        (-2.0, 0.0, 0.0, 0.01, 0.01, 0.006),\n        (0.0, 0.0, 0.001, 0.005, 0.01, 0.02),\n        (3.0, 1.0, 0.05, 0.1, 0.2, 0.05),\n    ]\n\n    results = []\n    for case in test_cases:\n        ux, uy, kappa, dx, dy, dt = case\n\n        # The stability condition is derived from requiring the coefficients of the\n        # explicit stencil to be non-negative. This yields:\n        # dt_max * ( |ux|/dx + |uy|/dy + 2*kappa*(1/dx^2 + 1/dy^2) ) = 1\n        \n        # Calculate the terms in the denominator of the dt_max expression.\n        advection_term_x = abs(ux) / dx\n        advection_term_y = abs(uy) / dy\n        diffusion_term = 2 * kappa * (1 / dx**2 + 1 / dy**2)\n        \n        denominator = advection_term_x + advection_term_y + diffusion_term\n\n        # If the denominator is zero, the scheme is unconditionally stable.\n        if denominator == 0:\n            dt_max = float('inf')\n        else:\n            dt_max = 1 / denominator\n\n        # Check if the given time step dt is stable.\n        is_stable = dt = dt_max\n        \n        # Format the result for the current case.\n        # dt_max is rounded to 6 decimal places.\n        formatted_result = [round(dt_max, 6), is_stable]\n        results.append(formatted_result)\n\n    # Final print statement in the exact required format.\n    # Using str() on the list of lists produces the required output format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2449689"}]}