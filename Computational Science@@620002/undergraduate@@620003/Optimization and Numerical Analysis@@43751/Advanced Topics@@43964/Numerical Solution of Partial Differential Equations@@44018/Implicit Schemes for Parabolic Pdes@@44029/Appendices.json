{"hands_on_practices": [{"introduction": "Before tackling complex Partial Differential Equations (PDEs), it's essential to grasp the core mechanics of an implicit method in a simpler setting. This first practice invites you to apply the backward Euler method to a familiar Ordinary Differential Equation (ODE)â€”Newton's law of cooling. By working through this tangible example, you will perform the key algebraic step of an implicit scheme: solving for the future state, $T_{n+1}$, in terms of the current state, $T_n$. This foundational exercise builds intuition for why these methods are called \"implicit\" and prepares you for the larger systems of equations that arise from PDEs. [@problem_id:2178879]", "problem": "A computer's Central Processing Unit (CPU) heats up during intensive tasks. Once the task is complete, it begins to cool down. The cooling process is governed by Newton's law of cooling. Let $T(t)$ be the temperature of the CPU at time $t$, and let $T_a$ be the constant ambient temperature of the room. The rate of change of the CPU's temperature is described by the differential equation:\n$$ \\frac{dT}{dt} = -k(T(t) - T_a) $$\nwhere $k$ is a positive constant determined by the cooling system's efficiency.\n\nTo predict the temperature at future times, we use a numerical approximation with a constant time step $\\Delta t$. Let $T_n$ denote the numerical approximation of the temperature at time $t_n = n \\Delta t$.\n\nBy applying the backward Euler method to the given differential equation, derive an explicit expression for the temperature at the next time step, $T_{n+1}$, in terms of the current temperature $T_n$, the ambient temperature $T_a$, the cooling constant $k$, and the time step $\\Delta t$.", "solution": "We start from Newton's law of cooling written as the first-order ordinary differential equation\n$$\n\\frac{dT}{dt}=-k\\big(T(t)-T_{a}\\big).\n$$\nLet $t_{n}=n\\Delta t$ and $T_{n}$ be the approximation to $T(t_{n})$. The backward Euler method uses the implicit update\n$$\nT_{n+1}=T_{n}+\\Delta t\\,f\\big(t_{n+1},T_{n+1}\\big),\n$$\nwhere here the right-hand side function is $f(t,T)=-k\\big(T-T_{a}\\big)$. Substituting this into the backward Euler update gives\n$$\nT_{n+1}=T_{n}+\\Delta t\\left[-k\\big(T_{n+1}-T_{a}\\big)\\right].\n$$\nExpanding and collecting the terms involving $T_{n+1}$ on the left yields\n$$\nT_{n+1}+k\\Delta t\\,T_{n+1}=T_{n}+k\\Delta t\\,T_{a}.\n$$\nFactoring $T_{n+1}$ and solving explicitly for $T_{n+1}$ gives\n$$\n(1+k\\Delta t)\\,T_{n+1}=T_{n}+k\\Delta t\\,T_{a}\n\\quad\\Longrightarrow\\quad\nT_{n+1}=\\frac{T_{n}+k\\Delta t\\,T_{a}}{1+k\\Delta t}.\n$$\nThis expresses the next-step temperature in terms of $T_{n}$, $T_{a}$, $k$, and $\\Delta t$.", "answer": "$$\\boxed{\\frac{T_{n}+k\\Delta t\\,T_{a}}{1+k\\Delta t}}$$", "id": "2178879"}, {"introduction": "Having seen how an implicit update works for a single equation, we now transition to a full parabolic PDE, the one-dimensional heat equation. This practice is central to understanding how implicit schemes are implemented for continuum problems. Your task is to discretize the PDE using the backward Euler method and derive the algebraic relationship between temperature values at adjacent grid points. This process will reveal the famous tridiagonal structure of the linear system, a hallmark of 1D diffusion problems, and introduce the critical dimensionless parameter known as the mesh Fourier number, $\\mu$. [@problem_id:2178886]", "problem": "Consider the one-dimensional heat equation, a type of Partial Differential Equation (PDE), given by $u_t = \\alpha u_{xx}$, where $u(x,t)$ is the temperature, $t$ is time, $x$ is the spatial coordinate, and $\\alpha$ is the thermal diffusivity constant. We wish to solve this equation numerically on a uniform grid with spatial step size $\\Delta x$ and time step size $\\Delta t$. Let $U_j^n$ denote the numerical approximation of $u(j\\Delta x, n\\Delta t)$.\n\nThe backward Euler method uses a forward difference for the time derivative and a central difference for the spatial derivative, with the crucial feature that the spatial derivative is evaluated at the future time level $n+1$. This leads to an implicit scheme that can be written as an algebraic relation between the temperature values at three adjacent spatial points ($j-1, j, j+1$) at the new time level $n+1$ and the temperature at a single point $j$ at the old time level $n$.\n\nThis system of algebraic equations for an interior grid point $j$ can be expressed as:\n$$A \\cdot U_{j-1}^{n+1} + B \\cdot U_j^{n+1} + C \\cdot U_{j+1}^{n+1} = U_j^n$$\nwhere the coefficients $A$, $B$, and $C$ depend on the mesh Fourier number, defined as $\\mu = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}$.\n\nDetermine the correct set of coefficients $(A, B, C)$ for this scheme.\n\nA. $(-\\mu, 1+2\\mu, -\\mu)$\n\nB. $(\\mu, 1-2\\mu, \\mu)$\n\nC. $(-\\mu, 1-2\\mu, -\\mu)$\n\nD. $(-\\mu, 2\\mu, -\\mu)$\n\nE. $(\\mu, 1+2\\mu, \\mu)$", "solution": "We discretize the heat equation $u_{t}=\\alpha u_{xx}$ on a uniform grid with $U_{j}^{n}\\approx u(j\\Delta x,n\\Delta t)$. In the backward Euler method, we approximate the time derivative at the new time level using\n$$\nu_{t}(x_{j},t_{n+1})\\approx \\frac{U_{j}^{n+1}-U_{j}^{n}}{\\Delta t},\n$$\nand the spatial second derivative at the same new time level using the centered difference\n$$\nu_{xx}(x_{j},t_{n+1})\\approx \\frac{U_{j-1}^{n+1}-2U_{j}^{n+1}+U_{j+1}^{n+1}}{(\\Delta x)^{2}}.\n$$\nSubstituting these into the PDE gives\n$$\n\\frac{U_{j}^{n+1}-U_{j}^{n}}{\\Delta t}=\\alpha\\,\\frac{U_{j-1}^{n+1}-2U_{j}^{n+1}+U_{j+1}^{n+1}}{(\\Delta x)^{2}}.\n$$\nMultiplying both sides by $\\Delta t$ and defining the mesh Fourier number $\\mu=\\frac{\\alpha\\Delta t}{(\\Delta x)^{2}}$, we obtain\n$$\nU_{j}^{n+1}-U_{j}^{n}=\\mu\\left(U_{j-1}^{n+1}-2U_{j}^{n+1}+U_{j+1}^{n+1}\\right).\n$$\nRearranging to collect all unknowns at time level $n+1$ on the left-hand side yields\n$$\n-\\mu\\,U_{j-1}^{n+1}+\\left(1+2\\mu\\right)U_{j}^{n+1}-\\mu\\,U_{j+1}^{n+1}=U_{j}^{n}.\n$$\nTherefore, the coefficients in\n$$\nA\\cdot U_{j-1}^{n+1}+B\\cdot U_{j}^{n+1}+C\\cdot U_{j+1}^{n+1}=U_{j}^{n}\n$$\nare $A=-\\mu$, $B=1+2\\mu$, and $C=-\\mu$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "2178886"}, {"introduction": "The true power of numerical methods lies in their ability to handle the complexities of real-world physics, including varied boundary conditions. This final practice moves beyond simple scenarios to a heat dissipation problem with mixed boundary conditions: one insulated boundary (a Neumann condition) and one boundary held at a fixed temperature (a Dirichlet condition). Here, you will learn how to incorporate these different physical constraints into your numerical scheme, modifying the system matrix accordingly. Mastering this is a crucial step toward building robust and realistic simulations in science and engineering. [@problem_id:2178863]", "problem": "Consider the problem of simulating one-dimensional heat dissipation in a thin rod of length $L$. The temperature distribution $T(x, t)$ along the rod is governed by the heat equation, a type of parabolic Partial Differential Equation (PDE):\n$$ \\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2} \\quad \\text{for } x \\in [0, L], t \\ge 0 $$\nwhere $\\alpha$ is the thermal diffusivity of the material.\n\nThe boundary conditions are as follows:\n- At the left end ($x=0$), the rod is perfectly insulated, meaning there is no heat flux: $\\frac{\\partial T}{\\partial x}(0, t) = 0$.\n- At the right end ($x=L$), the temperature is held constant at a value $T_L$: $T(L, t) = T_L$.\n\nTo solve this problem numerically, the domain is discretized into $N$ equal segments of length $\\Delta x = L/N$, creating $N+1$ grid points indexed from $i=0$ to $i=N$, where $x_i = i \\Delta x$. The temperature at grid point $i$ and time step $n$ is denoted by $T_i^n$.\n\nThe system is evolved in time using a backward Euler (fully implicit) method for the time derivative and a second-order central difference scheme for the spatial derivative. This discretization transforms the PDE into a system of linear equations at each time step, which can be expressed in matrix form as $A \\mathbf{T}^{n+1} = \\mathbf{b}$, where $\\mathbf{T}^{n+1}$ is the vector of unknown temperatures at the next time step.\n\nFor a discretization with $N=4$, the vector of unknowns is $\\mathbf{T}^{n+1} = [T_0^{n+1}, T_1^{n+1}, T_2^{n+1}, T_3^{n+1}]^T$. Let $r = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}$ be the dimensionless diffusion number, where $\\Delta t$ is the time step size.\n\nWhich of the following matrices represents the matrix $A$ in the linear system $A \\mathbf{T}^{n+1} = \\mathbf{b}$?\n\nA.\n$$ \\begin{pmatrix} 1+2r & -2r & 0 & 0 \\\\ -r & 1+2r & -r & 0 \\\\ 0 & -r & 1+2r & -r \\\\ 0 & 0 & -r & 1+2r \\end{pmatrix} $$\n\nB.\n$$ \\begin{pmatrix} 1+2r & -2r & 0 & 0 \\\\ -r & 1+2r & -r & 0 \\\\ 0 & -r & 1+2r & -r \\\\ 0 & 0 & -2r & 1+2r \\end{pmatrix} $$\n\nC.\n$$ \\begin{pmatrix} 1+2r & -r & 0 & 0 \\\\ -r & 1+2r & -r & 0 \\\\ 0 & -r & 1+2r & -r \\\\ 0 & 0 & -r & 1+2r \\end{pmatrix} $$\n\nD.\n$$ \\begin{pmatrix} 1-2r & 2r & 0 & 0 \\\\ r & 1-2r & r & 0 \\\\ 0 & r & 1-2r & r \\\\ 0 & 0 & r & 1-2r \\end{pmatrix} $$\n\nE.\n$$ \\begin{pmatrix} 1+2r & -2r & 0 & 0 \\\\ -r & 1+r & -r & 0 \\\\ 0 & -r & 1+r & -r \\\\ 0 & 0 & -r & 1+r \\end{pmatrix} $$", "solution": "We start from the one-dimensional heat equation with thermal diffusivity $\\alpha$:\n$$\n\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^{2} T}{\\partial x^{2}}.\n$$\nDiscretize space with grid points $x_{i} = i \\Delta x$, $i=0,1,2,3,4$, where $\\Delta x = L/N$ and $N=4$. Let $T_{i}^{n}$ denote the temperature at node $i$ and time level $n$. The backward Euler scheme in time and second-order central difference in space give, for each node where the Laplacian is approximated by central differences,\n$$\n\\frac{T_{i}^{n+1} - T_{i}^{n}}{\\Delta t} = \\alpha \\frac{T_{i+1}^{n+1} - 2 T_{i}^{n+1} + T_{i-1}^{n+1}}{(\\Delta x)^{2}}.\n$$\nIntroduce the dimensionless parameter $r = \\frac{\\alpha \\Delta t}{(\\Delta x)^{2}}$ and rearrange to obtain, for interior nodes,\n$$\n-r\\, T_{i-1}^{n+1} + (1+2r)\\, T_{i}^{n+1} - r\\, T_{i+1}^{n+1} = T_{i}^{n}.\n$$\n\nBoundary conditions:\n- At $x=0$ (node $i=0$), the Neumann condition is $\\frac{\\partial T}{\\partial x}(0,t)=0$. Using a second-order ghost-point formulation,\n$$\n\\frac{T_{1}^{n+1} - T_{-1}^{n+1}}{2\\Delta x} = 0 \\quad \\Rightarrow \\quad T_{-1}^{n+1} = T_{1}^{n+1}.\n$$\nThen the second derivative at $i=0$ becomes\n$$\n\\frac{T_{1}^{n+1} - 2 T_{0}^{n+1} + T_{-1}^{n+1}}{(\\Delta x)^{2}} = \\frac{2(T_{1}^{n+1} - T_{0}^{n+1})}{(\\Delta x)^{2}}.\n$$\nApplying backward Euler at $i=0$ yields\n$$\n\\frac{T_{0}^{n+1} - T_{0}^{n}}{\\Delta t} = \\alpha \\frac{2(T_{1}^{n+1} - T_{0}^{n+1})}{(\\Delta x)^{2}}\n\\;\\;\\Rightarrow\\;\\;\n(1+2r)\\, T_{0}^{n+1} - 2r\\, T_{1}^{n+1} = T_{0}^{n}.\n$$\n\n- At $x=L$ (node $i=4$), the Dirichlet condition is $T_{4}^{n+1} = T_{L}$, so $T_{4}^{n+1}$ is known and not part of the unknown vector.\n\nWith unknown vector $\\mathbf{T}^{n+1} = [T_{0}^{n+1}, T_{1}^{n+1}, T_{2}^{n+1}, T_{3}^{n+1}]^{T}$, the equations for $i=1,2$ are\n$$\n-r\\, T_{0}^{n+1} + (1+2r)\\, T_{1}^{n+1} - r\\, T_{2}^{n+1} = T_{1}^{n}, \n$$\n$$\n- r\\, T_{1}^{n+1} + (1+2r)\\, T_{2}^{n+1} - r\\, T_{3}^{n+1} = T_{2}^{n}.\n$$\nFor $i=3$ (adjacent to the Dirichlet boundary),\n$$\n- r\\, T_{2}^{n+1} + (1+2r)\\, T_{3}^{n+1} - r\\, T_{4}^{n+1} = T_{3}^{n}\n\\;\\;\\Rightarrow\\;\\;\n- r\\, T_{2}^{n+1} + (1+2r)\\, T_{3}^{n+1} = T_{3}^{n} + r\\, T_{L}.\n$$\nThus, the coefficient matrix $A$ acting on $\\mathbf{T}^{n+1}$ has rows corresponding to the coefficients of $[T_{0}^{n+1}, T_{1}^{n+1}, T_{2}^{n+1}, T_{3}^{n+1}]$ in these four equations:\n$$\nA =\n\\begin{pmatrix}\n1+2r & -2r & 0 & 0 \\\\\n- r & 1+2r & - r & 0 \\\\\n0 & - r & 1+2r & - r \\\\\n0 & 0 & - r & 1+2r\n\\end{pmatrix}.\n$$\nComparing with the options, this matches option A.", "answer": "$$\\boxed{A}$$", "id": "2178863"}]}