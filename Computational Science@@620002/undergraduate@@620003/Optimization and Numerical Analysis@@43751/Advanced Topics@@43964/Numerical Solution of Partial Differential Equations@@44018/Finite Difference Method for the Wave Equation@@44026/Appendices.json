{"hands_on_practices": [{"introduction": "A numerical simulation is only useful if it is stable; otherwise, the results quickly diverge into physically meaningless chaos. This first practice introduces the cornerstone of stability for explicit schemes: the Courant-Friedrichs-Lewy (CFL) condition. This exercise [@problem_id:2172272] will guide you through calculating the maximum allowable time step, $\\Delta t$, for a given wave speed, $c$, and spatial grid spacing, $\\Delta x$, which is a critical first step in setting up any valid wave simulation.", "problem": "A computational physicist is simulating the propagation of a sound wave in a one-dimensional tube, which is modeled by the wave equation $\\frac{\\partial^2 u}{\\partial t^2} = c^2 \\frac{\\partial^2 u}{\\partial x^2}$. The speed of sound in the medium is $c = 320$ m/s. The simulation employs an explicit finite difference scheme on a spatial grid with a step size of $\\Delta x = 0.8$ m. For this numerical method to be stable, the chosen time step $\\Delta t$ must adhere to the Courant-Friedrichs-Lewy (CFL) stability condition, which is given by the relation $c \\frac{\\Delta t}{\\Delta x} \\le 1$. Determine the maximum possible value for the time step $\\Delta t$ that will ensure the stability of the simulation. Express your answer in seconds.", "solution": "The Courant-Friedrichs-Lewy (CFL) stability condition for the explicit finite difference scheme applied to the one-dimensional wave equation is given by\n$$\nc \\frac{\\Delta t}{\\Delta x} \\le 1.\n$$\nTo ensure stability with the largest possible time step, set the inequality to equality:\n$$\nc \\frac{\\Delta t_{\\max}}{\\Delta x} = 1 \\quad \\Rightarrow \\quad \\Delta t_{\\max} = \\frac{\\Delta x}{c}.\n$$\nSubstitute the given values $\\Delta x = 0.8$ and $c = 320$:\n$$\n\\Delta t_{\\max} = \\frac{0.8}{320}.\n$$\nSimplify the fraction:\n$$\n\\frac{0.8}{320} = \\frac{8}{3200} = \\frac{1}{400} = 0.0025.\n$$\nThus, the maximum stable time step in seconds is $0.0025$.", "answer": "$$\\boxed{0.0025}$$", "id": "2172272"}, {"introduction": "Moving beyond simple one-dimensional strings, many real-world phenomena, like the vibration of a drumhead, require two-dimensional models. This practice [@problem_id:2172249] tackles the practical challenge of applying the finite difference method to a non-rectangular domain. You will learn how to adapt the standard numerical stencil to accommodate boundary conditions in complex geometries, a fundamental skill for accurately modeling physical systems.", "problem": "Consider the two-dimensional wave equation, $u_{tt} = c^2 (u_{xx} + u_{yy})$, which models the displacement $u(x,y,t)$ of a membrane at position $(x,y)$ and time $t$. The constant $c$ is the wave propagation speed. We are interested in the behavior of a membrane stretched over a specific frame within the unit square.\n\nThe frame defines a boundary, $\\partial\\Omega$, where the membrane is fixed, implying a homogeneous Dirichlet boundary condition: $u(x,y,t) = 0$ for all points $(x,y)$ on the frame. The frame consists of the outer perimeter of the unit square $[0,1]\\times[0,1]$ and an inner, L-shaped boundary defined by the union of two line segments: $\\{ (x, 0.5) \\mid 0.5 \\le x \\le 1 \\}$ and $\\{ (0.5, y) \\mid 0.5 \\le y \\le 1 \\}$. This effectively removes the top-right quarter of the square from the vibrating region.\n\nTo solve this problem numerically, a uniform grid is laid over the $[0,1]\\times[0,1]$ square with spatial grid spacing $\\Delta x = \\Delta y = h$ and a time step $\\Delta t$. We denote the numerical approximation of the displacement at a grid point as $u_{i,j}^k \\approx u(ih, jh, k\\Delta t)$. The standard explicit finite difference scheme for the wave equation is given by the five-point stencil:\n$$u_{i,j}^{k+1} = 2(1 - 2\\lambda^2)u_{i,j}^k - u_{i,j}^{k-1} + \\lambda^2 (u_{i+1,j}^k + u_{i-1,j}^k + u_{i,j+1}^k + u_{i,j-1}^k)$$\nwhere $\\lambda = \\frac{c \\Delta t}{h}$ is the Courant number.\n\nAssume the grid spacing is set to $h = 1/N$ for a large, even integer $N$. Consider the interior grid point $P$ located at coordinates $(0.5-h, 0.5)$. Let the grid indices for this point be $(I, J)$, where $I = N/2 - 1$ and $J=N/2$.\n\nDerive the specific update equation for the displacement at this point, $u_{I,J}^{k+1}$. Your answer should be an expression for $u_{I,J}^{k+1}$ in terms of $\\lambda$ and the values of $u$ at relevant grid points at time steps $k$ and $k-1$.", "solution": "The problem asks for the specific finite difference update equation for the point $P$ with grid indices $(I,J)$ and coordinates $(x_I, y_J) = ((N/2-1)h, (N/2)h) = (0.5-h, 0.5)$.\n\nThe general update equation is given as:\n$$u_{i,j}^{k+1} = 2(1 - 2\\lambda^2)u_{i,j}^k - u_{i,j}^{k-1} + \\lambda^2 (u_{i+1,j}^k + u_{i-1,j}^k + u_{i,j+1}^k + u_{i,j-1}^k)$$\n\nTo find the specific equation for the point $(I,J)$, we need to analyze the locations of its four neighbors involved in the stencil: $(I+1, J)$, $(I-1, J)$, $(I, J+1)$, and $(I, J-1)$.\n\n1.  **East Neighbor:** The point with indices $(I+1, J)$.\n    Its coordinates are $(x_{I+1}, y_J) = ((I+1)h, Jh) = ((N/2)h, (N/2)h) = (0.5, 0.5)$.\n    This point lies on the inner L-shaped boundary, specifically at the corner where the segments $\\{ (x, 0.5) \\mid 0.5 \\le x \\le 1 \\}$ and $\\{ (0.5, y) \\mid 0.5 \\le y \\le 1 \\}$ meet. According to the homogeneous Dirichlet boundary condition, the displacement at any boundary point is zero for all time.\n    Therefore, $u_{I+1,J}^k = 0$.\n\n2.  **West Neighbor:** The point with indices $(I-1, J)$.\n    Its coordinates are $(x_{I-1}, y_J) = ((I-1)h, Jh) = ((N/2-2)h, (N/2)h) = (0.5-2h, 0.5)$.\n    Since $0 < 0.5-2h < 0.5$, this point is an interior point of the membrane. The value $u_{I-1,J}^k$ is an unknown to be solved for in the simulation.\n\n3.  **North Neighbor:** The point with indices $(I, J+1)$.\n    Its coordinates are $(x_I, y_{J+1}) = (Ih, (J+1)h) = ((N/2-1)h, (N/2+1)h) = (0.5-h, 0.5+h)$.\n    Since $0 < 0.5-h < 0.5$ and $0.5 < 0.5+h < 1$, this point is an interior point. The value $u_{I,J+1}^k$ is an unknown.\n\n4.  **South Neighbor:** The point with indices $(I, J-1)$.\n    Its coordinates are $(x_I, y_{J-1}) = (Ih, (J-1)h) = ((N/2-1)h, (N/2-1)h) = (0.5-h, 0.5-h)$.\n    Since $0 < 0.5-h < 0.5$, this point is an interior point. The value $u_{I,J-1}^k$ is an unknown.\n\nNow we substitute these findings into the general stencil for $(i,j)=(I,J)$:\n$$u_{I,J}^{k+1} = 2(1 - 2\\lambda^2)u_{I,J}^k - u_{I,J}^{k-1} + \\lambda^2 (u_{I+1,J}^k + u_{I-1,J}^k + u_{I,J+1}^k + u_{I,J-1}^k)$$\n\nSubstitute $u_{I+1,J}^k = 0$:\n$$u_{I,J}^{k+1} = 2(1 - 2\\lambda^2)u_{I,J}^k - u_{I,J}^{k-1} + \\lambda^2 (0 + u_{I-1,J}^k + u_{I,J+1}^k + u_{I,J-1}^k)$$\n\nSimplifying the expression gives the specific update equation for the point $P$:\n$$u_{I,J}^{k+1} = 2(1 - 2\\lambda^2)u_{I,J}^k - u_{I,J}^{k-1} + \\lambda^2 (u_{I-1,J}^k + u_{I,J+1}^k + u_{I,J-1}^k)$$\nThis is the required expression.", "answer": "$$\\boxed{2(1 - 2\\lambda^2)u_{I,J}^k - u_{I,J}^{k-1} + \\lambda^2 (u_{I-1,J}^k + u_{I,J+1}^k + u_{I,J-1}^k)}$$", "id": "2172249"}, {"introduction": "Once a simulation is stable and handles boundaries correctly, how can we trust its accuracy? This final practice [@problem_id:2172254] delves into the essential concept of convergence analysis, a method for verifying the quality of a numerical solution. By examining how the simulation error decreases as the computational grid is refined, you will learn to empirically measure the scheme's order of accuracy, a vital validation technique in all of computational science.", "problem": "A numerical simulation is set up to solve the one-dimensional wave Partial Differential Equation (PDE), $u_{tt} = c^2 u_{xx}$, on the spatial domain $x \\in [0, 1]$ for time $t \\geq 0$. The wave speed is given as $c=1$. The problem is subject to fixed boundary conditions $u(0, t) = 0$ and $u(1, t) = 0$, and the initial state of the system is defined by the initial conditions $u(x, 0) = \\sin(\\pi x)$ and $u_t(x, 0) = 0$. For these specific conditions, the exact analytical solution is known to be $u(x, t) = \\sin(\\pi x) \\cos(\\pi t)$.\n\nThe PDE is discretized using a standard central-difference scheme in both space and time. Let $u_j^n$ be the numerical approximation of $u(x_j, t_n)$, where $x_j = j\\Delta x$ and $t_n = n\\Delta t$. The update rule is given by:\n$$u_j^{n+1} = 2(1-\\lambda^2)u_j^n + \\lambda^2(u_{j+1}^n + u_{j-1}^n) - u_j^{n-1} \\quad \\text{for } n \\geq 1$$\nwhere $\\lambda = c \\frac{\\Delta t}{\\Delta x}$ is the Courant number. For the first time step ($n=0$), a special formula derived from the initial velocity condition is used:\n$$u_j^1 = (1-\\lambda^2)u_j^0 + \\frac{\\lambda^2}{2}(u_{j+1}^0 + u_{j-1}^0)$$\n\nTo analyze the accuracy of this numerical method, a study is conducted. Several simulations are run up to a final time of $T \\approx 0.5$, each with a different number of spatial intervals $N_x$. For all simulations, the Courant number is held constant at $\\lambda=0.5$. At the final time of each simulation, the discrete L2-norm of the error, $E$, is calculated. The results are compiled in the table below.\n\n| Number of Spatial Intervals ($N_x$) | L2-Error Norm ($E$) |\n|-------------------------------------|-----------------------|\n| 20                                  | $1.0181 \\times 10^{-3}$ |\n| 40                                  | $2.5539 \\times 10^{-4}$ |\n| 80                                  | $6.3916 \\times 10^{-5}$ |\n\nLet's define the \"error reduction factor,\" $R(M)$, as the ratio of the error from a simulation using $M$ spatial intervals to the error from a simulation using $2M$ spatial intervals.\nCalculate the error reduction factor $R(40)$. Round your final answer to four significant figures.", "solution": "The error reduction factor is defined as the ratio of the error at resolution $M$ to that at doubled resolution $2M$:\n$$R(M) = \\frac{E(M)}{E(2M)}.$$\nFor $M=40$, the table gives $E(40) = 2.5539 \\times 10^{-4}$ and $E(80) = 6.3916 \\times 10^{-5}$. Therefore,\n$$R(40) = \\frac{2.5539 \\times 10^{-4}}{6.3916 \\times 10^{-5}} = \\frac{2.5539}{6.3916} \\times 10^{(-4)-(-5)} = 10 \\times \\frac{2.5539}{6.3916}.$$\nCompute the ratio:\n$$\\frac{2.5539}{6.3916} \\approx 0.3995713,$$\nso\n$$R(40) \\approx 10 \\times 0.3995713 = 3.995713.$$\nRounding to four significant figures gives\n$$R(40) \\approx 3.996.$$", "answer": "$$\\boxed{3.996}$$", "id": "2172254"}]}