{"hands_on_practices": [{"introduction": "Numerical stability conditions are not merely abstract constraints; they have profound, practical implications for computational efficiency and resource management. This first exercise explores the crucial relationship between spatial resolution, $\\Delta x$, and the maximum allowable time step, $\\Delta t$, for a simulation of the heat equation. By working through this problem [@problem_id:2164681], you will uncover the stringent scaling law that governs explicit schemes for parabolic problems, a fundamental piece of knowledge for anyone planning and executing numerical simulations.", "problem": "An engineer is developing a thermal management simulation for a new microelectronic device. The heat dissipation along a thin, one-dimensional silicon interconnect can be modeled by the 1D heat equation:\n$$\n\\frac{\\partial T}{\\partial t} = \\alpha \\frac{\\partial^2 T}{\\partial x^2}\n$$\nwhere $T$ is the temperature, $t$ is time, $x$ is the position along the interconnect, and $\\alpha$ is the thermal diffusivity of silicon.\n\nTo solve this equation numerically, the engineer uses a Forward-Time, Centered-Space (FTCS) explicit scheme. The temperature at position index $j$ and time step $n+1$ is updated based on the temperatures at the previous time step $n$ according to the following discretization:\n$$\nT_j^{n+1} = T_j^n + s (T_{j+1}^n - 2T_j^n + T_{j-1}^n)\n$$\nwhere $\\Delta t$ is the time step, $\\Delta x$ is the spatial step, and $s = \\frac{\\alpha \\Delta t}{(\\Delta x)^2}$ is the dimensionless stability parameter. The software documentation states that for this simulation to remain numerically stable and avoid unphysical oscillations, the stability parameter must satisfy the condition $s \\le \\frac{1}{2}$.\n\nThe engineer initially runs a stable simulation with a spatial step $\\Delta x_{old}$ and a time step $\\Delta t_{old}$, choosing the largest possible time step that guarantees stability. To improve the accuracy of the temperature profile, the engineer decides to refine the simulation grid by halving the spatial step size (i.e., the new spatial step $\\Delta x_{new} = \\frac{1}{2}\\Delta x_{old}$).\n\nTo maintain the most computationally efficient yet stable simulation under this refined grid, what must be the relationship between the new maximum-allowed time step, $\\Delta t_{new}$, and the original time step, $\\Delta t_{old}$?\n\nA. $\\Delta t_{new} = \\frac{1}{4} \\Delta t_{old}$\n\nB. $\\Delta t_{new} = \\frac{1}{2} \\Delta t_{old}$\n\nC. $\\Delta t_{new} = \\Delta t_{old}$\n\nD. $\\Delta t_{new} = 2 \\Delta t_{old}$\n\nE. $\\Delta t_{new} = 4 \\Delta t_{old}$", "solution": "The FTCS scheme uses the stability parameter $s$ defined by\n$$\ns=\\frac{\\alpha \\Delta t}{(\\Delta x)^{2}}, \\quad s \\le \\frac{1}{2}.\n$$\nWith the original grid, the largest stable time step satisfies\n$$\ns_{old}=\\frac{\\alpha \\Delta t_{old}}{(\\Delta x_{old})^{2}}=\\frac{1}{2}.\n$$\nAfter refining the grid so that $\\Delta x_{new}=\\frac{1}{2}\\Delta x_{old}$, the most efficient stable choice again sets\n$$\ns_{new}=\\frac{\\alpha \\Delta t_{new}}{(\\Delta x_{new})^{2}}=\\frac{1}{2}.\n$$\nSubstituting $\\Delta x_{new}=\\frac{1}{2}\\Delta x_{old}$ gives\n$$\n\\frac{\\alpha \\Delta t_{new}}{\\left(\\frac{1}{2}\\Delta x_{old}\\right)^{2}}=\\frac{1}{2}\n\\;\\;\\Longrightarrow\\;\\;\n\\frac{4\\alpha \\Delta t_{new}}{(\\Delta x_{old})^{2}}=\\frac{1}{2}.\n$$\nComparing with $\\frac{\\alpha \\Delta t_{old}}{(\\Delta x_{old})^{2}}=\\frac{1}{2}$, we obtain\n$$\n4\\Delta t_{new}=\\Delta t_{old}\n\\;\\;\\Longrightarrow\\;\\;\n\\Delta t_{new}=\\frac{1}{4}\\Delta t_{old}.\n$$\nTherefore, the correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "2164681"}, {"introduction": "Moving from diffusive processes to advective transport, the direction of information flow becomes paramount. This practice [@problem_id:2164718] investigates why a seemingly straightforward numerical method like the central-difference scheme is inherently unstable for advection, while an upwind scheme can be stable. You will use von Neumann stability analysis to compare the amplification factors of these two schemes, providing a concrete mathematical understanding of why respecting the physics of the problem in your discretization is essential for a successful simulation.", "problem": "A scientist is numerically modeling the transport of a tracer chemical in a one-dimensional channel using the linear advection equation:\n$$ \\frac{\\partial \\phi}{\\partial t} + v \\frac{\\partial \\phi}{\\partial x} = 0 $$\nwhere $\\phi(x,t)$ is the tracer concentration and $v$ is the constant, positive flow velocity. The simulation uses a uniform spatial grid with spacing $\\Delta x$ and a constant time step $\\Delta t$. Two different numerical algorithms are being tested, both using a forward difference in time.\n- **Algorithm C (Central):** Uses a central difference approximation for the spatial derivative $\\frac{\\partial \\phi}{\\partial x}$.\n- **Algorithm U (Upwind):** Uses a first-order upwind (backward difference, since $v>0$) approximation for the spatial derivative $\\frac{\\partial \\phi}{\\partial x}$.\n\nThe initial state of the tracer concentration is a sinusoidal wave. To analyze the numerical stability, the scientist focuses on a single Fourier mode component of the solution. At time step $n$ and grid point $j$, this component is written as $\\phi_j^n$. The algorithms evolve this mode according to the rule $\\phi_j^{n+1} = G \\cdot \\phi_j^n$, where $G$ is the complex amplification factor that depends on the algorithm, the wave number of the Fourier mode, and the simulation parameters.\n\nConsider a specific Fourier mode with a wavelength of four times the grid spacing ($\\lambda = 4 \\Delta x$). The simulation is run with parameters such that the Courant number, defined as $\\nu = \\frac{v \\Delta t}{\\Delta x}$, is exactly $0.5$.\n\nLet $|G_C|$ be the magnitude of the amplification factor for Algorithm C and $|G_U|$ be the magnitude of the amplification factor for Algorithm U, both calculated for the specified Fourier mode and Courant number.\n\nCalculate the ratio $\\frac{|G_C|}{|G_U|}$. Report your answer as a real number rounded to three significant figures.", "solution": "We perform von Neumann analysis for each scheme. Let the Courant number be $\\nu = \\frac{v \\Delta t}{\\Delta x}$ and consider a Fourier mode $\\phi_{j}^{n} = \\hat{\\phi}\\, G^{n} \\exp(i j \\theta)$, where $\\theta = k \\Delta x$ and $k = \\frac{2 \\pi}{\\lambda}$.\n\nFor Algorithm C (forward time, central space), the discrete scheme is\n$$\n\\frac{\\phi_{j}^{n+1} - \\phi_{j}^{n}}{\\Delta t} + v \\frac{\\phi_{j+1}^{n} - \\phi_{j-1}^{n}}{2 \\Delta x} = 0,\n$$\nwhich gives\n$$\n\\phi_{j}^{n+1} = \\phi_{j}^{n} - \\nu \\frac{\\phi_{j+1}^{n} - \\phi_{j-1}^{n}}{2}.\n$$\nSubstitute $\\phi_{j\\pm 1}^{n} = \\phi_{j}^{n} \\exp(\\pm i \\theta)$ to obtain the amplification factor\n$$\nG_{C} = 1 - \\nu \\frac{\\exp(i \\theta) - \\exp(-i \\theta)}{2} = 1 - i \\nu \\sin \\theta.\n$$\nHence,\n$$\n|G_{C}| = \\sqrt{1 + \\nu^{2} \\sin^{2}\\theta}.\n$$\n\nFor Algorithm U (forward time, upwind/backward space for $v>0$), the discrete scheme is\n$$\n\\frac{\\phi_{j}^{n+1} - \\phi_{j}^{n}}{\\Delta t} + v \\frac{\\phi_{j}^{n} - \\phi_{j-1}^{n}}{\\Delta x} = 0,\n$$\nwhich gives\n$$\n\\phi_{j}^{n+1} = \\phi_{j}^{n} - \\nu \\left(\\phi_{j}^{n} - \\phi_{j-1}^{n}\\right).\n$$\nSubstitute $\\phi_{j-1}^{n} = \\phi_{j}^{n} \\exp(-i \\theta)$ to obtain\n$$\nG_{U} = 1 - \\nu \\left(1 - \\exp(-i \\theta)\\right) = 1 - \\nu + \\nu \\exp(-i \\theta).\n$$\nThus,\n$$\n|G_{U}|^{2} = \\left[1 - \\nu \\left(1 - \\cos \\theta\\right)\\right]^{2} + \\left(\\nu \\sin \\theta\\right)^{2}.\n$$\n\nFor the specified mode, $\\lambda = 4 \\Delta x$ gives $k = \\frac{2 \\pi}{\\lambda} = \\frac{\\pi}{2 \\Delta x}$ and therefore $\\theta = k \\Delta x = \\frac{\\pi}{2}$. With $\\nu = 0.5$, we have $\\sin \\theta = 1$ and $\\cos \\theta = 0$. Therefore,\n$$\n|G_{C}| = \\sqrt{1 + \\nu^{2} \\sin^{2}\\theta} = \\sqrt{1 + \\left(\\frac{1}{2}\\right)^{2}} = \\sqrt{\\frac{5}{4}} = \\frac{\\sqrt{5}}{2},\n$$\n$$\n|G_{U}|^{2} = \\left[1 - \\nu (1 - \\cos \\theta)\\right]^{2} + (\\nu \\sin \\theta)^{2} = \\left(1 - \\frac{1}{2}\\right)^{2} + \\left(\\frac{1}{2}\\right)^{2} = \\frac{1}{2},\n$$\nso\n$$\n|G_{U}| = \\sqrt{\\frac{1}{2}} = \\frac{1}{\\sqrt{2}}.\n$$\nThe ratio is\n$$\n\\frac{|G_{C}|}{|G_{U}|} = \\frac{\\frac{\\sqrt{5}}{2}}{\\frac{1}{\\sqrt{2}}} = \\frac{\\sqrt{10}}{2} \\approx 1.58113883\\ldots\n$$\nRounded to three significant figures, the ratio is $1.58$.", "answer": "$$\\boxed{1.58}$$", "id": "2164718"}, {"introduction": "Our final practice ventures into the domain of advanced numerical methods designed for high-performance computing. Here, we tackle a Local Time-Stepping (LTS) algorithm on a non-uniform grid, a powerful technique for accelerating simulations where different parts of the domain require different resolutions. This challenging problem [@problem_id:2164711] requires you to go back to the foundational principle of the CFL condition—that the numerical domain of dependence must contain the physical domain of dependence—to derive a stability limit in a complex, multi-rate environment. Mastering this exercise demonstrates a deep and flexible understanding of numerical stability.", "problem": "A numerical simulation is being developed to solve the one-dimensional linear advection equation, $\\frac{\\partial u}{\\partial t} + v \\frac{\\partial u}{\\partial x} = 0$, for a constant positive wave speed $v > 0$. The simulation employs a finite volume method on a non-uniform grid. For $x < 0$, the grid consists of uniform cells of width $\\Delta x_{fine}$. For $x \\ge 0$, the grid consists of uniform cells of width $\\Delta x_{coarse}$. The grid refinement ratio is defined as $R = \\frac{\\Delta x_{coarse}}{\\Delta x_{fine}}$, where $R$ is an integer greater than 1.\n\nTo improve efficiency, a Local Time-Stepping (LTS) algorithm is implemented. In the fine grid region ($x<0$), a time step of $\\Delta t_{fine}$ is used. In the coarse grid region ($x \\ge 0$), a time step of $\\Delta t_{coarse}$ is used, where $\\Delta t_{coarse} = R \\cdot \\Delta t_{fine}$. This means for every single time step taken in the coarse region, $R$ time steps are taken in the fine region to ensure both regions advance by the same total time, $\\Delta t_{coarse}$.\n\nThe time steps are chosen to achieve a specific target Courant-Friedrichs-Lewy (CFL) number, $\\nu_{target}$, within each region, based on that region's local cell size and time step. The definitions are:\n$\\nu_{target} = \\frac{v \\Delta t_{fine}}{\\Delta x_{fine}}$ for the fine region, and $\\nu_{target} = \\frac{v \\Delta t_{coarse}}{\\Delta x_{coarse}}$ for the coarse region.\n\nThe numerical scheme uses a first-order upwind flux. When updating the first coarse cell (adjacent to the fine region) over its time step $\\Delta t_{coarse}$, the flux across the interface at $x=0$ is computed using the cell-averaged value from the last fine cell (adjacent to the interface) as it was at the beginning of the coarse time step.\n\nBy analyzing the physical and numerical domains of dependence at the interface between the fine and coarse grids, determine the maximum possible value of the target CFL number, $\\nu_{target}$, that guarantees the stability of this LTS scheme for all $R>1$. Express your answer as a function of $R$.", "solution": "We consider the 1D linear advection equation with constant speed $v>0$:\n$$\n\\frac{\\partial u}{\\partial t} + v \\frac{\\partial u}{\\partial x} = 0 .\n$$\nA first-order upwind finite-volume method is used on a two-rate, non-uniform grid with cell sizes $\\Delta x_{fine}$ for $x<0$ and $\\Delta x_{coarse}$ for $x\\ge 0$, with refinement ratio $R=\\frac{\\Delta x_{coarse}}{\\Delta x_{fine}}>1$. Local time stepping uses $\\Delta t_{fine}$ in the fine region and $\\Delta t_{coarse}=R\\,\\Delta t_{fine}$ in the coarse region. The target CFL satisfies\n$$\n\\nu_{target}=\\frac{v\\,\\Delta t_{fine}}{\\Delta x_{fine}}=\\frac{v\\,\\Delta t_{coarse}}{\\Delta x_{coarse}} .\n$$\n\nLet the interface be at $x=0$, with the last fine cell (index $-1$) to its left and the first coarse cell (index $0$) to its right. Because $v>0$, the upwind numerical flux at the interface depends on the left state. The LTS algorithm updates the coarse cell over $\\Delta t_{coarse}$ using a flux that is held fixed based on the value in the fine cell at the beginning of the coarse step, i.e., it uses $u_{-1}^{n}$ over the whole coarse step.\n\nOver the time interval $\\Delta t_{coarse}$, the physical domain of dependence (DOD) of the interface inflow is the set of points to the left that advect to the interface in time up to $\\Delta t_{coarse}$:\n$$\n\\mathcal{D}_{phys}=\\{x\\in(-\\infty,0): -v\\,\\Delta t_{coarse}\\le x<0\\}=[-v\\,\\Delta t_{coarse},\\,0) .\n$$\nFor the coarse update that uses a fixed left state $u_{-1}^{n}$ to be consistent and stable, the numerical DOD (which, due to the frozen flux, includes only the last fine cell’s initial value) must cover the physical DOD. Therefore we must require that the entire physical DOD stays inside the last fine cell adjacent to the interface during the whole coarse step, i.e.,\n$$\nv\\,\\Delta t_{coarse}\\le \\Delta x_{fine} .\n$$\nUsing $\\Delta t_{coarse}=R\\,\\Delta t_{fine}$ and the definition of $\\nu_{target}=\\frac{v\\,\\Delta t_{fine}}{\\Delta x_{fine}}$, we have\n$$\nv\\,\\Delta t_{coarse}=v\\,R\\,\\Delta t_{fine}=R\\,\\nu_{target}\\,\\Delta x_{fine} .\n$$\nThe condition $v\\,\\Delta t_{coarse}\\le \\Delta x_{fine}$ becomes\n$$\nR\\,\\nu_{target}\\,\\Delta x_{fine}\\le \\Delta x_{fine}\\quad\\Longrightarrow\\quad \\nu_{target}\\le \\frac{1}{R} .\n$$\n\nThis condition guarantees that, during the entire coarse step, characteristics reaching the interface originate from within the last fine cell only; thus the correct interface state is fully determined by $u_{-1}^{n}$, making the frozen-flux coarse update consistent with the physical DOD. It is also sufficient with a first-order upwind method because both regional CFL conditions $\\nu_{target}\\le 1$ are automatically satisfied when $\\nu_{target}\\le \\frac{1}{R}$ for $R>1$.\n\nTherefore, the maximum target CFL number that guarantees stability for all $R>1$ is\n$$\n\\nu_{target}^{max}(R)=\\frac{1}{R}.\n$$", "answer": "$$\\boxed{\\frac{1}{R}}$$", "id": "2164711"}]}