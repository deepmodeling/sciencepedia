{"hands_on_practices": [{"introduction": "Mastering LU decomposition begins with understanding the fundamental mechanics of the procedure. This first exercise provides a direct, hands-on opportunity to apply the Doolittle algorithm, where a matrix $A$ is factored into a unit lower triangular matrix $L$ and an upper triangular matrix $U$. By working through this standard $3 \\times 3$ example [@problem_id:2186375], you will build the foundational skills needed to systematically derive the elements of the $L$ and $U$ factors, reinforcing the core concepts of Gaussian elimination.", "problem": "In numerical linear algebra, the factorization of a matrix into a product of a lower triangular matrix and an upper triangular matrix is a fundamental operation. This factorization is known as LU decomposition and is used in various algorithms, such as solving systems of linear equations.\n\nConsider the matrix $A$ given by:\n$$\nA = \\begin{pmatrix} 3 & -1 & 2 \\\\ 6 & 1 & 9 \\\\ -9 & 5 & -5 \\end{pmatrix}\n$$\nThis matrix can be uniquely factorized into the product $A = LU$, where $L$ is a unit lower triangular matrix (i.e., with ones on the diagonal) and $U$ is an upper triangular matrix. The general forms for these $3 \\times 3$ matrices are:\n$$\nL = \\begin{pmatrix} 1 & 0 & 0 \\\\ l_{21} & 1 & 0 \\\\ l_{31} & l_{32} & 1 \\end{pmatrix}, \\quad U = \\begin{pmatrix} u_{11} & u_{12} & u_{13} \\\\ 0 & u_{22} & u_{23} \\\\ 0 & 0 & u_{33} \\end{pmatrix}\n$$\nDetermine the numerical values for the off-diagonal elements of matrix $L$ and all elements of matrix $U$ for the given matrix $A$. Express your final answer as a single row matrix containing these nine values in the specific order $(l_{21}, l_{31}, l_{32}, u_{11}, u_{12}, u_{13}, u_{22}, u_{23}, u_{33})$. Express all fractional values in their simplest form.", "solution": "We use the Doolittle LU factorization with $L$ unit lower triangular and $U$ upper triangular, satisfying $A=LU$. With\n$$\nL=\\begin{pmatrix}1&0&0\\\\ l_{21}&1&0\\\\ l_{31}&l_{32}&1\\end{pmatrix},\\quad\nU=\\begin{pmatrix}u_{11}&u_{12}&u_{13}\\\\ 0&u_{22}&u_{23}\\\\ 0&0&u_{33}\\end{pmatrix},\n$$\nthe product $LU$ gives, row by row:\n- Row 1: $[u_{11},u_{12},u_{13}]=[3,-1,2]$, hence $u_{11}=3$, $u_{12}=-1$, $u_{13}=2$.\n- Row 2, column 1: $l_{21}u_{11}=a_{21}=6$, so $l_{21}=\\frac{a_{21}}{u_{11}}=\\frac{6}{3}=2$.\n- Row 3, column 1: $l_{31}u_{11}=a_{31}=-9$, so $l_{31}=\\frac{a_{31}}{u_{11}}=\\frac{-9}{3}=-3$.\n- Row 2, column 2: $l_{21}u_{12}+u_{22}=a_{22}=1$, so $u_{22}=a_{22}-l_{21}u_{12}=1-2(-1)=3$.\n- Row 2, column 3: $l_{21}u_{13}+u_{23}=a_{23}=9$, so $u_{23}=a_{23}-l_{21}u_{13}=9-2\\cdot 2=5$.\n- Row 3, column 2: $l_{31}u_{12}+l_{32}u_{22}=a_{32}=5$, so $l_{32}=\\frac{a_{32}-l_{31}u_{12}}{u_{22}}=\\frac{5-(-3)(-1)}{3}=\\frac{5-3}{3}=\\frac{2}{3}$.\n- Row 3, column 3: $l_{31}u_{13}+l_{32}u_{23}+u_{33}=a_{33}=-5$, so\n$$\nu_{33}=a_{33}-l_{31}u_{13}-l_{32}u_{23}=-5-(-3\\cdot 2)-\\left(\\frac{2}{3}\\cdot 5\\right)=-5+6-\\frac{10}{3}=1-\\frac{10}{3}=-\\frac{7}{3}.\n$$\n\nTherefore, in the required order $(l_{21}, l_{31}, l_{32}, u_{11}, u_{12}, u_{13}, u_{22}, u_{23}, u_{33})$, the values are\n$$\n\\begin{pmatrix}\n2 & -3 & \\frac{2}{3} & 3 & -1 & 2 & 3 & 5 & -\\frac{7}{3}\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}2 & -3 & \\frac{2}{3} & 3 & -1 & 2 & 3 & 5 & -\\frac{7}{3}\\end{pmatrix}}$$", "id": "2186375"}, {"introduction": "While the basic LU decomposition algorithm works for many matrices, it can fail if a zero appears in a pivot position. This practice problem introduces the crucial concept of partial pivoting to ensure the robustness of the factorization [@problem_id:2186343]. By finding the permutation matrix $P$ such that $PA=LU$, you will learn how to handle these situations, a technique essential for creating stable and universally applicable numerical algorithms.", "problem": "Consider the matrix $A$ given by:\n$$A = \\begin{pmatrix} 0 & -3 \\\\ 2 & 6 \\end{pmatrix}$$\nOne of the fundamental matrix factorizations is the Lower-Upper (LU) decomposition with partial pivoting. This procedure finds a permutation matrix $P$, a unit lower triangular matrix $L$ (with ones on its diagonal), and an upper triangular matrix $U$ that satisfy the equation $PA = LU$.\n\nWhich of the following choices correctly provides the triplet of matrices $(P, L, U)$ for the given matrix $A$?\n\nA.\n$$P = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}, L = \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\end{pmatrix}, U = \\begin{pmatrix} 2 & 6 \\\\ 0 & -3 \\end{pmatrix}$$\n\nB.\n$$P = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, L = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}, U = \\begin{pmatrix} 2 & 6 \\\\ 0 & -3 \\end{pmatrix}$$\n\nC.\n$$P = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, L = \\begin{pmatrix} 1 & 0 \\\\ 3 & 1 \\end{pmatrix}, U = \\begin{pmatrix} 2 & 6 \\\\ 0 & -3 \\end{pmatrix}$$\n\nD.\n$$P = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, L = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}, U = \\begin{pmatrix} 2 & 6 \\\\ 0 & 3 \\end{pmatrix}$$", "solution": "We perform LU decomposition with partial pivoting on the matrix\n$$\nA=\\begin{pmatrix}0 & -3 \\\\ 2 & 6\\end{pmatrix}.\n$$\nPartial pivoting selects, in the first column, the row with the largest absolute value as the pivot. The entries are $|0|$ and $|2|$, so the pivot is in row $2$. Therefore, we swap rows $1$ and $2$ to form $PA$, with permutation matrix\n$$\nP=\\begin{pmatrix}0 & 1 \\\\ 1 & 0\\end{pmatrix}, \\quad PA = \\begin{pmatrix}2 & 6 \\\\ 0 & -3\\end{pmatrix}.\n$$\nNow factor $PA$ without further pivoting as $LU$, with $L$ unit lower triangular and $U$ upper triangular. For a $2\\times 2$ matrix, the multiplier is\n$$\n\\ell_{21}=\\frac{(PA)_{21}}{(PA)_{11}}=\\frac{0}{2}=0.\n$$\nThus\n$$\nL=\\begin{pmatrix}1 & 0 \\\\ 0 & 1\\end{pmatrix}, \\quad U=\\begin{pmatrix}2 & 6 \\\\ 0 & -3\\end{pmatrix}.\n$$\nThese satisfy $PA=LU$:\n$$\n\\begin{pmatrix}0 & 1 \\\\ 1 & 0\\end{pmatrix}\\begin{pmatrix}0 & -3 \\\\ 2 & 6\\end{pmatrix}\n=\\begin{pmatrix}2 & 6 \\\\ 0 & -3\\end{pmatrix}\n=\\begin{pmatrix}1 & 0 \\\\ 0 & 1\\end{pmatrix}\\begin{pmatrix}2 & 6 \\\\ 0 & -3\\end{pmatrix}.\n$$\nComparing with the choices, this corresponds to option B. Options A and C do not satisfy $PA=LU$ for their listed $P$, $L$, $U$, and option D has an incorrect sign in the $(2,2)$ entry of $U$.", "answer": "$$\\boxed{B}$$", "id": "2186343"}, {"introduction": "The primary motivation for computing an LU decomposition is to efficiently solve systems of linear equations of the form $Ax=b$. By factoring $A$ into $LU$, the problem is transformed into solving two simpler triangular systems: $Ly=b$ followed by $Ux=y$. This exercise [@problem_id:2186371] challenges you to think algorithmically about the first of these steps, forward substitution, which is used to solve for the intermediate vector $y$. Understanding this computational procedure is key to appreciating the practical power of LU decomposition.", "problem": "In numerical linear algebra, the Lower-Upper (LU) decomposition is a common method for solving systems of linear equations. A square matrix $A$ is factorized into the product of a lower triangular matrix $L$ and an upper triangular matrix $U$, such that $A=LU$. To solve the system $Ax=b$, one first solves $Ly=b$ for an intermediate vector $y$ (this process is called forward substitution), and then solves $Ux=y$ for the final solution $x$ (backward substitution).\n\nConsider the forward substitution step for solving the system $Ly = b$. You are given a non-singular $n \\times n$ lower triangular matrix $L$ and an $n \\times 1$ column vector $b$. The goal is to compute the unknown $n \\times 1$ column vector $y$. The components of the matrices and vectors are denoted using 1-based indexing, i.e., $L_{ij}$, $b_i$, and $y_i$, where the indices $i$ and $j$ run from 1 to $n$.\n\nBelow are four different pseudocode segments proposed to compute the vector $y$. Which of the following options correctly implements the forward substitution algorithm?\n\nA.\n```\nfor i from 1 to n:\n  y[i] = b[i] / L[i,i]\n  for j from 1 to i-1:\n    y[i] = y[i] - L[i,j] * y[j]\n```\n\nB.\n```\nfor i from n down to 1:\n  sum = 0\n  for j from i+1 to n:\n    sum = sum + L[i,j] * y[j]\n  y[i] = (b[i] - sum) / L[i,i]\n```\n\nC.\n```\nfor i from 1 to n:\n  sum = b[i]\n  for j from 1 to i-1:\n    sum = sum - L[i,j] * y[j]\n  y[i] = sum / L[i,i]\n```\n\nD.\n```\nfor i from 1 to n:\n  sum = b[i]\n  for j from 1 to i-1:\n    sum = sum - L[i,j] * b[j]\n  y[i] = sum / L[i,i]\n```", "solution": "We seek to solve the lower triangular system $Ly=b$ with $L$ nonsingular. Because $L$ is lower triangular, for each row index $i$ the nonzero entries satisfy $L_{ij}=0$ for $j>i$. The $i$-th equation of $Ly=b$ is therefore\n$$\n\\sum_{j=1}^{i} L_{ij} y_{j} = b_{i}.\n$$\nThis can be written as\n$$\nL_{ii} y_{i} + \\sum_{j=1}^{i-1} L_{ij} y_{j} = b_{i}.\n$$\nSince $L_{ii} \\neq 0$ (nonsingularity), we solve for $y_{i}$:\n$$\ny_{i} = \\frac{b_{i} - \\sum_{j=1}^{i-1} L_{ij} y_{j}}{L_{ii}}.\n$$\nThis recurrence shows that $y_{i}$ depends only on previously computed $y_{j}$ with $j<i$, so we must iterate $i$ from $1$ to $n$ and, at each step, accumulate the sum $\\sum_{j=1}^{i-1} L_{ij} y_{j}$ using the already available $y_{j}$.\n\nNow compare with the given pseudocode options:\n\n- Option C implements exactly the formula above by initializing $\\text{sum} = b[i]$, subtracting $L[i,j] y[j]$ for $j=1$ to $i-1$, and then dividing by $L[i,i]$:\n$$\n\\text{for } i=1 \\text{ to } n:\\quad \\text{sum} = b[i];\\ \\text{for } j=1 \\text{ to } i-1:\\ \\text{sum} = \\text{sum} - L[i,j]\\, y[j];\\ y[i] = \\frac{\\text{sum}}{L[i,i]}.\n$$\nThis matches the derived recurrence.\n\n- Option A computes $y[i] = b[i]/L[i,i]$ first and then subtracts $\\sum_{j=1}^{i-1} L[i,j] y[j]$ without dividing that subtraction by $L[i,i]$, yielding $y_{i} = \\frac{b_{i}}{L_{ii}} - \\sum_{j=1}^{i-1} L_{ij} y_{j}$, which is not equal to $\\frac{b_{i} - \\sum_{j=1}^{i-1} L_{ij} y_{j}}{L_{ii}}$ in general.\n\n- Option B loops $i$ from $n$ down to $1$ and sums over $j=i+1$ to $n$. For a lower triangular $L$, $L_{ij}=0$ for $j>i$, so the inner sum vanishes and it reduces to $y_{i} = b_{i}/L_{ii}$, which ignores the necessary subtraction involving $L_{ij} y_{j}$ for $j<i$; this is the wrong traversal pattern (it corresponds to backward substitution suitable for upper triangular matrices, not lower).\n\n- Option D incorrectly uses $b[j]$ instead of $y[j]$ in the sum, violating the recurrence that must use the previously computed $y_{j}$ values.\n\nTherefore, the only correct implementation is Option C.", "answer": "$$\\boxed{C}$$", "id": "2186371"}]}