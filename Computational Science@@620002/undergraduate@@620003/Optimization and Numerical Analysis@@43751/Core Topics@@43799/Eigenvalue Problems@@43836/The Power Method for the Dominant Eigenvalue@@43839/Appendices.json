{"hands_on_practices": [{"introduction": "The best way to understand an iterative algorithm is to perform the steps by hand. This first practice exercise [@problem_id:2218718] grounds you in the fundamental mechanics of the power method. By manually calculating the first two iterations for a simple matrix, you will gain a concrete feel for how the vector iterates and the eigenvalue estimate evolve, using a simplified ecological model as a tangible backdrop.", "problem": "A simplified ecological model describes the population dynamics of two interacting species. The state of the system, representing the populations of the two species at year $k$, is given by a vector $P_k = \\begin{pmatrix} p_{1,k} \\\\ p_{2,k} \\end{pmatrix}$. The population vector in the subsequent year, $P_{k+1}$, is determined by a linear transformation of the current year's vector, according to the equation $P_{k+1} = M P_k$. The matrix $M$ for this system is given by:\n$$\nM = \\begin{pmatrix} 3  2 \\\\ 1  4 \\end{pmatrix}\n$$\nThe long-term growth rate of the entire system is governed by the dominant eigenvalue of the matrix $M$. To estimate this value, one can use the power method.\n\nThe power method procedure is as follows:\n1. Start with an initial non-zero vector, $x_0$.\n2. For each step $k=1, 2, 3, \\dots$:\n   a. Compute the next vector in the sequence: $y_k = M x_{k-1}$.\n   b. The estimate for the dominant eigenvalue at this step, denoted $\\lambda^{(k)}$, is the component of $y_k$ that has the largest absolute value.\n   c. The normalized vector for the next iteration is calculated as $x_k = \\frac{y_k}{\\lambda^{(k)}}$.\n\nGiven an initial normalized population vector $x_0 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$, perform two full iterations of the power method to find the second estimate of the dominant eigenvalue, $\\lambda^{(2)}$.\n\nExpress your answer for $\\lambda^{(2)}$ as an exact fraction.", "solution": "We apply the given power method to the matrix \n$$\nM=\\begin{pmatrix}32\\\\14\\end{pmatrix}\n$$\nstarting from the initial vector \n$$\nx_{0}=\\begin{pmatrix}1\\\\0\\end{pmatrix}.\n$$\n\nFirst iteration:\nCompute \n$$\ny_{1}=Mx_{0}=\\begin{pmatrix}32\\\\14\\end{pmatrix}\\begin{pmatrix}1\\\\0\\end{pmatrix}=\\begin{pmatrix}3\\\\1\\end{pmatrix}.\n$$\nThe largest absolute component of $y_{1}$ is $3$, hence \n$$\n\\lambda^{(1)}=3,\\quad x_{1}=\\frac{y_{1}}{\\lambda^{(1)}}=\\frac{1}{3}\\begin{pmatrix}3\\\\1\\end{pmatrix}=\\begin{pmatrix}1\\\\ \\frac{1}{3}\\end{pmatrix}.\n$$\n\nSecond iteration:\nCompute \n$$\ny_{2}=Mx_{1}=\\begin{pmatrix}32\\\\14\\end{pmatrix}\\begin{pmatrix}1\\\\ \\frac{1}{3}\\end{pmatrix}=\\begin{pmatrix}3+\\frac{2}{3}\\\\1+\\frac{4}{3}\\end{pmatrix}=\\begin{pmatrix}\\frac{11}{3}\\\\ \\frac{7}{3}\\end{pmatrix}.\n$$\nThe largest absolute component of $y_{2}$ is $\\frac{11}{3}$, so the second estimate of the dominant eigenvalue is\n$$\n\\lambda^{(2)}=\\frac{11}{3}.\n$$\nThis aligns with convergence toward the true dominant eigenvalue.", "answer": "$$\\boxed{\\frac{11}{3}}$$", "id": "2218718"}, {"introduction": "Once you are comfortable with the manual calculations, the next step is to generalize the process into a computer-ready algorithm. This practice [@problem_id:2218728] challenges you to think programmatically by identifying the correct pseudocode for the power method. Properly structuring the loop, handling the vector-matrix multiplication, and implementing the normalization step are crucial for turning a mathematical concept into a functional numerical tool.", "problem": "The power method is an iterative algorithm used to find the dominant eigenvalue and a corresponding eigenvector of a matrix. Consider an $n \\times n$ matrix $A$ with a unique dominant eigenvalue $\\lambda_1$ (i.e., $|\\lambda_1|  |\\lambda_i|$ for all other eigenvalues $\\lambda_i$). The method starts with a non-zero initial vector $x_0$ and generates a sequence of vectors via the recurrence relation $x_{k+1} = A x_k$. To prevent the magnitude of the vector's components from growing or shrinking uncontrollably, the vector is normalized at each step.\n\nYour task is to identify the correct pseudocode for the power method. The algorithm must use the $L_{\\infty}$ norm for normalization. Specifically, at each iteration $k$, the new vector $x_k$ is computed by first calculating $y_k = A x_{k-1}$, and then normalizing $y_k$. The normalization is achieved by dividing $y_k$ by its component with the largest absolute value. This component also serves as the estimate for the dominant eigenvalue at that iteration.\n\nThe inputs to the function are the matrix $A$, an initial vector `x`, a convergence tolerance `ε`, and a maximum number of iterations `N`. The function should return a pair `(λ, x)`, where `λ` is the final estimate of the dominant eigenvalue and `x` is the corresponding eigenvector normalized with the $L_{\\infty}$ norm.\n\nWhich of the following pseudocode blocks correctly implements the power method as described?\n\n**A.**\n```\nfunction PowerMethod(A, x, ε, N)\n  λ_current = 0\n  for k from 1 to N:\n    y = A * x\n    λ_prev = λ_current\n    λ_current = component of y with maximum absolute value\n    x = y / λ_current\n    if |λ_current - λ_prev|  ε:\n      return (λ_current, x)\n  return (λ_current, x)\n```\n\n**B.**\n```\nfunction PowerMethod(A, x, ε, N)\n  λ_current = 0\n  for k from 1 to N:\n    y = A * x\n    λ_prev = λ_current\n    λ_current = component of y with maximum absolute value\n    x = y  // Error here\n    if |λ_current - λ_prev|  ε:\n      return (λ_current, x)\n  return (λ_current, x)\n```\n\n**C.**\n```\nfunction PowerMethod(A, x, ε, N)\n  λ_current = 0\n  for k from 1 to N:\n    y = A * x\n    λ_prev = λ_current\n    norm_val = sqrt(sum of y_i^2 for all i)\n    x = y / norm_val\n    λ_current = component of y with maximum absolute value\n    if |λ_current - λ_prev|  ε:\n      return (λ_current, x)\n  return (λ_current, x)\n```\n\n**D.**\n```\nfunction PowerMethod(A, x, ε, N)\n  λ_current = 0\n  for k from 1 to N:\n    y = A * x\n    λ_prev = λ_current\n    norm_factor = component of y with maximum absolute value\n    λ_current = (x^T * y) / (x^T * x)  // Rayleigh quotient\n    x = y / norm_factor\n    if |λ_current - λ_prev|  ε:\n      return (λ_current, x)\n  return (λ_current, x)\n```", "solution": "We are to select the pseudocode that matches the power method using the $L_{\\infty}$ norm, where at each iteration we compute $y_{k}=A x_{k-1}$, identify the component of $y_{k}$ with largest absolute value, use that component as the eigenvalue estimate $\\lambda_{k}$, and normalize by dividing $y_{k}$ by that same component so that the resulting $x_{k}$ has $L_{\\infty}$ norm equal to $1$ (up to sign).\n\nThe $L_{\\infty}$ norm is defined by $\\|y\\|_{\\infty}=\\max_{1 \\leq i \\leq n} |y_{i}|$. If $j$ is an index such that $|y_{j}|=\\|y\\|_{\\infty}$, then the method described requires\n$$\n\\lambda_{k} = y_{j}, \\quad x_{k} = \\frac{y_{k}}{\\lambda_{k}}.\n$$\nA typical convergence check consistent with the statement is to stop when $|\\lambda_{k}-\\lambda_{k-1}|\\varepsilon$ or when $k$ reaches $N$.\n\nNow evaluate the options:\n\nOption A:\n- Computes $y=A x$, sets $\\lambda_{\\text{current}}$ to the component of $y$ with maximum absolute value, and normalizes via $x=y/\\lambda_{\\text{current}}$. This matches the requirement: the normalization factor is the component with largest absolute value, and that same component serves as the current eigenvalue estimate. The convergence check $|\\lambda_{\\text{current}}-\\lambda_{\\text{prev}}|\\varepsilon$ is consistent with the specification. Therefore A is correct.\n\nOption B:\n- Computes $y=A x$, sets $\\lambda_{\\text{current}}$ correctly, but then sets $x=y$ (no normalization). This violates the stated normalization by the $L_{\\infty}$ norm. Therefore B is incorrect.\n\nOption C:\n- Computes $y=A x$, then normalizes with the $L_{2}$ norm via $\\sqrt{\\sum_{i} y_{i}^{2}}$. This directly contradicts the requirement to use the $L_{\\infty}$ norm and to normalize by the component with largest absolute value. Therefore C is incorrect.\n\nOption D:\n- Computes $y=A x$, finds the max-absolute component to use as a normalization factor for $x=y/\\text{norm\\_factor}$, which matches the $L_{\\infty}$ normalization step, but then sets $\\lambda_{\\text{current}}$ to the Rayleigh quotient $(x^{T} y)/(x^{T} x)$. This contradicts the specification that the component with largest absolute value “also serves as the estimate for the dominant eigenvalue.” Therefore D is incorrect.\n\nHence, only Option A correctly implements the power method as described.", "answer": "$$\\boxed{A}$$", "id": "2218728"}, {"introduction": "The power method's convergence relies on a key assumption: the initial vector must have a non-zero component along the dominant eigenvector. This final practice [@problem_id:2218731] presents a fascinating thought experiment that contrasts theory with reality. You will analyze what happens in a perfect, infinite-precision world versus a realistic, finite-precision environment, revealing how tiny numerical errors can surprisingly save the algorithm from theoretical failure.", "problem": "The Power Method is an iterative algorithm used to find the eigenvalue of a matrix with the largest absolute value, known as the dominant eigenvalue. The standard (un-normalized) iteration is defined by $v_{k+1} = A v_k$, starting from an initial vector $v_0$. The corresponding estimate for the dominant eigenvalue at step $k$, denoted as the Rayleigh quotient, is given by $R(A, v_k) = \\frac{v_k^T A v_k}{v_k^T v_k}$. The method is said to converge to an eigenvalue $\\lambda$ if $\\lim_{k \\to \\infty} R(A, v_k) = \\lambda$.\n\nConsider the real symmetric matrix $A$ given by:\n$$\nA = \\begin{pmatrix} 7.5  2.5  0 \\\\ 2.5  7.5  0 \\\\ 0  0  1 \\end{pmatrix}\n$$\nIt is known that the eigenvalues of this matrix are $\\lambda_1 = 10$, $\\lambda_2 = 5$, and $\\lambda_3 = 1$. The corresponding un-normalized eigenvectors are $u_1 = \\begin{pmatrix} 1 \\\\ 1 \\\\ 0 \\end{pmatrix}$, $u_2 = \\begin{pmatrix} 1 \\\\ -1 \\\\ 0 \\end{pmatrix}$, and $u_3 = \\begin{pmatrix} 0 \\\\ 0 \\\\ 1 \\end{pmatrix}$.\n\nYou are to analyze the behavior of the Power Method under two different scenarios for the initial vector.\n\n1.  **Ideal Scenario**: Suppose the Power Method is applied to matrix $A$ starting with the initial vector $v_0 = \\begin{pmatrix} 1 \\\\ -1 \\\\ 1 \\end{pmatrix}$. Assuming all calculations are performed with perfect, infinite precision, determine the value to which the Rayleigh quotient will converge. Let this limiting value be $\\lambda_I$.\n\n2.  **Realistic Scenario**: In practice, computers use finite precision arithmetic, which introduces small round-off errors. We can model this by considering an initial vector that is slightly perturbed from the one in the ideal scenario. Let the new initial vector be $v'_0 = v_0 + \\epsilon u_1 = \\begin{pmatrix} 1 \\\\ -1 \\\\ 1 \\end{pmatrix} + \\epsilon \\begin{pmatrix} 1 \\\\ 1 \\\\ 0 \\end{pmatrix}$, where $\\epsilon$ is a very small, non-zero constant (e.g., $\\epsilon \\approx 10^{-16}$). Determine the value to which the Rayleigh quotient will converge for this perturbed initial vector, assuming the iteration runs for a sufficiently large number of steps. Let this limiting value be $\\lambda_{II}$.\n\nDetermine the ordered pair $(\\lambda_I, \\lambda_{II})$.", "solution": "Because $A$ is real symmetric, the given eigenvectors $u_{1},u_{2},u_{3}$ corresponding to the distinct eigenvalues $10,5,1$ are mutually orthogonal, and satisfy $A u_{i}=\\lambda_{i} u_{i}$. Let $c_{i}=u_{i}^{T}u_{i}$ for $i\\in\\{1,2,3\\}$.\n\nFor any initial vector $v_{0}$, the un-normalized power iteration produces\n$$\nv_{k}=A^{k}v_{0}=\\sum_{i=1}^{3}\\alpha_{i}\\lambda_{i}^{k}u_{i},\n$$\nwhere $v_{0}=\\sum_{i=1}^{3}\\alpha_{i}u_{i}$. The Rayleigh quotient is\n$$\nR(A,v_{k})=\\frac{v_{k}^{T}A v_{k}}{v_{k}^{T}v_{k}}.\n$$\nUsing orthogonality and symmetry,\n$$\nv_{k}^{T}A v_{k}=\\sum_{i=1}^{3}\\alpha_{i}^{2}\\lambda_{i}^{2k}\\,u_{i}^{T}A u_{i}\n=\\sum_{i=1}^{3}\\alpha_{i}^{2}\\lambda_{i}^{2k}\\lambda_{i}\\,c_{i}\n=\\sum_{i=1}^{3}\\alpha_{i}^{2}\\lambda_{i}^{2k+1}c_{i},\n$$\nand\n$$\nv_{k}^{T}v_{k}=\\sum_{i=1}^{3}\\alpha_{i}^{2}\\lambda_{i}^{2k}c_{i}.\n$$\n\nIdeal scenario: $v_{0}=u_{2}+u_{3}$, so $\\alpha_{2}=1$, $\\alpha_{3}=1$, $\\alpha_{1}=0$. Then\n$$\nv_{k}=5^{k}u_{2}+1^{k}u_{3},\n$$\nand\n$$\nR(A,v_{k})=\\frac{5^{2k+1}c_{2}+1\\cdot c_{3}}{5^{2k}c_{2}+c_{3}}\n=\\frac{5+\\dfrac{c_{3}}{5^{2k}c_{2}}}{1+\\dfrac{c_{3}}{5^{2k}c_{2}}}\\to 5 \\quad\\text{as }k\\to\\infty.\n$$\nThus $\\lambda_{I}=5$.\n\nRealistic scenario: $v_{0}'=v_{0}+\\epsilon u_{1}=u_{2}+u_{3}+\\epsilon u_{1}$ with $0\\neq\\epsilon$ very small. Then\n$$\nv_{k}'=5^{k}u_{2}+1^{k}u_{3}+\\epsilon 10^{k}u_{1},\n$$\nand\n$$\nR(A,v_{k}')=\\frac{\\epsilon^{2}10^{2k+1}c_{1}+5^{2k+1}c_{2}+1\\cdot c_{3}}{\\epsilon^{2}10^{2k}c_{1}+5^{2k}c_{2}+c_{3}}.\n$$\nDividing numerator and denominator by $\\epsilon^{2}10^{2k}c_{1}$ gives\n$$\nR(A,v_{k}')=\\frac{10+\\dfrac{5^{2k+1}c_{2}}{\\epsilon^{2}10^{2k}c_{1}}+\\dfrac{c_{3}}{\\epsilon^{2}10^{2k}c_{1}}}{1+\\dfrac{5^{2k}c_{2}}{\\epsilon^{2}10^{2k}c_{1}}+\\dfrac{c_{3}}{\\epsilon^{2}10^{2k}c_{1}}}\\to 10 \\quad\\text{as }k\\to\\infty,\n$$\nsince $\\left(\\dfrac{5}{10}\\right)^{2k}\\to 0$. Thus $\\lambda_{II}=10$.\n\nTherefore, $(\\lambda_{I},\\lambda_{II})=(5,10)$.", "answer": "$$\\boxed{(5, 10)}$$", "id": "2218731"}]}