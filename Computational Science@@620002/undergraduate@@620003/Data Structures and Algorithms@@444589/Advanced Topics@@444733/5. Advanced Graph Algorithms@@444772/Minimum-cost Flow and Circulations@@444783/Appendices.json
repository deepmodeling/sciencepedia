{"hands_on_practices": [{"introduction": "In network flow problems with integer capacities and demands, one might intuitively expect optimal flows to also be integer-valued. This exercise challenges that intuition by exploring how the mathematical form of the cost function is a decisive factor. By comparing linear, convex, and concave costs in a simple parallel-arc network, you will discover the conditions that can force an optimal flow to be split across multiple paths, resulting in a fractional solution [@problem_id:3253559].", "problem": "Consider the minimum-cost flow problem on a directed graph $G=(V,E)$ with a single source $s \\in V$ and a single sink $t \\in V$. A feasible $s$-$t$ flow assigns to each arc $e \\in E$ a nonnegative value $f_e$ not exceeding its capacity $u_e$, satisfies flow conservation at every node $v \\in V \\setminus \\{s,t\\}$, and ships a prescribed total flow value $F$ from $s$ to $t$. The cost is separable across arcs: each arc $e$ has a cost function $c_e(f_e)$, and the total cost is $\\sum_{e \\in E} c_e(f_e)$. In the standard linear model, $c_e(f_e) = a_e f_e$ for some nonnegative $a_e$, and the node-arc incidence matrix of $G$ is totally unimodular, implying that with integer capacities and integer supplies/demands there exists an optimal flow in which all $f_e$ are integers. In contrast, with strictly convex separable costs $c_e(\\cdot)$, the optimal flow may favor splitting across parallel arcs.\n\nYour task is to determine which of the following network designs guarantees that every optimal minimum-cost flow must be fractional on at least one arc, despite all capacities $u_e$ and the required total flow $F$ being integers.\n\nAll options use the same base graph: two parallel arcs $e_1$ and $e_2$ from $s$ to $t$, each with capacity $u_{e_1}=u_{e_2}=1$, and required total $s$-$t$ flow $F=1$. Let $x_1 := f_{e_1}$ and $x_2 := f_{e_2}$.\n\nA. Linear equal unit costs: $c_{e_1}(x_1) = x_1$ and $c_{e_2}(x_2) = x_2$.\n\nB. Strictly convex equal costs: $c_{e_1}(x_1) = x_1^2$ and $c_{e_2}(x_2) = x_2^2$.\n\nC. Linear unequal unit costs: $c_{e_1}(x_1) = 0 \\cdot x_1$ and $c_{e_2}(x_2) = 2 x_2$.\n\nD. Concave equal costs: $c_{e_1}(x_1) = \\sqrt{x_1}$ and $c_{e_2}(x_2) = \\sqrt{x_2}$.\n\nWhich option(s) yield a network in which every optimal solution necessarily uses fractional flow on at least one arc, i.e., at least one of $x_1$ or $x_2$ is not an integer?", "solution": "The problem is to minimize the total cost $C(x_1, x_2) = c_{e_1}(x_1) + c_{e_2}(x_2)$ subject to the constraints $x_1 + x_2 = 1$, $0 \\le x_1 \\le 1$, and $0 \\le x_2 \\le 1$. An integer solution must be either $(1, 0)$ or $(0, 1)$. We are looking for the case where the optimal solution is uniquely fractional. We can simplify the problem by substituting $x_2 = 1 - x_1$ into the cost function, turning it into a single-variable optimization problem: minimize $C(x_1) = c_{e_1}(x_1) + c_{e_2}(1-x_1)$ for $x_1 \\in [0, 1]$.\n\n**A. Linear equal unit costs:** $C(x_1) = x_1 + (1-x_1) = 1$. The cost is constant for any feasible flow. Thus, every feasible flow, including the integer solutions $(1, 0)$ and $(0, 1)$, is optimal. This does not guarantee a fractional solution.\n\n**B. Strictly convex equal costs:** $C(x_1) = x_1^2 + (1-x_1)^2 = 2x_1^2 - 2x_1 + 1$. This is a strictly convex function (a parabola opening upwards). Its minimum can be found by setting its derivative to zero: $C'(x_1) = 4x_1 - 2 = 0$, which yields $x_1 = 1/2$. Since $x_1=1/2$ is in the interval $[0,1]$, this is the unique global minimum. The optimal flow is $(x_1, x_2) = (1/2, 1/2)$, which is fractional. Because the optimal solution is unique and fractional, this option guarantees that every optimal flow is fractional.\n\n**C. Linear unequal unit costs:** $C(x_1) = 0 \\cdot x_1 + 2(1-x_1) = 2 - 2x_1$. This is a linear function with a negative slope. To minimize it over the interval $[0, 1]$, we must choose the largest possible value for $x_1$, which is $x_1=1$. The unique optimal solution is $(1, 0)$, which is an integer solution.\n\n**D. Concave equal costs:** $C(x_1) = \\sqrt{x_1} + \\sqrt{1-x_1}$. The function is strictly concave on $(0, 1)$ because its second derivative is negative. A strictly concave function on a closed interval achieves its minimum at the endpoints of the interval. The endpoints are $x_1=0$ and $x_1=1$, corresponding to the integer solutions $(0, 1)$ and $(1, 0)$. Both yield the same minimum cost of 1, so integer optimal solutions exist.\n\nTherefore, only the strictly convex cost function guarantees a fractional optimal solution.", "answer": "$$\\boxed{B}$$", "id": "3253559"}, {"introduction": "At the heart of many network flow algorithms lies the concept of iterative improvement via augmenting paths in a residual network. This practice provides a concrete calculation where you start with a given feasible flow and must find the most cost-effective way to increase its value. Through this exercise, you will discover that augmenting the flow can sometimes involve rerouting parts of the initial flow, leading to the counter-intuitive result of a negative additional cost for a positive increase in flow value [@problem_id:3253528].", "problem": "Consider a directed network $G=(V,E)$ with vertex set $V=\\{s,a,b,t\\}$ and directed edges $(u,v)\\in E$ each having a nonnegative integral capacity and a real per-unit cost. The total cost of a flow is the sum, over all directed edges $(u,v)\\in E$, of the product of the amount of flow on $(u,v)$ and its per-unit cost. The network is given by the following edge specifications:\n- $(s,a)$ has capacity $1$ and per-unit cost $1$.\n- $(s,b)$ has capacity $1$ and per-unit cost $1$.\n- $(a,b)$ has capacity $1$ and per-unit cost $3$.\n- $(a,t)$ has capacity $1$ and per-unit cost $0$.\n- $(b,t)$ has capacity $1$ and per-unit cost $0$.\n\nYou are given a feasible $s$–$t$ flow $f$ of value $1$ defined by the nonzero edge flows:\n- $f(s,a)=1$,\n- $f(a,b)=1$,\n- $f(b,t)=1$,\nand $f(u,v)=0$ on all other edges.\n\nDetermine the minimum additional cost required to increase the total $s$–$t$ flow value by exactly $1$ unit starting from the given flow $f$. Express your answer as a real number. No rounding is required.", "solution": "The problem asks for the minimum additional cost to increase the total flow value by 1 unit from a given initial flow $f$. This is a classic application of the successive shortest path algorithm, where the marginal cost of increasing the flow is given by the cost of the shortest path in the residual graph.\n\n1.  **Initial State**: The initial flow $f$ sends 1 unit along the path $s \\to a \\to b \\to t$. The nonzero flows are $f(s,a)=1$, $f(a,b)=1$, and $f(b,t)=1$.\n\n2.  **Construct the Residual Graph $G_f$**: For an edge $(u,v)$ with capacity $k$, cost $c$, and flow $x$, the residual graph contains:\n    *   A forward residual edge $(u,v)$ with residual capacity $k-x$ and cost $c$.\n    *   A backward residual edge $(v,u)$ with residual capacity $x$ and cost $-c$.\n\n    Applying this to our network:\n    *   Edge $(s,a)$: $k=1, c=1, x=1$. It's saturated. This gives a backward edge $(a,s)$ with residual capacity 1 and cost $-1$.\n    *   Edge $(s,b)$: $k=1, c=1, x=0$. It's empty. This gives a forward edge $(s,b)$ with residual capacity 1 and cost $1$.\n    *   Edge $(a,b)$: $k=1, c=3, x=1$. It's saturated. This gives a backward edge $(b,a)$ with residual capacity 1 and cost $-3$.\n    *   Edge $(a,t)$: $k=1, c=0, x=0$. It's empty. This gives a forward edge $(a,t)$ with residual capacity 1 and cost $0$.\n    *   Edge $(b,t)$: $k=1, c=0, x=1$. It's saturated. This gives a backward edge $(t,b)$ with residual capacity 1 and cost $0$.\n\n3.  **Find the Shortest Path in $G_f$**: We need to find the shortest path from $s$ to $t$ in this residual graph. By inspection, we can find an augmenting path: $s \\to b \\to a \\to t$. This path is composed of:\n    *   The forward residual edge $(s,b)$ with cost $1$.\n    *   The backward residual edge $(b,a)$ with cost $-3$.\n    *   The forward residual edge $(a,t)$ with cost $0$.\n\n    The total cost of this path is $1 + (-3) + 0 = -2$. The bottleneck capacity of this path is $\\min(\\text{res-cap}(s,b), \\text{res-cap}(b,a), \\text{res-cap}(a,t)) = \\min(1, 1, 1) = 1$.\n\n4.  **Conclusion**: The shortest augmenting path has a cost of $-2$. This is the minimum marginal cost to send one additional unit of flow from $s$ to $t$. Since the problem asks for the cost to increase the total flow by exactly 1 unit, and our cheapest path has a capacity of 1, the minimum additional cost is indeed $-2$. Sending flow along this path involves increasing flow on $(s,b)$ and $(a,t)$ while decreasing flow on $(a,b)$, effectively re-routing the expensive part of the original flow.", "answer": "$$\n\\boxed{-2}\n$$", "id": "3253528"}, {"introduction": "A key theorem in network flows states that a flow is of minimum cost if and only if its residual network contains no negative-cost cycles. This exercise allows you to directly apply this powerful optimality condition. Starting from an optimal flow, a change in an edge cost introduces a perturbation; your task is to identify the resulting negative-cost cycle and calculate the cost savings from augmenting flow along it, demonstrating the principle behind cycle-canceling algorithms [@problem_id:3253618].", "problem": "Consider a minimum-cost flow instance on a directed network in an optimal feasible state. Let the corresponding residual network (Residual Network (RN)) have node set $\\{A,B,C,D\\}$ and the following directed residual edges, each annotated with residual capacity and cost as $(\\text{residual capacity}, \\text{cost})$:\n- $(A,B)$ with $(3, 4)$,\n- $(B,C)$ with $(2, 1)$,\n- $(C,A)$ with $(1, 2)$,\n- $(B,D)$ with $(2, 1)$,\n- $(D,A)$ with $(2, 5)$.\n\nAssume there are no other residual edges, and there is no negative-cost directed cycle in this residual network. Costs on residual forward edges equal the corresponding original edge costs, and costs on residual backward edges (none are listed here) would equal the negative of the corresponding original edge costs. You are told that the current feasible flow is optimal.\n\nNow reduce the original cost of the single edge $(A,B)$ by a nonnegative amount $\\Delta$, where $\\Delta = 9$. After this change, the system is allowed to re-optimize to a new minimum-cost feasible flow.\n\nUsing only fundamental definitions of minimum-cost flow optimality via the absence of negative-cost cycles in the residual network and the effect of augmenting along negative-cost cycles, determine the exact maximum possible decrease in the optimal total cost that can result from the reduction of the cost of $(A,B)$ by $\\Delta$. Provide your answer as a single real number. No rounding is required.", "solution": "The solution involves applying the optimality condition for minimum-cost flows, which states that a flow is optimal if and only if its residual network contains no negative-cost cycles. A change in edge costs can introduce such cycles, signaling an opportunity to reduce the total cost.\n\n1.  **Analyze the Initial State**: The problem begins with an optimal flow, and the corresponding residual network (RN) is given. The costs of the cycles in the initial RN are positive, consistent with optimality:\n    *   Cycle $A \\to B \\to C \\to A$: Cost = $4 + 1 + 2 = 7$.\n    *   Cycle $A \\to B \\to D \\to A$: Cost = $4 + 1 + 5 = 10$.\n    The cost of the residual edge $(A,B)$ is 4. This implies the cost of the original edge $(A,B)$ is $c(A,B) = 4$.\n\n2.  **Apply the Cost Change**: The cost of the original edge $(A,B)$ is reduced by $\\Delta = 9$. The new cost is $c'(A,B) = c(A,B) - \\Delta = 4 - 9 = -5$. This change directly affects the cost of the corresponding residual edge $(A,B)$, which also becomes $-5$.\n\n3.  **Find the Negative-Cost Cycle**: We re-evaluate the cycles in the RN with the new cost for edge $(A,B)$:\n    *   Cycle $A \\to B \\to C \\to A$: New cost = $c'(A,B) + c(B,C) + c(C,A) = -5 + 1 + 2 = -2$.\n    This cycle now has a negative cost, violating the optimality condition.\n\n4.  **Calculate the Cost Reduction**: The cycle-canceling algorithm restores optimality by pushing flow along negative-cost cycles. The total cost reduction is the product of the amount of flow pushed and the magnitude of the cycle's negative cost.\n    *   **Flow amount (bottleneck capacity)**: The maximum flow that can be pushed around the cycle $A \\to B \\to C \\to A$ is limited by the minimum residual capacity of its edges:\n        $$k = \\min(\\text{res-cap}(A,B), \\text{res-cap}(B,C), \\text{res-cap}(C,A)) = \\min(3, 2, 1) = 1$$\n    *   **Cost savings per unit flow**: Each unit of flow pushed around this cycle reduces the total cost by $|-2| = 2$.\n    *   **Total cost decrease**: The total possible cost decrease is $k \\times | \\text{cycle cost} | = 1 \\times 2 = 2$.\n\nAfter pushing 1 unit of flow, the residual capacity of edge $(C,A)$ becomes zero, breaking the cycle. As there are no other negative-cost cycles, the flow becomes optimal again. The maximum possible decrease in the total cost is 2.", "answer": "$$\\boxed{2}$$", "id": "3253618"}]}