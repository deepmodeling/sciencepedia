{"hands_on_practices": [{"introduction": "The best way to understand an abstract reduction is to see it in action. This first exercise provides a direct opportunity to apply the standard polynomial-time reduction from 3-SAT to CLIQUE on a concrete formula. By constructing the graph and calculating both the target clique size $k$ and the total number of edges $|E|$, you will build a foundational, hands-on understanding of the core mechanics of this fundamental proof technique in complexity theory [@problem_id:1442490].", "problem": "A team of computer scientists is designing a configurable hardware accelerator. The accelerator's state is determined by three Boolean configuration flags, represented by variables $x_1$, $x_2$, and $x_3$. For the accelerator to function correctly, two primary modules must both be operational. The operational condition for the first module is expressed by the logical clause $(x_1 \\lor x_2 \\lor \\neg x_3)$, and for the second module, by $(\\neg x_1 \\lor \\neg x_2 \\lor x_3)$. Thus, the entire system's validity is captured by the single 3-Conjunctive Normal Form (3-CNF) formula $\\phi$:\n\n$$ \\phi = (x_1 \\lor x_2 \\lor \\neg x_3) \\land (\\neg x_1 \\lor \\neg x_2 \\lor x_3) $$\n\nTo analyze this constraint satisfaction problem, the team decides to convert it into an instance of the CLIQUE problem using the standard polynomial-time reduction from 3-Satisfiability (3-SAT). In the CLIQUE problem, the goal is to determine if a given graph $G$ contains a clique of a specified size $k$. A clique is a subset of vertices where every two distinct vertices in the subset are connected by an edge.\n\nYour task is to apply this standard reduction to the formula $\\phi$. This involves constructing an undirected graph $G=(V, E)$ and determining an integer $k$ such that $\\phi$ is satisfiable if and only if $G$ has a clique of size $k$. Based on your construction, identify the correct pair $(k, |E|)$, where $k$ is the size of the target clique and $|E|$ is the total number of edges in the graph $G$.\n\nWhich of the following options represents the correct pair $(k, |E|)$?\n\nA. (3, 9)\n\nB. (2, 3)\n\nC. (3, 6)\n\nD. (2, 6)\n\nE. (6, 9)", "solution": "We apply the standard reduction from 3-SAT to CLIQUE. For a 3-CNF formula with clauses $C_{1},\\dots,C_{m}$, construct a graph $G=(V,E)$ as follows:\n- For each clause, create one vertex for each literal in that clause.\n- Add an edge between two vertices if and only if they come from different clauses and the corresponding literals are not complementary (i.e., not of the form $x_{i}$ and $\\neg x_{i}$).\n- Set the target clique size to $k=m$.\n\nFor the given formula\n$$\n\\phi=(x_{1}\\lor x_{2}\\lor \\neg x_{3})\\land(\\neg x_{1}\\lor \\neg x_{2}\\lor x_{3}),\n$$\nthere are $m=2$ clauses, so the clique size is\n$$\nk=2.\n$$\n\nThe vertex set has one vertex per literal in each clause. Clause $C_{1}$ contributes literals $x_{1}, x_{2}, \\neg x_{3}$, and clause $C_{2}$ contributes literals $\\neg x_{1}, \\neg x_{2}, x_{3}$. Thus $|V|=6$.\n\nEdges are only between literals from different clauses, excluding complementary pairs. There are $3\\times 3=9$ possible cross-clause pairs in total. The complementary pairs are $(x_{1},\\neg x_{1})$, $(x_{2},\\neg x_{2})$, and $(\\neg x_{3},x_{3})$, which are excluded. Hence the number of edges is\n$$\n|E|=9-3=6.\n$$\n\nTherefore, the correct pair is $(k,|E|)=(2,6)$, which corresponds to option D.", "answer": "$$\\boxed{D}$$", "id": "1442490"}, {"introduction": "Now that you have applied the reduction, let's explore why its rules are constructed so precisely. This problem asks you to analyze a seemingly plausible but flawed modification to the standard procedure [@problem_id:1442486]. By identifying the logical error in this alternative approach, you will gain a deeper appreciation for why each condition in the standard reduction—especially the one distinguishing between literals from different clauses—is essential for the proof's validity.", "problem": "In computational complexity theory, the 3-Satisfiability problem (3-SAT) is a classic NP-complete problem. An instance of 3-SAT is a Boolean formula $\\phi$ in 3-Conjunctive Normal Form (3-CNF), which is a conjunction (AND) of clauses, where each clause is a disjunction (OR) of exactly three literals. A literal is a Boolean variable or its negation. The problem asks whether there exists a truth assignment to the variables that makes the formula $\\phi$ evaluate to true.\n\nTo prove that the CLIQUE problem is also NP-complete, we can perform a polynomial-time reduction from 3-SAT to CLIQUE. The CLIQUE problem asks, for a given graph $G$ and an integer $k$, whether $G$ contains a clique of size $k$ (i.e., a set of $k$ vertices where every pair of distinct vertices is connected by an edge).\n\nThe standard reduction is as follows:\nGiven a 3-SAT formula $\\phi$ with $k$ clauses, $C_1, C_2, \\dots, C_k$, we construct a graph $G=(V, E)$ and set the target clique size to be $k$.\n1.  **Vertices ($V$)**: For each literal $l$ in each clause $C_i$, create a vertex. If the formula has $k$ clauses, there will be $3k$ vertices in total, which can be thought of as being in $k$ groups of three, corresponding to the clauses.\n2.  **Edges ($E$)**: An edge exists between two vertices corresponding to literals $l_1$ and $l_2$ if and only if both of the following conditions are met:\n    a. The literals are in different clauses.\n    b. The literals are not contradictory (i.e., $l_1$ is not the negation of $l_2$).\n\nThis reduction correctly establishes that $\\phi$ is satisfiable if and only if $G$ has a clique of size $k$.\n\nNow, consider a proposed modification to this reduction. A student suggests simplifying the edge creation rule. In the modified reduction, an edge exists between two vertices corresponding to literals $l_1$ and $l_2$ if and only if the literals are not contradictory, removing the condition that they must be in different clauses.\n\nWhat is the primary logical flaw of this modified reduction?\n\nA. The modified reduction is no longer a polynomial-time reduction because it requires checking significantly more pairs of vertices to add edges.\n\nB. The modified reduction is flawed because a satisfiable 3-SAT formula may now map to a graph that does not have a clique of size $k$.\n\nC. The modified reduction is flawed because an unsatisfiable 3-SAT formula may now map to a graph that contains a clique of size $k$.\n\nD. The modified reduction is flawed because for any 3-SAT formula, it always generates a graph where the largest clique size is 3, regardless of the number of clauses $k$.\n\nE. The modified reduction is correct, but only for a special subclass of 3-SAT instances where every clause contains at least one variable and its negation.", "solution": "We recall the correctness condition required of the reduction: for a 3-CNF formula $\\phi$ with $k$ clauses, the constructed graph $G$ must satisfy\n$$\n\\phi \\text{ is satisfiable } \\iff G \\text{ has a clique of size } k.\n$$\nIn the standard reduction, edges are added only between non-contradictory literals from different clauses. This enforces that any clique of size $k$ must select exactly one vertex from each clause, thereby corresponding to a consistent choice of one literal per clause, which can then be extended to a satisfying assignment.\n\nIn the modified reduction, the edge condition is relaxed: an edge is added between two vertices if and only if the corresponding literals are not contradictory, with no requirement that they come from different clauses. We analyze both directions of the correctness condition under this modification.\n\nFirst, we show that the direction\n$$\n\\phi \\text{ satisfiable } \\implies G \\text{ has a clique of size } k\n$$\nstill holds. If $\\phi$ is satisfiable, then there exists a truth assignment that makes each clause $C_{i}$ true. For each clause $C_{i}$, choose one literal $l_{i}$ that is assigned true. Because the assignment is consistent, no pair $l_{i}, l_{j}$ can be contradictory. In the modified graph, edges exist between all non-contradictory pairs, regardless of clause membership, hence the $k$ chosen vertices form a clique of size $k$. Therefore, the forward direction remains valid, and option B is not the primary flaw.\n\nNext, we show that the converse\n$$\nG \\text{ has a clique of size } k \\implies \\phi \\text{ satisfiable}\n$$\nfails. The reason is that, without the “different clauses” restriction, a clique of size $k$ need not pick one vertex from each clause. A clique can select multiple vertices from the same clause, provided they are mutually non-contradictory, and omit vertices from some other clause entirely. Such a clique does not correspond to a selection of one literal per clause and thus does not necessarily encode a satisfying assignment.\n\nWe provide an explicit counterexample. Consider\n$$\n\\phi = (x \\vee x \\vee x) \\wedge (\\neg x \\vee \\neg x \\vee \\neg x).\n$$\nThis formula is unsatisfiable because the first clause forces $x$ to be true, while the second clause forces $x$ to be false. In the modified graph, the three vertices corresponding to the three occurrences of $x$ are pairwise connected (they are not contradictory to each other), forming a $3$-clique within a single clause. Since $k=2$ here, there is certainly a clique of size $2$, even though $\\phi$ is unsatisfiable. Hence, the graph has a clique of size $k$ while $\\phi$ is not satisfiable, violating the required equivalence.\n\nTherefore, the primary logical flaw is that an unsatisfiable 3-SAT instance may map to a graph that contains a clique of size $k$ under the modified rule, invalidating the reduction in the “only if” direction. This corresponds to option C.\n\nOptions A, D, and E are incorrect for the following reasons:\n- A: The construction still adds at most all non-contradictory pairs among $3k$ literals, which is polynomial in $k$; time complexity is not the primary flaw.\n- D: The largest clique is not always $3$; one can form larger cliques by taking non-contradictory literals across clauses.\n- E: The claim about correctness on a special subclass is unfounded; the core issue remains that cliques need not select one literal per clause.", "answer": "$$\\boxed{C}$$", "id": "1442486"}, {"introduction": "The reduction from 3-SAT to CLIQUE generates a graph with a highly specific and predictable structure. This final exercise challenges you to identify the key graph-theoretic property that emerges directly from the construction rule stating that edges only connect vertices from different clauses [@problem_id:1442524]. Recognizing this structural pattern is key to understanding how the partitioned nature of the graph directly encodes the clause structure of the original 3-SAT formula.", "problem": "In computational complexity theory, the standard polynomial-time reduction from the 3-Satisfiability (3SAT) problem to the CLIQUE problem is a fundamental construction. Consider a 3-Conjunctive Normal Form (3-CNF) formula $\\phi$ defined over a set of boolean variables. The formula $\\phi$ is a conjunction of $m$ clauses, $\\phi = C_1 \\wedge C_2 \\wedge \\dots \\wedge C_m$. Each clause $C_i$ is a disjunction of exactly three literals, $C_i = (l_{i,1} \\vee l_{i,2} \\vee l_{i,3})$, where a literal is either a variable or its negation.\n\nThe reduction constructs an undirected graph $G=(V, E)$ from the formula $\\phi$ as follows:\n1.  **Vertices**: For each clause $C_i$, create a set of three vertices $V_i = \\{v_{i,1}, v_{i,2}, v_{i,3}\\}$. Each vertex $v_{i,j}$ corresponds to the literal $l_{i,j}$ in clause $C_i$. The total vertex set of the graph is $V = V_1 \\cup V_2 \\cup \\dots \\cup V_m$.\n2.  **Edges**: An edge exists between two vertices $v_{i,j}$ and $v_{k,p}$ if and only if both of the following conditions are satisfied:\n    a. The vertices are in different sets (i.e., they originate from different clauses): $i \\neq k$.\n    b. Their corresponding literals are not contradictory: $l_{i,j} \\neq \\neg l_{k,p}$.\n\nThis construction naturally partitions the vertices of the graph $G$ into $m$ disjoint sets, $V_1, V_2, \\dots, V_m$, each of size 3, corresponding to the original clauses. Which of the following statements correctly describes the defining structural property of these vertex sets $V_i$ within the graph $G$?\n\nA. Each set $V_i$ induces a connected component of the graph $G$.\n\nB. The subgraph induced by each set $V_i$ is a clique of size 3.\n\nC. For any two distinct sets $V_i$ and $V_j$, the set of edges between them forms a complete bipartite graph.\n\nD. The subgraph induced by each set $V_i$ is an independent set.\n\nE. The graph $G$ must be a planar graph.", "solution": "By construction, the vertex set is partitioned as $V = V_{1} \\cup \\dots \\cup V_{m}$, where $V_{i} = \\{v_{i,1}, v_{i,2}, v_{i,3}\\}$ corresponds to the three literals in clause $C_{i}$. An edge is added between $v_{i,j}$ and $v_{k,p}$ if and only if both $i \\neq k$ and $l_{i,j} \\neq \\neg l_{k,p}$.\n\nConsider the subgraph induced by a fixed $V_{i}$. For any two distinct vertices $v_{i,j}$ and $v_{i,p}$ in $V_{i}$, the indices satisfy $i = k$, so the condition $i \\neq k$ fails. Therefore, no edge is added between any pair of vertices within the same $V_{i}$. Hence, the induced subgraph on $V_{i}$ has no edges, which is exactly the definition of an independent set. This proves that each $V_{i}$ is an independent set, matching option D.\n\nTo rule out the other options:\n- A is false because vertices in $V_{i}$ are connected to vertices in other $V_{k}$ (for $k \\neq i$) whenever the corresponding literals are not contradictory, so $V_{i}$ does not form a connected component.\n- B is false because there are no edges within $V_{i}$, so it cannot be a clique.\n- C is false in general because between $V_{i}$ and $V_{j}$, edges are missing for contradictory literal pairs, so the bipartite graph need not be complete.\n- E is false because the construction imposes no planarity constraints; the resulting graph can be nonplanar.\n\nTherefore, the defining structural property is that each $V_{i}$ induces an independent set.", "answer": "$$\\boxed{D}$$", "id": "1442524"}]}