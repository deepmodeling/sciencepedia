{"hands_on_practices": [{"introduction": "The first step in reducing 3SAT to HAM-PATH is to design a graph component, or \"gadget,\" that encodes a variable's truth assignment. This exercise [@problem_id:1442746] asks you to trace the path through a sequence of such gadgets for a given assignment. Understanding this mechanism is crucial, as it forms the backbone of the graph and represents the set of all possible truth assignments for the formula.", "problem": "In computational complexity theory, a key technique for proving NP-completeness is reducing a known NP-complete problem, like 3-Satisfiability (3SAT), to the problem in question. This problem examines the variable gadget construction used in the reduction from 3SAT to the directed Hamiltonian Path problem (HAM-PATH).\n\nFor a 3SAT formula with $n$ variables and $m$ clauses, the reduction creates a graph $G$ containing a \"gadget\" for each variable. For this problem, assume a variable gadget for $x_i$ has an entry node $a_i$, an exit node $b_i$, and a set of internal nodes $v_{i,0}, \\dots, v_{i,m}$. The gadget is constructed to enforce a choice corresponding to a truth assignment. To form a valid segment of a Hamiltonian path, one of two traversals must be chosen:\n\n- **True Assignment ($x_i = \\text{true}$):** The path must follow the sequence $a_i \\to v_{i,0} \\to v_{i,1} \\to \\dots \\to v_{i,m} \\to b_i$.\n- **False Assignment ($x_i = \\text{false}$):** The path must follow the sequence $a_i \\to v_{i,m} \\to v_{i,m-1} \\to \\dots \\to v_{i,0} \\to b_i$.\n\nThe gadgets for all variables are connected in series by an edge from the exit node of one gadget ($b_i$) to the entry node of the next ($a_{i+1}$).\n\n**Problem:**\nConsider a 3SAT formula with $n=2$ variables ($x_1, x_2$) and $m=2$ clauses. According to the construction described above, determine the sequence of nodes visited by the portion of the Hamiltonian path that corresponds to the truth assignment $x_1 = \\text{true}$ and $x_2 = \\text{false}$. The path should start at the entry node of the first gadget, $a_1$, and end at the exit node of the second gadget, $b_2$.\n\nWhich of the following sequences represents the correct path?\n\nA. $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2$\n\nB. $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, a_2, v_{2,0}, v_{2,1}, v_{2,2}, b_2$\n\nC. $a_1, v_{1,2}, v_{1,1}, v_{1,0}, b_1, a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2$\n\nD. $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, v_{2,2}, v_{2,1}, v_{2,0}, b_2$\n\nE. $a_1, v_{1,0}, v_{1,1}, b_1, a_2, v_{2,2}, v_{2,1}, b_2$", "solution": "The goal is to determine the sequence of nodes in a directed path through the variable gadgets for $x_1$ and $x_2$, given a specific truth assignment. The construction is based on a 3SAT formula with $n=2$ variables and $m=2$ clauses.\n\nThe problem specifies the following:\n- Truth Assignment: $x_1 = \\text{true}$, $x_2 = \\text{false}$.\n- Number of variables, $n=2$.\n- Number of clauses, $m=2$.\n\nWe need to trace the path through two gadgets, one for $x_1$ and one for $x_2$, connected in series.\n\nStep 1: Determine the path through the gadget for $x_1$.\nThe assignment for the first variable is $x_1 = \\text{true}$. According to the problem description, a 'true' assignment corresponds to a \"forward\" traversal of the internal nodes. The gadget for $x_1$ has internal nodes $v_{1,0}, v_{1,1}, \\dots, v_{1,m}$. Since $m=2$, the nodes are $v_{1,0}, v_{1,1}, v_{1,2}$.\nThe path for $x_1 = \\text{true}$ starts at the entry node $a_1$, traverses the internal nodes in increasing order of index, and ends at the exit node $b_1$.\nThe sequence for this subpath is: $a_1 \\to v_{1,0} \\to v_{1,1} \\to v_{1,2} \\to b_1$.\n\nStep 2: Determine the path through the gadget for $x_2$.\nThe assignment for the second variable is $x_2 = \\text{false}$. According to the problem description, a 'false' assignment corresponds to a \"reverse\" traversal of the internal nodes. The gadget for $x_2$ has internal nodes $v_{2,0}, v_{2,1}, \\dots, v_{2,m}$. Since $m=2$, the nodes are $v_{2,0}, v_{2,1}, v_{2,2}$.\nThe path for $x_2 = \\text{false}$ starts at the entry node $a_2$, traverses the internal nodes in decreasing order of index, and ends at the exit node $b_2$.\nThe sequence for this subpath is: $a_2 \\to v_{2,2} \\to v_{2,1} \\to v_{2,0} \\to b_2$.\n\nStep 3: Combine the subpaths.\nThe problem states that the variable gadgets are connected in series, with a directed edge from the exit node of one gadget to the entry node of the next. Therefore, there is a directed edge from $b_1$ to $a_2$.\nTo form the complete path from $a_1$ to $b_2$, we concatenate the path for $x_1$, the connecting edge, and the path for $x_2$.\n\nPath for $x_1$: $(a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1)$\nConnection: The path continues from $b_1$ to $a_2$.\nPath for $x_2$: $(a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2)$\n\nCombining these yields the full sequence of visited nodes:\n$a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2$.\n\nStep 4: Compare the result with the given options.\n- A: $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2$\n- B: $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, a_2, v_{2,0}, v_{2,1}, v_{2,2}, b_2$ (Incorrect, this represents $x_2=\\text{true}$)\n- C: $a_1, v_{1,2}, v_{1,1}, v_{1,0}, b_1, a_2, v_{2,2}, v_{2,1}, v_{2,0}, b_2$ (Incorrect, this represents $x_1=\\text{false}$)\n- D: $a_1, v_{1,0}, v_{1,1}, v_{1,2}, b_1, v_{2,2}, v_{2,1}, v_{2,0}, b_2$ (Incorrect, misses the entry node $a_2$ for the second gadget)\n- E: $a_1, v_{1,0}, v_{1,1}, b_1, a_2, v_{2,2}, v_{2,1}, b_2$ (Incorrect, misses internal nodes $v_{1,2}$ and $v_{2,0}$)\n\nThe derived sequence matches option A.", "answer": "$$\\boxed{A}$$", "id": "1442746"}, {"introduction": "A reduction is only useful if it correctly maps \"no\" instances to \"no\" instances. This problem [@problem_id:1442737] explores a powerful \"diamond\" gadget construction to see how clause constraints are enforced. By working through a simple unsatisfiable formula, you will see firsthand how the graph's structure makes it impossible to find a Hamiltonian path, mirroring the logical contradiction in the original formula.", "problem": "In computational complexity theory, the concept of a polynomial-time reduction is fundamental to classifying problems. A common example is the reduction from the 3-Satisfiability (3SAT) problem to the directed Hamiltonian Path (HAM-PATH) problem. This problem asks you to analyze the result of this reduction for a specific, simple 3SAT instance.\n\nFirst, let's define the problems and the reduction procedure.\n- **3-Satisfiability (3SAT)**: Given a Boolean formula in 3-Conjunctive Normal Form (3-CNF), which is a conjunction (AND) of clauses, where each clause is a disjunction (OR) of exactly three literals (a variable or its negation), is there an assignment of truth values to the variables that makes the entire formula true?\n- **Directed Hamiltonian Path (HAM-PATH)**: Given a directed graph $G=(V, E)$ and two specified vertices $s, t \\in V$, is there a directed path from $s$ to $t$ that visits every vertex in $V$ exactly once?\n\nThe reduction from a 3SAT formula $\\phi$ to a directed graph $G$ is as follows:\nLet $\\phi$ have $n$ variables $x_1, \\dots, x_n$ and $m$ clauses $c_1, \\dots, c_m$.\n\n1.  **Global Structure**: Create a special start vertex $s$ and a special end vertex $t$.\n2.  **Variable Gadgets**: For each variable $x_i$ (from $i=1$ to $n$), create a diamond-shaped gadget. This gadget has an entry-point vertex $v_{i, \\text{in}}$ and an exit-point vertex $v_{i, \\text{out}}$. Between these two vertices, create two parallel, directed paths of nodes:\n    - The \"true\" path, representing $x_i = \\text{true}$, consists of $2m$ intermediate vertices $p_{i,1}^T, \\dots, p_{i,2m}^T$. Edges are added to form the path: $(v_{i, \\text{in}}, p_{i,1}^T)$, then $(p_{i,j}^T, p_{i,j+1}^T)$ for $j=1, \\dots, 2m-1$, and finally $(p_{i,2m}^T, v_{i, \\text{out}})$.\n    - The \"false\" path, representing $x_i = \\text{false}$, is analogous, with $2m$ vertices $p_{i,1}^F, \\dots, p_{i,2m}^F$ and corresponding edges.\n3.  **Clause Gadgets**: For each clause $c_j$ (from $j=1$ to $m$), create a single vertex $C_j$.\n4.  **Connecting the Gadgets**:\n    - Link the variable gadgets in series: add an edge from $s$ to $v_{1, \\text{in}}$. For $i=1, \\dots, n-1$, add an edge $(v_{i, \\text{out}}, v_{i+1, \\text{in}})$. Finally, add an edge $(v_{n, \\text{out}}, t)$.\n    - For each clause $c_j$, connect it to the variable gadgets. If the literal $x_i$ appears in clause $c_j$, add the directed edges $(p_{i,2j-1}^T, C_j)$ and $(C_j, p_{i,2j}^T)$. If the literal $\\neg x_i$ appears in clause $c_j$, add the directed edges $(p_{i,2j-1}^F, C_j)$ and $(C_j, p_{i,2j}^F)$. Note that even if a literal appears multiple times in a clause, the corresponding pair of edges is added only once.\n\nNow, consider the following 3SAT formula $\\phi$:\n$$ \\phi = (x_1 \\lor x_1 \\lor x_1) \\land (\\neg x_1 \\lor \\neg x_1 \\lor \\neg x_1) $$\nLet the first clause be $c_1 = (x_1 \\lor x_1 \\lor x_1)$ and the second clause be $c_2 = (\\neg x_1 \\lor \\neg x_1 \\lor \\neg x_1)$.\n\nApply the reduction described above to this formula $\\phi$ to construct a directed graph $G$. Which of the following statements about the resulting graph $G$ is correct?\n\nA. The resulting graph $G$ contains a Hamiltonian path from $s$ to $t$.\n\nB. The resulting graph $G$ does not contain a Hamiltonian path from $s$ to $t$ because any path that includes the vertex for clause $c_1$ cannot also include the vertex for clause $c_2$.\n\nC. The construction fails for this formula and produces a graph where some vertices are completely disconnected from the path between $s$ and $t$.\n\nD. The provided formula is not a valid 3-CNF formula due to repeated literals, so the construction cannot be applied.\n\nE. The resulting graph $G$ contains a Hamiltonian path from $s$ to $t$, but this path does not correspond to a valid truth assignment for the variable $x_1$.", "solution": "The problem asks us to analyze the directed graph $G$ constructed from a specific 3SAT formula $\\phi$ using a standard reduction, and determine if it has a Hamiltonian path.\n\nThe given 3SAT formula is $\\phi = (x_1 \\lor x_1 \\lor x_1) \\land (\\neg x_1 \\lor \\neg x_1 \\lor \\neg x_1)$.\nThis formula has $n=1$ variable, $x_1$, and $m=2$ clauses, $c_1 = (x_1 \\lor x_1 \\lor x_1)$ and $c_2 = (\\neg x_1 \\lor \\neg x_1 \\lor \\neg x_1)$.\n\nLet's construct the graph $G$ according to the rules provided.\n\n1.  **Vertices**:\n    - Global vertices: $s, t$.\n    - Clause vertices: $C_1, C_2$.\n    - Variable gadget for $x_1$ (since $n=1, m=2$):\n        - Entry/exit points: $v_{1, \\text{in}}, v_{1, \\text{out}}$.\n        - \"True\" path vertices ($2m = 4$ of them): $p_{1,1}^T, p_{1,2}^T, p_{1,3}^T, p_{1,4}^T$.\n        - \"False\" path vertices ($2m = 4$ of them): $p_{1,1}^F, p_{1,2}^F, p_{1,3}^F, p_{1,4}^F$.\n    The total number of vertices in the graph is $2 (\\text{global}) + 2 (\\text{clause}) + 2 (\\text{entry/exit}) + 4 (\\text{true path}) + 4 (\\text{false path}) = 14$ vertices. A Hamiltonian path must visit each of these 14 vertices exactly once.\n\n2.  **Edges**:\n    - **Backbone edges**: Since $n=1$, the variable gadgets are connected directly to $s$ and $t$. Edges are $(s, v_{1, \\text{in}})$ and $(v_{1, \\text{out}}, t)$.\n    - **Variable gadget edges for $x_1$**:\n        - True path: $(v_{1, \\text{in}}, p_{1,1}^T)$, $(p_{1,1}^T, p_{1,2}^T)$, $(p_{1,2}^T, p_{1,3}^T)$, $(p_{1,3}^T, p_{1,4}^T)$, $(p_{1,4}^T, v_{1, \\text{out}})$.\n        - False path: $(v_{1, \\text{in}}, p_{1,1}^F)$, $(p_{1,1}^F, p_{1,2}^F)$, $(p_{1,2}^F, p_{1,3}^F)$, $(p_{1,3}^F, p_{1,4}^F)$, $(p_{1,4}^F, v_{1, \\text{out}})$.\n    - **Clause connection edges**:\n        - Clause $c_1 = (x_1 \\lor x_1 \\lor x_1)$. This clause contains the literal $x_1$. The index of this clause is $j=1$. According to the rule, we add edges connecting to the \"true\" path of variable $x_1$ at positions $2j-1=1$ and $2j=2$. The edges are $(p_{1,1}^T, C_1)$ and $(C_1, p_{1,2}^T)$.\n        - Clause $c_2 = (\\neg x_1 \\lor \\neg x_1 \\lor \\neg x_1)$. This clause contains the literal $\\neg x_1$. The index of this clause is $j=2$. We add edges connecting to the \"false\" path of variable $x_1$ at positions $2j-1=3$ and $2j=4$. The edges are $(p_{1,3}^F, C_2)$ and $(C_2, p_{1,4}^F)$.\n\n3.  **Analysis for a Hamiltonian Path**:\n    A Hamiltonian path must start at $s$, end at $t$, and visit every other vertex exactly once.\n    The path must begin with the edge $(s, v_{1, \\text{in}})$. At $v_{1, \\text{in}}$, the path has a choice: either enter the \"true\" path via $p_{1,1}^T$ or the \"false\" path via $p_{1,1}^F$. A single path cannot traverse both, as they are parallel and there are no edges connecting them. This choice corresponds to setting the truth value of $x_1$.\n\n    **Case 1: The path chooses the \"true\" path (modeling $x_1=\\text{true}$)**.\n    The path must traverse all vertices of the \"true\" path: $p_{1,1}^T, p_{1,2}^T, p_{1,3}^T, p_{1,4}^T$. To do so, a segment of the path must look like $v_{1, \\text{in}} \\to \\dots \\to v_{1, \\text{out}}$. To visit all the nodes of the graph, this path must also somehow visit $C_1, C_2$ and all the \"false\" path nodes $p_{1,j}^F$.\n    - **Visiting $C_1$**: The vertex $C_1$ can be visited by taking the detour from the \"true\" path: $... \\to p_{1,1}^T \\to C_1 \\to p_{1,2}^T \\to ...$. This is a valid way to visit $C_1$ while staying on the overall \"true\" path trajectory.\n    - **Visiting $C_2$**: To visit vertex $C_2$, the path must use one of the edges leading to it or from it. The only such edges are $(p_{1,3}^F, C_2)$ and $(C_2, p_{1,4}^F)$. This means the path must traverse the subpath $p_{1,3}^F \\to C_2 \\to p_{1,4}^F$. This requires being on the \"false\" path.\n    - **Contradiction**: If our path chose the \"true\" path, it cannot visit any of the $p_{1,j}^F$ vertices. Therefore, it cannot use the edges required to visit $C_2$. So, if we choose the \"true\" path for $x_1$, we can visit $C_1$ but we cannot visit $C_2$. The path would miss $C_2$ and all the $p_{1,j}^F$ nodes, so it is not Hamiltonian.\n\n    **Case 2: The path chooses the \"false\" path (modeling $x_1=\\text{false}$)**.\n    The path must traverse all vertices of the \"false\" path: $p_{1,1}^F, p_{1,2}^F, p_{1,3}^F, p_{1,4}^F$.\n    - **Visiting $C_2$**: The vertex $C_2$ can be visited via the detour $... \\to p_{1,3}^F \\to C_2 \\to p_{1,4}^F \\to ...$. This is a valid way to visit $C_2$.\n    - **Visiting $C_1$**: To visit vertex $C_1$, the path must traverse the subpath $p_{1,1}^T \\to C_1 \\to p_{1,2}^T$. This requires being on the \"true\" path.\n    - **Contradiction**: If our path chose the \"false\" path, it cannot visit any of the $p_{1,j}^T$ vertices. Therefore, it cannot use the edges required to visit $C_1$. So, if we choose the \"false\" path for $x_1$, we can visit $C_2$ but we cannot visit $C_1$. The path would miss $C_1$ and all the $p_{1,j}^T$ nodes, so it is not Hamiltonian.\n\n    **Conclusion**: Since neither choice of path through the variable gadget allows for the visiting of all vertices, no Hamiltonian path exists from $s$ to $t$. This reflects the fact that the formula $\\phi$ is unsatisfiable (it requires $x_1$ to be both true and false).\n\n4.  **Evaluating the Options**:\n    - A. The resulting graph $G$ contains a Hamiltonian path from $s$ to $t$. (False)\n    - B. The resulting graph $G$ does not contain a Hamiltonian path from $s$ to $t$ because any path that includes the vertex for clause $c_1$ cannot also include the vertex for clause $c_2$. (True. As shown above, visiting $C_1$ requires using the \"true\" path, while visiting $C_2$ requires using the \"false\" path. A single path cannot do both.)\n    - C. The construction fails... produces a graph where some vertices are completely disconnected... (False. The graph is fully connected; for example, from any node, one can find a path to $t$.)\n    - D. The provided formula is not a valid 3-CNF formula... (False. 3-CNF allows for repeated literals within a clause. The definition is a conjunction of clauses, where each clause is a disjunction of three literals.)\n    - E. The resulting graph $G$ contains a Hamiltonian path..., but this path does not correspond to a valid truth assignment... (False. No Hamiltonian path exists at all.)\n\nTherefore, the correct statement is B.", "answer": "$$\\boxed{B}$$", "id": "1442737"}, {"introduction": "To complete our understanding, let's reverse our thinking from construction to deconstruction. Given a graph known to be the output of a 3SAT-to-HAM-PATH reduction, what can we infer about the original formula? This exercise [@problem_id:1442708] challenges you to use the total vertex count of a graph to determine the number of clauses, $m$, in the source formula, reinforcing the predictable, polynomial-time nature of the construction.", "problem": "A student in a computational complexity theory course is given a directed graph $G=(V, E)$. They are informed that this graph is the result of applying a standard polynomial-time reduction from a 3-Satisfiability (3SAT) formula, $\\phi$, to the directed Hamiltonian Path problem. The original Boolean formula $\\phi$ was known to have $n$ variables and $m$ clauses.\n\nThe rules for the construction of the graph $G$ from the formula $\\phi$ are as follows:\n\n1.  The set of vertices $V$ is partitioned into three disjoint subsets: a set of vertices for the \"variable gadgets\", $V_X$; a set of vertices for the \"clause gadgets\", $V_C$; and a set of two special vertices, $\\{s, t\\}$, where $s$ is the designated start vertex and $t$ is the end vertex of the Hamiltonian path.\n2.  The set $V_X$ is constructed by creating a distinct subgraph, or \"gadget\", for each of the $n$ variables in $\\phi$. Each of these $n$ variable gadgets is identical in structure and contains a specific number of vertices which depends on the number of clauses, $m$. Precisely, each variable gadget is made of exactly $2m+2$ vertices.\n3.  The set $V_C$ is constructed by creating exactly one vertex for each of the $m$ clauses in $\\phi$.\n4.  The total number of vertices in the entire graph $G$ is 526. The number of variables in the original formula $\\phi$ was $n=10$.\n\nBased on the information provided about the reduction and the resulting graph, determine the number of clauses, $m$, in the original 3SAT formula $\\phi$.", "solution": "We are told that the vertex set is partitioned as $V = V_{X} \\cup V_{C} \\cup \\{s,t\\}$ with $V_{X}$ consisting of $n$ identical variable gadgets, each having exactly $2m+2$ vertices, and $V_{C}$ having exactly $m$ clause vertices. The two special vertices are $s$ and $t$. Therefore, the total number of vertices satisfies\n$$\n|V| = |V_{X}| + |V_{C}| + 2 = n(2m+2) + m + 2.\n$$\nWith $|V| = 526$ and $n = 10$, we substitute to obtain\n$$\n526 = 10(2m+2) + m + 2.\n$$\nExpanding and collecting like terms yields\n$$\n526 = 20m + 20 + m + 2 = 21m + 22.\n$$\nSolving for $m$ gives\n$$\n21m = 526 - 22 = 504 \\quad \\Rightarrow \\quad m = \\frac{504}{21} = 24.\n$$\nThus, the number of clauses in the original formula is $m=24$.", "answer": "$$\\boxed{24}$$", "id": "1442708"}]}