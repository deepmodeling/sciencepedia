{"hands_on_practices": [{"introduction": "A powerful method in logic and mathematics is proof by contradiction. To understand the profound statement that if $NP$ and $co-NP$ are different, then $P$ cannot equal $NP$, we can explore its logical equivalent (the contrapositive): if $P=NP$, then $NP$ must equal $co-NP$. This first exercise guides you through this fundamental proof, demonstrating how assuming $P=NP$ and $NP \\neq co-NP$ leads to a direct logical contradiction, thereby validating the theorem. [@problem_id:1427439]", "problem": "In computational complexity theory, we study the resources required to solve computational problems. Let's consider three fundamental complexity classes:\n- **P (Polynomial time):** The class of decision problems that can be solved by a deterministic Turing machine in an amount of time that is a polynomial function of the size of the input.\n- **NP (Nondeterministic Polynomial time):** The class of decision problems for which a 'yes' instance has a certificate (or proof) that can be verified in polynomial time by a deterministic Turing machine.\n- **co-NP:** The class of decision problems for which a 'no' instance has a certificate (or proof/counterexample) that can be verified in polynomial time. Equivalently, a problem $L$ is in co-NP if and only if its complement, $\\bar{L}$ (where 'yes' and 'no' instances are swapped), is in NP.\n\nConsider a hypothetical scenario where you are given the following two assumptions as true:\n1.  $P = NP$\n2.  $NP \\neq co-NP$\n\nBased on these two assumptions, which one of the following statements is the most accurate logical consequence?\n\nA. The class P is not closed under complementation.\nB. The assumptions lead to a logical contradiction.\nC. The class co-NP must be a proper subset of NP (i.e., $co-NP \\subset NP$).\nD. The class NP must be a proper subset of co-NP (i.e., $NP \\subset co-NP$).\nE. There exists at least one problem in NP whose complement is not in NP.", "solution": "The assumption $P=NP$ implies that the class $NP$ would inherit all the properties of $P$. A fundamental property of $P$ is that it is closed under complementation. (If a language $L$ is in $P$, its complement $\\overline{L}$ is also in $P$, because we can just run the algorithm for $L$ and flip the output). If $NP$ inherited this property, then for any language $L \\in NP$, its complement $\\overline{L}$ would also be in $NP$. By the definition of the class co-NP, this is equivalent to saying that every language in $NP$ is also in co-NP ($NP \\subseteq \\text{co-NP}$). A symmetric argument proves the reverse inclusion ($\\text{co-NP} \\subseteq NP$). Therefore, the assumption $P=NP$ logically forces the conclusion $NP = \\text{co-NP}$.\n\nThis directly contradicts the second assumption, $NP \\neq \\text{co-NP}$. Therefore, the two assumptions together are inconsistent; they lead to a logical contradiction.\n\nEvaluating the options:\n- A is false because $P$ is definitionally closed under complementation.\n- B is true as shown above.\n- C and D are incompatible with the derived conclusion that $P = NP$ implies $NP = \\text{co-NP}$.\n- E is the definition of $NP \\neq \\text{co-NP}$, but under the assumption $P=NP$, we've shown $NP$ must be closed under complement, making E false in that context.\n\nThus, the correct choice is B.", "answer": "$$\\boxed{B}$$", "id": "1427439"}, {"introduction": "The proof explored previously relies critically on a specific characteristic of the class P: it is 'closed under complement'. To truly understand why this property is so important, this exercise presents a thought experiment using the class of Recursively Enumerable ($RE$) problems, which famously lacks this closure property. By exploring the hypothetical scenario where $P=RE$, you will isolate and appreciate the central role that closure under complement plays in the relationship between complexity classes. [@problem_id:1427408]", "problem": "In computational complexity theory, we study classes of problems based on the resources required to solve them. Let P be the class of decision problems solvable in polynomial time by a deterministic Turing machine. Let RE, for Recursively Enumerable, be the class of decision problems for which a Turing machine exists that is guaranteed to halt in a finite amount of time and accept for any 'yes' instance of the problem, but may run forever for any 'no' instance.\n\nIt is a fundamental result that the class P is closed under complement. This means that if a language $L$ is in P, then its complement $\\bar{L}$ (the set of all strings not in $L$) is also in P. In contrast, it is a known fact from computability theory that RE is not closed under complement, which implies RE $\\neq$ co-RE, where co-RE is the class of languages whose complements are in RE.\n\nNow, consider a hypothetical discussion between two students who are trying to understand the relationships between these classes.\n\nAlice claims: \"The assumption `P = RE` is nonsensical from the start, because we know P is a strict subset of RE. For instance, the Halting Problem is in RE but not in P.\"\n\nBob replies: \"I agree it's false in our world, but as a thought experiment, we should explore the logical *consequences* of such an assumption. I believe that if we were to hypothetically assume `P = RE`, it would logically follow that `RE = co-RE`.\"\n\nYour task is to evaluate Bob's claim. Which of the following statements provides the most accurate assessment and reasoning?\n\nA. Bob is correct. The class P is defined as being closed under complement. If RE were equal to P, it would necessarily inherit all of P's properties, including closure under complement. This would directly imply that RE = co-RE.\nB. Bob is incorrect. The property of not being closed under complement is an intrinsic characteristic of the RE class, stemming from its definition based on one-way halting. The hypothetical equality `P = RE` cannot change this fundamental property of the machine model defining RE.\nC. Bob is correct, but for a trivial reason not related to complexity theory. His claim is an implication of the form \"if A then B\", where the premise A (`P = RE`) is known to be false. In formal logic, any such implication with a false premise is considered 'vacuously true', irrespective of what the conclusion B is.\nD. Bob is incorrect. If `P = RE`, then for any language $L$ in co-RE, its complement $\\bar{L}$ is in RE, and thus in P. Since P is closed under complement, $L$ itself must be in P, and therefore in RE. This only proves that co-RE is a subset of RE, not that they are equal.\nE. Bob's claim cannot be evaluated. The premise `P = RE` leads to a direct contradiction with established theorems of computability (e.g., the undecidability of the Halting Problem), making any further logical deduction based on it unsound.", "solution": "We analyze the logical consequence of the hypothetical assumption $P=\\mathrm{RE}$.\n\nKnown facts:\n- $P$ is closed under complement: for every language $L$, if $L\\in P$ then $\\overline{L}\\in P$.\n- $\\text{co-RE}$ is defined by $\\text{co-RE}=\\{L:\\overline{L}\\in \\mathrm{RE}\\}$.\n\nAssume $P=\\mathrm{RE}$. Then, since $P$ is closed under complement, $\\mathrm{RE}$ must also be closed under complement because equality of classes (as sets of languages) transfers closure properties. If $L\\in \\mathrm{RE}$, then $L\\in P$ (by assumption), so $\\overline{L}\\in P$ (closure of $P$), hence $\\overline{L}\\in \\mathrm{RE}$ (by assumption again). Therefore $\\mathrm{RE}$ would be closed under complement.\n\nA class $C$ is closed under complement if and only if $C = \\text{co-}C$. Thus, if $\\mathrm{RE}$ were closed under complement, it would mean $\\mathrm{RE} = \\text{co-RE}$. This directly supports Bobâ€™s claim for a substantive reason.\n\nEvaluating the options:\n- A correctly captures this reasoning. It states that if $\\mathrm{RE}=P$ and $P$ is closed under complement, then $\\mathrm{RE}$ inherits this closure property, which implies $\\mathrm{RE}=\\text{co-RE}$.\n- B is incorrect because properties like closure under complement are properties of the set of languages; if two classes are equal as sets, they share such properties irrespective of machine-model descriptions.\n- C invokes vacuous truth, but here the implication is true for a nontrivial structural reason, not merely vacuously.\n- D is incorrect as it only proves one direction of the set equality ($\\text{co-RE}\\subseteq \\mathrm{RE}$) and misses the other ($\\mathrm{RE}\\subseteq \\text{co-RE}$), which also follows from the hypothesis.\n- E is incorrect: one may analyze consequences of a counterfactual hypothesis consistently; no contradiction prevents drawing valid conditional conclusions.\n\nHence, the most accurate assessment is A.", "answer": "$$\\boxed{A}$$", "id": "1427408"}, {"introduction": "Complexity theorists often use 'relativization' to build hypothetical worlds with oracles, allowing them to test the limits and dependencies of theorems. This advanced practice invites you into one such world where $P^A = NP^A$ holds, but the crucial property of closure under complement for the class $P^A$ is deliberately broken. By analyzing the results in this scenario, you will see firsthand why this closure property is an indispensable pillar for the proof that $P = NP$ implies $NP = co-NP$. [@problem_id:1427443]", "problem": "In computational complexity theory, a language is a set of strings representing 'yes' instances of a decision problem. The complement of a language $L$, denoted $\\bar{L}$, consists of all strings not in $L$ (over a fixed alphabet). A complexity class $C$ is 'closed under complement' if for every language $L$ in $C$, its complement $\\bar{L}$ is also in $C$.\n\nFor a given oracle $A$, which is a fixed set of strings, we can define relativized complexity classes. The class $P^A$ consists of all languages decidable in polynomial time by a deterministic Turing machine having access to the oracle $A$. The class $NP^A$ consists of all languages decidable in polynomial time by a nondeterministic Turing machine with access to $A$. The class $co\\text{-}NP^A$ is defined as the set of languages $L$ such that their complement $\\bar{L}$ is in $NP^A$.\n\nIn the standard, unrelativized setting (without an oracle), it is a well-known theorem that if P = NP, then NP = co-NP. The proof of this theorem fundamentally relies on the fact that the class P is closed under complement. To demonstrate that this closure property is indispensable for the proof's logic, consider a hypothetical oracle $A$ that establishes a 'relativized world' where this property fails.\n\nAssume you are given an oracle $A$ for which the following two statements are established facts:\n1. $P^A = NP^A$.\n2. The class $P^A$ is not closed under complement. That is, there exists at least one language $L_0 \\in P^A$ for which its complement $\\overline{L_0} \\notin P^A$.\n\nBased solely on these two presuppositions, which of the following conclusions are logically inevitable? Select all valid options.\n\nA. $NP^A = co-NP^A$.\nB. $NP^A \\neq co-NP^A$.\nC. $P^A = PSPACE^A$, where $PSPACE^A$ is the class of languages decidable in polynomial space by a deterministic Turing machine with access to oracle $A$.\nD. For any language $L \\in NP^A$, its complement $\\bar{L}$ is also in $NP^A$.\nE. There exists some language $L_1 \\in co-NP^A$ such that $L_1 \\notin P^A$.", "solution": "We are given the two premises:\n(1) $P^{A} = NP^{A}$.\n(2) $P^{A}$ is not closed under complement, i.e., $\\exists L_{0} \\in P^{A}$ such that $\\overline{L_{0}} \\notin P^{A}$.\n\nFirst, let's analyze option B. Suppose for contradiction that $NP^{A} = co\\text{-}NP^{A}$. Then from premise (1), we have $P^{A} = NP^{A} = co\\text{-}NP^{A}$. This implies that $P^A$ is equal to its own co-class, which means $P^A$ must be closed under complement. (To prove this: take any $L \\in P^{A}$. Since $P^{A} = co\\text{-}NP^{A}$, we have $L \\in co\\text{-}NP^{A}$. By definition, this means $\\overline{L} \\in NP^{A}$. Since $NP^{A} = P^{A}$, we get $\\overline{L} \\in P^{A}$. This holds for any $L \\in P^A$, so $P^A$ is closed under complement). This conclusion directly contradicts premise (2). Therefore, our supposition must be false, and $NP^{A} \\neq co\\text{-}NP^{A}$ must hold. This makes option B logically inevitable.\n\nNext, let's analyze option E. From premise (2), there exists a language $L_{0} \\in P^{A}$ such that its complement $\\overline{L_{0}} \\notin P^{A}$. Since $L_{0} \\in P^{A}$ and $P^{A} = NP^{A}$ (premise 1), we have $L_{0} \\in NP^{A}$. By the definition of $co\\text{-}NP^{A}$, a language $L$ is in $co\\text{-}NP^{A}$ if and only if its complement $\\overline{L}$ is in $NP^{A}$. Consider the language $\\overline{L_{0}}$. Its complement is $\\overline{\\overline{L_{0}}} = L_{0}$, which we know is in $NP^A$. Therefore, by definition, $\\overline{L_{0}} \\in co\\text{-}NP^{A}$. We were given that $\\overline{L_{0}} \\notin P^{A}$. So, we have found a language, namely $L_1 = \\overline{L_0}$, such that $L_1 \\in co\\text{-}NP^A$ and $L_1 \\notin P^A$. This makes option E logically inevitable.\n\nEvaluating the other options:\n- A is false because B is true.\n- D asserts that $NP^{A}$ is closed under complement. This is equivalent to $NP^A = co\\text{-}NP^A$, which we have just shown to be false.\n- C makes a claim about $PSPACE^A$. The given premises only relate $P^A$, $NP^A$, and $co\\text{-}NP^A$. They do not provide enough information to draw any necessary conclusions about $PSPACE^A$.\n\nIn summary, the conclusions that must hold are B and E.", "answer": "$$\\boxed{B, E}$$", "id": "1427443"}]}