{"hands_on_practices": [{"introduction": "The first step in understanding Quantified Boolean Formulas (QBFs) is to build a solid intuition for how they are evaluated. This exercise challenges you to determine the truth value of a fundamental QBF, treating the process as a game between two players making choices for the variables. By working through the alternating quantifiers, you will practice the core evaluation semantics that underpin all of TQBF theory [@problem_id:1467505].", "problem": "In computational complexity theory, a Quantified Boolean Formula (QBF) is a formula in classical propositional logic where the variables are quantified. The problem of determining if a given QBF with no free variables is true or false is known as the TQBF problem.\n\nConsider the Boolean variables $x$ and $y$, which can take values from the set $\\{\\top, \\bot\\}$, representing True and False, respectively. The standard logical operators are denoted as $\\land$ for AND, $\\lor$ for OR, and $\\neg$ for NOT. The quantifiers are $\\forall$ (for all/universal) and $\\exists$ (there exists/existential).\n\nYour task is to determine the truth value of the following QBF:\n$$ \\exists x \\forall y ((x \\lor \\neg y) \\land (\\neg x \\lor y)) $$\n\nWhich of the following statements is correct?\n\nA. The formula is True ($\\top$).\n\nB. The formula is False ($\\bot$).\n\nC. The truth value of the formula is undecidable.\n\nD. The formula is syntactically malformed.\n\nE. The truth value depends on an initial, unquantified assignment.", "solution": "We are given the quantified Boolean formula\n$$\n\\exists x \\forall y \\left((x \\lor \\neg y) \\land (\\neg x \\lor y)\\right).\n$$\nDefine the matrix (inner Boolean expression) as\n$$\n\\phi(x,y) = (x \\lor \\neg y) \\land (\\neg x \\lor y).\n$$\nUse the propositional equivalences $a \\rightarrow b \\equiv \\neg a \\lor b$ and the definition of biconditional $a \\leftrightarrow b \\equiv (a \\rightarrow b) \\land (b \\rightarrow a)$. Then\n$$\nx \\lor \\neg y \\equiv \\neg y \\lor x \\equiv y \\rightarrow x,\n$$\n$$\n\\neg x \\lor y \\equiv x \\rightarrow y,\n$$\nso\n$$\n\\phi(x,y) \\equiv (y \\rightarrow x) \\land (x \\rightarrow y) \\equiv x \\leftrightarrow y.\n$$\nHence the whole QBF is equivalent to\n$$\n\\exists x \\forall y \\,(x \\leftrightarrow y).\n$$\nEvaluate the universal part for each possible value of $x$.\n\nCase 1: $x=\\top$. Using $x \\leftrightarrow y \\equiv (x \\land y) \\lor (\\neg x \\land \\neg y)$,\n$$\nx \\leftrightarrow y \\equiv (\\top \\land y) \\lor (\\bot \\land \\neg y) \\equiv y.\n$$\nThus $\\forall y\\,(x \\leftrightarrow y)$ becomes $\\forall y\\, y$, which is false because taking $y=\\bot$ makes $y$ false.\n\nCase 2: $x=\\bot$. Then\n$$\nx \\leftrightarrow y \\equiv (\\bot \\land y) \\lor (\\top \\land \\neg y) \\equiv \\neg y.\n$$\nThus $\\forall y\\,(x \\leftrightarrow y)$ becomes $\\forall y\\, \\neg y$, which is false because taking $y=\\top$ makes $\\neg y$ false.\n\nIn both cases, $\\forall y\\,(x \\leftrightarrow y)$ is false, so there is no $x$ satisfying the existential quantifier. Therefore the entire formula is false, and the correct option is B.", "answer": "$$\\boxed{B}$$", "id": "1467505"}, {"introduction": "To apply powerful theoretical tools and algorithms to QBFs, they must typically be in a standardized structure called Prenex Normal Form, where all quantifiers are placed at the beginning. This practice focuses on the essential skill of converting a given logical formula into this standard form through a series of equivalence-preserving transformations. Mastering this syntactic manipulation is a crucial step towards understanding the formal proofs and algorithms in complexity theory [@problem_id:1467507].", "problem": "In computational complexity theory, a True Quantified Boolean Formula (TQBF) is a formula in quantified boolean logic that is required to be in prenex normal form. A formula is in prenex normal form if it is of the form $\\mathcal{Q}_1 v_1 \\mathcal{Q}_2 v_2 \\dots \\mathcal{Q}_n v_n \\psi$, where each $\\mathcal{Q}_i$ is a universal quantifier ($\\forall$) or an existential quantifier ($\\exists$), the $v_i$ are distinct boolean variables, and $\\psi$ is a quantifier-free boolean formula involving the variables $v_1, \\dots, v_n$ and possibly other free variables.\n\nConsider the following quantified boolean formula $\\Phi$, where $x, y,$ and $z$ are boolean variables:\n$$ \\Phi = (\\forall x (x \\lor y)) \\lor (\\exists x (\\neg x \\land z)) $$\nWhich of the following formulas in prenex normal form is logically equivalent to $\\Phi$? Note that variables $a$ and $b$ are introduced as new, distinct boolean variables for the purpose of renaming.\n\nA. $\\forall x \\exists x (((x \\lor y) \\lor (\\neg x \\land z)))$\n\nB. $\\forall a \\exists b (((a \\lor y) \\land (\\neg b \\land z)))$\n\nC. $\\exists b \\forall a (((a \\lor y) \\lor (\\neg b \\land z)))$\n\nD. $\\forall a \\forall b (((a \\lor y) \\lor (\\neg b \\land z)))$\n\nE. $\\exists a \\exists b (((a \\lor y) \\lor (\\neg b \\land z)))$", "solution": "We start with the given formula\n$$\\Phi = (\\forall x\\,(x \\lor y)) \\lor (\\exists x\\,(\\neg x \\land z)).$$\nFirst, perform alpha-conversion to ensure distinct bound variables in different scopes. Rename the bound variable in the left disjunct to $a$ and in the right disjunct to $b$:\n$$\\Phi \\equiv (\\forall a\\,(a \\lor y)) \\lor (\\exists b\\,(\\neg b \\land z)).$$\nUse the standard prenex transformation rule for disjunction with an existential quantifier: if $b$ is not free in $\\alpha$, then $\\alpha \\lor (\\exists b\\,\\gamma) \\equiv \\exists b\\,(\\alpha \\lor \\gamma)$. Here, $\\alpha$ is $(\\forall a\\,(a \\lor y))$ and $b$ is not free in it, so\n$$(\\forall a\\,(a \\lor y)) \\lor (\\exists b\\,(\\neg b \\land z)) \\equiv \\exists b\\,\\big((\\forall a\\,(a \\lor y)) \\lor (\\neg b \\land z)\\big).$$\nNext, use the prenex transformation for disjunction with a universal quantifier: if $a$ is not free in $\\beta$, then $(\\forall a\\,\\varphi) \\lor \\beta \\equiv \\forall a\\,(\\varphi \\lor \\beta)$. Here, $\\beta$ is $(\\neg b \\land z)$ and $a$ is not free in it, hence\n$$\\exists b\\,\\big((\\forall a\\,(a \\lor y)) \\lor (\\neg b \\land z)\\big) \\equiv \\exists b\\,\\forall a\\,\\big((a \\lor y) \\lor (\\neg b \\land z)\\big).$$\nThus, a prenex normal form equivalent to $\\Phi$ is\n$$\\exists b\\,\\forall a\\,\\big((a \\lor y) \\lor (\\neg b \\land z)\\big),$$\nwhich matches option C. (Option A violates the distinct variable requirement; options B, D, and E alter the connective structure or quantifier types in ways that are not equivalent to the original formula.)", "answer": "$$\\boxed{C}$$", "id": "1467507"}, {"introduction": "The significance of TQBF as a PSPACE-complete problem stems from its remarkable ability to express complex computational questions as logical formulas. This final exercise gives you a hands-on taste of this concept, asking you to encode constraints from a simple computational model into a QBF. This task directly mirrors the central idea behind the PSPACE-hardness proof for TQBF, demonstrating how logic can be used to describe the existence of a valid, accepting computation path [@problem_id:1467536].", "problem": "Consider a simple computational model whose configuration is described by a set of $n$ Boolean variables, $V = \\{v_1, v_2, \\dots, v_n\\}$, where $n$ is an even integer and $n \\ge 4$. A specific assignment of true/false values to these variables represents a single state of the system.\n\nA state is defined as \"well-formed\" if and only if exactly one variable from the first half of the set, $\\{v_1, v_2, \\dots, v_{n/2}\\}$, is assigned the value true. All other variables in this first half must be false.\n\nA state is defined as \"accepting\" if and only if the last variable, $v_n$, is assigned the value true.\n\nYour task is to construct a formula that determines if there is any possible state that is simultaneously well-formed and accepting. Which of the following Quantified Boolean Formulas (QBFs) correctly evaluates to true if and only if such a state exists?\n\nA. $\\exists v_1 \\dots \\exists v_n \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land \\left( \\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j) \\right) \\land v_n \\right)$\n\nB. $\\forall v_1 \\dots \\forall v_n \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land \\left( \\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j) \\right) \\land v_n \\right)$\n\nC. $\\exists v_1 \\dots \\exists v_n \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land v_n \\right)$\n\nD. $\\exists v_1 \\dots \\exists v_n \\left( \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land \\left( \\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j) \\right) \\right) \\rightarrow v_n \\right)$\n\nE. $\\exists v_1 \\dots \\exists v_{n/2} \\forall v_{n/2+1} \\dots \\forall v_n \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land \\left( \\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j) \\right) \\land v_n \\right)$", "solution": "We are asked to construct a Quantified Boolean Formula that evaluates to true if and only if there exists an assignment of the variables $v_1,\\dots,v_n$ such that the state is simultaneously well-formed and accepting. By definition, a state is well-formed if exactly one variable among $\\{v_1,\\dots,v_{n/2}\\}$ is true, and accepting if $v_n$ is true.\n\nThe requirement “exactly one of $\\{v_1,\\dots,v_{n/2}\\}$ is true” can be encoded as the conjunction of:\n- an “at least one” clause $\\bigvee_{i=1}^{n/2} v_i$, and\n- an “at most one” clause $\\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j)$, which enforces that no two among the first half are simultaneously true.\n\nDefine the well-formedness condition as\n$$\nW \\equiv \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land \\left( \\bigwedge_{1 \\le i < j \\le n/2} (\\neg v_i \\lor \\neg v_j) \\right),\n$$\nand the accepting condition as\n$$\nA \\equiv v_n.\n$$\nThe existence of a state that is both well-formed and accepting is then exactly captured by the existential QBF\n$$\n\\exists v_1 \\dots \\exists v_n \\left( W \\land A \\right).\n$$\nThis matches option A.\n\nTo verify the other options are incorrect, use the semantics of quantifiers: $\\exists x\\,\\phi$ is true if there exists a value of $x$ making $\\phi$ true; $\\forall x\\,\\phi$ is true if for both values of $x$, $\\phi$ is true.\n\n- Option B uses universal quantification over all variables:\n$$\n\\forall v_1 \\dots \\forall v_n \\left( W \\land v_n \\right).\n$$\nThis asserts that every assignment is well-formed and has $v_n$ true, which is false (e.g., the assignment with all variables false violates both $\\bigvee_{i=1}^{n/2} v_i$ and $v_n$). Hence B is not equivalent to the desired existential property.\n\n- Option C omits the “at most one” constraint:\n$$\n\\exists v_1 \\dots \\exists v_n \\left( \\left( \\bigvee_{i=1}^{n/2} v_i \\right) \\land v_n \\right).\n$$\nThis allows assignments where multiple variables among the first half are true. Therefore it does not enforce well-formedness and can be true even when the selected assignment is not well-formed; it does not encode the required “exactly one” condition.\n\n- Option D replaces conjunction with an implication:\n$$\n\\exists v_1 \\dots \\exists v_n \\left( \\left( W \\right) \\rightarrow v_n \\right).\n$$\nUnder existential quantification, one can choose values making the antecedent $W$ false (e.g., set all of $v_1,\\dots,v_{n/2}$ to false), which makes the implication true regardless of $v_n$. Thus this formula can be satisfied without producing a well-formed accepting assignment, so it is not equivalent to the required property.\n\n- Option E quantifies $\\exists$ over the first half and $\\forall$ over the second half including $v_n$:\n$$\n\\exists v_1 \\dots \\exists v_{n/2} \\;\\forall v_{n/2+1} \\dots \\forall v_n \\left( W \\land v_n \\right).\n$$\nBecause $v_n$ is universally quantified, the matrix must hold for both $v_n$ true and $v_n$ false. But the conjunct requires $v_n$ to be true, so the case $v_n$ false falsifies the matrix, making the QBF false. Hence E is not correct.\n\nTherefore, the correct encoding is exactly option A.", "answer": "$$\\boxed{A}$$", "id": "1467536"}]}