{"hands_on_practices": [{"introduction": "The journey into computational complexity often begins by mastering the fundamentals. This first exercise explores the simplest form of a CNF formula, the 1-CNF. By determining the exact condition for a 1-CNF formula to be satisfiable, you will uncover the most basic form of logical contradiction, providing a crucial foundation for tackling more complex satisfiability problems. This practice solidifies the core concept of what it means for a set of logical constraints to be fundamentally inconsistent [@problem_id:1418346].", "problem": "In computational complexity theory, a Boolean formula is said to be in Conjunctive Normal Form (CNF) if it is a conjunction (AND, denoted by $\\land$) of one or more clauses, where each clause is a disjunction (OR, denoted by $\\lor$) of literals. A literal is either a Boolean variable (e.g., $x_i$) or its negation (e.g., $\\neg x_i$).\n\nA special case of this is a **1-CNF formula**, where every clause consists of exactly one literal. For example, $\\phi = (x_1) \\land (\\neg x_2) \\land (x_3)$ is a 1-CNF formula.\n\nA formula is called **satisfiable** if there exists at least one truth assignment (an assignment of TRUE or FALSE to each variable) that makes the entire formula evaluate to TRUE. If no such assignment exists, the formula is unsatisfiable.\n\nA student is tasked with creating a very efficient algorithm to determine if a given 1-CNF formula is satisfiable. They realize that due to the simple structure of 1-CNF, there must be a straightforward condition that is both necessary and sufficient for satisfiability.\n\nWhich of the following conditions is both necessary and sufficient for any given 1-CNF formula to be satisfiable?\n\nA. The formula contains at most one clause.\n\nB. For every variable $x$, the formula does not simultaneously contain a clause $(x)$ and a clause $(\\neg x)$.\n\nC. The number of clauses is strictly less than the number of distinct variables appearing in the formula.\n\nD. Every variable appears in at most one clause.\n\nE. At least one variable in the formula appears only as a positive literal (e.g., $x_i$) or only as a negative literal (e.g., $\\neg x_j$).", "solution": "Let a 1-CNF formula be written as a conjunction of unit clauses:\n$$\n\\phi \\;=\\; \\bigwedge_{i=1}^{m} L_{i},\n$$\nwhere each $L_{i}$ is a literal, i.e., either $x$ or $\\neg x$ for some variable $x$. A truth assignment satisfies $\\phi$ if and only if every clause evaluates to TRUE.\n\nWe claim that the following condition is both necessary and sufficient for satisfiability:\nFor every variable $x$, $\\phi$ does not contain both $(x)$ and $(\\neg x)$ as clauses. This is precisely option B.\n\nNecessity: Suppose $\\phi$ contains both $(x)$ and $(\\neg x)$ for some variable $x$. If an assignment sets $x=\\text{TRUE}$, then $(\\neg x)$ is FALSE; if it sets $x=\\text{FALSE}$, then $(x)$ is FALSE. Hence no assignment can make both clauses TRUE simultaneously, so $\\phi$ is unsatisfiable. Therefore, the condition in B is necessary.\n\nSufficiency: Suppose that for every variable $x$, $\\phi$ does not contain both $(x)$ and $(\\neg x)$. Define an assignment $a$ by:\n- If $(x)$ appears in $\\phi$, set $a(x)=\\text{TRUE}$.\n- Else if $(\\neg x)$ appears in $\\phi$, set $a(x)=\\text{FALSE}$.\n- Else (if $x$ does not appear), set $a(x)$ arbitrarily.\nUnder $a$, any clause $(x)$ is TRUE and any clause $(\\neg x)$ is TRUE by construction. Hence all clauses in $\\phi$ are TRUE, so $\\phi$ is satisfiable. Therefore, the condition in B is sufficient.\n\nTo confirm that no other option is both necessary and sufficient:\n- A (at most one clause) is not necessary: for example, $(x_{1}) \\land (x_{2})$ is satisfiable with two clauses.\n- C (number of clauses strictly less than number of distinct variables) is not necessary: $(x)$ has one clause and one variable, so the inequality fails, yet it is satisfiable. Although C is sufficient (if $m<n$, then unsatisfiability would require at least one variable to appear with both polarities, which forces $m \\geq n+1$, a contradiction), it is not necessary.\n- D (every variable appears in at most one clause) is not necessary: $(x) \\land (x)$ is satisfiable but violates D. It is sufficient but not necessary.\n- E (at least one variable appears only with one polarity) is not sufficient: $(x) \\land (y) \\land (\\neg y)$ is unsatisfiable but satisfies E. It is also not characterizing in general.\n\nThus, only B is both necessary and sufficient.", "answer": "$$\\boxed{B}$$", "id": "1418346"}, {"introduction": "Building on the principle of direct contradiction, we now advance to 2-CNF formulas. While satisfiability for 2-CNF is still efficiently decidable, the logical relationships become more intricate. This practice challenges you to analyze how clauses with two literals interact, forcing you to trace chains of implications to uncover a hidden contradiction. Successfully identifying the unsatisfiable formula among the options will sharpen your ability to reason about logical dependencies, a skill essential for both theoretical analysis and practical problem-solving [@problem_id:1418317].", "problem": "In Boolean logic, a formula is in Conjunctive Normal Form (CNF) if it is a conjunction (AND, $\\land$) of one or more clauses, where a clause is a disjunction (OR, $\\lor$) of literals. A literal is a Boolean variable or its negation (e.g., $x_1$ or $\\neg x_1$). A formula is in 2-CNF if every clause contains at most two literals.\n\nA formula is said to be 'satisfiable' if there exists at least one truth assignment (an assignment of 'true' or 'false' to each variable) that makes the entire formula evaluate to 'true'. If no such assignment exists, the formula is 'unsatisfiable'.\n\nConsider the three Boolean variables $x_1, x_2, x_3$. Which one of the following 2-CNF formulas is unsatisfiable?\n\nA. $(x_1 \\lor x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_2 \\lor \\neg x_3)$\n\nB. $(x_1 \\lor x_2) \\land (x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_1 \\lor \\neg x_3)$\n\nC. $(x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_2) \\land (x_1 \\lor x_3)$\n\nD. $(\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_2 \\lor \\neg x_3) \\land (\\neg x_3 \\lor \\neg x_1)$", "solution": "A 2-CNF formula is satisfiable if and only if there exists an assignment of truth values to its variables that makes every clause evaluate to the truth constant $\\top$. To prove satisfiability, it suffices to exhibit one such assignment. To prove unsatisfiability, it suffices to derive a contradiction, for example by using the resolution rule\n$$(A \\lor B)\\land(\\neg A \\lor C)\\;\\vdash\\;(B \\lor C),$$\nand the law of non-contradiction (no assignment can make both $x$ and $\\neg x$ true).\n\nConsider option A:\n$$(x_1 \\lor x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_2 \\lor \\neg x_3).$$\nLet $\\sigma_{A}$ be the assignment with $\\sigma_{A}(x_1)=\\top$, $\\sigma_{A}(x_2)=\\bot$, $\\sigma_{A}(x_3)=\\top$. Then\n$$x_1 \\lor x_2=\\top \\lor \\bot=\\top,$$\n$$\\neg x_1 \\lor x_3=\\neg \\top \\lor \\top=\\bot \\lor \\top=\\top,$$\n$$\\neg x_2 \\lor \\neg x_3=\\neg \\bot \\lor \\neg \\top=\\top \\lor \\bot=\\top.$$\nAll clauses evaluate to $\\top$, so A is satisfiable.\n\nConsider option C:\n$$(x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_2) \\land (x_1 \\lor x_3).$$\nLet $\\sigma_{C}$ be the assignment with $\\sigma_{C}(x_1)=\\top$, $\\sigma_{C}(x_2)=\\top$, $\\sigma_{C}(x_3)=\\bot$. Then\n$$x_1 \\lor \\neg x_2=\\top \\lor \\neg \\top=\\top \\lor \\bot=\\top,$$\n$$\\neg x_1 \\lor x_2=\\neg \\top \\lor \\top=\\bot \\lor \\top=\\top,$$\n$$x_1 \\lor x_3=\\top \\lor \\bot=\\top.$$\nAll clauses evaluate to $\\top$, so C is satisfiable.\n\nConsider option D:\n$$(\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_2 \\lor \\neg x_3) \\land (\\neg x_3 \\lor \\neg x_1).$$\nLet $\\sigma_{D}$ be the assignment with $\\sigma_{D}(x_1)=\\top$, $\\sigma_{D}(x_2)=\\bot$, $\\sigma_{D}(x_3)=\\bot$. Then\n$$\\neg x_1 \\lor \\neg x_2=\\neg \\top \\lor \\neg \\bot=\\bot \\lor \\top=\\top,$$\n$$\\neg x_2 \\lor \\neg x_3=\\neg \\bot \\lor \\neg \\bot=\\top \\lor \\top=\\top,$$\n$$\\neg x_3 \\lor \\neg x_1=\\neg \\bot \\lor \\neg \\top=\\top \\lor \\bot=\\top.$$\nAll clauses evaluate to $\\top$, so D is satisfiable.\n\nConsider option B:\n$$(x_1 \\lor x_2) \\land (x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor x_3) \\land (\\neg x_1 \\lor \\neg x_3).$$\nApply the resolution rule to the last two clauses on $x_3$:\n$$(\\neg x_1 \\lor x_3)\\land(\\neg x_1 \\lor \\neg x_3)\\;\\vdash\\;\\neg x_1.$$\nApply the resolution rule to the first two clauses on $x_2$:\n$$(x_1 \\lor x_2)\\land(x_1 \\lor \\neg x_2)\\;\\vdash\\;x_1.$$\nThus the formula entails both $x_1$ and $\\neg x_1$, which by the law of non-contradiction yields the empty clause $\\bot$. Therefore no assignment can satisfy all clauses, and B is unsatisfiable.\n\nSince A, C, and D are satisfiable and B is not, the unsatisfiable formula is B.", "answer": "$$\\boxed{B}$$", "id": "1418317"}, {"introduction": "We now turn our attention to 3-CNF, a class of problems for which satisfiability is famously difficult (NP-complete). In many real-world scenarios, a perfect solution that satisfies all constraints is impossible. This exercise introduces the MAX-3-SAT problem, shifting the goal from finding a perfect assignment to finding the best possible one. By determining the maximum number of clauses that can be satisfied in a given unsatisfiable formula, you will engage with the practical concept of optimization in the face of logical impossibility, a cornerstone of algorithm design for hard problems [@problem_id:1418325].", "problem": "Consider a Boolean formula $\\phi$ defined over three variables, $x_1, x_2, x_3$. The formula is given in Conjunctive Normal Form (CNF), which is a conjunction (AND) of clauses, where each clause is a disjunction (OR) of literals. A literal is either a variable or its negation (e.g., $x_1$ or $\\neg x_1$). Specifically, $\\phi$ is a 3-CNF formula, meaning every clause contains exactly three distinct literals.\n\nThe formula $\\phi$ is the conjunction of the following eight clauses:\n$C_1 = (x_1 \\lor x_2 \\lor x_3)$\n$C_2 = (x_1 \\lor x_2 \\lor \\neg x_3)$\n$C_3 = (x_1 \\lor \\neg x_2 \\lor x_3)$\n$C_4 = (\\neg x_1 \\lor x_2 \\lor x_3)$\n$C_5 = (x_1 \\lor \\neg x_2 \\lor \\neg x_3)$\n$C_6 = (\\neg x_1 \\lor x_2 \\lor \\neg x_3)$\n$C_7 = (\\neg x_1 \\lor \\neg x_2 \\lor x_3)$\n$C_8 = (\\neg x_1 \\lor \\neg x_2 \\lor \\neg x_3)$\n\nThis formula is unsatisfiable, meaning there is no truth assignment to the variables $(x_1, x_2, x_3)$ that makes all eight clauses simultaneously true. Your task is to solve the corresponding MAX-3-SAT problem for this formula. Determine the maximum number of clauses, $N_{max}$, that can be satisfied by a single truth assignment, and provide one such truth assignment for the variables $(x_1, x_2, x_3)$ that achieves this maximum. In your answer, represent the boolean value True with the number 1 and False with the number 0.", "solution": "We use the Boolean evaluation rule that a clause $(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3})$ is false if and only if each literal evaluates to false under the assignment; otherwise the clause is true. For any assignment $(a_{1},a_{2},a_{3}) \\in \\{0,1\\}^{3}$, define the clause\n$$\nD(a_{1},a_{2},a_{3}) \\equiv \\bigl(\\ell_{1} \\lor \\ell_{2} \\lor \\ell_{3}\\bigr), \\quad \\text{where } \\ell_{i} =\n\\begin{cases}\nx_{i}, & \\text{if } a_{i}=0, \\\\\n\\neg x_{i}, & \\text{if } a_{i}=1.\n\\end{cases}\n$$\nUnder the assignment $(x_{1},x_{2},x_{3})=(a_{1},a_{2},a_{3})$, each $\\ell_{i}$ evaluates to false by construction, hence $D(a_{1},a_{2},a_{3})$ is false. Conversely, any other 3-literal clause on $\\{x_{1},x_{2},x_{3}\\}$ that is not equal to $D(a_{1},a_{2},a_{3})$ must contain at least one literal that agrees with the assignment and therefore is true, making the clause true.\n\nThe given formula $\\phi$ contains all eight possible 3-literal clauses over $\\{x_{1},x_{2},x_{3}\\}$ with distinct sign patterns, i.e., it contains $D(a_{1},a_{2},a_{3})$ for every $(a_{1},a_{2},a_{3}) \\in \\{0,1\\}^{3}$. Therefore, for any assignment, exactly one clause is falsified and the remaining seven are satisfied. Hence the maximum number of simultaneously satisfiable clauses is\n$$\nN_{\\max}=7.\n$$\nAn assignment achieving this maximum is $(x_{1},x_{2},x_{3})=(1,1,1)$. Verifying explicitly:\n$$\n\\begin{aligned}\n&C_{1}=(1\\lor 1\\lor 1)=1,\\quad C_{2}=(1\\lor 1\\lor 0)=1,\\quad C_{3}=(1\\lor 0\\lor 1)=1,\\quad C_{4}=(0\\lor 1\\lor 1)=1,\\\\\n&C_{5}=(1\\lor 0\\lor 0)=1,\\quad C_{6}=(0\\lor 1\\lor 0)=1,\\quad C_{7}=(0\\lor 0\\lor 1)=1,\\quad C_{8}=(0\\lor 0\\lor 0)=0,\n\\end{aligned}\n$$\nso exactly seven clauses are satisfied.", "answer": "$$\\boxed{\\begin{pmatrix} 7 & 1 & 1 & 1 \\end{pmatrix}}$$", "id": "1418325"}]}