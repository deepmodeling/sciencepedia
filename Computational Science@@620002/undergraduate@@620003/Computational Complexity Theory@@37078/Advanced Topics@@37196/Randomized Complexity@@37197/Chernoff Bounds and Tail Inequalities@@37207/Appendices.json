{"hands_on_practices": [{"introduction": "Chernoff bounds are exceptionally useful for risk assessment in large-scale systems composed of many independent components. This first exercise [@problem_id:1414229] grounds the theory in a practical scenario: ensuring the reliability of a distributed storage system. We will calculate an upper bound on the probability of catastrophic failure, which occurs when the number of failing components climbs far above its expected value, demonstrating a classic application of the upper tail inequality.", "problem": "A distributed data storage company, CloudStash Inc., operates a large-scale storage cluster consisting of $k=400$ identical, independent servers. Based on historical data, the probability of any single server failing within a one-year period is $p=0.1$. The company uses an advanced erasure coding scheme that ensures data integrity and availability as long as the number of failed servers does not exceed 50. If more than 50 servers fail within a year, the system suffers a catastrophic data loss event.\n\nTo analyze the risk of such an event, you are tasked with finding an upper bound on its probability. You may use the following multiplicative form of the Chernoff bound. For a sum $X = \\sum_{i=1}^{k} X_i$ of independent indicator random variables, with expectation $\\mu = E[X]$, the probability of deviating from the mean is bounded by:\n$$P(X \\ge (1+\\delta)\\mu) \\le \\exp\\left(-\\frac{\\delta^2 \\mu}{3}\\right), \\quad \\text{for } 0  \\delta \\le 1$$\n\nCalculate the Chernoff bound for the probability of a catastrophic data loss event within a one-year period. Report your answer as a numerical value, rounded to four significant figures.", "solution": "Let $X_{i}$ be the indicator that server $i$ fails within one year, with $P(X_{i}=1)=p$ and $P(X_{i}=0)=1-p$. The variables $\\{X_{i}\\}_{i=1}^{k}$ are independent. The total number of failures is $X=\\sum_{i=1}^{k}X_{i}$, so $E[X]=\\mu=kp$.\n\nGiven $k=400$ and $p=0.1$, the mean is\n$$\n\\mu=400\\times 0.1=40.\n$$\nA catastrophic event occurs if $X>50$, i.e., $X\\ge 51$. Write the threshold as $(1+\\delta)\\mu$:\n$$\n(1+\\delta)\\mu=51 \\quad\\Rightarrow\\quad 1+\\delta=\\frac{51}{40}\\quad\\Rightarrow\\quad \\delta=\\frac{11}{40}.\n$$\nSince $0\\delta\\le 1$, the given Chernoff bound applies:\n$$\nP(X\\ge (1+\\delta)\\mu)\\leq \\exp\\left(-\\frac{\\delta^{2}\\mu}{3}\\right).\n$$\nSubstitute $\\delta=\\frac{11}{40}$ and $\\mu=40$:\n$$\n\\frac{\\delta^{2}\\mu}{3}=\\frac{\\left(\\frac{11}{40}\\right)^{2}\\cdot 40}{3}=\\frac{\\frac{121}{1600}\\cdot 40}{3}=\\frac{\\frac{121}{40}}{3}=\\frac{121}{120}.\n$$\nTherefore,\n$$\nP(X\\ge 51)\\leq \\exp\\left(-\\frac{121}{120}\\right).\n$$\nEvaluating numerically and rounding to four significant figures gives\n$$\n\\exp\\left(-\\frac{121}{120}\\right)\\approx 0.3648.\n$$", "answer": "$$\\boxed{0.3648}$$", "id": "1414229"}, {"introduction": "Beyond bounding the risk of too many failures, we often need to bound the probability of not achieving enough successes. This second practice [@problem_id:1414214] explores this complementary scenario using a lower tail Chernoff bound. We'll analyze the performance of a randomized search algorithm, calculating the probability that it completely fails to make any progress, which provides a powerful tool for understanding algorithm stagnation.", "problem": "A technology firm is developing a new Artificial Intelligence (AI) model that uses a randomized local search algorithm to design novel protein structures. The algorithm operates in discrete steps. At each step, it proposes a modification to the current protein structure and evaluates its predicted stability. A step is considered a \"success\" if the new structure is more stable than any found previously. The engineering team has determined that for this particular search space, the probability of any given step being a success is a constant value $p$, and each step is independent of the others.\n\nThe algorithm is set to run for $N$ consecutive steps. The team is concerned about the algorithm stagnating and failing to find any improvements at all.\n\nFor a random variable $X$ representing the sum of $N$ independent Bernoulli trials each with success probability $p$, the expected number of successes is $\\mu=Np$. To analyze rare events, one can use a Chernoff bound. For this problem, you are to use the following form of the bound for the lower tail:\n$$P(X \\le (1-\\delta)\\mu) \\le \\exp\\left(-\\frac{\\delta^2 \\mu}{2}\\right) \\quad \\text{for } 0  \\delta \\le 1$$\n\nGiven $N=600$ steps and a success probability $p=0.15$, calculate an upper bound for the probability that the algorithm finds zero successful steps over its entire run. Express your answer in scientific notation, rounded to three significant figures.", "solution": "Let $X$ be the number of successes in $N$ independent Bernoulli trials with success probability $p$. Then $X \\sim \\text{Binomial}(N,p)$ and its mean is $\\mu = Np$.\n\nWe are asked to upper bound $P(X=0)$. Since $X$ is a nonnegative integer, $P(X=0) = P(X \\le 0)$. Using the given Chernoff lower-tail bound,\n$$\nP(X \\le (1-\\delta)\\mu) \\le \\exp\\left(-\\frac{\\delta^{2}\\mu}{2}\\right) \\quad \\text{for } 0\\delta \\le 1.\n$$\nTo bound $P(X \\le 0)$, choose $\\delta$ so that $(1-\\delta)\\mu = 0$, which gives $\\delta = 1$ (this is within the allowed range). Therefore,\n$$\nP(X=0) = P(X \\le 0) \\le \\exp\\left(-\\frac{1^{2}\\mu}{2}\\right) = \\exp\\left(-\\frac{\\mu}{2}\\right).\n$$\nWith $N=600$ and $p=0.15$, the mean is\n$$\n\\mu = Np = 600 \\times 0.15 = 90.\n$$\nHence,\n$$\nP(X=0) \\le \\exp\\left(-\\frac{90}{2}\\right) = \\exp(-45).\n$$\nNumerically, $\\exp(-45) \\approx 2.86251858 \\times 10^{-20}$, which rounded to three significant figures is\n$$\n2.86 \\times 10^{-20}.\n$$", "answer": "$$\\boxed{2.86 \\times 10^{-20}}$$", "id": "1414214"}, {"introduction": "The \"Chernoff bound\" is actually a family of inequalities, and choosing the right one can lead to a much tighter analysis. This final exercise [@problem_id:1414267] introduces a more powerful form of the bound to analyze a classic probabilistic data structure: the Bloom filter. By calculating the probability of an extreme number of hash collisions, you will gain hands-on experience with a key tool used to analyze the performance of randomized algorithms and data structures in computer science.", "problem": "A web caching system uses a Bloom filter to quickly determine if a Uniform Resource Locator (URL) has been recently accessed, avoiding costly database lookups. The filter is implemented with a bit array of size $m = 50000$ and uses $k = 4$ independent and uniform hash functions. Initially, all bits in the array are 0. The cache is then populated with $n = 5000$ distinct URLs.\n\nFor each of the $n$ URLs, its value is hashed $k$ times, and the bits at the corresponding $k$ indices in the array are set to 1. When a new URL (one not among the initial $n$ URLs) is checked, we are interested in the number of \"hash collisions,\" which we define as the number of its $k$ hash locations that point to bits already set to 1.\n\nThe number of collisions, $X$, for this new URL can be modeled as a sum of $k$ independent Bernoulli trials. The probability $p$ that any single hash function maps to a bit that is already 1 (the \"fill ratio\" of the filter) is well-approximated by the formula:\n$$p = 1 - \\exp\\left(-\\frac{kn}{m}\\right)$$\nTo analyze the performance under heavy load, you need to find an upper bound on the probability of an extreme collision event. Use the following version of the Chernoff bound. For a random variable $X$ that is the sum of independent Bernoulli trials with an expected value of $\\mu = E[X]$, the probability of deviating significantly above the mean is bounded by:\n$$P(X \\ge (1+\\delta)\\mu) \\le \\left(\\frac{e^{\\delta}}{(1+\\delta)^{1+\\delta}}\\right)^{\\mu} \\quad \\text{for any } \\delta  0$$\n\nUsing this information, calculate an upper bound on the probability that all 4 hash positions for the new URL correspond to bits that are already set to 1. Round your final answer to three significant figures.", "solution": "We model the number of collisions for the new URL as $X=\\sum_{i=1}^{k}Y_{i}$, where the $Y_{i}$ are independent Bernoulli trials with success probability $p$. The filter parameters are $m=50000$, $k=4$, $n=5000$. The fill ratio is approximated by\n$$\np = 1 - \\exp\\left(-\\frac{kn}{m}\\right) = 1 - \\exp\\left(-\\frac{4\\cdot 5000}{50000}\\right) = 1 - \\exp(-0.4).\n$$\nThe expected number of collisions is\n$$\n\\mu = E[X] = k p = 4p.\n$$\nWe are interested in the event that all $4$ hash positions are already set, which is $X=4$. Using the Chernoff bound for the upper tail, with $(1+\\delta)\\mu$ set to the threshold $4$, we solve\n$$\n(1+\\delta)\\mu = 4 \\quad \\Longrightarrow \\quad (1+\\delta)\\cdot 4p = 4 \\quad \\Longrightarrow \\quad 1+\\delta = \\frac{1}{p} \\quad \\Longrightarrow \\quad \\delta = \\frac{1-p}{p}.\n$$\nSubstituting this $\\delta$ and $\\mu$ into the bound\n$$\nP\\big(X \\ge (1+\\delta)\\mu\\big) \\le \\left(\\frac{\\exp(\\delta)}{(1+\\delta)^{1+\\delta}}\\right)^{\\mu},\n$$\nwe get\n$$\nP(X \\ge 4) \\le \\left(\\frac{\\exp\\left(\\frac{1-p}{p}\\right)}{\\left(\\frac{1}{p}\\right)^{\\frac{1}{p}}}\\right)^{4p}\n= \\left(\\exp\\left(\\frac{1-p}{p}\\right)p^{\\frac{1}{p}}\\right)^{4p}\n= \\exp\\big(4(1-p)\\big)\\,p^{4}.\n$$\nThus an explicit Chernoff upper bound for the probability that all $4$ positions are already $1$ is\n$$\n\\exp\\big(4(1-p)\\big)\\,p^{4} \\quad \\text{with} \\quad p=1-\\exp(-0.4).\n$$\nNow evaluate numerically:\n$$\np = 1 - \\exp(-0.4) \\approx 0.329679953964361,\n$$\n$$\np^{4} \\approx 0.0118132709059,\\quad \\exp\\big(4(1-p)\\big) = \\exp\\big(4\\exp(-0.4)\\big) \\approx \\exp(2.681280184142556) \\approx 14.6037664347,\n$$\nso\n$$\nP(X=4) \\le \\exp\\big(4(1-p)\\big)\\,p^{4} \\approx 14.6037664347 \\times 0.0118132709059 \\approx 0.172518.\n$$\nRounding to three significant figures gives $0.173$.", "answer": "$$\\boxed{0.173}$$", "id": "1414267"}]}