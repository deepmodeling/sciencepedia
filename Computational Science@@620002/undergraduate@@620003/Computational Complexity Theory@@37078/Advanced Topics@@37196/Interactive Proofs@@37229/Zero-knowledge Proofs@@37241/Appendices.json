{"hands_on_practices": [{"introduction": "Zero-knowledge proofs are built upon three pillars: completeness, soundness, and the zero-knowledge property itself. This first exercise [@problem_id:1470205] challenges you to analyze a simple, intuitive protocol for proving knowledge of a graph 3-coloring. By identifying a critical flaw in its design, you will develop a sharp intuition for what \"zero-knowledge\" truly means and why simply proving a statement's truth is not enough.", "problem": "In the field of cryptography and computational complexity, a Zero-Knowledge Proof (ZKP) is a method by which one party (the prover) can prove to another party (the verifier) that they know a secret value or piece of information (a \"witness\"), without conveying any information apart from the fact that their statement is true.\n\nConsider a scenario involving a prover, Peggy, and a verifier, Victor. They both have access to a public, undirected graph $G = (V, E)$. Peggy claims that she knows a valid 3-coloring of this graph. A valid 3-coloring is an assignment of a color from the set $\\{\\text{Red, Green, Blue}\\}$ to each vertex in $V$ such that for every edge $(u, v) \\in E$, the colors of the connected vertices are different, i.e., $C(u) \\neq C(v)$.\n\nTo prove her claim, Peggy and Victor engage in the following protocol:\n1.  Victor chooses an edge $(u, v) \\in E$ uniformly at random and asks Peggy for the colors of its endpoints.\n2.  Peggy consults her secret 3-coloring and reveals the pair of colors $(C(u), C(v))$ to Victor.\n3.  Victor verifies that the two colors are indeed from the set $\\{\\text{Red, Green, Blue}\\}$ and that they are not identical. If this check passes, he becomes more confident in Peggy's claim. If it fails, he rejects the claim immediately.\n\nThis protocol, however, has a critical flaw and fails to satisfy one of the core properties required for a protocol to be a ZKP. Which of the following properties is most directly and fundamentally violated by this protocol's design?\n\nA. **Completeness**: The property that if the prover's statement is true, an honest prover will always be able to convince an honest verifier.\n\nB. **Soundness**: The property that if the prover's statement is false, a cheating prover will be unable to convince an honest verifier (except with a negligible probability).\n\nC. **Zero-Knowledge**: The property that the verifier learns no new information, other than the fact that the prover's statement is true.\n\nD. **Efficiency**: The property that the protocol can be completed in a reasonable amount of time (typically, polynomial time in the size of the problem).", "solution": "We analyze the protocol against the core properties of a zero-knowledge proof, using precise logical steps.\n\n1) Definitions of the properties:\n- Completeness: If Peggy knows a valid 3-coloring, then for any queried edge $(u,v)\\in E$, the colors assigned by her witness coloring satisfy $C(u)\\neq C(v)$, so Victor’s check passes.\n- Soundness: If the statement is false (i.e., there is no valid 3-coloring for $G$), then no cheating prover should be able to make an honest verifier accept except with negligible probability.\n- Zero-Knowledge: The verifier should learn no information beyond the truth of the statement. Formally, there should exist a simulator that can generate the verifier’s view (its transcript distribution) without access to the witness; equivalently, the verifier’s view should be simulatable without revealing witness information.\n- Efficiency: The protocol runs in time polynomial in $|V|+|E|$.\n\n2) Check completeness:\n- If Peggy is honest and possesses a valid 3-coloring $C:V\\to\\{\\text{R},\\text{G},\\text{B}\\}$, then for any randomly chosen edge $(u,v)$, the protocol reveals $(C(u),C(v))$ with $C(u)\\neq C(v)$.\n- Victor’s check is exactly that the colors are in the allowed set and unequal, which necessarily holds, so the round passes.\n- Therefore, the protocol satisfies completeness.\n\n3) Check soundness:\n- If the statement is false (no valid 3-coloring exists), a cheating Peggy is not bound by any commitment to a single global coloring in this protocol. On each query edge $(u,v)$, she can respond with any pair of distinct colors from $\\{\\text{R},\\text{G},\\text{B}\\}$, ensuring Victor’s check passes every time.\n- Hence, the verifier can be convinced with probability $1$ even when the statement is false, violating soundness.\n\n4) Check zero-knowledge:\n- In each round, Victor learns the actual colors of the endpoints $(u,v)$, namely $(C(u),C(v))$. These values are part of the witness (the coloring function $C$). Over multiple rounds, the transcript accumulates explicit witness information about specific vertices.\n- This information is more than “the statement is true,” because it directly reveals entries of the witness. A simulator without access to $C$ cannot reproduce the exact distribution of the transcript that contains the specific true values $(C(u),C(v))$ revealed by the prover.\n- Therefore, the protocol leaks witness information and fails the zero-knowledge property.\n\n5) Check efficiency:\n- Each round consists of choosing an edge uniformly at random and checking inequality of two colors, which is polynomial-time.\n\n6) Identifying the most directly and fundamentally violated property:\n- The protocol’s explicit design choice to “reveal the pair of colors $(C(u),C(v))$” directly discloses witness information to the verifier. This is a direct violation of zero-knowledge by construction.\n- Although soundness also fails due to the lack of a binding mechanism (no commitments), the question asks for the property most directly and fundamentally violated by the protocol’s design. The explicit leakage of actual colors is the immediate violation of the zero-knowledge requirement.\n\nConclusion: The property most directly and fundamentally violated is Zero-Knowledge.", "answer": "$$\\boxed{C}$$", "id": "1470205"}, {"introduction": "A theoretically secure protocol can be rendered insecure by a simple implementation mistake. This practice [@problem_id:1470174] explores a classic vulnerability in commitment-based proofs: the reuse of randomness. You will step into the shoes of an attacker and use a prover's faulty responses to perform a concrete calculation, recovering their secret key and demonstrating the vital importance of cryptographic hygiene.", "problem": "In a system using a Zero-Knowledge Proof (ZKP) protocol, a prover, Alice, wants to demonstrate to a verifier, Bob, that she possesses a secret integer key $s$. This secret is a square root of her public key $v$ modulo a composite number $n$, such that $s^2 \\equiv v \\pmod{n}$. The values of $n$ and $v$ are public, but the prime factors of $n$ are kept secret.\n\nThe protocol for a single round of proof proceeds as follows:\n1.  **Commitment**: Alice chooses a secret random integer $r$ (where $\\text{gcd}(r,n)=1$), computes the commitment value $x \\equiv r^2 \\pmod{n}$, and sends $x$ to Bob.\n2.  **Challenge**: Bob sends back a random challenge bit $c \\in \\{0, 1\\}$.\n3.  **Response**: Alice computes a response $y$. If $c=0$, she sends $y=r$. If $c=1$, she sends $y=rs \\pmod{n}$.\n4.  **Verification**: If $c=0$, Bob verifies that $y^2 \\equiv x \\pmod{n}$. If $c=1$, Bob verifies that $y^2 \\equiv xv \\pmod{n}$.\n\nSuppose the public values are $n=3127$ and $v=619$. Due to a software bug, Alice's authentication client uses the *same* commitment value $x$ (and therefore the same random number $r$) in two consecutive authentication sessions with Bob.\n\nIn the first session, Bob challenges with $c_1=0$ and Alice responds with $y_1=500$.\nIn the second session, Bob, noticing the repeated commitment, cleverly challenges with $c_2=1$. Alice's faulty client responds with $y_2=3095$.\n\nBy exploiting this flaw, Bob can deduce Alice's secret key $s$. What is the value of this secret key $s$? The answer must be an integer between $0$ and $n-1$, inclusive.", "solution": "Alice reused the same commitment $x \\equiv r^{2} \\pmod{n}$ across two sessions, so both responses correspond to the same $r$. From the protocol:\n- With $c_{1}=0$, Alice sent $y_{1}=r=500$.\n- With $c_{2}=1$, Alice sent $y_{2} \\equiv rs \\pmod{3127}$, where $y_{2}=3095$.\n\nBecause $\\gcd(r,n)=1$ by protocol design, $r$ has a multiplicative inverse modulo $n$. Hence,\n$$\ns \\equiv y_{2}\\,r^{-1} \\equiv y_{2}\\,y_{1}^{-1} \\pmod{3127}.\n$$\n\nWe first compute $y_{1}^{-1} \\bmod 3127$ via the extended Euclidean algorithm. Compute the gcd chain:\n$$\n3127=6\\cdot 500+127,\\quad 500=3\\cdot 127+119,\\quad 127=1\\cdot 119+8,\n$$\n$$\n119=14\\cdot 8+7,\\quad 8=1\\cdot 7+1,\\quad 7=7\\cdot 1+0,\n$$\nso $\\gcd(500,3127)=1$. Back-substitution gives\n$$\n1=8-1\\cdot 7=15\\cdot 8-1\\cdot 119=15\\cdot 127-16\\cdot 119\n$$\n$$\n=15\\cdot 127-16\\cdot(500-3\\cdot 127)=63\\cdot 127-16\\cdot 500\n$$\n$$\n=63\\cdot(3127-6\\cdot 500)-16\\cdot 500=63\\cdot 3127-394\\cdot 500.\n$$\nThus\n$$\n-394\\cdot 500 \\equiv 1 \\pmod{3127}\\quad\\Rightarrow\\quad 500^{-1} \\equiv 2733 \\pmod{3127}.\n$$\n\nTherefore,\n$$\ns \\equiv 3095\\cdot 2733 \\pmod{3127}.\n$$\nReduce factors to simplify: $3095 \\equiv -32 \\pmod{3127}$ and $2733 \\equiv -394 \\pmod{3127}$, so\n$$\ns \\equiv (-32)\\cdot(-394)=12608 \\pmod{3127}.\n$$\nNow reduce $12608$ modulo $3127$:\n$$\n12608-4\\cdot 3127=12608-12508=100,\n$$\nso $s \\equiv 100 \\pmod{3127}$.\n\nVerify against the public key $v$:\n$$\ns^{2}=100^{2}=10000 \\equiv 10000-3\\cdot 3127=10000-9381=619 \\equiv v \\pmod{3127}.\n$$\nHence the deduced secret key is $s=100$.", "answer": "$$\\boxed{100}$$", "id": "1470174"}, {"introduction": "Beyond flaws in design or implementation, zero-knowledge proofs can be vulnerable to attacks that exploit the very interaction between parties. This final practice [@problem_id:1470165] presents a scenario where a malicious actor positions herself between an honest prover and an honest verifier. Your task is to identify the \"man-in-the-middle\" relay attack, a classic strategy that allows an attacker to prove knowledge of a secret they do not possess, highlighting that protocol security must be analyzed within its communication environment.", "problem": "In computational complexity theory, a Zero-Knowledge Proof (ZKP) allows a prover to convince a verifier that a statement is true, without revealing any information beyond the validity of the statement itself.\n\nConsider the graph 3-coloring problem. A graph $G=(V, E)$ is 3-colorable if one can assign one of three colors (e.g., red, green, blue) to each vertex in $V$ such that no two adjacent vertices (connected by an edge in $E$) share the same color. Proving that a large, complex graph is 3-colorable is computationally difficult, but verifying a given coloring is easy.\n\nA standard interactive ZKP protocol for a prover, Peggy, to convince a verifier, Victor, that she knows a valid 3-coloring $c: V \\to \\{\\text{red, green, blue}\\}$ for a public graph $G$ proceeds in rounds as follows:\n\n1.  **Commitment:** Peggy first chooses a random permutation $\\pi$ of the three colors. She applies this permutation to her entire coloring to get a new, scrambled coloring $c' = \\pi \\circ c$. For each vertex $v \\in V$, she commits to its new color $c'(v)$ using a cryptographically secure commitment scheme, which can be thought of as a function $\\text{Commit}(\\text{message}, \\text{salt})$. She sends the set of all commitments, $\\{C_v\\}_{v \\in V}$ where $C_v = \\text{Commit}(c'(v), \\text{salt}_v)$, to Victor. The $\\text{salt}$ is a large random number unique to each commitment.\n\n2.  **Challenge:** Victor randomly selects a single edge $(u, w) \\in E$ and asks Peggy to reveal the colors for the two vertices of that edge.\n\n3.  **Response:** Peggy reveals the permuted colors $c'(u)$, $c'(w)$ and the corresponding salts, $\\text{salt}_u$ and $\\text{salt}_w$.\n\n4.  **Verification:** Victor checks two conditions:\n    a) The revealed information is authentic: $\\text{Commit}(c'(u), \\text{salt}_u) = C_u$ and $\\text{Commit}(c'(w), \\text{salt}_w) = C_w$.\n    b) The coloring property holds for the edge: $c'(u) \\neq c'(w)$.\n\nIf both checks pass, the round is successful. The protocol is repeated for a number of rounds sufficient to make the probability of a cheating prover succeeding infinitesimally small.\n\nNow, consider a scenario with three parties:\n-   **Peggy:** An honest prover who possesses a valid 3-coloring for a large, public graph $G$.\n-   **Charlie:** An honest verifier.\n-   **Mallory:** A malicious party who does **not** know a 3-coloring for $G$, but wishes to convince Charlie that she does.\n\nMallory is able to engage in two protocol sessions concurrently: one as a \"prover\" with Charlie, and another as a \"verifier\" with Peggy.\n\nWhich of the following strategies allows Mallory to successfully pass every verification round with Charlie, thereby deceptively proving knowledge of the coloring, without ever being detected?\n\n- **A:** In her session with Peggy, Mallory requests that Peggy reveal her entire secret 3-coloring, $c$. Mallory then uses this revealed coloring to honestly prove her knowledge to Charlie in the other session.\n\n- **B:** Mallory initiates her session with Charlie by sending commitments to randomly generated data for each vertex. When Charlie issues a challenge for an edge $(u,w)$, Mallory is unable to provide a valid response for her original commitments. Instead, she chooses two different colors at random, 'red' and 'green', and claims they correspond to vertices $u$ and $w$, hoping this guess passes verification.\n\n- **C:** Mallory initiates her session with Charlie by sending her own set of commitments, $\\{C'_v\\}_{v \\in V}$. Concurrently, she initiates a session with Peggy. When Charlie challenges her with an edge $(u,w)$, Mallory passes the same challenge to Peggy. Upon receiving Peggy's response (colors and salts), Mallory uses those colors in her own response to Charlie.\n\n- **D:** Mallory initiates a session with Peggy. When Peggy sends her set of commitments $\\{C_v\\}_{v \\in V}$, Mallory forwards this exact set of commitments to Charlie as her own. When Charlie challenges her with an edge $(u,w)$, Mallory forwards this exact challenge to Peggy. When Peggy sends her response, Mallory forwards that exact response to Charlie.\n\n- **E:** Mallory passively eavesdrops on many separate proof sessions between Peggy and other verifiers. She records all the edge challenges and the corresponding revealed color pairs. After collecting enough data, she attempts to reconstruct the full coloring $c$ and use it in her session with Charlie.", "solution": "We analyze each proposed strategy using the properties of the protocol and the commitment scheme. The key cryptographic properties used are:\n- Hiding: For each $v \\in V$, the commitment $C_v=\\text{Commit}(c'(v),\\text{salt}_v)$ reveals no information about $c'(v)$ without the opening.\n- Binding: After $C_v$ is fixed, Peggy (or anyone claiming that $C_v$ is theirs) cannot later open $C_v$ to a different color-salt pair.\n- Zero-knowledge: Transcripts of the protocol reveal no knowledge of the original coloring $c$, because colors are randomly permuted each round via $c'=\\pi \\circ c$ and only colors of a single challenged edge are ever revealed.\n- Soundness against random guessing: Without valid openings matching prior commitments, a prover cannot consistently pass verification.\n\nOption A: Mallory asks Peggy to reveal the entire coloring $c$. Peggy is an honest prover and follows the protocol, which never requires revealing $c$ in full. By zero-knowledge, Peggy will not leak $c$. Therefore, Mallory cannot obtain $c$ this way. This strategy fails.\n\nOption B: Mallory commits to random data and, upon receiving a challenge $(u,w)$, attempts to answer with random colors. By binding, Mallory’s original commitments fix the openings. Since her random reply will almost surely not match her original commitments, Victor’s check $\\text{Commit}(c'(u),\\text{salt}_u)=C_u$ and $\\text{Commit}(c'(w),\\text{salt}_w)=C_w$ will fail. Even if she tries to guess both colors and salts, without matching the prior commitments this is infeasible. This cannot pass every round. This strategy fails.\n\nOption C: Mallory sends her own commitments $\\{C'_v\\}$ to Charlie, but upon receiving a challenge $(u,w)$, she relays that challenge to Peggy to obtain an authentic opening for Peggy’s commitments $\\{C_v\\}$. However, Mallory’s commitments $C'_v$ are independent of Peggy’s $C_v$ because they were fixed before seeing Peggy’s openings and use different salts and possibly different permutations. By binding, Mallory cannot open $C'_u,C'_w$ to match Peggy’s colors and salts unless by coincidence, which is computationally infeasible. Thus Victor’s authentication check against $C'_u,C'_w$ fails. This strategy fails.\n\nOption D: Mallory forwards Peggy’s commitments $\\{C_v\\}$ to Charlie as her own. When Charlie challenges $(u,w)$, Mallory forwards the challenge to Peggy and then forwards Peggy’s exact response $(c'(u),\\text{salt}_u)$ and $(c'(w),\\text{salt}_w)$ to Charlie. Victor’s verification checks:\n1) Authenticity: $\\text{Commit}(c'(u),\\text{salt}_u)=C_u$ and $\\text{Commit}(c'(w),\\text{salt}_w)=C_w$ pass because these are Peggy’s genuine openings to Peggy’s commitments, which Charlie believes are Mallory’s due to the forwarding.\n2) Proper coloring: $c'(u)\\neq c'(w)$ holds because Peggy’s coloring is valid under the permutation.\nBecause Mallory relays exactly the valid commitments and openings from Peggy, every verification round with Charlie will pass. Concurrency ensures Mallory can obtain Peggy’s openings after seeing Charlie’s challenge. This is the classic man-in-the-middle relay attack on this plain interactive protocol, exploiting the lack of non-malleability. This strategy succeeds.\n\nOption E: Mallory eavesdrops on many sessions. Due to zero-knowledge and the per-round random permutation $\\pi$, the revealed colors on edges are relative to fresh permutations and do not accumulate into knowledge of $c$. The hiding property of commitments prevents learning unopened colors. Reconstructing $c$ from these transcripts is computationally infeasible, and thus Mallory cannot later prove knowledge to Charlie. This strategy fails.\n\nTherefore, only Option D enables Mallory to pass every verification round with Charlie without being detected, by relaying Peggy’s commitments and responses unchanged.", "answer": "$$\\boxed{D}$$", "id": "1470165"}]}