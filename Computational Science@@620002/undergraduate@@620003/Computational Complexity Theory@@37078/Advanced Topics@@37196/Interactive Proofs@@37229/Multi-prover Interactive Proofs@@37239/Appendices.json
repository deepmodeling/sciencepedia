{"hands_on_practices": [{"introduction": "Our first practice problem delves into the classic task of graph coloring, providing a foundational entry point into Multi-prover Interactive Proofs (MIP). Here, we explore how a verifier can use two isolated provers to test the 2-colorability of a simple graph. This exercise [@problem_id:1432453] demonstrates the fundamental power of the MIP model: by forcing the provers to commit to a coloring strategy and then checking for inconsistencies, the verifier can detect a false claim with high probability, even when the provers are all-powerful.", "problem": "In the field of theoretical computer science, a Multi-Prover Interactive Proof (MIP) system is used to verify computational claims. Consider a scenario where a verifier, Vic, wants to check a claim about a subway map's colorability. The map consists of stations (vertices) and direct tunnels between them (edges). The claim is that the map is \"2-colorable,\" meaning it's possible to assign one of two colors (say, color '0' or color '1') to each station such that no two stations connected by a tunnel have the same color.\n\nVic is computationally limited and enlists the help of two all-powerful but potentially untrustworthy provers, P1 and P2. The provers can coordinate their strategy beforehand but are kept in separate rooms during the protocol and cannot communicate.\n\nThe specific subway map in question is the \"Tri-Loop,\" which consists of three stations, A, B, and C. There are tunnels connecting A and B, B and C, and C and A, forming a closed loop. It is known that this map is not 2-colorable. The provers, however, will try to collude to fool Vic into believing that it is.\n\nVic employs the following one-round protocol:\n1.  Vic secretly flips a fair coin.\n2.  **If heads (Edge Test):** Vic uniformly at random selects one of the three tunnels (edges). Let the chosen tunnel connect stations $u$ and $v$. Vic sends station $u$ to P1 and station $v$ to P2. Vic receives a color $c_1$ from P1 and a color $c_2$ from P2. Vic accepts if and only if $c_1 \\neq c_2$.\n3.  **If tails (Vertex Test):** Vic uniformly at random selects one of the three stations (vertices), let's say $w$. Vic sends station $w$ to both P1 and P2. Vic receives a color $c_1$ from P1 and a color $c_2$ from P2. Vic accepts if and only if $c_1 = c_2$.\n\nAssuming the provers devise an optimal strategy to maximize their chances of success, what is the maximum probability that Vic will accept the false claim that the Tri-Loop map is 2-colorable? Express your answer as a fraction in simplest form.", "solution": "We model each prover’s one-round behavior by deterministic response functions without loss of generality. This is because Vic’s queries are drawn from a fixed distribution, and the acceptance probability is linear in the strategy; hence any probabilistic strategy is a convex combination of deterministic ones, and the optimum is achieved at an extreme point (deterministic strategy).\n\nLet the set of vertices be $\\{A,B,C\\}$. Define the provers’ deterministic strategies as functions $f_{1},f_{2}:\\{A,B,C\\}\\to\\{0,1\\}$. Write\n$$\na_{X}=f_{1}(X),\\quad b_{X}=f_{2}(X)\\quad\\text{for }X\\in\\{A,B,C\\}.\n$$\nUnder the Edge Test (probability $\\frac{1}{2}$), Vic uniformly chooses one of the three edges; we label them with a fixed orientation $(A,B)$, $(B,C)$, $(C,A)$. On edge $(u,v)$, Vic accepts iff $a_{u}\\neq b_{v}$. Under the Vertex Test (probability $\\frac{1}{2}$), Vic uniformly chooses one of the three vertices $w$ and accepts iff $a_{w}=b_{w}$.\n\nLet\n$$\nS_{\\text{edge}}= \\mathbf{1}[a_{A}\\neq b_{B}] + \\mathbf{1}[a_{B}\\neq b_{C}] + \\mathbf{1}[a_{C}\\neq b_{A}],\n$$\n$$\nS_{\\text{vert}}= \\mathbf{1}[a_{A}=b_{A}] + \\mathbf{1}[a_{B}=b_{B}] + \\mathbf{1}[a_{C}=b_{C}],\n$$\nwhere $\\mathbf{1}[\\cdot]$ is the indicator function (value $1$ if the condition holds and $0$ otherwise). The acceptance probability is\n$$\nP=\\frac{1}{2}\\cdot\\frac{1}{3}S_{\\text{edge}}+\\frac{1}{2}\\cdot\\frac{1}{3}S_{\\text{vert}}=\\frac{S_{\\text{edge}}+S_{\\text{vert}}}{6}.\n$$\nHence it suffices to maximize $S_{\\text{edge}}+S_{\\text{vert}}$ over all assignments of the six bits $a_{A},a_{B},a_{C},b_{A},b_{B},b_{C}$.\n\nFix $a_{A},a_{B},a_{C}$ and optimize over $b_{A},b_{B},b_{C}$. Group the terms involving each $b_{X}$:\n- Terms with $b_{A}$: $\\mathbf{1}[b_{A}=a_{A}] + \\mathbf{1}[b_{A}\\neq a_{C}]$.\n- Terms with $b_{B}$: $\\mathbf{1}[b_{B}=a_{B}] + \\mathbf{1}[b_{B}\\neq a_{A}]$.\n- Terms with $b_{C}$: $\\mathbf{1}[b_{C}=a_{C}] + \\mathbf{1}[b_{C}\\neq a_{B}]$.\n\nFor a generic pair $(x,y)\\in\\{0,1\\}^{2}$, define $f(b;x,y)=\\mathbf{1}[b=x]+\\mathbf{1}[b\\neq y]$. If $x=y$, then $f(b;x,y)=1$ for both choices of $b$. If $x\\neq y$, then choosing $b=x$ gives $f=2$ (and the other choice gives $0$). Therefore, for each $X$ the maximum contribution equals $2$ if $a_{X}\\neq$ its neighbor and equals $1$ if $a_{X}=$ its neighbor, where the relevant neighbors are $a_{C}$ for $X=A$, $a_{A}$ for $X=B$, and $a_{B}$ for $X=C$.\n\nConsequently, the maximal value over $b$ given $a$ is\n$$\nS_{\\text{edge}}+S_{\\text{vert}} \\le 6 - E,\n$$\nwhere\n$$\nE=\\mathbf{1}[a_{A}=a_{C}] + \\mathbf{1}[a_{B}=a_{A}] + \\mathbf{1}[a_{C}=a_{B}].\n$$\nWe now minimize $E$ over $a_{A},a_{B},a_{C}$. The three equalities in $E$ are the three consecutive equalities on the $3$-cycle. It is impossible to have all three consecutive inequalities $a_{B}\\neq a_{A}$, $a_{C}\\neq a_{B}$, and $a_{A}\\neq a_{C}$ with only two colors, because $a_{B}\\neq a_{A}$ and $a_{C}\\neq a_{B}$ force $a_{C}=a_{A}$, making the third equality true. Hence $E\\ge 1$. This bound is tight: take two $a$’s equal and the third different (e.g., $(a_{A},a_{B},a_{C})=(0,1,1)$), which yields exactly one equality among consecutive pairs, so $E=1$.\n\nTherefore the maximum of $S_{\\text{edge}}+S_{\\text{vert}}$ equals $6-1=5$, and the optimal acceptance probability is\n$$\nP_{\\max}=\\frac{5}{6}.\n$$\nThis value is achievable. For example, choose $(a_{A},a_{B},a_{C})=(0,1,1)$ and $(b_{A},b_{B},b_{C})=(0,1,1)$, which gives $S_{\\text{edge}}=2$, $S_{\\text{vert}}=3$, and thus $P=(2+3)/6=5/6$.", "answer": "$$\\boxed{\\frac{5}{6}}$$", "id": "1432453"}, {"introduction": "Building on the core concepts of consistency checking, our next exercise applies the MIP framework to a different domain: linear algebra. We will analyze a protocol designed to verify if a given matrix is a permutation matrix, a fundamental object in many computational tasks. This practice [@problem_id:1432452] highlights the flexibility of MIPs, challenging you to think about how to design queries that effectively test the unique structural properties of an object, in this case, the \"one-per-row, one-per-column\" rule.", "problem": "In computational complexity theory, a verifier can use a multi-prover interactive proof system to verify a claim made by two powerful but non-communicating provers. Consider a scenario where a verifier, V, is given a publicly known $n \\times n$ binary matrix $M$ and wants to determine if it is a permutation matrix. A permutation matrix is a square binary matrix that has exactly one '1' in each row and each column, with all other entries being '0'.\n\nThe verifier uses the following two-prover protocol with provers P1 and P2:\n1. The verifier flips a fair coin, choosing to perform a 'Row Check' or a 'Column Check' with equal probability (1/2 for each).\n2. If 'Row Check' is chosen, the verifier selects a row index $i \\in \\{1, \\dots, n\\}$ uniformly at random. It asks both P1 and P2: \"In row $i$, what is the column index of the '1'?\" Let P1's answer be $j_1$ and P2's answer be $j_2$. The verifier accepts if and only if $j_1 = j_2$ and the entry $M_{i,j_1}$ is 1. Otherwise, the verifier rejects.\n3. If 'Column Check' is chosen, the verifier selects a column index $j \\in \\{1, \\dots, n\\}$ uniformly at random. It asks both P1 and P2: \"In column $j$, what is the row index of the '1'?\" Let P1's answer be $i_1$ and P2's answer be $i_2$. The verifier accepts if and only if $i_1 = i_2$ and the entry $M_{i_1,j}$ is 1. Otherwise, the verifier rejects.\n\nIf a queried row or column has no '1's, the provers must still provide an answer. If a row or column has multiple '1's, the provers may choose which one to report. The two provers know the matrix $M$ and collaborate on a strategy before the protocol begins to maximize their chances of making the verifier accept. However, they cannot communicate once the protocol starts.\n\nSuppose the protocol is run for $n=3$ with the following specific matrix $M$:\n$$ M = \\begin{pmatrix} 1  1  0 \\\\ 0  0  1 \\\\ 0  0  0 \\end{pmatrix} $$\nThis matrix is not a permutation matrix. What is the maximum probability that the verifier will accept? Express your answer as a fraction in simplest form.", "solution": "The problem asks for the maximum probability that the verifier accepts, given the specified non-permutation matrix $M$. This is equivalent to finding the success probability of the provers' optimal strategy.\n\nLet $A$ be the event that the verifier accepts. Let $R$ be the event that the verifier chooses the 'Row Check' and $C$ be the event that the verifier chooses the 'Column Check'. According to the protocol, $P(R) = P(C) = 1/2$.\nThe total probability of acceptance is given by the law of total probability:\n$$ P(A) = P(A|R)P(R) + P(A|C)P(C) $$\nWe need to determine the provers' optimal strategy and then calculate the conditional probabilities $P(A|R)$ and $P(A|C)$.\n\nThe provers P1 and P2 cannot communicate during the protocol. Therefore, to pass the verifier's first check ($j_1=j_2$ or $i_1=i_2$), they must agree on a single answer for any given question. Their optimal strategy is to pre-agree on a function that maps each possible query (e.g., \"row $i$\") to a specific answer (e.g., \"column $j$\"). Their choice of answer will be one that maximizes the chance of passing the verifier's second check (i.e., that the corresponding entry in $M$ is 1).\n\n**Step 1: Analyze the 'Row Check' branch**\nThe verifier chooses a row $i \\in \\{1, 2, 3\\}$ with uniform probability $1/3$.\n\n*   **If the verifier queries row $i=1$**: The row is $(1, 1, 0)$. It contains '1's at column 1 and column 2. The provers' optimal strategy is to agree on returning either column index 1 or 2. For instance, they can agree to always answer $j=1$. The verifier then checks if $M_{1,1}=1$. Since this is true, the verifier accepts. So, for this query, the provers can ensure the verifier accepts. The probability of acceptance is 1.\n\n*   **If the verifier queries row $i=2$**: The row is $(0, 0, 1)$. It contains a single '1' at column 3. The only logical strategy for the provers is to agree on answering $j=3$. The verifier checks if $M_{2,3}=1$. This is true, so the verifier accepts. The probability of acceptance is 1.\n\n*   **If the verifier queries row $i=3$**: The row is $(0, 0, 0)$. It contains no '1's. The provers must agree on an answer, say column $j$. However, for any column $j \\in \\{1, 2, 3\\}$, the entry $M_{3,j}$ is 0. The verifier's check will fail, and the verifier will reject. The probability of acceptance is 0.\n\nThe conditional probability of accepting given a 'Row Check' is the average of these outcomes:\n$$ P(A|R) = \\frac{1}{3} \\times P(A|\\text{row } 1) + \\frac{1}{3} \\times P(A|\\text{row } 2) + \\frac{1}{3} \\times P(A|\\text{row } 3) $$\n$$ P(A|R) = \\frac{1}{3}(1) + \\frac{1}{3}(1) + \\frac{1}{3}(0) = \\frac{2}{3} $$\n\n**Step 2: Analyze the 'Column Check' branch**\nThe verifier chooses a column $j \\in \\{1, 2, 3\\}$ with uniform probability $1/3$.\n\n*   **If the verifier queries column $j=1$**: The column is $(1, 0, 0)^T$. It contains a single '1' at row 1. The provers must agree to answer $i=1$. The verifier checks if $M_{1,1}=1$. This is true, so the verifier accepts. The probability of acceptance is 1.\n\n*   **If the verifier queries column $j=2$**: The column is $(1, 0, 0)^T$. It contains a single '1' at row 1. The provers must agree to answer $i=1$. The verifier checks if $M_{1,2}=1$. This is true, so the verifier accepts. The probability of acceptance is 1.\n\n*   **If the verifier queries column $j=3$**: The column is $(0, 1, 0)^T$. It contains a single '1' at row 2. The provers must agree to answer $i=2$. The verifier checks if $M_{2,3}=1$. This is true, so the verifier accepts. The probability of acceptance is 1.\n\nIn all cases for the 'Column Check', the provers can devise a strategy that makes the verifier accept. The conditional probability of accepting given a 'Column Check' is:\n$$ P(A|C) = \\frac{1}{3}(1) + \\frac{1}{3}(1) + \\frac{1}{3}(1) = 1 $$\n\n**Step 3: Calculate the total probability of acceptance**\nNow, we combine the results from the two branches.\n$$ P(A) = P(A|R)P(R) + P(A|C)P(C) $$\n$$ P(A) = \\left(\\frac{2}{3}\\right) \\times \\left(\\frac{1}{2}\\right) + (1) \\times \\left(\\frac{1}{2}\\right) $$\n$$ P(A) = \\frac{1}{3} + \\frac{1}{2} $$\n$$ P(A) = \\frac{2}{6} + \\frac{3}{6} = \\frac{5}{6} $$\n\nThus, the maximum probability that the verifier will accept is $5/6$.", "answer": "$$\\boxed{\\frac{5}{6}}$$", "id": "1432452"}, {"introduction": "This final problem introduces a sophisticated and powerful technique central to modern complexity theory, which translates combinatorial properties into algebraic ones. The protocol leverages polynomial representations to verify set disjointness, based on the principle that disjoint sets have characteristic polynomials $P_X(z)$ and $P_Y(z)$ that satisfy an identity like $A(z)P_X(z) + B(z)P_Y(z) = 1$. By analyzing a hypothetical scenario where provers know the verifier's secret random value $r$, this exercise [@problem_id:1432512] precisely demonstrates why randomness is the cornerstone of the protocol's security.", "problem": "In the field of computational complexity theory, Multi-Prover Interactive Proofs (MIP) provide a powerful model for verification. Consider a specific MIP protocol designed to solve the Set Disjointness problem.\n\nTwo provers, P1 and P2, wish to convince a verifier, V, that their respective sets, $X$ and $Y$, are disjoint. The sets $X$ and $Y$ are subsets of a universe $U = \\{0, 1, \\dots, n-1\\}$. The provers are provided with the sets, but the verifier only knows the parameters $n$, the size of the sets $|X|=|Y|=k$, and the size of their intersection $|X \\cap Y|=m$.\n\nThe protocol is based on polynomial identities over a finite field $\\mathbb{F}_p$, where $p$ is a prime number such that $p  n$. For any set $S \\subseteq U$, we define its characteristic polynomial as $P_S(z) = \\prod_{s \\in S} (z-s)$. If $X$ and $Y$ are disjoint, then by Bezout's identity for polynomials, there exist \"certificate\" polynomials $A(z)$ and $B(z)$ of degree less than $k$ such that $A(z)P_X(z) + B(z)P_Y(z) = 1$ over $\\mathbb{F}_p$.\n\nThe protocol proceeds as follows:\n1.  The verifier V publicly chooses a value $r$ uniformly at random from $\\mathbb{F}_p$.\n2.  V sends $r$ to P1, which is isolated from P2. P1 responds with a pair of values $(a_1, x_1) \\in \\mathbb{F}_p \\times \\mathbb{F}_p$.\n3.  V sends the same $r$ to P2, which is isolated from P1. P2 responds with a pair of values $(b_2, y_2) \\in \\mathbb{F}_p \\times \\mathbb{F}_p$.\n4.  V accepts if and only if $a_1 x_1 + b_2 y_2 = 1$.\n\nNow, consider a scenario where the sets are **not** disjoint; specifically, $|X \\cap Y| = m$ where $m  0$. The provers' goal is to cheat and make the verifier accept. They are constrained to be \"semi-honest\": they must report the correct values for their own set polynomials, i.e., P1 must report $x_1 = P_X(r)$ and P2 must report $y_2 = P_Y(r)$. Their only freedom lies in choosing the certificate values $a_1$ and $b_2$.\n\nSuppose the provers have an extraordinary advantage: they know the verifier's supposedly random choice of $r$ before the protocol begins. This allows them to perfectly coordinate on a strategy for choosing $a_1$ and $b_2$ as a function of $r$. What is the maximum probability with which these cheating provers can make the verifier accept?\n\nExpress your answer as a closed-form analytic expression in terms of $p$ and $m$.", "solution": "Let $U=\\{0,1,\\dots,n-1\\}\\subset \\mathbb{F}_{p}$ with $pn$. For any set $S\\subseteq U$, its characteristic polynomial is $P_{S}(z)=\\prod_{s\\in S}(z-s)$ over $\\mathbb{F}_{p}$. For $X,Y\\subseteq U$ with $|X|=|Y|=k$ and $|X\\cap Y|=m0$, define for the verifier’s challenge $r\\in\\mathbb{F}_{p}$ the fixed values\n$$\nx:=P_{X}(r),\\qquad y:=P_{Y}(r).\n$$\nIn the protocol, the verifier accepts if and only if\n$$\na_{1}x+b_{2}y=1\n$$\nover $\\mathbb{F}_{p}$. Under the semi-honesty constraint, the provers must report $x_{1}=x$ and $y_{2}=y$, so their only freedom is to choose $a_{1},b_{2}\\in\\mathbb{F}_{p}$ as functions of $r$ (and any pre-shared information). For a fixed $r$, the linear equation $a_{1}x+b_{2}y=1$ over a field has a solution in $(a_{1},b_{2})$ if and only if not both $x$ and $y$ are zero. Indeed:\n- If $x\\neq 0$, then setting $a_{1}=x^{-1}$ and $b_{2}=0$ yields $a_{1}x+b_{2}y=1$.\n- If $x=0$ but $y\\neq 0$, then setting $a_{1}=0$ and $b_{2}=y^{-1}$ yields $a_{1}x+b_{2}y=1$.\n- If $x=y=0$, then $a_{1}x+b_{2}y=0$ for all $a_{1},b_{2}$, so acceptance is impossible.\n\nThe conditions $x=0$ and $y=0$ hold exactly when $r$ is a common root of $P_{X}$ and $P_{Y}$, i.e., when $r\\in X\\cap Y$. Since $|X\\cap Y|=m$ and $pn$ ensures all elements of $U$ are distinct in $\\mathbb{F}_{p}$, there are exactly $m$ values of $r\\in\\mathbb{F}_{p}$ for which acceptance is impossible; for all other $r$ the provers can choose $(a_{1},b_{2})$ to force acceptance. Given that the verifier chooses $r$ uniformly at random from $\\mathbb{F}_{p}$, the maximum acceptance probability is\n$$\n1-\\frac{m}{p}.\n$$\nThis is optimal because for $r\\in X\\cap Y$ the acceptance condition cannot be satisfied by any choice of $a_{1},b_{2}$.", "answer": "$$\\boxed{1-\\frac{m}{p}}$$", "id": "1432512"}]}