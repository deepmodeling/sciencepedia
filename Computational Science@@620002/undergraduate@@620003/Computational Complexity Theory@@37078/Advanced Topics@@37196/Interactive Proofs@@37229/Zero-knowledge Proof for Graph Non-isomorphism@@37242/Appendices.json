{"hands_on_practices": [{"introduction": "To truly understand the security of an interactive proof, we must analyze it from the perspective of a cheating prover. This first exercise places you in that role, examining the protocol for graph non-isomorphism under the condition that the prover's claim is false—the two graphs are, in fact, isomorphic. By determining the maximum probability of successfully deceiving the verifier in a single round, you will uncover the fundamental limitation that defines the protocol's soundness error and appreciate why a single round is insufficient for a convincing proof [@problem_id:1469892].", "problem": "In the field of theoretical computer science, an interactive proof system allows a computationally powerful Prover to convince a computationally limited Verifier of the truth of a mathematical statement. Consider the following interactive protocol designed to prove that two graphs, $G_1$ and $G_2$, are non-isomorphic.\n\nThe Prover, Alice, claims to the Verifier, Bob, that two specific graphs, $G_1$ and $G_2$, are non-isomorphic. To convince Bob, they execute a single round of the following protocol:\n\n1.  **Bob's Step**: Bob chooses an index $i$ uniformly at random from the set $\\{1, 2\\}$. He then creates a new graph, $H$, by applying a random permutation to the vertex labels of his chosen graph $G_i$. This means that $H$ is isomorphic to $G_i$, but its vertex labels are scrambled. Bob sends only the graph $H$ to Alice.\n\n2.  **Alice's Step**: Alice receives the graph $H$. She is assumed to have unlimited computational power. She must determine which of the original graphs, $G_1$ or $G_2$, is isomorphic to $H$. She sends her answer, an index $j \\in \\{1, 2\\}$, back to Bob.\n\n3.  **Bob's Verification**: Bob checks if Alice's returned index $j$ matches his secretly chosen index $i$. If $j=i$, the round is successful. If $j \\neq i$, the round fails, and Bob rejects Alice's claim.\n\nNow, suppose Alice is attempting to cheat. In reality, the two graphs $G_1$ and $G_2$ are actually isomorphic, a fact that Alice knows but Bob does not. Alice still claims the graphs are non-isomorphic and participates in the protocol, hoping to pass the verification step.\n\nWhat is the probability that Alice can successfully complete this single round of the protocol, assuming she employs the best possible strategy to determine her response $j$?\n\nA. 0\n\nB. $\\frac{1}{4}$\n\nC. $\\frac{1}{2}$\n\nD. $\\frac{3}{4}$\n\nE. 1", "solution": "Let $G_{1}$ and $G_{2}$ be graphs on the same vertex set size $n$ with $G_{1} \\simeq G_{2}$. Let $I \\in \\{1,2\\}$ be Bob’s uniformly random choice, so $\\Pr(I=i)=\\frac{1}{2}$. Let $\\Pi$ be a uniformly random permutation in the symmetric group $S_{n}$, independent of $I$. Bob constructs $H=\\Pi(G_{I})$ and sends $H$ to Alice.\n\nBecause $G_{1} \\simeq G_{2}$, there exists a permutation $\\sigma \\in S_{n}$ such that $G_{2}=\\sigma(G_{1})$. For any labeled graph $h$ on $n$ vertices,\n$$\n\\Pr(H=h \\mid I=2)=\\Pr(\\Pi(G_{2})=h)=\\Pr(\\Pi(\\sigma(G_{1}))=h).\n$$\nDefining $\\Pi'=\\Pi \\circ \\sigma$, we have that $\\Pi'$ is uniformly distributed on $S_{n}$ whenever $\\Pi$ is, hence\n$$\n\\Pr(H=h \\mid I=2)=\\Pr(\\Pi'(G_{1})=h)=\\Pr(H=h \\mid I=1).\n$$\nTherefore the conditional distributions of $H$ given $I=1$ and $I=2$ are identical. By Bayes’ rule, for any $h$ with $\\Pr(H=h)>0$,\n$$\n\\Pr(I=i \\mid H=h)=\\frac{\\Pr(H=h \\mid I=i)\\Pr(I=i)}{\\sum_{k=1}^{2}\\Pr(H=h \\mid I=k)\\Pr(I=k)}=\\frac{a \\cdot \\frac{1}{2}}{a \\cdot \\frac{1}{2}+a \\cdot \\frac{1}{2}}=\\frac{1}{2},\n$$\nwhere $a=\\Pr(H=h \\mid I=1)=\\Pr(H=h \\mid I=2)$.\n\nLet Alice’s (possibly randomized) strategy be to output $J \\in \\{1,2\\}$ according to some conditional distribution $\\Pr(J=j \\mid H=h)$. The success probability is\n$$\n\\Pr(J=I)=\\sum_{h}\\Pr(H=h)\\sum_{i=1}^{2}\\Pr(I=i \\mid H=h)\\Pr(J=i \\mid H=h).\n$$\nUsing $\\Pr(I=i \\mid H=h)=\\frac{1}{2}$ for both $i$,\n$$\n\\Pr(J=I)=\\sum_{h}\\Pr(H=h)\\left(\\frac{1}{2}\\sum_{i=1}^{2}\\Pr(J=i \\mid H=h)\\right)=\\sum_{h}\\Pr(H=h)\\left(\\frac{1}{2}\\cdot 1\\right)=\\frac{1}{2}.\n$$\nThus no strategy can achieve success probability exceeding $\\frac{1}{2}$, and this is achieved by random guessing. Therefore, the optimal success probability for Alice when $G_{1}$ and $G_{2}$ are isomorphic is $\\frac{1}{2}$, corresponding to option C.", "answer": "$$\\boxed{C}$$", "id": "1469892"}, {"introduction": "A 50% chance of being fooled in a single round is unacceptable for any secure system. The strength of the graph non-isomorphism protocol, and many interactive proofs, comes from iteration. This next practice demonstrates how a verifier's confidence can be dramatically amplified by repeating the challenge-response cycle multiple times [@problem_id:1469933]. Using the principles of Bayesian probability, you will quantify how each successful round provides exponentially growing evidence against the possibility of a cheating prover, transforming a weak guarantee into a near-certain one.", "problem": "A cybersecurity firm, \"GraphGuard,\" is developing a novel method for verifying digital identities. The core of their system relies on the computational difficulty of the Graph Isomorphism problem. An engineer, Alice, presents her manager, Bob, with two large, complex network graphs, $G_1$ and $G_2$. Alice claims that these two graphs are non-isomorphic, a key requirement for her proposed security protocol.\n\nBob is skeptical. Based on his prior experience with similar graph generation algorithms, he believes there is a 50% chance that Alice is correct and the graphs are non-isomorphic, and a 50% chance they are, in fact, isomorphic. To test Alice's claim, they agree on the following interactive challenge, to be repeated multiple times:\n\n1.  Bob secretly and randomly chooses one of the two graphs, either $G_1$ or $G_2$, with equal probability.\n2.  He then generates a new graph, $H$, by randomly permuting the vertex labels of his chosen graph. This process ensures that $H$ is isomorphic to the graph he selected, but its structure is scrambled.\n3.  Bob presents only the graph $H$ to Alice.\n4.  Alice must then determine whether $H$ is isomorphic to $G_1$ or to $G_2$.\n\nAssume that if the graphs $G_1$ and $G_2$ are truly non-isomorphic, Alice's advanced system can correctly identify the origin of $H$ with 100% accuracy. However, if the graphs are secretly isomorphic, even her system cannot distinguish them, and she is forced to guess, giving her a 50% chance of being correct in any given challenge.\n\nThey perform this challenge for $k=12$ consecutive rounds, and Alice provides the correct answer every single time. What is Bob's new confidence, expressed as a probability, that the graphs $G_1$ and $G_2$ are indeed non-isomorphic?\n\nProvide your answer as a decimal value rounded to four significant figures.", "solution": "Let the hypotheses be:\n- $H_{\\mathrm{NI}}$: $G_{1}$ and $G_{2}$ are non-isomorphic.\n- $H_{\\mathrm{I}}$: $G_{1}$ and $G_{2}$ are isomorphic.\n\nBob’s prior beliefs are $P(H_{\\mathrm{NI}})=\\frac{1}{2}$ and $P(H_{\\mathrm{I}})=\\frac{1}{2}$.\n\nIn each round, if $H_{\\mathrm{NI}}$ is true, Alice answers correctly with probability $1$. If $H_{\\mathrm{I}}$ is true, Alice answers correctly with probability $\\frac{1}{2}$. Over $k=12$ independent rounds with all answers correct, the likelihoods are\n$$\nP(\\text{all 12 correct}\\mid H_{\\mathrm{NI}})=1^{12}=1,\n$$\n$$\nP(\\text{all 12 correct}\\mid H_{\\mathrm{I}})=\\left(\\frac{1}{2}\\right)^{12}=2^{-12}.\n$$\n\nBy Bayes’ theorem, the posterior probability that the graphs are non-isomorphic is\n$$\nP(H_{\\mathrm{NI}}\\mid \\text{all 12 correct})=\\frac{P(\\text{all 12 correct}\\mid H_{\\mathrm{NI}})P(H_{\\mathrm{NI}})}{P(\\text{all 12 correct}\\mid H_{\\mathrm{NI}})P(H_{\\mathrm{NI}})+P(\\text{all 12 correct}\\mid H_{\\mathrm{I}})P(H_{\\mathrm{I}})}.\n$$\nSubstituting the values,\n$$\nP(H_{\\mathrm{NI}}\\mid \\text{all 12 correct})=\\frac{1\\cdot \\frac{1}{2}}{1\\cdot \\frac{1}{2}+2^{-12}\\cdot \\frac{1}{2}}=\\frac{1}{1+2^{-12}}=\\frac{4096}{4097}.\n$$\n\nAs a decimal rounded to four significant figures,\n$$\n\\frac{4096}{4097}\\approx 0.9998.\n$$", "answer": "$$\\boxed{0.9998}$$", "id": "1469933"}, {"introduction": "The security of cryptographic protocols often depends on a precise sequence of actions, and even a slight change can lead to a total collapse of its guarantees. This final exercise explores a crucial structural element of the GNI protocol: the timing of the prover's commitment versus the verifier's challenge. By analyzing a modified protocol where the verifier reveals their challenge *before* the prover commits to a graph, you will learn why the commitment-first structure is non-negotiable for ensuring the protocol's soundness [@problem_id:1469902].", "problem": "In computational complexity theory, an interactive proof system allows a Prover to convince a Verifier of the truth of a mathematical statement. Consider the problem of Graph Non-Isomorphism, where the Prover wishes to convince the Verifier that two graphs, $G_1 = (V, E_1)$ and $G_2 = (V, E_2)$, are not isomorphic.\n\nA single round of the standard interactive protocol for this problem proceeds as follows:\n1.  **Commitment:** The Prover randomly chooses a bit $b \\in \\{1, 2\\}$, randomly selects a permutation $\\pi$ of the vertex set $V$, computes the graph $H = \\pi(G_b)$ (an isomorphic copy of $G_b$), and sends only the graph $H$ to the Verifier.\n2.  **Challenge:** The Verifier randomly chooses a bit $c \\in \\{1, 2\\}$ and sends $c$ to the Prover as a challenge.\n3.  **Response:** The Prover must provide the Verifier with a permutation $\\rho$ that is an isomorphism between the challenged graph $G_c$ and the committed graph $H$. If the Prover initially chose $b=c$, she can simply send $\\rho = \\pi$. If $G_1$ and $G_2$ are truly non-isomorphic, she cannot produce a valid response if $b \\neq c$.\n4.  **Verification:** The Verifier checks if the provided permutation $\\rho$ correctly maps $G_c$ to $H$. If the check fails, the Verifier rejects the proof.\n\nNow, consider a **modified protocol** where the order of the first two steps is reversed. A single round is defined as:\n1.  **Challenge First:** The Verifier randomly chooses a bit $c \\in \\{1, 2\\}$ and sends $c$ to the Prover.\n2.  **Prover's Action:** In response to the challenge $c$, the Prover creates and sends a pair $(H', \\pi')$ to the Verifier.\n3.  **Verification:** The Verifier checks that the received permutation $\\pi'$ is indeed an isomorphism from the graph $G_c$ to the graph $H'$. If the check fails, the Verifier rejects.\n\nFor analyzing such protocols, we define the following properties, assuming a computationally unbounded Prover:\n- **Perfect Completeness:** An honest Prover can always convince the Verifier if the original statement (i.e., $G_1 \\not\\cong G_2$) is true.\n- **Soundness:** A protocol is 'sound' if the soundness error is less than 1. The soundness error is the maximum probability that a cheating Prover can convince the Verifier if the original statement is false (i.e., $G_1 \\cong G_2$).\n- **Zero-Knowledge:** The Verifier learns nothing from the protocol interaction other than the truth of the statement being proven.\n\nWhich of the following statements provides the most accurate analysis of the **modified protocol**?\n\nA. The protocol is sound, but it is not zero-knowledge.\n\nB. The protocol has perfect completeness, but it is not sound.\n\nC. The protocol is not complete, but it is sound.\n\nD. The protocol is neither sound nor complete.\n\nE. The protocol is sound and has perfect completeness.", "solution": "We analyze the modified protocol where the Verifier sends the challenge first and the Prover replies with a pair $(H',\\pi')$ such that $\\pi'$ is an isomorphism from $G_{c}$ to $H'$, and the Verifier accepts if and only if $\\pi'(G_{c})=H'$.\n\nCompleteness: Assume the statement is true, i.e., $G_{1} \\not\\cong G_{2}$. For any challenge $c \\in \\{1,2\\}$, an honest Prover can choose any permutation $\\pi'$, set $H'=\\pi'(G_{c})$, and send $(H',\\pi')$. The Verifier’s check verifies whether $\\pi'(G_{c})=H'$, which holds by construction. Therefore, the acceptance probability satisfies\n$$\n\\Pr[\\text{Verifier accepts }|\\ G_{1} \\not\\cong G_{2}]=1,\n$$\nso the protocol has perfect completeness.\n\nSoundness: Assume the statement is false, i.e., $G_{1} \\cong G_{2}$. A cheating Prover, upon receiving $c$, can use the same strategy: pick any permutation $\\pi'$, set $H'=\\pi'(G_{c})$, and send $(H',\\pi')$. The Verifier checks $\\pi'(G_{c})=H'$, which again holds by construction. Hence,\n$$\n\\max_{\\text{cheating Prover}} \\Pr[\\text{Verifier accepts }|\\ G_{1} \\cong G_{2}]=1.\n$$\nThe soundness error equals $1$, which is not less than $1$, so the protocol is not sound.\n\nZero-knowledge is irrelevant to selecting the correct option here because the protocol already fails soundness. Among the given choices, the correct characterization is that it has perfect completeness but is not sound.", "answer": "$$\\boxed{B}$$", "id": "1469902"}]}