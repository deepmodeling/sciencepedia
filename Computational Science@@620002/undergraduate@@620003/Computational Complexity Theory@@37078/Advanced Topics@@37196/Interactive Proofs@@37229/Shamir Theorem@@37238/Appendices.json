{"hands_on_practices": [{"introduction": "The proof of Shamir's Theorem begins with a powerful technique called arithmetization, which translates complex logical statements into the language of algebra. This exercise [@problem_id:1447654] provides foundational practice in this translation, focusing on converting a Boolean formula in Conjunctive Normal Form (CNF) into a multivariate polynomial. By working through the conversion of logical connectives like $\\land$ (AND), $\\lor$ (OR), and $\\neg$ (NOT) into arithmetic operations and simplifying the result, you will build the essential skills needed to analyze logical formulas using algebraic tools.", "problem": "In the study of computational complexity, particularly in the context of interactive proof systems, Boolean formulas are often converted into multivariate polynomials over integers. This process, known as arithmetization, allows logical properties to be analyzed using algebraic tools.\n\nConsider a Boolean formula $\\phi$ involving variables $x_1, x_2, \\dots, x_n$. The arithmetization process maps this to a polynomial $P_\\phi(z_1, z_2, \\dots, z_n)$ based on the following rules:\n- Each Boolean variable $x_i \\in \\{\\text{true}, \\text{false}\\}$ is mapped to an integer variable $z_i \\in \\{1, 0\\}$, where `true` corresponds to 1 and `false` to 0.\n- A literal $x_i$ is mapped to the polynomial $z_i$.\n- A negated literal $\\neg x_i$ is mapped to the polynomial $(1-z_i)$.\n- A conjunction (AND, $\\land$) of two subformulas, $\\psi_1 \\land \\psi_2$, is mapped to the product of their corresponding polynomials: $P_{\\psi_1} \\cdot P_{\\psi_2}$.\n- A disjunction (OR, $\\lor$) of two subformulas, $\\psi_1 \\lor \\psi_2$, is mapped to the polynomial $1 - (1-P_{\\psi_1})(1-P_{\\psi_2})$.\n\nAfter constructing the initial polynomial, it is fully expanded and simplified. A crucial simplification rule, stemming from the fact that $z_i \\in \\{0, 1\\}$, is that for any integer power $k \\ge 1$, we can replace $z_i^k$ with $z_i$. For example, a term like $3z_1^3 z_2^5$ simplifies to $3z_1 z_2$.\n\nConsider the following Boolean formula in Conjunctive Normal Form (CNF) over three variables:\n$$ \\phi(x_1, x_2, x_3) = (\\neg x_1 \\lor \\neg x_2) \\land (\\neg x_1 \\lor \\neg x_3) \\land (\\neg x_2 \\lor \\neg x_3) $$\n\nFollowing the arithmetization and simplification rules described above, find the total degree of the final simplified polynomial $P_\\phi(z_1, z_2, z_3)$. The total degree of a polynomial is the maximum sum of the exponents of the variables in any single term of the polynomial.", "solution": "Map literals and connectives using the arithmetization rules. For each negated literal, $P(\\neg x_{i})=1-z_{i}$. For an OR, $P(\\psi_{1}\\lor\\psi_{2})=1-(1-P_{\\psi_{1}})(1-P_{\\psi_{2}})$. Therefore for each clause,\n$$\nP(\\neg x_{1}\\lor\\neg x_{2})=1-(1-(1-z_{1}))(1-(1-z_{2}))=1-z_{1}z_{2},\n$$\n$$\nP(\\neg x_{1}\\lor\\neg x_{3})=1-z_{1}z_{3},\\quad P(\\neg x_{2}\\lor\\neg x_{3})=1-z_{2}z_{3}.\n$$\nThe CNF is an AND of the clauses, so the polynomial is the product:\n$$\nP_{\\phi}(z_{1},z_{2},z_{3})=(1-z_{1}z_{2})(1-z_{1}z_{3})(1-z_{2}z_{3}).\n$$\nExpand step by step, using $z_{i}^{k}=z_{i}$ for $k\\geq 1$. First compute\n$$\n(1-z_{1}z_{2})(1-z_{1}z_{3})=1-z_{1}z_{3}-z_{1}z_{2}+z_{1}^{2}z_{2}z_{3}=1-z_{1}z_{3}-z_{1}z_{2}+z_{1}z_{2}z_{3},\n$$\nsince $z_{1}^{2}=z_{1}$. Now multiply by $(1-z_{2}z_{3})$:\n$$\n\\begin{aligned}\nP_{\\phi}&=(1-z_{1}z_{3}-z_{1}z_{2}+z_{1}z_{2}z_{3})(1-z_{2}z_{3})\\\\\n&=(1)(1-z_{2}z_{3})+(-z_{1}z_{3})(1-z_{2}z_{3})+(-z_{1}z_{2})(1-z_{2}z_{3})+(z_{1}z_{2}z_{3})(1-z_{2}z_{3})\\\\\n&=1-z_{2}z_{3}-z_{1}z_{3}+z_{1}z_{3}z_{2}z_{3}-z_{1}z_{2}+z_{1}z_{2}z_{2}z_{3}+z_{1}z_{2}z_{3}-z_{1}z_{2}z_{3}z_{2}z_{3}.\n\\end{aligned}\n$$\nSimplify each monomial using $z_{i}^{2}=z_{i}$:\n$$\nz_{1}z_{3}z_{2}z_{3}=z_{1}z_{2}z_{3},\\quad z_{1}z_{2}z_{2}z_{3}=z_{1}z_{2}z_{3},\\quad z_{1}z_{2}z_{3}z_{2}z_{3}=z_{1}z_{2}z_{3}.\n$$\nHence,\n$$\nP_{\\phi}=1-z_{2}z_{3}-z_{1}z_{3}-z_{1}z_{2}+2z_{1}z_{2}z_{3}.\n$$\nThe total degree is the maximum sum of exponents in any monomial after simplification. The monomial $2z_{1}z_{2}z_{3}$ has total degree $3$, which is maximal among the terms. Therefore, the total degree of $P_{\\phi}$ is $3$.", "answer": "$$\\boxed{3}$$", "id": "1447654"}, {"introduction": "Once we can arithmetize a Boolean expression, the next step is to handle the quantifiers, $\\exists$ and $\\forall$. The interactive protocol for Quantified Boolean Formulas (QBF) processes a formula by \"peeling off\" one quantifier at a time. This practice [@problem_id:1447644] challenges you to perform the crucial first step of this protocol: constructing the initial polynomial claim that represents the entire QBF expression after accounting for all but the outermost quantifier. This will solidify your understanding of how existential quantifiers become sums and universal quantifiers become products in the algebraic domain.", "problem": "In the context of computational complexity theory, the Shamir theorem states that the complexity class IP, containing all problems solvable by an Interactive Proof system, is equal to PSPACE, the class of problems solvable by a deterministic Turing machine using a polynomial amount of space. A key part of the proof for IP = PSPACE involves the arithmetization of a Quantified Boolean Formula (QBF).\n\nThis arithmetization process translates a boolean formula into a polynomial. Let boolean variables $x_i$ take values in $\\{0, 1\\}$, where $1$ represents TRUE and $0$ represents FALSE. The logical operations are mapped to arithmetic operations as follows:\n-   $A \\land B$ is translated to the product $A \\cdot B$.\n-   $\\neg A$ is translated to $(1-A)$.\n-   $A \\lor B$ is translated to $1 - (1-A)(1-B) = A+B-AB$.\n\nSimilarly, quantifiers are translated into operations over the polynomial representation $\\phi'$ of a formula $\\phi$:\n-   $\\exists x \\phi(x)$ is translated to $\\sum_{x \\in \\{0,1\\}} \\phi'(x)$.\n-   $\\forall x \\phi(x)$ is translated to $\\prod_{x \\in \\{0,1\\}} \\phi'(x)$.\n\nAny resulting polynomial can be simplified using the property that for any variable $x_i \\in \\{0,1\\}$, $x_i^k = x_i$ for any integer $k \\ge 1$.\n\nConsider the following Quantified Boolean Formula:\n$$ \\Phi = \\exists x_1 \\forall x_2 \\exists x_3 ((x_1 \\lor x_2) \\land (\\neg x_2 \\lor x_3)) $$\n\nIn the first round of the interactive proof for this QBF, the Prover must construct a polynomial that represents the formula after peeling off the outermost quantifier. This polynomial, which we will call $P(z)$, is a function of a single variable $z$ that stands in for $x_1$. Determine the polynomial $P(z)$. Express your answer as a polynomial in the variable $z$.", "solution": "We arithmetize the propositional core $\\psi(x_{1},x_{2},x_{3})=((x_{1}\\lor x_{2})\\land(\\neg x_{2}\\lor x_{3}))$ using the given rules. First,\n$$(x_{1}\\lor x_{2}) \\mapsto x_{1}+x_{2}-x_{1}x_{2},$$\n$$(\\neg x_{2}\\lor x_{3}) \\mapsto (1-x_{2})+x_{3}-(1-x_{2})x_{3} = 1 - x_{2} + x_{2}x_{3}.$$\nThus the arithmetized formula is\n$$\\psi'(x_{1},x_{2},x_{3})=(x_{1}+x_{2}-x_{1}x_{2})(1-x_{2}+x_{2}x_{3}).$$\n\nPeeling off the outermost quantifier $\\exists x_{1}$ means we construct a polynomial $P(z)$ by fixing $x_{1}=z$ and applying the remaining quantifiers $\\forall x_{2}$ as a product over $x_{2}\\in\\{0,1\\}$ and $\\exists x_{3}$ as a sum over $x_{3}\\in\\{0,1\\}$. Therefore,\n$$P(z)=\\prod_{x_{2}\\in\\{0,1\\}}\\left(\\sum_{x_{3}\\in\\{0,1\\}}(z+x_{2}-zx_{2})(1-x_{2}+x_{2}x_{3})\\right).$$\n\nFor fixed $z$ and $x_{2}$, factor out $(z+x_{2}-zx_{2})$ from the inner sum:\n$$\\sum_{x_{3}\\in\\{0,1\\}}(z+x_{2}-zx_{2})(1-x_{2}+x_{2}x_{3})=(z+x_{2}-zx_{2})\\sum_{x_{3}\\in\\{0,1\\}}(1-x_{2}+x_{2}x_{3}).$$\nEvaluate the sum over $x_{3}$:\n$$\\sum_{x_{3}\\in\\{0,1\\}}(1-x_{2}+x_{2}x_{3})=\\bigl(1-x_{2}+x_{2}\\cdot 0\\bigr)+\\bigl(1-x_{2}+x_{2}\\cdot 1\\bigr)=(1-x_{2})+1=2-x_{2}.$$\nHence,\n$$P(z)=\\prod_{x_{2}\\in\\{0,1\\}}(z+x_{2}-zx_{2})(2-x_{2}).$$\n\nCompute the two factors explicitly:\n- For $x_{2}=0$: $(z+0-z\\cdot 0)(2-0)=z\\cdot 2=2z$.\n- For $x_{2}=1$: $(z+1-z\\cdot 1)(2-1)=(1)\\cdot 1=1$.\n\nTherefore,\n$$P(z)=(2z)\\cdot 1=2z.$$\nThis is already a polynomial in $z$ and needs no further simplification.", "answer": "$$\\boxed{2z}$$", "id": "1447644"}, {"introduction": "The security of an interactive proof rests on the Verifier's ability to catch a dishonest Prover with high probability. This security is often guaranteed by the Verifier's use of randomness. This thought experiment [@problem_id:1447618] places you in the role of a dishonest Prover who has discovered a flaw in the Verifier's designâ€”it uses a predictable value instead of a random one. Your task is to craft a fraudulent polynomial that exploits this weakness, giving you direct insight into why randomness is not just a theoretical convenience but a critical and necessary component for the integrity of interactive proof systems.", "problem": "In the study of computational complexity, Shamir's Theorem states that the class of problems with Interactive Proof systems (IP) is equal to the class of problems solvable in Polynomial Space (PSPACE). A key part of this theorem's proof is an interactive protocol for the True Quantified Boolean Formula (TQBF) problem, which is PSPACE-complete.\n\nThis protocol involves a process called arithmetization. A Quantified Boolean Formula (QBF) is converted into a polynomial expression over a finite field $\\mathbb{F}_p$. Boolean variables $x_i \\in \\{0, 1\\}$ are treated as field elements. The logical operations are converted as follows: $\\neg x$ becomes $1-x$, $a \\land b$ becomes $ab$, and $a \\lor b$ becomes $a+b-ab$. Quantifiers are also arithmetized: $\\exists x_i$ is replaced by a sum $\\sum_{x_i \\in \\{0,1\\}}$, and $\\forall x_i$ is replaced by a product $\\prod_{x_i \\in \\{0,1\\}}$. A QBF is true if and only if its arithmetized form evaluates to a non-zero value in $\\mathbb{F}_p$.\n\nConsider the following QBF, which is known to be false:\n$$ \\phi = \\exists x_1 \\forall x_2 (x_1 \\leftrightarrow x_2) $$\nThe arithmetization of the inner clause $(x_1 \\leftrightarrow x_2)$ is the polynomial $P(x_1, x_2) = 2x_1x_2 - x_1 - x_2 + 1$. The entire formula $\\phi$ correctly evaluates to 0.\n\nAn all-powerful but dishonest prover, Merlin, wants to convince a verifier, Arthur, that the value of $\\phi$ is 1. The protocol operates over the finite field $\\mathbb{F}_{101}$.\n\nThe protocol proceeds in rounds, one for each variable, from outermost to innermost.\n1.  **Round 1 ($\\exists x_1$):**\n    The arithmetization of the subformula $\\forall x_2 (x_1 \\leftrightarrow x_2)$ results in a polynomial in $x_1$, which we call $P_1(x_1)$. Merlin is supposed to send this polynomial to Arthur. Since the quantifier is $\\exists x_1$, Arthur would check if $P_1(0) + P_1(1)$ equals the claimed value of $\\phi$. Instead, Merlin sends a (potentially fraudulent) polynomial $P'_1(z)$. Arthur checks if $P'_1(0) + P'_1(1) = 1$. If this check fails, Arthur rejects.\n2.  If the check passes, Arthur picks a value $c_1 \\in \\mathbb{F}_{101}$ and sends it to Merlin. The protocol then continues on the sub-problem of verifying that $P_1(c_1)$ equals the value $P'_1(c_1)$ computed by Arthur.\n\nA particular implementation of Arthur is flawed: instead of choosing a random $c_1$, it always picks the predetermined value $c_1 = 5$. Merlin is aware of this flaw. To construct a successful deception, Merlin crafts a fraudulent polynomial $P'_1(z)$ that must satisfy two conditions:\n(i) It must pass Arthur's initial check based on the quantifier.\n(ii) It must agree with the true polynomial $P_1(z)$ at the specific point Arthur will check, i.e., $P'_1(5) = P_1(5)$. This ensures Merlin's lie is not immediately exposed.\n\nMerlin constructs his fraudulent polynomial to be of the form $P'_1(z) = az^2 + bz$. Determine the unique integer coefficients $a$ and $b$ (where $0 \\le a, b \\le 100$) that Merlin must use.", "solution": "We arithmetize the clause $x_{1} \\leftrightarrow x_{2}$ into $P(x_{1},x_{2})=2x_{1}x_{2}-x_{1}-x_{2}+1$, which satisfies $P(x_{1},x_{2})=1$ if and only if $x_{1}=x_{2}$ and $P(x_{1},x_{2})=0$ otherwise over $\\mathbb{F}_{101}$. For the universal quantifier, the subformula $\\forall x_{2}(x_{1} \\leftrightarrow x_{2})$ arithmetizes to the product over $x_{2} \\in \\{0,1\\}$:\n$$\nP_{1}(x_{1})=\\prod_{x_{2} \\in \\{0,1\\}}P(x_{1},x_{2})=P(x_{1},0)\\cdot P(x_{1},1).\n$$\nCompute each factor:\n$$\nP(x_{1},0)=2x_{1}\\cdot 0 - x_{1} - 0 + 1 = 1 - x_{1}, \\quad P(x_{1},1)=2x_{1}\\cdot 1 - x_{1} - 1 + 1 = x_{1}.\n$$\nHence\n$$\nP_{1}(x_{1})=(1-x_{1})x_{1}=x_{1}-x_{1}^{2}.\n$$\nThe outer $\\exists x_{1}$ quantifier corresponds to summing $P_{1}(x_{1})$ over $x_{1} \\in \\{0,1\\}$, yielding $P_{1}(0)+P_{1}(1)=0$ as expected for a false formula.\n\nMerlin sends $P'_{1}(z)=az^{2}+bz$ and must satisfy:\n(i) Arthurâ€™s existential check: $P'_{1}(0)+P'_{1}(1)=1$, which gives\n$$\na+b \\equiv 1 \\pmod{101}.\n$$\n(ii) Agreement at Arthurâ€™s fixed choice $c_{1}=5$: $P'_{1}(5)=P_{1}(5)$. Compute\n$$\nP_{1}(5)=5-5^{2}=5-25=-20 \\equiv 81 \\pmod{101},\n$$\nand\n$$\nP'_{1}(5)=25a+5b \\equiv 81 \\pmod{101}.\n$$\nThus we solve the linear system over $\\mathbb{F}_{101}$:\n$$\n\\begin{cases}\na+b \\equiv 1,\\\\\n25a+5b \\equiv 81.\n\\end{cases}\n$$\nFrom $b \\equiv 1-a$ and substitution:\n$$\n25a+5(1-a)=81 \\;\\Rightarrow\\; 20a+5=81 \\;\\Rightarrow\\; 20a=76.\n$$\nSince $101=5\\cdot 20+1$, we have $20^{-1}\\equiv -5 \\equiv 96 \\pmod{101}$. Therefore\n$$\na \\equiv 76 \\cdot 96 \\equiv 24 \\pmod{101}, \\quad b \\equiv 1-a \\equiv 1-24 \\equiv -23 \\equiv 78 \\pmod{101}.\n$$\nVerification: $a+b=24+78=102 \\equiv 1$ and $25a+5b=25\\cdot 24+5\\cdot 78=990 \\equiv 81 \\pmod{101}$. The coefficients are unique because the determinant $5-25=-20 \\not\\equiv 0 \\pmod{101}$.", "answer": "$$\\boxed{\\begin{pmatrix}24 & 78\\end{pmatrix}}$$", "id": "1447618"}]}