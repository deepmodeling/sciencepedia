{"hands_on_practices": [{"introduction": "To fully appreciate the unique power of BQP, it is instructive to first understand what it is not. This thought experiment asks you to consider a computing model that uses quantum principles for its construction but is restricted to only classical, reversible operations. By analyzing this model [@problem_id:1445657], you will build a foundational understanding of which features—superposition and interference—are truly essential for quantum computational advantage, and you will see how this restricted model's power maps directly onto the classical complexity class P.", "problem": "In computational complexity theory, the class BQP, which stands for Bounded-error Quantum Polynomial time, represents the set of decision problems solvable by a quantum computer in polynomial time with an error probability of at most 1/3. A universal quantum computer can implement a set of gates including the Hadamard gate and the Toffoli gate.\n\nConsider a hypothetical computing device that is constructed based on quantum principles, but its gate set is restricted. Specifically, it can only implement classical reversible gates, such as the CNOT gate and the Toffoli gate. This machine cannot create superpositions (e.g., it has no Hadamard gate) or utilize quantum interference. All computations are performed deterministically on basis states.\n\nWhich of the following classical complexity classes precisely characterizes the set of decision problems solvable in polynomial time by this restricted computing device?\n\nA. BQP\n\nB. P\n\nC. BPP (Bounded-error Probabilistic Polynomial time)\n\nD. NP (Nondeterministic Polynomial time)\n\nE. L (Logarithmic space)", "solution": "We analyze the computational power of the restricted device that can only implement classical reversible gates (such as CNOT and Toffoli), cannot create superpositions, and evolves deterministically on computational basis states.\n\nFirst, characterize the device’s operations. Since no superposition is allowed, the state is always a basis string, and each gate maps basis strings to basis strings deterministically. Therefore any circuit on $n$ bits computes a bijection\n$$\nF:\\{0,1\\}^{n}\\to\\{0,1\\}^{n},\n$$\ni.e., a permutation on bit strings. In quantum terms, the overall unitary is a permutation matrix on the computational basis; in classical terms, it is a reversible circuit.\n\nUpper bound: simulation by deterministic polynomial time. Each gate (CNOT, Toffoli) is a constant-size, deterministic operation on a constant number of bits, so a standard deterministic Turing machine can simulate each gate application in time bounded by a constant factor per gate. Thus a circuit of size polynomial in the input length can be simulated in deterministic polynomial time. Therefore, the class of languages decidable by this device in polynomial time is a subset of P.\n\nLower bound: realization of any deterministic polynomial-time computation. Any function $f:\\{0,1\\}^{m}\\to\\{0,1\\}^{k}$ computable by a deterministic Turing machine in time $T(m)$ can be simulated reversibly with at most polynomial overhead in time and space by Bennett’s reversible simulation method. Concretely, one can embed $f$ into a reversible map\n$$\n(x,0^{a})\\mapsto (x,f(x),g(x)),\n$$\nfor some number $a$ of ancilla bits and some garbage $g(x)$, using a reversible gate set. Using uncomputation, one can clean the garbage to obtain\n$$\n(x,0^{a})\\mapsto (x,f(x),0^{a}),\n$$\nwith only polynomial overhead. Since the Toffoli gate is universal for classical reversible computation, and CNOT is a standard reversible gate, this device can implement the required reversible circuits with polynomial overhead. Therefore, any language in P can be decided by this device in polynomial time. Hence P is a subset of the device’s power.\n\nCombining both inclusions, the set of decision problems solvable in polynomial time by this restricted device is exactly P.\n\nExcluding other options: BQP requires superposition and interference, which are absent; BPP requires randomness, which is absent since the evolution is deterministic; NP is a nondeterministic class and would strictly contain problems believed to be harder than P; L is a strict subclass of P in general and is too restrictive given that the device is not limited to logarithmic space.\n\nTherefore, the correct classical complexity class is P.", "answer": "$$\\boxed{B}$$", "id": "1445657"}, {"introduction": "Moving from theory to practice, this exercise challenges you to analyze a simple quantum algorithm designed to solve a decision problem. Your task is to trace the evolution of the quantum state through a series of gates and calculate the final measurement probabilities. This hands-on calculation [@problem_id:1445651] will provide crucial practice in applying the formal definition of BQP, particularly the strict probability bounds required for an algorithm to be considered a \"bounded-error\" quantum computation.", "problem": "Consider a decision problem called `EQUALITY_CHECK` which takes a two-bit string $x_1x_0$ as input. The problem's output is 'yes' if the two bits are equal ($x_1 = x_0$) and 'no' if they are different ($x_1 \\neq x_0$).\n\nAn undergraduate student proposes a quantum algorithm to solve this problem. The algorithm operates on a 2-qubit register, where the qubits are labeled 1 (most significant) and 0 (least significant). The procedure is as follows:\n\n1.  Initialize the 2-qubit register to the state corresponding to the input bit string, $|x_1x_0\\rangle$.\n2.  Apply a Hadamard (H) gate to qubit 1.\n3.  Apply a Controlled-NOT (CNOT) gate, using qubit 1 as the control and qubit 0 as the target.\n4.  Apply a second Hadamard (H) gate to qubit 1.\n5.  Measure qubit 1 in the computational basis $\\{|0\\rangle, |1\\rangle\\}$. If the measurement outcome is 0, the algorithm outputs 'yes'. If the outcome is 1, it outputs 'no'.\n\nThe actions of the gates on the computational basis states are defined as:\n- Hadamard gate: $H|0\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle)$ and $H|1\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle - |1\\rangle)$.\n- CNOT gate: Flips the target qubit if the control qubit is $|1\\rangle$. e.g., $CNOT|10\\rangle = |11\\rangle$ and $CNOT|01\\rangle = |01\\rangle$.\n\nA decision problem is in the complexity class Bounded-error Quantum Polynomial time (BQP) if there exists a quantum algorithm that, for any input instance, provides the correct answer with a probability of at least $2/3$. This is formally stated as:\n- For any 'yes' instance, the algorithm must output 'yes' with a probability $P_{\\text{yes}} \\geq 2/3$.\n- For any 'no' instance, the algorithm must output 'no' with a probability $P_{\\text{no}} \\geq 2/3$, which is equivalent to outputting 'yes' with a probability $P_{\\text{yes}} \\leq 1/3$.\n\nBased on an analysis of the student's proposed algorithm, which of the following statements is true for the `EQUALITY_CHECK` problem?\n\nA. Yes, the algorithm successfully places the problem in BQP, as it always gives the correct answer with 100% probability.\n\nB. Yes, the algorithm successfully places the problem in BQP, as the success probabilities meet the required bounds for all inputs.\n\nC. No, the algorithm fails because the probability of correctly identifying a 'yes' instance is too low, although it correctly identifies 'no' instances with sufficient probability.\n\nD. No, the algorithm fails because the probability of incorrectly identifying a 'no' instance as 'yes' is too high, although it correctly identifies 'yes' instances with sufficient probability.\n\nE. No, the algorithm fails to place the problem in BQP because for both 'yes' and 'no' instances, the success probabilities do not meet the specified bounds.", "solution": "We analyze the student's circuit step by step for an arbitrary input $|x_{1}x_{0}\\rangle$.\n\n1) Initialization:\nThe initial state is\n$$\n|x_{1}x_{0}\\rangle.\n$$\n\n2) Apply $H$ to qubit $1$:\nUsing $H|x_{1}\\rangle=\\frac{1}{\\sqrt{2}}\\left(|0\\rangle+(-1)^{x_{1}}|1\\rangle\\right)$, the state becomes\n$$\n\\frac{1}{\\sqrt{2}}\\left(|0\\rangle+(-1)^{x_{1}}|1\\rangle\\right)\\otimes|x_{0}\\rangle.\n$$\n\n3) Apply CNOT with control qubit $1$ and target qubit $0$:\nThe CNOT maps $|0\\rangle|x_{0}\\rangle\\mapsto|0\\rangle|x_{0}\\rangle$ and $|1\\rangle|x_{0}\\rangle\\mapsto|1\\rangle|x_{0}\\oplus 1\\rangle$, so the state becomes\n$$\n\\frac{1}{\\sqrt{2}}\\left(|0\\rangle|x_{0}\\rangle+(-1)^{x_{1}}|1\\rangle|x_{0}\\oplus 1\\rangle\\right).\n$$\n\n4) Apply $H$ to qubit $1$ again:\nUsing $H|0\\rangle=\\frac{1}{\\sqrt{2}}(|0\\rangle+|1\\rangle)$ and $H|1\\rangle=\\frac{1}{\\sqrt{2}}(|0\\rangle-|1\\rangle)$, the final state before measurement is\n$$\n\\frac{1}{2}\\left[(|0\\rangle+|1\\rangle)|x_{0}\\rangle+(-1)^{x_{1}}(|0\\rangle-|1\\rangle)|x_{0}\\oplus 1\\rangle\\right]\n=\n\\frac{1}{2}\\left[\n|0\\rangle\\left(|x_{0}\\rangle+(-1)^{x_{1}}|x_{0}\\oplus 1\\rangle\\right)\n+\n|1\\rangle\\left(|x_{0}\\rangle-(-1)^{x_{1}}|x_{0}\\oplus 1\\rangle\\right)\n\\right].\n$$\n\n5) Measure qubit $1$ in the computational basis and output:\n- The amplitude vector for outcome $0$ is $\\frac{1}{2}\\left(|x_{0}\\rangle+(-1)^{x_{1}}|x_{0}\\oplus 1\\rangle\\right)$.\n- The amplitude vector for outcome $1$ is $\\frac{1}{2}\\left(|x_{0}\\rangle-(-1)^{x_{1}}|x_{0}\\oplus 1\\rangle\\right)$.\n\nSince $|x_{0}\\rangle$ and $|x_{0}\\oplus 1\\rangle$ are orthonormal,\n$$\nP(\\text{measure }0)=\\left\\|\\frac{1}{2}\\left(|x_{0}\\rangle+(-1)^{x_{1}}|x_{0}\\oplus 1\\rangle\\right)\\right\\|^{2}\n=\\frac{1}{4}\\left(\\|\\,|x_{0}\\rangle\\|^{2}+\\|\\,|x_{0}\\oplus 1\\rangle\\|^{2}\\right)\n=\\frac{1}{2},\n$$\nand similarly\n$$\nP(\\text{measure }1)=\\frac{1}{2}.\n$$\n\nThe algorithm outputs 'yes' if the measurement outcome is $0$ and 'no' if the outcome is $1$. Therefore, for every input (both $x_{1}=x_{0}$ and $x_{1}\\neq x_{0}$), the algorithm outputs 'yes' with probability $\\frac{1}{2}$ and 'no' with probability $\\frac{1}{2}$.\n\nComparing to the BQP success criteria:\n- For 'yes' instances, we require $P_{\\text{yes}}\\geq \\frac{2}{3}$, but here $P_{\\text{yes}}=\\frac{1}{2}<\\frac{2}{3}$.\n- For 'no' instances, we require $P_{\\text{yes}}\\leq \\frac{1}{3}$ (equivalently $P_{\\text{no}}\\geq \\frac{2}{3}$), but here $P_{\\text{yes}}=\\frac{1}{2}>\\frac{1}{3}$.\n\nThus, the algorithm fails to meet the required bounds for both 'yes' and 'no' cases. The correct choice is E.", "answer": "$$\\boxed{E}$$", "id": "1445651"}, {"introduction": "The definitions of complexity classes often hinge on subtle but critical details, such as the required separation between acceptance and rejection probabilities. This problem explores the importance of the constant \"promise gap\" in the definition of BQP. By considering a hypothetical class where this gap is allowed to shrink exponentially [@problem_id:1445616], you will gain a deeper insight into the complexity landscape and discover the precise relationship between this modified quantum class and the classical class PP (Probabilistic Polynomial time).", "problem": "In computational complexity theory, the class BQP (Bounded-error Quantum Polynomial time) represents the set of decision problems solvable by a quantum computer in polynomial time with an error probability of at most 1/3. A key feature of this definition is the constant \"promise gap\": for any input, the acceptance probability for a \"yes\" instance is at least 2/3, and for a \"no\" instance is at most 1/3.\n\nConsider a modified version of this class, which we will call BQPE (Bounded-error Quantum Polynomial time with Exponentially small gap). A language $L$ is in BQPE if there exists a polynomial-time uniform family of quantum circuits and a polynomial $p(n)$ such that for any input string $x$ of length $n$:\n1. If $x$ is in $L$, the circuit accepts with probability $P_{\\text{acc}}(x) \\geq \\frac{1}{2} + 2^{-p(n)}$.\n2. If $x$ is not in $L$, the circuit accepts with probability $P_{\\text{acc}}(x) \\leq \\frac{1}{2} - 2^{-p(n)}$.\n\nThis new class, BQPE, relaxes the requirement of a constant promise gap to one that can shrink exponentially with the input size. Which of the following well-known classical complexity classes is equivalent to BQPE?\n\nA. P (Polynomial time)\n\nB. BPP (Bounded-error Probabilistic Polynomial time)\n\nC. PP (Probabilistic Polynomial time)\n\nD. PSPACE (Polynomial Space)", "solution": "We compare the class BQPE, defined by a polynomial-time uniform family of quantum circuits whose acceptance probability has an exponentially small additive gap around one-half, with standard classical complexity classes. We will show BQPE equals PP by proving both containments BQPE ⊆ PP and PP ⊆ BQPE.\n\nFirst, we recall a standard characterization of quantum acceptance probabilities in terms of GapP functions. For a polynomial-time uniform family of quantum circuits over a finite universal gate set (e.g., Hadamard and Toffoli), the acceptance probability on input x has the form\n$$\nP_{\\text{acc}}(x) = \\frac{F(x)}{2^{Q(n)}}\n$$\nfor some polynomial Q and some function $F \\in \\mathrm{GapP}$. This follows from the path-sum/formal amplitude expansion of the circuit, where amplitudes are rational combinations of $2^{-k/2}$ and acceptance probabilities are sums of squared amplitudes, yielding dyadic rationals with denominators $2^{\\mathrm{poly}(n)}$, and more precisely from the known containment $\\mathrm{BQP} \\subseteq \\mathrm{AWPP} \\subseteq \\mathrm{PP}$ and the fact that the relevant numerators are GapP functions. We use that GapP is closed under addition, subtraction, and multiplication by powers of two computable in polynomial time.\n\nContainment BQPE ⊆ PP: Let $L \\in \\mathrm{BQPE}$, so there exists a uniform circuit family and a polynomial p such that for all inputs x of length n,\n$$\nx \\in L \\implies P_{\\text{acc}}(x) \\geq \\frac{1}{2} + 2^{-p(n)}, \\quad x \\notin L \\implies P_{\\text{acc}}(x) \\leq \\frac{1}{2} - 2^{-p(n)}.\n$$\nLet $P_{\\text{acc}}(x) = F(x)/2^{Q(n)}$ with $F \\in \\mathrm{GapP}$. Define\n$$\nH(x) = 2 F(x) - 2^{Q(n)}.\n$$\nBy closure properties, $H \\in \\mathrm{GapP}$. Note that\n$$\n2 P_{\\text{acc}}(x) - 1 = \\frac{2 F(x) - 2^{Q(n)}}{2^{Q(n)}} = \\frac{H(x)}{2^{Q(n)}}.\n$$\nUsing the BQPE gap, we have:\n- If $x \\in L$, then $2 P_{\\text{acc}}(x) - 1 \\geq 2^{-p(n)}$, hence $H(x) \\geq 2^{Q(n)} \\cdot 2^{-p(n)} > 0$.\n- If $x \\notin L$, then $2 P_{\\text{acc}}(x) - 1 \\leq -2^{-p(n)}$, hence $H(x) \\leq -2^{Q(n)} \\cdot 2^{-p(n)} < 0$.\nTherefore $x \\in L$ iff $H(x) > 0$, with $H \\in \\mathrm{GapP}$. By the standard definition of PP as languages decidable by the sign of a GapP function, this implies $L \\in \\mathrm{PP}$. Hence $\\mathrm{BQPE} \\subseteq \\mathrm{PP}$.\n\nContainment PP ⊆ BQPE: Let $L \\in \\mathrm{PP}$. Then there exists $G \\in \\mathrm{GapP}$ such that\n$$\nx \\in L \\iff G(x) > 0, \\quad x \\notin L \\iff G(x) \\leq 0.\n$$\nTo ensure a strict margin away from zero on both sides, define\n$$\nG'(x) = 2 G(x) - 1.\n$$\nThen $G' \\in \\mathrm{GapP}$, and we have:\n- If $x \\in L$ then $G(x) \\geq 1$, so $G'(x) \\geq 1$.\n- If $x \\notin L$ then $G(x) \\leq 0$, so $G'(x) \\leq -1$.\nWe next map $G'$ into a quantum acceptance probability with a controlled bias around one-half. There is a standard quantum construction that, given a GapP function $g(x)$ with $|g(x)| \\leq 2^{R(n)}$ for some polynomial R, produces a polynomial-time uniform quantum circuit whose acceptance probability is\n$$\nP_{\\text{acc}}(x) = \\frac{1}{2} + \\frac{g(x)}{2^{S(n)}}\n$$\nfor some polynomial $S$ (one may take $S(n) = R(n) + c$ for a fixed constant c). The construction proceeds by encoding the counting computation underlying $g$ into interference: prepare a uniform superposition over nondeterministic branches using Hadamard gates, compute the branch predicate coherently, apply a conditional phase flip to encode the sign, uncompute, and then apply a Hadamard test to convert the resulting amplitude into an additive bias in a one-bit measurement; the numerator of that bias is exactly the GapP function value, and the denominator is a power of two bounded by an exponential in a polynomial.\n\nApply this with $g(x) = G'(x)$. Then we obtain a uniform quantum circuit with\n$$\nP_{\\text{acc}}(x) = \\frac{1}{2} + \\frac{G'(x)}{2^{S(n)}}.\n$$\nUsing the bounds on $G'$,\n- If $x \\in L$, then $G'(x) \\geq 1$, so $P_{\\text{acc}}(x) \\geq \\frac{1}{2} + 2^{-S(n)}$.\n- If $x \\notin L$, then $G'(x) \\leq -1$, so $P_{\\text{acc}}(x) \\leq \\frac{1}{2} - 2^{-S(n)}$.\nLet $p(n) = S(n)$. This matches the BQPE definition with a polynomially bounded exponent. Hence $L \\in \\mathrm{BQPE}$, and therefore $\\mathrm{PP} \\subseteq \\mathrm{BQPE}$.\n\nCombining both containments, we conclude $\\mathrm{BQPE} = \\mathrm{PP}$. Among the provided options, this is option C.", "answer": "$$\\boxed{C}$$", "id": "1445616"}]}