{"hands_on_practices": [{"introduction": "While Grover's algorithm provides a significant speedup for unstructured search, its performance is not uniform across all scenarios. This first exercise explores a unique and illuminating special case where the number of marked items is exactly one-quarter of the total database size. By working through this problem, you will see how the geometry of the algorithm can lead to a perfect, 100% success rate with just a single iteration, providing a crystal-clear illustration of the state vector's rotation in Hilbert space. [@problem_id:1426374]", "problem": "A quantum computing researcher is tasked with searching a large, unstructured database containing a total of $N$ items. The goal is to identify items that possess a specific property, which we will call \"marked\" items. The researcher uses Grover's quantum search algorithm for this task.\n\nIt is known from the database's specification that the number of marked items, $M$, is exactly one-quarter of the total number of items, i.e., $M = N/4$. The algorithm begins with the system in an equal superposition of all possible states. A single Grover iteration then applies a specific unitary transformation to the state of the system.\n\nAssuming the quantum computer operates without any errors, determine the smallest non-negative integer number of Grover iterations, $k_{opt}$, required to maximize the probability of measuring a marked item upon measurement. Additionally, calculate this maximum success probability, $P_{max}$.\n\nProvide your answer as a pair of numbers for $(k_{opt}, P_{max})$.", "solution": "Let $N$ be the total number of database items and $M$ the number of marked items. In Grover’s algorithm, the dynamics are confined to the two-dimensional subspace spanned by the uniform superpositions over marked and unmarked states. Denote the equal superposition over all items by $|s\\rangle$ and parameterize its overlap with the marked subspace by an angle $\\theta$ defined through\n$$\n\\sin^{2}(\\theta)=\\frac{M}{N}.\n$$\nA single Grover iteration effects a rotation by angle $2\\theta$ in this plane toward the marked subspace. After $k$ Grover iterations, the state has overlap with the marked subspace whose amplitude is\n$$\n\\sin\\big((2k+1)\\theta\\big),\n$$\nso the success probability after $k$ iterations is\n$$\nP_{k}=\\sin^{2}\\big((2k+1)\\theta\\big).\n$$\nGiven $M=\\frac{N}{4}$, we have\n$$\n\\sin^{2}(\\theta)=\\frac{1}{4}\\quad\\Rightarrow\\quad \\sin(\\theta)=\\frac{1}{2}\\quad\\Rightarrow\\quad \\theta=\\arcsin\\!\\left(\\frac{1}{2}\\right)=\\frac{\\pi}{6}.\n$$\nTherefore,\n$$\nP_{k}=\\sin^{2}\\!\\left((2k+1)\\frac{\\pi}{6}\\right).\n$$\nTo maximize $P_{k}$ over non-negative integers $k$, note that $\\sin^{2}(x)$ attains its maximum value $1$ when $x=\\frac{\\pi}{2}+m\\pi$ for integer $m$. The smallest non-negative $k$ satisfying\n$$\n(2k+1)\\frac{\\pi}{6}=\\frac{\\pi}{2}\n$$\nis obtained by solving $2k+1=3$, which gives $k=1$. Substituting back yields\n$$\nP_{\\max}=\\sin^{2}\\!\\left(\\frac{\\pi}{2}\\right)=1.\n$$\nHence the smallest non-negative integer number of Grover iterations that maximizes the success probability is $k_{\\text{opt}}=1$, and the maximum success probability is $P_{\\max}=1$.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 1 \\end{pmatrix}}$$", "id": "1426374"}, {"introduction": "In a realistic search scenario, finding the target item is a probabilistic process, and the likelihood of success depends critically on when you 'stop and look.' Due to the rotational nature of Grover's algorithm, running too many iterations can be as counterproductive as running too few, causing the state to rotate past the target. This practice will guide you through the essential calculation of determining the optimal number of iterations to maximize your chances of success, a fundamental skill for implementing the algorithm effectively. [@problem_id:1426405]", "problem": "A cybersecurity team is using a quantum computer to search for vulnerabilities in a cryptographic system. The total search space consists of $N = 2^{10}$ possible configurations. Due to a design flaw, it is known that exactly $M=4$ of these configurations are \"weak\" and will compromise the system's security if found. The team employs Grover's search algorithm to find one of these weak configurations.\n\nIn Grover's algorithm, a sequence of quantum operations, collectively known as a \"Grover iteration,\" is applied repeatedly to a quantum state. After a certain number of iterations, a measurement is performed. The probability of measuring a weak configuration depends on the number of iterations performed.\n\nDetermine the optimal number of Grover iterations, $k$, that the team should perform to have the highest probability of identifying a weak configuration upon measurement. The number of iterations must be an integer.", "solution": "Let $N$ be the total number of items and $M$ the number of marked (weak) items. In Grover’s algorithm, define the angle $\\theta$ by\n$$\n\\sin(\\theta)=\\sqrt{\\frac{M}{N}}.\n$$\nAfter $k$ Grover iterations, the success probability is\n$$\nP(k)=\\sin^{2}\\big((2k+1)\\theta\\big).\n$$\nThis is maximized when $(2k+1)\\theta$ is as close as possible to $\\frac{\\pi}{2}$, which yields the optimal iteration count\n$$\nk^*=\\left\\lfloor \\frac{\\pi}{4\\theta}-\\frac{1}{2}\\right\\rfloor.\n$$\nFor the given values $N=2^{10}$ and $M=4$,\n$$\n\\sqrt{\\frac{M}{N}}=\\sqrt{\\frac{4}{2^{10}}}=\\sqrt{\\frac{1}{256}}=\\frac{1}{16},\n$$\nso\n$$\n\\theta=\\arcsin\\!\\left(\\frac{1}{16}\\right).\n$$\nThus,\n$$\nk^*=\\left\\lfloor \\frac{\\pi}{4\\arcsin\\!\\left(\\frac{1}{16}\\right)}-\\frac{1}{2}\\right\\rfloor.\n$$\nTo select the correct integer, evaluate approximately. Using the series for $\\arcsin(x)$ at $x=\\frac{1}{16}$,\n$$\n\\arcsin(x)=x+\\frac{x^{3}}{6}+\\frac{3x^{5}}{40}+\\frac{5x^{7}}{112}+\\cdots,\n$$\ngives\n$$\n\\theta=\\arcsin\\!\\left(\\frac{1}{16}\\right)\\approx 0.062540761796,\n$$\nhence\n$$\n\\frac{\\pi}{4\\theta}\\approx \\frac{3.141592653589793}{4\\times 0.062540761796}\\approx 12.5581803,\n$$\nand so\n$$\n\\frac{\\pi}{4\\theta}-\\frac{1}{2}\\approx 12.0581803.\n$$\nTaking the floor yields $k^*=12$. Equivalently, using the common approximation $k \\approx \\left\\lfloor \\frac{\\pi}{4}\\sqrt{\\frac{N}{M}} \\right\\rfloor$ gives $\\left\\lfloor \\frac{\\pi}{4}\\cdot 16 \\right\\rfloor=\\left\\lfloor 4\\pi \\right\\rfloor=12$, consistent with the more accurate computation.", "answer": "$$\\boxed{12}$$", "id": "1426405"}, {"introduction": "The 'oracle' is the seemingly magical black box at the core of Grover's algorithm, but in reality, it's a quantum circuit we must build from basic components. This exercise bridges the gap between the abstract oracle function and its physical implementation. You will learn a standard technique for constructing an oracle that marks a specific bitstring, translating a high-level algorithmic requirement into a concrete sequence of quantum gates. [@problem_id:1426395]", "problem": "In the development of a quantum search algorithm for a 3-qubit system, a key component is the \"oracle\" operator, $U_w$. This operator is designed to identify a specific \"marked\" computational basis state, $|w\\rangle$, by applying a phase shift of $-1$ to it, while leaving all other basis states unchanged. The action of the oracle is formally described by the transformation $U_w|x\\rangle = (-1)^{f(x)}|x\\rangle$, where $f(x)=1$ if the input state $|x\\rangle$ is the marked state $|w\\rangle$, and $f(x)=0$ otherwise.\n\nConsider a 3-qubit register where the qubits are indexed from right to left, such that a general basis state is written as $|q_2 q_1 q_0\\rangle$. The marked state for our search problem is $|w\\rangle = |110\\rangle$.\n\nYou are provided with a library of elementary quantum gates to construct the oracle. This library includes:\n1.  A single-qubit Pauli-X gate, denoted as $X_k$, which acts on qubit $k$. This gate flips the state of the qubit, such that $X_k|0\\rangle = |1\\rangle$ and $X_k|1\\rangle = |0\\rangle$.\n2.  A three-qubit doubly-controlled-Z gate, denoted as $CCZ_{i,j,k}$. This gate applies a Pauli-Z gate to a target qubit $k$ if and only if both control qubits $i$ and $j$ are in the state $|1\\rangle$. The Pauli-Z gate applies a phase flip to the $|1\\rangle$ state ($Z|1\\rangle = -|1\\rangle$) and leaves the $|0\\rangle$ state unchanged ($Z|0\\rangle = |0\\rangle$). Consequently, the $CCZ_{i,j,k}$ gate applies a phase of $-1$ only to the basis state where qubits $i, j, k$ are all $|1\\rangle$.\n\nGate sequences are written in the order of application from right to left. For example, the sequence $A \\cdot B \\cdot C$ means that gate $C$ is applied first, followed by gate $B$, and finally gate $A$.\n\nWhich of the following gate sequences correctly implements the required oracle for the marked state $|w\\rangle = |110\\rangle$?\n\nA. $CCZ_{2,1,0}$\n\nB. $X_0 \\cdot CCZ_{2,1,0} \\cdot X_0$\n\nC. $X_2 \\cdot CCZ_{2,1,0} \\cdot X_2$\n\nD. $X_1 \\cdot CCZ_{2,1,0} \\cdot X_1$\n\nE. $X_2 \\cdot X_1 \\cdot CCZ_{2,1,0} \\cdot X_1 \\cdot X_2$", "solution": "We require an oracle $U_{w}$ that acts on computational basis states as\n$$\nU_{w}|q_{2}q_{1}q_{0}\\rangle =\n\\begin{cases}\n-\\,|q_{2}q_{1}q_{0}\\rangle, & \\text{if } |q_{2}q_{1}q_{0}\\rangle=|110\\rangle,\\\\\n\\;\\;|q_{2}q_{1}q_{0}\\rangle, & \\text{otherwise}.\n\\end{cases}\n$$\nEquivalently, for bit values $q_{k}\\in\\{0,1\\}$, this is\n$$\nU_{w}|q_{2}q_{1}q_{0}\\rangle = (-1)^{q_{2}q_{1}(1-q_{0})}|q_{2}q_{1}q_{0}\\rangle,\n$$\nso only the state with $q_{2}=1$, $q_{1}=1$, $q_{0}=0$ acquires a phase of $-1$.\n\nThe available $CCZ_{2,1,0}$ gate applies a phase $-1$ only to $|111\\rangle$, i.e.,\n$$\nCCZ_{2,1,0}|q_{2}q_{1}q_{0}\\rangle = (-1)^{q_{2}q_{1}q_{0}}|q_{2}q_{1}q_{0}\\rangle.\n$$\nTo shift the marked pattern from $|111\\rangle$ to $|110\\rangle$, we conjugate $CCZ_{2,1,0}$ by $X_{0}$, flipping the third qubit (the target) before and after:\n$$\nU := X_{0}\\cdot CCZ_{2,1,0}\\cdot X_{0}.\n$$\nActing on a general basis state,\n1) The rightmost $X_{0}$ maps $|q_{2}q_{1}q_{0}\\rangle$ to $|q_{2}q_{1}\\bar{q}_{0}\\rangle$ with $\\bar{q}_{0}=1-q_{0}$.\n2) Then $CCZ_{2,1,0}$ contributes a phase $-1$ if and only if $q_{2}=1$, $q_{1}=1$, and $\\bar{q}_{0}=1$, i.e., precisely when $q_{2}=1$, $q_{1}=1$, $q_{0}=0$.\n3) The leftmost $X_{0}$ restores the third qubit, yielding the original basis state and the intended phase.\n\nHence\n$$\n\\left(X_{0}\\cdot CCZ_{2,1,0}\\cdot X_{0}\\right)|q_{2}q_{1}q_{0}\\rangle\n= (-1)^{q_{2}q_{1}(1-q_{0})}|q_{2}q_{1}q_{0}\\rangle,\n$$\nwhich is exactly the desired oracle for the marked state $|110\\rangle$.\n\nVerification of other options:\n- $CCZ_{2,1,0}$ alone marks $|111\\rangle$, not $|110\\rangle$.\n- $X_{2}\\cdot CCZ_{2,1,0}\\cdot X_{2}$ marks states with $q_{2}=0$, $q_{1}=1$, $q_{0}=1$, i.e., $|011\\rangle$.\n- $X_{1}\\cdot CCZ_{2,1,0}\\cdot X_{1}$ marks $|101\\rangle$.\n- $X_{2}\\cdot X_{1}\\cdot CCZ_{2,1,0}\\cdot X_{1}\\cdot X_{2}$ marks $|001\\rangle$.\n\nTherefore, the correct sequence is $X_{0}\\cdot CCZ_{2,1,0}\\cdot X_{0}$, which is option B.", "answer": "$$\\boxed{B}$$", "id": "1426395"}]}