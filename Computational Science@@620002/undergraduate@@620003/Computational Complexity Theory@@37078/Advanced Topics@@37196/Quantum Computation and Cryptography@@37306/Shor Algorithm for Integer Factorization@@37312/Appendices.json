{"hands_on_practices": [{"introduction": "The heart of Shor's algorithm is a quantum subroutine designed to do one thing exceptionally well: find the period of a modular exponentiation function, $f(x) = a^x \\pmod{N}$. Before we can appreciate the power of the quantum approach, we must first understand this property classically. This exercise grounds the abstract concept of a period in a concrete, manual calculation, allowing you to see firsthand the periodic nature that the quantum computer exploits. [@problem_id:1447896]", "problem": "Consider a function $f$ that maps non-negative integers to a finite set of integers, defined by the rule $f(x) = a^x \\pmod{N}$, where $a$ and $N$ are positive integers such that the greatest common divisor of $a$ and $N$ is 1. This function is periodic. The period, denoted by $r$, is the smallest positive integer for which $a^r \\equiv 1 \\pmod{N}$.\n\nFor the specific case where the base is $a=7$ and the modulus is $N=15$, determine the period $r$ of the function $f(x) = 7^x \\pmod{15}$ by direct computation.", "solution": "We are asked to find the period (multiplicative order) $r$ of $a=7$ modulo $N=15$, defined as the smallest positive integer $r$ such that $7^{r} \\equiv 1 \\pmod{15}$. Since $\\gcd(7,15)=1$, powers of $7$ modulo $15$ are well-defined in the multiplicative group modulo $15$. By Euler's theorem, $7^{\\varphi(15)} \\equiv 1 \\pmod{15}$, where $\\varphi(15)=\\varphi(3)\\varphi(5)=2 \\cdot 4 = 8$, so the order $r$ must divide $8$. We proceed by direct computation to find the smallest such $r$.\n\nCompute successive powers of $7$ modulo $15$ using the property that if $x \\equiv y \\pmod{15}$, then $7x \\equiv 7y \\pmod{15}$:\n\n$7^{1} \\equiv 7 \\pmod{15}$, which is not congruent to $1$.\n\n$7^{2} \\equiv 7 \\cdot 7 = 49 \\equiv 49 - 45 = 4 \\pmod{15}$, which is not congruent to $1$.\n\n$7^{3} \\equiv 7 \\cdot 7^{2} \\equiv 7 \\cdot 4 = 28 \\equiv 28 - 15 = 13 \\pmod{15}$, which is not congruent to $1$.\n\n$7^{4} \\equiv 7 \\cdot 7^{3} \\equiv 7 \\cdot 13 = 91 \\equiv 91 - 90 = 1 \\pmod{15}$.\n\nThus the smallest positive integer $r$ such that $7^{r} \\equiv 1 \\pmod{15}$ is $r=4$. This also aligns with the fact that the order must divide $8$, and we have verified that no smaller positive exponent among $1,2,3$ yields $1$ modulo $15$.", "answer": "$$\\boxed{4}$$", "id": "1447896"}, {"introduction": "Finding the period $r$ is a major milestone, but the algorithm is not yet finished. The next step is a purely classical computation that uses $r$ to extract factors of $N$. However, success is not guaranteed even if the period is found correctly and is even. This problem has you analyze a key scenario where the algorithm fails, forcing a restart. Understanding these failure conditions is crucial for appreciating why Shor's algorithm is probabilistic, succeeding with high probability rather than certainty on any single run. [@problem_id:1447883]", "problem": "In the context of Shor's algorithm for factoring a large composite integer $N$, a random integer $a$ is chosen such that $a$ is coprime to $N$ (i.e., their Greatest Common Divisor (GCD) is 1), and $1 < a < N$. The quantum part of the algorithm is then used to find the period $r$, which is the smallest positive integer such that $a^r \\equiv 1 \\pmod N$.\n\nSuppose that the algorithm has successfully found the period $r$, and it turns out that $r$ is an even number. The next step in the classical post-processing of the algorithm involves using this period to find a non-trivial factor of $N$ (i.e., a factor other than 1 or $N$). However, this step can sometimes fail, yielding only trivial factors.\n\nLet $y = a^{r/2}$. Which of the following conditions on $y \\pmod N$ would cause this final classical step of the algorithm to fail to find a non-trivial factor?\n\nA. $y \\equiv 0 \\pmod N$\n\nB. $y \\equiv 1 \\pmod N$\n\nC. $y \\equiv -1 \\pmod N$\n\nD. $y$ is a prime number.", "solution": "The core of Shor's algorithm's classical post-processing relies on number theory. The quantum part of the algorithm finds the period $r$ of the function $f(x) = a^x \\pmod N$. By definition of the period, we have:\n$$a^r \\equiv 1 \\pmod N$$\n\nThe problem states that the period $r$ found is even. This allows us to rewrite the congruence as a difference of squares. Let $r = 2k$ for some integer $k$. Then $r/2 = k$.\n$$(a^{r/2})^2 \\equiv 1 \\pmod N$$\n$$(a^{r/2})^2 - 1 \\equiv 0 \\pmod N$$\n$$(a^{r/2} - 1)(a^{r/2} + 1) \\equiv 0 \\pmod N$$\n\nThis congruence means that the product $(a^{r/2} - 1)(a^{r/2} + 1)$ is a multiple of $N$.\nThis does not mean that either $(a^{r/2} - 1)$ or $(a^{r/2} + 1)$ must be a multiple of $N$. Since $N$ is a composite number we are trying to factor (e.g., $N=pq$), it is possible that one factor of $N$ (say $p$) divides $(a^{r/2} - 1)$ and the other factor ($q$) divides $(a^{r/2} + 1)$.\n\nShor's algorithm leverages this by computing the Greatest Common Divisor (GCD) of each term with $N$:\n$$d_1 = \\gcd(a^{r/2} - 1, N)$$\n$$d_2 = \\gcd(a^{r/2} + 1, N)$$\n\nIf either $d_1$ or $d_2$ is a number other than 1 or $N$, we have found a non-trivial factor, and the algorithm succeeds. The algorithm fails if both $d_1$ and $d_2$ are trivial factors (1 or $N$).\n\nLet's analyze the given options in the context of failure. Let $y = a^{r/2}$.\n\n**Case for Option B: $y \\equiv 1 \\pmod N$**\nIf $y \\equiv 1 \\pmod N$, then $a^{r/2} \\equiv 1 \\pmod N$. This contradicts the definition of $r$ as being the *smallest* positive integer for which $a^r \\equiv 1 \\pmod N$. If $a^{r/2} \\equiv 1 \\pmod N$, the period would be $r/2$ or a divisor of $r/2$, not $r$. Thus, this case is ruled out by the premise that $r$ is the period.\n\n**Case for Option C: $y \\equiv -1 \\pmod N$**\nIf $y \\equiv -1 \\pmod N$, then $a^{r/2} \\equiv -1 \\pmod N$. Let's compute the potential factors $d_1$ and $d_2$.\nFor $d_1$:\n$$d_1 = \\gcd(a^{r/2} - 1, N) = \\gcd(-1 - 1, N) = \\gcd(-2, N)$$\nFor a large integer $N$ that is not 2, $\\gcd(-2, N)$ will be either 1 (if $N$ is odd) or 2 (if $N$ is even). In either case, it does not reveal a significant non-trivial factor of a large composite $N$. So we get a trivial or near-trivial factor.\n\nFor $d_2$:\n$$d_2 = \\gcd(a^{r/2} + 1, N)$$\nSince $a^{r/2} \\equiv -1 \\pmod N$, it follows that $a^{r/2} + 1$ is a multiple of $N$. Therefore,\n$$d_2 = \\gcd(a^{r/2} + 1, N) = N$$\nIn this scenario, the two factors we compute are trivial (1 and $N$, assuming $N$ is odd and large). The algorithm has failed to find a non-trivial factor of $N$. This is the failure condition we are looking for.\n\n**Case for Option A: $y \\equiv 0 \\pmod N$**\nIf $y \\equiv 0 \\pmod N$, then $a^{r/2} \\equiv 0 \\pmod N$. This would mean $N$ divides $a^{r/2}$. However, the algorithm starts by choosing $a$ to be coprime to $N$, i.e., $\\gcd(a, N) = 1$. If $\\gcd(a, N) = 1$, then $\\gcd(a^k, N) = 1$ for any positive integer $k$. Therefore, $N$ cannot divide $a^{r/2}$ (unless $N=1$, which is not a case for factorization). So, this situation is impossible.\n\n**Case for Option D: $y$ is a prime number**\nThe value of $y = a^{r/2}$ itself is not what's important, but rather its value modulo $N$. Whether $y$ is prime or composite has no direct bearing on whether $\\gcd(y \\pm 1, N)$ will yield a non-trivial factor of $N$. This option is irrelevant to the logic of the algorithm.\n\nBased on the analysis, the condition that causes the classical step of Shor's algorithm to fail is $y \\equiv -1 \\pmod N$.", "answer": "$$\\boxed{C}$$", "id": "1447883"}, {"introduction": "A crucial detail of Shor's algorithm is that the quantum period-finding subroutine does not simply return the period $r$. Instead, it returns a measurement that provides a very good rational approximation of a fraction involving $r$. The final step in obtaining the period is a classical procedure. This exercise walks you through the application of the continued fraction algorithm, an elegant and efficient method for converting the quantum computer's output into the exact integer period needed for factorization. [@problem_id:1447898]", "problem": "In the classical post-processing stage of Shor's algorithm for integer factorization, a measurement result $y$ obtained from an $m$-qubit register is used to form the fraction $\\frac{y}{2^m}$. This fraction serves as an approximation of an unknown rational number $\\frac{c}{r}$, where $r$ is the desired period of a modular exponentiation function and $c$ is an integer coprime to $r$. The continued fraction algorithm provides a highly efficient method for recovering the period $r$ by finding the best rational approximations of $\\frac{y}{2^m}$.\n\nSuppose that in an attempt to factor a large integer, the Quantum Phase Estimation subroutine of Shor's algorithm utilizes an ancillary register of $m=11$ qubits. A measurement on this register yields the integer value $y=381$. It is known from the theoretical guarantees of the algorithm that the period $r$ must be less than 60.\n\nYour task is to analyze this measurement outcome. Apply the continued fraction algorithm to the value $\\frac{y}{2^m}$ to generate the sequence of its rational approximations (convergents). From this sequence, identify the \"best\" rational approximation $\\frac{p}{q}$, which is defined for this problem as the convergent with the largest denominator $q$ that still satisfies the known constraint $q < 60$. Report this denominator $q$ as your final answer.", "solution": "We form the measured rational number using the given data. With $m=11$ and $y=381$, we have\n$$\nx=\\frac{y}{2^{m}}=\\frac{381}{2^{11}}=\\frac{381}{2048}.\n$$\nTo obtain the continued fraction of $x$, apply the Euclidean algorithm to the pair $(2048,381)$ to extract the partial quotients. Perform the divisions:\n$$\n2048=5\\cdot 381+143,\\quad 381=2\\cdot 143+95,\\quad 143=1\\cdot 95+48,\n$$\n$$\n95=1\\cdot 48+47,\\quad 48=1\\cdot 47+1,\\quad 47=47\\cdot 1+0.\n$$\nThus the continued fraction of $\\frac{2048}{381}$ is $[5;2,1,1,1,47]$, and therefore the continued fraction of $x=\\frac{381}{2048}$ is\n$$\n[0;5,2,1,1,1,47].\n$$\nCompute the convergents $p_{k}/q_{k}$ via the standard recurrences with $a_{0}=0$, $a_{1}=5$, $a_{2}=2$, $a_{3}=1$, $a_{4}=1$, $a_{5}=1$, $a_{6}=47$, and initial conditions $p_{-2}=0$, $p_{-1}=1$, $q_{-2}=1$, $q_{-1}=0$:\n$$\np_{k}=a_{k}p_{k-1}+p_{k-2},\\quad q_{k}=a_{k}q_{k-1}+q_{k-2}.\n$$\nStep by step:\n- $k=0$: $p_{0}=0\\cdot 1+0=0$, $q_{0}=0\\cdot 0+1=1$, so $\\frac{p_{0}}{q_{0}}=\\frac{0}{1}$.\n- $k=1$: $p_{1}=5\\cdot 0+1=1$, $q_{1}=5\\cdot 1+0=5$, so $\\frac{p_{1}}{q_{1}}=\\frac{1}{5}$.\n- $k=2$: $p_{2}=2\\cdot 1+0=2$, $q_{2}=2\\cdot 5+1=11$, so $\\frac{p_{2}}{q_{2}}=\\frac{2}{11}$.\n- $k=3$: $p_{3}=1\\cdot 2+1=3$, $q_{3}=1\\cdot 11+5=16$, so $\\frac{p_{3}}{q_{3}}=\\frac{3}{16}$.\n- $k=4$: $p_{4}=1\\cdot 3+2=5$, $q_{4}=1\\cdot 16+11=27$, so $\\frac{p_{4}}{q_{4}}=\\frac{5}{27}$.\n- $k=5$: $p_{5}=1\\cdot 5+3=8$, $q_{5}=1\\cdot 27+16=43$, so $\\frac{p_{5}}{q_{5}}=\\frac{8}{43}$.\n- $k=6$: $p_{6}=47\\cdot 8+5=381$, $q_{6}=47\\cdot 43+27=2048$, so $\\frac{p_{6}}{q_{6}}=\\frac{381}{2048}$.\n\nThe convergents thus have denominators $1,5,11,16,27,43,2048$. Under the constraint $q<60$, the convergent with the largest denominator is $\\frac{8}{43}$, so the required denominator is $q=43$.", "answer": "$$\\boxed{43}$$", "id": "1447898"}]}