{"hands_on_practices": [{"introduction": "Our first practice problem delves into the core of efficient computation by examining a system of linear equations over the finite field $GF(2)$. This exercise demonstrates how fundamental principles from linear algebra, specifically the rank-nullity theorem, can be used to develop a polynomial-time algorithm for a counting problem. By determining the number of solutions to $Ax=b$, you will gain a concrete understanding of what it means for a function to be in the class FP [@problem_id:1419328].", "problem": "In computational complexity theory, the class FP (Function-P) is the set of function problems that can be computed by a deterministic Turing machine in polynomial time. A function problem takes an input string and produces an output string, in contrast to a decision problem which outputs a simple 'yes' or 'no'.\n\nConsider the following function problem, which we'll call `CountGF2Solutions`. The input to this problem is a system of $m$ linear equations in $n$ variables, where all coefficients and constants belong to the finite field of two elements, $GF(2) = \\{0, 1\\}$. This system can be compactly represented by an $m \\times n$ matrix $A$ and an $m \\times 1$ vector $b$, both with entries from $\\{0, 1\\}$, representing the equation $Ax = b$. The function `CountGF2Solutions` must output the number of distinct solution vectors $x \\in \\{0, 1\\}^n$ for the given system.\n\nIt is a known result that `CountGF2Solutions` belongs to the class FP, meaning its output can be calculated in polynomial time with respect to the input size (proportional to $m \\times n$). A crucial step in proving this involves establishing a formula for the number of solutions, assuming the system is consistent (i.e., at least one solution exists).\n\nLet $r$ be the rank of the coefficient matrix $A$. Assuming the system $Ax=b$ is known to be consistent, what is the total number of distinct solutions? Express your answer as an analytical expression in terms of $n$ and $r$.", "solution": "We work over the vector space $(\\mathrm{GF}(2))^{n}$. Let $A$ be an $m \\times n$ matrix over $\\mathrm{GF}(2)$ with rank $r$, and suppose the system $Ax=b$ is consistent. Then there exists a particular solution $x_{0}$ such that $Ax_{0}=b$.\n\nThe set of all solutions is\n$$\nS=\\{x \\in (\\mathrm{GF}(2))^{n} : Ax=b\\}=\\{x_{0}+y : y \\in \\ker(A)\\}=x_{0}+\\ker(A).\n$$\nThe map $\\phi:\\ker(A)\\to S$ defined by $\\phi(y)=x_{0}+y$ is a bijection because addition by a fixed vector is invertible in an abelian group. Therefore,\n$$\n|S|=|\\ker(A)|.\n$$\nConsider the linear transformation $T:(\\mathrm{GF}(2))^{n}\\to(\\mathrm{GF}(2))^{m}$ given by $T(x)=Ax$. By the rank-nullity theorem,\n$$\n\\dim(\\ker(A))+\\operatorname{rank}(A)=n,\n$$\nso\n$$\n\\dim(\\ker(A))=n-r.\n$$\nOver $\\mathrm{GF}(2)$, any vector space of dimension $d$ has exactly $2^{d}$ elements, since each vector is a linear combination of a basis with coefficients in $\\{0,1\\}$. Hence,\n$$\n|\\ker(A)|=2^{\\dim(\\ker(A))}=2^{n-r}.\n$$\nCombining these, the total number of solutions is\n$$\n|S|=2^{n-r}.\n$$", "answer": "$$\\boxed{2^{n-r}}$$", "id": "1419328"}, {"introduction": "Next, we move from the algebraic world to a classic combinatorial challenge: counting the number of valid colorings for a graph. This problem asks you to find a formula for the number of ways to 3-color a cycle graph, a structure that appears in various design and network contexts. The solution showcases the power of recurrence relations as a tool for systematically counting complex arrangements and confirms that this problem, too, can be solved efficiently [@problem_id:1419344].", "problem": "A designer is creating a decorative circular chain composed of $n$ beads, where $n \\ge 3$. The beads are arranged in a circle such that each bead is considered adjacent to exactly two other beads. The designer has a palette of three distinct colors. According to the design specification, any two adjacent beads in the chain must have different colors. This is known as a valid coloring. The problem is to determine the total number of distinct valid colorings possible for a chain of $n$ beads.\n\nFind a closed-form analytic expression for the total number of valid 3-colorings for a circular chain of $n$ beads. Express your answer in terms of $n$.", "solution": "Model the circular chain as the cycle graph with $n$ vertices. Let $k$ denote the number of available colors; ultimately we will set $k=3$. We count proper colorings where adjacent vertices have different colors.\n\nFix the color of the first bead. For $i \\geq 1$, define:\n- $a_{i}$ as the number of valid color sequences of length $i$ whose $i$-th bead has the same color as the first bead.\n- $b_{i}$ as the number of valid color sequences of length $i$ whose $i$-th bead has a different color from the first bead.\n\nWith the first bead fixed, the initial conditions are $a_{1}=1$ and $b_{1}=0$.\n\nTransition relations follow from the adjacency constraint:\n- To have the $(i+1)$-th bead equal to the first, the $i$-th bead must be different, and there is exactly $1$ choice (the first color), so\n$$\na_{i+1} = b_{i}.\n$$\n- To have the $(i+1)$-th bead different from the first:\n  • If the $i$-th bead equals the first (state $a_{i}$), the next bead must be any of the $k-1$ colors different from the first, contributing $(k-1)a_{i}$.\n  • If the $i$-th bead is different from the first (state $b_{i}$), the next bead must be different from the current bead. Among the $k-1$ choices, exactly $1$ equals the first, so $k-2$ choices keep it different from the first, contributing $(k-2)b_{i}$. Hence\n$$\nb_{i+1} = (k-1)a_{i} + (k-2)b_{i}.\n$$\n\nEliminating $a_{i}$ via $a_{i}=b_{i-1}$ yields the second-order recurrence\n$$\nb_{i+1} = (k-2)b_{i} + (k-1)b_{i-1},\n$$\nwith $b_{1}=0$ and $b_{2}=(k-1)a_{1} + (k-2)b_{1} = k-1$.\n\nThe characteristic equation is\n$$\nx^{2} - (k-2)x - (k-1) = 0,\n$$\nwhose roots are $x = k-1$ and $x = -1$. Therefore,\n$$\nb_{i} = \\alpha (k-1)^{i-1} + \\beta (-1)^{i-1}.\n$$\nUsing $b_{1}=0$ gives $\\alpha + \\beta = 0$, so $\\beta = -\\alpha$. Using $b_{2}=k-1$ gives\n$$\nk-1 = \\alpha (k-1) - \\beta = \\alpha (k-1 + 1) = \\alpha k,\n$$\nhence $\\alpha = \\frac{k-1}{k}$ and $\\beta = -\\frac{k-1}{k}$. Thus\n$$\nb_{n} = \\frac{k-1}{k} \\left( (k-1)^{n-1} - (-1)^{n-1} \\right).\n$$\n\nFor a cycle, the last bead must be different from the first, so with the first color fixed the number of valid sequences is $b_{n}$. Allowing the first bead to be any of $k$ colors multiplies by $k$, giving the total number of valid colorings:\n$$\nN_{k}(n) = k \\, b_{n} = (k-1)^{n} + (k-1)(-1)^{n}.\n$$\n\nSetting $k=3$ yields\n$$\nN_{3}(n) = 2^{n} + 2(-1)^{n}.\n$$\nThis is the required closed-form expression for the number of valid 3-colorings of a circular chain of $n$ beads with $n \\geq 3$.", "answer": "$$\\boxed{2^{n} + 2(-1)^{n}}$$", "id": "1419344"}, {"introduction": "Our final practice problem introduces one of the most powerful concepts in complexity theory: the reduction. Instead of solving a problem from scratch, we often demonstrate how to solve it using a hypothetical \"black box\" or \"oracle\" that solves another problem. This exercise challenges you to find the number of Hamiltonian paths between two vertices by making clever use of an oracle that counts Hamiltonian cycles, revealing the deep connections between the complexities of different counting problems [@problem_id:1419335].", "problem": "In computational complexity theory, many problems are studied through the lens of oracles. An oracle is a hypothetical black box that can solve a particular decision or counting problem in a single step.\n\nConsider an arbitrary simple, undirected graph $G = (V, E)$, where $V$ is the set of vertices and $E$ is the set of edges. A **Hamiltonian path** is a path in the graph that visits each vertex exactly once. A **Hamiltonian cycle** is a cycle that visits each vertex exactly once, starting and ending at the same vertex.\n\nYou are given access to a powerful oracle, `CountHC(graph)`, which takes any graph as input and returns the number of distinct Hamiltonian cycles within it in polynomial time.\n\nYour task is to use this oracle to solve a related problem. Given the graph $G$ and two distinct vertices $u, v \\in V$, you want to find the number of Hamiltonian paths that start at vertex $u$ and end at vertex $v$.\n\nTo do this, you construct a new graph, $G'$, from $G$. The new graph $G'$ is formed by adding a new vertex, $w$ (where $w \\notin V$), and two new edges, $(w, u)$ and $(w, v)$. The resulting graph is $G' = (V \\cup \\{w\\}, E \\cup \\{(w, u), (w, v)\\})$.\n\nHow is the number of Hamiltonian paths in $G$ that start at $u$ and end at $v$ related to the output of the `CountHC` oracle when applied to one of these graphs?\n\nA. The number of paths equals `CountHC(G)`.\n\nB. The number of paths equals `CountHC(G')`.\n\nC. The number of paths equals `CountHC(G') / 2`.\n\nD. The number of paths equals `CountHC(G') - CountHC(G)`.\n\nE. It is impossible to determine the number of paths using only the `CountHC` oracle.", "solution": "We are given a simple undirected graph $G=(V,E)$ and two distinct vertices $u,v\\in V$. Construct $G'=(V\\cup\\{w\\},E\\cup\\{(w,u),(w,v)\\})$ by adding a new vertex $w$ adjacent only to $u$ and $v$.\n\nDefine $\\mathcal{C}(G')$ to be the set of Hamiltonian cycles in $G'$ and $\\mathcal{P}_{u,v}(G)$ to be the set of Hamiltonian paths in $G$ that start at $u$ and end at $v$.\n\nStep 1 (Cycles in $G'$ map to $u$-$v$ Hamiltonian paths in $G$): In $G'$, the vertex $w$ has degree $\\deg_{G'}(w)=2$ with neighbors exactly $\\{u,v\\}$. Any Hamiltonian cycle in $G'$ must include both edges $(w,u)$ and $(w,v)$ and visit $w$ exactly once. Removing $w$ and its incident edges from such a cycle yields a path in $G$ that visits every vertex in $V$ exactly once and whose endpoints are precisely $u$ and $v$. Thus there is a well-defined map\n$$\n\\phi:\\mathcal{C}(G')\\to \\mathcal{P}_{u,v}(G),\n$$\ngiven by deleting $w$ from the cycle.\n\nStep 2 (Hamiltonian $u$-$v$ paths in $G$ map to cycles in $G'$): Conversely, take any $P\\in\\mathcal{P}_{u,v}(G)$, which is a sequence visiting all vertices of $V$ exactly once starting at $u$ and ending at $v$. By adding $w$ and edges $(w,u)$ and $(w,v)$, we form a cycle in $G'$ that visits every vertex in $V\\cup\\{w\\}$ exactly once. This defines a map\n$$\n\\psi:\\mathcal{P}_{u,v}(G)\\to \\mathcal{C}(G'),\n$$\nby inserting $w$ between $u$ and $v$ to close the cycle.\n\nStep 3 (Bijection and counting): The constructions are inverses of each other: applying $\\phi$ to a cycle in $G'$ and then $\\psi$ recovers the same cycle (up to the usual equivalence of cycles in an undirected graph by rotation and reversal), and applying $\\psi$ to a path in $G$ and then $\\phi$ recovers the same path. Hence there is a bijection between $\\mathcal{C}(G')$ and $\\mathcal{P}_{u,v}(G)$, and therefore\n$$\n|\\mathcal{P}_{u,v}(G)|=|\\mathcal{C}(G')|=\\text{CountHC}(G').\n$$\nSince the oracle counts distinct Hamiltonian cycles in the undirected graph $G'$ (i.e., a cycle is not double-counted for opposite directions), no additional factor arises. Therefore the correct relation is that the number of $u$-to-$v$ Hamiltonian paths in $G$ equals $\\text{CountHC}(G')$.\n\nThus the correct option is B.", "answer": "$$\\boxed{B}$$", "id": "1419335"}]}