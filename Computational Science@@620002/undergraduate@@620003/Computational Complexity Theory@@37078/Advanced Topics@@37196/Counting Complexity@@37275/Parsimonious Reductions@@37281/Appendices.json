{"hands_on_practices": [{"introduction": "Our first exercise explores a foundational example of a parsimonious reduction within graph theory itself. We will establish a direct, one-to-one correspondence between the set of all matchings in a graph $G$ and the set of all independent sets in its line graph $L(G)$. This practice is valuable because it beautifully illustrates how a change in perspective—from edges to vertices—can transform one counting problem into another while perfectly preserving the number of solutions [@problem_id:1434888].", "problem": "In computational complexity theory, a key technique for relating the difficulty of counting problems is the parsimonious reduction. This type of reduction maps instances of one problem to instances of another in a way that preserves the number of solutions.\n\nConsider the following definitions from graph theory:\n- A **graph** $G = (V, E)$ consists of a set of vertices $V$ and a set of edges $E$, where each edge connects a pair of vertices.\n- A **matching** in a graph $G$ is a subset of its edges, $M \\subseteq E$, such that no two edges in $M$ share a common vertex.\n- An **independent set** in a graph $G$ is a subset of its vertices, $S \\subseteq V$, such that no two vertices in $S$ are connected by an edge.\n- The **line graph** of a graph $G$, denoted $L(G)$, is another graph constructed as follows: for each edge in $G$, there is a corresponding vertex in $L(G)$. Two vertices in $L(G)$ are connected by an edge if and only if their corresponding edges in $G$ share a common endpoint (i.e., are incident).\n\nLet $\\#\\text{Match}(G)$ denote the total number of distinct matchings in an arbitrary simple graph $G$. This count includes matchings of all possible sizes, from the empty matching (with zero edges) to the maximum possible matching. Similarly, let $\\#\\text{IndSet}(H)$ denote the total number of distinct independent sets in a graph $H$, including the empty set.\n\nWhich of the following statements correctly describes the universal relationship between the number of matchings in a graph $G$ and the number of independent sets in its line graph $L(G)$?\n\nA) $\\#\\text{Match}(G) = \\#\\text{IndSet}(L(G))$\n\nB) $\\#\\text{Match}(G) = 2 \\cdot \\#\\text{IndSet}(L(G))$\n\nC) $\\#\\text{Match}(G) = (\\#\\text{IndSet}(L(G)))^{2}$\n\nD) $\\#\\text{Match}(G) = \\#\\text{IndSet}(L(G)) + |V(G)|$, where $|V(G)|$ is the number of vertices in $G$.\n\nE) The relationship is not fixed and depends on the specific structure of $G$.", "solution": "Let $G=(V,E)$ be a simple graph and let $L(G)$ denote its line graph. By definition of the line graph, there is a canonical one-to-one correspondence between edges $e \\in E$ of $G$ and vertices $v_{e} \\in V(L(G))$, with adjacency in $L(G)$ given by\n$$\n\\{v_{e},v_{e'}\\} \\in E(L(G)) \\iff e \\text{ and } e' \\text{ share a common endpoint in } G.\n$$\nDefine the map $\\phi$ from subsets of $E$ to subsets of $V(L(G))$ by\n$$\n\\phi(M)=\\{v_{e} : e \\in M\\}.\n$$\nWe claim that $M \\subseteq E$ is a matching in $G$ if and only if $\\phi(M)$ is an independent set in $L(G)$. Indeed, by the definitions:\n- If $M$ is a matching, then for any distinct $e,e' \\in M$, the edges $e$ and $e'$ do not share an endpoint in $G$. Hence $v_{e}$ and $v_{e'}$ are not adjacent in $L(G)$, so $\\phi(M)$ is an independent set.\n- Conversely, if $\\phi(M)$ is an independent set in $L(G)$, then for any distinct $e,e' \\in M$, $v_{e}$ and $v_{e'}}$ are not adjacent in $L(G)$, which means $e$ and $e'$ do not share an endpoint in $G$. Thus $M$ is a matching.\n\nTherefore, the restriction of $\\phi$ to the family of matchings of $G$ is a bijection onto the family of independent sets of $L(G)$. This bijection also maps the empty matching to the empty independent set. Consequently, the total number of matchings in $G$ equals the total number of independent sets in $L(G)$:\n$$\n\\#\\text{Match}(G)=\\#\\text{IndSet}(L(G)).\n$$\nHence the universally correct statement is option A.", "answer": "$$\\boxed{A}$$", "id": "1434888"}, {"introduction": "Next, we move from a static structural mapping to a dynamic, constructive reduction, a technique at the heart of many #P-completeness proofs. This problem requires you to trace the logic of reducing #SUBSET-SUM to a path-counting problem within a specially constructed directed acyclic graph (DAG). This exercise is crucial for understanding how the sequential choices in one problem (including or excluding an element) can be perfectly mirrored by the branching paths in another, preserving the solution count exactly [@problem_id:1434881].", "problem": "In computational complexity theory, a parsimonious reduction is a special type of reduction between two counting problems, call them Problem A and Problem B. It maps an instance of Problem A to an instance of Problem B such that the number of solutions for the original instance of A is exactly equal to the number of solutions for the resulting instance of B.\n\nConsider the counting problem `#SUBSET-SUM`, which is defined as follows: given a set of positive integers $S = \\{s_1, s_2, \\ldots, s_n\\}$ and a target integer $T$, find the number of distinct subsets of $S$ whose elements sum to exactly $T$.\n\nA parsimonious reduction exists from `#SUBSET-SUM` to the problem of counting paths in a specially constructed Directed Acyclic Graph (DAG). The procedure to construct this DAG, denoted $G=(V, E)$, from a given instance of `#SUBSET-SUM` (with set $S=\\{s_1, \\ldots, s_n\\}$ and target $T$) is as follows:\n\n1.  **Vertices**: The set of vertices $V$ consists of nodes labeled $v_{i,j}$ for all integers $i$ and $j$ where $0 \\le i \\le n$ and $0 \\le j \\le T$. The index $i$ represents having considered the first $i$ elements of the set $S$, and the index $j$ represents a possible accumulated sum.\n2.  **Source and Sink**: The source vertex is $s = v_{0,0}$, representing a sum of 0 before considering any elements. The sink vertex is $t = v_{n,T}$, representing a target sum of $T$ after considering all $n$ elements.\n3.  **Edges**: For each vertex $v_{i-1, j}$ where $1 \\le i \\le n$ and $0 \\le j \\le T$, we consider the element $s_i$ and create directed edges corresponding to the two choices for this element:\n    *   **Exclude**: An edge is created from $v_{i-1, j}$ to $v_{i, j}$. This represents not including $s_i$ in the subset, so the sum remains $j$.\n    *   **Include**: If $j + s_i \\le T$, an edge is created from $v_{i-1, j}$ to $v_{i, j+s_i}$. This represents including $s_i$ in the subset, so the sum becomes $j+s_i$.\n\nYou are given the following specific instance of `#SUBSET-SUM`:\n*   The set of integers is $S = \\{1, 2, 3, 4, 5\\}$.\n*   The target sum is $T = 7$.\n\nBased on the construction procedure described above, determine the number of distinct simple paths from the source vertex $s$ to the sink vertex $t$ in the resulting DAG.", "solution": "We construct the DAG as specified. Each path from $s=v_{0,0}$ to $t=v_{n,T}$ encodes, at each layer $i$, whether $s_{i}$ is excluded (edge to $v_{i,j}$) or included (edge to $v_{i,j+s_{i}}$ when allowed). Therefore, the number of $s$–$t$ paths equals the number of subsets of $S$ summing to $T$.\n\nDefine $F(i,j)$ as the number of directed paths from $s=v_{0,0}$ to $v_{i,j}$. By construction,\n$$\nF(0,0)=1,\\quad F(0,j)=0\\ \\text{for}\\ j>0,\n$$\nand for $i\\geq 1$,\n$$\nF(i,j)=\n\\begin{cases}\nF(i-1,j) & \\text{if } j<s_{i},\\\\\nF(i-1,j)+F(i-1,j-s_{i}) & \\text{if } j\\geq s_{i}.\n\\end{cases}\n$$\nHere $S=\\{1,2,3,4,5\\}$ with $s_{1}=1$, $s_{2}=2$, $s_{3}=3$, $s_{4}=4$, $s_{5}=5$, and $T=7$. We compute $F(i,j)$ for $0\\leq i\\leq 5$ and $0\\leq j\\leq 7$.\n\nBase layer $i=0$:\n$$\nF(0,0)=1,\\quad F(0,j)=0\\ \\text{for}\\ j=1,\\ldots,7.\n$$\n\nLayer $i=1$ with $s_{1}=1$:\n$$\n\\begin{aligned}\n&F(1,0)=F(0,0)=1,\\\\\n&F(1,1)=F(0,1)+F(0,0)=0+1=1,\\\\\n&F(1,j)=F(0,j)+F(0,j-1)=0\\ \\text{for}\\ j=2,\\ldots,7.\n\\end{aligned}\n$$\n\nLayer $i=2$ with $s_{2}=2$:\n$$\n\\begin{aligned}\n&F(2,0)=F(1,0)=1,\\\\\n&F(2,1)=F(1,1)=1,\\\\\n&F(2,2)=F(1,2)+F(1,0)=0+1=1,\\\\\n&F(2,3)=F(1,3)+F(1,1)=0+1=1,\\\\\n&F(2,4)=F(1,4)+F(1,2)=0+0=0,\\\\\n&F(2,5)=F(1,5)+F(1,3)=0+0=0,\\\\\n&F(2,6)=F(1,6)+F(1,4)=0+0=0,\\\\\n&F(2,7)=F(1,7)+F(1,5)=0+0=0.\n\\end{aligned}\n$$\n\nLayer $i=3$ with $s_{3}=3$:\n$$\n\\begin{aligned}\n&F(3,0)=F(2,0)=1,\\\\\n&F(3,1)=F(2,1)=1,\\\\\n&F(3,2)=F(2,2)=1,\\\\\n&F(3,3)=F(2,3)+F(2,0)=1+1=2,\\\\\n&F(3,4)=F(2,4)+F(2,1)=0+1=1,\\\\\n&F(3,5)=F(2,5)+F(2,2)=0+1=1,\\\\\n&F(3,6)=F(2,6)+F(2,3)=0+1=1,\\\\\n&F(3,7)=F(2,7)+F(2,4)=0+0=0.\n\\end{aligned}\n$$\n\nLayer $i=4$ with $s_{4}=4$:\n$$\n\\begin{aligned}\n&F(4,0)=F(3,0)=1,\\\\\n&F(4,1)=F(3,1)=1,\\\\\n&F(4,2)=F(3,2)=1,\\\\\n&F(4,3)=F(3,3)=2,\\\\\n&F(4,4)=F(3,4)+F(3,0)=1+1=2,\\\\\n&F(4,5)=F(3,5)+F(3,1)=1+1=2,\\\\\n&F(4,6)=F(3,6)+F(3,2)=1+1=2,\\\\\n&F(4,7)=F(3,7)+F(3,3)=0+2=2.\n\\end{aligned}\n$$\n\nLayer $i=5$ with $s_{5}=5$:\n$$\n\\begin{aligned}\n&F(5,0)=F(4,0)=1,\\\\\n&F(5,1)=F(4,1)=1,\\\\\n&F(5,2)=F(4,2)=1,\\\\\n&F(5,3)=F(4,3)=2,\\\\\n&F(5,4)=F(4,4)=2,\\\\\n&F(5,5)=F(4,5)+F(4,0)=2+1=3,\\\\\n&F(5,6)=F(4,6)+F(4,1)=2+1=3,\\\\\n&F(5,7)=F(4,7)+F(4,2)=2+1=3.\n\\end{aligned}\n$$\n\nThus, the number of distinct simple paths from $s$ to $t$ equals $F(5,7)=3$. Equivalently, the subsets of $S$ summing to $7$ are $\\{2,5\\}$, $\\{3,4\\}$, and $\\{1,2,4\\}$, confirming the count.", "answer": "$$\\boxed{3}$$", "id": "1434881"}, {"introduction": "Our final practice reveals the surprising power of parsimonious reductions to connect seemingly unrelated fields of mathematics and computer science. You will apply a known reduction that links the geometric problem of counting polygon triangulations to the algebraic problem of parenthesizing an expression. This exercise highlights how identical combinatorial structures, in this case the Catalan numbers, govern different phenomena, and how a parsimonious reduction serves as the formal bridge between them [@problem_id:1434878].", "problem": "In computational complexity theory, we often study counting problems, which ask for the number of solutions to a given problem instance. Let's define two such problems:\n\n1.  **#TRIANGULATIONS**: Given a convex polygon $P$ with $k$ vertices, the problem is to count the number of distinct ways to partition the polygon into a set of non-overlapping triangles by drawing $k-3$ non-intersecting diagonals between vertices.\n\n2.  **#PARENTHESIZATIONS**: Given an ordered string of $m$ symbols, e.g., $x_1 x_2 \\dots x_m$, the problem is to count the number of ways to insert parentheses to form a fully-parenthesized binary expression. A fully-parenthesized expression is one where every pair of parentheses encloses exactly two terms, which could themselves be parenthesized sub-expressions. For example, for a string of 4 symbols $x_1 x_2 x_3 x_4$, one valid parenthesization is $((x_1 x_2) (x_3 x_4))$, while $(x_1 x_2 x_3) x_4$ is not, because the first pair of parentheses encloses three symbols.\n\nA *parsimonious reduction* from a counting problem \\#A to another counting problem \\#B is a transformation $f$ that maps every instance $I_A$ of problem \\#A to an instance $I_B$ of problem \\#B, such that the number of solutions for $I_A$ is exactly equal to the number of solutions for $I_B$.\n\nIt is a known result in combinatorics and computer science that a parsimonious reduction exists from the problem of counting the triangulations of a convex $(n+2)$-gon to the problem of counting the full parenthesizations of a string of $n+1$ symbols.\n\nUsing this fact, calculate the total number of unique triangulations for a convex hexagon.", "solution": "We are asked for the number of triangulations of a convex hexagon. A known parsimonious reduction maps the triangulations of a convex polygon with $n+2$ vertices to the full parenthesizations of a string with $n+1$ symbols. Setting $k$ to be the number of vertices of the polygon, we have $n=k-2$. For a hexagon, $k=6$, hence $n=4$ and the corresponding string length is $n+1=5$.\n\nThe number of full parenthesizations of a string of $m$ symbols is the Catalan number $C_{m-1}$. Thus, for $m=5$, the count is $C_{4}$. The Catalan numbers are given by\n$$\nC_{t}=\\frac{1}{t+1}\\binom{2t}{t}.\n$$\nSubstituting $t=4$ yields\n$$\nC_{4}=\\frac{1}{5}\\binom{8}{4}.\n$$\nEvaluating the binomial coefficient,\n$$\n\\binom{8}{4}=\\frac{8!}{4!\\,4!}=70,\n$$\nso\n$$\nC_{4}=\\frac{1}{5}\\cdot 70=14.\n$$\nTherefore, the number of unique triangulations of a convex hexagon is $14$.", "answer": "$$\\boxed{14}$$", "id": "1434878"}]}