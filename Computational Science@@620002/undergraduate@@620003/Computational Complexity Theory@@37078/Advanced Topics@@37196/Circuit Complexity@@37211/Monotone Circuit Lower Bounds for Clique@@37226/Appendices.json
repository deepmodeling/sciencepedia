{"hands_on_practices": [{"introduction": "The first step in analyzing any computational problem with a circuit is to represent its input in a format the circuit understands—typically a binary string. This exercise solidifies the standard encoding scheme for graphs, translating a visual graph structure into the precise bit-string input required by a $CLIQUE_{k,n}$ circuit. This is a foundational skill for bridging the gap between graph theory and circuit complexity. [@problem_id:1431908]", "problem": "In computational complexity theory, proving lower bounds for circuit size is a major challenge. A significant breakthrough was achieved for *monotone circuits*—circuits using only AND and OR gates—for the $k$-clique problem. The $CLIQUE_{k,n}$ problem is the task of deciding whether a given graph on $n$ vertices contains a $k$-clique, which is a subset of $k$ vertices where every two distinct vertices in the subset are connected by an edge.\n\nTo analyze this problem with a circuit, the graph must be encoded as a binary input string. Consider a graph with $n$ vertices, labeled $\\{0, 1, \\dots, n-1\\}$. The presence or absence of an edge between any two vertices $i$ and $j$ (with $i < j$) is represented by a binary variable $x_{ij}$, where $x_{ij}=1$ if an edge exists and $x_{ij}=0$ otherwise. The input to the circuit is a bit-string formed by concatenating these variables in lexicographical order of the pairs $(i,j)$.\n\nSuppose you are given a specific graph $G$ with 5 vertices, labeled $\\{0, 1, 2, 3, 4\\}$. The edge set of this graph is $E = \\{(0,3), (1,2), (1,4), (2,4)\\}$. This graph is to be used as an input to a circuit designed to solve the $CLIQUE_{3,5}$ problem.\n\nWhich of the following bit-strings represents the graph $G$ according to the specified encoding scheme?\n\nA. `0010101010`\n\nB. `0100001110`\n\nC. `0000101010`\n\nD. `1101010101`\n\nE. `0010111010`", "solution": "We encode a graph on vertices $\\{0,1,2,3,4\\}$ by listing edges $(i,j)$ with $i<j$ in lexicographical order and assigning $x_{ij}=1$ if $(i,j)\\in E$ and $x_{ij}=0$ otherwise. For $n=5$, the ordered pairs are:\n$$(0,1),(0,2),(0,3),(0,4),(1,2),(1,3),(1,4),(2,3),(2,4),(3,4).$$\nGiven $E=\\{(0,3),(1,2),(1,4),(2,4)\\}$, the corresponding bits are:\n$$x_{01}=0,\\ x_{02}=0,\\ x_{03}=1,\\ x_{04}=0,\\ x_{12}=1,\\ x_{13}=0,\\ x_{14}=1,\\ x_{23}=0,\\ x_{24}=1,\\ x_{34}=0.$$\nThus the bit-string is $0010101010$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1431908"}, {"introduction": "After understanding the input format, we must define the function's behavior. A monotone Boolean function, like the one for CLIQUE, can be uniquely defined by its \"minterms\"—the minimal sets of inputs that trigger a \"yes\" output. By identifying all minterms for $CLIQUE_{3,4}$, you will directly connect the graph-theoretic concept of a clique to the algebraic concept of a minterm, a key object of study in the lower bound proof. [@problem_id:1431973]", "problem": "In computational complexity theory, the $CLIQUE_{n,k}$ problem is a fundamental question in graph theory. It can be formulated as a monotone boolean function, which we will denote by $f_{n,k}$. This function takes as input a set of boolean variables, one for each potential edge in a graph with $n$ vertices, and outputs true (1) if and only if the graph defined by the 'true' edges contains a clique of size $k$. A clique of size $k$ is a subset of $k$ vertices where every two distinct vertices in the subset are connected by an edge.\n\nA minterm of a monotone boolean function is a minimal set of input variables that, when all are set to true, forces the function's output to be true. For the $f_{n,k}$ function, a minterm corresponds to a minimal set of edges that constitutes a $k$-clique.\n\nConsider the specific case of $f_{4,3}$ for a graph with a vertex set $V = \\{v_1, v_2, v_3, v_4\\}$. An edge between vertices $v_i$ and $v_j$ is represented by the set $\\{i, j\\}$. Which of the following options correctly and completely lists all the minterms of the $f_{4,3}$ boolean function?\n\nA. $\\{\\{\\{1,2\\},\\{1,3\\},\\{2,3\\}\\}, \\{\\{1,2\\},\\{1,4\\},\\{2,4\\}\\}, \\{\\{1,3\\},\\{1,4\\},\\{3,4\\}\\}, \\{\\{2,3\\},\\{2,4\\},\\{3,4\\}\\}\\}$\n\nB. $\\{\\{v_1, v_2, v_3\\}, \\{v_1, v_2, v_4\\}, \\{v_1, v_3, v_4\\}, \\{v_2, v_3, v_4\\}\\}$\n\nC. $\\{\\{\\{1,2\\},\\{1,3\\},\\{1,4\\}\\}, \\{\\{1,2\\},\\{2,3\\},\\{2,4\\}\\}, \\{\\{1,3\\},\\{2,3\\},\\{3,4\\}\\}, \\{\\{1,4\\},\\{2,4\\},\\{3,4\\}\\}\\}$\n\nD. $\\{\\{\\{1,2\\},\\{3,4\\}\\}, \\{\\{1,3\\},\\{2,4\\}\\}, \\{\\{1,4\\},\\{2,3\\}\\}\\}$", "solution": "The problem asks for the complete set of minterms for the boolean function $f_{4,3}$, which corresponds to the $CLIQUE_{4,3}$ problem.\n\nFirst, let's understand the definitions in the context of this specific problem.\nThe function $f_{4,3}$ operates on a graph with $n=4$ vertices, which we label $\\{v_1, v_2, v_3, v_4\\}$. The input variables to the function correspond to the possible edges between these vertices. The function outputs 1 (true) if the graph contains a $k=3$-clique, which is a triangle.\n\nA minterm is a minimal set of input variables (edges) that forces the function to be true. This means a minterm is a minimal set of edges that guarantees the existence of a 3-clique.\n\nA 3-clique is formed by selecting 3 vertices and including all possible edges between them. The number of edges required to form a clique on 3 vertices, say $\\{v_a, v_b, v_c\\}$, is $\\binom{3}{2} = \\frac{3 \\times 2}{2} = 3$. These edges are $\\{a,b\\}, \\{a,c\\}, \\{b,c\\}$.\n\nThis set of 3 edges is minimal. If we remove any one edge, the remaining two edges form a path, not a clique. For example, if we remove $\\{b,c\\}$, the remaining edges are $\\{a,b\\}$ and $\\{a,c\\}$, which do not form a triangle. Thus, the edge set of any 3-clique is a minterm for the $f_{4,3}$ function.\n\nTo find all the minterms, we need to find all possible 3-cliques in a graph with 4 vertices. The formation of a 3-clique is determined by the choice of 3 vertices from the set of 4 available vertices.\n\nThe number of ways to choose 3 vertices from a set of 4 is given by the binomial coefficient:\n$$ \\binom{4}{3} = \\frac{4!}{3!(4-3)!} = \\frac{4!}{3!1!} = 4 $$\nSo, there are exactly 4 possible 3-cliques, and therefore 4 minterms.\n\nLet's list the 4 subsets of vertices of size 3:\n1.  $\\{v_1, v_2, v_3\\}$\n2.  $\\{v_1, v_2, v_4\\}$\n3.  $\\{v_1, v_3, v_4\\}$\n4.  $\\{v_2, v_3, v_4\\}$\n\nNow, for each vertex subset, we write down the corresponding edge set that forms the clique. This will give us the minterms. We use the notation $\\{i,j\\}$ for the edge between $v_i$ and $v_j$.\n\n1.  For vertex set $\\{v_1, v_2, v_3\\}$, the edges are $\\{1,2\\}, \\{1,3\\}, \\{2,3\\}$. The minterm is $\\{\\{1,2\\},\\{1,3\\},\\{2,3\\}\\}$.\n2.  For vertex set $\\{v_1, v_2, v_4\\}$, the edges are $\\{1,2\\}, \\{1,4\\}, \\{2,4\\}$. The minterm is $\\{\\{1,2\\},\\{1,4\\},\\{2,4\\}\\}$.\n3.  For vertex set $\\{v_1, v_3, v_4\\}$, the edges are $\\{1,3\\}, \\{1,4\\}, \\{3,4\\}$. The minterm is $\\{\\{1,3\\},\\{1,4\\},\\{3,4\\}\\}$.\n4.  For vertex set $\\{v_2, v_3, v_4\\}$, the edges are $\\{2,3\\}, \\{2,4\\}, \\{3,4\\}$. The minterm is $\\{\\{2,3\\},\\{2,4\\},\\{3,4\\}\\}$.\n\nThe complete set of all minterms is the collection of these four edge sets:\n$\\{\\{\\{1,2\\},\\{1,3\\},\\{2,3\\}\\}, \\{\\{1,2\\},\\{1,4\\},\\{2,4\\}\\}, \\{\\{1,3\\},\\{1,4\\},\\{3,4\\}\\}, \\{\\{2,3\\},\\{2,4\\},\\{3,4\\}\\}\\}$\n\nNow we evaluate the given options:\n- **Option A**: This option lists exactly the four minterms we derived. This is the correct answer.\n\n- **Option B**: This option lists the subsets of vertices that form the cliques, not the edge sets. The input variables to the boolean function are edges, so the minterms must be sets of edges. Thus, option B is incorrect.\n\n- **Option C**: This option lists sets of three edges, but they do not form triangles. For example, the first set is $\\{\\{1,2\\},\\{1,3\\},\\{1,4\\}\\}$. These are all the edges connected to vertex $v_1$. This structure is a \"star graph\", not a 3-clique, because edges like $\\{2,3\\}$, $\\{2,4\\}$, and $\\{3,4\\}$ are missing. Therefore, these sets are not minterms for the clique function. Option C is incorrect.\n\n- **Option D**: This option lists sets containing two edges each. For example, $\\{\\{1,2\\},\\{3,4\\}\\}$ is a perfect matching on the 4 vertices. This set of edges does not form a triangle and is therefore not a minterm. In fact, no set of 2 edges can form a triangle. Option D is incorrect.\n\nTherefore, the only option that correctly and completely lists all the minterms of $f_{4,3}$ is A.", "answer": "$$\\boxed{A}$$", "id": "1431973"}, {"introduction": "Proving that a problem is hard often involves finding inputs that are difficult for a circuit to handle. For the CLIQUE problem, the most challenging \"no\" instances are graphs that are on the verge of containing a clique. This problem introduces the concept of a \"critical graph,\" a graph that lacks a $k$-clique but would form one if any single missing edge were added. Understanding these structures is essential, as they are a cornerstone of the \"method of approximations\" used to prove superpolynomial lower bounds for monotone circuits. [@problem_id:1431943]", "problem": "In computational complexity theory, the $CLIQUE_{k,n}$ problem is a fundamental challenge. It can be represented as a boolean function that takes an undirected graph $G$ on $n$ vertices as input. The function outputs 1 if $G$ contains a $k$-clique (a subset of $k$ vertices where every two distinct vertices are adjacent), and 0 otherwise.\n\nIn the analysis of monotone circuits, which are a restricted computational model, a key technique involves studying input graphs that are on the boundary between being accepted and rejected. We define a graph $G$ with $n$ vertices to be a \"critical graph\" for $CLIQUE_{k,n}$ if it satisfies two conditions:\n1. $G$ does not contain a $k$-clique.\n2. For any pair of distinct vertices $\\{u, v\\}$ that are not connected by an edge in $G$, adding the edge $\\{u, v\\}$ to $G$ creates a graph that does contain a $k$-clique.\n\nConsider the case where $n=6$ and $k=4$. Which of the following descriptions corresponds to a critical graph for $CLIQUE_{4,6}$?\n\nA. A cycle graph on 6 vertices, $C_6$.\n\nB. A graph consisting of a complete graph on 5 vertices and one isolated vertex, often denoted $K_5 \\cup K_1$.\n\nC. The complete bipartite graph $K_{3,3}$.\n\nD. The complete tripartite graph $K_{2,2,2}$.\n\nE. A path graph on 6 vertices, $P_6$.", "solution": "To solve this problem, we must identify which of the given graphs on $n=6$ vertices is a critical graph for $CLIQUE_{4,6}$. We will analyze each option against the two conditions for a critical graph. Let $G=(V,E)$ be the graph in question, with $|V|=6$. The conditions for $G$ to be critical for $CLIQUE_{4,6}$ are:\n1. $G$ contains no clique of size 4 (a $K_4$ subgraph).\n2. For any pair of non-adjacent vertices $u, v \\in V$, the graph $G' = (V, E \\cup \\{\\{u,v\\}\\})$ contains a $K_4$ subgraph.\n\nLet's examine each option:\n\n**A. A cycle graph on 6 vertices, $C_6$.**\n1.  **Condition 1 (No $K_4$):** A $C_6$ graph's largest clique is of size 2 (any single edge). It certainly does not contain a $K_3$ (triangle), let alone a $K_4$. This condition is met.\n2.  **Condition 2 (Adding an edge creates a $K_4$):** The non-adjacent pairs are vertices at a distance of 2 or 3. Let the vertices be $v_1, v_2, ..., v_6$ in cycle order. Consider adding the edge $\\{v_1, v_3\\}$. This creates a triangle $\\{v_1, v_2, v_3\\}$, which is a $K_3$. However, no $K_4$ is formed, as there is no fourth vertex connected to all of $v_1, v_2, v_3$. This condition is not met.\n\n**B. A graph consisting of a complete graph on 5 vertices and one isolated vertex, $K_5 \\cup K_1$.**\n1.  **Condition 1 (No $K_4$):** This graph contains a $K_5$ as a subgraph. Any $K_5$ contains multiple $K_4$ subgraphs. Therefore, this condition is not met. The graph is already a YES-instance for $CLIQUE_{4,6}$.\n\n**C. The complete bipartite graph $K_{3,3}$.**\nIn a $K_{3,3}$, the 6 vertices are partitioned into two sets, $U=\\{u_1, u_2, u_3\\}$ and $W=\\{w_1, w_2, w_3\\}$. An edge exists between a vertex in $U$ and a vertex in $W$, but not between any two vertices within the same set.\n1.  **Condition 1 (No $K_4$):** The largest possible clique in any bipartite graph is of size 2. Thus, $K_{3,3}$ contains no $K_3$ and no $K_4$. This condition is met.\n2.  **Condition 2 (Adding an edge creates a $K_4$):** A non-adjacent pair must consist of two vertices in the same partition, for example, $\\{u_1, u_2\\}$ in $U$. Let's add the edge $\\{u_1, u_2\\}$. For a $K_4$ to be created, it must involve the new edge $\\{u_1, u_2\\}$. So, we are looking for a set of four vertices $\\{u_1, u_2, x, y\\}$ that form a clique. The vertices $x$ and $y$ must be connected to both $u_1$ and $u_2$. In $K_{3,3}$, all vertices in $W$ are connected to all vertices in $U$. So we can choose any two vertices from $W$, say $x=w_1$ and $y=w_2$. For $\\{u_1, u_2, w_1, w_2\\}$ to be a clique, the edge $\\{w_1, w_2\\}$ must exist. However, $w_1$ and $w_2$ are in the same partition $W$, so they are not connected. Thus, no $K_4$ is formed. This condition is not met.\n\n**D. The complete tripartite graph $K_{2,2,2}$.**\nIn a $K_{2,2,2}$, the 6 vertices are partitioned into three sets, $V_1=\\{a_1, a_2\\}$, $V_2=\\{b_1, b_2\\}$, and $V_3=\\{c_1, c_2\\}$. An edge exists between any two vertices that are in different partitions.\n1.  **Condition 1 (No $K_4$):** To form a clique, all vertices in the clique must be from different partitions (since vertices in the same partition are not connected). As there are only 3 partitions, the largest possible clique size is 3. Therefore, $K_{2,2,2}$ contains no $K_4$. This condition is met.\n2.  **Condition 2 (Adding an edge creates a $K_4$):** A non-adjacent pair must consist of two vertices in the same partition. Without loss of generality, let's consider the non-adjacent pair $\\{a_1, a_2\\}$ from partition $V_1$. We add the edge $\\{a_1, a_2\\}$ to the graph. Now, we check if a $K_4$ is formed. A $K_4$ must include the new edge, so we are looking for a clique of the form $\\{a_1, a_2, x, y\\}$. For this to be a clique, vertices $x$ and $y$ must be connected to both $a_1$ and $a_2$. Since $a_1, a_2 \\in V_1$, any vertex outside of $V_1$ is connected to both $a_1$ and $a_2$. So we can choose $x$ and $y$ from the other partitions. Let's pick $x=b_1 \\in V_2$ and $y=c_1 \\in V_3$. Now consider the set of vertices $\\{a_1, a_2, b_1, c_1\\}$. We must check if all pairs are connected in the modified graph:\n    - $\\{a_1, a_2\\}$: This is the edge we added.\n    - $\\{a_1, b_1\\}$, $\\{a_2, b_1\\}$: These edges exist because $a_1, a_2 \\in V_1$ and $b_1 \\in V_2$.\n    - $\\{a_1, c_1\\}$, $\\{a_2, c_1\\}$: These edges exist because $a_1, a_2 \\in V_1$ and $c_1 \\in V_3$.\n    - $\\{b_1, c_1\\}$: This edge exists because $b_1 \\in V_2$ and $c_1 \\in V_3$.\nAll 6 edges required for a $K_4$ exist in the set $\\{a_1, a_2, b_1, c_1\\}$. So, adding the missing edge $\\{a_1, a_2\\}$ creates a $K_4$. The same logic applies to any other non-adjacent pair. This condition is met.\n\n**E. A path graph on 6 vertices, $P_6$.**\n1.  **Condition 1 (No $K_4$):** A $P_6$ graph's largest clique is of size 2. It does not contain a $K_4$. This condition is met.\n2.  **Condition 2 (Adding an edge creates a $K_4$):** Similar to the $C_6$ case, adding a single edge can create a $K_3$ at most, but never a $K_4$. For instance, adding an edge between the first and last vertex turns it into a $C_6$, which we've already shown is not critical. This condition is not met.\n\nBased on the analysis, only the complete tripartite graph $K_{2,2,2}$ satisfies both conditions to be a critical graph for $CLIQUE_{4,6}$.", "answer": "$$\\boxed{D}$$", "id": "1431943"}]}