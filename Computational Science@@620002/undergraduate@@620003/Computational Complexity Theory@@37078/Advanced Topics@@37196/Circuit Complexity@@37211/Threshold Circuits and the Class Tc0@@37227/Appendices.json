{"hands_on_practices": [{"introduction": "To truly understand threshold circuits, we begin with the most fundamental building block: a single gate. This first exercise challenges you to translate a basic logical operation—implication—into the language of weights and thresholds. By finding the integer parameters that define the gate, you will gain hands-on experience with the core mechanism of how these computational units make decisions and represent Boolean logic geometrically as a linear separation. [@problem_id:1466394]", "problem": "In computational complexity theory, a threshold gate is a fundamental building block for a class of circuits known as $TC^0$. A threshold gate with $n$ inputs operates on Boolean variables $x_1, x_2, \\dots, x_n$, where each $x_i$ is either 0 or 1. Associated with each input is a real-valued weight $w_i$, and the gate itself has a real-valued threshold $t$. The gate calculates the weighted sum of its inputs, $S = w_1 x_1 + w_2 x_2 + \\dots + w_n x_n$. The output of the gate is 1 if this sum $S$ is greater than or equal to the threshold $t$, and 0 otherwise.\n\nConsider the logical implication function, denoted by $\\implies$. For two Boolean inputs $x_1$ and $x_2$, the function $x_1 \\implies x_2$ evaluates to 0 only when $x_1=1$ and $x_2=0$; otherwise, it evaluates to 1.\n\nYour task is to find the parameters for a single threshold gate with two inputs, $x_1$ and $x_2$, that correctly computes the logical implication function $x_1 \\implies x_2$. You must find a set of integer parameters $(w_1, w_2, t)$ which satisfies this requirement. Among all possible integer solutions, you must provide the specific one for which the sum of the absolute values of the weights, $|w_1| + |w_2|$, is minimized. If there is more than one set of weights that produces this minimal sum, choose the one with the algebraically largest possible threshold $t$.\n\nPresent your answer as a row matrix of the form $\\begin{pmatrix} w_1 & w_2 & t \\end{pmatrix}$.", "solution": "A threshold gate with integer parameters $(w_{1}, w_{2}, t)$ outputs $1$ on input $(x_{1}, x_{2})$ if and only if $w_{1}x_{1}+w_{2}x_{2} \\geq t$, and outputs $0$ otherwise. For the implication $x_{1} \\implies x_{2}$, the desired outputs are:\n- $(0,0) \\mapsto 1$,\n- $(0,1) \\mapsto 1$,\n- $(1,1) \\mapsto 1$,\n- $(1,0) \\mapsto 0$.\n\nWriting the corresponding linear inequalities:\n- For $(0,0)$ to output $1$: $0 \\geq t$, hence $t \\leq 0$.\n- For $(0,1)$ to output $1$: $w_{2} \\geq t$.\n- For $(1,1)$ to output $1$: $w_{1}+w_{2} \\geq t$.\n- For $(1,0)$ to output $0$: $w_{1} < t$.\n\nFrom $t \\leq 0$ and $w_{1} < t$ with integers, it follows that $w_{1} \\leq -1$.\n\nWe must minimize $|w_{1}|+|w_{2}|$ over integers subject to these constraints. First, test the possibility $|w_{1}|+|w_{2}|=1$. The only candidates are $(\\pm 1,0)$ and $(0,\\pm 1)$:\n- $(1,0)$ requires $1 < t$ and also $0 \\geq t$, a contradiction.\n- $(-1,0)$ forces $t=0$ from $-1 < t \\leq 0$, but then $(1,1)$ gives $-1 \\geq 0$, which is false.\n- $(0,1)$ requires $0 < t$ and $0 \\geq t$, a contradiction.\n- $(0,-1)$ requires $0 < t$ and $0 \\geq t$, a contradiction.\nTherefore $|w_{1}|+|w_{2}| \\geq 2$.\n\nNow consider all integer pairs with $|w_{1}|+|w_{2}|=2$: $(\\pm 2,0)$, $(0,\\pm 2)$, and $(\\pm 1,\\pm 1)$.\n- $(2,0)$ and $(0,2)$ each require $t \\leq 0$ and $2 < t$, which is impossible.\n- $(-2,0)$ with $t \\leq 0$ and $-2 < t$ gives $t \\in \\{-1,0\\}$, but $(1,1)$ yields $-2 \\geq t$, which fails for both $t=-1$ and $t=0$.\n- $(0,-2)$ requires $0 < t$ and $t \\leq 0$, impossible.\n- $(1,1)$ requires $1 < t$ and $t \\leq 0$, impossible.\n- $(-1,-1)$ forces $t=0$ from $-1 < t \\leq 0$, but $(0,1)$ gives $-1 \\geq 0$, false.\n\nThe remaining candidate is $(-1,1)$. The inequalities become:\n- $t \\leq 0$,\n- $-1 < t$,\n- $1 \\geq t$,\n- $0 \\geq t$,\nwhich together force $t=0$. Verification:\n- $(0,0)$: $0 \\geq 0$ outputs $1$,\n- $(0,1)$: $1 \\geq 0$ outputs $1$,\n- $(1,1)$: $0 \\geq 0$ outputs $1$,\n- $(1,0)$: $-1 \\geq 0$ is false, outputs $0$.\nThus $(-1,1,t=0)$ correctly computes $x_{1} \\implies x_{2}$.\n\nThis achieves the minimal sum $|w_{1}|+|w_{2}|=2$. Among all solutions with this minimal sum, the threshold $t$ is uniquely determined as $0$, which is therefore the algebraically largest allowable threshold among such solutions.", "answer": "$$\\boxed{\\begin{pmatrix}-1 & 1 & 0\\end{pmatrix}}$$", "id": "1466394"}, {"introduction": "While a single threshold gate is versatile, it has inherent limitations defined by the principle of linear separability. This practice explores this boundary by examining several functions, leading you to discover the classic XOR function, which famously cannot be computed by a single gate. Through this problem [@problem_id:1466412], you will not only identify this critical limitation but also see how adding a second layer of gates provides the necessary computational power, a crucial step in understanding the importance of circuit depth.", "problem": "In the field of computational complexity theory, a threshold gate is a fundamental building block for circuits. An $n$-input threshold gate takes binary inputs $x_1, x_2, \\dots, x_n \\in \\{0, 1\\}$, where each input $x_i$ is associated with a real-valued weight $w_i$. The gate also has a real-valued threshold $t$. The gate outputs 1 if the weighted sum of its inputs is greater than or equal to the threshold, and 0 otherwise. The function computed by the gate is:\n$$ f(x_1, \\dots, x_n) = \\begin{cases} 1 & \\text{if } \\sum_{i=1}^{n} w_i x_i \\ge t \\\\ 0 & \\text{otherwise} \\end{cases} $$\nThe complexity class $TC^0$ (Threshold Circuit, Constant Depth) consists of functions that can be computed by a family of circuits of constant depth and polynomial size, built from threshold gates with an arbitrary number of inputs.\n\nConsider a set of simple Boolean functions. Your task is to identify which of the following functions on binary inputs cannot be computed by a single threshold gate, but can be computed by a $TC^0$ circuit of depth 2.\n\nA. The two-input AND function: $f(x_1, x_2) = x_1 \\land x_2$.\n\nB. The two-input OR function: $f(x_1, x_2) = x_1 \\lor x_2$.\n\nC. The two-input XOR (Exclusive OR) function: $f(x_1, x_2) = x_1 \\oplus x_2$.\n\nD. The three-input MAJORITY function, which outputs 1 if and only if two or more of its inputs are 1.\n\nE. The projection function on three inputs: $f(x_1, x_2, x_3) = x_2$.", "solution": "We recall that a single threshold gate (a linear threshold function) on inputs $x_{1},\\dots,x_{n}\\in\\{0,1\\}$ with weights $w_{1},\\dots,w_{n}\\in\\mathbb{R}$ and threshold $t\\in\\mathbb{R}$ outputs $1$ if and only if $\\sum_{i=1}^{n}w_{i}x_{i}\\ge t$, and $0$ otherwise. Such functions are exactly the linearly separable Boolean functions.\n\nWe analyze each option:\n\nA. Two-input AND $f(x_{1},x_{2})=x_{1}\\land x_{2}$ is linearly separable. Choose $w_{1}=w_{2}=\\alpha$ with $\\alpha>0$ and any threshold $t$ satisfying $\\alpha<t\\le 2\\alpha$. Then the sums on inputs are $0$, $\\alpha$, $\\alpha$, and $2\\alpha$, so exactly $(1,1)$ satisfies $\\sum w_{i}x_{i}\\ge t$.\n\nB. Two-input OR $f(x_{1},x_{2})=x_{1}\\lor x_{2}$ is linearly separable. Choose $w_{1}=w_{2}=\\alpha>0$ and $t$ satisfying $0<t\\le \\alpha$. Then the sums on inputs are $0$, $\\alpha$, $\\alpha$, and $2\\alpha$, so all inputs except $(0,0)$ satisfy $\\sum w_{i}x_{i}\\ge t$.\n\nC. Two-input XOR $f(x_{1},x_{2})=x_{1}\\oplus x_{2}$ is not linearly separable. Suppose for contradiction there are $w_{1},w_{2},t\\in\\mathbb{R}$ realizing XOR. The four input-output conditions imply the inequalities:\n$$\n\\begin{aligned}\n(0,0):&\\quad 0<t,\\\\\n(1,0):&\\quad w_{1}\\ge t,\\\\\n(0,1):&\\quad w_{2}\\ge t,\\\\\n(1,1):&\\quad w_{1}+w_{2}<t.\n\\end{aligned}\n$$\nAdding the middle two gives $w_{1}+w_{2}\\ge 2t$, which contradicts $w_{1}+w_{2}<t$ (this would force $2t<t$). Hence no single threshold gate computes XOR.\n\nD. Three-input MAJORITY is linearly separable. Choose $w_{1}=w_{2}=w_{3}=\\alpha>0$ and $t$ with $\\alpha<t\\le 2\\alpha$. The possible sums are $0$, $\\alpha$, $2\\alpha$, $3\\alpha$, so exactly inputs with at least two ones satisfy $\\sum w_{i}x_{i}\\ge t$.\n\nE. Projection $f(x_{1},x_{2},x_{3})=x_{2}$ is linearly separable. Set $w_{2}=\\alpha>0$, $w_{1}=w_{3}=0$, and choose $t$ with $0<t\\le \\alpha$. Then $\\sum w_{i}x_{i}=\\alpha x_{2}$, so the gate outputs $x_{2}$.\n\nTherefore, among A–E, only XOR (C) cannot be computed by a single threshold gate.\n\nFinally, we show that XOR can be computed by a depth-2 threshold circuit (hence it is in $TC^0$ of depth $2$). Construct two bottom gates:\n- $g_{1}$ with weights $(\\alpha,-\\alpha)$ and threshold $t_{1}$ with $0<t_{1}\\le \\alpha$. Then $g_{1}(x_{1},x_{2})=1$ if and only if $(x_{1},x_{2})=(1,0)$, since the sums are $\\alpha$, $-\\alpha$, $0$, $0$ on $(1,0)$, $(0,1)$, $(1,1)$, $(0,0)$ respectively.\n- $g_{2}$ with weights $(-\\alpha,\\alpha)$ and threshold $t_{2}$ with $0<t_{2}\\le \\alpha$. Then $g_{2}(x_{1},x_{2})=1$ if and only if $(x_{1},x_{2})=(0,1)$.\n\nFeed $g_{1},g_{2}$ into a top OR threshold gate $h$ with weights $(\\beta,\\beta)$ and threshold $t_{3}$ with $0<t_{3}\\le \\beta$. Then $h(g_{1},g_{2})=1$ if and only if exactly one of $x_{1},x_{2}$ is $1$, i.e., $x_{1}\\oplus x_{2}$. This is a depth-2 threshold circuit computing XOR.\n\nConclusion: The function matching the criterion is C.", "answer": "$$\\boxed{C}$$", "id": "1466412"}, {"introduction": "Having grasped the fundamentals of single gates and the power of depth, we now tackle a more sophisticated challenge: computing the PARITY of $n$ bits. This function is a cornerstone of complexity theory, and its efficient computation showcases the true strength of TC0 circuits. This exercise [@problem_id:1466396] guides you through an elegant and non-trivial two-layer design, demonstrating how to construct scalable and powerful circuits for important problems that are difficult for simpler circuit models.", "problem": "In the study of computational complexity, $TC^0$ is the class of functions computable by families of constant-depth, polynomial-size circuits consisting of threshold gates. A threshold gate takes $m$ boolean inputs $u_1, \\dots, u_m$ and outputs 1 if and only if the weighted sum of its inputs meets or exceeds a threshold, i.e., $\\sum_{i=1}^m w_i u_i \\ge \\theta$, where the weights $w_i$ are integers and $\\theta$ is a real number.\n\nA well-known function in this context is the Inner Product Modulo 2 (IP2), which, given two $n$-bit vectors $\\vec{x} = (x_1, \\dots, x_n)$ and $\\vec{y} = (y_1, \\dots, y_n)$, computes $(\\sum_{i=1}^n x_i y_i) \\pmod 2$. It is known that IP2 can be computed by a depth-3 $TC^0$ circuit. This construction often works by first using a layer of gates to compute the bitwise products $z_i = x_i \\land y_i$ for $i=1, \\dots, n$, and then using a subsequent two-layer circuit to compute the PARITY of these $n$ resultant bits.\n\nYour task is to develop the design for this second, crucial part of the computation.\n\n**Problem:**\nConstruct an explicit design for a depth-2 threshold circuit that computes the PARITY function on $n$ boolean input bits, $z_1, z_2, \\ldots, z_n$. The PARITY function outputs 1 if the number of inputs equal to 1 is odd, and 0 otherwise. Based on your design, what is the exact total number of gates required, expressed as a function of $n$?", "solution": "Let $z_{1},\\dots,z_{n}\\in\\{0,1\\}$ be the inputs and let $S=\\sum_{i=1}^{n} z_{i}$ denote their Hamming weight. We construct a depth-2 threshold circuit whose output is $1$ if and only if $S$ is odd.\n\nFirst layer (computing prefix-count indicators): For each $t\\in\\{1,\\dots,n\\}$, include one threshold gate $G_{t}$ with input weights $w_{t,i}=1$ for all $i\\in\\{1,\\dots,n\\}$ and threshold $\\theta_{t}=t$. Its output is\n$$\nf_{t}=\\begin{cases}\n1 & \\text{if } \\sum_{i=1}^{n} z_{i} \\ge t,\\\\\n0 & \\text{otherwise}.\n\\end{cases}\n$$\nThus, for an input with $S=s$, we have $f_{t}=1$ for $t\\le s$ and $f_{t}=0$ for $t>s$. This layer uses exactly $n$ threshold gates.\n\nSecond layer (single gate computing parity from the $f_{t}$): Include one threshold gate $H$ whose inputs are $f_{1},\\dots,f_{n}$, with integer weights\n$$\nA_{t}=(-1)^{t+1} 2^{t-1}\\quad\\text{for }t\\in\\{1,\\dots,n\\},\n$$\nand threshold\n$$\n\\theta=\\frac{1}{2}.\n$$\nThe output of $H$ on an input with $S=s$ equals $1$ if and only if\n$$\n\\sum_{t=1}^{n} A_{t} f_{t} \\ge \\theta.\n$$\nSince $f_{t}=1$ exactly for $t\\le s$, this inequality is equivalent to\n$$\ng(s)\\equiv \\sum_{t=1}^{s} (-1)^{t+1} 2^{t-1} \\ge \\frac{1}{2}.\n$$\nThe sum $g(s)$ is a finite geometric series with ratio $-2$ and first term $1$, so\n$$\ng(s)=\\sum_{t=1}^{s} (-1)^{t+1} 2^{t-1}=\\frac{1-(-2)^{s}}{1-(-2)}=\\frac{1-(-2)^{s}}{3}.\n$$\nTherefore:\n- If $s=0$ (no inputs equal to $1$), then $g(0)=0<\\frac{1}{2}$, so the output is $0$.\n- If $s$ is odd, then $(-2)^{s}=-2^{s}$ and $g(s)=\\frac{1+2^{s}}{3}\\ge 1>\\frac{1}{2}$, so the output is $1$.\n- If $s$ is even and $s\\ge 2$, then $(-2)^{s}=2^{s}$ and $g(s)=\\frac{1-2^{s}}{3}\\le -1<\\frac{1}{2}$, so the output is $0$.\n\nThus the second-layer gate outputs $1$ if and only if $S$ is odd, i.e., it computes the PARITY of $z_{1},\\dots,z_{n}$.\n\nGate count: The construction uses exactly $n$ gates in the first layer and $1$ gate in the second layer, for a total of $n+1$ threshold gates.", "answer": "$$\\boxed{n+1}$$", "id": "1466396"}]}