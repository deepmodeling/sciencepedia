{"hands_on_practices": [{"introduction": "The Post Correspondence Problem often feels like searching for a needle in a haystack, but the search is not entirely blind. This exercise will guide you through solving a small PCP instance, demonstrating a critical problem-solving heuristic: analyzing prefixes to intelligently prune the search space and quickly converge on a solution [@problem_id:1436490]. By strategically choosing which domino to place next, you can avoid dead ends and efficiently determine solvability.", "problem": "The Post's Correspondence Problem (PCP) is a classic undecidable decision problem in theoretical computer science. An instance of the PCP consists of a finite set of \"dominoes,\" where each domino has a \"top\" string and a \"bottom\" string over some alphabet $\\Sigma$. A solution to a PCP instance is a non-empty sequence of domino indices $i_1, i_2, \\ldots, i_k$ (where repetition is allowed) such that the concatenation of the top strings equals the concatenation of the bottom strings. That is, if domino $j$ is the pair $(t_j, b_j)$, a solution is a sequence of indices $[i_1, i_2, \\ldots, i_k]$ with $k \\ge 1$ such that $t_{i_1}t_{i_2}\\ldots t_{i_k} = b_{i_1}b_{i_2}\\ldots b_{i_k}$. The integer $k$ is called the length of the solution.\n\nConsider the following PCP instance $P$ over the alphabet $\\Sigma = \\{0, 1\\}$. The dominoes are given as pairs of (top string, bottom string):\n- Domino 1: $(01, 1)$\n- Domino 2: $(0, 00)$\n\nWhich of the following statements is true for this PCP instance $P$?\n\nA. The shortest solution has length 2.\n\nB. The shortest solution has length 3.\n\nC. The shortest solution has length 4.\n\nD. A solution exists, but the shortest one has a length greater than 4.\n\nE. The problem has no solution.", "solution": "We are given the PCP instance with dominoes:\n1: top $t_1 = \\text{01}$, bottom $b_1 = \\text{1}$\n2: top $t_2 = \\text{0}$, bottom $b_2 = \\text{00}$\n\nA necessary condition for any partial sequence of dominoes to be extendable to a solution is the prefix property: after placing any initial subsequence, the two concatenated strings must agree up to the length of the shorter one, i.e., one must be a prefix of the other. In particular, the very first domino in any solution must have its top and bottom in a prefix relation.\n\nCheck each domino as a possible first tile:\n- Domino 1: $t_1 = \\text{01}$ and $b_1 = \\text{1}$ are not in a prefix relation because the first symbols differ. Hence domino 1 cannot start any valid sequence.\n- Domino 2: $t_2 = \\text{0}$ is a prefix of $b_2 = \\text{00}$. Thus any solution must start with domino 2.\n\nAfter placing domino 2 first, the bottom string is ahead of the top by the overhang '0'. To continue, we must use a domino whose top begins with this overhang, and then cancel accordingly.\n\nConsider the two choices for the second tile:\n- Second tile 1: We must append a domino whose top starts with the overhang '0'. Domino 1, with $t_1 = \\text{01}$, works. The '0' from the overhang and the initial '0' of $t_1$ effectively cancel. The remainder of $t_1$ is '1', which must be compared to the next part of the bottom string, which is $b_1 = \\text{1}$. They match, yielding equality after two tiles. Explicitly, the concatenated strings are:\n$$\nt_2t_1 = (\\text{0})(\\text{01}) = \\text{001} \\qquad \\text{and} \\qquad b_2b_1 = (\\text{00})(\\text{1}) = \\text{001}\n$$\nThus $[2,1]$ is a solution of length $2$.\n\n- Second tile 2: Appending domino 2, with $t_2=\\text{0}$, cancels the overhang, but adds $b_2 = \\text{00}$ to the bottom string, creating a new bottom overhang of '00'. Equality is not achieved.\n\nFinally, no solution of length $1$ exists because $t_1 \\ne b_1$ and $t_2 \\ne b_2$. Therefore the shortest solution length is $2$, realized by the sequence $[2,1]$.", "answer": "$$\\boxed{A}$$", "id": "1436490"}, {"introduction": "To truly understand why a problem is difficult, it is often helpful to examine a case where it becomes simple. This problem challenges you to analyze a highly simplified version of PCP involving just a single domino [@problem_id:1436463]. By determining the exact condition for a solution in this special case, you will gain a deeper appreciation for the combinatorial complexity that arises from the interaction of multiple, different dominoes in the general problem.", "problem": "The Post Correspondence Problem (PCP) is a famous undecidable decision problem in theoretical computer science. An instance of the PCP consists of a finite set of \"dominos\", where each domino is a pair of strings over some alphabet. A solution is a sequence of these dominos (with repetition allowed) such that the string formed by concatenating all the \"top\" strings is identical to the string formed by concatenating all the \"bottom\" strings.\n\nConsider a highly simplified version of this problem where the set of available dominos contains only a single pair of non-empty strings, denoted by $P = \\{ (u, v) \\}$, where $u$ and $v$ are strings over an alphabet $\\Sigma$. A solution to this instance would be a sequence of one or more copies of this single domino that forms a match.\n\nWhich of the following statements correctly and completely describes the condition under which this single-domino PCP instance has a solution?\n\nA. A solution exists if and only if $u$ is a prefix of $v$ or $v$ is a prefix of $u$.\n\nB. The problem remains undecidable, so no general condition can be stated.\n\nC. A solution exists for any choice of non-empty strings $u$ and $v$.\n\nD. A solution exists if and only if the length of string $u$ is equal to the length of string $v$.\n\nE. A solution exists if and only if the string $u$ is identical to the string $v$.\n\nF. A solution exists if and only if $u$ and $v$ are anagrams of each other (i.e., contain the same characters with the same frequencies).", "solution": "We are given a single-domino PCP instance with $P=\\{(u,v)\\}$, where $u$ and $v$ are non-empty strings over an alphabet $\\Sigma$, and a solution is a sequence of one or more copies of this single domino such that the concatenation of all top strings equals the concatenation of all bottom strings.\n\nUsing the single domino $(u,v)$ exactly $k\\geq 1$ times produces the pair of strings $(u^{k},v^{k})$, where $x^{k}$ denotes $x$ concatenated with itself $k$ times. Thus, the instance has a solution if and only if there exists $k\\in\\mathbb{N}$ with $k\\geq 1$ such that\n$$\nu^{k}=v^{k}.\n$$\n\nWe use the basic length property of strings: for any strings $x,y$, $|xy|=|x|+|y|$ and hence $|x^{k}|=k|x|$. Applying this to the equality $u^{k}=v^{k}$ yields\n$$\n|u^{k}|=|v^{k}|\\quad\\Longrightarrow\\quad k|u|=k|v|\\quad\\Longrightarrow\\quad |u|=|v|.\n$$\nLet $|u|=|v|=\\ell$. Consider the first $\\ell$ symbols of the equality $u^{k}=v^{k}$. The first $\\ell$ symbols of $u^{k}$ are exactly $u$, and the first $\\ell$ symbols of $v^{k}$ are exactly $v$ (since the block boundaries align when $|u|=|v|$). Therefore,\n$$\nu=v.\n$$\nThus, a necessary condition for the existence of $k\\geq 1$ with $u^{k}=v^{k}$ is $u=v$.\n\nConversely, if $u=v$, then choosing $k=1$ immediately gives $u^{1}=v^{1}$, so a solution exists. Therefore, the condition is also sufficient.\n\nCombining necessity and sufficiency, the single-domino PCP instance has a solution if and only if $u$ is identical to $v$. Among the provided options, this is exactly statement E. All other options fail: equal length alone (D) is insufficient without equality; prefix (A), anagram (F), or arbitrary non-empty strings (C) do not guarantee equality of any equal powers; undecidability (B) does not apply in this trivial single-domino case.", "answer": "$$\\boxed{E}$$", "id": "1436463"}, {"introduction": "The Modified Post Correspondence Problem (MPCP) is a key variant where the solution must begin with a specific, designated domino. While closely related to the original PCP, this small constraint can have a dramatic impact on whether a solution exists. This practice asks you to explore this relationship by finding an instance that has a PCP solution but no MPCP solution, revealing the subtle yet crucial differences between the two problems [@problem_id:1436472].", "problem": "In the theory of computation, the Post's Correspondence Problem (PCP) is a well-known undecidable decision problem. An instance of PCP consists of a finite set of \"dominoes,\" $P = \\{ (t_1, b_1), (t_2, b_2), \\dots, (t_k, b_k) \\}$, where each $t_i$ and $b_i$ are non-empty strings over a given alphabet $\\Sigma$. A solution to this instance is a sequence of indices $i_1, i_2, \\dots, i_m$ with $m \\ge 1$, such that the concatenation of the top strings matches the concatenation of the bottom strings: $t_{i_1}t_{i_2}\\dots t_{i_m} = b_{i_1}b_{i_2}\\dots b_{i_m}$.\n\nThe Modified Post's Correspondence Problem (MPCP) is a variant where the solution sequence is required to start with the first domino (the one indexed by 1). That is, a solution to the MPCP is a sequence starting with $1$, such as $1, i_2, \\dots, i_m$ with $m \\ge 1$, that satisfies the same concatenation property: $t_1t_{i_2}\\dots t_{i_m} = b_1b_{i_2}\\dots b_{i_m}$.\n\nConsider the following four instances of PCP over the alphabet $\\Sigma = \\{0, 1\\}$. Each instance is a set of $(t_i, b_i)$ pairs, where the dominoes are indexed starting from 1. Which of these instances has a solution for its PCP, but no solution for its corresponding MPCP?\n\nA. $P_A = \\{ (0, 01), (10, 0) \\}$\n\nB. $P_B = \\{ (1, 101), (10, 1), (0, 00) \\}$\n\nC. $P_C = \\{ (01, 1), (10, 0) \\}$\n\nD. $P_D = \\{ (10, 1), (0, 10) \\}$", "solution": "The problem asks us to identify a Post's Correspondence Problem (PCP) instance that has a solution, but for which the corresponding Modified Post's Correspondence Problem (MPCP) does not have a solution. Let's analyze each option.\n\n**Analysis of Option A: $P_A = \\{ (1: 0, 01), (2: 10, 0) \\}$**\n\nFirst, let's check for an MPCP solution. An MPCP solution must start with domino 1.\n- Initial sequence: `1`\n- Top string: $t_1 = 0$\n- Bottom string: $b_1 = 01$\nThe top string is a prefix of the bottom string. The bottom string has a remainder of '1'. To find a match, the next top string we add must start with '1'. Domino 2 has $t_2 = 10$. Let's try appending domino 2.\n- Sequence: `1, 2`\n- Top string: $t_1t_2 = 010$\n- Bottom string: $b_1b_2 = 010$\nThe strings match. Thus, the sequence `1, 2` is a solution to the MPCP for this instance. Since any MPCP solution is also a PCP solution, this instance has a solution for both PCP and MPCP. This option does not satisfy the condition.\n\n**Analysis of Option B: $P_B = \\{ (1: 1, 101), (2: 10, 1), (3: 0, 00) \\}$**\n\nFirst, let's check for a general PCP solution. We can start with any domino. Let's try starting with domino 2.\n- Initial sequence: `2`\n- Top string: $t_2 = 10$\n- Bottom string: $b_2 = 1$\nThe bottom string is a prefix of the top string. The top string has a remainder of '0'. To find a match, the next bottom string we add must start with '0'. Domino 3 has $b_3 = 00$. Let's try appending domino 3.\n- Sequence: `2, 3`\n- Top string: $t_2t_3 = 100$\n- Bottom string: $b_2b_3 = 100$\nThe strings match. The sequence `2, 3` is a solution to the PCP. So, this instance has a PCP solution.\n\nNow, let's check for an MPCP solution. The sequence must start with domino 1.\n- Initial sequence: `1`\n- Top string: $t_1 = 1$\n- Bottom string: $b_1 = 101$\nThe top string is a prefix of the bottom string, with a remainder of `01`. The next domino must have a top string starting with `0`. Only domino 3 ($t_3=0$) qualifies.\n- Sequence: `1, 3`\n- Top string: $t_1t_3 = 10$\n- Bottom string: $b_1b_3 = 10100$\nThe top string is a prefix of the bottom string, with a remainder of `100`. The next domino must have a top string starting with `1`. We can choose domino 1 ($t_1=1$) or domino 2 ($t_2=10$).\n- Path 1 (append domino 2): The remainder is `100`, and $t_2=10$ is a prefix of it.\n  - Sequence: `1, 3, 2`\n  - Top string: $t_1t_3t_2 = 1010$\n  - Bottom string: $b_1b_3b_2 = 101001$\n  The top string is a prefix of the bottom string, with a remainder of `01`. This is the same remainder state we had after the first step. This leads to a non-terminating loop of states: a remainder of `01` forces us to pick domino 3, leading to remainder `100`, which allows us to pick domino 2, leading back to remainder `01`. A solution is never reached.\n- Path 2 (append domino 1): The remainder is `100`, and $t_1=1$ is a prefix of it.\n  - Sequence `1, 3, 1`\n  - Top string: $t_1t_3t_1 = 101$\n  - Bottom string: $b_1b_3b_1 = 10100101$\n  The top string is a prefix of the bottom, with remainder `00101`. The length difference $|B|-|T|$ is increasing: it was 2, then 3, and now 5. This path will also not terminate in a solution.\n\nSince there is no sequence starting with domino 1 that yields a solution, there is no solution to the MPCP. Therefore, this instance has a PCP solution but no MPCP solution. This option satisfies the condition.\n\n**Analysis of Option C: $P_C = \\{ (1: 01, 1), (2: 10, 0) \\}$**\n\nLet's compare the lengths of the top and bottom strings for each domino.\n- For domino 1: $|t_1| = |01| = 2$, $|b_1| = |1| = 1$. The top string is longer.\n- For domino 2: $|t_2| = |10| = 2$, $|b_2| = |0| = 1$. The top string is longer.\nFor any sequence of dominoes $i_1, i_2, \\dots, i_m$, the length of the concatenated top string will be $\\sum_{j=1}^m |t_{i_j}|$, and the length of the bottom string will be $\\sum_{j=1}^m |b_{i_j}|$. Since $|t_i| > |b_i|$ for all $i \\in \\{1, 2\\}$, the total length of the top string will always be strictly greater than the total length of the bottom string. Therefore, a match is impossible. This instance has no PCP solution (and thus no MPCP solution). This option does not satisfy the condition.\n\n**Analysis of Option D: $P_D = \\{ (1: 10, 1), (2: 0, 10) \\}$**\n\nLet's check for a PCP solution. Let $n_1$ and $n_2$ be the number of times domino 1 and domino 2 are used in a potential solution sequence. For the total lengths of the top and bottom strings to be equal, we need the sum of length differences to be zero.\n- Domino 1 length difference: $|t_1| - |b_1| = 2 - 1 = 1$.\n- Domino 2 length difference: $|t_2| - |b_2| = 1 - 2 = -1$.\nA solution must have $n_1 \\cdot (1) + n_2 \\cdot (-1) = 0$, which implies $n_1 = n_2$. Any solution must use an equal number of domino 1's and domino 2's.\nLet's test the simplest case: $n_1 = 1, n_2 = 1$. The possible sequences are `1, 2` and `2, 1`.\n- Sequence `1, 2`: Top is $t_1t_2 = 100$, Bottom is $b_1b_2 = 110$. No match.\n- Sequence `2, 1`: Top is $t_2t_1 = 010$, Bottom is $b_2b_1 = 101$. No match.\nTesting further combinations (e.g., $n_1=n_2=2$) also fails to produce a match. This instance appears to have no PCP solution. Therefore, it does not satisfy the condition.\n\nBased on the analysis, only option B has a PCP solution but lacks an MPCP solution.", "answer": "$$\\boxed{B}$$", "id": "1436472"}]}