{"hands_on_practices": [{"introduction": "Understanding a Turing Machine begins with learning how to trace its operations. This first exercise provides a hands-on opportunity to simulate a TM from its initial state to its final halting configuration. By carefully applying the transition rules step by step, you will solidify your grasp of how configurations change and how a computation unfolds on the tape [@problem_id:1467875].", "problem": "A Turing Machine (TM) is a mathematical model of computation. We consider a TM with a set of states $Q = \\{q_0, q_1, q_2, q_f\\}$, where $q_0$ is the initial state and $q_f$ is the single halting state. The TM's tape alphabet is $\\Gamma = \\{0, 1, B\\}$, where $B$ represents the blank symbol. The input alphabet is $\\Sigma = \\{0, 1\\}$.\n\nThe behavior of the TM is governed by a transition function $\\delta$, defined by the following rules:\n1.  $\\delta(q_0, 1) = (q_1, 0, R)$\n2.  $\\delta(q_1, 1) = (q_1, 1, R)$\n3.  $\\delta(q_1, 0) = (q_2, 1, L)$\n4.  $\\delta(q_2, 1) = (q_2, 1, L)$\n5.  $\\delta(q_2, 0) = (q_f, 0, R)$\n\nA configuration of the TM is represented by a string of the form `uqv`. In this notation, `q` is the current state of the machine, the string `u` represents the contents of the tape to the left of the head, and the string `v` represents the contents of the tape at and to the right of the head. The head is currently scanning the first symbol of the string `v`.\n\nThe machine starts in the configuration `q_0 1101` on a tape that is otherwise filled with blank symbols ($B$) in both directions. The machine halts its computation if it enters the state $q_f$.\n\nDetermine the final configuration of the TM when it halts. Your answer should be given as a single string representing this final configuration.", "solution": "We simulate the Turing Machine by applying the given transition function $\\delta$ to the configurations, using the representation `uqv` where $q$ is the current state, `u` is the tape content to the left of the head, and `v` is the tape content at and to the right of the head (the head scans the first symbol of `v`).\n\nInitial configuration: $q_01101$.\n\n1) In state $q_0$ scanning $1$, apply $\\delta(q_0, 1) = (q_1, 0, R)$. We write $0$, move right, and switch to $q_1$. Configuration becomes $0q_1101$.\n\n2) In state $q_1$ scanning $1$, apply $\\delta(q_1, 1) = (q_1, 1, R)$. We leave $1$, move right, stay in $q_1$. Configuration becomes $01q_101$.\n\n3) In state $q_1$ scanning $0$, apply $\\delta(q_1, 0) = (q_2, 1, L)$. We write $1$, move left, and switch to $q_2$. Configuration becomes $0q_2111$.\n\n4) In state $q_2$ scanning $1$, apply $\\delta(q_2, 1) = (q_2, 1, L)$. We leave $1$, move left, stay in $q_2$. Configuration becomes $q_20111$.\n\n5) In state $q_2$ scanning $0$, apply $\\delta(q_2, 0) = (q_f, 0, R)$. We write $0$, move right, and enter $q_f$, which halts the machine. Final configuration is $0q_f111$.", "answer": "$$\\boxed{0q_{f}111}$$", "id": "1467875"}, {"introduction": "Beyond simply executing a TM's instructions, it is crucial to understand the fundamental principles that define its behavior. This practice challenges you to act as a verifier, examining several potential computation histories to identify one that violates the core rule of determinism. This exercise will sharpen your understanding of why a Deterministic Turing Machine's path is uniquely defined at every step [@problem_id:1467883].", "problem": "A standard deterministic Turing Machine (DTM) operates on a single tape that is infinite to the right. Its behavior is governed by a transition function of the form $\\delta(q, s) = (q', s', D)$, which maps the current state $q$ and the symbol $s$ under the tape head to a new state $q'$, a symbol $s'$ to be written on the tape, and a head movement $D \\in \\{L, R\\}$ (Left or Right).\n\nA configuration, which is a complete snapshot of the DTM's state, is represented by a string of the form `uqv`. In this notation, `q` is the current state, `u` is the string on the tape to the left of the head, and `v` is the string on the tape starting from the head's position. The symbol being read is the first symbol of `v`. For example, in the configuration $10q_311B$, the machine is in state $q_3$, the head is reading a '1', the tape to the left of the head contains '10', and the tape from the head onwards is '11B...'. A single computation step transitioning from one configuration to the next is denoted by the symbol $\\vdash$. The blank symbol is represented by $B$.\n\nGiven the definition of a DTM, one of the following computation histories or sets of computation fragments is impossible for any single DTM to perform. Identify the impossible one.\n\nA. $q_0 10 \\vdash 1 q_1 0 \\vdash 11 q_2 B$\n\nB. The machine can perform $q_0 11 \\vdash 1q_1 1$, and it can also perform $q_1 1 \\vdash 0q_2 1$ in a separate computation.\n\nC. $q_2 01 \\vdash B q_0 1 \\vdash q_2 B B$\n\nD. The machine can perform $q_0 11 \\vdash 1q_1 1$, and it can also perform $q_0 11 \\vdash 1q_2 1$ in a separate computation (assuming $q_1 \\neq q_2$).\n\nE. $q_0 11 \\vdash 1 q_1 1 \\vdash q_0 11$", "solution": "A deterministic Turing machine (DTM) has a single-valued transition function $\\delta(q,s)=(q',s',D)$ with $D \\in \\{L,R\\}$. In configuration notation, writing the tape as $u q s w$ where the head reads symbol $s$ (the first symbol of $v:=sw$), the one-step move is uniquely determined by $\\delta$ as follows:\n- If $\\delta(q,s)=(q',s',R)$, then\n$$\nu q s w \\;\\vdash\\; u s' q' w.\n$$\n- If $\\delta(q,s)=(q',s',L)$ and $u=x a$ with $a$ a single tape symbol (and $x$ possibly empty), then\n$$\nx a q s w \\;\\vdash\\; x q' a s' w.\n$$\nDeterminism implies that from any given configuration there is exactly one successor configuration.\n\nWe now analyze each option.\n\nOption A: $q_{0} 10 \\vdash 1 q_{1} 0 \\vdash 11 q_{2} B$. This is realizable by setting\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},0)=(q_{2},1,R).\n$$\nIndeed, $q_{0} 10 \\vdash 1 q_{1} 0$ by the $R$-rule with $u=\\epsilon$, $s=1$, $w=0$. Next, $1 q_{1} 0 \\vdash 11 q_{2} B$ by the $R$-rule with $u=1$, $s=0$, $w=B$.\n\nOption B: The machine can perform $q_{0} 11 \\vdash 1 q_{1} 1$, and it can also perform $q_{1} 1 \\vdash 0 q_{2} 1$ in a separate computation. This is consistent by choosing\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},1)=(q_{2},0,R).\n$$\nThese describe distinct configurations and do not violate determinism; the latter is also the unique successor of $1 q_{1} 1$.\n\nOption C: $q_{2} 01 \\vdash B q_{0} 1 \\vdash q_{2} B B$. This is realizable by\n$$\n\\delta(q_{2},0)=(q_{0},B,R),\\quad \\delta(q_{0},1)=(q_{2},B,L).\n$$\nFor the first step, use the $R$-rule with $u=\\epsilon$, $s=0$, $w=1$ to get $B q_{0} 1$. For the second, write $u=B$ as $x a$ with $x=\\epsilon$, $a=B$, then apply the $L$-rule with $s=1$, $w=B$ to obtain $q_{2} B B$.\n\nOption D: The machine can perform $q_{0} 11 \\vdash 1 q_{1} 1$, and it can also perform $q_{0} 11 \\vdash 1 q_{2} 1$ in a separate computation with $q_{1} \\neq q_{2}$. This would require\n$$\n\\delta(q_{0},1)=(q_{1},1,R)\\quad \\text{and}\\quad \\delta(q_{0},1)=(q_{2},1,R),\n$$\nwhich is impossible for a single deterministic function $\\delta$ when $q_{1}\\neq q_{2}$. Hence this option violates determinism and cannot occur for any single DTM.\n\nOption E: $q_{0} 11 \\vdash 1 q_{1} 1 \\vdash q_{0} 11$. This is realizable by\n$$\n\\delta(q_{0},1)=(q_{1},1,R),\\quad \\delta(q_{1},1)=(q_{0},1,L).\n$$\nFrom $q_{0} 11$ the $R$-rule gives $1 q_{1} 1$. Then with $u=1=x a$ where $x=\\epsilon$, $a=1$, the $L$-rule returns to $q_{0} 11$.\n\nTherefore exactly option D is impossible for any single DTM.", "answer": "$$\\boxed{D}$$", "id": "1467883"}, {"introduction": "The power of computational theory lies in its ability to generalize from specific instances to broad classes of problems. In this final practice, we move from tracing a single computation to analyzing a TM's performance on any input of a given length $n$. Your task is to determine the total number of distinct configurations the machine can enter, building a bridge between the concrete mechanics of a TM and the abstract analysis of its computational path [@problem_id:1467821].", "problem": "Consider a single-tape Turing Machine (TM) defined by the formal seven-tuple $M = (Q, \\Sigma, \\Gamma, \\delta, q_0, B, F)$.\n- The set of states is $Q = \\{q_{\\text{start}}, q_{\\text{erase}}, q_{\\text{halt}}\\}$.\n- The input alphabet is $\\Sigma = \\{\\texttt{x}, \\texttt{y}\\}$.\n- The tape alphabet is $\\Gamma = \\{\\texttt{x}, \\texttt{y}, \\sqcup\\}$.\n- The initial state is $q_0 = q_{\\text{start}}$.\n- The blank symbol is $B = \\sqcup$.\n- The set of final (halting) states is $F = \\{q_{\\text{halt}}\\}$.\n- The transition function $\\delta: (Q \\setminus F) \\times \\Gamma \\to Q \\times \\Gamma \\times \\{R\\}$ is a partial function defined as:\n    1. For any symbol $\\sigma \\in \\Sigma$, $\\delta(q_{\\text{start}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$.\n    2. For any symbol $\\sigma \\in \\Sigma$, $\\delta(q_{\\text{erase}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$.\n    3. $\\delta(q_{\\text{erase}}, \\sqcup) = (q_{\\text{halt}}, \\sqcup, R)$.\nNote that the head only moves to the right (R).\n\nA configuration is specified by the current state, the tape contents, and the integer index of the tape cell under the head (with the first symbol of the input at index 0). Assume the TM begins its computation in state $q_{\\text{start}}$ with its head on the first symbol of an input string $w \\in \\Sigma^*$ of length $n$ (where $n \\ge 1$). The rest of the tape, to the left and right of $w$, is filled with the blank symbol $\\sqcup$.\n\nLet $S_w$ be the set of all configurations reachable from this initial configuration. A configuration $C_2$ is reachable from $C_1$ if there is a sequence of zero or more computation steps that transforms $C_1$ into $C_2$. The set $S_w$ includes the initial configuration itself.\n\nTwo configurations are considered distinct if they differ in at least one of their three components: state, tape contents, or head position.\n\nDetermine the cardinality of the set $S_w$, denoted $|S_w|$, as an analytic expression in terms of $n$.", "solution": "Because the machine is deterministic and the head always moves right, the set of reachable configurations from the given initial configuration is exactly the sequence of configurations visited along the unique computation path, including the initial and halting configurations.\n\nLet the input be $w \\in \\Sigma^{*}$ with $|w| = n \\ge 1$, placed on cells $0,1,\\dots,n-1$, and blanks elsewhere.\n\nStep-by-step evolution:\n1) Initial configuration $C_{0}$: state $q_{\\text{start}}$, tape has $w$ on cells $0$ to $n-1$ and $\\sqcup$ elsewhere, head at index $0$.\n2) First move (from $q_{\\text{start}}$): reading $\\sigma \\in \\Sigma$ at index $0$, apply $\\delta(q_{\\text{start}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$. After this single step, the configuration $C_{1}$ has state $q_{\\text{erase}}$, cell $0$ erased to $\\sqcup$, cells $1$ to $n-1$ unchanged from $w$, head at index $1$.\n3) Erasing the remainder (from $q_{\\text{erase}}$ on symbols of $\\Sigma$): for each $i \\in \\{1,2,\\dots,n-1\\}$, reading $\\sigma \\in \\Sigma$ at index $i$, apply $\\delta(q_{\\text{erase}}, \\sigma) = (q_{\\text{erase}}, \\sqcup, R)$. This yields one step per cell $i$, erasing that cell and moving the head to $i+1$. After $n-1$ such steps (from $i=1$ to $i=n-1$), the configuration $C_{n}$ has state $q_{\\text{erase}}$, cells $0$ to $n-1$ all $\\sqcup$, head at index $n$.\n4) Halting step: at index $n$ the tape symbol is $\\sqcup$, so apply $\\delta(q_{\\text{erase}}, \\sqcup) = (q_{\\text{halt}}, \\sqcup, R)$ once. The halting configuration $C_{n+1}$ has state $q_{\\text{halt}}$, the tape everywhere $\\sqcup$, head at index $n+1$.\n\nCounting steps and configurations:\n- The total number of transition steps is $T = 1 + (n-1) + 1 = n+1$.\n- Each step strictly increases the head position by $1$, and the state changes from $q_{\\text{start}}$ to $q_{\\text{erase}}$ on the first step and to $q_{\\text{halt}}$ on the last step; hence no configuration repeats. Therefore the number of distinct configurations visited (including the initial configuration and the halting configuration) is $T + 1 = n + 2$.\n\nThus, the cardinality of $S_{w}$ is $|S_{w}| = n + 2$.", "answer": "$$\\boxed{n+2}$$", "id": "1467821"}]}