{"hands_on_practices": [{"introduction": "A crucial first step in any turbulence simulation is choosing the right level of theory. The simplest approach, a steady Reynolds-Averaged Navier–Stokes (RANS) model, is computationally cheap but relies on the assumption that the flow has a stable, time-invariant mean state. This practice [@problem_id:2447854] challenges you to determine precisely when this assumption breaks down for the classic case of flow past a cylinder, linking a fundamental physical instability—the onset of vortex shedding—to the practical limits of a modeling strategy. By calculating the critical flow velocity, you will develop a first-principles understanding of how to select an appropriate modeling framework based on the flow physics, governed by the Reynolds number $Re$.", "problem": "You are to write a complete, runnable program that determines when a steady Reynolds-Averaged Navier–Stokes (RANS) model becomes physically invalid for flow over a circular cylinder due to the onset of periodic vortex shedding, and computes corresponding minimum free-stream speeds for specified geometries and fluids. The reasoning must be grounded in first principles and widely accepted facts.\n\nStart from the incompressible Navier–Stokes equations and their non-dimensionalization to define the Reynolds number. Let $U_\\infty$ be the free-stream speed (in $\\mathrm{m/s}$), $D$ be the cylinder diameter (in $\\mathrm{m}$), and $\\nu$ be the kinematic viscosity (in $\\mathrm{m^2/s}$). The Reynolds number is defined as $Re = U_\\infty D / \\nu$. It is a well-established experimental and computational fact that the two-dimensional wake of a circular cylinder in unconfined uniform flow undergoes a supercritical Hopf bifurcation at a critical Reynolds number (dimensionless), above which a von Kármán vortex street forms and the instantaneous flow becomes time-periodic. In that regime, a strictly steady-state solution of the Reynolds-averaged equations is not representative of the true instantaneous dynamics, and a steady RANS model solved to a time-independent field becomes invalid for capturing the physical unsteadiness. Instead, one must use an unsteady approach such as unsteady Reynolds-Averaged Navier–Stokes (URANS), Large Eddy Simulation (LES), or Direct Numerical Simulation (DNS).\n\nYour tasks are:\n- Using the above foundational base and the widely accepted critical Reynolds number (dimensionless) for the onset of periodic vortex shedding behind an unconfined circular cylinder, determine the minimum Reynolds number $Re_\\text{crit}$ at which a steady RANS model becomes invalid due to vortex shedding.\n- For each test case below, compute the minimum free-stream speed $U_{\\infty,\\min}$ (in $\\mathrm{m/s}$) that yields $Re = Re_\\text{crit}$. Use the exact relationship $U_{\\infty,\\min} = Re_\\text{crit} \\, \\nu / D$.\n- Express every $U_{\\infty,\\min}$ in $\\mathrm{m/s}$, rounded to six decimal places.\n- Your program must output a single line containing a comma-separated list enclosed in square brackets. The list must contain $Re_\\text{crit}$ as the first entry (expressed as a floating-point number), followed by the four values of $U_{\\infty,\\min}$ for the four test cases, each rounded to six decimal places, in the order given below.\n\nTest suite (each test case provides $(D,\\nu)$):\n1. Case A (nominal air over a small cylinder): $D = 0.05\\,\\mathrm{m}$, $\\nu = 1.5\\times 10^{-5}\\,\\mathrm{m^2/s}$.\n2. Case B (freshwater over a medium cylinder): $D = 0.10\\,\\mathrm{m}$, $\\nu = 1.0\\times 10^{-6}\\,\\mathrm{m^2/s}$.\n3. Case C (viscous oil in micro-hydrodynamics): $D = 1.0\\times 10^{-3}\\,\\mathrm{m}$, $\\nu = 1.0\\times 10^{-4}\\,\\mathrm{m^2/s}$.\n4. Case D (air over a thin fiber): $D = 1.0\\times 10^{-4}\\,\\mathrm{m}$, $\\nu = 1.5\\times 10^{-5}\\,\\mathrm{m^2/s}$.\n\nFinal output format:\n- A single line with the list: $[Re_\\text{crit}, U_{\\infty,\\min}^{(A)}, U_{\\infty,\\min}^{(B)}, U_{\\infty,\\min}^{(C)}, U_{\\infty,\\min}^{(D)}]$ where all entries are floating-point numbers. The four speed values must be rounded to six decimal places in $\\mathrm{m/s}$.\n\nYour program must be self-contained and must not require any input. It must implement the above logic and print only the line with the list as specified.", "solution": "We proceed from first principles and well-tested facts in fluid mechanics and computational engineering.\n\n1. Governing equations and non-dimensionalization. The incompressible Navier–Stokes equations for velocity $\\mathbf{u}(\\mathbf{x},t)$ and pressure $p(\\mathbf{x},t)$ with density $\\rho$ and kinematic viscosity $\\nu$ are\n$$\n\\frac{\\partial \\mathbf{u}}{\\partial t} + \\left(\\mathbf{u}\\cdot\\nabla\\right)\\mathbf{u} = -\\frac{1}{\\rho}\\nabla p + \\nu \\nabla^2 \\mathbf{u}, \\quad \\nabla\\cdot \\mathbf{u} = 0.\n$$\nIntroduce a characteristic speed $U_\\infty$ (free-stream speed) and length $D$ (cylinder diameter), and define dimensionless variables by $\\tilde{\\mathbf{u}}=\\mathbf{u}/U_\\infty$, $\\tilde{\\mathbf{x}}=\\mathbf{x}/D$, and $\\tilde{t}=t U_\\infty / D$. Substitution yields the non-dimensional form\n$$\n\\frac{\\partial \\tilde{\\mathbf{u}}}{\\partial \\tilde{t}} + \\left(\\tilde{\\mathbf{u}}\\cdot\\tilde{\\nabla}\\right)\\tilde{\\mathbf{u}} = -\\tilde{\\nabla} \\tilde{p} + \\frac{1}{Re} \\tilde{\\nabla}^2 \\tilde{\\mathbf{u}}, \\quad \\tilde{\\nabla}\\cdot \\tilde{\\mathbf{u}} = 0,\n$$\nwhere the Reynolds number is\n$$\nRe = \\frac{U_\\infty D}{\\nu}.\n$$\nThis dimensionless group controls the relative importance of inertia to viscosity.\n\n2. Criterion for onset of vortex shedding. For an unconfined circular cylinder in uniform flow, the two-dimensional steady base flow loses stability via a supercritical Hopf bifurcation at a critical Reynolds number. This is a widely validated result from experiments and direct numerical simulations. Denote the critical value by $Re_\\text{crit}$. For $Re  Re_\\text{crit}$ the steady solution is stable and the flow remains steady; for $Re > Re_\\text{crit}$ a time-periodic von Kármán vortex street emerges.\n\n3. Implication for steady Reynolds-Averaged Navier–Stokes (RANS). A steady RANS model, when solved to a time-independent field, cannot capture the physics of a flow whose instantaneous dynamics are intrinsically unsteady due to a global oscillatory mode. Therefore, the minimum Reynolds number beyond which a strictly steady RANS solution becomes physically invalid for representing the instantaneous behavior is exactly the bifurcation threshold $Re_\\text{crit}$.\n\n4. Determining $Re_\\text{crit}$ and minimum speeds. The critical value $Re_\\text{crit}$ is a well-established benchmark, approximately\n$$\nRe_\\text{crit} \\approx 47.\n$$\nGiven any cylinder diameter $D$ and kinematic viscosity $\\nu$, the minimum free-stream speed to reach this threshold is deduced by solving $Re_\\text{crit} = U_{\\infty,\\min} D / \\nu$ for $U_{\\infty,\\min}$:\n$$\nU_{\\infty,\\min} = \\frac{Re_\\text{crit}\\, \\nu}{D}.\n$$\n\n5. Application to the test suite. For each case, compute $U_{\\infty,\\min}$ and round to six decimal places in $\\mathrm{m/s}$.\n\n- Case A: $D = 0.05\\,\\mathrm{m}$, $\\nu = 1.5\\times 10^{-5}\\,\\mathrm{m^2/s}$.\nCompute\n$$\nU_{\\infty,\\min}^{(A)} = \\frac{47 \\times 1.5\\times 10^{-5}}{0.05} = 47 \\times 3.0\\times 10^{-4} = 1.41\\times 10^{-2}\\,\\mathrm{m/s} = 0.0141\\,\\mathrm{m/s}.\n$$\nRounded: $0.014100\\,\\mathrm{m/s}$.\n\n- Case B: $D = 0.10\\,\\mathrm{m}$, $\\nu = 1.0\\times 10^{-6}\\,\\mathrm{m^2/s}$.\nCompute\n$$\nU_{\\infty,\\min}^{(B)} = \\frac{47 \\times 1.0\\times 10^{-6}}{0.10} = 4.7\\times 10^{-4}\\,\\mathrm{m/s} = 0.00047\\,\\mathrm{m/s}.\n$$\nRounded: $0.000470\\,\\mathrm{m/s}$.\n\n- Case C: $D = 1.0\\times 10^{-3}\\,\\mathrm{m}$, $\\nu = 1.0\\times 10^{-4}\\,\\mathrm{m^2/s}$.\nCompute\n$$\nU_{\\infty,\\min}^{(C)} = \\frac{47 \\times 1.0\\times 10^{-4}}{1.0\\times 10^{-3}} = 47 \\times 0.1 = 4.7\\,\\mathrm{m/s}.\n$$\nRounded: $4.700000\\,\\mathrm{m/s}$.\n\n- Case D: $D = 1.0\\times 10^{-4}\\,\\mathrm{m}$, $\\nu = 1.5\\times 10^{-5}\\,\\mathrm{m^2/s}$.\nCompute\n$$\nU_{\\infty,\\min}^{(D)} = \\frac{47 \\times 1.5\\times 10^{-5}}{1.0\\times 10^{-4}} = 47 \\times 0.15 = 7.05\\,\\mathrm{m/s}.\n$$\nRounded: $7.050000\\,\\mathrm{m/s}$.\n\n6. Final required output. The program must print a single line with the list\n$$\n[Re_\\text{crit}, U_{\\infty,\\min}^{(A)}, U_{\\infty,\\min}^{(B)}, U_{\\infty,\\min}^{(C)}, U_{\\infty,\\min}^{(D)}],\n$$\nwith all entries as floating-point numbers and the four speeds rounded to six decimal places. Using $Re_\\text{crit} = 47$ and the computed values, the expected numerical outputs are\n$$\n[47.000000, 0.014100, 0.000470, 4.700000, 7.050000].\n$$\n\nAlgorithmic design:\n- Store $Re_\\text{crit}$ as a constant.\n- For each test case $(D,\\nu)$, compute $U_{\\infty,\\min} = Re_\\text{crit}\\, \\nu / D$.\n- Format the output as a single list string with six decimal places for each entry. The first entry $Re_\\text{crit}$ is also formatted with six decimal places to maintain consistency.\n- Print only the specified line.\n\nThis approach integrates the fundamental definition of $Re$ with the well-tested critical threshold for cylinder wake instability, aligning modeling choices across steady RANS, unsteady RANS, Large Eddy Simulation (LES), and Direct Numerical Simulation (DNS).", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    # Critical Reynolds number for onset of vortex shedding behind an unconfined circular cylinder\n    Re_crit = 47.0\n\n    # Test cases: (D in m, nu in m^2/s)\n    test_cases = [\n        (0.05, 1.5e-5),    # Case A: air over small cylinder\n        (0.10, 1.0e-6),    # Case B: water over medium cylinder\n        (1.0e-3, 1.0e-4),  # Case C: viscous oil in micro-hydrodynamics\n        (1.0e-4, 1.5e-5),  # Case D: air over thin fiber\n    ]\n\n    results = [Re_crit]\n    for D, nu in test_cases:\n        U_min = Re_crit * nu / D  # m/s\n        results.append(U_min)\n\n    # Format all entries with six decimal places\n    formatted = \"[\" + \",\".join(f\"{x:.6f}\" for x in results) + \"]\"\n    print(formatted)\n\nsolve()\n```", "id": "2447854"}, {"introduction": "While RANS models are indispensable tools, their predictions are only as reliable as the physical assumptions embedded within them. The most common RANS closures are built on the Boussinesq hypothesis, which relates Reynolds stresses to the mean strain rate via a scalar eddy viscosity. This exercise [@problem_id:2447865] uses a thought experiment, informed by high-fidelity Direct Numerical Simulation (DNS) data for a complex flow, to expose the fundamental mathematical limitations of this hypothesis. By analyzing which physical phenomena the Boussinesq model is structurally incapable of capturing, you will gain critical insight into why these models often struggle with flows involving strong curvature and secondary circulation.", "problem": "Consider a statistically steady, fully developed turbulent flow in a gently curved toroidal pipe of circular cross-section. Introduce an orthonormal curvilinear frame with unit vectors aligned with the streamwise direction along the pipe centerline, the wall-normal direction in the local plane of curvature, and the binormal direction normal to that plane; denote these directions by $s$, $n$, and $b$, respectively. Direct Numerical Simulation (DNS) data indicate the presence of a mean secondary circulation in the $n$–$b$ cross-section and report that, at a representative point in the core region, the mean strain-rate tensor $S_{ij}$ has nonzero components $S_{sn}$ and $S_{sb}$ associated with the gradients of the mean streamwise velocity in the cross-stream directions, while $S_{nb}=0$ at that location. The DNS Reynolds stress tensor $R_{ij}=\\langle u_i' u_j'\\rangle$ at the same location exhibits $R_{sn}\\neq 0$, $R_{sb}\\neq 0$, $R_{nb}\\neq 0$, and unequal normal stresses $R_{ss}\\neq R_{nn}\\neq R_{bb}$.\n\nA Reynolds-Averaged Navier–Stokes (RANS) model based on the Boussinesq eddy-viscosity hypothesis represents the deviatoric Reynolds stress as proportional to the mean strain-rate via a single scalar turbulent viscosity and assumes the normal-stress part to be isotropic.\n\nWhich subset of the DNS-observed Reynolds stress components would such a Boussinesq-based model necessarily fail to predict at that location (in the sense of predicting them as identically zero or enforcing equality), regardless of the value of the turbulent viscosity?\n\nA. The cross-stream shear component $R_{nb}$ and all normal-stress differences (i.e., $R_{ss}-R_{nn}$ and $R_{ss}-R_{bb}$)\n\nB. Only the streamwise–cross-stream shear components $R_{sn}$ and $R_{sb}$\n\nC. All off-diagonal components $R_{sn}$, $R_{sb}$, and $R_{nb}$\n\nD. None; with an appropriate scalar eddy viscosity, the model can reproduce $R_{nb}\\neq 0$ and $R_{ss}\\neq R_{nn}\\neq R_{bb}$", "solution": "The problem statement is subjected to validation before any attempt at a solution.\n\n### Step 1: Extract Givens\n-   **Flow Geometry and State**: Statistically steady, fully developed turbulent flow in a gently curved toroidal pipe with a circular cross-section.\n-   **Coordinate System**: An orthonormal curvilinear frame ($s$, $n$, $b$), where $s$ is the streamwise direction, $n$ is the wall-normal direction in the plane of curvature, and $b$ is the binormal direction.\n-   **Direct Numerical Simulation (DNS) Data**: At a representative point in the core region:\n    -   Mean strain-rate tensor components: $S_{sn} \\neq 0$, $S_{sb} \\neq 0$, $S_{nb} = 0$.\n    -   Reynolds stress tensor $R_{ij} = \\langle u_i' u_j' \\rangle$ components: $R_{sn} \\neq 0$, $R_{sb} \\neq 0$, $R_{nb} \\neq 0$, and normal stresses are unequal, i.e., $R_{ss} \\neq R_{nn} \\neq R_{bb}$.\n-   **Reynolds-Averaged Navier–Stokes (RANS) Model**:\n    -   The model is based on the Boussinesq eddy-viscosity hypothesis.\n    -   The deviatoric Reynolds stress is proportional to the mean strain-rate via a single scalar turbulent viscosity, $\\nu_t$.\n    -   The model \"assumes the normal-stress part to be isotropic.\"\n\n### Step 2: Validate Using Extracted Givens\n-   **Scientific Groundedness**: The problem describes turbulent flow in a curved pipe, a canonical problem in fluid mechanics where secondary flows, known as Dean vortices, are well-established phenomena. The use of DNS results as a benchmark and the evaluation of a Boussinesq-based RANS model are standard practices in computational fluid dynamics and turbulence theory. The provided data from DNS, such as the existence of Reynolds stress anisotropy and specific non-zero shear stresses, is consistent with known physics of such flows. The problem is scientifically sound.\n-   **Well-Posedness and Objectivity**: The problem is clearly stated, with unambiguous definitions and data. The question asks for a specific, qualitative comparison between a model's inherent structure and observed physical data, which leads to a unique conclusion. The language is objective and technical. The problem is well-posed.\n-   **Consistency and Completeness**: The provided information is sufficient and internally consistent. No essential data is missing for the analysis.\n\n### Step 3: Verdict and Action\nThe problem statement is valid. A solution will be derived.\n\n### Derivation of Solution\nThe Reynolds-Averaged Navier–Stokes (RANS) equations require a model for the Reynolds stress tensor, $R_{ij} = \\langle u_i' u_j' \\rangle$, to achieve closure. The problem specifies a model based on the Boussinesq eddy-viscosity hypothesis. The general form of this hypothesis relates the Reynolds stress tensor $R_{ij}$ to the mean strain-rate tensor $S_{ij} = \\frac{1}{2}(\\partial U_i / \\partial x_j + \\partial U_j / \\partial x_i)$ through a scalar eddy viscosity $\\nu_t$.\n\nThe Reynolds stress tensor is modeled as:\n$$ R_{ij}^{\\text{model}} = \\frac{2}{3} k \\delta_{ij} - 2 \\nu_t S_{ij} $$\nwhere $k = \\frac{1}{2} R_{ll} = \\frac{1}{2}\\langle u_l' u_l' \\rangle$ is the turbulent kinetic energy and $\\delta_{ij}$ is the Kronecker delta. The term $\\frac{2}{3} k \\delta_{ij}$ represents the isotropic part of the Reynolds stresses, and $-2 \\nu_t S_{ij}$ represents the modeled deviatoric part.\n\nWe now analyze the predictions of this model for the normal and shear stresses, using the givens from the DNS data at the specified location.\n\n**Analysis of Normal Stresses**\nThe problem states that the RANS model \"assumes the normal-stress part to be isotropic.\" This is a crucial statement. It implies that the model, by its construction, enforces the condition that all normal stresses are equal.\n$$ R_{ss}^{\\text{model}} = R_{nn}^{\\text{model}} = R_{bb}^{\\text{model}} $$\nThis is a known, fundamental limitation of basic eddy-viscosity models. From this assumption, it follows that the differences between the normal stresses are identically zero:\n$$ R_{ss}^{\\text{model}} - R_{nn}^{\\text{model}} = 0 $$\n$$ R_{ss}^{\\text{model}} - R_{bb}^{\\text{model}} = 0 $$\nHowever, the DNS data, which represents the physical reality of the flow, reports that the normal stresses are unequal: $R_{ss} \\neq R_{nn} \\neq R_{bb}$. This implies that the actual normal-stress differences are non-zero.\nTherefore, the Boussinesq-based model, by its very structure as described, necessarily fails to predict the existence of normal-stress anisotropy (i.e., the non-zero differences between normal stresses). It incorrectly predicts them to be zero.\n\n**Analysis of Shear Stresses**\nFor the off-diagonal components ($i \\neq j$), the Kronecker delta $\\delta_{ij}$ is zero, and the Boussinesq model simplifies to:\n$$ R_{ij}^{\\text{model}} = -2 \\nu_t S_{ij} \\quad (\\text{for } i \\neq j) $$\nThis model posits a linear, algebraic relationship where the Reynolds shear stresses are directly and locally proportional to the mean shear strain rates. We apply this to the components given in the problem.\n\n1.  **Streamwise–cross-stream components ($R_{sn}$ and $R_{sb}$)**:\n    The DNS data indicate $S_{sn} \\neq 0$ and $S_{sb} \\neq 0$. In a turbulent flow, the eddy viscosity $\\nu_t$ is non-zero. Thus, the model predicts:\n    $$ R_{sn}^{\\text{model}} = -2 \\nu_t S_{sn} \\neq 0 $$\n    $$ R_{sb}^{\\text{model}} = -2 \\nu_t S_{sb} \\neq 0 $$\n    The DNS data also shows $R_{sn} \\neq 0$ and $R_{sb} \\neq 0$. In this regard, the model provides a qualitatively correct prediction that these shear stresses are non-zero. While the quantitative accuracy is a separate issue, the model does not necessarily fail in the sense of predicting a zero value for a non-zero quantity.\n\n2.  **Cross-stream shear component ($R_{nb}$)**:\n    The DNS data at the specified location indicates that the corresponding mean strain-rate component is zero: $S_{nb} = 0$.\n    Inserting this into the model equation gives:\n    $$ R_{nb}^{\\text{model}} = -2 \\nu_t S_{nb} = -2 \\nu_t (0) = 0 $$\n    The model's prediction is that $R_{nb}$ must be zero if $S_{nb}$ is zero, regardless of the value of $\\nu_t$. However, the DNS data explicitly states that at this same location, $R_{nb} \\neq 0$.\n    This reveals a fundamental failure of the Boussinesq hypothesis. It cannot reproduce a non-zero Reynolds shear stress in a plane where the mean rate of shear strain is zero. This phenomenon, where the principal axes of the Reynolds stress tensor are not aligned with those of the mean strain-rate tensor, is common in complex flows with curvature or rotation.\n\n**Conclusion of Derivation**\nThe Boussinesq-based RANS model, as described, exhibits two necessary failures at the given location:\n1.  It fails to predict the cross-stream shear component $R_{nb}$, predicting it to be identically zero while it is, in fact, non-zero.\n2.  It fails to predict the normal-stress differences (anisotropy), assuming them to be zero while they are, in fact, non-zero.\n\n### Evaluation of Options\n\n-   **A. The cross-stream shear component $R_{nb}$ and all normal-stress differences (i.e., $R_{ss}-R_{nn}$ and $R_{ss}-R_{bb}$)**\n    This statement accurately identifies the two fundamental failures derived from the analysis of the Boussinesq model's structure in comparison with the provided DNS data. The model predicts $R_{nb}=0$ incorrectly, and it assumes isotropic normal stresses, thus predicting their differences as zero, also incorrectly. This statement is **Correct**.\n\n-   **B. Only the streamwise–cross-stream shear components $R_{sn}$ and $R_{sb}$**\n    This statement is incorrect. The model predicts non-zero values for $R_{sn}$ and $R_{sb}$ because the corresponding mean strain rates $S_{sn}$ and $S_{sb}$ are non-zero. Qualitatively, this does not represent a necessary failure. This statement is **Incorrect**.\n\n-   **C. All off-diagonal components $R_{sn}$, $R_{sb}$, and $R_{nb}$**\n    This statement is incorrect because, as explained for option B, the model does not necessarily fail in predicting the existence of $R_{sn}$ and $R_{sb}$. The failure is specific to $R_{nb}$ among the shear stresses at this location. This statement is **Incorrect**.\n\n-   **D. None; with an appropriate scalar eddy viscosity, the model can reproduce $R_{nb}\\neq 0$ and $R_{ss}\\neq R_{nn}\\neq R_{bb}$**\n    This statement is fundamentally incorrect. The prediction $R_{nb}^{\\text{model}}=0$ is a direct consequence of $S_{nb}=0$ and is independent of the value of $\\nu_t$. Furthermore, the assumption of isotropic normal stresses is a structural aspect of the model described and cannot be altered by tuning $\\nu_t$. Therefore, the model is constitutionally incapable of reproducing these features. This statement is **Incorrect**.", "answer": "$$\\boxed{A}$$", "id": "2447865"}, {"introduction": "In computational fluid dynamics, the chosen physical model and the numerical method used to solve it are deeply intertwined. An ideal numerical scheme would solve the model equations with perfect fidelity, but in reality, all schemes have truncation errors that can influence the solution, sometimes acting as an 'implicit model' themselves. This practice [@problem_id:2447860] provides a concrete, quantitative exploration of this concept by asking you to compare the numerical dissipation from a low-order scheme against the physical dissipation from an explicit Large Eddy Simulation (LES) subgrid-scale model. This hands-on coding problem illuminates how numerical choices can have physical consequences, a critical lesson for accurately interpreting results from under-resolved simulations.", "problem": "You are asked to quantify and compare the instantaneous kinetic energy dissipation due to implicit numerical diffusion from a first-order upwind scheme and due to an explicit Smagorinsky subgrid-scale model in a one-dimensional, periodic, under-resolved setting. Work entirely in the one-dimensional periodic domain and use the definitions stated below. All angles are to be interpreted in radians. All outputs involving physical quantities must be reported in the International System of Units (SI).\n\nConsider a scalar field $u(x,t)$ as a surrogate for a velocity component evolving on a periodic domain $x \\in [0,L)$ with $L0$. Let the uniform grid have $N$ points with spacing $\\Delta x = L/N$ and periodic indexing. Define nodal locations $x_i = i\\,\\Delta x$ for $i \\in \\{0,1,\\dots,N-1\\}$, and the initial field\n$$\nu_i = u(x_i,0) = U_0 \\,\\sin\\!\\left(\\frac{2\\pi m}{L}\\,x_i\\right),\n$$\nwhere $U_00$ is an amplitude and $m \\in \\mathbb{Z}^+$ is the number of wavelengths in the domain. The uniform advection speed $a \\ge 0$ is constant. The Smagorinsky constant $C_s0$ is dimensionless, and the filter width is taken as $\\Delta=\\Delta x$.\n\nDefine the discrete kinetic energy per unit mass per unit length as\n$$\nE = \\frac{1}{2L}\\sum_{i=0}^{N-1} u_i^2\\,\\Delta x,\n$$\nand define the instantaneous kinetic energy dissipation rate per unit mass per unit length as\n$$\nD = -\\frac{\\mathrm{d}E}{\\mathrm{d}t}.\n$$\n\nYou must compute $D$ at $t=0$ for the following two semi-discrete models on the same grid, using periodic indexing:\n\n1) First-order upwind advection (constant speed $a \\ge 0$):\n$$\n\\frac{\\mathrm{d}u_i}{\\mathrm{d}t} = -\\,a\\,\\frac{u_i - u_{i-1}}{\\Delta x}.\n$$\n\n2) Central advection with explicit Smagorinsky subgrid-scale viscosity:\n$$\n\\frac{\\mathrm{d}u_i}{\\mathrm{d}t} = -\\,a\\,\\frac{u_{i+1}-u_{i-1}}{2\\,\\Delta x} \\;+\\; \\left[\\frac{\\partial}{\\partial x}\\left(\\nu_{t}\\,\\frac{\\partial u}{\\partial x}\\right)\\right]_i,\n$$\nwhere the discrete gradient is\n$$\n\\left(\\frac{\\partial u}{\\partial x}\\right)_i \\equiv g_i = \\frac{u_{i+1}-u_{i-1}}{2\\,\\Delta x},\n$$\nthe Smagorinsky eddy viscosity is\n$$\n\\nu_{t,i} = \\left(C_s\\,\\Delta x\\right)^2\\,|g_i|,\n$$\nand the discrete divergence of the viscous flux uses the central difference\n$$\n\\left[\\frac{\\partial}{\\partial x}\\left(\\nu_{t}\\,\\frac{\\partial u}{\\partial x}\\right)\\right]_i = \\frac{(\\nu_t g)_{i+1} - (\\nu_t g)_{i-1}}{2\\,\\Delta x}.\n$$\n\nFor each model, compute $D$ at $t=0$ directly from the semi-discrete right-hand side via\n$$\n\\frac{\\mathrm{d}E}{\\mathrm{d}t} = \\frac{1}{L}\\sum_{i=0}^{N-1} u_i \\left(\\frac{\\mathrm{d}u_i}{\\mathrm{d}t}\\right)\\Delta x,\n$$\nand then $D=-\\mathrm{d}E/\\mathrm{d}t$. Report the following for each test case:\n- $D_{\\text{up}}$ for the upwind model in $\\mathrm{m}^2/\\mathrm{s}^3$, rounded to six decimal places.\n- $D_{\\text{sgs}}$ for the Smagorinsky model in $\\mathrm{m}^2/\\mathrm{s}^3$, rounded to six decimal places.\n- The dimensionless ratio $R = D_{\\text{up}}/D_{\\text{sgs}}$, rounded to six decimal places.\n\nUse the following test suite, which is designed to probe a typical case, a more severely under-resolved case, and an edge case with zero advection speed:\n- Case A (general under-resolved): $L = 2\\pi\\,\\mathrm{m}$, $N=16$, $m=3$, $U_0 = 1.0\\,\\mathrm{m/s}$, $a=1.0\\,\\mathrm{m/s}$, $C_s=0.17$.\n- Case B (more severe under-resolution): $L = 2\\pi\\,\\mathrm{m}$, $N=12$, $m=3$, $U_0 = 1.0\\,\\mathrm{m/s}$, $a=1.0\\,\\mathrm{m/s}$, $C_s=0.17$.\n- Case C (edge case for implicit dissipation): $L = 2\\pi\\,\\mathrm{m}$, $N=16$, $m=3$, $U_0 = 1.0\\,\\mathrm{m/s}$, $a=0.0\\,\\mathrm{m/s}$, $C_s=0.17$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element is a three-element list for a test case in the order $\\left[D_{\\text{up}},D_{\\text{sgs}},R\\right]$. For example:\n\"[ [D_up_A,D_sgs_A,R_A], [D_up_B,D_sgs_B,R_B], [D_up_C,D_sgs_C,R_C] ]\"\nAll $D_{\\text{up}}$ and $D_{\\text{sgs}}$ values must be in $\\mathrm{m}^2/\\mathrm{s}^3$, and $R$ must be dimensionless. Each numeric value must be rounded to six decimal places and expressed as a decimal number.", "solution": "The problem as stated is valid. It is scientifically grounded in the principles of computational fluid dynamics, specifically the analysis of numerical schemes and turbulence modeling. It is well-posed, with all necessary parameters and equations provided for a unique solution. The language is objective and the requirements are unambiguous. We will proceed with a full solution.\n\nThe objective is to quantify and compare the instantaneous kinetic energy dissipation rate for two different semi-discrete models of a one-dimensional advection problem at time $t=0$. The analysis is performed on a periodic domain $x \\in [0, L)$ discretized by $N$ uniformly spaced points.\n\nFirst, we establish the fundamental definitions. The discrete kinetic energy per unit mass per unit length is given by:\n$$\nE = \\frac{1}{2L}\\sum_{i=0}^{N-1} u_i^2\\,\\Delta x\n$$\nwhere $u_i$ is the scalar field at grid point $i$ and $\\Delta x = L/N$. The instantaneous kinetic energy dissipation rate per unit mass per unit length, $D$, is defined as the negative time derivative of $E$:\n$$\nD = -\\frac{\\mathrm{d}E}{\\mathrm{d}t}\n$$\nBy applying the time derivative to the expression for $E$, we obtain a formula for its rate of change based on the semi-discrete evolution equation for $u_i$:\n$$\n\\frac{\\mathrm{d}E}{\\mathrm{d}t} = \\frac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\frac{1}{2L}\\sum_{i=0}^{N-1} u_i^2\\,\\Delta x\\right) = \\frac{\\Delta x}{2L}\\sum_{i=0}^{N-1} 2u_i\\frac{\\mathrm{d}u_i}{\\mathrm{d}t} = \\frac{1}{N}\\sum_{i=0}^{N-1} u_i\\frac{\\mathrm{d}u_i}{\\mathrm{d}t}\n$$\nThus, the dissipation rate to be computed is:\n$$\nD = -\\frac{1}{N}\\sum_{i=0}^{N-1} u_i \\left(\\frac{\\mathrm{d}u_i}{\\mathrm{d}t}\\right)_i\n$$\nThe initial condition is a single sinusoidal mode:\n$$\nu_i(0) = U_0 \\,\\sin\\!\\left(\\frac{2\\pi m}{L}\\,x_i\\right)\n$$\nWe will now analyze each model separately.\n\n**Model 1: First-Order Upwind Advection**\n\nThe semi-discrete equation for the first-order upwind scheme with constant advection speed $a \\ge 0$ is:\n$$\n\\frac{\\mathrm{d}u_i}{\\mathrm{d}t} = -a\\,\\frac{u_i - u_{i-1}}{\\Delta x}\n$$\nSubstituting this into the expression for the dissipation rate, we find the dissipation for the upwind scheme, $D_{\\text{up}}$:\n$$\nD_{\\text{up}} = -\\frac{1}{N}\\sum_{i=0}^{N-1} u_i \\left( -a\\,\\frac{u_i - u_{i-1}}{\\Delta x} \\right) = \\frac{a}{N\\Delta x}\\sum_{i=0}^{N-1} u_i(u_i - u_{i-1})\n$$\nUsing $\\Delta x = L/N$, this simplifies to:\n$$\nD_{\\text{up}} = \\frac{a}{L}\\sum_{i=0}^{N-1} (u_i^2 - u_i u_{i-1})\n$$\nThis formula shows that the dissipation is a direct consequence of the spatial discretization and is proportional to the advection speed $a$. This is the well-known numerical diffusion inherent to the first-order upwind scheme.\n\n**Model 2: Central Advection with Explicit Smagorinsky Subgrid-Scale (SGS) Model**\n\nThe semi-discrete equation combines a second-order central difference for advection with an explicit SGS viscous term:\n$$\n\\frac{\\mathrm{d}u_i}{\\mathrm{d}t} = \\underbrace{-\\,a\\,\\frac{u_{i+1}-u_{i-1}}{2\\,\\Delta x}}_{\\text{Advection}} \\;+\\; \\underbrace{\\frac{(\\nu_t g)_{i+1} - (\\nu_t g)_{i-1}}{2\\,\\Delta x}}_{\\text{SGS Diffusion}}\n$$\nwhere $g_i = (u_{i+1}-u_{i-1})/(2\\Delta x)$ is the discrete gradient and $\\nu_{t,i} = (C_s \\Delta x)^2 |g_i|$ is the Smagorinsky eddy viscosity. The total dissipation $D_{\\text{sgs}}$ is the sum of contributions from both terms on the right-hand side.\n\nThe contribution from the central advection term is:\n$$\nD_{\\text{adv}} = -\\frac{1}{N}\\sum_{i=0}^{N-1} u_i \\left( -a\\,\\frac{u_{i+1}-u_{i-1}}{2\\,\\Delta x} \\right) = \\frac{a}{2N\\Delta x}\\sum_{i=0}^{N-1} u_i(u_{i+1}-u_{i-1})\n$$\nThe summation term is zero due to periodicity via discrete summation by parts:\n$$\n\\sum_{i=0}^{N-1} u_i(u_{i+1}-u_{i-1}) = \\sum_{i=0}^{N-1} u_i u_{i+1} - \\sum_{i=0}^{N-1} u_i u_{i-1}\n$$\nBy re-indexing the second sum with $j=i-1$ (and using periodicity), it becomes $\\sum_{j=0}^{N-1} u_{j+1} u_j$. The two sums are identical and cancel, proving the central difference advection scheme is non-dissipative for the total kinetic energy.\n\nTherefore, dissipation in this model arises solely from the explicit SGS term.\n$$\nD_{\\text{sgs}} = -\\frac{1}{N}\\sum_{i=0}^{N-1} u_i \\left( \\frac{(\\nu_t g)_{i+1} - (\\nu_t g)_{i-1}}{2\\,\\Delta x} \\right)\n$$\nApplying summation by parts to this expression:\n$$\nD_{\\text{sgs}} = -\\frac{1}{2N\\Delta x} \\sum_i u_i ((\\nu_t g)_{i+1} - (\\nu_t g)_{i-1}) = \\frac{1}{2N\\Delta x} \\sum_i (u_{i+1}-u_{i-1}) (\\nu_t g)_i\n$$\nRecognizing that $g_i = (u_{i+1}-u_{i-1})/(2\\Delta x)$, we obtain a simplified, positive-definite formula:\n$$\nD_{\\text{sgs}} = \\frac{1}{N}\\sum_{i=0}^{N-1} g_i (\\nu_t g)_i = \\frac{1}{N}\\sum_{i=0}^{N-1} \\nu_{t,i} g_i^2\n$$\nSubstituting the definition of $\\nu_{t,i}$:\n$$\nD_{\\text{sgs}} = \\frac{1}{N}\\sum_{i=0}^{N-1} (C_s\\Delta x)^2|g_i| \\cdot g_i^2 = \\frac{(C_s\\Delta x)^2}{N}\\sum_{i=0}^{N-1} |g_i|^3\n$$\nThis physically represents the rate at which kinetic energy is removed from the resolved scales and transferred to the subgrid scales, which is the purpose of an SGS model.\n\n**Computational Procedure**\n\nFor each test case, we will perform the following steps:\n1. Initialize the grid $x_i$ and the field $u_i$ at $t=0$ using the given parameters $L, N, m, U_0$.\n2. Compute $D_{\\text{up}}$ using the formula $D_{\\text{up}} = \\frac{a}{L}\\sum_{i=0}^{N-1} (u_i^2 - u_i u_{i-1})$. For periodic boundaries, $u_{-1}$ is taken as $u_{N-1}$.\n3. Compute the discrete gradient $g_i = (u_{i+1}-u_{i-1})/(2\\Delta x)$, where $u_{N}$ is $u_0$ and $u_{-1}$ is $u_{N-1}$.\n4. Compute $D_{\\text{sgs}}$ using the formula $D_{\\text{sgs}} = \\frac{(C_s\\Delta x)^2}{N}\\sum_{i=0}^{N-1} |g_i|^3$.\n5. Compute the ratio $R = D_{\\text{up}}/D_{\\text{sgs}}$. For Case C where $a=0$, $D_{\\text{up}}$ will be zero, resulting in $R=0$.\n6. Round all numerical results to six decimal places as required. The implementation will be carried out using numerical arrays for efficiency.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the instantaneous kinetic energy dissipation rate for two numerical schemes\n    for a one-dimensional advection problem on a periodic domain.\n    \"\"\"\n\n    test_cases = [\n        # Case A: General under-resolved case\n        {'L': 2 * np.pi, 'N': 16, 'm': 3, 'U0': 1.0, 'a': 1.0, 'Cs': 0.17},\n        # Case B: More severe under-resolution\n        {'L': 2 * np.pi, 'N': 12, 'm': 3, 'U0': 1.0, 'a': 1.0, 'Cs': 0.17},\n        # Case C: Edge case with zero advection speed\n        {'L': 2 * np.pi, 'N': 16, 'm': 3, 'U0': 1.0, 'a': 0.0, 'Cs': 0.17},\n    ]\n\n    results = []\n    for params in test_cases:\n        # Extract parameters for the current test case\n        L = params['L']\n        N = params['N']\n        m = params['m']\n        U0 = params['U0']\n        a = params['a']\n        Cs = params['Cs']\n\n        # 1. Set up grid and initial condition\n        dx = L / N\n        # x_i = i * dx\n        x = np.arange(N) * dx\n        # Initial field u(x,0)\n        # Using the fact that L=2*pi simplifies the argument of sin\n        u = U0 * np.sin(m * x)\n\n        # 2. Compute dissipation for the first-order upwind scheme (D_up)\n        # u_{i-1} using periodic boundary condition\n        u_im1 = np.roll(u, 1)\n        # D_up = (a/L) * sum(u_i^2 - u_i * u_{i-1})\n        sum_term_up = np.sum(u**2 - u * u_im1)\n        D_up = a / L * sum_term_up\n\n        # 3. Compute dissipation for the Smagorinsky SGS model (D_sgs)\n        # u_{i+1} and u_{i-1} using periodic boundary conditions\n        u_ip1 = np.roll(u, -1)\n        # Gradient g_i = (u_{i+1} - u_{i-1}) / (2*dx)\n        g = (u_ip1 - u_im1) / (2 * dx)\n        # D_sgs = ((Cs*dx)^2 / N) * sum(|g_i|^3)\n        sum_term_sgs = np.sum(np.abs(g)**3)\n        D_sgs = ((Cs * dx)**2 / N) * sum_term_sgs\n        \n        # 4. Compute the ratio R = D_up / D_sgs\n        # This handles the case where D_sgs could be zero, although not expected here.\n        # For Case C, a=0 implies D_up=0, so R=0.\n        if D_sgs != 0:\n            R = D_up / D_sgs\n        elif D_up == 0:\n            R = 0.0\n        else:\n            R = np.inf # Should not occur in these test cases\n\n        # 5. Round results to six decimal places\n        D_up_rounded = round(D_up, 6)\n        D_sgs_rounded = round(D_sgs, 6)\n        R_rounded = round(R, 6)\n\n        results.append([D_up_rounded, D_sgs_rounded, R_rounded])\n\n    # Format the final output string exactly as specified in the problem,\n    # including spaces as shown in the example.\n    print(str(results).replace(\"'\", \"\"))\n\nsolve()\n```", "id": "2447860"}]}