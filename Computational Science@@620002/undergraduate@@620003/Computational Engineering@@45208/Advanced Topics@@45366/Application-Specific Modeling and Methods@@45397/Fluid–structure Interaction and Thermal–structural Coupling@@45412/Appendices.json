{"hands_on_practices": [{"introduction": "Shape-Memory Alloys (SMAs) are a fascinating class of smart materials that can \"remember\" and return to a predefined shape when heated. This exercise [@problem_id:2394080] provides a hands-on opportunity to model this behavior by simulating an SMA wire that lifts a weight as it is electrically heated. You will combine a transient heat transfer model with a temperature-dependent constitutive law for the material's phase transformation to predict the resulting actuation displacement.", "problem": "A single straight Shape Memory Alloy (SMA) wire lifts a suspended mass as it is Joule-heated past its austenite transition temperature. Model the thermally driven contraction and the resulting upward displacement under quasi-static mechanical equilibrium using first principles of thermal energy balance and one-dimensional linear elasticity with a simple phase-fraction model. All independent and derived quantities must be handled in the International System of Units (SI). The final upward displacement must be expressed in meters, as decimal floats rounded to six decimals.\n\nAssumptions and definitions:\n- Consider a one-dimensional rod model of the SMA wire, with uniform cross-section, length, and properties. Let the wire length be $L$ and the circular cross-section have radius $r$ so that area $A = \\pi r^2$ and lateral surface area $A_{\\text{surf}} = 2 \\pi r L$.\n- Let the mass suspended by the wire be $m$. Gravity has magnitude $g$.\n- Let the ambient temperature be $T_{\\text{amb}}$. The wire is initially at $T(0) = T_{\\text{amb}}$ and is heated by a constant current $I$ from $t=0$ to $t=t_{\\text{end}}$.\n- Thermal energy balance (lumped capacitance) for the wire is governed by\n  $$ C_{\\text{th}} \\, \\frac{dT}{dt} = I^2 R - h A_{\\text{surf}} \\left( T - T_{\\text{amb}} \\right), $$\n  where $C_{\\text{th}} = \\rho c A L$ is the thermal capacitance, $\\rho$ is density, $c$ is specific heat, $h$ is the convective heat transfer coefficient, and $R$ is the electrical resistance of the wire. Assume constant electrical resistivity $\\rho_e$ so that $R = \\rho_e \\, \\dfrac{L}{A}$.\n- The austenite volume fraction $\\xi(T)$ is approximated as a piecewise linear function of temperature:\n  $$ \\xi(T) = \\begin{cases}\n  0, & T \\le A_s,\\\\\n  \\dfrac{T - A_s}{A_f - A_s}, & A_s < T < A_f,\\\\\n  1, & T \\ge A_f,\n  \\end{cases} $$\n  where $A_s$ is the austenite start temperature and $A_f$ is the austenite finish temperature.\n- The effective Youngâ€™s modulus is a linear mixture,\n  $$ E(T) = \\xi(T) \\, E_A + \\left(1 - \\xi(T)\\right) E_M, $$\n  with $E_A$ the austenite modulus and $E_M$ the martensite modulus.\n- The recoverable transformation strain is modeled as\n  $$ \\varepsilon_{\\text{tr}}(T) = \\left(1 - \\xi(T)\\right) \\, \\varepsilon_L, $$\n  where $\\varepsilon_L$ is the maximum recoverable strain in fully martensitic state.\n- Under quasi-static mechanical equilibrium for a one-dimensional rod, the tensile stress is $\\sigma = \\dfrac{m g}{A}$, and the elastic strain is $\\varepsilon_{\\text{el}}(T) = \\dfrac{\\sigma}{E(T)}$.\n- The total axial strain relative to the stress-free austenite reference length is\n  $$ \\varepsilon_{\\text{tot}}(T) = \\varepsilon_{\\text{tr}}(T) + \\varepsilon_{\\text{el}}(T). $$\n  The upward displacement of the mass relative to the initial state at $T(0) = T_{\\text{amb}}$ is the reduction in wire length,\n  $$ u_{\\uparrow} = L \\left[ \\varepsilon_{\\text{tot}}\\left(T(0)\\right) - \\varepsilon_{\\text{tot}}\\left(T(t_{\\text{end}})\\right) \\right]. $$\n  You must compute $T(t_{\\text{end}})$ from the thermal energy balance, then evaluate $\\xi(T)$, $E(T)$, $\\varepsilon_{\\text{tr}}(T)$, and $\\varepsilon_{\\text{el}}(T)$ accordingly. Treat the entire process as quasi-static mechanically at each temperature.\n\nGiven constants (use these values exactly):\n- Geometry and gravity: $L = 0.1$ m, $r = 2.5 \\times 10^{-4}$ m, $g = 9.81$ m/s$^2$.\n- Thermal and electrical: $\\rho = 6450$ kg/m$^3$, $c = 837$ J/(kg K), $\\rho_e = 7.6 \\times 10^{-7}$ $\\Omega \\cdot$ m, $h = 30$ W/(m$^2$ K).\n- Phase transformation and elasticity: $A_s = 333$ K, $A_f = 353$ K, $E_M = 28 \\times 10^9$ Pa, $E_A = 70 \\times 10^9$ Pa, $\\varepsilon_L = 0.04$.\n\nTest suite:\nFor each tuple $(m, I, t_{\\text{end}}, T_{\\text{amb}})$ below, compute the upward displacement $u_{\\uparrow}$ in meters, rounded to six decimals.\n\n- Case $1$: $(0.2, 2.0, 5.0, 293.0)$.\n- Case $2$: $(0.2, 0.4, 5.0, 293.0)$.\n- Case $3$: $(0.2, 0.8, 50.0, 293.0)$.\n- Case $4$: $(2.0, 2.0, 5.0, 293.0)$.\n\nRequirements for your program:\n- Implement the solution using the laws and definitions above. Solve the thermal ordinary differential equation to obtain $T(t_{\\text{end}})$ and then evaluate the displacement $u_{\\uparrow}$ from first principles.\n- All inputs are fixed by the test suite; there is no user input.\n- Final output format: produce a single line containing a Python-style list of the four rounded results in order, as a comma-separated list enclosed in square brackets. For example, output of the form $[x_1,x_2,x_3,x_4]$ where each $x_i$ is a decimal float rounded to six decimals in meters.", "solution": "The problem statement has been subjected to rigorous validation and is deemed to be valid. It is scientifically grounded, well-posed, objective, and provides a self-contained set of definitions, constants, and equations for modeling the thermo-mechanical behavior of a Shape Memory Alloy (SMA) wire. The model is based on established principles of heat transfer and solid mechanics. We may now proceed with the formal solution.\n\nThe problem requires us to determine the upward displacement $u_{\\uparrow}$ of a mass $m$ suspended by an SMA wire of length $L$, which contracts upon Joule heating. The solution is partitioned into two main stages: a thermal analysis to find the wire's temperature over time, and a mechanical analysis to compute the strain and resulting displacement.\n\nFirst, we analyze the thermal behavior. The temperature $T(t)$ of the wire is governed by the lumped capacitance model, a first-order linear ordinary differential equation (ODE):\n$$ C_{\\text{th}} \\, \\frac{dT}{dt} = I^2 R - h A_{\\text{surf}} \\left( T - T_{\\text{amb}} \\right) $$\nwhere $C_{\\text{th}} = \\rho c A L$ is the thermal capacitance, $R = \\rho_e L / A$ is the electrical resistance, and $A_{\\text{surf}} = 2 \\pi r L$ is the lateral surface area of the wire. The other parameters are: current $I$, convective heat transfer coefficient $h$, ambient temperature $T_{\\text{amb}}$, density $\\rho$, specific heat $c$, and electrical resistivity $\\rho_e$. The wire has a circular cross-section of radius $r$, so its area is $A = \\pi r^2$.\n\nTo solve this ODE, we rearrange it into standard form:\n$$ \\frac{dT}{dt} + \\frac{h A_{\\text{surf}}}{C_{\\text{th}}} \\left( T - T_{\\text{amb}} \\right) = \\frac{I^2 R}{C_{\\text{th}}} $$\n$$ \\frac{dT}{dt} + \\frac{h A_{\\text{surf}}}{C_{\\text{th}}} T = \\frac{I^2 R}{C_{\\text{th}}} + \\frac{h A_{\\text{surf}}}{C_{\\text{th}}} T_{\\text{amb}} $$\nLet us define the characteristic time constant $\\tau$ and the steady-state temperature $T_{ss}$:\nThe coefficient of $T$ is $\\frac{1}{\\tau} = \\alpha = \\frac{h A_{\\text{surf}}}{C_{\\text{th}}}$. Substituting the expressions for $A_{\\text{surf}}$ and $C_{\\text{th}}$:\n$$ \\alpha = \\frac{h (2 \\pi r L)}{\\rho c (\\pi r^2) L} = \\frac{2h}{\\rho c r} $$\nThe steady-state temperature $T_{ss}$ is reached when $\\frac{dT}{dt} = 0$, which gives:\n$$ I^2 R = h A_{\\text{surf}} (T_{ss} - T_{\\text{amb}}) \\implies T_{ss} = T_{\\text{amb}} + \\frac{I^2 R}{h A_{\\text{surf}}} $$\nThe ODE can now be written as:\n$$ \\frac{dT}{dt} + \\alpha T = \\alpha T_{ss} $$\nThis is a first-order linear ODE with the general solution $T(t) = C e^{-\\alpha t} + T_{ss}$. We use the initial condition $T(0) = T_{\\text{amb}}$ to find the integration constant $C$:\n$$ T(0) = C e^0 + T_{ss} = C + T_{ss} = T_{\\text{amb}} \\implies C = T_{\\text{amb}} - T_{ss} $$\nThus, the particular solution for the temperature of the wire as a function of time $t$ is:\n$$ T(t) = T_{ss} + \\left( T_{\\text{amb}} - T_{ss} \\right) e^{-\\alpha t} $$\nWe must compute the final temperature $T(t_{\\text{end}})$ for each test case using this equation.\n\nSecond, we analyze the mechanical behavior under the quasi-static assumption. The total strain $\\varepsilon_{\\text{tot}}(T)$ at a given temperature $T$ is the sum of the transformation strain $\\varepsilon_{\\text{tr}}(T)$ and the elastic strain $\\varepsilon_{\\text{el}}(T)$.\n$$ \\varepsilon_{\\text{tot}}(T) = \\varepsilon_{\\text{tr}}(T) + \\varepsilon_{\\text{el}}(T) $$\nThe austenite volume fraction, $\\xi(T)$, is a piecewise linear function:\n$$ \\xi(T) = \\begin{cases}\n0, & T \\le A_s \\\\\n\\frac{T - A_s}{A_f - A_s}, & A_s < T < A_f \\\\\n1, & T \\ge A_f\n\\end{cases} $$\nwhere $A_s$ and $A_f$ are the austenite start and finish temperatures, respectively.\n\nThe transformation strain $\\varepsilon_{\\text{tr}}(T)$ is defined relative to the austenite phase and depends on the martensite fraction $(1 - \\xi(T))$:\n$$ \\varepsilon_{\\text{tr}}(T) = (1 - \\xi(T)) \\varepsilon_L $$\nwhere $\\varepsilon_L$ is the maximum recoverable strain of the fully martensitic wire.\n\nThe elastic strain $\\varepsilon_{\\text{el}}(T)$ is given by Hooke's law, $\\varepsilon_{\\text{el}}(T) = \\sigma / E(T)$, where the stress $\\sigma = mg/A$ is due to the suspended mass $m$. The effective Young's modulus $E(T)$ is determined by a linear rule of mixtures:\n$$ E(T) = \\xi(T) E_A + (1 - \\xi(T)) E_M $$\nwhere $E_A$ and $E_M$ are the moduli of austenite and martensite, respectively.\n\nThe upward displacement $u_{\\uparrow}$ is the total contraction of the wire from its initial state at $t=0$ (where $T(0) = T_{\\text{amb}}$) to its final state at $t=t_{\\text{end}}$. This is given by the change in total strain multiplied by the original length $L$:\n$$ u_{\\uparrow} = L \\left[ \\varepsilon_{\\text{tot}}(T(0)) - \\varepsilon_{\\text{tot}}(T(t_{\\text{end}})) \\right] $$\nSubstituting $T(0) = T_{\\text{amb}}$:\n$$ u_{\\uparrow} = L \\left[ \\varepsilon_{\\text{tot}}(T_{\\text{amb}}) - \\varepsilon_{\\text{tot}}(T(t_{\\text{end}})) \\right] $$\nFor each test case $(m, I, t_{\\text{end}}, T_{\\text{amb}})$, the computational procedure is as follows:\n1.  Calculate geometry-dependent constants: $A = \\pi r^2$, $A_{\\text{surf}} = 2 \\pi r L$.\n2.  Calculate material-dependent constants: $R = \\rho_e L / A$, $\\alpha = 2h / (\\rho c r)$.\n3.  Calculate the steady-state temperature $T_{ss} = T_{\\text{amb}} + I^2 R / (h A_{\\text{surf}})$.\n4.  Calculate the final temperature $T(t_{\\text{end}})$ using the derived analytical solution.\n5.  Determine the total strain at the initial temperature, $\\varepsilon_{\\text{tot}}(T_{\\text{amb}})$. This requires computing $\\xi(T_{\\text{amb}})$, $E(T_{\\text{amb}})$, $\\varepsilon_{\\text{tr}}(T_{\\text{amb}})$, and $\\varepsilon_{\\text{el}}(T_{\\text{amb}})$.\n6.  Determine the total strain at the final temperature, $\\varepsilon_{\\text{tot}}(T(t_{\\text{end}}))$. This requires computing $\\xi(T(t_{\\text{end}}))$, $E(T(t_{\\text{end}}))$, $\\varepsilon_{\\text{tr}}(T(t_{\\text{end}}))$, and $\\varepsilon_{\\text{el}}(T(t_{\\text{end}}))$.\n7.  Compute the final upward displacement $u_{\\uparrow} = L (\\varepsilon_{\\text{tot}}(T_{\\text{amb}}) - \\varepsilon_{\\text{tot}}(T(t_{\\text{end}})))$.\n\nThis rigorous, step-by-step procedure, founded upon first principles, will be implemented to solve the problem for the given test suite.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the upward displacement of a mass suspended by a Shape Memory Alloy (SMA) wire.\n    The wire contracts when heated by an electrical current. The model combines a lumped\n    capacitance thermal model with a one-dimensional quasi-static mechanical model.\n    \"\"\"\n\n    # --- Given constants (SI units) ---\n    # Geometry and gravity\n    L = 0.1  # m\n    r = 2.5e-4  # m\n    g = 9.81  # m/s^2\n\n    # Thermal and electrical properties\n    rho = 6450.0  # kg/m^3\n    c = 837.0  # J/(kg*K)\n    rho_e = 7.6e-7  # Ohm*m\n    h = 30.0  # W/(m^2*K)\n\n    # Phase transformation and elasticity\n    A_s = 333.0  # K (Austenite start)\n    A_f = 353.0  # K (Austenite finish)\n    E_M = 28.0e9  # Pa (Martensite modulus)\n    E_A = 70.0e9  # Pa (Austenite modulus)\n    epsilon_L = 0.04  # Dimensionless (Max recoverable strain)\n\n    # --- Derived constants ---\n    A = np.pi * r**2  # Cross-sectional area (m^2)\n    A_surf = 2 * np.pi * r * L  # Lateral surface area (m^2)\n    R = rho_e * L / A  # Electrical resistance (Ohm)\n    alpha = (2 * h) / (rho * c * r)  # Thermal decay constant (1/s)\n\n    # --- Helper functions for the constitutive model ---\n    def get_austenite_fraction(T):\n        \"\"\"Calculates the austenite volume fraction xi(T).\"\"\"\n        if T <= A_s:\n            return 0.0\n        elif T >= A_f:\n            return 1.0\n        else:\n            return (T - A_s) / (A_f - A_s)\n\n    def get_total_strain(T, m):\n        \"\"\"Calculates the total strain epsilon_tot(T, m).\"\"\"\n        xi_T = get_austenite_fraction(T)\n        \n        # Transformation strain\n        eps_tr = (1.0 - xi_T) * epsilon_L\n        \n        # Effective Young's modulus\n        E_T = xi_T * E_A + (1.0 - xi_T) * E_M\n        \n        # Stress\n        sigma = (m * g) / A\n        \n        # Elastic strain\n        eps_el = sigma / E_T\n        \n        return eps_tr + eps_el\n\n    # --- Test suite ---\n    test_cases = [\n        (0.2, 2.0, 5.0, 293.0),  # Case 1: (m, I, t_end, T_amb)\n        (0.2, 0.4, 5.0, 293.0),  # Case 2\n        (0.2, 0.8, 50.0, 293.0), # Case 3\n        (2.0, 2.0, 5.0, 293.0),  # Case 4\n    ]\n\n    results = []\n    for case in test_cases:\n        m, I, t_end, T_amb = case\n\n        # --- Thermal Analysis ---\n        # 1. Calculate steady-state temperature\n        joule_heating = I**2 * R\n        convective_cooling_rate = h * A_surf\n        T_ss = T_amb + joule_heating / convective_cooling_rate\n        \n        # 2. Calculate wire temperature at t_end\n        T_final = T_ss + (T_amb - T_ss) * np.exp(-alpha * t_end)\n\n        # --- Mechanical Analysis ---\n        # 3. Calculate initial total strain at T_amb\n        epsilon_tot_initial = get_total_strain(T_amb, m)\n\n        # 4. Calculate final total strain at T_final\n        epsilon_tot_final = get_total_strain(T_final, m)\n\n        # 5. Calculate upward displacement\n        u_upward = L * (epsilon_tot_initial - epsilon_tot_final)\n        \n        # 6. Round and store result\n        results.append(round(u_upward, 6))\n\n    # --- Final Output ---\n    # Convert results to strings for joining\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2394080"}, {"introduction": "The interaction between thermal loads and structural stability is a critical consideration in engineering design, where high temperatures can degrade material stiffness. This engaging problem [@problem_id:2394088] uses the accessible example of cooking spaghetti to explore a serious phenomenon: how thermal softening can lead to catastrophic buckling under self-weight. By developing a model that couples heat transfer with an Euler-Bernoulli beam formulation, you will determine the critical time to failure and gain practical experience in solving a buckling eigenvalue problem using the Finite Element Method.", "problem": "A vertical slender cylindrical strand of spaghetti immersed in boiling water is modeled as a one-dimensional Eulerâ€“Bernoulli beam undergoing small transverse deflection under its own weight. The water thermally softens the spaghetti by convective heat transfer. The spaghettiâ€™s elastic modulus depends on temperature and thereby on time, creating a thermalâ€“structural coupling. Treat the convection from water to spaghetti as a one-directional fluidâ€“structure interaction, where the fluid (water) drives the temperature evolution that alters the structural stiffness.\n\nAssumptions and base laws:\n- Use the Eulerâ€“Bernoulli beam theory for small deflections, with bending stiffness $E I$ where $E$ is the Youngâ€™s modulus and $I$ is the second moment of area of a circular cross-section. The beam is a vertical cantilever of length $L$, clamped at the bottom and free at the top. Let $x \\in [0,L]$ denote the vertical coordinate measured from the clamp upward.\n- The axial force along the beam due to self-weight is $N(x) = q_0 (L - x)$, where $q_0 = \\rho_s A g$ is the weight per unit length, $\\rho_s$ is the material density, $A = \\pi r^2$ is the cross-sectional area for radius $r$, and $g$ is the gravitational acceleration.\n- The linearized buckling equation under axial compression is governed by the differential operator $E I \\, \\frac{d^4 w}{dx^4} + N(x) \\, \\frac{d^2 w}{dx^2} = 0$ with clamped-free boundary conditions at $x=0$ (zero displacement and zero rotation) and at $x=L$ (zero bending moment and zero shear). You must solve this as a generalized eigenvalue problem using a consistent discretization.\n- The thermal model is lumped (spatially uniform temperature in the solid) based on energy balance and Newtonâ€™s law of cooling: $\\rho_s c_s V \\, \\frac{dT}{dt} = h A_s (T_w - T)$, where $c_s$ is the specific heat capacity, $V = A L$ is the volume, $A_s = 2 \\pi r L$ is the lateral surface area (end faces are negligible), $h$ is the convective heat transfer coefficient, and $T_w$ is the water temperature. With initial temperature $T(0)=T_0$, the solution is $T(t) = T_w - (T_w - T_0) \\exp(-t/\\tau)$, where $\\tau = \\frac{\\rho_s c_s V}{h A_s}$.\n- The elastic modulus softens linearly with temperature relative to a reference state: $E(T) = E_{\\mathrm{ref}} \\, \\left[1 - \\alpha \\, (T - T_{\\mathrm{ref}})\\right]$, where $E_{\\mathrm{ref}}$ is the elastic modulus at $T_{\\mathrm{ref}}$ and $\\alpha$ is a temperature coefficient. To maintain physical plausibility, bound the modulus below by a small fraction of the reference: $E(T) \\ge E_{\\min} = \\beta \\, E_{\\mathrm{ref}}$ with $\\beta = 0.05$.\n\nTask:\n- Discretize the beam using the Finite Element Method (FEM) with Eulerâ€“Bernoulli kinematics and geometric stiffness due to axial compression approximated by averaging $N(x)$ over each element. Assemble the global bending stiffness matrix $\\mathbf{K}_b^0$ (factored so that the physical bending stiffness is $E I \\mathbf{K}_b^0$) and the global geometric stiffness matrix $\\mathbf{K}_g^{\\mathrm{unit}}$ associated with the unit weight-per-length profile (i.e., the profile $N(x) = (L-x)$ corresponding to $q_0 = 1$), after enforcing the clamped boundary conditions at the base. Solve the generalized eigenvalue problem\n$$\n\\mathbf{K}_b^0 \\, \\boldsymbol{\\phi} = \\mu \\, \\mathbf{K}_g^{\\mathrm{unit}} \\, \\boldsymbol{\\phi},\n$$\nand extract the smallest positive eigenvalue $\\mu_{\\min}$. The critical bending stiffness threshold is then given by\n$$\nE I_{\\mathrm{crit}} = \\frac{q_0}{\\mu_{\\min}}.\n$$\nEquivalently, the system becomes linearly unstable (buckles) when $E(t) I \\le E I_{\\mathrm{crit}}$.\n- Using the thermal model and the modulusâ€“temperature model, determine the critical time to buckling $t_{\\mathrm{b}}$ as the smallest $t \\ge 0$ such that $E(t) I \\le E I_{\\mathrm{crit}}$. If $E(0) I \\le E I_{\\mathrm{crit}}$, set $t_{\\mathrm{b}} = 0$. If $E(t) I > E I_{\\mathrm{crit}}$ for all $t \\ge 0$, return $t_{\\mathrm{b}} = -1$ by convention.\n- Express $t_{\\mathrm{b}}$ in seconds, rounded to three decimals.\n\nConstants and units:\n- Use $g = 9.81$ in $\\mathrm{m/s^2}$. All geometric inputs are in $\\mathrm{m}$, densities in $\\mathrm{kg/m^3}$, specific heats in $\\mathrm{J/(kg \\cdot K)}$, temperatures in $\\mathrm{K}$, convection coefficients in $\\mathrm{W/(m^2 \\cdot K)}$, moduli in $\\mathrm{Pa}$, and time in $\\mathrm{s}$. Angles are not required.\n\nTest Suite:\nFor each of the following five parameter sets, compute $t_{\\mathrm{b}}$ in seconds as specified above, and aggregate the results in a single output line.\n\n- Case A (typical length and heating):\n  - $L = 0.25$, $r = 0.0009$, $\\rho_s = 1400$, $c_s = 1400$, $E_{\\mathrm{ref}} = 5.0 \\times 10^9$, $\\alpha = 0.012$, $T_{\\mathrm{ref}} = 293$, $T_w = 373$, $T_0 = 293$, $h = 1200$.\n- Case B (short strand):\n  - $L = 0.10$, $r = 0.0009$, $\\rho_s = 1400$, $c_s = 1400$, $E_{\\mathrm{ref}} = 5.0 \\times 10^9$, $\\alpha = 0.012$, $T_{\\mathrm{ref}} = 293$, $T_w = 373$, $T_0 = 293$, $h = 1200$.\n- Case C (longer and thinner, slower heating):\n  - $L = 0.30$, $r = 0.0008$, $\\rho_s = 1400$, $c_s = 1400$, $E_{\\mathrm{ref}} = 5.0 \\times 10^9$, $\\alpha = 0.012$, $T_{\\mathrm{ref}} = 293$, $T_w = 373$, $T_0 = 293$, $h = 300$.\n- Case D (stiffer material, milder softening):\n  - $L = 0.25$, $r = 0.0009$, $\\rho_s = 1400$, $c_s = 1400$, $E_{\\mathrm{ref}} = 7.0 \\times 10^9$, $\\alpha = 0.010$, $T_{\\mathrm{ref}} = 293$, $T_w = 373$, $T_0 = 293$, $h = 1200$.\n- Case E (preheated initial condition):\n  - $L = 0.25$, $r = 0.0009$, $\\rho_s = 1400$, $c_s = 1400$, $E_{\\mathrm{ref}} = 5.0 \\times 10^9$, $\\alpha = 0.012$, $T_{\\mathrm{ref}} = 293$, $T_w = 373$, $T_0 = 363$, $h = 1200$.\n\nOutput format:\n- Your program should produce a single line of output containing the results for the five cases as a comma-separated list enclosed in square brackets, e.g., $[t_A,t_B,t_C,t_D,t_E]$, where each $t_\\bullet$ is a floating-point number with exactly three digits after the decimal point in seconds. If no buckling occurs, print $-1.000$. If the system is already unstable at $t=0$, print $0.000$.", "solution": "The problem presented is a valid exercise in computational engineering, specifically concerning the thermal-structural coupling in a fluid-structure interaction scenario. It requires the determination of the buckling time for a slender column (a spaghetti strand) subjected to self-weight, whose material properties degrade with temperature. The solution path involves a finite element analysis to solve a linearized buckling eigenvalue problem, coupled with a transient thermal model. All parameters and governing laws are provided, rendering the problem well-posed and scientifically grounded within the specified modeling assumptions.\n\nThe solution proceeds in three main stages:\n1.  **Finite Element Method (FEM) for Buckling Analysis**: We discretize the one-dimensional Euler-Bernoulli beam to solve the generalized eigenvalue problem. This yields the critical buckling parameter.\n2.  **Thermomechanical Analysis**: We establish the time-dependent elastic modulus, $E(t)$, based on the given thermal model and modulus-temperature relationship.\n3.  **Critical Time Determination**: We compute the time $t_{\\mathrm{b}}$ at which the beam's stiffness $E(t)I$ drops to the critical buckling threshold $E I_{\\mathrm{crit}}$.\n\n**Step 1: FEM Formulation for Buckling**\n\nThe linearized buckling equation for a beam under a variable axial compressive force $N(x)$ is given as:\n$$\nE I \\, \\frac{d^4 w}{dx^4} + N(x) \\, \\frac{d^2 w}{dx^2} = 0\n$$\nThe axial force due to self-weight is $N(x) = q_0 (L - x)$, where $q_0 = \\rho_s A g$. Discretizing this equation using the Finite Element Method, we obtain the matrix form of the eigenvalue problem:\n$$\nE I \\mathbf{K}_b \\mathbf{d} + \\mathbf{K}_g(N) \\mathbf{d} = 0\n$$\nwhere $\\mathbf{K}_b$ is the conventional bending stiffness matrix, $\\mathbf{K}_g(N)$ is the geometric stiffness matrix dependent on the axial force profile $N(x)$, and $\\mathbf{d}$ is the vector of nodal displacements and rotations.\n\nThe problem specifies that the geometric stiffness matrix should be constructed using the average axial force over each element. For an element $i$ spanning from $x_i$ to $x_{i+1}$, the average force is $\\bar{N}_i = \\frac{1}{l_e} \\int_{x_i}^{x_{i+1}} q_0(L-x) dx = q_0 \\left(L - \\frac{x_i+x_{i+1}}{2}\\right)$, where $l_e$ is the element length.\n\nThe problem is stated as solving the generalized eigenvalue problem:\n$$\n\\mathbf{K}_b^0 \\, \\boldsymbol{\\phi} = \\mu \\, \\mathbf{K}_g^{\\mathrm{unit}} \\, \\boldsymbol{\\phi}\n$$\nThe physical buckling equation is $E I \\mathbf{K}_b^0 \\mathbf{d} = q_0 \\mathbf{K}_g^{\\mathrm{unit}} \\mathbf{d}$. Comparing these two forms reveals that the eigenvalue $\\mu$ corresponds to the ratio $q_0 / (E I)$. The critical condition (first buckling mode) corresponds to the smallest positive eigenvalue, $\\mu_{\\min}$.\n$$\n\\mu_{\\min} = \\frac{q_0}{E I_{\\mathrm{crit}}}\n$$\nFrom this, we find the critical bending stiffness:\n$$\nE I_{\\mathrm{crit}} = \\frac{q_0}{\\mu_{\\min}}\n$$\nWe implement this by assembling the global matrices $\\mathbf{K}_b^0$ and $\\mathbf{K}_g^{\\mathrm{unit}}$ from their standard element-level counterparts. For an Euler-Bernoulli beam element of length $l_e$, the element bending stiffness matrix (without the $EI$ factor) is:\n$$\n\\mathbf{k}_b^e = \\frac{1}{l_e^3}\n\\begin{pmatrix}\n12 & 6 l_e & -12 & 6 l_e \\\\\n6 l_e & 4 l_e^2 & -6 l_e & 2 l_e^2 \\\\\n-12 & -6 l_e & 12 & -6 l_e \\\\\n6 l_e & 2 l_e^2 & -6 l_e & 4 l_e^2\n\\end{pmatrix}\n$$\nThe element geometric stiffness matrix for a unit average force term $\\bar{N}^{\\mathrm{unit}}_i / q_0 = (L - (x_i+x_{i+1})/2)$ is:\n$$\n\\mathbf{k}_g^{e, \\mathrm{unit}} = \\left(L - \\frac{x_i+x_{i+1}}{2}\\right) \\frac{1}{30 l_e}\n\\begin{pmatrix}\n36 & 3 l_e & -36 & 3 l_e \\\\\n3 l_e & 4 l_e^2 & -3 l_e & -l_e^2 \\\\\n-36 & -3 l_e & 36 & -3 l_e \\\\\n3 l_e & -l_e^2 & -3 l_e & 4 l_e^2\n\\end{pmatrix}\n$$\nAfter assembling the global matrices, the clamped boundary conditions at $x=0$ (zero displacement and rotation at the first node) are enforced by removing the first two rows and columns. We then solve the resulting reduced system for the eigenvalues $\\mu$ and identify $\\mu_{\\min}$. For numerical stability and accuracy, the beam is discretized into $n_{el}=100$ elements.\n\n**Step 2: Thermomechanical Model**\n\nThe temperature $T$ of the spaghetti strand evolves according to Newton's law of cooling:\n$$\nT(t) = T_w - (T_w - T_0) \\exp(-t/\\tau)\n$$\nwhere the thermal time constant $\\tau$ is given by $\\tau = \\frac{\\rho_s c_s V}{h A_s} = \\frac{\\rho_s c_s (\\pi r^2 L)}{h (2 \\pi r L)} = \\frac{\\rho_s c_s r}{2 h}$.\n\nThe elastic modulus $E$ depends on temperature as:\n$$\nE(T) = \\max \\left( \\beta E_{\\mathrm{ref}}, E_{\\mathrm{ref}} \\left[1 - \\alpha (T - T_{\\mathrm{ref}})\\right] \\right)\n$$\nwhere $\\beta=0.05$ provides a lower bound on the modulus. Substituting $T(t)$ into this equation gives the time-dependent modulus $E(t)$.\n\n**Step 3: Determination of Buckling Time $t_{\\mathrm{b}}$**\n\nBuckling occurs when the beam's modulus $E(t)$ drops to a critical value, $E_{\\mathrm{crit}}$, defined by the buckling resistance $E_{\\mathrm{crit}} I = E I_{\\mathrm{crit}}$. Therefore, $E_{\\mathrm{crit}} = E I_{\\mathrm{crit}} / I$. The steps to find the buckling time $t_{\\mathrm{b}}$ for each case are:\n1.  Calculate geometric properties $A=\\pi r^2$, $I=\\pi r^4/4$, and material properties like $q_0=\\rho_s A g$.\n2.  Numerically compute $\\mu_{\\min}$ for the given length $L$ using the FEM procedure.\n3.  Calculate the critical modulus $E_{\\mathrm{crit}} = \\frac{q_0}{\\mu_{\\min} I}$.\n4.  Calculate the initial modulus $E(0)$ and asymptotic modulus $E(\\infty)$ using the temperatures $T_0$ and $T_w$, respectively.\n5.  Apply the conditions:\n    - If $E(0) \\le E_{\\mathrm{crit}}$, buckling is immediate or has already occurred. We set $t_{\\mathrm{b}} = 0$.\n    - If $E(\\infty) > E_{\\mathrm{crit}}$, the modulus never degrades to the critical level. Buckling does not occur. We set $t_{\\mathrm{b}} = -1$.\n    - Otherwise, a unique buckling time $t_{\\mathrm{b}} > 0$ exists. We solve $E(t_{\\mathrm{b}}) = E_{\\mathrm{crit}}$ for $t_{\\mathrm{b}}$. This requires first finding the critical temperature $T_{\\mathrm{crit}}$ from $E(T_{\\mathrm{crit}}) = E_{\\mathrm{crit}}$, which gives $T_{\\mathrm{crit}} = T_{\\mathrm{ref}} + \\frac{1}{\\alpha} \\left(1 - \\frac{E_{\\mathrm{crit}}}{E_{\\mathrm{ref}}}\\right)$. Then, we solve for time:\n    $$\n    t_{\\mathrm{b}} = \\tau \\ln \\left( \\frac{T_w - T_0}{T_w - T_{\\mathrm{crit}}} \\right)\n    $$\nThe calculations for each case are performed according to this procedure. The final results are rounded to three decimal places as required.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import eig\n\ndef solve():\n    \"\"\"\n    Main function to solve for the buckling time for all test cases.\n    \"\"\"\n    # Parameter sets for the five test cases.\n    # (L, r, rho_s, c_s, E_ref, alpha, T_ref, T_w, T_0, h)\n    test_cases = [\n        # Case A\n        (0.25, 0.0009, 1400, 1400, 5.0e9, 0.012, 293, 373, 293, 1200),\n        # Case B\n        (0.10, 0.0009, 1400, 1400, 5.0e9, 0.012, 293, 373, 293, 1200),\n        # Case C\n        (0.30, 0.0008, 1400, 1400, 5.0e9, 0.012, 293, 373, 293, 300),\n        # Case D\n        (0.25, 0.0009, 1400, 1400, 7.0e9, 0.010, 293, 373, 293, 1200),\n        # Case E\n        (0.25, 0.0009, 1400, 1400, 5.0e9, 0.012, 293, 373, 363, 1200),\n    ]\n\n    results = []\n    for params in test_cases:\n        t_b = calculate_buckling_time(*params)\n        results.append(f\"{t_b:.3f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef get_fem_eigenvalue(L, n_el=100):\n    \"\"\"\n    Computes the smallest positive eigenvalue mu_min using FEM.\n    \"\"\"\n    n_nodes = n_el + 1\n    n_dofs = 2 * n_nodes\n    l_e = L / n_el\n\n    # Element bending stiffness matrix (for EI=1)\n    k_b_e_factored = np.array([\n        [12, 6 * l_e, -12, 6 * l_e],\n        [6 * l_e, 4 * l_e**2, -6 * l_e, 2 * l_e**2],\n        [-12, -6 * l_e, 12, -6 * l_e],\n        [6 * l_e, 2 * l_e**2, -6 * l_e, 4 * l_e**2]\n    ])\n    k_b_e = (1 / l_e**3) * k_b_e_factored\n\n    # Element geometric stiffness matrix base (for N=1)\n    k_g_e_base_factored = np.array([\n        [36, 3 * l_e, -36, 3 * l_e],\n        [3 * l_e, 4 * l_e**2, -3 * l_e, -l_e**2],\n        [-36, -3 * l_e, 36, -3 * l_e],\n        [3 * l_e, -l_e**2, -3 * l_e, 4 * l_e**2]\n    ])\n    k_g_e_base = (1 / (30 * l_e)) * k_g_e_base_factored\n\n    # Assemble global matrices\n    K_b = np.zeros((n_dofs, n_dofs))\n    K_g_unit = np.zeros((n_dofs, n_dofs))\n\n    for i in range(n_el):\n        x_i = i * l_e\n        x_j = (i + 1) * l_e\n        x_mid = (x_i + x_j) / 2\n        N_avg_unit = L - x_mid\n        \n        k_g_e_unit = N_avg_unit * k_g_e_base\n        \n        dof_indices = np.array([2*i, 2*i+1, 2*i+2, 2*i+3])\n        for r_idx, r_glob in enumerate(dof_indices):\n            for c_idx, c_glob in enumerate(dof_indices):\n                K_b[r_glob, c_glob] += k_b_e[r_idx, c_idx]\n                K_g_unit[r_glob, c_glob] += k_g_e_unit[r_idx, c_idx]\n    \n    # Apply clamped BC at x=0 (remove first 2 DOFs)\n    K_b_red = K_b[2:, 2:]\n    K_g_unit_red = K_g_unit[2:, 2:]\n    \n    # Solve generalized eigenvalue problem: K_b * phi = mu * K_g_unit * phi\n    eigenvalues, _ = eig(K_b_red, K_g_unit_red)\n    \n    # Find smallest positive eigenvalue\n    positive_real_eigenvalues = [ev.real for ev in eigenvalues if ev.real > 1e-9]\n    mu_min = min(positive_real_eigenvalues) if positive_real_eigenvalues else -1\n\n    return mu_min\n\ndef calculate_buckling_time(L, r, rho_s, c_s, E_ref, alpha, T_ref, T_w, T_0, h):\n    \"\"\"\n    Calculates the critical time to buckling for a given set of parameters.\n    \"\"\"\n    g = 9.81\n    beta = 0.05\n    \n    # --- Structural Analysis ---\n    A = np.pi * r**2\n    I = np.pi * r**4 / 4\n    q0 = rho_s * A * g\n\n    mu_min = get_fem_eigenvalue(L)\n    if mu_min <= 0:\n        return -1.0 \n\n    EI_crit = q0 / mu_min\n    E_crit = EI_crit / I\n    \n    # --- Thermal Analysis ---\n    tau = (rho_s * c_s * r) / (2 * h)\n    \n    # --- Time to Buckling Calculation ---\n    \n    # Initial modulus E(0)\n    E_unbounded_0 = E_ref * (1 - alpha * (T_0 - T_ref))\n    E_0 = max(beta * E_ref, E_unbounded_0)\n\n    if E_0 <= E_crit:\n        return 0.0\n\n    # Asymptotic modulus E(inf)\n    E_unbounded_inf = E_ref * (1 - alpha * (T_w - T_ref))\n    E_inf = max(beta * E_ref, E_unbounded_inf)\n\n    if E_inf > E_crit:\n        return -1.0\n        \n    # Buckling occurs at a finite time t_b > 0\n    # Solve E(t_b) = E_crit for t_b\n    # Find critical temperature T_crit\n    T_crit = T_ref + (1 / alpha) * (1 - E_crit / E_ref)\n    \n    # Numerator for the log argument T_w - T_0\n    num = T_w - T_0\n    # Denominator for the log argument T_w - T_crit\n    den = T_w - T_crit\n    \n    # Check for valid log argument\n    if num <= 0 or den <= 0 or num/den <= 0:\n        return -1.0 \n\n    t_b = tau * np.log(num / den)\n    \n    return t_b\n\nsolve()\n```", "id": "2394088"}, {"introduction": "Engineering components like pressure vessels and pipelines often endure both steady mechanical loads and fluctuating thermal cycles. This practice [@problem_id:2394061] delves into the failure mechanism of \"thermal ratcheting,\" where repeated thermal expansion and contraction, superimposed on a primary stress, can cause incremental and permanent plastic deformation. You will apply principles of heat transfer and thermo-elastic stress analysis to assess whether a structure will safely \"shakedown\" to an elastic state or progressively fail by ratcheting, providing insight into real-world structural integrity assessment.", "problem": "A thin-walled cylindrical pipe is subjected to periodic internal fluid slugs that are alternately hot and cold, with steady internal pressure applied at all times. The phenomenon of interest is thermal ratcheting under coupled fluidâ€“structure interaction (FSI), modeled through thermalâ€“structural coupling at the inner and outer surfaces via convection and conduction through the wall, and structural elastoplastic response under combined primary membrane and secondary thermal bending stresses.\n\nAssumptions and model definitions:\n- Geometry: inner radius $r$ and wall thickness $t$, with $t \\ll r$ so that thin-wall theory applies.\n- Material: homogeneous, isotropic, linear elastic with Youngâ€™s modulus $E$ and coefficient of thermal expansion $\\alpha$, with elasticâ€“perfectlyâ€“plastic yielding at uniaxial yield stress $\\sigma_y$. Plane stress holds in the hoop direction.\n- Thermal properties: wall thermal conductivity $k$. The inner surface experiences convection with heat transfer coefficient $h_i$ to a well-mixed internal fluid at temperature $T_f$, and the outer surface experiences convection with heat transfer coefficient $h_o$ to an ambient at temperature $T_\\infty$.\n- Loading: constant internal pressure $p$; two steady thermal stages per period: a hot slug with $T_f = T_h$ and a cold slug with $T_f = T_c$. Each slug persists long enough that the wall reaches steady state in that stage.\n- Thermal field: at steady state, heat transfer is one-dimensional across the wall thickness, and the temperature through the wall is linear in the thickness coordinate.\n- Primary membrane hoop stress: by thin-wall theory, $S_m = \\dfrac{p\\,r}{t}$.\n- Thermal bending stress at the inner surface in a steady stage $j \\in \\{\\text{hot},\\text{cold}\\}$: let the steady heat flux magnitude be $q_j$, and the through-thickness temperature drop be $\\Delta T_{\\text{thru},j} = q_j \\,\\dfrac{t}{k}$. Under plane stress with traction-free edges and a linear through-thickness temperature profile, the self-equilibrated thermal stress deviation from the average at the inner surface is $S_{\\text{th},j} = E\\,\\alpha\\,\\dfrac{\\Delta T_{\\text{thru},j}}{2}$. The thermal stress range is $S_b = \\left| S_{\\text{th},\\text{hot}} - S_{\\text{th},\\text{cold}} \\right|$.\n- Heat flux in steady stage $j$: the total thermal resistance between the internal fluid and the ambient is $R = \\dfrac{1}{h_i} + \\dfrac{t}{k} + \\dfrac{1}{h_o}$, so the steady heat flux per unit area is $q_j = \\dfrac{T_f^{(j)} - T_\\infty}{R}$ with $T_f^{(\\text{hot})} = T_h$ and $T_f^{(\\text{cold})} = T_c$.\n- Ratcheting definition for this problem: ratcheting is deemed to occur if and only if the following inequality holds,\n$$\n\\frac{S_m}{\\sigma_y} + \\frac{S_b}{2\\,\\sigma_y} > 1,\n$$\nand otherwise ratcheting is deemed not to occur.\n\nAll quantities must be treated in the International System of Units (SI). Specifically: $r$ and $t$ in meters, $p$, $E$, and $\\sigma_y$ in pascals, $k$ in watts per meter-kelvin, $h_i$ and $h_o$ in watts per square meter-kelvin, $\\alpha$ in per kelvin, and $T_h$, $T_c$, $T_\\infty$ in kelvin. Angles do not appear. There are no percentages.\n\nTask: For each test case below, compute the boolean flag that indicates whether ratcheting occurs according to the inequality above. The answer for each test case must be a boolean. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., [$b_1$,$b_2$,$b_3$]).\n\nTest suite (each case is specified by the ordered tuple $(r,t,p,E,\\alpha,\\sigma_y,k,h_i,h_o,T_h,T_c,T_\\infty)$):\n- Case A (general case with moderate gradients; expected to be below threshold): $(0.1, 0.005, 2.0\\times 10^6, 2.00\\times 10^{11}, 12.0\\times 10^{-6}, 2.50\\times 10^8, 16.0, 2000.0, 20.0, 600.0, 350.0, 300.0)$.\n- Case B (strong primary and secondary actions; expected to exceed threshold): $(0.15, 0.03, 3.0\\times 10^7, 2.10\\times 10^{11}, 11.0\\times 10^{-6}, 1.80\\times 10^8, 3.0, 2000.0, 20.0, 800.0, 320.0, 300.0)$.\n- Case C (thermal-dominated ratcheting with very low yield and large wall resistance; expected to exceed threshold even with zero pressure): $(0.10, 0.02, 0.0, 7.0\\times 10^{10}, 23.0\\times 10^{-6}, 6.0\\times 10^7, 1.0, 10000.0, 10000.0, 900.0, 300.0, 300.0)$.\n- Case D (edge case with negligible wall resistance and low pressure; expected well below threshold): $(0.05, 0.005, 1.0\\times 10^6, 2.00\\times 10^{11}, 12.0\\times 10^{-6}, 4.00\\times 10^8, 500.0, 10000.0, 10000.0, 350.0, 310.0, 300.0)$.\n\nYour program must compute, for each case, the boolean ratcheting outcome according to the definitions above, and print a single line in the exact format [$b_A$,$b_B$,$b_C$,$b_D$], where each $b_\\cdot$ is either True or False.", "solution": "We derive the required quantities from first principles of heat conduction with convection boundary conditions and linear thermoelasticity, combined with an elasticâ€“perfectlyâ€“plastic ratcheting criterion.\n\nThermal field and heat flux at steady state: With a well-mixed internal fluid at temperature $T_f$ and ambient temperature $T_\\infty$ outside, the steady one-dimensional heat flux magnitude $q$ normal to the wall for a flat-wall approximation is obtained by series addition of thermal resistances. The inner convection resistance is $R_i = \\dfrac{1}{h_i}$, the conduction resistance through the wall is $R_w = \\dfrac{t}{k}$, and the outer convection resistance is $R_o = \\dfrac{1}{h_o}$. The total resistance is\n$$\nR = R_i + R_w + R_o = \\frac{1}{h_i} + \\frac{t}{k} + \\frac{1}{h_o}.\n$$\nBy the definition of thermal resistance, the steady heat flux per unit area is\n$$\nq = \\frac{T_f - T_\\infty}{R}.\n$$\nThe temperature drop across the wall thickness is the conductive drop\n$$\n\\Delta T_{\\text{thru}} = q\\,R_w = q\\,\\frac{t}{k}.\n$$\nBecause the system is in steady state and one-dimensional, the temperature varies linearly through the thickness, so the temperature at the inner and outer surfaces are\n$$\nT_i = T_f - q\\,R_i = T_f - \\frac{q}{h_i}, \\qquad T_o = T_\\infty + q\\,R_o = T_\\infty + \\frac{q}{h_o},\n$$\nand one checks consistency by $T_i - T_o = \\Delta T_{\\text{thru}}$.\n\nThermoelastic stress from a linear through-thickness temperature profile: Consider a flat plate of thickness $t$ with in-plane coordinate $x$ (the hoop direction) and thickness coordinate $y \\in [-t/2, t/2]$. The temperature field is linear,\n$$\nT(y) = T_\\text{avg} + \\beta\\,y,\n$$\nwith $T_\\text{avg}$ the thickness average and $\\beta$ a constant proportional to the heat flux. In plane stress with traction-free boundaries and no external in-plane forces, the axial strain field $\\varepsilon_x(y)$ can adjust to be linear in $y$ to accommodate curvature, while the net axial force and bending moment must vanish. The constitutive relation for axial strain is\n$$\n\\varepsilon_x(y) = \\frac{\\sigma_x(y)}{E} + \\alpha\\,T(y).\n$$\nBecause no external axial force or moment act on the free plate, the internal stress resultants satisfy\n$$\n\\int_{-t/2}^{t/2}\\sigma_x(y)\\,dy = 0, \\qquad \\int_{-t/2}^{t/2}\\sigma_x(y)\\,y\\,dy = 0.\n$$\nSeeking a linear strain field $\\varepsilon_x(y) = a + b y$, one solves for the stress distribution that enforces these resultants to vanish. The unique solution compatible with the linear thermal field is\n$$\n\\sigma_x(y) = E\\,\\alpha\\,\\left[\\,T(y) - T_\\text{avg}\\,\\right] = E\\,\\alpha\\,\\beta\\,y.\n$$\nTherefore, at the inner surface ($y = +t/2$ when the inner surface is hotter so that $\\beta > 0$) the thermal stress deviation from the average is\n$$\nS_{\\text{th}} = \\sigma_x\\left(\\frac{t}{2}\\right) = E\\,\\alpha\\,\\beta\\,\\frac{t}{2}.\n$$\nNoting that $\\beta\\,t = T\\!\\left(\\frac{t}{2}\\right) - T\\!\\left(-\\frac{t}{2}\\right) = \\Delta T_{\\text{thru}}$, we have\n$$\nS_{\\text{th}} = E\\,\\alpha\\,\\frac{\\Delta T_{\\text{thru}}}{2}.\n$$\n\nPrimary membrane hoop stress from pressure: For a thin-walled cylinder of inner radius $r$ and thickness $t$ under internal pressure $p$, the membrane hoop stress is\n$$\nS_m = \\frac{p\\,r}{t}.\n$$\n\nThermal stress range over a hotâ€“cold cycle: Denote by $q_{\\text{hot}}$ and $q_{\\text{cold}}$ the steady heat flux magnitudes in the hot and cold slug stages, obtained from\n$$\nq_j = \\frac{T_f^{(j)} - T_\\infty}{\\frac{1}{h_i} + \\frac{t}{k} + \\frac{1}{h_o}}, \\quad j \\in \\{\\text{hot},\\text{cold}\\}.\n$$\nThe through-thickness temperature drops are\n$$\n\\Delta T_{\\text{thru},j} = q_j\\,\\frac{t}{k},\n$$\nand the corresponding inner-surface thermal stresses are\n$$\nS_{\\text{th},j} = E\\,\\alpha\\,\\frac{\\Delta T_{\\text{thru},j}}{2}.\n$$\nThe thermal stress range is\n$$\nS_b = \\left| S_{\\text{th},\\text{hot}} - S_{\\text{th},\\text{cold}} \\right|.\n$$\n\nRatcheting criterion: For an elasticâ€“perfectlyâ€“plastic thin-walled cylinder subject to a constant primary membrane stress $S_m$ and a self-equilibrated secondary thermal bending stress range $S_b$ generated by a linear through-thickness temperature profile, incremental plastic ratcheting is predicted if and only if\n$$\n\\frac{S_m}{\\sigma_y} + \\frac{S_b}{2\\,\\sigma_y} > 1.\n$$\nThis condition separates shakedown from ratcheting for this loading class by requiring that the mean-plus-half-range of the combined stress at the most critical fiber surpass the yield stress sufficiently to preclude a closed elasticâ€“plastic cycle.\n\nWe now evaluate the four test cases, computing $R$, $q_j$, $\\Delta T_{\\text{thru},j}$, $S_{\\text{th},j}$, $S_b$, $S_m$, and the ratcheting inequality.\n\nCase A: $(r,t,p,E,\\alpha,\\sigma_y,k,h_i,h_o,T_h,T_c,T_\\infty) = (0.1, 0.005, 2.0\\times 10^6, 2.00\\times 10^{11}, 12.0\\times 10^{-6}, 2.50\\times 10^8, 16.0, 2000.0, 20.0, 600.0, 350.0, 300.0)$.\n- Total resistance: $R = \\dfrac{1}{2000.0} + \\dfrac{0.005}{16.0} + \\dfrac{1}{20.0} = 0.0005 + 0.0003125 + 0.05 = 0.0508125$ K m$^2$/W.\n- Hot stage: $q_{\\text{hot}} = \\dfrac{600.0 - 300.0}{0.0508125} \\approx 5904.21$ W/m$^2$, $\\Delta T_{\\text{thru,hot}} = 5904.21\\cdot \\dfrac{0.005}{16} \\approx 1.845$ K, $S_{\\text{th,hot}} = 2.00\\times 10^{11}\\cdot 12.0\\times 10^{-6} \\cdot \\dfrac{1.845}{2} \\approx 2.214\\times 10^{6}$ Pa.\n- Cold stage: $q_{\\text{cold}} = \\dfrac{350.0 - 300.0}{0.0508125} \\approx 984.035$ W/m$^2$, $\\Delta T_{\\text{thru,cold}} \\approx 0.3075$ K, $S_{\\text{th,cold}} \\approx 3.69\\times 10^{5}$ Pa.\n- Thermal range: $S_b \\approx \\left| 2.214\\times 10^{6} - 3.69\\times 10^{5} \\right| \\approx 1.845\\times 10^{6}$ Pa.\n- Primary membrane: $S_m = \\dfrac{2.0\\times 10^{6}\\cdot 0.1}{0.005} = 4.0\\times 10^{7}$ Pa.\n- Inequality: $\\dfrac{S_m}{\\sigma_y} + \\dfrac{S_b}{2\\sigma_y} \\approx \\dfrac{4.0\\times 10^{7}}{2.5\\times 10^{8}} + \\dfrac{1.845\\times 10^{6}}{2\\cdot 2.5\\times 10^{8}} \\approx 0.16 + 0.00369 \\approx 0.16369  1$, so ratcheting is False.\n\nCase B: $(0.15, 0.03, 3.0\\times 10^7, 2.10\\times 10^{11}, 11.0\\times 10^{-6}, 1.80\\times 10^8, 3.0, 2000.0, 20.0, 800.0, 320.0, 300.0)$.\n- $R = \\dfrac{1}{2000.0} + \\dfrac{0.03}{3.0} + \\dfrac{1}{20.0} = 0.0005 + 0.01 + 0.05 = 0.0605$ K m$^2$/W.\n- Hot: $q_{\\text{hot}} = \\dfrac{800.0 - 300.0}{0.0605} \\approx 8264.46$ W/m$^2$, $\\Delta T_{\\text{thru,hot}} \\approx 82.645$ K, $S_{\\text{th,hot}} = 2.10\\times 10^{11}\\cdot 11.0\\times 10^{-6}\\cdot \\dfrac{82.645}{2} \\approx 9.546\\times 10^{7}$ Pa.\n- Cold: $q_{\\text{cold}} = \\dfrac{320.0 - 300.0}{0.0605} \\approx 330.58$ W/m$^2$, $\\Delta T_{\\text{thru,cold}} \\approx 3.306$ K, $S_{\\text{th,cold}} \\approx 3.818\\times 10^{6}$ Pa.\n- Thermal range: $S_b \\approx \\left| 9.546\\times 10^{7} - 3.818\\times 10^{6} \\right| \\approx 9.164\\times 10^{7}$ Pa.\n- Primary membrane: $S_m = \\dfrac{3.0\\times 10^{7}\\cdot 0.15}{0.03} = 1.5\\times 10^{8}$ Pa.\n- Inequality: $\\dfrac{S_m}{\\sigma_y} + \\dfrac{S_b}{2\\sigma_y} \\approx \\dfrac{1.5\\times 10^{8}}{1.8\\times 10^{8}} + \\dfrac{9.164\\times 10^{7}}{2\\cdot 1.8\\times 10^{8}} \\approx 0.8333 + 0.2545 \\approx 1.0878 > 1$, so ratcheting is True.\n\nCase C: $(0.10, 0.02, 0.0, 7.0\\times 10^{10}, 23.0\\times 10^{-6}, 6.0\\times 10^7, 1.0, 10000.0, 10000.0, 900.0, 300.0, 300.0)$.\n- $R = \\dfrac{1}{10000.0} + \\dfrac{0.02}{1.0} + \\dfrac{1}{10000.0} = 0.0001 + 0.02 + 0.0001 = 0.0202$ K m$^2$/W.\n- Hot: $q_{\\text{hot}} = \\dfrac{900.0 - 300.0}{0.0202} \\approx 29703.0$ W/m$^2$, $\\Delta T_{\\text{thru,hot}} \\approx 594.06$ K, $S_{\\text{th,hot}} = 7.0\\times 10^{10}\\cdot 23.0\\times 10^{-6}\\cdot \\dfrac{594.06}{2} \\approx 4.782\\times 10^{8}$ Pa.\n- Cold: $q_{\\text{cold}} = \\dfrac{300.0 - 300.0}{0.0202} = 0.0$ W/m$^2$, $\\Delta T_{\\text{thru,cold}} = 0.0$ K, $S_{\\text{th,cold}} = 0.0$ Pa.\n- Thermal range: $S_b \\approx 4.782\\times 10^{8}$ Pa.\n- Primary membrane: $S_m = \\dfrac{0.0\\cdot 0.10}{0.02} = 0.0$ Pa.\n- Inequality: $\\dfrac{S_m}{\\sigma_y} + \\dfrac{S_b}{2\\sigma_y} \\approx 0 + \\dfrac{4.782\\times 10^{8}}{2\\cdot 6.0\\times 10^{7}} \\approx 3.985 > 1$, so ratcheting is True.\n\nCase D: $(0.05, 0.005, 1.0\\times 10^6, 2.00\\times 10^{11}, 12.0\\times 10^{-6}, 4.00\\times 10^8, 500.0, 10000.0, 10000.0, 350.0, 310.0, 300.0)$.\n- $R = \\dfrac{1}{10000.0} + \\dfrac{0.005}{500.0} + \\dfrac{1}{10000.0} = 0.0001 + 0.00001 + 0.0001 = 0.00021$ K m$^2$/W.\n- Hot: $q_{\\text{hot}} = \\dfrac{350.0 - 300.0}{0.00021} \\approx 238095.2$ W/m$^2$, $\\Delta T_{\\text{thru,hot}} \\approx 2.381$ K, $S_{\\text{th,hot}} = 2.00\\times 10^{11}\\cdot 12.0\\times 10^{-6}\\cdot \\dfrac{2.381}{2} \\approx 2.857\\times 10^{6}$ Pa.\n- Cold: $q_{\\text{cold}} = \\dfrac{310.0 - 300.0}{0.00021} \\approx 47619.0$ W/m$^2$, $\\Delta T_{\\text{thru,cold}} \\approx 0.476$ K, $S_{\\text{th,cold}} \\approx 5.714\\times 10^{5}$ Pa.\n- Thermal range: $S_b \\approx \\left| 2.857\\times 10^{6} - 5.714\\times 10^{5} \\right| \\approx 2.286\\times 10^{6}$ Pa.\n- Primary membrane: $S_m = \\dfrac{1.0\\times 10^{6}\\cdot 0.05}{0.005} = 1.0\\times 10^{7}$ Pa.\n- Inequality: $\\dfrac{S_m}{\\sigma_y} + \\dfrac{S_b}{2\\sigma_y} \\approx \\dfrac{1.0\\times 10^{7}}{4.0\\times 10^{8}} + \\dfrac{2.286\\times 10^{6}}{2\\cdot 4.0\\times 10^{8}} \\approx 0.025 + 0.002857 \\approx 0.027857  1$, so ratcheting is False.\n\nTherefore, the boolean outputs in order $(A,B,C,D)$ are (False, True, True, False). The program must implement these computations using the definitions above and print a single line in the exact format [$b_A$,$b_B$,$b_C$,$b_D$].", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef ratchet_flag(r, t, p, E, alpha, sigma_y, k, h_i, h_o, T_h, T_c, T_amb):\n    # Total thermal resistance (m^2 K/W)\n    R = (1.0 / h_i) + (t / k) + (1.0 / h_o)\n    # Heat fluxes (W/m^2) for hot and cold steady stages\n    q_hot = (T_h - T_amb) / R\n    q_cold = (T_c - T_amb) / R\n    # Through-thickness temperature drops (K)\n    dT_thru_hot = q_hot * (t / k)\n    dT_thru_cold = q_cold * (t / k)\n    # Inner-surface thermal stresses (Pa)\n    S_th_hot = E * alpha * (dT_thru_hot / 2.0)\n    S_th_cold = E * alpha * (dT_thru_cold / 2.0)\n    # Thermal stress range (Pa)\n    S_b = abs(S_th_hot - S_th_cold)\n    # Primary membrane hoop stress (Pa)\n    S_m = p * r / t\n    # Ratcheting criterion: S_m/sigma_y + S_b/(2*sigma_y)  1\n    value = (S_m / sigma_y) + (S_b / (2.0 * sigma_y))\n    return value  1.0\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each tuple: (r, t, p, E, alpha, sigma_y, k, h_i, h_o, T_h, T_c, T_amb)\n    test_cases = [\n        (0.1, 0.005, 2.0e6, 2.00e11, 12.0e-6, 2.50e8, 16.0, 2000.0, 20.0, 600.0, 350.0, 300.0),    # Case A\n        (0.15, 0.03, 3.0e7, 2.10e11, 11.0e-6, 1.80e8, 3.0, 2000.0, 20.0, 800.0, 320.0, 300.0),     # Case B\n        (0.10, 0.02, 0.0, 7.0e10, 23.0e-6, 6.0e7, 1.0, 10000.0, 10000.0, 900.0, 300.0, 300.0),     # Case C\n        (0.05, 0.005, 1.0e6, 2.00e11, 12.0e-6, 4.00e8, 500.0, 10000.0, 10000.0, 350.0, 310.0, 300.0), # Case D\n    ]\n\n    results = []\n    for case in test_cases:\n        r, t, p, E, alpha, sigma_y, k, h_i, h_o, T_h, T_c, T_amb = case\n        result = ratchet_flag(r, t, p, E, alpha, sigma_y, k, h_i, h_o, T_h, T_c, T_amb)\n        results.append(result)\n\n    # Final print statement in the exact required format: [bA,bB,bC,bD]\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2394061"}]}