{"hands_on_practices": [{"introduction": "An input parameter's influence on a model's output is not always direct; it can manifest entirely through interactions with other parameters. This practice reveals this crucial concept by having you analyze a model where an input has zero individual effect but is highly influential in combination with another. By analytically calculating the first-order and total-effect Sobol' indices for this special case [@problem_id:2434812], you will solidify your understanding of how output variance can arise purely from synergistic effects between inputs, a cornerstone of correctly interpreting global sensitivity analysis.", "problem": "Consider a deterministic model with two independent real-valued inputs $X_1$ and $X_2$, each distributed as $\\mathrm{Uniform}(0,1)$. The scalar output is defined by\n$$\nY \\;=\\; \\bigl(X_1 - \\tfrac{1}{2}\\bigr)\\,\\bigl(X_2 - \\tfrac{1}{2}\\bigr).\n$$\nFor an input $X_i$, the first-order Sobol' index is defined as\n$$\nS_i \\;=\\; \\frac{\\mathrm{Var}\\!\\bigl(\\mathbb{E}[Y \\mid X_i]\\bigr)}{\\mathrm{Var}(Y)},\n$$\nand the total-order Sobol' index is defined as\n$$\nS_{Ti} \\;=\\; \\frac{\\mathbb{E}\\!\\bigl[\\mathrm{Var}(Y \\mid X_{\\sim i})\\bigr]}{\\mathrm{Var}(Y)},\n$$\nwhere $\\mathbb{E}[\\cdot]$ denotes expectation, $\\mathrm{Var}(\\cdot)$ denotes variance, and $X_{\\sim i}$ denotes the collection of all inputs except $X_i$.\n\nUsing only these definitions and the given distributions, determine the exact value of the total-order Sobol' index $S_{T1}$ for input $X_1$, and verify that the first-order index $S_1$ is equal to $0$. Provide the exact value (no rounding) of $S_{T1}$ as your final answer. The Sobol' indices are dimensionless; no units should be reported.", "solution": "The problem statement is subjected to validation.\n**Givens:**\n1.  Model: $Y = (X_1 - \\tfrac{1}{2})(X_2 - \\tfrac{1}{2})$.\n2.  Inputs: $X_1, X_2$ are independent real-valued inputs.\n3.  Distribution: $X_1 \\sim \\mathrm{Uniform}(0,1)$ and $X_2 \\sim \\mathrm{Uniform}(0,1)$.\n4.  First-order Sobol' index: $S_i = \\frac{\\mathrm{Var}(\\mathbb{E}[Y \\mid X_i])}{\\mathrm{Var}(Y)}$.\n5.  Total-order Sobol' index: $S_{Ti} = \\frac{\\mathbb{E}[\\mathrm{Var}(Y \\mid X_{\\sim i})]}{\\mathrm{Var}(Y)}$.\n6.  $X_{\\sim i}$ denotes all inputs except $X_i$.\n\n**Validation:**\nThe problem is scientifically grounded, being a standard exercise in Sobol' sensitivity analysis. It is well-posed, with all necessary mathematical objects and distributions clearly and unambiguously defined. The problem is objective and contains no factual unsoundness, incompleteness, or contradictions. The premises are mathematically and statistically sound. Therefore, the problem is deemed valid and a solution will be provided.\n\nThe solution proceeds by first computing the total variance of the output, $\\mathrm{Var}(Y)$, which serves as the denominator for both indices. Subsequently, we will compute the numerators for $S_1$ and $S_{T1}$ and verify the stated conditions.\n\nFirst, we establish the properties of the input random variables. For an input $X_i \\sim \\mathrm{Uniform}(0,1)$, the expectation is:\n$$\n\\mathbb{E}[X_i] = \\int_0^1 x \\, dx = \\frac{1}{2}\n$$\nThe variance is given by $\\mathrm{Var}(X_i) = \\mathbb{E}[X_i^2] - (\\mathbb{E}[X_i])^2$. We compute the second moment:\n$$\n\\mathbb{E}[X_i^2] = \\int_0^1 x^2 \\, dx = \\frac{1}{3}\n$$\nThus, the variance is:\n$$\n\\mathrm{Var}(X_i) = \\frac{1}{3} - \\left(\\frac{1}{2}\\right)^2 = \\frac{1}{3} - \\frac{1}{4} = \\frac{1}{12}\n$$\nIt is convenient to work with centered variables. Let $Z_i = X_i - \\frac{1}{2}$. The properties of $Z_i$ are:\n$$\n\\mathbb{E}[Z_i] = \\mathbb{E}\\left[X_i - \\frac{1}{2}\\right] = \\mathbb{E}[X_i] - \\frac{1}{2} = \\frac{1}{2} - \\frac{1}{2} = 0\n$$\n$$\n\\mathrm{Var}(Z_i) = \\mathrm{Var}\\left(X_i - \\frac{1}{2}\\right) = \\mathrm{Var}(X_i) = \\frac{1}{12}\n$$\nThe model can now be written as $Y = Z_1 Z_2$.\n\nNow, we compute the total variance $\\mathrm{Var}(Y)$.\nThe expectation of $Y$ is:\n$$\n\\mathbb{E}[Y] = \\mathbb{E}[Z_1 Z_2]\n$$\nSince $X_1$ and $X_2$ are independent, $Z_1$ and $Z_2$ are also independent. Therefore:\n$$\n\\mathbb{E}[Y] = \\mathbb{E}[Z_1]\\mathbb{E}[Z_2] = (0)(0) = 0\n$$\nThe variance of $Y$ is $\\mathrm{Var}(Y) = \\mathbb{E}[Y^2] - (\\mathbb{E}[Y])^2$. We compute $\\mathbb{E}[Y^2]$:\n$$\n\\mathbb{E}[Y^2] = \\mathbb{E}[(Z_1 Z_2)^2] = \\mathbb{E}[Z_1^2 Z_2^2]\n$$\nDue to independence, $\\mathbb{E}[Z_1^2 Z_2^2] = \\mathbb{E}[Z_1^2]\\mathbb{E}[Z_2^2]$.\nFrom the definition of variance, $\\mathrm{Var}(Z_i) = \\mathbb{E}[Z_i^2] - (\\mathbb{E}[Z_i])^2$. Since $\\mathbb{E}[Z_i] = 0$, we have $\\mathbb{E}[Z_i^2] = \\mathrm{Var}(Z_i) = \\frac{1}{12}$.\nSo,\n$$\n\\mathbb{E}[Y^2] = \\left(\\frac{1}{12}\\right)\\left(\\frac{1}{12}\\right) = \\frac{1}{144}\n$$\nThe total variance of the output is:\n$$\n\\mathrm{Var}(Y) = \\frac{1}{144} - (0)^2 = \\frac{1}{144}\n$$\nNext, we verify that the first-order index $S_1$ is $0$. The numerator is $\\mathrm{Var}(\\mathbb{E}[Y \\mid X_1])$. We compute the conditional expectation:\n$$\n\\mathbb{E}[Y \\mid X_1] = \\mathbb{E}\\left[\\left(X_1 - \\frac{1}{2}\\right)\\left(X_2 - \\frac{1}{2}\\right) \\mid X_1\\right]\n$$\nGiven $X_1$, the term $(X_1 - \\frac{1}{2})$ is a constant.\n$$\n\\mathbb{E}[Y \\mid X_1] = \\left(X_1 - \\frac{1}{2}\\right) \\mathbb{E}\\left[\\left(X_2 - \\frac{1}{2}\\right) \\mid X_1\\right]\n$$\nDue to the independence of $X_1$ and $X_2$, the conditioning on $X_1$ has no effect on the expectation of a function of $X_2$.\n$$\n\\mathbb{E}\\left[\\left(X_2 - \\frac{1}{2}\\right) \\mid X_1\\right] = \\mathbb{E}\\left[X_2 - \\frac{1}{2}\\right] = \\mathbb{E}[X_2] - \\frac{1}{2} = 0\n$$\nThus, the conditional expectation is:\n$$\n\\mathbb{E}[Y \\mid X_1] = \\left(X_1 - \\frac{1}{2}\\right) \\cdot 0 = 0\n$$\nThe variance of a constant is zero, so $\\mathrm{Var}(\\mathbb{E}[Y \\mid X_1]) = \\mathrm{Var}(0) = 0$.\nThe first-order index for $X_1$ is:\n$$\nS_1 = \\frac{\\mathrm{Var}(\\mathbb{E}[Y \\mid X_1])}{\\mathrm{Var}(Y)} = \\frac{0}{1/144} = 0\n$$\nThis verifies the given condition.\n\nFinally, we determine the total-order index $S_{T1}$. The numerator is $\\mathbb{E}[\\mathrm{Var}(Y \\mid X_{\\sim 1})]$. For this two-input model, $X_{\\sim 1}$ is simply the input $X_2$. We must compute $\\mathbb{E}[\\mathrm{Var}(Y \\mid X_2)]$. First, we find the conditional variance:\n$$\n\\mathrm{Var}(Y \\mid X_2) = \\mathrm{Var}\\left(\\left(X_1 - \\frac{1}{2}\\right)\\left(X_2 - \\frac{1}{2}\\right) \\mid X_2\\right)\n$$\nIn the context of conditioning on $X_2$, the term $(X_2 - \\frac{1}{2})$ is treated as a constant factor. Using the property $\\mathrm{Var}(aU) = a^2\\mathrm{Var}(U)$:\n$$\n\\mathrm{Var}(Y \\mid X_2) = \\left(X_2 - \\frac{1}{2}\\right)^2 \\mathrm{Var}\\left(\\left(X_1 - \\frac{1}{2}\\right) \\mid X_2\\right)\n$$\nDue to independence, $\\mathrm{Var}((X_1 - \\frac{1}{2}) \\mid X_2) = \\mathrm{Var}(X_1 - \\frac{1}{2}) = \\mathrm{Var}(X_1) = \\frac{1}{12}$.\nSo, the conditional variance is:\n$$\n\\mathrm{Var}(Y \\mid X_2) = \\frac{1}{12}\\left(X_2 - \\frac{1}{2}\\right)^2\n$$\nNow, we take the expectation of this quantity with respect to the distribution of $X_2$:\n$$\n\\mathbb{E}[\\mathrm{Var}(Y \\mid X_2)] = \\mathbb{E}\\left[\\frac{1}{12}\\left(X_2 - \\frac{1}{2}\\right)^2\\right] = \\frac{1}{12}\\mathbb{E}\\left[\\left(X_2 - \\frac{1}{2}\\right)^2\\right]\n$$\nThe term $\\mathbb{E}[(X_2 - \\frac{1}{2})^2]$ is, by definition, the second central moment of $X_2$, which is the variance of $X_2$, since $\\mathbb{E}[X_2] = \\frac{1}{2}$.\n$$\n\\mathbb{E}\\left[\\left(X_2 - \\frac{1}{2}\\right)^2\\right] = \\mathrm{Var}(X_2) = \\frac{1}{12}\n$$\nTherefore, the numerator for the total-order index is:\n$$\n\\mathbb{E}[\\mathrm{Var}(Y \\mid X_2)] = \\frac{1}{12} \\cdot \\frac{1}{12} = \\frac{1}{144}\n$$\nFinally, the total-order index $S_{T1}$ is:\n$$\nS_{T1} = \\frac{\\mathbb{E}[\\mathrm{Var}(Y \\mid X_{\\sim 1})]}{\\mathrm{Var}(Y)} = \\frac{1/144}{1/144} = 1\n$$\nThe result $S_{T1} = 1$ signifies that all the variance in the output $Y$ is attributable to the input $X_1$ through its direct effect (which is zero) and its interactions. In this particular model, the variance arises purely from the interaction between $X_1$ and $X_2$.", "answer": "$$\\boxed{1}$$", "id": "2434812"}, {"introduction": "Is an input's local influence, measured by a simple derivative, a reliable guide to its overall importance? This practice challenges that intuition by tasking you with designing a model where an input has zero local sensitivity at one point but a very high global sensitivity across its entire domain. Working through this problem [@problem_id:2434881] highlights the fundamental difference between local and global measures and demonstrates why variance-based methods are indispensable for assessing an input's true impact on a nonlinear system.", "problem": "A scalar model with two independent inputs is used to assess global sensitivity in computational engineering. Let the inputs be $x_1$ and $x_2$, each independently and identically distributed as uniform on the interval $[-1,1]$. Consider the model family\n$$\nf(x_1,x_2) = A\\,x_1^2 + x_2,\n$$\nwhere $A>0$ is a constant and the center of the input space is $(0,0)$. The total-effect Sobol sensitivity index for input $x_1$, denoted $S_{T1}$, is defined by\n$$\nS_{T1} \\equiv \\frac{\\mathbb{E}_{x_2}\\!\\left[\\operatorname{Var}_{x_1}\\!\\left(f(x_1,x_2)\\mid x_2\\right)\\right]}{\\operatorname{Var}\\!\\left(f(x_1,x_2)\\right)}.\n$$\nDetermine the exact value of $A>0$ such that the model satisfies both of the following properties:\n- The local derivative at the center with respect to $x_1$ is zero, that is, $\\left.\\frac{\\partial f}{\\partial x_1}\\right|_{(x_1,x_2)=(0,0)} = 0$.\n- The total-effect index equals $S_{T1} = \\frac{9}{10}$.\n\nProvide the resulting $f(x_1,x_2)$ as a single analytic expression. No numerical rounding is required.", "solution": "The problem statement is submitted to validation.\n\nStep 1: Extract Givens.\n- Model: $f(x_1,x_2) = A\\,x_1^2 + x_2$\n- Model parameter: $A>0$\n- Inputs: $x_1$ and $x_2$ are independent and identically distributed.\n- Input distribution: $x_1, x_2 \\sim U[-1,1]$.\n- Center of input space: $(0,0)$.\n- Definition of total-effect Sobol index for $x_1$: $S_{T1} \\equiv \\frac{\\mathbb{E}_{x_2}\\!\\left[\\operatorname{Var}_{x_1}\\!\\left(f(x_1,x_2)\\mid x_2\\right)\\right]}{\\operatorname{Var}\\!\\left(f(x_1,x_2)\\right)}$.\n- Condition 1: $\\left.\\frac{\\partial f}{\\partial x_1}\\right|_{(x_1,x_2)=(0,0)} = 0$.\n- Condition 2: $S_{T1} = \\frac{9}{10}$.\n- Objective: Find the value of $A$ and provide the resulting expression for $f(x_1,x_2)$.\n\nStep 2: Validate Using Extracted Givens.\nThe problem is scientifically grounded. It concerns sensitivity analysis, a standard topic in computational engineering, and uses correct definitions from probability theory and Sobol analysis. Although the provided definition for the total-effect index $S_{T1}$ is one of several equivalent forms derived from the law of total variance, it is valid for a model with two independent inputs. The specific form is $S_{T1} = 1 - S_2$, which is correct as $S_{T1} + S_2 = 1$ for a two-input additive model. The problem is well-posed, objective, and self-contained.\n\nHowever, a minor point of critique is the inclusion of the first condition. The partial derivative of the model with respect to $x_1$ is $\\frac{\\partial f}{\\partial x_1} = 2Ax_1$. At the center of the input space $(x_1,x_2)=(0,0)$, this derivative is $\\left.2Ax_1\\right|_{x_1=0} = 0$. This condition is satisfied for any value of $A$ and is therefore redundant, providing no constraint on the parameter. The problem remains solvable using the second condition alone.\n\nStep 3: Verdict and Action.\nThe problem is deemed valid. A complete solution will be provided.\n\nThe objective is to find the constant $A>0$ that satisfies the given conditions. As established, the first condition is trivially satisfied. We proceed by analyzing the second condition, $S_{T1} = \\frac{9}{10}$.\n\nThe inputs $x_1, x_2$ are independent and uniformly distributed on $[-1,1]$. Let $X$ be a random variable with this distribution. Its probability density function is $p(x) = \\frac{1}{2}$ for $x \\in [-1,1]$ and $0$ otherwise. We require several moments of this distribution.\nThe expectation is $\\mathbb{E}[X] = \\int_{-1}^{1} x \\cdot \\frac{1}{2} dx = 0$.\nThe variance is $\\operatorname{Var}(X) = \\mathbb{E}[X^2] - (\\mathbb{E}[X])^2 = \\mathbb{E}[X^2]$.\n$\\mathbb{E}[X^2] = \\int_{-1}^{1} x^2 \\cdot \\frac{1}{2} dx = \\frac{1}{2} \\left[ \\frac{x^3}{3} \\right]_{-1}^{1} = \\frac{1}{3}$. Thus, $\\operatorname{Var}(x_1) = \\operatorname{Var}(x_2) = \\frac{1}{3}$.\nWe will also need the fourth moment:\n$\\mathbb{E}[X^4] = \\int_{-1}^{1} x^4 \\cdot \\frac{1}{2} dx = \\frac{1}{2} \\left[ \\frac{x^5}{5} \\right]_{-1}^{1} = \\frac{1}{5}$.\n\nThe total-effect index $S_{T1}$ is given by the ratio of the expected conditional variance to the total variance. Let $Y = f(x_1, x_2) = A x_1^2 + x_2$.\n\nFirst, we compute the total variance, $\\operatorname{Var}(Y)$, which is the denominator of the expression for $S_{T1}$. Since $x_1$ and $x_2$ are independent, the functions $A x_1^2$ and $x_2$ are also independent. The variance of a sum of independent random variables is the sum of their variances:\n$$\n\\operatorname{Var}(Y) = \\operatorname{Var}(A x_1^2 + x_2) = \\operatorname{Var}(A x_1^2) + \\operatorname{Var}(x_2)\n$$\nWe have $\\operatorname{Var}(x_2) = \\frac{1}{3}$. For the term involving $x_1$:\n$$\n\\operatorname{Var}(A x_1^2) = A^2 \\operatorname{Var}(x_1^2)\n$$\nThe variance of $x_1^2$ is given by $\\operatorname{Var}(x_1^2) = \\mathbb{E}[(x_1^2)^2] - (\\mathbb{E}[x_1^2])^2 = \\mathbb{E}[x_1^4] - (\\mathbb{E}[x_1^2])^2$.\nUsing the moments we calculated:\n$$\n\\operatorname{Var}(x_1^2) = \\frac{1}{5} - \\left(\\frac{1}{3}\\right)^2 = \\frac{1}{5} - \\frac{1}{9} = \\frac{9-5}{45} = \\frac{4}{45}\n$$\nSo, the total variance of the model output is:\n$$\n\\operatorname{Var}(Y) = A^2 \\left(\\frac{4}{45}\\right) + \\frac{1}{3}\n$$\n\nNext, we compute the numerator of the expression for $S_{T1}$, which is $\\mathbb{E}_{x_2}\\!\\left[\\operatorname{Var}_{x_1}\\!\\left(Y \\mid x_2\\right)\\right]$.\nFirst, we find the inner conditional variance, $\\operatorname{Var}_{x_1}(Y \\mid x_2)$. This is the variance with respect to $x_1$, treating $x_2$ as a fixed parameter.\n$$\n\\operatorname{Var}_{x_1}(Y \\mid x_2) = \\operatorname{Var}_{x_1}(A x_1^2 + x_2 \\mid x_2)\n$$\nSince $x_2$ is fixed in this context, it is a constant, and the variance of a constant is zero.\n$$\n\\operatorname{Var}_{x_1}(A x_1^2 + x_2 \\mid x_2) = \\operatorname{Var}_{x_1}(A x_1^2) = A^2 \\operatorname{Var}(x_1^2) = A^2 \\left(\\frac{4}{45}\\right)\n$$\nThe result does not depend on $x_2$. Therefore, taking the expectation with respect to $x_2$ is trivial:\n$$\n\\mathbb{E}_{x_2}\\!\\left[\\operatorname{Var}_{x_1}\\!\\left(Y \\mid x_2\\right)\\right] = \\mathbb{E}_{x_2}\\!\\left[A^2 \\frac{4}{45}\\right] = A^2 \\frac{4}{45}\n$$\n\nNow we assemble the expression for $S_{T1}$ and set it equal to the required value of $\\frac{9}{10}$.\n$$\nS_{T1} = \\frac{\\mathbb{E}_{x_2}\\!\\left[\\operatorname{Var}_{x_1}\\!\\left(Y \\mid x_2\\right)\\right]}{\\operatorname{Var}(Y)} = \\frac{A^2 \\frac{4}{45}}{A^2 \\frac{4}{45} + \\frac{1}{3}} = \\frac{9}{10}\n$$\nTo solve for $A$, we can simplify the expression:\n$$\n\\frac{\\frac{4A^2}{45}}{\\frac{4A^2 + 15}{45}} = \\frac{4A^2}{4A^2 + 15}\n$$\nSetting this equal to $\\frac{9}{10}$:\n$$\n\\frac{4A^2}{4A^2 + 15} = \\frac{9}{10}\n$$\nCross-multiplication gives:\n$$\n10(4A^2) = 9(4A^2 + 15)\n$$\n$$\n40A^2 = 36A^2 + 135\n$$\n$$\n40A^2 - 36A^2 = 135\n$$\n$$\n4A^2 = 135\n$$\n$$\nA^2 = \\frac{135}{4}\n$$\nThe problem states that $A > 0$, so we take the positive square root:\n$$\nA = \\sqrt{\\frac{135}{4}} = \\frac{\\sqrt{135}}{2}\n$$\nThe radical $\\sqrt{135}$ can be simplified: $135 = 9 \\times 15$, so $\\sqrt{135} = \\sqrt{9 \\times 15} = 3\\sqrt{15}$.\nTherefore, the exact value of the parameter is:\n$$\nA = \\frac{3\\sqrt{15}}{2}\n$$\nThe problem asks for the resulting model expression $f(x_1, x_2)$. Substituting the value of $A$ into the model definition:\n$$\nf(x_1, x_2) = \\left(\\frac{3\\sqrt{15}}{2}\\right) x_1^2 + x_2\n$$\nThis is the final analytical expression for the model.", "answer": "$$\n\\boxed{f(x_1, x_2) = \\frac{3\\sqrt{15}}{2} x_1^2 + x_2}\n$$", "id": "2434881"}, {"introduction": "Sensitivity analysis is a powerful lens not only for physical models but also for the numerical algorithms we use to solve them. This hands-on coding practice investigates the sensitivity of a finite difference solution to a critical numerical parameter: the Courant–Friedrichs–Lewy (CFL) number. By implementing a simulation of the wave equation and analyzing the resulting error as a function of the CFL number [@problem_id:2434821], you will directly observe the dramatic impact of this parameter on solution accuracy and stability, reinforcing a core principle of computational science.", "problem": "You are to study the sensitivity of a finite difference solution of a one-dimensional hyperbolic partial differential equation to the Courant–Friedrichs–Lewy (CFL) number. Consider the one-dimensional linear wave equation\n$$\nu_{tt}(x,t) = u_{xx}(x,t),\n$$\non the spatial domain $[0,1]$ and for times $t \\ge 0$, with homogeneous Dirichlet boundary conditions\n$$\nu(0,t) = 0,\\quad u(1,t) = 0,\n$$\nand initial conditions\n$$\nu(x,0) = \\sin(\\pi x),\\quad u_t(x,0) = 0.\n$$\nAll quantities are dimensionless, and arguments to trigonometric functions are in radians.\n\nLet the spatial grid be uniform with $N$ points at positions $x_i = i \\,\\Delta x$ for $i=0,1,\\dots,N-1$ and $\\Delta x = \\frac{1}{N-1}$. Let the time step be $\\Delta t = C\\,\\Delta x$, where $C$ is the Courant–Friedrichs–Lewy (CFL) number. Use the standard second-order accurate explicit central finite difference scheme defined by the following discrete update for interior indices $i=1,2,\\dots,N-2$:\n$$\nu_i^{n+1} = 2\\,u_i^{n} - u_i^{n-1} + C^2\\left(u_{i+1}^{n} - 2\\,u_i^{n} + u_{i-1}^{n}\\right),\n$$\nwith boundary values enforced as $u_0^n = 0$ and $u_{N-1}^n = 0$ for all time indices $n$. Initialize from the given initial conditions using the one-step Taylor expansion at $t=0$ with zero initial velocity, for interior indices $i=1,2,\\dots,N-2$:\n$$\nu_i^{0} = \\sin(\\pi x_i),\\qquad\nu_i^{1} = u_i^{0} + \\tfrac{1}{2} C^2 \\left(u_{i+1}^{0} - 2\\,u_i^{0} + u_{i-1}^{0}\\right),\n$$\nand $u_0^{0}=u_{N-1}^{0}=0$, $u_0^{1}=u_{N-1}^{1}=0$.\n\nLet the target final time be $T=1$. Evolve the scheme using time step $\\Delta t$ up to the last time not exceeding $T$, that is, take $n_{\\text{end}} = \\left\\lfloor \\frac{T}{\\Delta t} \\right\\rfloor$ and compare at $t_{\\text{end}} = n_{\\text{end}}\\,\\Delta t$. The exact solution for this problem is\n$$\nu(x,t) = \\sin(\\pi x)\\,\\cos(\\pi t).\n$$\n\nFor a given $C$, compute the discrete relative $\\ell^2$ error at time $t_{\\text{end}}$,\n$$\nE(C) = \n\\begin{cases}\n\\dfrac{\\sqrt{\\sum_{i=0}^{N-1}\\left(u_i^{n_{\\text{end}}} - u(x_i,t_{\\text{end}})\\right)^2}}{\\sqrt{\\sum_{i=0}^{N-1} \\left(u(x_i,t_{\\text{end}})\\right)^2}}, & \\text{if } \\sum_{i=0}^{N-1} \\left(u(x_i,t_{\\text{end}})\\right)^2 \\ne 0,\\\\[1em]\n\\sqrt{\\sum_{i=0}^{N-1}\\left(u_i^{n_{\\text{end}}} - u(x_i,t_{\\text{end}})\\right)^2}, & \\text{otherwise.}\n\\end{cases}\n$$\n\nIf at any time step prior to reaching $n_{\\text{end}}$ the numerical solution contains a non-finite value (not-a-number or infinity) or its maximum absolute value exceeds the threshold $M = 10^6$, define $E(C) = 10^9$ for that $C$.\n\nUse the following fixed parameters for all test cases: $N = 401$ and $T = 1$. The test suite consists of the five CFL numbers\n$$\nC \\in \\{0.20,\\; 0.70,\\; 0.99,\\; 1.00,\\; 1.05\\}.\n$$\n\nYour program must compute $E(C)$ for each $C$ in the given order and produce a single line of output containing the results as a comma-separated list enclosed in square brackets, for example, $[e_1,e_2,e_3,e_4,e_5]$. Express each error as a decimal rounded to six decimal places. The final output must be a single line with no additional text.", "solution": "The problem requires a sensitivity analysis of a numerical solution to the one-dimensional linear wave equation with respect to the Courant–Friedrichs–Lewy (CFL) number, denoted by $C$. The equation is $u_{tt} = u_{xx}$ on the domain $x \\in [0,1]$ with homogeneous Dirichlet boundary conditions $u(0,t)=u(1,t)=0$ and initial conditions $u(x,0) = \\sin(\\pi x)$ and $u_t(x,0) = 0$. We are to implement a specified second-order explicit central finite difference scheme and compute the relative $\\ell^2$ error for a set of $C$ values.\n\nThe theoretical foundation for this numerical scheme is the CFL stability condition. For the one-dimensional wave equation $u_{tt} = c^2 u_{xx}$, the condition for the standard explicit central difference scheme to be stable is $C = c \\frac{\\Delta t}{\\Delta x} \\le 1$. In the given problem, the wave speed $c$ is $1$, so the stability condition simplifies to $C \\le 1$. We must therefore expect that for the test cases with $C \\le 1$, the numerical solution will be stable, whereas for $C > 1$, the solution will be unstable, exhibiting exponential growth in amplitude.\n\nThe case $C=1$ is of particular significance. For this specific scheme applied to the one-dimensional wave equation, the numerical phase velocity exactly matches the true phase velocity for all wavenumbers resolved by the grid. This means the scheme is non-dispersive at $C=1$. Given the provided initialization, the numerical solution should exactly match the analytical solution at the grid points, and the computed error is expected to be on the order of machine floating-point precision. For cases where $C < 1$, the scheme is stable but introduces numerical dispersion, which is the primary source of error.\n\nThe computational procedure is as follows:\n\nFirst, we establish the discrete domain. The spatial domain $[0,1]$ is discretized into $N=401$ points, yielding a spatial step of $\\Delta x = \\frac{1}{N-1} = \\frac{1}{400}$. We create a vector $x$ of grid point coordinates $x_i = i \\Delta x$ for $i=0, 1, \\dots, N-1$.\n\nFor each specified CFL number $C \\in \\{0.20, 0.70, 0.99, 1.00, 1.05\\}$, we perform a time evolution simulation.\nThe time step is calculated as $\\Delta t = C \\Delta x$. The simulation runs until the final time $T=1$. The total number of steps is $n_{\\text{end}} = \\lfloor T/\\Delta t \\rfloor$, and the final simulation time is $t_{\\text{end}} = n_{\\text{end}} \\Delta t$.\n\nThe simulation requires storing the solution at two previous time levels to compute the next, which we denote as vectors $u^{n-1}$ and $u^n$. Let these be represented by `u_prev` and `u_curr` in the implementation.\nThe initialization is performed in two stages:\n1.  The solution at time $n=0$ is given by the initial condition: $u_i^0 = u(x_i, 0) = \\sin(\\pi x_i)$. This is assigned to `u_prev`.\n2.  The solution at time $n=1$ is computed using the provided one-step Taylor expansion formula, which is consistent with the $u_t(x,0)=0$ initial condition:\n    $$u_i^{1} = u_i^{0} + \\tfrac{1}{2} C^2 \\left(u_{i+1}^{0} - 2 u_i^{0} + u_{i-1}^{0}\\right)$$\n    for interior points $i=1, 2, \\dots, N-2$. The boundary values are $u_0^1=0$ and $u_{N-1}^1=0$. The discrete Laplacian term $(u_{i+1}^{0} - 2 u_i^{0} + u_{i-1}^{0})$ is computed efficiently using vector operations on `u_prev`. The result is stored in `u_curr`.\n\nThe core of the simulation is the time-stepping loop, which iterates from $n=1$ to $n=n_{\\text{end}}-1$. In each iteration, the solution $u^{n+1}$ (let us call it `u_next`) is computed from $u^n$ and $u^{n-1}$ using the explicit central difference formula for interior points $i=1, 2, \\dots, N-2$:\n$$u_i^{n+1} = 2 u_i^{n} - u_i^{n-1} + C^2\\left(u_{i+1}^{n} - 2 u_i^{n} + u_{i-1}^{n}\\right)$$\nHomogeneous Dirichlet boundary conditions are enforced by setting $u_0^{n+1}=0$ and $u_{N-1}^{n+1}=0$. The update is vectorized for efficiency.\n\nAfter computing `u_next` in each step, we must check for numerical instability. If any element of the solution vector becomes non-finite (NaN or infinity) or if its maximum absolute value exceeds the threshold $M=10^6$, the simulation for the current $C$ is terminated, and the error $E(C)$ is set to the penalty value of $10^9$.\n\nIf the time-stepping loop completes without encountering instability, the vector `u_curr` contains the numerical solution $u^{n_{\\text{end}}}$. We then compute the error $E(C)$. First, the exact solution is evaluated at the grid points at the final time $t_{\\text{end}}$: $u(x_i, t_{\\text{end}}) = \\sin(\\pi x_i) \\cos(\\pi t_{\\text{end}})$. The relative $\\ell^2$ error is then calculated using the provided formula:\n$$E(C) = \\frac{\\sqrt{\\sum_{i=0}^{N-1}\\left(u_i^{n_{\\text{end}}} - u(x_i,t_{\\text{end}})\\right)^2}}{\\sqrt{\\sum_{i=0}^{N-1} \\left(u(x_i,t_{\\text{end}})\\right)^2}}$$\nA check is implemented to handle the case where the denominator is zero, as specified in the problem statement, although this is not expected to occur for the given parameters.\n\nThis entire process is repeated for each value of $C$, and the resulting errors are collected. The final output is a formatted list of these error values.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the 1D wave equation using a finite difference scheme\n    and computes the numerical error for different CFL numbers.\n    \"\"\"\n    # Define the fixed parameters from the problem statement.\n    N = 401\n    T = 1.0\n    M = 1.0e6\n    C_values = [0.20, 0.70, 0.99, 1.00, 1.05]\n\n    results = []\n\n    # Iterate over each specified CFL number.\n    for C in C_values:\n        # ---- Step 1: Discretization and setup ----\n        dx = 1.0 / (N - 1)\n        dt = C * dx\n\n        if dt <= 0:\n            # Handle non-positive time step case to prevent infinite loop or division by zero.\n            results.append(1e9)  # Assign instability error\n            continue\n\n        n_end = int(np.floor(T / dt))\n        t_end = n_end * dt\n        \n        x = np.linspace(0.0, 1.0, N)\n        C2 = C**2\n        is_unstable = False\n\n        # ---- Step 2: Initialization ----\n        # u_prev corresponds to the solution at n=0.\n        u_prev = np.sin(np.pi * x)\n        \n        # u_curr corresponds to the solution at n=1.\n        u_curr = np.zeros(N)\n        \n        # Compute u^1 for interior points using the Taylor expansion formula.\n        laplacian_u0 = u_prev[2:] - 2 * u_prev[1:-1] + u_prev[:-2]\n        u_curr[1:-1] = u_prev[1:-1] + 0.5 * C2 * laplacian_u0\n        # Boundary conditions u_curr[0]=0 and u_curr[N-1]=0 are met by np.zeros.\n\n        # ---- Step 3: Time-stepping loop ----\n        # Loop from n=1 to n_end-1 to compute solutions up to u^{n_end}.\n        for _ in range(1, n_end):\n            u_next = np.zeros(N)\n            \n            # Compute u^{n+1} for interior points using the central difference scheme.\n            laplacian_u_curr = u_curr[2:] - 2 * u_curr[1:-1] + u_curr[:-2]\n            u_next[1:-1] = 2 * u_curr[1:-1] - u_prev[1:-1] + C2 * laplacian_u_curr\n            # Boundary conditions u_next[0]=0 and u_next[N-1]=0 are met.\n            \n            # Check for numerical instability.\n            if not np.all(np.isfinite(u_next)) or np.max(np.abs(u_next)) > M:\n                is_unstable = True\n                break\n            \n            # Update solution vectors for the next time step.\n            u_prev, u_curr = u_curr, u_next\n\n        # ---- Step 4: Error calculation ----\n        if is_unstable:\n            error = 1e9\n        else:\n            # At loop completion, u_curr holds the solution at t_end.\n            u_exact = np.sin(np.pi * x) * np.cos(np.pi * t_end)\n            \n            # Calculate the squared L2 norms.\n            norm_err_sq = np.sum((u_curr - u_exact)**2)\n            norm_exact_sq = np.sum(u_exact**2)\n            \n            # Compute error based on the specified formula.\n            if norm_exact_sq != 0:\n                error = np.sqrt(norm_err_sq / norm_exact_sq)\n            else:\n                error = np.sqrt(norm_err_sq)\n        \n        results.append(error)\n\n    # Format the results to six decimal places for output.\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2434821"}]}