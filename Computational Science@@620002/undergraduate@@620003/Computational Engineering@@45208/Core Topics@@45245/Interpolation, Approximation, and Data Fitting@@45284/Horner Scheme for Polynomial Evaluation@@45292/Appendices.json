{"hands_on_practices": [{"introduction": "The power of an elegant algorithm like Horner's method is not just its efficiency for a single task, but its ability to be generalized. This exercise [@problem_id:2177827] challenges you to extend the concept from univariate to bivariate polynomials. By treating a polynomial in two variables, $P(x,y)$, as a polynomial in one variable whose coefficients are themselves polynomials, you will see how the nested structure of Horner's scheme can be applied recursively to solve a seemingly more complex problem with the same fundamental efficiency.", "problem": "In numerical analysis, Horner's method provides an efficient algorithm for evaluating a univariate polynomial. This problem explores an extension of this idea to bivariate polynomials.\n\nConsider a general bivariate polynomial $P(x,y)$ of degree $n$ in the variable $x$ and degree $m$ in the variable $y$, defined as:\n$$P(x,y) = \\sum_{i=0}^{n} \\sum_{j=0}^{m} c_{ij} x^i y^j$$\nwhere $c_{ij}$ are constant coefficients.\n\nA nested evaluation scheme can be devised by first grouping the terms by powers of $x$. This treats $P(x,y)$ as a polynomial in $x$ whose coefficients are themselves polynomials in $y$:\n$$P(x,y) = \\sum_{i=0}^{n} Q_i(y) x^i, \\quad \\text{where} \\quad Q_i(y) = \\sum_{j=0}^{m} c_{ij} y^j$$\nTo evaluate $P(x_0, y_0)$ for some specific values $(x_0, y_0)$, the procedure is as follows:\n1.  First, for each $i \\in \\{0, 1, \\dots, n\\}$, evaluate the univariate polynomial $Q_i(y)$ at $y=y_0$ to obtain a numerical value. Each of these evaluations is performed using Horner's method.\n2.  Second, use the set of $n+1$ numerical values $\\{Q_0(y_0), Q_1(y_0), \\dots, Q_n(y_0)\\}$ as coefficients for a new univariate polynomial in $x$, and evaluate this polynomial at $x=x_0$, also using Horner's method.\n\nRecall that evaluating a univariate polynomial of degree $k$ using Horner's method requires exactly $k$ multiplications and $k$ additions.\n\nLet $M$ be the total number of multiplications and $A$ be the total number of additions required to evaluate $P(x_0, y_0)$ using this nested scheme. Which of the following options correctly expresses $M$ and $A$ in terms of $n$ and $m$?\n\nA. $M = nm + m$, $A = nm + m$\n\nB. $M = nm + n$, $A = nm + n$\n\nC. $M = (n+1)(m+1)$, $A = (n+1)(m+1)$\n\nD. $M = nm + n + m$, $A = nm + n + m$\n\nE. $M = nm$, $A = nm - 1$\n\nF. $M = nm + n + m + 1$, $A = nm + n + m + 1$", "solution": "We are given a bivariate polynomial $P(x,y)=\\sum_{i=0}^{n}\\sum_{j=0}^{m} c_{ij} x^{i} y^{j}$, and we evaluate it at $(x_{0},y_{0})$ using a nested Horner scheme:\n1. For each $i \\in \\{0,1,\\dots,n\\}$, define $Q_{i}(y)=\\sum_{j=0}^{m} c_{ij} y^{j}$ and evaluate $Q_{i}(y_{0})$ using Horner’s method. Since each $Q_{i}(y)$ is a univariate polynomial of degree $m$, Horner’s method requires exactly $m$ multiplications and $m$ additions per $i$. There are $n+1$ such polynomials, so the total cost for this step is:\n$$\nM_{1}=(n+1)m, \\quad A_{1}=(n+1)m.\n$$\n2. Next, evaluate the univariate polynomial in $x$ with coefficients $Q_{i}(y_{0})$:\n$$\n\\sum_{i=0}^{n} Q_{i}(y_{0}) x^{i}\n$$\nat $x=x_{0}$ using Horner’s method. This polynomial has degree $n$, so this step requires:\n$$\nM_{2}=n, \\quad A_{2}=n.\n$$\nSumming both steps, the total number of multiplications and additions are\n$$\nM=M_{1}+M_{2}=(n+1)m+n=nm+m+n,\n$$\n$$\nA=A_{1}+A_{2}=(n+1)m+n=nm+m+n.\n$$\nThis matches option D.", "answer": "$$\\boxed{D}$$", "id": "2177827"}, {"introduction": "Beyond pure computational speed, a crucial concern in numerical analysis is accuracy and stability. Evaluating a polynomial at a point very close to a known reference value can lead to significant rounding errors due to subtractive cancellation. This practice [@problem_id:2400090] introduces a powerful technique known as a \"Taylor shift,\" which uses repeated applications of Horner's method to re-express the polynomial around the reference point. This transformation allows for a much more stable and accurate evaluation, showcasing a sophisticated application of the algorithm for robust scientific computing.", "problem": "In a model calibration task in computational engineering, a high-order response polynomial must be evaluated near a reference point to mitigate rounding errors caused by subtractive cancellation. Let the response be modeled by the polynomial\n$$\nP(x) = 5x^{5} - 4x^{4} + 3x^{3} - 2x^{2} + x - 1.\n$$\nThe reference point is $c = 2$, and the evaluation point is $x = c + \\delta$ with a small offset $\\delta = 7.5 \\times 10^{-4}$. Define the shifted polynomial\n$$\nQ(\\delta) = P(c + \\delta) = \\sum_{k=0}^{5} q_{k} \\,\\delta^{k}.\n$$\nStarting only from the definition of a polynomial and the nested evaluation structure used in Horner’s method, use repeated applications of Horner’s method at $x=c$ to perform a Taylor shift and determine the coefficients $q_{k}$ that express $Q(\\delta)$ in powers of $\\delta$. Then evaluate $P(c+\\delta)$ by substituting $\\delta$ into $Q(\\delta)$. Round your final numerical result to $8$ significant figures. Provide only the final numerical value requested; do not include intermediate coefficients in your final answer.", "solution": "The problem asks to evaluate $P(x)$ at $x = c + \\delta$, where $c=2$ and $\\delta$ is small. A direct evaluation can suffer from rounding errors. A more stable approach is to perform a Taylor shift, re-expressing the polynomial as $Q(\\delta) = P(c+\\delta) = \\sum_{k=0}^{5} q_k \\delta^k$. The coefficients $q_k$ of this shifted polynomial are the remainders obtained from repeated synthetic division of $P(x)$ by $(x-c)$.\n\nThe coefficients of $P(x) = 5x^{5} - 4x^{4} + 3x^{3} - 2x^{2} + x - 1$ are $\\{5, -4, 3, -2, 1, -1\\}$. We perform repeated synthetic division with $c=2$.\n\nStep 1: Divide $P(x)$ by $(x-2)$.\n$$\n\\begin{array}{c|rrrrrr}\n2 & 5 & -4 & 3 & -2 & 1 & -1 \\\\\n& & 10 & 12 & 30 & 56 & 114 \\\\\n\\hline\n& 5 & 6 & 15 & 28 & 57 & \\boxed{113}\n\\end{array}\n$$\nThe first remainder is $q_0 = 113$. The quotient coefficients are $\\{5, 6, 15, 28, 57\\}$.\n\nStep 2: Divide the quotient by $(x-2)$.\n$$\n\\begin{array}{c|rrrrr}\n2 & 5 & 6 & 15 & 28 & 57 \\\\\n& & 10 & 32 & 94 & 244 \\\\\n\\hline\n& 5 & 16 & 47 & 122 & \\boxed{301}\n\\end{array}\n$$\nThe second remainder is $q_1 = 301$.\n\nStep 3: Repeat the process.\n$$\n\\begin{array}{c|rrrr}\n2 & 5 & 16 & 47 & 122 \\\\\n& & 10 & 52 & 198 \\\\\n\\hline\n& 5 & 26 & 99 & \\boxed{320}\n\\end{array}\n$$\nThe third remainder is $q_2 = 320$.\n\nStep 4: Repeat again.\n$$\n\\begin{array}{c|rrr}\n2 & 5 & 26 & 99 \\\\\n& & 10 & 72 \\\\\n\\hline\n& 5 & 36 & \\boxed{171}\n\\end{array}\n$$\nThe fourth remainder is $q_3 = 171$.\n\nStep 5: Repeat again.\n$$\n\\begin{array}{c|rr}\n2 & 5 & 36 \\\\\n& & 10 \\\\\n\\hline\n& 5 & \\boxed{46}\n\\end{array}\n$$\nThe fifth remainder is $q_4 = 46$. The final quotient is 5, which is $q_5$.\n\nThe shifted polynomial is $Q(\\delta) = 5\\delta^{5} + 46\\delta^{4} + 171\\delta^{3} + 320\\delta^{2} + 301\\delta + 113$.\n\nNow we evaluate $Q(\\delta)$ for $\\delta = 7.5 \\times 10^{-4}$ using Horner's method.\n$Q(0.00075) = ((((5(0.00075) + 46)(0.00075) + 171)(0.00075) + 320)(0.00075) + 301)(0.00075) + 113$\n$Q(0.00075) \\approx 113.225930072$\n\nRounding the result to 8 significant figures: The value is $113.22593007...$. The first 8 significant digits are $1, 1, 3, 2, 2, 5, 9, 3$. The next digit is $0$, so we round down.\nThe final result is $113.22593$.", "answer": "$$\n\\boxed{113.22593}\n$$", "id": "2400090"}, {"introduction": "A key mark of an expert is knowing not only how to use an algorithm, but also understanding its limitations. While Horner's method is optimal for dense polynomials, it can be highly inefficient for sparse ones, where most coefficients are zero. This problem [@problem_id:2400102] presents such a case and challenges you to devise a more efficient evaluation strategy. By leveraging the structure of the exponents, you will find that a different approach, known as exponentiation by squaring, can dramatically reduce the number of required computations.", "problem": "A sparse polynomial is one in which only a few coefficients are nonzero relative to its degree. Consider the polynomial $p(x)=x^{2048}+x^{256}+x^{16}+7$. You must evaluate $p(x)$ for an arbitrary nonzero real input $x$ using only real additions and real multiplications, where each multiplication of two real numbers (including by constants) counts as unit cost and additions are not counted. You may reuse any intermediate powers of $x$ that you compute. Multiplications by zero are not performed. Design an evaluation algorithm that leverages the sparsity of $p(x)$ to minimize the number of real multiplications required to compute $p(x)$ for an arbitrary nonzero input $x$. Provide as your final answer the minimal possible number of real multiplications required by any correct algorithm under this model. The final answer must be a single number.", "solution": "The problem asks for the minimum number of multiplications to evaluate the sparse polynomial $p(x) = x^{2048} + x^{256} + x^{16} + 7$. Standard Horner's method would be inefficient. Instead, we should compute the required powers of $x$ efficiently.\n\nFirst, let's establish a lower bound. The highest degree in the polynomial is $d=2048$. To compute $x^d$ starting from $x$ using only multiplications, one needs at least $\\lceil\\log_2(d)\\rceil$ multiplications. Since $2048 = 2^{11}$, at least 11 multiplications are required.\n\nNow, we show that this lower bound is achievable. The required terms are $x^{16}$, $x^{256}$, and $x^{2048}$. We can generate all these terms using a single chain of 11 successive squarings (exponentiation by squaring):\n1.  $x^2 = x \\cdot x$ (1st mult)\n2.  $x^4 = x^2 \\cdot x^2$ (2nd mult)\n3.  $x^8 = x^4 \\cdot x^4$ (3rd mult)\n4.  $x^{16} = x^8 \\cdot x^8$ (4th mult). First term is ready.\n5.  $x^{32} = x^{16} \\cdot x^{16}$ (5th mult)\n6.  $x^{64} = x^{32} \\cdot x^{32}$ (6th mult)\n7.  $x^{128} = x^{64} \\cdot x^{64}$ (7th mult)\n8.  $x^{256} = x^{128} \\cdot x^{128}$ (8th mult). Second term is ready.\n9.  $x^{512} = x^{256} \\cdot x^{256}$ (9th mult)\n10. $x^{1024} = x^{512} \\cdot x^{512}$ (10th mult)\n11. $x^{2048} = x^{1024} \\cdot x^{1024}$ (11th mult). Third term is ready.\n\nThis procedure uses exactly 11 multiplications and computes all necessary powers of $x$. The final value of $p(x)$ is obtained by summing these terms and the constant 7. Since additions are free and all coefficients are 1, no further multiplications are needed.\n\nThus, the minimum number of multiplications is 11.", "answer": "$$\\boxed{11}$$", "id": "2400102"}]}