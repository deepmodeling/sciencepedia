{"hands_on_practices": [{"introduction": "We begin by exploring how an external electric field perturbs the quantized energy levels of a harmonic oscillator, a phenomenon known as the Stark effect. This exercise [@problem_id:2431866] introduces the powerful method of matrix mechanics, where you will construct the Hamiltonian operator in a finite basis and numerically find its eigenvalues. By comparing your computed energy shifts to the exact analytical solution, you will also gain practical insight into the accuracy and limitations imposed by basis set truncation.", "problem": "Consider a one-dimensional Quantum Harmonic Oscillator (QHO) with mass $m$, angular frequency $\\omega$, and particle charge $q$, subject to a spatially uniform, static electric field of magnitude $\\mathcal{E}$ along the coordinate $x$. The Hamiltonian is given by\n$$\n\\hat{H} = \\frac{\\hat{p}^2}{2m} + \\frac{1}{2} m \\omega^2 \\hat{x}^2 - q \\mathcal{E}\\,\\hat{x}.\n$$\nWork in dimensionless oscillator units defined by setting $\\hbar=1$, $m=1$, $\\omega=1$, and $q=1$. In these units, energies are measured in units of $\\hbar\\omega$, lengths in units of $\\sqrt{\\hbar/(m\\omega)}$, and the electric field amplitude $\\mathcal{E}$ is dimensionless. In this system of units, the unperturbed QHO has eigenenergies $E_n^{(0)} = n + \\tfrac{1}{2}$ for $n \\in \\{0,1,2,\\dots\\}$.\n\nYour task is to compute, for a given finite basis size $N$ and field strength $\\mathcal{E}$, the numerical energy shifts $\\Delta E_n^{\\text{num}}(\\mathcal{E}) = E_n(\\mathcal{E}) - E_n^{(0)}$ of the lowest $k$ oscillator levels, and compare them to the quadratic Stark shift predicted by perturbation theory for weak fields, which in these units is $\\Delta E_n^{\\text{pert}}(\\mathcal{E}) = -\\tfrac{\\mathcal{E}^2}{2}$ for all $n$. For each specified test case $(\\mathcal{E}, N, k)$, compute the maximum absolute deviation over the first $k$ levels,\n$$\n\\varepsilon_{\\max} = \\max_{0 \\le n \\le k-1} \\left| \\Delta E_n^{\\text{num}}(\\mathcal{E}) - \\Delta E_n^{\\text{pert}}(\\mathcal{E}) \\right|,\n$$\nexpressed in the dimensionless energy unit.\n\nUse the following test suite of parameter values, which together probe a zero-field boundary case, weak-field agreement, improved convergence with a larger basis, and a truncation-stress edge case:\n- Test $1$: $(\\mathcal{E}, N, k) = (0.0, 20, 5)$.\n- Test $2$: $(\\mathcal{E}, N, k) = (0.05, 20, 5)$.\n- Test $3$: $(\\mathcal{E}, N, k) = (0.2, 30, 5)$.\n- Test $4$: $(\\mathcal{E}, N, k) = (1.0, 12, 5)$.\n\nYour program must output a single line containing the four values of $\\varepsilon_{\\max}$ for the tests above, as a comma-separated list enclosed in square brackets, with each value rounded to $10$ decimal places, for example, $[\\varepsilon_1,\\varepsilon_2,\\varepsilon_3,\\varepsilon_4]$. All quantities are dimensionless in the specified units, so no physical units are to be reported. Angles do not appear and thus no angle unit is required. Percentages are not used; any fractional quantities must be represented as decimals or fractions without the percentage sign.", "solution": "The problem as stated is valid. It is a well-posed problem in computational quantum mechanics that is scientifically grounded, objective, and contains all necessary information for its solution. We will proceed to solve it.\n\nThe task is to find the energy levels of a one-dimensional quantum harmonic oscillator (QHO) under the influence of a static electric field. The Hamiltonian for this system is given by:\n$$\n\\hat{H} = \\frac{\\hat{p}^2}{2m} + \\frac{1}{2} m \\omega^2 \\hat{x}^2 - q \\mathcal{E}\\,\\hat{x}\n$$\nWe work in dimensionless units where $\\hbar=1$, $m=1$, $\\omega=1$, and $q=1$. The Hamiltonian simplifies to:\n$$\n\\hat{H} = \\left(\\frac{\\hat{p}^2}{2} + \\frac{1}{2} \\hat{x}^2\\right) - \\mathcal{E}\\,\\hat{x} = \\hat{H}_0 + \\hat{V}\n$$\nwhere $\\hat{H}_0$ is the Hamiltonian of the unperturbed QHO and $\\hat{V} = -\\mathcal{E}\\hat{x}$ is the perturbation potential due to the electric field $\\mathcal{E}$.\n\nThe standard numerical approach for such problems is to represent the Hamiltonian as a matrix in a suitable basis and then find its eigenvalues. The natural choice of basis is the set of eigenstates of the unperturbed Hamiltonian, $\\{|n\\rangle\\}$, where $n \\in \\{0, 1, 2, \\dots\\}$. These states satisfy $\\hat{H}_0|n\\rangle = E_n^{(0)}|n\\rangle$ with unperturbed energies $E_n^{(0)} = n + \\frac{1}{2}$.\n\nIn practice, we must truncate this infinite-dimensional basis to a finite size, say $N$. We will therefore work in the truncated basis $\\{|0\\rangle, |1\\rangle, \\dots, |N-1\\rangle\\}$. The Hamiltonian is represented by an $N \\times N$ matrix with elements $H_{m,n} = \\langle m|\\hat{H}|n\\rangle$.\n\nThe matrix elements are calculated as follows:\n$$\nH_{m,n} = \\langle m|\\hat{H}_0|n\\rangle + \\langle m|\\hat{V}|n\\rangle = E_n^{(0)}\\delta_{m,n} - \\mathcal{E}\\langle m|\\hat{x}|n\\rangle\n$$\nTo find the matrix elements of the position operator, $\\hat{x}$, we express it in terms of the lowering ($\\hat{a}$) and raising ($\\hat{a}^\\dagger$) operators. In our chosen units, $\\hat{x} = \\frac{1}{\\sqrt{2}}(\\hat{a} + \\hat{a}^\\dagger)$. The actions of these operators on the basis states are well-known:\n$$\n\\hat{a}|n\\rangle = \\sqrt{n}|n-1\\rangle \\quad \\text{and} \\quad \\hat{a}^\\dagger|n\\rangle = \\sqrt{n+1}|n+1\\rangle\n$$\nThis leads to the matrix elements of $\\hat{x}$:\n$$\n\\langle m|\\hat{x}|n\\rangle = \\frac{1}{\\sqrt{2}} \\left( \\sqrt{n}\\langle m|n-1\\rangle + \\sqrt{n+1}\\langle m|n+1\\rangle \\right) = \\frac{1}{\\sqrt{2}} \\left( \\sqrt{n}\\delta_{m,n-1} + \\sqrt{n+1}\\delta_{m,n+1} \\right)\n$$\nThe only non-zero elements are on the sub-diagonal ($m=n-1$) and super-diagonal ($m=n+1$).\n\nThe full Hamiltonian matrix $H$ is therefore a real, symmetric, tridiagonal matrix with the following elements for $m,n \\in \\{0, 1, \\dots, N-1\\}$:\n- Diagonal elements: $H_{n,n} = E_n^{(0)} = n + \\frac{1}{2}$\n- Off-diagonal elements: $H_{n,n+1} = H_{n+1,n} = -\\mathcal{E} \\langle n|\\hat{x}|n+1\\rangle = -\\mathcal{E} \\sqrt{\\frac{n+1}{2}}$\n\nThe numerical energy levels, $E_n^{\\text{num}}(\\mathcal{E})$, are the eigenvalues of this $N \\times N$ matrix. We are tasked to compute the lowest $k$ of these eigenvalues.\n\nThe problem requires a comparison of the numerical energy shift, $\\Delta E_n^{\\text{num}}(\\mathcal{E}) = E_n^{\\text{num}}(\\mathcal{E}) - E_n^{(0)}$, with the second-order perturbation theory result, $\\Delta E_n^{\\text{pert}}(\\mathcal{E}) = -\\frac{\\mathcal{E}^2}{2}$. It is an important physical insight that for this specific system, the perturbation theory result is, in fact, exact. This can be seen by completing the square in the potential energy term of the Hamiltonian:\n$$\nV(\\hat{x}) = \\frac{1}{2}\\hat{x}^2 - \\mathcal{E}\\hat{x} = \\frac{1}{2}(\\hat{x}^2 - 2\\mathcal{E}\\hat{x} + \\mathcal{E}^2) - \\frac{\\mathcal{E}^2}{2} = \\frac{1}{2}(\\hat{x} - \\mathcal{E})^2 - \\frac{\\mathcal{E}^2}{2}\n$$\nThe full Hamiltonian is $\\hat{H} = \\frac{\\hat{p}^2}{2} + \\frac{1}{2}(\\hat{x} - \\mathcal{E})^2 - \\frac{\\mathcal{E}^2}{2}$. This is the Hamiltonian for a QHO whose potential minimum is shifted from $x=0$ to $x=\\mathcal{E}$, plus a constant energy offset of $-\\frac{\\mathcal{E}^2}{2}$. A simple coordinate shift does not change the energy spectrum relative to the new minimum. Therefore, the exact energy eigenvalues are $E_n(\\mathcal{E}) = (n + \\frac{1}{2}) - \\frac{\\mathcal{E}^2}{2}$.\n\nThe exact energy shift is thus $\\Delta E_n^{\\text{exact}}(\\mathcal{E}) = E_n(\\mathcal{E}) - E_n^{(0)} = -\\frac{\\mathcal{E}^2}{2}$, which is identical to the provided formula for $\\Delta E_n^{\\text{pert}}(\\mathcal{E})$. Consequently, the quantity to be calculated,\n$$\n\\varepsilon_{\\max} = \\max_{0 \\le n \\le k-1} \\left| \\Delta E_n^{\\text{num}}(\\mathcal{E}) - \\Delta E_n^{\\text{pert}}(\\mathcal{E}) \\right|\n$$\nrepresents the maximum absolute error of the numerical diagonalization method for the lowest $k$ states, an error which arises from the truncation of the infinite Hilbert space to a finite basis of size $N$.\n\nThe computational procedure for each test case $(\\mathcal{E}, N, k)$ is:\n1.  For a given basis size $N$, construct the diagonal and off-diagonal elements of the tridiagonal Hamiltonian matrix.\n2.  If $\\mathcal{E}=0$, the matrix is purely diagonal, so $E_n^{\\text{num}} = n+\\frac{1}{2}$. The shifts $\\Delta E_n^{\\text{num}}$ and $\\Delta E_n^{\\text{pert}}$ are both zero, so $\\varepsilon_{\\max}=0$.\n3.  If $\\mathcal{E} \\neq 0$, use an efficient numerical algorithm, such as `scipy.linalg.eigh_tridiagonal`, to compute the lowest $k$ eigenvalues of the $N \\times N$ matrix. These are $E_n^{\\text{num}}(\\mathcal{E})$ for $n=0, \\dots, k-1$.\n4.  Calculate the numerical shifts $\\Delta E_n^{\\text{num}}(\\mathcal{E}) = E_n^{\\text{num}}(\\mathcal{E}) - (n+\\frac{1}{2})$ for these $k$ levels.\n5.  Calculate the deviation from the exact shift for each level: $|\\Delta E_n^{\\text{num}}(\\mathcal{E}) - (-\\frac{\\mathcal{E}^2}{2})|$.\n6.  The result, $\\varepsilon_{\\max}$, is the maximum of these $k$ deviations.\nThis procedure will be implemented to evaluate the specified test cases.", "answer": "```python\nimport numpy as np\nfrom scipy.linalg import eigh_tridiagonal\n\ndef solve():\n    \"\"\"\n    Solves the quantum harmonic oscillator in a static electric field problem\n    by numerical diagonalization and compares it to the exact result.\n    \"\"\"\n    # Test cases: (Electric Field E, Basis Size N, Number of levels k)\n    test_cases = [\n        (0.0, 20, 5),\n        (0.05, 20, 5),\n        (0.2, 30, 5),\n        (1.0, 12, 5),\n    ]\n\n    results = []\n\n    for E_field, N, k in test_cases:\n        # For a zero field, the Hamiltonian matrix is already diagonal.\n        # The eigenvalues are exactly the unperturbed ones, so the numerical\n        # shift is zero. The perturbative shift is also zero.\n        # Thus, the deviation is exactly zero.\n        if E_field == 0.0:\n            eps_max = 0.0\n            results.append(f\"{eps_max:.10f}\")\n            continue\n\n        # Construct the components of the tridiagonal Hamiltonian matrix.\n        # H_nn = n + 0.5\n        diag = np.arange(N, dtype=float) + 0.5\n        \n        # H_{n, n+1} = -E * sqrt((n+1)/2)\n        off_diag = -E_field * np.sqrt((np.arange(N - 1, dtype=float) + 1.0) / 2.0)\n\n        # Diagonalize the tridiagonal Hamiltonian to find the lowest k eigenvalues.\n        # The 'select' and 'select_range' arguments allow for an efficient\n        # calculation of only the desired subset of eigenvalues.\n        E_num = eigh_tridiagonal(\n            diag, off_diag, eigvals_only=True, select='i', select_range=(0, k - 1)\n        )\n\n        # Unperturbed energies for the lowest k levels.\n        E0 = np.arange(k, dtype=float) + 0.5\n\n        # Numerical energy shift for each level.\n        delta_E_num = E_num - E0\n\n        # The \"perturbative\" shift is exact for the QHO Stark effect.\n        delta_E_pert = -E_field**2 / 2.0\n\n        # Calculate the absolute deviation for each of the k levels.\n        deviations = np.abs(delta_E_num - delta_E_pert)\n\n        # Find the maximum deviation among the k levels.\n        eps_max = np.max(deviations)\n\n        # Store the result formatted to 10 decimal places.\n        results.append(f\"{eps_max:.10f}\")\n\n    # Print the final list of results in the required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2431866"}, {"introduction": "Next, we pivot from deterministic matrix methods to a powerful stochastic approach for approximating the ground state energy of the quantum harmonic oscillator. This practice [@problem_id:2431867] leverages the variational principle, where the expectation value of the energy is minimized by varying a parameter in a trial wavefunction. You will employ Variational Monte Carlo (VMC) to compute this energy via statistical sampling, a technique that is indispensable for tackling quantum systems that are too complex for direct diagonalization.", "problem": "Consider a one-dimensional quantum harmonic oscillator with Hamiltonian\n$$\n\\hat{H} = -\\frac{\\hbar^2}{2m}\\frac{d^2}{dx^2} + \\frac{1}{2} m \\omega^2 x^2,\n$$\nwhere $m$ is the mass, $\\omega$ is the angular frequency, and $\\hbar$ is the reduced Planck constant. Let the trial wavefunction be\n$$\n\\psi_T(x,\\alpha) = e^{-\\alpha x^2},\n$$\nfor a variational parameter $\\alpha \\gt 0$. The variational energy functional for a given $\\alpha$ is\n$$\nE(\\alpha) = \\frac{\\int_{-\\infty}^{\\infty} \\psi_T(x,\\alpha) \\, \\hat{H} \\, \\psi_T(x,\\alpha) \\, dx}{\\int_{-\\infty}^{\\infty} |\\psi_T(x,\\alpha)|^2 \\, dx}.\n$$\nDefine the probability density\n$$\n\\rho_\\alpha(x) \\propto |\\psi_T(x,\\alpha)|^2 = e^{-2\\alpha x^2},\n$$\nand the corresponding local energy\n$$\nE_L(x;\\alpha) = \\frac{\\hat{H}\\psi_T(x,\\alpha)}{\\psi_T(x,\\alpha)}.\n$$\nThe variational energy can be expressed as the expectation value\n$$\nE(\\alpha) = \\mathbb{E}_{x \\sim \\rho_\\alpha}[E_L(x;\\alpha)].\n$$\nIn this problem, you must numerically estimate $E(\\alpha)$ by statistical sampling from $\\rho_\\alpha(x)$ and determine the value of $\\alpha$ in a specified interval that minimizes this estimate. Throughout, use natural units with $\\hbar = 1$. Report all energies in these units, and round all reported floating-point numbers to $6$ decimal places.\n\nFor each test case in the suite below, estimate the minimizing $\\alpha$ by evaluating $E(\\alpha)$ on a uniform grid of $N_\\alpha$ points over a closed interval $[\\alpha_{\\min}, \\alpha_{\\max}]$, and selecting the grid point with the smallest estimated energy. For each grid point $\\alpha$, approximate $E(\\alpha)$ by the arithmetic mean of $E_L(x;\\alpha)$ computed on $N_{\\text{samples}}$ independent samples $x$ drawn from $\\rho_\\alpha(x) \\propto e^{-2\\alpha x^2}$. Use the provided random seed for reproducibility when generating independent samples. For each test case, output the pair $[\\alpha_{\\text{opt}}, E(\\alpha_{\\text{opt}})]$ where $\\alpha_{\\text{opt}}$ is the minimizing grid value.\n\nUse the following test suite. For each case, parameters are given as $(m,\\omega,\\alpha_{\\min},\\alpha_{\\max},N_\\alpha,N_{\\text{samples}},\\text{seed})$:\n- Case $1$: $(m=\\;1.0,\\;\\omega=\\;1.0,\\;\\alpha_{\\min}=\\;0.2,\\;\\alpha_{\\max}=\\;1.0,\\;N_\\alpha=\\;41,\\;N_{\\text{samples}}=\\;50000,\\;\\text{seed}=\\;12345)$.\n- Case $2$: $(m=\\;2.0,\\;\\omega=\\;0.5,\\;\\alpha_{\\min}=\\;0.2,\\;\\alpha_{\\max}=\\;0.9,\\;N_\\alpha=\\;36,\\;N_{\\text{samples}}=\\;50000,\\;\\text{seed}=\\;24680)$.\n- Case $3$: $(m=\\;0.5,\\;\\omega=\\;3.0,\\;\\alpha_{\\min}=\\;0.3,\\;\\alpha_{\\max}=\\;1.2,\\;N_\\alpha=\\;46,\\;N_{\\text{samples}}=\\;50000,\\;\\text{seed}=\\;98765)$.\n- Case $4$ (edge case with fewer samples): $(m=\\;1.0,\\;\\omega=\\;2.0,\\;\\alpha_{\\min}=\\;0.5,\\;\\alpha_{\\max}=\\;1.5,\\;N_\\alpha=\\;26,\\;N_{\\text{samples}}=\\;5000,\\;\\text{seed}=\\;13579)$.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each test case contributes a two-element list $[\\alpha_{\\text{opt}}, E(\\alpha_{\\text{opt}})]$, with both entries rounded to $6$ decimal places. For example, an output with two cases would look like $[[\\alpha_1,E_1],[\\alpha_2,E_2]]$ with numerical values substituted. In this problem, the output must be a single line containing four such pairs in order of the cases above.", "solution": "The problem presented is a standard exercise in computational quantum physics, specifically the application of the Variational Monte Carlo (VMC) method to determine the ground state energy of the one-dimensional quantum harmonic oscillator. Before proceeding, a rigorous validation is necessary.\n\nThe problem is predicated on the variational principle of quantum mechanics, utilizing a Gaussian trial wavefunction, $\\psi_T(x, \\alpha) = e^{-\\alpha x^2}$. The method involves numerically evaluating the expectation value of the Hamiltonian, expressed as an integral over the configuration space, by means of statistical sampling. All components—the Hamiltonian, the trial wavefunction, the definition of the variational energy functional $E(\\alpha)$, and the reformulation as an expectation value of the local energy $E_L(x; \\alpha)$—are standard and scientifically sound. The parameters and objectives are specified with sufficient precision and without internal contradiction. The problem is therefore deemed **valid**, and a solution may be constructed.\n\nThe core of the methodology is the computation of the variational energy $E(\\alpha)$ for a set of variational parameters $\\alpha$. This energy is defined as the expectation value of the local energy, $E_L(x;\\alpha)$, over the probability distribution $\\rho_\\alpha(x) \\propto |\\psi_T(x,\\alpha)|^2$.\n\nFirst, we must derive the analytical expression for the local energy, $E_L(x;\\alpha)$. The local energy is defined as:\n$$\nE_L(x;\\alpha) = \\frac{\\hat{H}\\psi_T(x,\\alpha)}{\\psi_T(x,\\alpha)}\n$$\nThe Hamiltonian is given as $\\hat{H} = -\\frac{\\hbar^2}{2m}\\frac{d^2}{dx^2} + \\frac{1}{2} m \\omega^2 x^2$. The trial wavefunction is $\\psi_T(x,\\alpha) = e^{-\\alpha x^2}$. We compute the necessary derivatives of $\\psi_T$:\n$$\n\\frac{d\\psi_T}{dx} = -2\\alpha x e^{-\\alpha x^2}\n$$\n$$\n\\frac{d^2\\psi_T}{dx^2} = \\frac{d}{dx}(-2\\alpha x e^{-\\alpha x^2}) = -2\\alpha e^{-\\alpha x^2} + 4\\alpha^2 x^2 e^{-\\alpha x^2} = (4\\alpha^2 x^2 - 2\\alpha)e^{-\\alpha x^2}\n$$\nApplying the Hamiltonian operator $\\hat{H}$ to $\\psi_T$ yields:\n$$\n\\hat{H}\\psi_T(x,\\alpha) = -\\frac{\\hbar^2}{2m}(4\\alpha^2 x^2 - 2\\alpha)e^{-\\alpha x^2} + \\frac{1}{2} m \\omega^2 x^2 e^{-\\alpha x^2}\n$$\n$$\n\\hat{H}\\psi_T(x,\\alpha) = \\left(\\frac{\\hbar^2\\alpha}{m} - \\frac{2\\hbar^2\\alpha^2}{m} x^2 + \\frac{1}{2} m \\omega^2 x^2 \\right) e^{-\\alpha x^2}\n$$\nDividing by $\\psi_T(x,\\alpha) = e^{-\\alpha x^2}$ gives the local energy:\n$$\nE_L(x;\\alpha) = \\frac{\\hbar^2\\alpha}{m} + \\left(\\frac{1}{2} m \\omega^2 - \\frac{2\\hbar^2\\alpha^2}{m}\\right)x^2\n$$\nAs per the problem statement, we work in natural units where $\\hbar = 1$. The expression simplifies to:\n$$\nE_L(x;\\alpha) = \\frac{\\alpha}{m} + \\left(\\frac{1}{2} m \\omega^2 - \\frac{2\\alpha^2}{m}\\right)x^2\n$$\nThis is the function to be evaluated at sampled positions $x$.\n\nNext, we address the sampling procedure. The variational energy $E(\\alpha)$ is the expectation value of $E_L(x;\\alpha)$ with respect to the probability density $\\rho_\\alpha(x) \\propto |\\psi_T(x,\\alpha)|^2 = e^{-2\\alpha x^2}$. This density function corresponds to a normal (Gaussian) distribution with mean $\\mu = 0$. The probability density function for a normal distribution $N(\\mu, \\sigma^2)$ is $\\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}$. Comparing the exponential terms for $\\mu=0$:\n$$\n-2\\alpha x^2 = -\\frac{x^2}{2\\sigma^2}\n$$\nFrom this, we deduce the variance of the sampling distribution: $2\\alpha = \\frac{1}{2\\sigma^2}$, which implies $\\sigma^2 = \\frac{1}{4\\alpha}$. The standard deviation is therefore $\\sigma = \\frac{1}{2\\sqrt{\\alpha}}$. This is a critical result: to sample from $\\rho_\\alpha(x)$, one must generate random numbers from a normal distribution with mean $0$ and standard deviation $\\frac{1}{2\\sqrt{\\alpha}}$.\n\nThe numerical algorithm to solve the problem for a given test case $(m, \\omega, \\alpha_{\\min}, \\alpha_{\\max}, N_\\alpha, N_{\\text{samples}}, \\text{seed})$ is as follows:\n$1$. A uniform grid of $N_\\alpha$ values for the parameter $\\alpha$ is constructed over the interval $[\\alpha_{\\min}, \\alpha_{\\max}]$.\n$2$. For each value of $\\alpha$ on this grid, the variational energy $E(\\alpha)$ is estimated.\n$3$. To estimate $E(\\alpha)$, $N_{\\text{samples}}$ independent random variates $\\{x_i\\}$ are drawn from the normal distribution $N(\\mu=0, \\sigma^2 = 1/(4\\alpha))$.\n$4$. For each sample $x_i$, the local energy $E_L(x_i; \\alpha)$ is computed using the derived formula.\n$5$. The estimate for the variational energy is the arithmetic mean of these local energies:\n$$\nE(\\alpha) \\approx \\bar{E}(\\alpha) = \\frac{1}{N_{\\text{samples}}} \\sum_{i=1}^{N_{\\text{samples}}} E_L(x_i; \\alpha)\n$$\n$6$. After computing $\\bar{E}(\\alpha)$ for all $\\alpha$ on the grid, the value $\\alpha_{\\text{opt}}$ that yields the minimum energy $\\bar{E}(\\alpha_{\\text{opt}})$ is identified.\n$7$. The pair $[\\alpha_{\\text{opt}}, \\bar{E}(\\alpha_{\\text{opt}})]$ constitutes the result for the test case.\n\nThe implementation will utilize the `numpy` library for efficient array operations and for its random number generator. A distinct random number generator instance is created for each test case, seeded with the provided value to ensure reproducibility. The final numerical results, $\\alpha_{\\text{opt}}$ and its corresponding energy, are rounded to $6$ decimal places as required. The entire procedure is a direct and robust implementation of the variational principle using fundamental statistical methods.", "answer": "```python\nimport numpy as np\n\ndef run_simulation(m, w, alpha_min, alpha_max, N_alpha, N_samples, seed):\n    \"\"\"\n    Performs Variational Monte Carlo to find the optimal alpha and ground state energy.\n\n    Args:\n        m (float): Mass of the particle.\n        w (float): Angular frequency of the oscillator.\n        alpha_min (float): Minimum of the alpha search range.\n        alpha_max (float): Maximum of the alpha search range.\n        N_alpha (int): Number of grid points for alpha.\n        N_samples (int): Number of samples for Monte Carlo integration.\n        seed (int): Seed for the random number generator.\n\n    Returns:\n        list: A two-element list containing the optimal alpha and the minimum energy.\n    \"\"\"\n    # Initialize a random number generator for reproducibility for this case\n    rng = np.random.default_rng(seed)\n\n    # Create the grid of alpha values\n    alpha_grid = np.linspace(alpha_min, alpha_max, N_alpha)\n\n    # Array to store the estimated energies for each alpha\n    estimated_energies = np.empty(N_alpha)\n\n    # Loop over each alpha in the grid\n    for i, alpha in enumerate(alpha_grid):\n        # The sampling distribution is a normal distribution N(0, sigma^2)\n        # where the variance sigma^2 = 1 / (4*alpha).\n        # The standard deviation is sigma = 1 / (2 * sqrt(alpha)).\n        sigma = 1.0 / (2.0 * np.sqrt(alpha))\n\n        # Generate N_samples from the normal distribution\n        x_samples = rng.normal(loc=0.0, scale=sigma, size=N_samples)\n\n        # Calculate the local energy for each sample.\n        # The expression for local energy E_L with hbar = 1 is:\n        # E_L(x;alpha) = alpha/m + (0.5*m*w^2 - 2*alpha^2/m) * x^2\n        # This is computed in a vectorized way for efficiency.\n        kinetic_term = alpha / m\n        potential_term_coeff = 0.5 * m * w**2 - 2.0 * alpha**2 / m\n        local_energies = kinetic_term + potential_term_coeff * np.square(x_samples)\n\n        # The estimated energy E(alpha) is the mean of the local energies\n        estimated_energies[i] = np.mean(local_energies)\n\n    # Find the index of the minimum energy on the grid\n    min_energy_idx = np.argmin(estimated_energies)\n\n    # The optimal alpha and corresponding minimum energy are at that index\n    alpha_opt = alpha_grid[min_energy_idx]\n    min_energy = estimated_energies[min_energy_idx]\n\n    return [alpha_opt, min_energy]\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print the results in the required format.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    # Format: (m, omega, alpha_min, alpha_max, N_alpha, N_samples, seed)\n    test_cases = [\n        (1.0, 1.0, 0.2, 1.0, 41, 50000, 12345),\n        (2.0, 0.5, 0.2, 0.9, 36, 50000, 24680),\n        (0.5, 3.0, 0.3, 1.2, 46, 50000, 98765),\n        (1.0, 2.0, 0.5, 1.5, 26, 5000, 13579)\n    ]\n\n    all_results = []\n    for case in test_cases:\n        result = run_simulation(*case)\n        all_results.append(result)\n\n    # Format the final output string according to the specification:\n    # [[alpha1,E1],[alpha2,E2],...] with no spaces and 6 decimal places.\n    output_parts = [f\"[{alpha:.6f},{energy:.6f}]\" for alpha, energy in all_results]\n    final_output_string = f\"[{','.join(output_parts)}]\"\n\n    print(final_output_string)\n\nsolve()\n```", "id": "2431867"}, {"introduction": "Our final practice moves from the static properties of the oscillator to the fascinating realm of its time evolution. In this simulation [@problem_id:2431890], you will implement the split-operator Fast Fourier Transform (FFT) method, a robust algorithm for solving the time-dependent Schrödinger equation. By modeling a series of frequent projective measurements, you will directly observe the Quantum Zeno Effect, a counter-intuitive phenomenon where observation can inhibit the natural dynamics of a system.", "problem": "You will implement a complete numerical simulation of the Quantum Zeno Effect (QZE) for a one-dimensional quantum harmonic oscillator, starting from the time-dependent Schrödinger equation and using a split-operator algorithm. Work in dimensionless units where Planck’s reduced constant $\\hbar$, mass $m$, and oscillator angular frequency $\\omega$ are set to $\\hbar = m = \\omega = 1$, so that the Hamiltonian is $H = \\frac{p^2}{2} + \\frac{x^2}{2}$. The goal is to show that frequent projective measurements onto the initial state suppress the system’s evolution away from that state.\n\nFundamentals:\n- The time-dependent Schrödinger equation is $i \\frac{\\partial}{\\partial t} \\psi(x,t) = H \\psi(x,t)$ with $H = T + V$, where $T = \\frac{p^2}{2}$ and $V = \\frac{x^2}{2}$.\n- The unitary time evolution operator over a small time step $\\Delta t$ is approximated by $U(\\Delta t) \\approx e^{-i V \\Delta t/2} \\, e^{-i T \\Delta t} \\, e^{-i V \\Delta t/2}$ (second-order symmetric Trotter–Suzuki or split-operator approximation).\n- The kinetic term is diagonal in momentum space, and the potential term is diagonal in position space. Use a Fast Fourier Transform (FFT) to shuttle between these representations.\n\nAlgorithm to implement:\n- Discretize space on a uniform grid $x \\in [-L, L)$ with $N_x$ points and spacing $\\Delta x = 2L/N_x$. Construct the corresponding discrete momentum grid $p$ via the angular wavenumbers given by $k = 2\\pi \\cdot \\text{fftfreq}(N_x, \\Delta x)$, and identify the momentum as $p=k$ since $\\hbar=1$.\n- Initialize a coherent-state-like Gaussian wave packet centered at $(x_0, p_0)$:\n  $$\\psi_0(x) = \\pi^{-1/4} \\exp\\!\\left(-\\frac{(x-x_0)^2}{2}\\right) \\exp\\!\\left(i p_0 x\\right),$$\n  and numerically normalize it using the discrete inner product with $\\Delta x$.\n- Implement the split-operator step for a time increment $\\Delta t$, applying the potential factors in position space and the kinetic factor in momentum space using the Fast Fourier Transform (FFT) and its inverse.\n- To model repeated projective measurements onto the initial state, proceed as follows for a given total time $T$ and an integer number of measurements $N$ at equal intervals $\\Delta t = T/N$:\n  1. For each $j=1,\\dots,N$, starting from the initial state $\\psi_0(x)$, propagate unitarily for $\\Delta t$ to obtain $\\psi_{\\text{pre}}(x)$.\n  2. Compute the complex overlap $c_j = \\langle \\psi_0 | \\psi_{\\text{pre}} \\rangle$ with the discrete inner product $\\langle \\phi | \\psi \\rangle \\approx \\sum_x \\phi^*(x)\\psi(x)\\,\\Delta x$.\n  3. Update the cumulative survival probability by multiplying by $|c_j|^2$.\n  4. Apply the measurement by replacing the post-measurement state with the normalized projection onto the initial state, i.e., reset the state to $\\psi_0(x)$.\n- Report the cumulative survival probability after $N$ measurements. All probabilities are dimensionless; report results as decimals rounded to six digits after the decimal point.\n\nNumerical specification:\n- Use $N_x = 2048$ and $L = 12.0$. Use FFTs with orthonormalization to maintain numerical unitarity.\n- Use the same spatial grid and operators for all test cases.\n\nTest suite:\nFor each parameter set $(T, N, x_0, p_0)$ below, compute the cumulative survival probability after $N$ projective measurements as described. All quantities are dimensionless. The program must produce a single line of output containing the results for all test cases, in order, as a comma-separated list enclosed in square brackets, with each float rounded to six decimal places.\n\n- Case $1$: $T = 1.0$, $N = 1$, $x_0 = 1.0$, $p_0 = 0.0$.\n- Case $2$: $T = 1.0$, $N = 10$, $x_0 = 1.0$, $p_0 = 0.0$.\n- Case $3$: $T = 1.0$, $N = 50$, $x_0 = 1.0$, $p_0 = 0.0$.\n- Case $4$: $T = 1.0$, $N = 200$, $x_0 = 1.0$, $p_0 = 0.0$.\n- Case $5$: $T = 1.0$, $N = 50$, $x_0 = 0.0$, $p_0 = 1.0$.\n- Case $6$: $T = 0.0$, $N = 10$, $x_0 = 1.0$, $p_0 = 0.0$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,\\dots,r_6]$), where each $r_i$ is the survival probability for case $i$ rounded to six decimal places.", "solution": "The problem as stated is subjected to validation and is found to be scientifically sound, well-posed, and internally consistent. It presents a standard exercise in computational quantum physics. We shall proceed with the derivation and implementation of the solution.\n\nThe fundamental equation governing the dynamics of the quantum system is the time-dependent Schrödinger equation (TDSE):\n$$\ni \\hbar \\frac{\\partial}{\\partial t} \\psi(x,t) = H \\psi(x,t)\n$$\nGiven the problem's dimensionless units where $\\hbar=m=\\omega=1$, the Hamiltonian for the one-dimensional quantum harmonic oscillator is:\n$$\nH = \\frac{p^2}{2m} + \\frac{1}{2}m\\omega^2 x^2 \\rightarrow H = \\frac{p^2}{2} + \\frac{x^2}{2}\n$$\nHere, $p = -i \\frac{\\partial}{\\partial x}$ is the momentum operator. The Hamiltonian is separated into a kinetic energy term $T = \\frac{p^2}{2}$ and a potential energy term $V = \\frac{x^2}{2}$, such that $H = T + V$.\n\nThe formal solution to the TDSE for a time-independent Hamiltonian is given by the application of a unitary time-evolution operator, $U(t) = e^{-iHt/\\hbar}$. In our units, this becomes $U(t) = e^{-iHt}$. For a small time step $\\Delta t$, the state evolves as $\\psi(x, t+\\Delta t) = e^{-iH\\Delta t} \\psi(x,t)$.\n\nSince the kinetic and potential operators, $T$ and $V$, do not commute ($[T, V] \\neq 0$), the exponential of their sum cannot be simply factored. We employ a second-order symmetric Trotter-Suzuki decomposition, also known as the split-operator method, to approximate the evolution operator:\n$$\nU(\\Delta t) = e^{-i(T+V)\\Delta t} \\approx e^{-iV\\Delta t/2} e^{-iT\\Delta t} e^{-iV\\Delta t/2} + \\mathcal{O}(\\Delta t^3)\n$$\nThis approximation is unitary and accurate to second order in $\\Delta t$. Its numerical implementation relies on the fact that the potential operator $V$ is diagonal in the position basis $\\{|x\\rangle\\}$, while the kinetic operator $T$ is diagonal in the momentum basis $\\{|p\\rangle\\}$. We can efficiently switch between these bases using the Fast Fourier Transform (FFT) and its inverse. The FFT algorithm connects the discretized position representation $\\psi(x_j)$ with the discretized momentum (wavenumber) representation $\\tilde{\\psi}(p_k)$. Use of an orthonormal FFT (`norm=\"ortho\"`) is specified, which ensures the discrete version of Parseval's theorem holds and the transformation is unitary, preserving the norm of the state vector.\n\nThe algorithm for a single time step $\\Delta t$ proceeds as follows:\n1.  Apply the first half-step potential evolution in position space: $\\psi'(x) = e^{-iV(x)\\Delta t/2} \\psi(x)$.\n2.  Transform the state to momentum space using the FFT: $\\tilde{\\psi'}(p) = \\text{FFT}[\\psi'(x)]$.\n3.  Apply the full kinetic evolution in momentum space: $\\tilde{\\psi''}(p) = e^{-iT(p)\\Delta t} \\tilde{\\psi'}(p)$.\n4.  Transform the state back to position space using the inverse FFT: $\\psi''(x) = \\text{iFFT}[\\tilde{\\psi''}(p)]$.\n5.  Apply the second half-step potential evolution in position space: $\\psi(x, t+\\Delta t) = e^{-iV(x)\\Delta t/2} \\psi''(x)$.\n\nThe computational grid is defined over a spatial domain $x \\in [-L, L)$ with $N_x$ points, leading to a grid spacing of $\\Delta x = 2L/N_x$. The corresponding momentum grid is constructed from the angular wavenumbers $k = 2\\pi \\cdot \\text{fftfreq}(N_x, \\Delta x)$, with $p=k$ in our units.\n\nThe initial state is a normalized Gaussian wave packet, a coherent state of the harmonic oscillator:\n$$\n\\psi_0(x) = C \\exp\\left(-\\frac{(x-x_0)^2}{2}\\right) \\exp\\left(i p_0 x\\right)\n$$\nThe analytical normalization constant is $C = \\pi^{-1/4}$, but for numerical implementation, we compute the state on the discrete grid and normalize it using the discrete inner product $\\langle \\phi | \\psi \\rangle = \\sum_{j} \\phi^*(x_j) \\psi(x_j) \\Delta x$. The norm is $\\|\\psi\\| = \\sqrt{\\langle\\psi|\\psi\\rangle}$, and the normalized state is $\\psi_0(x) / \\|\\psi_0\\|$.\n\nThe Quantum Zeno Effect (QZE) simulation involves repeated projective measurements. For a total time $T$ and $N$ measurements, the time between measurements is $\\Delta t = T/N$. The specified protocol is as follows: for each of the $N$ intervals, the system starts in the initial state $\\psi_0$, evolves for a time $\\Delta t$ to a state $\\psi_{\\text{pre}} = U(\\Delta t)\\psi_0$, and is then projected back onto $\\psi_0$. The probability of the system \"surviving\" this single step (i.e., being found in the state $\\psi_0$ after evolution) is $P_{\\Delta t} = |\\langle\\psi_0|\\psi_{\\text{pre}}\\rangle|^2 = |\\langle\\psi_0|U(\\Delta t)|\\psi_0\\rangle|^2$.\n\nSince the procedure specifies that each of the $N$ measurement cycles begins from the same initial state $\\psi_0$, the survival probability for each cycle is identical. Therefore, the cumulative survival probability after $N$ such measurements is the product of the individual probabilities, which simplifies to $(P_{\\Delta t})^N$.\n\nThe computational task for each test case $(T, N, x_0, p_0)$ is thus:\n1.  If $T=0$, the survival probability is exactly $1$, as $\\Delta t=0$ and $U(0)=\\mathbb{I}$.\n2.  If $T>0$, calculate $\\Delta t = T/N$.\n3.  Construct the spatial grid $x$ and momentum grid $p$.\n4.  Construct and numerically normalize the initial state $\\psi_0(x)$.\n5.  Construct the discrete evolution operators $e^{-iV(x)\\Delta t/2}$ and $e^{-iT(p)\\Delta t}$.\n6.  Apply the split-operator method once to evolve $\\psi_0$ for time $\\Delta t$, yielding $\\psi_{\\text{pre}}$.\n7.  Calculate the single-step survival probability $P_{\\Delta t} = |\\langle\\psi_0|\\psi_{\\text{pre}}\\rangle|^2$.\n8.  The final result is $(P_{\\Delta t})^N$.\n\nThis procedure will demonstrate the QZE: as $N$ increases for a fixed $T$, $\\Delta t$ decreases, $U(\\Delta t)$ approaches the identity operator, $P_{\\Delta t}$ approaches $1$, and the total survival probability $(P_{\\Delta t})^N$ approaches a limit greater than the survival probability for a single, uninterrupted evolution over time $T$. For very large $N$, this limit is $1$, indicating that frequent measurement freezes the system's evolution.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the survival probability of a quantum harmonic oscillator\n    under repeated projective measurements (Quantum Zeno Effect).\n    \"\"\"\n\n    # Numerical specification\n    Nx = 2048\n    L = 12.0\n\n    # Test suite from the problem statement\n    test_cases = [\n        # (T, N, x_0, p_0)\n        (1.0, 1, 1.0, 0.0),\n        (1.0, 10, 1.0, 0.0),\n        (1.0, 50, 1.0, 0.0),\n        (1.0, 200, 1.0, 0.0),\n        (1.0, 50, 0.0, 1.0),\n        (0.0, 10, 1.0, 0.0),\n    ]\n\n    # Set up spatial and momentum grids\n    dx = 2 * L / Nx\n    x = np.linspace(-L, L, Nx, endpoint=False)\n    # In our units (hbar=1), p = k = 2*pi*f\n    p = 2 * np.pi * np.fft.fftfreq(Nx, dx)\n\n    # Define potential and kinetic energy functions\n    V_x = 0.5 * x**2\n    T_p = 0.5 * p**2\n    \n    results = []\n\n    for T, N, x0, p0 in test_cases:\n        # Trivial case: no time evolution\n        if T == 0.0:\n            results.append(1.0)\n            continue\n        \n        # Calculate time step for evolution between measurements\n        dt = T / N\n\n        # Construct initial state psi_0 (unnormalized)\n        psi0_unnormalized = np.exp(-0.5 * (x - x0)**2) * np.exp(1j * p0 * x)\n        \n        # Numerically normalize the initial state\n        norm_sq = np.sum(np.abs(psi0_unnormalized)**2) * dx\n        psi0 = psi0_unnormalized / np.sqrt(norm_sq)\n\n        # Construct split-operator factors for one time step dt\n        V_op_half = np.exp(-1j * V_x * dt / 2.0)\n        T_op = np.exp(-1j * T_p * dt)\n\n        # --- Single step of unitary evolution ---\n        # 1. Apply first half-potential step\n        psi_evolved = V_op_half * psi0\n        \n        # 2. FFT to momentum space\n        psi_evolved = np.fft.fft(psi_evolved, norm=\"ortho\")\n        \n        # 3. Apply kinetic step\n        psi_evolved = T_op * psi_evolved\n        \n        # 4. Inverse FFT back to position space\n        psi_evolved = np.fft.ifft(psi_evolved, norm=\"ortho\")\n        \n        # 5. Apply second half-potential step\n        psi_pre = V_op_half * psi_evolved\n\n        #\n        # --- Calculate cumulative survival probability ---\n        #\n        # Survival probability for a single interval dt\n        # P(dt) = |<psi_0|U(dt)|psi_0>|^2\n        overlap = np.vdot(psi0, psi_pre) * dx\n        prob_single_step = np.abs(overlap)**2\n\n        # Cumulative probability after N measurements is (P(dt))^N\n        # due to the reset to psi_0 at each step.\n        cumulative_prob = prob_single_step ** N\n\n        results.append(cumulative_prob)\n\n    # Format the final output as specified\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\n\nsolve()\n```", "id": "2431890"}]}