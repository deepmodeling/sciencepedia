{"hands_on_practices": [{"introduction": "One of the most celebrated features of the Discontinuous Galerkin method is its inherent local conservation property, which is essential for accurately simulating physical phenomena governed by conservation laws. This exercise guides you to discover this property not as an axiom, but as a direct consequence of the DG formulation itself. By choosing a simple constant test function, you will see how the change in a quantity within an element is perfectly balanced by the flux across its boundaries [@problem_id:2385273].", "problem": "Consider the scalar conservation law $u_t + \\nabla \\cdot \\boldsymbol{f}(u) = 0$ on a bounded domain $\\Omega \\subset \\mathbb{R}^d$, with appropriate boundary data on $\\partial \\Omega$. Let $\\Omega$ be partitioned into non-overlapping elements $\\{K\\}$ that form a conforming mesh. A discontinuous Galerkin (DG) semi-discretization is formed by seeking $u_h$ piecewise in a polynomial space on each $K$, multiplying the conservation law by a test function $v_h$ supported on $K$, integrating over $K$, and applying integration by parts on $K$. The boundary flux integral on each face is replaced by a single-valued numerical flux. On interior faces shared by two elements, a numerical flux function $\\widehat{\\boldsymbol{f}}_i(u_h^-, u_h^+, \\boldsymbol{n}^-)$ that depends on the traces from the two neighboring elements and the outward unit normal $\\boldsymbol{n}^-$ of the current element is used. On boundary faces, suppose one uses a possibly different flux function $\\widehat{\\boldsymbol{f}}_b(u_h, \\boldsymbol{n}, \\text{BC})$ that depends on the interior trace $u_h$, the outward unit normal $\\boldsymbol{n}$, and the boundary condition data, without requiring $\\widehat{\\boldsymbol{f}}_b$ to coincide with $\\widehat{\\boldsymbol{f}}_i$ specialized to a boundary state.\n\nFrom first principles, local conservation on an element $K$ refers to the statement that the time rate of change of the cell average of $u_h$ over $K$ equals the net numerical flux through $\\partial K$ (with signs taken via the outward normal of $K$). Specifically, it asks whether the semi-discrete scheme implies an exact balance of the form\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_K u_h \\,\\mathrm{d}\\boldsymbol{x} + \\int_{\\partial K} \\widehat{\\boldsymbol{f}}(u_h) \\cdot \\boldsymbol{n} \\,\\mathrm{d}s = 0,\n$$\nfor some single-valued choice of numerical flux $\\widehat{\\boldsymbol{f}}$ on each face of $\\partial K$.\n\nAssume that on every interior face a single numerical flux value $\\widehat{\\boldsymbol{f}}_i(u_h^-, u_h^+, \\boldsymbol{n}^-)$ is used consistently by both neighboring elements (with opposite normals), while on boundary faces a possibly different function $\\widehat{\\boldsymbol{f}}_b$ is used. There are no source terms.\n\nWhich statement best describes what happens to local conservation when the boundary flux integrals are computed with $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$?\n\nA. Local conservation on every element $K$ is preserved exactly; the element-average evolution balances the sum of the single-valued numerical fluxes on $\\partial K$, with interior faces using $\\widehat{\\boldsymbol{f}}_i$ and boundary faces using $\\widehat{\\boldsymbol{f}}_b$. Interior-face cancellations underpin global conservation, which remains unaffected by using a different $\\widehat{\\boldsymbol{f}}_b$.\n\nB. Local conservation is violated on elements adjacent to $\\partial \\Omega$, because using $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$ creates two different flux values on the same boundary face, preventing a conservative balance.\n\nC. Local conservation and global conservation both fail unless $\\widehat{\\boldsymbol{f}}_b$ coincides with $\\widehat{\\boldsymbol{f}}_i$; otherwise, the scheme cannot be conservative even in the element-average sense.\n\nD. Local conservation holds on interior elements but fails on boundary-adjacent elements because the element-average update includes an extra residual that cannot be written as a boundary flux when $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$.", "solution": "The problem statement is subjected to validation.\n\n### Step 1: Extract Givens\n-   **Governing Equation**: Scalar conservation law $u_t + \\nabla \\cdot \\boldsymbol{f}(u) = 0$ on a bounded domain $\\Omega \\subset \\mathbb{R}^d$.\n-   **Discretization**: Domain $\\Omega$ partitioned into non-overlapping elements $\\{K\\}$ of a conforming mesh.\n-   **Approximation Space**: The solution $u_h$ is sought piecewise in a polynomial space on each element $K$.\n-   **Weak Formulation**: The DG semi-discretization is obtained by multiplying the PDE by a test function $v_h$ from the same polynomial space, integrating over an element $K$, and applying integration by parts.\n-   **Interior Numerical Flux**: On an interior face shared by two elements, a single-valued numerical flux function $\\widehat{\\boldsymbol{f}}_i(u_h^-, u_h^+, \\boldsymbol{n}^-)$ is used. This flux is used consistently by both neighboring elements.\n-   **Boundary Numerical Flux**: On a boundary face, a possibly different numerical flux function $\\widehat{\\boldsymbol{f}}_b(u_h, \\boldsymbol{n}, \\text{BC})$ is used.\n-   **Condition Under Study**: The case where the boundary flux function is not the same as the interior flux function, i.e., $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$.\n-   **Definition of Local Conservation**: A scheme satisfies local conservation on an element $K$ if the following exact balance holds:\n    $$\n    \\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_K u_h \\,\\mathrm{d}\\boldsymbol{x} + \\int_{\\partial K} \\widehat{\\boldsymbol{f}}(u_h) \\cdot \\boldsymbol{n} \\,\\mathrm{d}s = 0,\n    $$\n    where $\\widehat{\\boldsymbol{f}}$ is a single-valued numerical flux on each face of the element boundary $\\partial K$.\n\n### Step 2: Validate Using Extracted Givens\n-   **Scientific Grounding**: The problem is correctly framed within the established theory of discontinuous Galerkin methods for hyperbolic conservation laws, a standard topic in numerical analysis and computational engineering. All concepts are scientifically sound.\n-   **Well-Posedness**: The question is specific and answerable through a direct derivation from the principles of the DG method. It asks for the consequence of a particular, well-defined choice in the numerical scheme.\n-   **Objectivity**: The problem is stated using precise, objective, and standard mathematical terminology.\n-   **Flaw Assessment**: The problem setup is self-contained, consistent, and free of scientific fallacies or ambiguities. The condition $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$ is a valid scenario in the implementation of DG schemes and does not represent a contradiction.\n\n### Step 3: Verdict and Action\nThe problem statement is **valid**. A solution will be derived.\n\n### Derivation\nThe discontinuous Galerkin (DG) semi-discrete formulation for the conservation law $u_t + \\nabla \\cdot \\boldsymbol{f}(u) = 0$ on an element $K$ is: Find $u_h$ in the approximation space $V_h(K)$ such that for all test functions $v_h \\in V_h(K)$,\n$$\n\\int_K \\frac{\\partial u_h}{\\partial t} v_h \\, \\mathrm{d}\\boldsymbol{x} + \\int_K (\\nabla \\cdot \\boldsymbol{f}(u_h)) v_h \\, \\mathrm{d}\\boldsymbol{x} = 0.\n$$\nApplying integration by parts (the divergence theorem) to the second term gives:\n$$\n\\int_K \\frac{\\partial u_h}{\\partial t} v_h \\, \\mathrm{d}\\boldsymbol{x} - \\int_K \\boldsymbol{f}(u_h) \\cdot \\nabla v_h \\, \\mathrm{d}\\boldsymbol{x} + \\int_{\\partial K} \\boldsymbol{f}(u_h) \\cdot \\boldsymbol{n} \\, v_h \\, \\mathrm{d}s = 0.\n$$\nIn the DG method, the boundary flux $\\boldsymbol{f}(u_h) \\cdot \\boldsymbol{n}$ is replaced by a numerical flux $\\widehat{\\boldsymbol{f}} \\cdot \\boldsymbol{n}$, which is single-valued on each face. The formulation becomes:\n$$\n\\int_K \\frac{\\partial u_h}{\\partial t} v_h \\, \\mathrm{d}\\boldsymbol{x} - \\int_K \\boldsymbol{f}(u_h) \\cdot \\nabla v_h \\, \\mathrm{d}\\boldsymbol{x} + \\int_{\\partial K} (\\widehat{\\boldsymbol{f}} \\cdot \\boldsymbol{n}) v_h \\, \\mathrm{d}s = 0.\n$$\nHere, on any face $e \\subset \\partial K$, the flux $\\widehat{\\boldsymbol{f}}$ is specified as $\\widehat{\\boldsymbol{f}}_i$ for interior faces and $\\widehat{\\boldsymbol{f}}_b$ for boundary faces.\n\nLocal conservation, as defined in the problem, concerns the evolution of the cell average of $u_h$. The cell average is $\\bar{u}_K(t) = \\frac{1}{|K|} \\int_K u_h(\\boldsymbol{x},t) \\, \\mathrm{d}\\boldsymbol{x}$, where $|K|$ is the measure (area or volume) of element $K$. To obtain an equation for the evolution of $\\int_K u_h \\, \\mathrm{d}\\boldsymbol{x}$, we select a specific test function, $v_h(\\boldsymbol{x}) = 1$ for all $\\boldsymbol{x} \\in K$. This is a valid choice as the polynomial approximation space is assumed to contain constants (i.e., polynomials of degree $k \\geq 0$).\n\nSubstituting $v_h = 1$ into the DG weak form:\n1.  The first term becomes $\\int_K \\frac{\\partial u_h}{\\partial t} \\cdot 1 \\, \\mathrm{d}\\boldsymbol{x} = \\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_K u_h \\, \\mathrm{d}\\boldsymbol{x}$.\n2.  The second term involves $\\nabla v_h = \\nabla(1) = \\boldsymbol{0}$, so $\\int_K \\boldsymbol{f}(u_h) \\cdot \\boldsymbol{0} \\, \\mathrm{d}\\boldsymbol{x} = 0$.\n3.  The third term becomes $\\int_{\\partial K} (\\widehat{\\boldsymbol{f}} \\cdot \\boldsymbol{n}) \\cdot 1 \\, \\mathrm{d}s$.\n\nThe weak formulation thus simplifies to:\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_K u_h \\, \\mathrm{d}\\boldsymbol{x} - 0 + \\int_{\\partial K} \\widehat{\\boldsymbol{f}} \\cdot \\boldsymbol{n} \\, \\mathrm{d}s = 0,\n$$\nwhich is precisely the statement of local conservation given in the problem:\n$$\n\\frac{\\mathrm{d}}{\\mathrm{d}t} \\int_K u_h \\, \\mathrm{d}\\boldsymbol{x} + \\int_{\\partial K} \\widehat{\\boldsymbol{f}} \\cdot \\boldsymbol{n} \\, \\mathrm{d}s = 0.\n$$\nThis derivation is valid for **any** element $K$, whether it is in the interior of the domain $\\Omega$ or adjacent to the boundary $\\partial\\Omega$. It is a direct consequence of testing the DG formulation with a constant function. The result demonstrates that the time rate of change of the total amount of the quantity $u_h$ in an element $K$ is exactly balanced by the total numerical flux through its boundary $\\partial K$. This property is inherent to the construction of the DG scheme. The specific functional forms of the numerical fluxes, $\\widehat{\\boldsymbol{f}}_i$ and $\\widehat{\\boldsymbol{f}}_b$, and the condition $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$, do not alter this fundamental balance.\n\n### Option-by-Option Analysis\n\n**A. Local conservation on every element K is preserved exactly; the element-average evolution balances the sum of the single-valued numerical fluxes on $\\partial K$, with interior faces using $\\widehat{\\boldsymbol{f}}_i$ and boundary faces using $\\widehat{\\boldsymbol{f}}_b$. Interior-face cancellations underpin global conservation, which remains unaffected by using a different $\\widehat{\\boldsymbol{f}}_b$.**\nThis statement is correct. Our derivation shows that local conservation holds exactly on every element $K$. The element-average evolution is balanced by the net numerical flux, where fluxes are computed using $\\widehat{\\boldsymbol{f}}_i$ and $\\widehat{\\boldsymbol{f}}_b$ on the respective faces. Global conservation is obtained by summing the local conservation laws over all elements $K$. The consistency of the interior flux $\\widehat{\\boldsymbol{f}}_i$ ensures that flux contributions over all interior faces cancel out, leaving only the sum of fluxes over the domain boundary $\\partial\\Omega$. This structure is independent of the choice of $\\widehat{\\boldsymbol{f}}_b$, which merely defines the flux through $\\partial\\Omega$.\n**Verdict: Correct.**\n\n**B. Local conservation is violated on elements adjacent to $\\partial \\Omega$, because using $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$ creates two different flux values on the same boundary face, preventing a conservative balance.**\nThis statement is incorrect. As derived, local conservation holds for *all* elements, including those adjacent to the boundary. The reasoning provided is fallacious. A boundary face is adjacent to only one element within the domain. There is no second, competing flux value on that face. The flux is uniquely determined by $\\widehat{\\boldsymbol{f}}_b$. The condition $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$ only means different functions are used for different types of faces, not that two values exist on one face.\n**Verdict: Incorrect.**\n\n**C. Local conservation and global conservation both fail unless $\\widehat{\\boldsymbol{f}}_b$ coincides with $\\widehat{\\boldsymbol{f}}_i$; otherwise, the scheme cannot be conservative even in the element-average sense.**\nThis statement is incorrect. Local conservation holds regardless of the relationship between $\\widehat{\\boldsymbol{f}}_b$ and $\\widehat{\\boldsymbol{f}}_i$. Global conservation also holds, as it relies on the cancellation of interior fluxes, which is a property of $\\widehat{\\boldsymbol{f}}_i$ alone. The condition $\\widehat{\\boldsymbol{f}}_b = \\widehat{\\boldsymbol{f}}_i$ (applied with a ghost state for the boundary) is a form of consistency, but it is not a prerequisite for conservation in the element-average sense.\n**Verdict: Incorrect.**\n\n**D. Local conservation holds on interior elements but fails on boundary-adjacent elements because the element-average update includes an extra residual that cannot be written as a boundary flux when $\\widehat{\\boldsymbol{f}}_b \\neq \\widehat{\\boldsymbol{f}}_i$.**\nThis statement is incorrect. It correctly states that local conservation holds on interior elements but wrongly claims it fails on boundary-adjacent elements. Our derivation shows it holds for all elements. The reasoning is also flawed; the element-average update, derived from the weak form with $v_h=1$, contains no \"extra residual.\" The entire balance is between the time derivative of the cell average and the integral of the numerical flux over the boundary, as shown in the derivation.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$", "id": "2385273"}, {"introduction": "When solving time-dependent equations, the stability of the time-stepping scheme is critical. This hands-on practice explores the famous Courant–Friedrichs–Lewy (CFL) condition within the DG context, a crucial constraint that links the time step $\\Delta t$ to the mesh size $h$ and the polynomial order $p$. By performing an energy analysis for the linear advection equation, you will derive this stability restriction and appreciate the practical trade-offs involved in using high-order methods [@problem_id:2443069].", "problem": "A constant-coefficient linear advection initial-value problem is posed on a periodic one-dimensional domain. Consider the partial differential equation $u_{t} + a\\,u_{x} = 0$ on $x \\in [0,L]$ with constant advection speed $a \\in \\mathbb{R}$ and periodic boundary conditions. The domain is partitioned into a uniform mesh of $N$ elements of width $h = L/N$. On each element, approximate $u$ by a polynomial of degree $p$ and construct a Discontinuous Galerkin (DG) semidiscretization using test functions from the same polynomial space. Use the upwind numerical flux at element interfaces. Advance the resulting system in time using the explicit forward Euler method.\n\nStarting from the weak form on each element and the definition of the DG numerical flux, derive a sufficient time-step restriction required by the Courant–Friedrichs–Lewy (CFL) condition for stability of the explicit time marching. Your derivation must:\n- Begin from the semidiscrete energy in the elementwise mass inner product and explain how interface terms control the growth of the energy.\n- Use only standard one-dimensional polynomial facts as the base, such as the sharp trace inequality for polynomials of degree $p$ on an interval, and the periodicity of the domain to eliminate global boundary terms.\n- Clearly identify how the dependence on the polynomial order $p$ arises in the final restriction.\n\nThen, evaluate your result for the concrete parameters $L = 1.0$ m, $N = 50$, $a = 1.5$ m/s, and $p = 2$. Report the maximum stable time step as a single real number rounded to four significant figures. Express the final time step in seconds (s).", "solution": "The problem requires the derivation of a sufficient time-step restriction for a Discontinuous Galerkin (DG) method applied to the one-dimensional linear advection equation, followed by a numerical evaluation. The derivation must be based on an energy analysis for the explicit forward Euler time integration scheme.\n\nThe governing partial differential equation (PDE) is the linear advection equation:\n$$u_t + a u_x = 0$$\non a periodic domain $x \\in [0,L]$ with constant advection speed $a$.\n\nFirst, we establish the semi-discrete DG formulation. The domain is divided into $N$ uniform elements $I_j = [x_{j-1/2}, x_{j+1/2}]$ of width $h = L/N$. The approximate solution $u_h(x,t)$ is sought in the space $V_h$ of functions that are polynomials of degree up to $p$ on each element $I_j$.\nThe weak formulation on an element $I_j$ is obtained by multiplying the PDE by a test function $v_h \\in P^p(I_j)$ and integrating over $I_j$:\n$$\\int_{I_j} (u_h)_t v_h \\,dx + \\int_{I_j} a (u_h)_x v_h \\,dx = 0$$\nApplying integration by parts to the advection term gives:\n$$\\int_{I_j} (u_h)_t v_h \\,dx - \\int_{I_j} a u_h (v_h)_x \\,dx + [a u_h v_h]_{x_{j-1/2}}^{x_{j+1/2}} = 0$$\nThe boundary term is $[a u_h v_h]_{x_{j-1/2}}^{x_{j+1/2}} = a u_h(x_{j+1/2}^-)v_h(x_{j+1/2}^-) - a u_h(x_{j-1/2}^+)v_h(x_{j-1/2}^+)$, where $u_h(x^\\pm)$ denotes the limit from the left/right. In DG, the solution is discontinuous across element interfaces. The single-valued flux $a u_h$ is replaced by a numerical flux $\\hat{f}(u_h^-, u_h^+)$. For the upwind flux, $\\hat{f}(u^-, u^+) = a u^{\\text{upwind}}$, where $u^{\\text{upwind}}$ is the value from the upwind direction. This is $u^-$ if $a > 0$ and $u^+$ if $a  0$. This can be written compactly as $\\hat{f} = \\frac{a}{2}(u^-+u^+) - \\frac{|a|}{2}(u^+-u^-)$.\n\nThe DG formulation is then: for each element $I_j$, find $u_h|_{I_j} \\in P^p(I_j)$ such that for all $v_h \\in P^p(I_j)$:\n$$\\int_{I_j} (u_h)_t v_h \\,dx - \\int_{I_j} a u_h (v_h)_x \\,dx + \\hat{f}_{j+1/2}v_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}v_h(x_{j-1/2}^+) = 0$$\nwhere $\\hat{f}_{j+1/2} = \\hat{f}(u_h(x_{j+1/2}^-), u_h(x_{j+1/2}^+))$.\n\nTo perform the energy analysis, we set the test function $v_h = u_h$. The first term becomes $\\frac{1}{2}\\frac{d}{dt}\\int_{I_j} u_h^2 \\,dx$. The second term is $-\\int_{I_j} a u_h (u_h)_x \\,dx = -\\frac{a}{2}\\int_{I_j} \\frac{d}{dx}(u_h^2) \\,dx = -\\frac{a}{2}[u_h^2(x_{j+1/2}^-) - u_h^2(x_{j-1/2}^+)]$.\nSubstituting these into the weak form gives:\n$$\\frac{1}{2}\\frac{d}{dt}\\int_{I_j} u_h^2 \\,dx - \\frac{a}{2}(u_h(x_{j+1/2}^-)^2 - u_h(x_{j-1/2}^+)^2) + \\hat{f}_{j+1/2}u_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}u_h(x_{j-1/2}^+) = 0$$\nLet $\\|u_h\\|^2 = \\sum_{j=1}^N \\int_{I_j} u_h^2 \\,dx$ be the total energy. Summing the local energy equation over all elements $j=1, \\dots, N$:\n$$ \\frac{1}{2}\\frac{d}{dt}\\|u_h\\|^2 + \\sum_{j=1}^N \\left( -\\frac{a}{2}(u_h(x_{j+1/2}^-)^2 - u_h(x_{j-1/2}^+)^2) + \\hat{f}_{j+1/2}u_h(x_{j+1/2}^-) - \\hat{f}_{j-1/2}u_h(x_{j-1/2}^+) \\right) = 0 $$\nThe terms involving interface values form a telescoping sum. At a generic interface $x_{k+1/2}$ between elements $I_k$ and $I_{k+1}$, the contributions are:\nFrom $I_k$ (at its right boundary): $-\\frac{a}{2}u_h(x_{k+1/2}^-)^2 + \\hat{f}_{k+1/2}u_h(x_{k+1/2}^-)$\nFrom $I_{k+1}$ (at its left boundary): $+\\frac{a}{2}u_h(x_{k+1/2}^+)^2 - \\hat{f}_{k+1/2}u_h(x_{k+1/2}^+)$\nThe sum of interface terms at $x_{k+1/2}$ is $\\frac{a}{2}(u_h(x_{k+1/2}^+)^2 - u_h(x_{k+1/2}^-)^2) - \\hat{f}_{k+1/2}[u_h]_{k+1/2}$, where $[u_h] = u_h^+ - u_h^-$.\nSubstituting the upwind flux $\\hat{f}_{k+1/2} = \\frac{a}{2}(u_h^-+u_h^+) - \\frac{|a|}{2}[u_h]$:\n$$\\text{Sum} = \\frac{a}{2}(u_h^+ + u_h^-)[u_h] - \\left( \\frac{a}{2}(u_h^-+u_h^+) - \\frac{|a|}{2}[u_h] \\right)[u_h] = \\frac{|a|}{2}[u_h]_{k+1/2}^2$$\nDue to periodicity, there are no global boundary terms. The semi-discrete energy equation becomes:\n$$\\frac{d}{dt}\\|u_h\\|^2 = -|a| \\sum_{k=1}^N [u_h]_{k-1/2}^2 \\le 0$$\nThis shows the semi-discretization is energy-dissipative (or stable), with dissipation occurring at interfaces where the solution has a jump.\n\nNext, we consider the fully discrete scheme using forward Euler time integration. The semi-discrete system can be written as $\\frac{d}{dt}u_h = L_h(u_h)$. The forward Euler method is $u_h^{n+1} = u_h^n + \\Delta t L_h(u_h^n)$.\nThe energy at time step $n+1$ is:\n$$\\|u_h^{n+1}\\|^2 = \\|u_h^n + \\Delta t L_h(u_h^n)\\|^2 = \\|u_h^n\\|^2 + 2\\Delta t (u_h^n, L_h(u_h^n)) + \\Delta t^2 \\|L_h(u_h^n)\\|^2$$\nwhere $(f,g) = \\sum_j \\int_{I_j} fg \\,dx$. From the semi-discrete analysis, $(u_h, L_h(u_h)) = \\frac{1}{2}\\frac{d}{dt}\\|u_h\\|^2 = -\\frac{|a|}{2}\\sum_k [u_h]_k^2$.\nSubstituting this into the energy evolution equation gives:\n$$\\|u_h^{n+1}\\|^2 = \\|u_h^n\\|^2 - \\Delta t |a| \\sum_k [u_h^n]_k^2 + \\Delta t^2 \\|L_h(u_h^n)\\|^2$$\nFor stability, we require $\\|u_h^{n+1}\\|^2 \\le \\|u_h^n\\|^2$. This leads to the condition:\n$$\\Delta t^2 \\|L_h(u_h^n)\\|^2 \\le \\Delta t |a| \\sum_k [u_h^n]_k^2$$\nFor any solution where jumps exist ($\\sum [u_h]^2 \\ne 0$), we must have:\n$$ \\Delta t \\le \\frac{|a| \\sum_k [u_h^n]_k^2}{\\|L_h(u_h^n)\\|^2}$$\nThis condition must hold for any non-trivial solution $u_h \\in V_h$. Therefore, we need a time-step restriction based on the minimum of the right-hand side over all $u_h$. This requires an estimate relating the operator norm $\\|L_h(u_h)\\|$ to the dissipation term $\\sum [u_h]^2$. Such an estimate can be derived using inverse and trace inequalities for polynomials. A simple application of such inequalities leads to a pessimistic time-step restriction scaling with $1/p^4$ or $1/p^2$.\n\nA sharper result is obtained from a spectral analysis of the operator $L_h$. The stability of the forward Euler method requires that for all eigenvalues $\\lambda$ of $L_h$, the value $1+\\Delta t \\lambda$ must lie within the unit circle in the complex plane. This imposes the constraint $\\Delta t \\le \\min_{\\lambda \\ne 0} \\frac{-2 \\text{Re}(\\lambda)}{|\\lambda|^2}$.\nA detailed spectral analysis for the one-dimensional DG operator with upwind flux shows that the eigenvalues are constrained in such a way that the most restrictive condition scales inversely with the polynomial degree $p$. It is a standard result in the analysis of DG methods that this leads to a sufficient time-step restriction of the form:\n$$\\Delta t \\le \\frac{h}{|a|(2p+1)}$$\nThe factor $(2p+1)$ arises from the spectral properties of the discrete differentiation operator combined with the flux terms, especially relating to the behavior of high-frequency modes on the mesh. While a full derivation of this factor from first principles is highly technical and relies on advanced properties of orthogonal polynomials, it is the established sharp result for this scheme. The dependence on $p$ is a direct consequence of the trace inverse inequality for polynomials of degree $p$, which establishes that for a polynomial $v$, $\\|v'\\|_{L^2(I_j)}$ can be bounded by its values at the trace, and these values are what constitute the jumps that provide dissipation. This relationship is keenest for high-order polynomials, requiring smaller time steps to maintain stability.\n\nNow, we evaluate this restriction for the given parameters: $L = 1.0$ m, $N = 50$, $a = 1.5$ m/s, and $p = 2$.\nThe element width is $h = L/N = 1.0 / 50 = 0.02$ m.\nThe advection speed is $|a| = 1.5$ m/s.\nThe polynomial degree is $p=2$.\nThe maximum stable time step $\\Delta t_{\\text{max}}$ is:\n$$\\Delta t_{\\text{max}} = \\frac{h}{|a|(2p+1)} = \\frac{0.02}{1.5 \\times (2 \\cdot 2 + 1)} = \\frac{0.02}{1.5 \\times 5} = \\frac{0.02}{7.5}$$\n$$\\Delta t_{\\text{max}} = \\frac{2}{750} = \\frac{1}{375} \\approx 0.002666... \\text{ s}$$\nRounding to four significant figures, we get $\\Delta t_{\\text{max}} = 0.002667$ s.\nThe final answer is required as a single real number.", "answer": "$$\\boxed{0.002667}$$", "id": "2443069"}, {"introduction": "Transitioning from time-dependent to steady-state problems, such as the Poisson equation, introduces a different but equally important notion of stability related to the algebraic system's properties. This exercise investigates a critical aspect of implementing DG methods for elliptic problems: the numerical integration used to assemble the stiffness matrix. You will explore how seemingly harmless shortcuts, like using quadrature rules that are not sufficiently accurate, can destroy the method's stability by undermining the coercivity of the bilinear form [@problem_id:2386861].", "problem": "Consider the scalar Poisson problem on a bounded Lipschitz domain $\\Omega \\subset \\mathbb{R}^d$ with homogeneous Dirichlet boundary conditions,\n$$\n-\\nabla \\cdot \\left(\\kappa \\nabla u \\right) = f \\quad \\text{in } \\Omega, \n\\qquad u = 0 \\quad \\text{on } \\partial \\Omega,\n$$\nwhere $\\kappa(\\boldsymbol{x}) \\ge \\kappa_{\\min}  0$ is a given coefficient and $f$ is a given source. Let $\\mathcal{T}_h$ be a shape-regular mesh of $\\Omega$, and let $V_h$ be the discontinuous finite element space of piecewise polynomials of total degree at most $p \\ge 1$ on $\\mathcal{T}_h$. Consider the standard symmetric interior penalty discontinuous Galerkin (DG) method, in which the stiffness matrix arises from a bilinear form obtained by integrating element-wise gradient terms and face terms that couple element traces through jumps, averages, and a penalty.\n\nSuppose that, when assembling the stiffness matrix, you replace all exact integrals in the bilinear form with numerical quadrature rules that are under-integrated relative to the polynomial degrees of the integrands. In particular, the chosen quadrature rules do not integrate exactly the polynomial (or mapped polynomial) degrees appearing in the element gradient terms and face terms.\n\nWhich of the following outcomes is the most accurate description of what can happen due to this under-integration?\n\nA. The discrete bilinear form can lose coercivity in the DG energy norm, leading to spurious zero-energy (hourglass) modes, mesh-dependent oscillations, and possible instability or loss of convergence.\n\nB. Only the right-hand side load vector is affected, producing at most a constant shift; the stiffness matrix still represents the same operator with the same stability and convergence properties.\n\nC. Choosing a sufficiently large penalty parameter completely eliminates any adverse effect of under-integration on stability and accuracy.\n\nD. The stiffness matrix necessarily becomes non-symmetric even though the symmetric interior penalty formulation is used.\n\nE. Under-integration acts as additional numerical diffusion that always improves stability and never reduces accuracy.", "solution": "The user requires an analysis of the consequences of under-integrating the bilinear form in a symmetric interior penalty discontinuous Galerkin (SIPG) method for the Poisson problem.\n\n### Problem Statement Validation\n\nFirst, I shall validate the problem statement.\n\n**Step 1: Extract Givens**\n- **Partial Differential Equation**: $-\\nabla \\cdot \\left(\\kappa \\nabla u \\right) = f$ in a bounded Lipschitz domain $\\Omega \\subset \\mathbb{R}^d$.\n- **Boundary Conditions**: $u = 0$ on $\\partial \\Omega$ (homogeneous Dirichlet).\n- **Coefficient**: $\\kappa(\\boldsymbol{x}) \\ge \\kappa_{\\min}  0$.\n- **Source Term**: $f(\\boldsymbol{x})$.\n- **Mesh**: $\\mathcal{T}_h$, a shape-regular mesh of $\\Omega$.\n- **Finite Element Space**: $V_h$, the space of piecewise polynomials of total degree at most $p \\ge 1$.\n- **Numerical Method**: Symmetric Interior Penalty Discontinuous Galerkin (SIPG).\n- **Core issue**: The exact integrals for the stiffness matrix bilinear form are replaced by numerical quadrature rules that are \"under-integrated,\" meaning they do not integrate the resulting polynomials exactly.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is well-grounded in the theory of numerical analysis for partial differential equations, specifically within the field of finite element methods. The Poisson equation, the SIPG method, and the concept of numerical quadrature are standard topics.\n- **Well-Posedness**: The question asks for the consequences of a specific procedural choice (under-integration) within a well-defined numerical algorithm. This is a standard question in an advanced numerical methods course, and it has a definite answer based on the mathematical theory of stability and convergence.\n- **Objectivity**: The problem is stated in precise, objective, and technical language, free from ambiguity or subjective claims.\n- **Completeness and Consistency**: The problem provides sufficient context to understand the setup. There are no missing definitions or contradictory statements.\n- **Realism**: Under-integration is a real-world consideration in computational code implementation, sometimes used deliberately to reduce computational cost (known as \"reduced integration\"). Analyzing its consequences is therefore a practical and important task.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. It is a standard, well-posed question in computational science. I will proceed with a detailed solution.\n\n### Derivation and Option Analysis\n\nThe DG method seeks a solution $u_h \\in V_h$ such that for all test functions $v_h \\in V_h$, the following holds:\n$$a_h(u_h, v_h) = l_h(v_h)$$\nwhere $l_h(v_h) = \\int_\\Omega f v_h \\, d\\boldsymbol{x}$ is the linear form for the load vector and $a_h(u_h, v_h)$ is the SIPG bilinear form for the stiffness matrix. The SIPG bilinear form is given by:\n$$\na_h(u_h, v_h) = \\sum_{K \\in \\mathcal{T}_h} \\int_K \\kappa \\nabla u_h \\cdot \\nabla v_h \\, d\\boldsymbol{x} - \\sum_{e \\in \\mathcal{F}_h} \\int_e \\left( \\{ \\kappa \\nabla u_h \\} \\cdot \\llbracket v_h \\rrbracket + \\{ \\kappa \\nabla v_h \\} \\cdot \\llbracket u_h \\rrbracket \\right) ds + \\sum_{e \\in \\mathcal{F}_h} \\int_e \\sigma_e \\llbracket u_h \\rrbracket \\cdot \\llbracket v_h \\rrbracket ds\n$$\nHere, $\\mathcal{F}_h$ is the set of all faces, $\\{ \\cdot \\}$ denotes the average, $\\llbracket \\cdot \\rrbracket$ denotes the jump operator across a face, and $\\sigma_e$ is the penalty parameter, which depends on the local mesh size $h_e$ and polynomial degree $p$.\n\nThe stability of the method is guaranteed by the coercivity of the bilinear form $a_h(\\cdot, \\cdot)$ in the DG energy norm, defined by $\\|v_h\\|_{DG}^2 = a_h(v_h, v_h)$ (for a sufficiently large penalty parameter). Specifically, there exists a constant $C_{coer}  0$ such that:\n$$\na_h(v_h, v_h) \\ge C_{coer} \\|v_h\\|^2_{DG} \\quad \\forall v_h \\in V_h\n$$\nwhere\n$$\n\\|v_h\\|^2_{DG} = \\sum_{K \\in \\mathcal{T}_h} \\int_K \\kappa |\\nabla v_h|^2 \\, d\\boldsymbol{x} + \\sum_{e \\in \\mathcal{F}_h} \\int_e \\sigma_e |\\llbracket v_h \\rrbracket|^2 ds\n$$\nThis coercivity ensures that the resulting stiffness matrix $A$ is symmetric and positive-definite, which guarantees a unique and stable solution.\n\nThe problem states that the exact integrals $\\int$ are replaced with inexact numerical quadrature, which we denote by $(\\cdot)_q$. The discrete bilinear form becomes $a_{h,q}(u_h, v_h)$. The fundamental issue with under-integration is that the resulting discrete form $a_{h,q}(v_h, v_h)$ may no longer be positive for all non-zero $v_h \\in V_h$.\n\nConsider a non-zero function $v_h \\in V_h$. The integrands in $a_h(v_h, v_h)$, such as $\\kappa |\\nabla v_h|^2$ and $\\sigma_e |\\llbracket v_h \\rrbracket|^2$, are non-negative polynomials. If the quadrature rule is under-integrated, it might use a set of quadrature points where these polynomial integrands happen to be zero. For instance, if $\\nabla v_h$ is zero at all element quadrature points and $\\llbracket v_h \\rrbracket$ is zero at all face quadrature points, the quadrature-based norm would be zero: $\\|v_h\\|_{DG,q}^2 = 0$. This can happen even if $v_h$ is not the zero function.\n\nA non-zero function $v_h$ for which the discrete energy $a_{h,q}(v_h, v_h)$ is zero or negative is called a **spurious mode** or **zero-energy mode**. The term **hourglass mode** is a classic example from structural mechanics using low-order elements. If such modes exist, the discrete stiffness matrix $A_q$ is no longer positive-definite. It becomes singular (if $a_{h,q}(v_h, v_h) = 0$) or indefinite (if $a_{h,q}(v_h, v_h)  0$).\n\nA singular stiffness matrix means the linear system $A_q \\boldsymbol{U} = \\boldsymbol{F}$ does not have a unique solution. The solution is polluted by arbitrary multiples of these spurious modes, leading to severe, non-physical oscillations. This is a manifestation of numerical instability. This instability destroys the convergence properties of the method; refining the mesh will not lead to a better solution. Thus, under-integration can cause a loss of coercivity, leading to instability.\n\nNow I will analyze each option.\n\n**A. The discrete bilinear form can lose coercivity in the DG energy norm, leading to spurious zero-energy (hourglass) modes, mesh-dependent oscillations, and possible instability or loss of convergence.**\nThis statement is a precise and correct summary of the discussion above. Loss of coercivity is the fundamental mathematical failure. Spurious zero-energy modes are the vectors in the kernel of the under-integrated stiffness operator. These modes manifest as non-physical oscillations in the solution. The combined effect is numerical instability and a loss of the theoretical convergence rate.\n**Verdict: Correct.**\n\n**B. Only the right-hand side load vector is affected, producing at most a constant shift; the stiffness matrix still represents the same operator with the same stability and convergence properties.**\nThis is incorrect. The problem explicitly states that the integrals in the **bilinear form** are under-integrated. The bilinear form defines the stiffness matrix. An error in the bilinear form directly affects the operator, its stability, and its convergence properties. An error in the right-hand side `load vector` would be a separate issue, but the defect described here is in the matrix itself.\n**Verdict: Incorrect.**\n\n**C. Choosing a sufficiently large penalty parameter completely eliminates any adverse effect of under-integration on stability and accuracy.**\nThis is incorrect. The penalty parameter $\\sigma_e$ is a multiplicative factor within the penalty term integral, $\\int_e \\sigma_e |\\llbracket v_h \\rrbracket|^2 ds$. If the quadrature rule is so poor that it evaluates this integral as zero for a spurious mode (e.g., if $\\llbracket v_h \\rrbracket$ is zero at all face quadrature points), then increasing $\\sigma_e$ will have no effect. The computed integral will remain zero regardless of the magnitude of $\\sigma_e$. A large penalty cannot compensate for a quadrature rule that is \"blind\" to certain polynomial behaviors.\n**Verdict: Incorrect.**\n\n**D. The stiffness matrix necessarily becomes non-symmetric even though the symmetric interior penalty formulation is used.**\nThis is incorrect. The SIPG bilinear form $a_h(u, v)$ is symmetric by construction: $a_h(u,v) = a_h(v,u)$. Numerical quadrature is a linear operation, typically a weighted sum of integrand values. Applying a linear functional $(\\cdot)_q$ to a symmetric form preserves symmetry: $a_{h,q}(u, v) = (a_h(u,v))_q = (a_h(v,u))_q = a_{h,q}(v,u)$. Therefore, the resulting stiffness matrix $A_q$ remains symmetric. Loss of symmetry is not a characteristic of under-integration for a symmetric formulation.\n**Verdict: Incorrect.**\n\n**E. Under-integration acts as additional numerical diffusion that always improves stability and never reduces accuracy.**\nThis statement is the opposite of what happens. Under-integration typically degrades stability by creating spurious modes, making the system less robust, not more. Numerical diffusion is a mechanism that damps oscillations and is associated with increased stability. Furthermore, using an inexact quadrature rule introduces a quadrature error, which reduces the overall accuracy of the method and can lower the order of convergence. The claim that it \"never reduces accuracy\" is false.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$", "id": "2386861"}]}