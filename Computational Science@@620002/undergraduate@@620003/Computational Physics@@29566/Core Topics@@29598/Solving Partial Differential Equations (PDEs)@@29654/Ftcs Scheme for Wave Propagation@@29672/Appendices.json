{"hands_on_practices": [{"introduction": "This practice sets the stage by examining the fundamental stability properties of the Forward-Time, Centered-Space (FTCS) scheme. Before applying a numerical method, we must understand its limits. This exercise guides you through a von Neumann stability analysis for the FTCS scheme applied to the simplest wave propagation model, the linear advection equation, allowing you to prove analytically that it is unconditionally unstable and explore some surprising consequences for numerical time-reversal. [@problem_id:2396296]", "problem": "Consider the one-dimensional linear advection equation $u_t + c\\,u_x = 0$ on a uniform periodic grid with spatial step $\\Delta x$ and time step $\\Delta t$. Discretize it using the Forward Time Centered Space (FTCS) scheme:\n$$\n\\frac{u_j^{n+1} - u_j^n}{\\Delta t} + c\\,\\frac{u_{j+1}^n - u_{j-1}^n}{2\\,\\Delta x} = 0,\n$$\nwhere $u_j^n$ denotes the numerical approximation to $u(x_j, t_n)$ at grid point $x_j$ and time level $t_n$. Assume periodic boundary conditions and perform a von Neumann stability analysis by substituting a Fourier mode ansatz $u_j^n = \\xi^n e^{i j \\theta}$, where $\\theta \\in [-\\pi,\\pi]$ is the dimensionless discrete wavenumber in radians. Starting from the fundamental definitions of the discrete scheme and the Fourier mode ansatz, derive the complex amplification factor $G(\\theta; c, \\Delta t, \\Delta x)$ (defined by $\\xi = G$) and its magnitude $\\lvert G(\\theta; c, \\Delta t, \\Delta x)\\rvert$ as a function of the Courant number $\\sigma = c\\,\\Delta t/\\Delta x$ and $\\theta$. Then analyze the effect of reversing time by changing the sign of $\\Delta t$ (that is, using $\\Delta t < 0$):\n- Determine whether the instability associated with the FTCS scheme becomes exponential damping when $\\Delta t$ is negative. Base your conclusion on the magnitude $\\lvert G\\rvert$.\n- Determine whether the method is numerically time-reversible, in the sense that one forward time step followed by one backward time step exactly returns the original state for all modes, that is, $G(\\sigma,\\theta)\\,G(-\\sigma,\\theta) = 1$ for all $\\theta$.\n\nYour program must implement these conclusions quantitatively for a small test suite of parameter sets. For each parameter set $(c, \\Delta x, \\Delta t)$, compute the following quantities over all discrete wavenumbers $\\theta \\in [0,\\pi]$ (in radians):\n1. The maximum amplification factor magnitude for forward time stepping: $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)\\rvert$.\n2. The maximum amplification factor magnitude for backward time stepping: $\\max_{\\theta \\in [0,\\pi]} \\lvert G(-\\sigma,\\theta)\\rvert$.\n3. A damping indicator for backward stepping, defined as $1$ if $\\max_{\\theta \\in [0,\\pi]} \\lvert G(-\\sigma,\\theta)\\rvert < 1$ and $0$ otherwise.\n4. A symmetry indicator, defined as $1$ if $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)\\rvert$ equals $\\max_{\\theta \\in [0,\\pi]} \\lvert G(-\\sigma,\\theta)\\rvert$ within a numerical tolerance $\\varepsilon = 10^{-12}$, and $0$ otherwise.\n5. A numerical time-reversibility indicator, defined as $1$ if $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)\\,G(-\\sigma,\\theta) - 1\\rvert < \\varepsilon$ with $\\varepsilon = 10^{-12}$, and $0$ otherwise.\n\nUse the following test suite of parameter sets:\n- Case A (general case): $(c, \\Delta x, \\Delta t) = (1, 1, 0.5)$.\n- Case B (boundary case $\\Delta t = 0$): $(c, \\Delta x, \\Delta t) = (1, 1, 0)$.\n- Case C (boundary case $c = 0$): $(c, \\Delta x, \\Delta t) = (0, 1, 0.5)$.\n- Case D (large Courant magnitude): $(c, \\Delta x, \\Delta t) = (1, 1, 2.0)$.\n\nAngle $\\theta$ must be treated in radians. No physical units are required for the parameters; treat them as nondimensional.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. The result for each case must be a list of the five quantities in the specified order. Therefore, the final output format must be a list of lists, for example, $[ [\\dots], [\\dots], [\\dots], [\\dots] ]$, where each inner list corresponds to one of the four cases in the order A, B, C, D. All boolean indicators should be represented as integers $0$ or $1$. All angles must be in radians. No additional text should be printed by the program.", "solution": "The problem requires a comprehensive stability analysis of the Forward Time Centered Space (FTCS) scheme for the one-dimensional linear advection equation. The analysis will be conducted using the von Neumann method, from which we will derive the amplification factor and its properties. These analytical results will then be used to evaluate the scheme's behavior under specific conditions, including time reversal.\n\nThe linear advection equation is given by:\n$$\n\\frac{\\partial u}{\\partial t} + c \\frac{\\partial u}{\\partial x} = 0\n$$\nThe FTCS discretization of this equation on a uniform grid with spacing $\\Delta x$ and time step $\\Delta t$ is:\n$$\n\\frac{u_j^{n+1} - u_j^n}{\\Delta t} + c\\,\\frac{u_{j+1}^n - u_{j-1}^n}{2\\,\\Delta x} = 0\n$$\nHere, $u_j^n$ is the numerical approximation of the solution $u(x_j, t_n)$ at spatial grid point $j$ and time level $n$.\n\nTo perform the von Neumann stability analysis, we consider the behavior of a single Fourier mode of the solution, represented by the ansatz:\n$$\nu_j^n = \\xi^n e^{i j \\theta}\n$$\nwhere $\\xi$ is the complex amplification factor per time step, and $\\theta = k \\Delta x$ is the dimensionless discrete wavenumber, with $k$ being the continuous wavenumber. Substituting this ansatz into the FTCS scheme yields:\n$$\n\\frac{\\xi^{n+1} e^{i j \\theta} - \\xi^n e^{i j \\theta}}{\\Delta t} + c\\,\\frac{\\xi^n e^{i (j+1) \\theta} - \\xi^n e^{i (j-1) \\theta}}{2\\,\\Delta x} = 0\n$$\nFor a non-trivial solution, we divide by the common factor $\\xi^n e^{i j \\theta}$:\n$$\n\\frac{\\xi - 1}{\\Delta t} + c\\,\\frac{e^{i \\theta} - e^{-i \\theta}}{2\\,\\Delta x} = 0\n$$\nWe define the amplification factor as $G \\equiv \\xi$. Utilizing Euler's identity, $e^{i\\theta} - e^{-i\\theta} = 2i\\sin\\theta$, the equation simplifies to:\n$$\n\\frac{G - 1}{\\Delta t} + c\\,\\frac{2i\\sin\\theta}{2\\,\\Delta x} = 0\n$$\nSolving for $G$ gives:\n$$\nG(\\theta) = 1 - i \\frac{c \\Delta t}{\\Delta x} \\sin\\theta\n$$\nIntroducing the Courant number, $\\sigma = c\\Delta t/\\Delta x$, we obtain the final form of the amplification factor as a function of $\\sigma$ and $\\theta$:\n$$\nG(\\sigma, \\theta) = 1 - i \\sigma \\sin\\theta\n$$\nThe magnitude of the amplification factor, $\\lvert G \\rvert$, determines the stability of the scheme. A scheme is stable if $\\lvert G \\rvert \\le 1$ for all possible wavenumbers $\\theta$. The magnitude is calculated as:\n$$\n\\lvert G(\\sigma, \\theta)\\rvert = \\sqrt{\\mathrm{Re}(G)^2 + \\mathrm{Im}(G)^2} = \\sqrt{1^2 + (-\\sigma \\sin\\theta)^2} = \\sqrt{1 + \\sigma^2 \\sin^2\\theta}\n$$\nFor any non-zero Courant number ($\\sigma \\neq 0$) and for any mode where $\\sin\\theta \\neq 0$, it is evident that $\\sigma^2 \\sin^2\\theta > 0$. Consequently, $\\lvert G(\\sigma, \\theta)\\rvert > 1$. This means that Fourier modes will grow exponentially in time, demonstrating that the FTCS scheme is unconditionally unstable for the linear advection equation.\n\nNext, we analyze the effect of reversing time, which corresponds to using a negative time step, $\\Delta t' = -\\Delta t$, where $\\Delta t > 0$. The new Courant number becomes $\\sigma' = c \\Delta t'/\\Delta x = -c \\Delta t/\\Delta x = -\\sigma$. The amplification factor for this backward step, which we denote $G(-\\sigma, \\theta)$, is:\n$$\nG(-\\sigma, \\theta) = 1 - i(-\\sigma)\\sin\\theta = 1 + i \\sigma \\sin\\theta\n$$\nIts magnitude is:\n$$\n\\lvert G(-\\sigma, \\theta) \\rvert = \\sqrt{1^2 + (\\sigma \\sin\\theta)^2} = \\sqrt{1 + \\sigma^2 \\sin^2\\theta}\n$$\nThis is identical to the magnitude of the forward-time amplification factor, $\\lvert G(\\sigma, \\theta) \\rvert$. Since this magnitude is greater than $1$ for $\\sigma \\sin\\theta \\neq 0$, the scheme remains unstable when time is reversed. The instability does not become exponential damping; the amplification rate is unchanged.\n\nWe now address the question of numerical time-reversibility. A scheme is time-reversible if a forward step followed by a backward step restores the original state. This requires the product of the amplification factors to be unity for all modes: $G(\\sigma, \\theta) G(-\\sigma, \\theta) = 1$. Let us compute this product:\n$$\nG(\\sigma, \\theta) G(-\\sigma, \\theta) = (1 - i \\sigma \\sin\\theta)(1 + i \\sigma \\sin\\theta) = 1 - (i \\sigma \\sin\\theta)^2 = 1 - i^2 \\sigma^2 \\sin^2\\theta\n$$\nSince $i^2 = -1$, this becomes:\n$$\nG(\\sigma, \\theta) G(-\\sigma, \\theta) = 1 + \\sigma^2 \\sin^2\\theta\n$$\nThis product equals $1$ only if $\\sigma^2 \\sin^2\\theta = 0$, which occurs only for the trivial cases of $\\sigma=0$ or for modes with $\\theta=0$ or $\\theta=\\pi$. The condition does not hold for all $\\theta$, so the FTCS scheme is not numerically time-reversible.\n\nFinally, we prepare the analytical expressions for the quantitative part of the problem. The quantities must be evaluated over $\\theta \\in [0, \\pi]$.\n1.  $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)\\rvert$: This maximum occurs when $\\sin^2\\theta$ is maximal, which is $1$ (at $\\theta=\\pi/2$). Thus, $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)\\rvert = \\sqrt{1 + \\sigma^2}$.\n2.  $\\max_{\\theta \\in [0,\\pi]} \\lvert G(-\\sigma,\\theta)\\rvert$: Similarly, this is $\\sqrt{1 + \\sigma^2}$.\n3.  Damping indicator: This checks if $\\max_{\\theta} \\lvert G(-\\sigma,\\theta)\\rvert < 1$. We must check if $\\sqrt{1 + \\sigma^2} < 1$, which simplifies to $\\sigma^2 < 0$. This is impossible for a real $\\sigma$. The indicator is always $0$.\n4.  Symmetry indicator: This checks if $\\max_{\\theta} \\lvert G(\\sigma,\\theta)\\rvert = \\max_{\\theta} \\lvert G(-\\sigma,\\theta)\\rvert$. As both are $\\sqrt{1+\\sigma^2}$, they are always equal. The indicator is always $1$.\n5.  Numerical time-reversibility indicator: This checks if $\\max_{\\theta \\in [0,\\pi]} \\lvert G(\\sigma,\\theta)G(-\\sigma,\\theta) - 1\\rvert < \\varepsilon$. The expression inside the maximum is $\\lvert (1+\\sigma^2\\sin^2\\theta) - 1 \\rvert = \\sigma^2\\sin^2\\theta$. Its maximum value is $\\sigma^2$ (at $\\theta=\\pi/2$). The indicator is $1$ if $\\sigma^2 < \\varepsilon$, and $0$ otherwise. This is true only if $\\sigma$ is very close to zero.\n\nThese analytical results form the basis for the required computational implementation.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes the FTCS scheme for the 1D linear advection equation.\n    \n    For each test case (c, dx, dt), it computes:\n    1. Maximum amplification factor for forward time.\n    2. Maximum amplification factor for backward time.\n    3. Damping indicator for backward time.\n    4. Symmetry indicator for amplification factors.\n    5. Numerical time-reversibility indicator.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (1.0, 1.0, 0.5),   # Case A\n        (1.0, 1.0, 0.0),   # Case B\n        (0.0, 1.0, 0.5),   # Case C\n        (1.0, 1.0, 2.0),   # Case D\n    ]\n\n    epsilon = 1e-12\n    all_results = []\n\n    for c, dx, dt in test_cases:\n        # Calculate the Courant number σ = c * Δt / Δx\n        # Per problem spec, we can assume dx is not zero.\n        sigma = c * dt / dx\n\n        # The amplification factor is G(σ, θ) = 1 - i*σ*sin(θ).\n        # Its magnitude is |G(σ, θ)| = sqrt(1 + (σ*sin(θ))^2).\n        # The maximum magnitude over θ ∈ [0, π] occurs when sin(θ) = 1.\n        # So, max|G| = sqrt(1 + σ^2).\n\n        # 1. Maximum amplification factor magnitude for forward time stepping.\n        # max |G(σ,θ)| = sqrt(1 + σ^2)\n        max_g_forward = np.sqrt(1.0 + sigma**2)\n\n        # 2. Maximum amplification factor magnitude for backward time stepping.\n        # The Courant number for backward stepping is -σ.\n        # max |G(-σ,θ)| = sqrt(1 + (-σ)^2) = sqrt(1 + σ^2)\n        max_g_backward = np.sqrt(1.0 + (-sigma)**2)\n\n        # 3. Damping indicator for backward stepping.\n        # Defined as 1 if max|G(-σ,θ)| < 1, and 0 otherwise.\n        # sqrt(1 + σ^2) < 1 means 1 + σ^2 < 1, or σ^2 < 0, which is impossible for real σ.\n        # Therefore, this is 1 only if there's a float precision error for σ=0, but more robustly 0.\n        damping_indicator = 1 if max_g_backward < 1.0 else 0\n\n        # 4. Symmetry indicator.\n        # Defined as 1 if max|G(σ,θ)| == max|G(-σ,θ)| within tolerance.\n        # Analytically, they are identical.\n        is_symmetric = abs(max_g_forward - max_g_backward) < epsilon\n        symmetry_indicator = 1 if is_symmetric else 0\n\n        # 5. Numerical time-reversibility indicator.\n        # Defined as 1 if max|G(σ,θ)G(-σ,θ) - 1| < ε.\n        # The product G(σ,θ)G(-σ,θ) = 1 + σ^2*sin^2(θ).\n        # The expression to check is max| (1 + σ^2*sin^2(θ)) - 1 | = max|σ^2*sin^2(θ)|.\n        # This maximum is σ^2.\n        max_reversibility_error = sigma**2\n        is_reversible = max_reversibility_error < epsilon\n        reversibility_indicator = 1 if is_reversible else 0\n        \n        case_results = [\n            max_g_forward,\n            max_g_backward,\n            damping_indicator,\n            symmetry_indicator,\n            reversibility_indicator,\n        ]\n        all_results.append(case_results)\n\n    # Format the final output string as a list of lists, e.g., [[...],[...]].\n    # No spaces should be present in the final output string for adherence to the example.\n    case_strings = []\n    for res in all_results:\n        inner_str = f\"[{','.join(map(str, res))}]\"\n        case_strings.append(inner_str)\n    \n    final_output = f\"[{','.join(case_strings)}]\"\n    \n    # Final print statement in the exact required format.\n    print(final_output)\n\nsolve()\n```", "id": "2396296"}, {"introduction": "Armed with the knowledge that the FTCS scheme is unstable, we now investigate the practical consequences of this instability. This hands-on simulation challenges you to observe how the scheme's failure manifests when solving the wave equation with different initial conditions, from a smooth wave to a sharp, discontinuous front. By measuring a \"failure time\" for each case, you will gain crucial intuition for how a scheme's theoretical properties interact with the spectral content of the specific problem being solved. [@problem_id:2396336]", "problem": "You are to study the unconditional instability of the Forward Time, Centered Space (FTCS) scheme when applied to the one-dimensional wave equation with periodic boundary conditions, by comparing how quickly the numerical solution becomes unusable for discontinuous versus smooth initial conditions. Consider the nondimensional one-dimensional wave equation\n$$\nu_{tt}(x,t) = c^2\\,u_{xx}(x,t),\n$$\nfor $x \\in [0,L)$ and $t \\ge 0$, with periodic boundary conditions $u(0,t) = u(L,t)$ and $u_x(0,t) = u_x(L,t)$. Assume $c>0$ is a constant wave speed. Introduce the auxiliary variable $v(x,t) = u_t(x,t)$ so that the system becomes\n$$\nu_t(x,t) = v(x,t), \\quad v_t(x,t) = c^2\\,u_{xx}(x,t).\n$$\nDiscretize space on a uniform grid of $N$ points with spacing $\\Delta x = L/N$ and indices $j = 0,1,\\dots,N-1$, and discretize time with a uniform step $\\Delta t$. Use the FTCS discretization in time applied to the first-order system and the standard second-order central difference for the spatial second derivative, together with periodic indexing $j\\pm 1$ modulo $N$. All quantities are nondimensional; no physical units are required in your final results.\n\nDefine the measure of failure as follows: let $U^0_{\\max} = \\max_j |u_j^0|$ be the maximum absolute value of the initial discrete field, and let $U^n_{\\max} = \\max_j |u_j^n|$ be the maximum absolute value at time step $n$. For a given threshold factor $\\alpha > 1$, define the failure time index $n_\\mathrm{fail}$ to be the smallest nonnegative integer $n$ such that $U^n_{\\max} > \\alpha\\,U^0_{\\max}$. If this condition is not met within a prescribed maximum number of time steps $S$, report $n_\\mathrm{fail} = S$.\n\nImplement a program that, for the parameter values specified below, computes and reports $n_\\mathrm{fail}$ for each of the three initial conditions described. The spatial domain is periodic with length $L = 1$, the wave speed is $c = 1$, the number of spatial grid points is $N = 400$, and the Courant number is defined as $\\sigma = c\\,\\Delta t/\\Delta x = 0.2$, which sets $\\Delta t = \\sigma\\,\\Delta x/c$. Use a maximum number of time steps $S = 2000$ and a threshold factor $\\alpha = 10$.\n\nTest suite of initial conditions at $t=0$:\n- Case A (discontinuous step): $u(x,0) = 1$ for $x \\in [0,0.5)$ and $u(x,0) = 0$ for $x \\in [0.5,1)$; $v(x,0) = 0$.\n- Case B (smooth Gaussian): $u(x,0) = \\exp\\left(-((x-0.5)/\\sigma)^2\\right)$ with $\\sigma = 0.1$; $v(x,0) = 0$.\n- Case C (smooth sinusoid of moderate wavenumber): $u(x,0) = \\sin(2\\pi m x)$ with $m = 32$; $v(x,0) = 0$.\n\nYour program must:\n- Use periodic boundary conditions in space.\n- Use the same $\\Delta t$ and $\\Delta x$ defined by $\\sigma = 0.2$, $L = 1$, $N = 400$, and $c = 1$ for all cases.\n- For each case, evolve the solution using the FTCS scheme until either $U^n_{\\max} > \\alpha\\,U^0_{\\max}$ or $n = S$, and then record $n_\\mathrm{fail}$.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order [Case A, Case B, Case C], for example, \"[nA,nB,nC]\". Each entry must be an integer.", "solution": "The problem presented is a valid exercise in computational physics. It requires the numerical simulation of the one-dimensional wave equation using the Forward Time, Centered Space (FTCS) scheme, a method known to be unconditionally unstable for this hyperbolic partial differential equation. The objective is to observe and quantify the rate at which this instability manifests for initial conditions with varying degrees of smoothness. The problem is scientifically grounded, well-posed, and all parameters and conditions are specified unambiguously.\n\nThe governing equation is the one-dimensional wave equation, $u_{tt}(x,t) = c^2\\,u_{xx}(x,t)$, where $u(x,t)$ is the wave amplitude, $c$ is the wave speed, $x$ is the spatial coordinate, and $t$ is time. To apply a first-order time integration scheme, we convert this second-order equation into a system of two first-order equations by introducing an auxiliary variable $v(x,t) = u_t(x,t)$. The system becomes:\n$$\n\\frac{\\partial u}{\\partial t} = v(x,t)\n$$\n$$\n\\frac{\\partial v}{\\partial t} = c^2 \\frac{\\partial^2 u}{\\partial x^2}\n$$\nThe domain is $x \\in [0, L)$ with periodic boundary conditions.\n\nWe discretize space into $N$ grid points $x_j = j \\Delta x$ for $j = 0, 1, \\dots, N-1$, with grid spacing $\\Delta x = L/N$. Time is discretized into steps $t^n = n \\Delta t$, where $\\Delta t$ is the time step. Let $u_j^n \\approx u(x_j, t^n)$ and $v_j^n \\approx v(x_j, t^n)$.\n\nThe FTCS scheme uses a forward difference in time (Forward Euler method) and a central difference in space. Applying this to our system yields the following update rules:\n$$\n\\frac{u_j^{n+1} - u_j^n}{\\Delta t} = v_j^n \\implies u_j^{n+1} = u_j^n + \\Delta t v_j^n\n$$\n$$\n\\frac{v_j^{n+1} - v_j^n}{\\Delta t} = c^2 \\left( \\frac{u_{j+1}^n - 2u_j^n + u_{j-1}^n}{(\\Delta x)^2} \\right) \\implies v_j^{n+1} = v_j^n + \\frac{c^2 \\Delta t}{(\\Delta x)^2} (u_{j+1}^n - 2u_j^n + u_{j-1}^n)\n$$\nThe spatial indices are handled periodically, meaning $u_{N}^n = u_0^n$ and $u_{-1}^n = u_{N-1}^n$. These updates are explicit, as the state at time step $n+1$ is calculated solely from the state at time step $n$.\n\nThe stability of this scheme can be investigated using von Neumann analysis. By substituting a trial solution of the form $u_j^n = \\hat{u}(\\xi,k)^n e^{i k x_j}$ into the discretized equations, one can derive the amplification matrix $G$ that maps the solution's Fourier amplitudes from step $n$ to $n+1$. The eigenvalues $\\lambda$ of $G$ determine stability. For this scheme, the eigenvalues are found to be $\\lambda = 1 \\mp 2i \\sigma \\sin(k\\Delta x/2)$, where $\\sigma = c\\Delta t/\\Delta x$ is the Courant number and $k$ is the wavenumber. The magnitude of these eigenvalues is:\n$$\n|\\lambda| = \\sqrt{1^2 + \\left(2\\sigma \\sin\\left(\\frac{k\\Delta x}{2}\\right)\\right)^2} = \\sqrt{1 + 4\\sigma^2 \\sin^2\\left(\\frac{k\\Delta x}{2}\\right)}\n$$\nFor any non-zero Courant number $\\sigma > 0$ and any wavenumber $k$ for which $\\sin(k\\Delta x/2) \\neq 0$, the magnitude $|\\lambda|$ is strictly greater than $1$. This means that Fourier modes of the numerical solution will grow exponentially in amplitude at each time step. The scheme is therefore unconditionally unstable. The growth is most rapid for the highest frequency mode representable on the grid, where $k\\Delta x = \\pi$.\n\nThe algorithm to determine the failure time index $n_\\mathrm{fail}$ proceeds as follows:\n1. Initialize constants and grid parameters: $L=1$, $c=1$, $N=400$, $\\sigma=0.2$, $S=2000$, $\\alpha=10$. This gives $\\Delta x = L/N = 1/400$ and $\\Delta t = \\sigma \\Delta x / c = 0.2 \\times (1/400) / 1 = 0.0005$.\n2. For each of the three initial conditions (Case A, B, C), perform the following steps:\n   a. Set up the initial discrete fields $u^0$ and $v^0$ on the spatial grid. For all cases, $v^0_j = 0$ for all $j$.\n   b. Calculate the initial maximum amplitude $U^0_{\\max} = \\max_j |u_j^0|$ and the failure threshold $T = \\alpha U^0_{\\max}$.\n   c. Start the time evolution loop from $n=0$ to a maximum of $S-1$ steps.\n   d. In each iteration, calculate the fields $u^{n+1}$ and $v^{n+1}$ using the FTCS update rules. The periodic boundary conditions are implemented using circular array shifts.\n   e. Compute the maximum amplitude at the new step, $U^{n+1}_{\\max} = \\max_j |u_j^{n+1}|$.\n   f. Check if the failure criterion $U^{n+1}_{\\max} > T$ is met.\n   g. If it is met, the failure time is $n_\\mathrm{fail} = n+1$. The simulation for this case is terminated, and this value is recorded.\n   h. If the loop completes up to step $S$ (i.e., $u^S$ has been computed and checked) without the criterion being met, the failure time is recorded as $n_\\mathrm{fail} = S$.\n\nThe rate of failure is expected to depend on the spectral content of the initial condition.\n- Case A (Step function): A discontinuity contains significant energy across the entire frequency spectrum, including the most unstable high-frequency modes. This case should fail very quickly.\n- Case B (Gaussian): A smooth Gaussian function has a spectrum that is also Gaussian, meaning its high-frequency content is exponentially small. The instability will grow from these minuscule components and numerical round-off error, so this case should be the last to fail.\n- Case C (Sinusoid): The initial state is a single, moderately low-wavenumber mode ($m=32$). While this mode itself does not grow very fast, the numerical scheme's truncation error, which depends on higher-order spatial derivatives, acts as a source term that seeds other, more unstable high-frequency modes. For a sinusoid $u(x,0)=\\sin(2\\pi m x)$, the fourth derivative scales as $m^4$, which is large for $m=32$. This large truncation error will excite unstable modes more rapidly than in the very smooth Gaussian case.\nThus, the expected order of failure times is $n_{\\mathrm{fail}, A} < n_{\\mathrm{fail}, C} < n_{\\mathrm{fail}, B}$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem of finding the failure time for the FTCS scheme\n    applied to the 1D wave equation for three different initial conditions.\n    \"\"\"\n\n    # Define simulation parameters\n    L = 1.0       # Domain length\n    c = 1.0       # Wave speed\n    N = 400       # Number of spatial grid points\n    sigma = 0.2   # Courant number\n    S = 2000      # Maximum number of time steps\n    alpha = 10.0  # Threshold factor for failure\n\n    # Calculate derived parameters\n    dx = L / N\n    dt = sigma * dx / c\n    \n    # Pre-calculate coefficient for the v-update equation\n    # C_v = c^2 * dt / dx^2\n    # This can be simplified using sigma: C_v = c*sigma/dx\n    C_v = c**2 * dt / (dx**2)\n\n    # Define the spatial grid\n    # x points from 0 to L-dx, size N\n    x = np.linspace(0, L, N, endpoint=False)\n\n    # Define initial conditions\n    # Case A: Discontinuous step function\n    u0_A = np.ones(N)\n    u0_A[x >= 0.5] = 0.0\n\n    # Case B: Smooth Gaussian\n    sigma_gauss = 0.1\n    u0_B = np.exp(-((x - 0.5) / sigma_gauss)**2)\n\n    # Case C: Smooth sinusoid of moderate wavenumber\n    m = 32\n    u0_C = np.sin(2 * np.pi * m * x)\n    \n    test_cases = [u0_A, u0_B, u0_C]\n    results = []\n\n    def run_simulation(u0_initial):\n        \"\"\"\n        Runs the FTCS simulation for a given initial condition u0.\n        The initial velocity v0 is assumed to be zero.\n        \"\"\"\n        u = u0_initial.copy()\n        v = np.zeros_like(u)\n\n        # Calculate initial max absolute value and the failure threshold\n        u0_max = np.max(np.abs(u))\n        \n        # If u0_max is zero, any non-zero state is a failure.\n        # This problem's initial conditions all have u0_max > 0.\n        if u0_max == 0.0:\n            threshold = 1e-9 # A small number to detect any growth\n        else:\n            threshold = alpha * u0_max\n        \n        # The condition is U^n_max > alpha*U^0_max. For n=0, this is false.\n        # We start checking from n=1.\n\n        for n in range(S):\n            # Calculate the discrete Laplacian of u at step n using periodic BCs\n            lapl_u = np.roll(u, -1) - 2 * u + np.roll(u, 1)\n\n            # Calculate u and v at step n+1\n            # Note: The updates for u_next and v_next must both use data from step n.\n            # Python's evaluation order ensures this is safe.\n            v_next = v + C_v * lapl_u\n            u_next = u + dt * v # Uses v at step n, not v_next\n\n            u = u_next\n            v = v_next\n\n            # Check for failure condition at step n+1\n            u_max_current = np.max(np.abs(u))\n            if u_max_current > threshold:\n                return n + 1  # Failure occurred at step n+1\n\n        # If the loop completes, the condition was not met within S steps\n        return S\n\n    for u0 in test_cases:\n        n_fail = run_simulation(u0)\n        results.append(n_fail)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2396336"}, {"introduction": "Understanding a scheme's failure is only half the battle; the ultimate goal is to find methods that work. This final practice moves from analysis to construction, challenging you to derive a stable, second-order accurate scheme for the wave equation from first principles using the Lax-Wendroff approach. By building a reliable method and formally proving its stability limit, you will develop one of the most important skills in computational science: the ability to design numerical schemes that are not only accurate but also robust. [@problem_id:2396322]", "problem": "Consider the one-dimensional wave equation $u_{tt}(x,t)=c^{2}u_{xx}(x,t)$ with constant wave speed $c>0$ on an infinite uniform grid with spatial step $\\Delta x$ and time step $\\Delta t$. Introduce the first-order symmetric hyperbolic system by defining $q(x,t)=u_{t}(x,t)$ and $r(x,t)=c\\,u_{x}(x,t)$ so that\n$$\nq_{t}(x,t)=c\\,r_{x}(x,t),\\qquad r_{t}(x,t)=c\\,q_{x}(x,t).\n$$\nLet $x_{j}=j\\,\\Delta x$ and $t^{n}=n\\,\\Delta t$ for integers $j$ and $n$, and denote the grid functions by $q_{j}^{n}\\approx q(x_{j},t^{n})$ and $r_{j}^{n}\\approx r(x_{j},t^{n})$. Define the Courant number $\\sigma=c\\,\\Delta t/\\Delta x$.\n\nTask A: Write down the Forward-Time, Centered-Space (FTCS) explicit scheme for the above first-order system on the collocated grid $\\{x_{j}\\}$.\n\nTask B: Derive an explicit, second-order-accurate (in both time and space), single-step update for the same first-order system that is inspired by the Lax–Wendroff construction. Express your final scheme entirely in terms of $q_{j\\pm 1}^{n}$, $q_{j}^{n}$, $r_{j\\pm 1}^{n}$, $r_{j}^{n}$, and $\\sigma$.\n\nTask C: State the spatial stencil for updating $q_{j}^{n+1}$ and $r_{j}^{n+1}$ in both schemes, identifying which neighboring grid points and field components directly contribute to each update.\n\nTask D: Perform a von Neumann Fourier stability analysis of your second-order scheme on the infinite grid and determine the largest value of the Courant number $\\sigma$ for which all Fourier modes are non-amplifying. Express your final answer as the exact value of this largest admissible Courant number.\n\nAnswer format requirement: Provide as your final answer the exact real value of the largest admissible Courant number $\\sigma$ (unitless). Do not include any units. Do not round.", "solution": "The tasks will now be addressed in sequence.\n\nTask A: Forward-Time, Centered-Space (FTCS) Scheme\nThe FTCS scheme is constructed by discretizing time derivatives with a forward difference and spatial derivatives with a centered difference. All spatial derivatives are evaluated at time level $n$.\nThe time derivatives are approximated as:\n$$\nq_{t} \\approx \\frac{q_{j}^{n+1} - q_{j}^{n}}{\\Delta t}, \\qquad r_{t} \\approx \\frac{r_{j}^{n+1} - r_{j}^{n}}{\\Delta t}\n$$\nThe spatial derivatives are approximated as:\n$$\nr_{x} \\approx \\frac{r_{j+1}^{n} - r_{j-1}^{n}}{2\\Delta x}, \\qquad q_{x} \\approx \\frac{q_{j+1}^{n} - q_{j-1}^{n}}{2\\Delta x}\n$$\nSubstituting these approximations into the first-order system $q_{t}=c\\,r_{x}$ and $r_{t}=c\\,q_{x}$ gives:\n$$\n\\frac{q_{j}^{n+1} - q_{j}^{n}}{\\Delta t} = c \\frac{r_{j+1}^{n} - r_{j-1}^{n}}{2\\Delta x}\n$$\n$$\n\\frac{r_{j}^{n+1} - r_{j}^{n}}{\\Delta t} = c \\frac{q_{j+1}^{n} - q_{j-1}^{n}}{2\\Delta x}\n$$\nRearranging for the updated values at time level $n+1$ and using the definition of the Courant number $\\sigma = c\\,\\Delta t/\\Delta x$, we obtain the FTCS scheme:\n$$\nq_{j}^{n+1} = q_{j}^{n} + \\frac{\\sigma}{2} (r_{j+1}^{n} - r_{j-1}^{n})\n$$\n$$\nr_{j}^{n+1} = r_{j}^{n} + \\frac{\\sigma}{2} (q_{j+1}^{n} - q_{j-1}^{n})\n$$\n\nTask B: Second-Order Lax-Wendroff Type Scheme\nTo derive a scheme that is second-order accurate in both time and space, we start with a Taylor series expansion of $q$ and $r$ in time around $t^{n}$, up to the second-order term:\n$$\nq_{j}^{n+1} = q_{j}^{n} + \\Delta t (q_{t})_{j}^{n} + \\frac{(\\Delta t)^{2}}{2} (q_{tt})_{j}^{n} + O((\\Delta t)^{3})\n$$\n$$\nr_{j}^{n+1} = r_{j}^{n} + \\Delta t (r_{t})_{j}^{n} + \\frac{(\\Delta t)^{2}}{2} (r_{tt})_{j}^{n} + O((\\Delta t)^{3})\n$$\nNext, we replace the time derivatives with spatial derivatives using the governing PDEs. The first derivatives are given: $(q_{t})_{j}^{n} = c(r_{x})_{j}^{n}$ and $(r_{t})_{j}^{n} = c(q_{x})_{j}^{n}$. For the second derivatives:\n$$\nq_{tt} = \\frac{\\partial}{\\partial t}(q_{t}) = \\frac{\\partial}{\\partial t}(c\\,r_{x}) = c\\,(r_{t})_{x} = c\\,(c\\,q_{x})_{x} = c^{2}q_{xx}\n$$\n$$\nr_{tt} = \\frac{\\partial}{\\partial t}(r_{t}) = \\frac{\\partial}{\\partial t}(c\\,q_{x}) = c\\,(q_{t})_{x} = c\\,(c\\,r_{x})_{x} = c^{2}r_{xx}\n$$\nSubstituting these into the Taylor expansions:\n$$\nq_{j}^{n+1} = q_{j}^{n} + c\\,\\Delta t (r_{x})_{j}^{n} + \\frac{c^{2}(\\Delta t)^{2}}{2} (q_{xx})_{j}^{n} + O((\\Delta t)^{3})\n$$\n$$\nr_{j}^{n+1} = r_{j}^{n} + c\\,\\Delta t (q_{x})_{j}^{n} + \\frac{c^{2}(\\Delta t)^{2}}{2} (r_{xx})_{j}^{n} + O((\\Delta t)^{3})\n$$\nNow, we introduce second-order accurate centered finite difference approximations for the spatial derivatives at time level $n$:\n$$\n(r_{x})_{j}^{n} \\approx \\frac{r_{j+1}^{n} - r_{j-1}^{n}}{2\\Delta x}, \\qquad (q_{x})_{j}^{n} \\approx \\frac{q_{j+1}^{n} - q_{j-1}^{n}}{2\\Delta x}\n$$\n$$\n(q_{xx})_{j}^{n} \\approx \\frac{q_{j+1}^{n} - 2q_{j}^{n} + q_{j-1}^{n}}{(\\Delta x)^{2}}, \\qquad (r_{xx})_{j}^{n} \\approx \\frac{r_{j+1}^{n} - 2r_{j}^{n} + r_{j-1}^{n}}{(\\Delta x)^{2}}\n$$\nSubstituting these into the expanded equations and using $\\sigma = c\\,\\Delta t/\\Delta x$ yields the Lax-Wendroff type scheme:\n$$\nq_{j}^{n+1} = q_{j}^{n} + c\\,\\Delta t \\left(\\frac{r_{j+1}^{n} - r_{j-1}^{n}}{2\\Delta x}\\right) + \\frac{c^{2}(\\Delta t)^{2}}{2} \\left(\\frac{q_{j+1}^{n} - 2q_{j}^{n} + q_{j-1}^{n}}{(\\Delta x)^{2}}\\right)\n$$\n$$\nr_{j}^{n+1} = r_{j}^{n} + c\\,\\Delta t \\left(\\frac{q_{j+1}^{n} - q_{j-1}^{n}}{2\\Delta x}\\right) + \\frac{c^{2}(\\Delta t)^{2}}{2} \\left(\\frac{r_{j+1}^{n} - 2r_{j}^{n} + r_{j-1}^{n}}{(\\Delta x)^{2}}\\right)\n$$\nSimplifying, we arrive at the final form:\n$$\nq_{j}^{n+1} = q_{j}^{n} + \\frac{\\sigma}{2}(r_{j+1}^{n} - r_{j-1}^{n}) + \\frac{\\sigma^{2}}{2}(q_{j+1}^{n} - 2q_{j}^{n} + q_{j-1}^{n})\n$$\n$$\nr_{j}^{n+1} = r_{j}^{n} + \\frac{\\sigma}{2}(q_{j+1}^{n} - q_{j-1}^{n}) + \\frac{\\sigma^{2}}{2}(r_{j+1}^{n} - 2r_{j}^{n} + r_{j-1}^{n})\n$$\n\nTask C: Spatial Stencils\nFor both schemes, the update at grid point $j$ requires information from neighboring points at the previous time step.\n- For the FTCS scheme, the calculation of $q_{j}^{n+1}$ depends on $q_{j}^{n}$, $r_{j-1}^{n}$, and $r_{j+1}^{n}$. The calculation of $r_{j}^{n+1}$ depends on $r_{j}^{n}$, $q_{j-1}^{n}$, and $q_{j+1}^{n}$. The spatial stencil for updating the pair $(q_j, r_j)$ involves grid points $\\{j-1, j, j+1\\}$. The components are coupled, with the update for $q$ depending on $r$ and vice-versa.\n- For the Lax-Wendroff scheme, the calculation of $q_{j}^{n+1}$ depends on $q_{j-1}^{n}$, $q_{j}^{n}$, $q_{j+1}^{n}$ and on $r_{j-1}^{n}$, $r_{j+1}^{n}$. Similarly, the calculation of $r_{j}^{n+1}$ depends on $r_{j-1}^{n}$, $r_{j}^{n}$, $r_{j+1}^{n}$ and on $q_{j-1}^{n}$, $q_{j+1}^{n}$. The spatial stencil for updating the pair $(q_j, r_j)$ also involves grid points $\\{j-1, j, j+1\\}$. Both field components, $q$ and $r$, from all three points in the stencil are required for the update.\n\nTask D: Von Neumann Stability Analysis of the Second-Order Scheme\nWe analyze the amplification of a single Fourier mode. Let the solution vector be $\\mathbf{U}_{j}^{n} = \\begin{pmatrix} q_{j}^{n} \\\\ r_{j}^{n} \\end{pmatrix}$. We assume a solution of the form $\\mathbf{U}_{j}^{n} = \\hat{\\mathbf{U}}^{n}(k) \\exp(i k x_{j})$, where $k$ is the wavenumber and $i=\\sqrt{-1}$. Let $\\theta = k \\Delta x$. Then $\\mathbf{U}_{j\\pm 1}^{n} = \\hat{\\mathbf{U}}^{n} \\exp(i k (j\\pm 1)\\Delta x) = \\mathbf{U}_{j}^{n} \\exp(\\pm i\\theta)$.\nSubstituting these forms into the scheme from Task B:\n$$\n\\hat{q}^{n+1}\\exp(ij\\theta) = \\left[ \\hat{q}^{n} + \\frac{\\sigma}{2}(\\hat{r}^{n}e^{i\\theta} - \\hat{r}^{n}e^{-i\\theta}) + \\frac{\\sigma^{2}}{2}(\\hat{q}^{n}e^{i\\theta} - 2\\hat{q}^{n} + \\hat{q}^{n}e^{-i\\theta}) \\right] \\exp(ij\\theta)\n$$\n$$\n\\hat{r}^{n+1}\\exp(ij\\theta) = \\left[ \\hat{r}^{n} + \\frac{\\sigma}{2}(\\hat{q}^{n}e^{i\\theta} - \\hat{q}^{n}e^{-i\\theta}) + \\frac{\\sigma^{2}}{2}(\\hat{r}^{n}e^{i\\theta} - 2\\hat{r}^{n} + \\hat{r}^{n}e^{-i\\theta}) \\right] \\exp(ij\\theta)\n$$\nDividing by $\\exp(ij\\theta)$ and using $e^{i\\theta} - e^{-i\\theta} = 2i\\sin\\theta$ and $e^{i\\theta} + e^{-i\\theta} = 2\\cos\\theta$:\n$$\n\\hat{q}^{n+1} = \\hat{q}^{n} + \\frac{\\sigma}{2}(2i\\sin\\theta)\\hat{r}^{n} + \\frac{\\sigma^{2}}{2}(2\\cos\\theta - 2)\\hat{q}^{n} = (1 + \\sigma^{2}(\\cos\\theta-1))\\hat{q}^{n} + (i\\sigma\\sin\\theta)\\hat{r}^{n}\n$$\n$$\n\\hat{r}^{n+1} = \\hat{r}^{n} + \\frac{\\sigma}{2}(2i\\sin\\theta)\\hat{q}^{n} + \\frac{\\sigma^{2}}{2}(2\\cos\\theta - 2)\\hat{r}^{n} = (i\\sigma\\sin\\theta)\\hat{q}^{n} + (1 + \\sigma^{2}(\\cos\\theta-1))\\hat{r}^{n}\n$$\nThis can be written in matrix form, $\\hat{\\mathbf{U}}^{n+1} = G(\\theta) \\hat{\\mathbf{U}}^{n}$, where $G(\\theta)$ is the amplification matrix:\n$$\nG(\\theta) = \\begin{pmatrix} 1 - \\sigma^{2}(1-\\cos\\theta) & i\\sigma\\sin\\theta \\\\ i\\sigma\\sin\\theta & 1 - \\sigma^{2}(1-\\cos\\theta) \\end{pmatrix}\n$$\nFor stability, the spectral radius of $G(\\theta)$ must be less than or equal to $1$ for all $\\theta \\in [-\\pi, \\pi]$. Let $\\lambda$ be an eigenvalue of $G(\\theta)$. The characteristic equation is $\\det(G-\\lambda I) = 0$.\n$$\n(1 - \\sigma^{2}(1-\\cos\\theta) - \\lambda)^{2} - (i\\sigma\\sin\\theta)^{2} = 0\n$$\n$$\n(1 - \\sigma^{2}(1-\\cos\\theta) - \\lambda)^{2} + \\sigma^{2}\\sin^{2}\\theta = 0\n$$\nThe eigenvalues are $\\lambda_{\\pm} = 1 - \\sigma^{2}(1-\\cos\\theta) \\pm \\sqrt{-\\sigma^{2}\\sin^{2}\\theta}$, which gives:\n$$\n\\lambda_{\\pm} = 1 - \\sigma^{2}(1-\\cos\\theta) \\pm i\\sigma\\sin\\theta\n$$\nThe stability condition is $|\\lambda_{\\pm}| \\le 1$. We compute the squared magnitude:\n$$\n|\\lambda_{\\pm}|^{2} = \\left(1 - \\sigma^{2}(1-\\cos\\theta)\\right)^{2} + (\\sigma\\sin\\theta)^{2}\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 - 2\\sigma^{2}(1-\\cos\\theta) + \\sigma^{4}(1-\\cos\\theta)^{2} + \\sigma^{2}\\sin^{2}\\theta\n$$\nUsing $\\sin^{2}\\theta = 1-\\cos^{2}\\theta = (1-\\cos\\theta)(1+\\cos\\theta)$:\n$$\n|\\lambda_{\\pm}|^{2} = 1 - 2\\sigma^{2}(1-\\cos\\theta) + \\sigma^{4}(1-\\cos\\theta)^{2} + \\sigma^{2}(1-\\cos\\theta)(1+\\cos\\theta)\n$$\nFactor out the common term $(1-\\cos\\theta)$:\n$$\n|\\lambda_{\\pm}|^{2} = 1 + (1-\\cos\\theta) \\left[ -2\\sigma^{2} + \\sigma^{4}(1-\\cos\\theta) + \\sigma^{2}(1+\\cos\\theta) \\right]\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 + (1-\\cos\\theta) \\left[ -2\\sigma^{2} + \\sigma^{4} - \\sigma^{4}\\cos\\theta + \\sigma^{2} + \\sigma^{2}\\cos\\theta \\right]\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 + (1-\\cos\\theta) \\left[ -\\sigma^{2} + \\sigma^{4} - (\\sigma^{4}-\\sigma^{2})\\cos\\theta \\right]\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 + (1-\\cos\\theta) \\left[ -\\sigma^{2}(1-\\sigma^{2}) + \\sigma^{2}(1-\\sigma^{2})\\cos\\theta \\right]\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 - \\sigma^{2}(1-\\sigma^{2})(1-\\cos\\theta)(1-\\cos\\theta)\n$$\n$$\n|\\lambda_{\\pm}|^{2} = 1 - \\sigma^{2}(1-\\sigma^{2})(1-\\cos\\theta)^{2}\n$$\nThe stability condition $|\\lambda_{\\pm}|^{2} \\le 1$ requires:\n$$\n1 - \\sigma^{2}(1-\\sigma^{2})(1-\\cos\\theta)^{2} \\le 1\n$$\n$$\n-\\sigma^{2}(1-\\sigma^{2})(1-\\cos\\theta)^{2} \\le 0\n$$\nSince $\\sigma = c\\Delta t/\\Delta x > 0$, $\\sigma^{2} > 0$. Also, $(1-\\cos\\theta)^{2} \\ge 0$ for all $\\theta$. Thus, for the inequality to hold for all $\\theta$, we must have:\n$$\n-(1-\\sigma^{2}) \\le 0 \\implies 1-\\sigma^{2} \\ge 0 \\implies \\sigma^{2} \\le 1\n$$\nSince $\\sigma$ is positive, the stability condition is $0 < \\sigma \\le 1$.\nThe largest value of the Courant number $\\sigma$ for which the scheme is stable is $1$.", "answer": "$$\\boxed{1}$$", "id": "2396322"}]}