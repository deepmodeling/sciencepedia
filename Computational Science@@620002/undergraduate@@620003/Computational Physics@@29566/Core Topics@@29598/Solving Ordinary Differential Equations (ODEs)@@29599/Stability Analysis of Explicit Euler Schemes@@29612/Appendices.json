{"hands_on_practices": [{"introduction": "When simulating physical systems, especially those with widely separated time scales (known as \"stiff\" systems), the choice of time step $h$ is paramount for the explicit Euler method. A step size that is even slightly too large can lead to a completely useless, divergent solution. This first practice [@problem_id:2172206] provides essential training in determining the hard stability limit by guiding you to calculate the critical time step, $h_{crit}$, for a model of thermal relaxation.", "problem": "The thermal behavior of a small, highly conductive metal probe in an environment with a rapidly oscillating temperature is being modeled. The probe's temperature, $T(t)$, as a function of time $t$ is described by the first-order linear ordinary differential equation:\n$$ \\frac{dT}{dt} = -k \\left( T - T_{ambient}(t) \\right) $$\nwhere the ambient temperature is given by $T_{ambient}(t) = T_0 + A \\sin(\\omega t)$. The initial temperature of the probe is $T(0) = T_i$.\n\nFor a specific experiment, the parameters are:\n- Thermal relaxation rate constant, $k = 100 \\text{ s}^{-1}$\n- Mean ambient temperature, $T_0 = 300 \\text{ K}$\n- Amplitude of temperature oscillation, $A = 2 \\text{ K}$\n- Angular frequency of oscillation, $\\omega = 1 \\text{ rad/s}$\n- Initial probe temperature, $T_i = 301 \\text{ K}$\n\nTo solve for $T(t)$, a numerical approach using the explicit Euler method is employed. Due to the high value of $k$, this differential equation is considered \"stiff,\" and it is known that the explicit Euler method can become numerically unstable, producing wildly oscillating and divergent solutions if the time step, $h$, is too large.\n\nDetermine the critical time step, $h_{crit}$, above which the explicit Euler method for this system becomes unstable. Express your answer in seconds as an exact decimal value.", "solution": "The problem asks for the critical time step $h_{crit}$ for the stability of the explicit Euler method applied to a given ordinary differential equation (ODE).\n\nThe explicit Euler method for a first-order ODE of the form $\\frac{dy}{dt} = f(t, y)$ is given by the update rule:\n$$y_{n+1} = y_n + h \\cdot f(t_n, y_n)$$\nwhere $y_n$ is the numerical approximation of $y(t_n)$ and $h$ is the time step.\n\nThe given ODE is:\n$$ \\frac{dT}{dt} = -k \\left( T - T_{ambient}(t) \\right) = -k \\left( T - (T_0 + A \\sin(\\omega t)) \\right) $$\nLet's rearrange this to match the standard form $y' = \\lambda y + g(t)$. Here, our dependent variable is $T$.\n$$ \\frac{dT}{dt} = -kT + k(T_0 + A \\sin(\\omega t)) $$\nThis is a linear first-order ODE. The function $f(t, T)$ is:\n$$ f(t, T) = -kT + k(T_0 + A \\sin(\\omega t)) $$\n\nThe stability of the explicit Euler method for a linear ODE is determined by the behavior of its homogeneous part. We can analyze the stability by considering a test equation of the form $y' = \\lambda y$, where $\\lambda$ is the eigenvalue of the system's Jacobian matrix. For a single linear ODE, $\\lambda$ is simply the coefficient of the dependent variable.\n\nIn our equation, the coefficient of $T$ is $-k$. So, we set $\\lambda = -k$. The non-homogeneous part of the equation, $g(t) = k(T_0 + A \\sin(\\omega t))$, and the initial condition $T(0) = T_i$ do not affect the stability condition of the method itself.\n\nThe explicit Euler method applied to the test equation $y' = \\lambda y$ is:\n$$ y_{n+1} = y_n + h(\\lambda y_n) = (1 + h\\lambda) y_n $$\nFor the numerical solution to remain stable (not grow unboundedly), the magnitude of the amplification factor $(1 + h\\lambda)$ must be less than or equal to one. This gives the stability condition:\n$$ |1 + h\\lambda| \\le 1 $$\nNow, we substitute the value of $\\lambda = -k$ into this condition:\n$$ |1 + h(-k)| \\le 1 $$\n$$ |1 - hk| \\le 1 $$\nThis absolute value inequality is equivalent to the compound inequality:\n$$ -1 \\le 1 - hk \\le 1 $$\nWe can split this into two separate inequalities:\n\n1.  $1 - hk \\le 1$\n    $$ -hk \\le 0 $$\n    Since both the time step $h$ and the rate constant $k$ are positive physical quantities ($h>0, k>0$), their product $hk$ is always positive. Therefore, $-hk$ is always negative, and the inequality $-hk \\le 0$ is always satisfied.\n\n2.  $-1 \\le 1 - hk$\n    $$ hk \\le 2 $$\n    $$ h \\le \\frac{2}{k} $$\n\nCombining the results, the explicit Euler method is stable for time steps $h$ in the range $0  h \\le \\frac{2}{k}$. The critical time step, $h_{crit}$, is the maximum value of $h$ for which the method is stable. Therefore, the method becomes unstable for any $h  \\frac{2}{k}$. The boundary of this stability region is:\n$$ h_{crit} = \\frac{2}{k} $$\nThe problem provides the value of the thermal relaxation rate constant as $k = 100 \\text{ s}^{-1}$. Substituting this value into our expression for $h_{crit}$:\n$$ h_{crit} = \\frac{2}{100 \\text{ s}^{-1}} = 0.02 \\text{ s} $$\nThus, the critical time step is 0.02 seconds. For any time step larger than this, the numerical solution will become unstable. The values of $T_0$, $A$, $\\omega$, and $T_i$ are not needed to determine the stability threshold. The problem asks for the answer in seconds as an exact decimal.", "answer": "$$\\boxed{0.02}$$", "id": "2172206"}, {"introduction": "You have learned that stiffness imposes a strict limit on the time step. But what does this mean in terms of computational effort? This exercise [@problem_id:2438035] directly confronts this question by comparing a stiff system to a non-stiff one. You will derive the maximal stable step size for each and calculate the ratio of the total number of simulation steps, a powerful demonstration of the performance penalty imposed by stiffness.", "problem": "An explicit one-step method is being used to simulate linear time-invariant ordinary differential equations (ODEs) of the form $\\dot{\\mathbf{y}} = A \\mathbf{y}$ on the time interval $[0, T]$ with $T = 10$. The method is the explicit Euler scheme with a constant time step $h$, and each step uses exactly one evaluation of the right-hand side function $f(\\mathbf{y}) = A \\mathbf{y}$.\n\nTwo systems are considered:\n- A stiff system $\\dot{\\mathbf{y}} = A_{s}\\mathbf{y}$ with $A_{s} = \\mathrm{diag}(-1200, -3)$.\n- A non-stiff system $\\dot{\\mathbf{y}} = A_{n}\\mathbf{y}$ with $A_{n} = \\mathrm{diag}(-1, -0.2)$.\n\nYou are to select, for each system, the largest constant step size $h$ that guarantees linear absolute stability for all eigenmodes of the system, in the sense that when the explicit Euler method is applied to each scalar eigenmode arising from the decomposition along eigenvectors, the numerical solution does not grow in magnitude when the exact solution decays.\n\nStarting exclusively from:\n- the definition of the explicit Euler update,\n- the linear test equation $\\dot{y} = \\lambda y$ as a local model along an eigenvector of $A$,\n- and the requirement that the numerical amplification per step does not exceed unity in magnitude for decaying modes,\n\nderive the maximal stable step size for each system, determine the corresponding number of steps $N$ required to advance from $t = 0$ to $t = T$ (counting one function evaluation per step), and then compute the ratio $R = N_{\\text{stiff}}/N_{\\text{nonstiff}}$.\n\nProvide $R$ as a single exact number with no rounding.", "solution": "The problem is first validated.\n\n**Step 1: Extract Givens**\n- The ordinary differential equation (ODE) is of the form $\\dot{\\mathbf{y}} = A \\mathbf{y}$.\n- The time interval is $[0, T]$ with $T = 10$.\n- The numerical method is the explicit Euler scheme with a constant time step $h$.\n- Each step uses one evaluation of the right-hand side function.\n- The stiff system is described by the matrix $A_{s} = \\mathrm{diag}(-1200, -3)$.\n- The non-stiff system is described by the matrix $A_{n} = \\mathrm{diag}(-1, -0.2)$.\n- The stability requirement is that for decaying modes, the numerical solution does not grow in magnitude.\n- The task is to derive the maximal stable step size $h$ for each system, find the corresponding number of steps ($N_{\\text{stiff}}$ and $N_{\\text{nonstiff}}$), and compute the ratio $R = N_{\\text{stiff}}/N_{\\text{nonstiff}}$.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientifically Grounded:** The problem is a standard exercise in the numerical analysis of ODEs, based on the fundamental concepts of stiffness, numerical stability, and the explicit Euler method.\n- **Well-Posed:** All necessary information is provided. The objective is clearly stated, and a unique solution is obtainable.\n- **Objective:** The problem statement is formulated with precise, objective, and standard scientific terminology.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically valid, well-posed, and objective. A solution will be derived.\n\nThe solution process begins by deriving the stability condition for the explicit Euler method from fundamental principles, as required.\n\nThe explicit Euler method advances the solution of an ODE $\\dot{\\mathbf{y}} = \\mathbf{f}(t, \\mathbf{y})$ from time $t_k$ to $t_{k+1} = t_k + h$ using the update formula:\n$$ \\mathbf{y}_{k+1} = \\mathbf{y}_k + h \\mathbf{f}(t_k, \\mathbf{y}_k) $$\nFor the given linear, time-invariant system $\\dot{\\mathbf{y}} = A \\mathbf{y}$, the update rule becomes:\n$$ \\mathbf{y}_{k+1} = \\mathbf{y}_k + h A \\mathbf{y}_k = (I + hA) \\mathbf{y}_k $$\nwhere $I$ is the identity matrix.\n\nThe stability of this method is analyzed by applying it to the a scalar test equation, $\\dot{y} = \\lambda y$, where $\\lambda \\in \\mathbb{C}$. This equation serves as a model for the behavior along each eigenvector of the matrix $A$. The eigenvalues $\\lambda$ of $A$ determine the dynamics of the system. For the given problem, the matrices $A_s$ and $A_n$ are diagonal, so their diagonal entries are the eigenvalues. All eigenvalues are real and negative, which corresponds to decaying modes in the exact solution $y(t) = y_0 \\exp(\\lambda t)$.\n\nApplying the explicit Euler method to the test equation gives:\n$$ y_{k+1} = y_k + h (\\lambda y_k) = (1 + h\\lambda) y_k $$\nThe term $G(z) = 1 + z$, with $z = h\\lambda$, is the amplification factor or stability function. For the numerical solution to remain stable (not grow in magnitude), the magnitude of this amplification factor must be no greater than unity:\n$$ |G(h\\lambda)| \\leq 1 \\implies |1 + h\\lambda| \\leq 1 $$\nThis inequality defines the region of absolute stability for the explicit Euler method.\n\nFor the systems in question, the eigenvalues $\\lambda$ are real and negative. Let $\\lambda  0$. The stability condition is:\n$$ |1 + h\\lambda| \\leq 1 $$\nSince $h  0$ and $\\lambda  0$, the quantity $h\\lambda$ is a negative real number. The inequality can be written as:\n$$ -1 \\leq 1 + h\\lambda \\leq 1 $$\nSubtracting $1$ from all parts gives:\n$$ -2 \\leq h\\lambda \\leq 0 $$\nThe right-hand side, $h\\lambda \\leq 0$, is always satisfied since $h0$ and $\\lambda0$. The controlling condition is the left-hand side:\n$$ -2 \\leq h\\lambda $$\nDividing by $\\lambda$ (which is negative, so the inequality sign reverses):\n$$ h \\leq \\frac{-2}{\\lambda} $$\nSince $\\lambda$ is negative, $-\\lambda = |\\lambda|$. Thus, the condition on the step size is:\n$$ h \\leq \\frac{2}{|\\lambda|} $$\nFor a system of equations, this condition must hold for all eigenvalues $\\lambda_i$ of the matrix $A$. To ensure stability across all modes, the time step $h$ must be constrained by the eigenvalue with the largest magnitude, which corresponds to the fastest-decaying (and most numerically challenging) component:\n$$ h \\leq \\min_{i} \\left( \\frac{2}{|\\lambda_i|} \\right) = \\frac{2}{\\max_{i} |\\lambda_i|} $$\nThe largest constant step size $h_{\\text{max}}$ that guarantees stability is therefore:\n$$ h_{\\text{max}} = \\frac{2}{\\max_{i} |\\lambda_i|} $$\n\nWe now apply this result to the two specified systems.\n\n**For the stiff system:**\nThe matrix is $A_{s} = \\mathrm{diag}(-1200, -3)$. The eigenvalues are $\\lambda_1 = -1200$ and $\\lambda_2 = -3$.\nThe maximum magnitude of the eigenvalues is:\n$$ \\max(|\\lambda_1|, |\\lambda_2|) = \\max(1200, 3) = 1200 $$\nThe maximal stable step size for the stiff system, $h_s$, is:\n$$ h_s = \\frac{2}{1200} = \\frac{1}{600} $$\n\n**For the non-stiff system:**\nThe matrix is $A_{n} = \\mathrm{diag}(-1, -0.2)$. The eigenvalues are $\\lambda_1 = -1$ and $\\lambda_2 = -0.2$.\nThe maximum magnitude of the eigenvalues is:\n$$ \\max(|\\lambda_1|, |\\lambda_2|) = \\max(1, 0.2) = 1 $$\nThe maximal stable step size for the non-stiff system, $h_n$, is:\n$$ h_n = \\frac{2}{1} = 2 $$\n\nNext, we determine the number of steps, $N$, required to simulate over the time interval of length $T=10$. The number of steps is given by $N = T/h$.\n\nFor the stiff system, the number of steps $N_{\\text{stiff}}$ is:\n$$ N_{\\text{stiff}} = \\frac{T}{h_s} = \\frac{10}{1/600} = 10 \\times 600 = 6000 $$\n\nFor the non-stiff system, the number of steps $N_{\\text{nonstiff}}$ is:\n$$ N_{\\text{nonstiff}} = \\frac{T}{h_n} = \\frac{10}{2} = 5 $$\n\nFinally, we compute the ratio $R = N_{\\text{stiff}}/N_{\\text{nonstiff}}$.\n$$ R = \\frac{N_{\\text{stiff}}}{N_{\\text{nonstiff}}} = \\frac{6000}{5} = 1200 $$\nThis ratio represents the computational cost penalty incurred due to stiffness when using an explicit method with a stability-constrained time step. The step size must be drastically reduced to resolve the fastest time scale (from $\\lambda = -1200$), even though that component of the solution decays almost instantaneously, while the component corresponding to $\\lambda = -3$ evolves much more slowly.", "answer": "$$\n\\boxed{1200}\n$$", "id": "2438035"}, {"introduction": "This final practice serves as a crucial cautionary tale, revealing the deceptive nature of numerical instability. By calculating the evolution of a stiff system with a step size that seems \"reasonable\" for the slow component, you will observe how the unstable fast component, despite its tiny initial value, explodes and leads to a wildly incorrect final answer [@problem_id:2438055]. This highlights the importance of respecting the stability limits of all modes, not just the dominant ones.", "problem": "Consider the linear, time-invariant system of ordinary differential equations (ODEs)\n$$\n\\frac{d\\mathbf{u}}{dt} = A\\,\\mathbf{u}, \\quad A = \\begin{pmatrix} -1  0 \\\\ 0  -100 \\end{pmatrix},\n$$\nwith initial condition\n$$\n\\mathbf{u}(0) = \\begin{pmatrix} 1 \\\\ 10^{-3} \\end{pmatrix}.\n$$\nStarting from $t=0$, apply the explicit Euler time-stepping method with constant step size $h = 0.05$ up to final time $T = 0.20$. Determine the explicit Euler approximation to the second component at time $T$, denoted $u_2(T)$, and provide its exact value (no rounding).", "solution": "The problem will first be subject to rigorous validation.\n\nStep 1: Extract Givens\nThe given information is as follows:\n- A system of ordinary differential equations (ODEs): $\\frac{d\\mathbf{u}}{dt} = A\\,\\mathbf{u}$\n- The matrix $A$: $A = \\begin{pmatrix} -1  0 \\\\ 0  -100 \\end{pmatrix}$\n- The initial condition: $\\mathbf{u}(0) = \\begin{pmatrix} 1 \\\\ 10^{-3} \\end{pmatrix}$\n- The numerical method: explicit Euler time-stepping method\n- The constant time step size: $h = 0.05$\n- The starting time: $t=0$\n- The final time: $T = 0.20$\n- The quantity to be determined: The explicit Euler approximation to the second component at time $T$, denoted $u_2(T)$.\n\nStep 2: Validate Using Extracted Givens\nThe problem is a standard exercise in the field of numerical analysis for ordinary differential equations, specifically computational engineering. It is scientifically grounded, well-posed, and objective. The problem asks for the result of applying a specific, well-defined numerical algorithm (explicit Euler) to a well-defined linear system of ODEs with given parameters.\n\nThe system is a stiff system, as the eigenvalues of matrix $A$ are $\\lambda_1 = -1$ and $\\lambda_2 = -100$, which have significantly different magnitudes. The stability of the explicit Euler method for an equation of the form $y' = \\lambda y$ is governed by the condition $|1 + h\\lambda| \\le 1$. For the second component of the system, we have $\\lambda_2 = -100$ and $h=0.05$. This gives $|1 + (0.05)(-100)| = |1 - 5| = |-4| = 4$. Since $4  1$, the time step $h=0.05$ violates the stability condition for the faster-decaying component.\n\nThis violation does not render the problem invalid. It simply means the numerical solution for this component will be unstable and will diverge from the true solution. The task is to compute the result of this unstable process, which is a mathematically sound and well-defined calculation. The problem provides all necessary information and contains no contradictions or ambiguities.\n\nStep 3: Verdict and Action\nThe problem is valid. A solution will be derived.\n\nThe explicit Euler method for the system $\\frac{d\\mathbf{u}}{dt} = A\\mathbf{u}$ is given by the recurrence relation:\n$$\n\\mathbf{u}^{n+1} = \\mathbf{u}^n + h A \\mathbf{u}^n\n$$\nwhere $\\mathbf{u}^n$ is the numerical approximation of $\\mathbf{u}(t_n)$ at time $t_n = n h$. This can be rewritten as:\n$$\n\\mathbf{u}^{n+1} = (\\mathbf{I} + hA) \\mathbf{u}^n\n$$\nwhere $\\mathbf{I}$ is the identity matrix.\n\nThe matrix $A$ is diagonal, which means the system of equations is decoupled. The two components $u_1$ and $u_2$ of the vector $\\mathbf{u} = \\begin{pmatrix} u_1 \\\\ u_2 \\end{pmatrix}$ evolve independently. We are asked to find the approximation for the second component, $u_2(T)$. The governing differential equation for $u_2$ is:\n$$\n\\frac{du_2}{dt} = -100 u_2\n$$\nwith the initial condition $u_2(0) = 10^{-3}$.\n\nThe explicit Euler scheme for this scalar equation is:\n$$\nu_2^{n+1} = u_2^n + h (-100 u_2^n) = (1 - 100h) u_2^n\n$$\nWe are given $h = 0.05$. Substituting this value into the recurrence relation gives:\n$$\nu_2^{n+1} = (1 - 100 \\times 0.05) u_2^n = (1 - 5) u_2^n = -4 u_2^n\n$$\nThis relation describes how the numerical approximation $u_2$ evolves from one time step to the next. The initial value is $u_2^0 = u_2(0) = 10^{-3}$.\n\nThe final time is $T = 0.20$ and the time step is $h=0.05$. The total number of steps, $N$, required to reach the final time is:\n$$\nN = \\frac{T}{h} = \\frac{0.20}{0.05} = 4\n$$\nWe need to find the value of $u_2$ after $4$ steps, which is $u_2^4$. We can apply the recurrence relation four times:\n\n- At $n=0$, $t_1 = 0.05$:\n$$\nu_2^1 = -4 u_2^0 = -4 \\times 10^{-3}\n$$\n- At $n=1$, $t_2 = 0.10$:\n$$\nu_2^2 = -4 u_2^1 = -4 \\times (-4 \\times 10^{-3}) = 16 \\times 10^{-3}\n$$\n- At $n=2$, $t_3 = 0.15$:\n$$\nu_2^3 = -4 u_2^2 = -4 \\times (16 \\times 10^{-3}) = -64 \\times 10^{-3}\n$$\n- At $n=3$, $t_4 = 0.20 = T$:\n$$\nu_2^4 = -4 u_2^3 = -4 \\times (-64 \\times 10^{-3}) = 256 \\times 10^{-3}\n$$\nAlternatively, the solution to the recurrence relation $u_2^{n+1} = (-4) u_2^n$ is $u_2^n = (-4)^n u_2^0$. For $n=4$:\n$$\nu_2^4 = (-4)^4 u_2^0 = 256 \\times 10^{-3}\n$$\nThe value of the explicit Euler approximation to the second component at time $T=0.20$ is:\n$$\nu_2(T) \\approx u_2^4 = 256 \\times 10^{-3} = 0.256\n$$\nThis result, a large and positive value, is in stark contrast to the true solution $u_2(t) = 10^{-3} \\exp(-100t)$, which at $t=0.20$ is $u_2(0.20) = 10^{-3} \\exp(-20)$, a number extremely close to zero. The large error is the direct consequence of the numerical instability noted during the validation phase. The calculation is nonetheless correct according to the rules of the specified method.", "answer": "$$\n\\boxed{0.256}\n$$", "id": "2438055"}]}