{"hands_on_practices": [{"introduction": "The transition from the continuous theory of boundary integral equations to a solvable algebraic system is a foundational step in mastering the Boundary Element Method. This practice demystifies that process by having you construct and solve a complete BEM system from first principles for a simple geometry. By analytically calculating each entry of a small $4 \\times 4$ matrix for a Laplace problem on a square, you will gain a concrete understanding of how discretization, collocation, and kernel integration come together [@problem_id:2374819].", "problem": "Consider the interior boundary value problem for Laplace’s equation in two dimensions ($2$D) on the unit square domain $\\Omega = (0,1)\\times(0,1)$ with boundary $\\Gamma = \\partial\\Omega$. Let $u$ denote the potential, and let $q = \\partial u/\\partial n$ denote the outward normal flux. Use the direct boundary integral equation for the Laplace operator with the two-dimensional free-space Green’s function\n$$\nG(\\mathbf{x},\\mathbf{y}) \\;=\\; -\\frac{1}{2\\pi}\\,\\ln|\\mathbf{x}-\\mathbf{y}|\\;,\n$$\nand adopt the standard interior convention $c(\\mathbf{x}) = \\tfrac{1}{2}$ at smooth boundary points $\\mathbf{x}\\in\\Gamma$. Discretize the boundary with one straight constant-strength element per side (four elements total), with collocation at each element’s midpoint. Index the elements as follows:\n- $\\Gamma_{1}:\\ \\{(s,0)\\,|\\,0\\le s\\le 1\\}$ with outward normal $\\mathbf{n}_{1}=(0,-1)$,\n- $\\Gamma_{2}:\\ \\{(1,s)\\,|\\,0\\le s\\le 1\\}$ with outward normal $\\mathbf{n}_{2}=(1,0)$,\n- $\\Gamma_{3}:\\ \\{(s,1)\\,|\\,0\\le s\\le 1\\}$ with outward normal $\\mathbf{n}_{3}=(0,1)$,\n- $\\Gamma_{4}:\\ \\{(0,s)\\,|\\,0\\le s\\le 1\\}$ with outward normal $\\mathbf{n}_{4}=(-1,0)$,\nand collocation points\n$$\n\\mathbf{x}_{1}=(\\tfrac{1}{2},0),\\quad \\mathbf{x}_{2}=(1,\\tfrac{1}{2}),\\quad \\mathbf{x}_{3}=(\\tfrac{1}{2},1),\\quad \\mathbf{x}_{4}=(0,\\tfrac{1}{2}).\n$$\nImpose Dirichlet data\n$$\nu=0\\ \\text{on}\\ \\Gamma_{1}\\cup\\Gamma_{4},\\qquad u=1\\ \\text{on}\\ \\Gamma_{2}\\cup\\Gamma_{3}.\n$$\nWith piecewise-constant $u$ and $q$ per element and collocation at the midpoints, assemble the resulting $4\\times 4$ linear system from first principles by evaluating the required boundary integrals exactly. Then solve the system for the four unknown element-constant outward fluxes $\\{q_{j}\\}_{j=1}^{4}$. Use principal values of inverse trigonometric functions in radians, and express your final result exactly (no numerical rounding) as a row matrix $(q_{1}\\ q_{2}\\ q_{3}\\ q_{4})$.", "solution": "The problem posed is a well-defined boundary value problem for the two-dimensional Laplace equation, to be solved using a direct boundary element method. All required data, including the geometry, boundary conditions, and discretization scheme, are provided. The problem is scientifically grounded, self-contained, and objective. It is therefore deemed valid and a solution will be provided.\n\nThe direct boundary integral equation (BIE) for an interior potential problem governed by Laplace's equation is given by\n$$c(\\mathbf{x}) u(\\mathbf{x}) + \\int_{\\Gamma} u(\\mathbf{y}) \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y = \\int_{\\Gamma} q(\\mathbf{y}) G(\\mathbf{x}, \\mathbf{y}) \\, d\\Gamma_y$$\nwhere $\\mathbf{x}$ is a point on the boundary $\\Gamma$, $c(\\mathbf{x})$ is the solid angle coefficient, $u$ is the potential, $q = \\partial u/\\partial n$ is the normal flux, and $G(\\mathbf{x},\\mathbf{y})$ is the free-space Green's function. For this problem, $G(\\mathbf{x},\\mathbf{y}) = -\\frac{1}{2\\pi}\\ln|\\mathbf{x}-\\mathbf{y}|$. The normal derivative of the Green's function is $\\frac{\\partial G}{\\partial n_y} = \\nabla_y G \\cdot \\mathbf{n}_y = -\\frac{1}{2\\pi} \\frac{(\\mathbf{y}-\\mathbf{x})\\cdot\\mathbf{n}_y}{|\\mathbf{y}-\\mathbf{x}|^2}$.\n\nThe boundary $\\Gamma$ is discretized into four constant-strength elements $\\Gamma_j$, with $j=1,2,3,4$. The potential $u$ and flux $q$ are assumed to be piecewise constant, $u_j$ and $q_j$, on each element $\\Gamma_j$. Applying the BIE at the mid-point $\\mathbf{x}_i$ of each element $\\Gamma_i$ yields a system of linear algebraic equations. Since the collocation points are at the midpoints of straight line segments, they are smooth points on the boundary, so $c(\\mathbf{x}_i) = 1/2$ for all $i$. The discretized BIE is:\n$$\\frac{1}{2} u_i + \\sum_{j=1}^{4} u_j \\left( \\int_{\\Gamma_j} \\frac{\\partial G(\\mathbf{x}_i, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y \\right) = \\sum_{j=1}^{4} q_j \\left( \\int_{\\Gamma_j} G(\\mathbf{x}_i, \\mathbf{y}) \\, d\\Gamma_y \\right)$$\nThis can be written in matrix form as $(\\mathbf{H} + \\frac{1}{2}\\mathbf{I})\\mathbf{u} = \\mathbf{G}\\mathbf{q}$, where the matrix entries are given by:\n$$H_{ij} = \\int_{\\Gamma_j} \\frac{\\partial G(\\mathbf{x}_i, \\mathbf{y})}{\\partial n_y} \\, d\\Gamma_y \\quad \\text{and} \\quad G_{ij} = \\int_{\\Gamma_j} G(\\mathbf{x}_i, \\mathbf{y}) \\, d\\Gamma_y$$\nThe knowns are the potentials on each element, given by the Dirichlet boundary conditions: $u_1 = 0$, $u_2 = 1$, $u_3 = 1$, $u_4 = 0$. The vector of potentials is $\\mathbf{u} = (0, 1, 1, 0)^T$. The unknowns are the fluxes $\\mathbf{q} = (q_1, q_2, q_3, q_4)^T$.\n\nWe must now evaluate the matrix coefficients $H_{ij}$ and $G_{ij}$.\nDue to the square geometry and the choice of collocation points, the matrices $\\mathbf{H}$ and $\\mathbf{G}$ will exhibit a symmetric structure. We will have diagonal elements ($i=j$), adjacent elements (e.g., $i=1, j=2$), and opposite elements ($i=1, j=3$).\n\nCalculation of $H_{ij}$:\nFor a straight element, the vector $\\mathbf{y}-\\mathbf{x}_i$ is tangential to the element $\\Gamma_i$ when $i=j$. The normal vector $\\mathbf{n}_i$ is orthogonal to the element. Thus, $(\\mathbf{y}-\\mathbf{x}_i) \\cdot \\mathbf{n}_i = 0$, which implies $H_{ii} = 0$ for all $i=1,2,3,4$.\nFor off-diagonal elements, we compute the integrals. Let's compute the first row ($i=1$, with $\\mathbf{x}_1 = (1/2, 0)$).\n$H_{12}$: Integration over $\\Gamma_2$, where $\\mathbf{y}=(1,s)$ for $s\\in[0,1]$ and $\\mathbf{n}_2=(1,0)$.\n$H_{12} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((1,s)-(1/2,0))\\cdot(1,0)}{|(1,s)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1/2}{(1/2)^2+s^2} ds = -\\frac{1}{4\\pi} \\left[2\\arctan(2s)\\right]_0^1 = -\\frac{\\arctan(2)}{2\\pi}$.\n$H_{14}$: Integration over $\\Gamma_4$, where $\\mathbf{y}=(0,s)$ for $s\\in[0,1]$ and $\\mathbf{n}_4=(-1,0)$.\n$H_{14} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((0,s)-(1/2,0))\\cdot(-1,0)}{|(0,s)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1/2}{(-1/2)^2+s^2} ds = H_{12} = -\\frac{\\arctan(2)}{2\\pi}$.\n$H_{13}$: Integration over $\\Gamma_3$, where $\\mathbf{y}=(s,1)$ for $s\\in[0,1]$ and $\\mathbf{n}_3=(0,1)$.\n$H_{13} = -\\frac{1}{2\\pi} \\int_0^1 \\frac{((s,1)-(1/2,0))\\cdot(0,1)}{|(s,1)-(1/2,0)|^2} ds = -\\frac{1}{2\\pi} \\int_0^1 \\frac{1}{(s-1/2)^2+1^2} ds = -\\frac{1}{2\\pi} \\left[\\arctan(s-1/2)\\right]_0^1 = -\\frac{1}{2\\pi}(\\arctan(1/2)-\\arctan(-1/2)) = -\\frac{\\arctan(1/2)}{\\pi}$.\nBy symmetry, let $h_a = H_{12} = H_{14} = H_{21} = \\dots = -\\frac{\\arctan(2)}{2\\pi}$ and $h_o = H_{13} = H_{31} = \\dots = -\\frac{\\arctan(1/2)}{\\pi}$.\nThe matrix $\\mathbf{H}$ is:\n$\\mathbf{H} = \\begin{pmatrix} 0 & h_a & h_o & h_a \\\\ h_a & 0 & h_a & h_o \\\\ h_o & h_a & 0 & h_a \\\\ h_a & h_o & h_a & 0 \\end{pmatrix}$.\nNote that the sum of each row is $2h_a+h_o = -\\frac{\\arctan(2)}{\\pi} - \\frac{\\arctan(1/2)}{\\pi} = -\\frac{1}{\\pi}(\\arctan(2)+\\arctan(1/2)) = -\\frac{1}{\\pi}(\\frac{\\pi}{2}) = -1/2$, which satisfies the sum rule $\\sum_j H_{ij} = -c(\\mathbf{x}_i)$.\n\nCalculation of $G_{ij}$:\nWe use the general integral formula: $\\int \\ln(t^2+c^2)dt = t\\ln(t^2+c^2) - 2t + 2c\\arctan(t/c)$.\n$G_{11}$: Integration over $\\Gamma_1$, where $\\mathbf{y}=(s,0)$ for $s\\in[0,1]$.\n$G_{11} = -\\frac{1}{2\\pi}\\int_0^1 \\ln|s-1/2| ds = -\\frac{1}{2\\pi} (2 \\int_0^{1/2} \\ln(t) dt) = -\\frac{1}{\\pi}[t\\ln t - t]_0^{1/2} = -\\frac{1}{\\pi}(\\frac{1}{2}\\ln(1/2)-\\frac{1}{2}) = \\frac{1+\\ln 2}{2\\pi}$.\n$G_{12}$: Integration over $\\Gamma_2$, $\\mathbf{y}=(1,s)$, $s\\in[0,1]$.\n$G_{12} = -\\frac{1}{2\\pi} \\int_0^1 \\ln\\sqrt{(1/2)^2+s^2} ds = -\\frac{1}{4\\pi}\\int_0^1 \\ln(s^2+(1/2)^2) ds = -\\frac{1}{4\\pi}[s\\ln(s^2+1/4)-2s+\\arctan(2s)]_0^1 = -\\frac{1}{4\\pi}(\\ln(5/4)-2+\\arctan(2)) = \\frac{2-\\ln(5/4)-\\arctan(2)}{4\\pi}$.\n$G_{13}$: Integration over $\\Gamma_3$, $\\mathbf{y}=(s,1)$, $s\\in[0,1]$.\n$G_{13} = -\\frac{1}{2\\pi} \\int_0^1 \\ln\\sqrt{(s-1/2)^2+1^2} ds = -\\frac{1}{4\\pi}\\int_{-1/2}^{1/2} \\ln(t^2+1) dt = -\\frac{2}{4\\pi}\\int_0^{1/2} \\ln(t^2+1) dt = -\\frac{1}{2\\pi}[t\\ln(t^2+1)-2t+2\\arctan(t)]_0^{1/2} = -\\frac{1}{2\\pi}(\\frac{1}{2}\\ln(5/4)-1+2\\arctan(1/2)) = \\frac{1-\\frac{1}{2}\\ln(5/4)-2\\arctan(1/2)}{2\\pi}$.\nBy symmetry, let $g_d = G_{11} = G_{22} = \\dots = \\frac{1+\\ln 2}{2\\pi}$, $g_a = G_{12} = G_{14} = \\dots = \\frac{2-\\ln(5/4)-\\arctan(2)}{4\\pi}$, and $g_o = G_{13} = G_{31} = \\dots = \\frac{2-\\ln(5/4)-4\\arctan(1/2)}{4\\pi}$.\nThe matrix $\\mathbf{G}$ is:\n$\\mathbf{G} = \\begin{pmatrix} g_d & g_a & g_o & g_a \\\\ g_a & g_d & g_a & g_o \\\\ g_o & g_a & g_d & g_a \\\\ g_a & g_o & g_a & g_d \\end{pmatrix}$.\n\nNow we assemble and solve the system $\\mathbf{G}\\mathbf{q}=\\mathbf{v}$, where $\\mathbf{v} = (\\mathbf{H} + \\frac{1}{2}\\mathbf{I})\\mathbf{u}$.\nWith $\\mathbf{u}=(0,1,1,0)^T$:\n$v_1 = \\frac{1}{2}u_1 + H_{12}u_2 + H_{13}u_3 + H_{14}u_4 = h_a(1) + h_o(1) = h_a+h_o$.\n$v_2 = H_{21}u_1 + \\frac{1}{2}u_2 + H_{23}u_3 + H_{24}u_4 = \\frac{1}{2}(1) + h_a(1) = 1/2+h_a$.\n$v_3 = H_{31}u_1 + H_{32}u_2 + \\frac{1}{2}u_3 + H_{34}u_4 = h_a(1) + \\frac{1}{2}(1) = 1/2+h_a$.\n$v_4 = H_{41}u_1 + H_{42}u_2 + H_{43}u_3 + \\frac{1}{2}u_4 = h_o(1) + h_a(1) = h_a+h_o$.\nSo, $\\mathbf{v} = (h_a+h_o, 1/2+h_a, 1/2+h_a, h_a+h_o)^T$.\n\nThe problem has reflectional symmetry about the line $y=x$. The boundary conditions respect this symmetry. Therefore, the solution for the fluxes must also be symmetric: $q_1=q_4$ and $q_2=q_3$. Let $q_1=q_4=A$ and $q_2=q_3=B$. The $4 \\times 4$ system reduces to a $2 \\times 2$ system:\n\\begin{align*} (g_d+g_a)A + (g_a+g_o)B &= h_a+h_o \\\\ (g_a+g_o)A + (g_d+g_a)B &= 1/2+h_a \\end{align*}\nSubtracting the two equations gives:\n$((g_d+g_a)-(g_a+g_o))A + ((g_a+g_o)-(g_d+g_a))B = (h_a+h_o)-(1/2+h_a)$\n$(g_d-g_o)A - (g_d-g_o)B = h_o-1/2$\n$(g_d-g_o)(A-B) = h_o-1/2$.\nAdding the two equations gives:\n$((g_d+g_a)+(g_a+g_o))(A+B) = (h_a+h_o) + (1/2+h_a)$\n$(g_d+2g_a+g_o)(A+B) = 1/2+2h_a+h_o$.\nSince $2h_a+h_o = -1/2$, the right side is $0$. The sum $g_d+2g_a+g_o$ is non-zero, hence we must have $A+B=0$, so $B=-A$. This is consistent with the physical requirement that the total flux out of the source-free domain is zero: $\\sum q_j L_j = q_1(1)+q_2(1)+q_3(1)+q_4(1) = A+B+B+A = 2(A+B)=0$.\nSubstituting $B=-A$ into the first equation of the $2 \\times 2$ system:\n$(g_d+g_a)A - (g_a+g_o)A = h_a+h_o$\n$(g_d-g_o)A = h_a+h_o \\implies A = \\frac{h_a+h_o}{g_d-g_o}$.\nWe compute the numerator and denominator.\n$h_a+h_o = -\\frac{\\arctan(2)}{2\\pi} - \\frac{\\arctan(1/2)}{\\pi} = -\\frac{1}{2\\pi}(\\arctan(2)+2\\arctan(1/2))$. Using the identity $\\arctan(2)+\\arctan(1/2)=\\pi/2$, so $\\arctan(2)=\\pi/2-\\arctan(1/2)$, we get:\n$h_a+h_o = -\\frac{1}{2\\pi}(\\pi/2 - \\arctan(1/2) + 2\\arctan(1/2)) = -\\frac{1}{2\\pi}(\\frac{\\pi}{2}+\\arctan(1/2))$.\nFor the denominator:\n$g_d=\\frac{1+\\ln 2}{2\\pi}$ and $g_o=\\frac{2-\\ln(5/4)-4\\arctan(1/2)}{4\\pi}=\\frac{1-\\frac{1}{2}(\\ln 5 - 2\\ln 2)-2\\arctan(1/2)}{2\\pi}$.\n$g_d-g_o = \\frac{1}{2\\pi}[(1+\\ln 2) - (1-\\frac{1}{2}\\ln 5 + \\ln 2-2\\arctan(1/2))] = \\frac{1}{2\\pi}(\\frac{1}{2}\\ln 5 + 2\\arctan(1/2))$.\nThus,\n$A = \\frac{-\\frac{1}{2\\pi}(\\frac{\\pi}{2}+\\arctan(1/2))}{\\frac{1}{2\\pi}(\\frac{1}{2}\\ln 5+2\\arctan(1/2))} = -\\frac{\\frac{\\pi}{2}+\\arctan(1/2)}{\\frac{1}{2}\\ln 5+2\\arctan(1/2)}$.\nThe fluxes are then:\n$q_1=q_4=A = -\\frac{\\pi/2+\\arctan(1/2)}{1/2\\ln 5+2\\arctan(1/2)}$\n$q_2=q_3=B=-A = \\frac{\\pi/2+\\arctan(1/2)}{1/2\\ln 5+2\\arctan(1/2)}$.\n\nThe final result is the row matrix $(q_1 \\ q_2 \\ q_3 \\ q_4)$.\nLet the constant $C = \\frac{\\frac{\\pi}{2}+\\arctan(\\frac{1}{2})}{\\frac{1}{2}\\ln 5+2\\arctan(\\frac{1}{2})} = \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})}$.\nThen $q_1 = -C$, $q_2 = C$, $q_3 = C$, $q_4 = -C$.\nThe final answer is presented below.", "answer": "$$ \\boxed{ \\begin{pmatrix} -\\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})} & \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})} & \\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})} & -\\frac{\\pi+2\\arctan(\\frac{1}{2})}{\\ln 5+4\\arctan(\\frac{1}{2})} \\end{pmatrix} } $$", "id": "2374819"}, {"introduction": "A key challenge that distinguishes the Boundary Element Method is its handling of singular kernels that arise from the fundamental solution. This practice focuses on mastering this crucial implementation detail by deriving and coding the analytical integral of the two-dimensional logarithmic kernel over a straight line element. Successfully completing this exercise [@problem_id:2377305] is essential for developing a robust and accurate BEM code, as it directly addresses the behavior of the method's core mathematical components.", "problem": "Consider the two-dimensional logarithmic kernel of the Laplace equation, defined as the scalar function $K(\\mathbf{x},\\mathbf{x}_0) = \\ln r$, where $r = \\|\\mathbf{x} - \\mathbf{x}_0\\|$ is the Euclidean distance between a source point $\\mathbf{x}$ and a field point $\\mathbf{x}_0$. For a straight-line constant element, let the element be the line segment $\\Gamma$ joining endpoints $\\mathbf{A} = (x_1, y_1)$ and $\\mathbf{B} = (x_2, y_2)$ in the plane, and let the field point be $\\mathbf{P} = (x_f, y_f)$. Define the line integral\n$$\nI(\\mathbf{A}, \\mathbf{B}, \\mathbf{P}) = \\int_{\\Gamma} \\ln\\!\\left(\\frac{\\|\\mathbf{x} - \\mathbf{P}\\|}{L_0}\\right)\\, d\\ell,\n$$\nwhere $d\\ell$ is the line element along $\\Gamma$, and $L_0$ is a fixed reference length introduced to render the logarithm argument dimensionless. All distances must be measured in meters, and use $L_0 = 1\\,\\mathrm{m}$. The quantity $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ has units of meters.\n\nTasks:\n- Starting from first principles, derive a closed-form expression for $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ valid for any non-degenerate straight segment $\\Gamma$ and for any field point $\\mathbf{P}$ in the plane, including the limiting case where the perpendicular distance from $\\mathbf{P}$ to the line of the segment is zero and the projection of $\\mathbf{P}$ onto the line lies within the segment.\n- Implement a program that evaluates $I(\\mathbf{A}, \\mathbf{B}, \\mathbf{P})$ using the derived closed-form expression for the following test suite, where all coordinates are in meters:\n  - Test $1$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,0.4)$.\n  - Test $2$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,0)$.\n  - Test $3$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (0.3,10^{-12})$.\n  - Test $4$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (-0.5,0)$.\n  - Test $5$: $\\mathbf{A} = (1,2)$, $\\mathbf{B} = (4,6)$, $\\mathbf{P} = (3,3)$.\n  - Test $6$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (10^{-9},0)$, $\\mathbf{P} = (0,1)$.\n  - Test $7$: $\\mathbf{A} = (0,0)$, $\\mathbf{B} = (1,0)$, $\\mathbf{P} = (1,0)$.\n\nAngle units, when applicable in any intermediate expression (for example, an inverse tangent), must be in radians. The final numeric results must be expressed in meters.\n\nYour program must produce a single line of output containing the results for Tests $1$ through $7$ as a comma-separated list of decimal numbers with exactly $12$ digits after the decimal point, enclosed in square brackets. For example, the output format must be\n$[r_1,r_2,r_3,r_4,r_5,r_6,r_7]$\nwhere each $r_k$ is a float in meters corresponding to Test $k$, formatted to $12$ digits after the decimal point. No additional output is permitted.", "solution": "The problem is subjected to validation and is deemed valid. It is scientifically grounded, well-posed, and objective. The problem statement is complete, consistent, and formalizable. The integral is a standard element in two-dimensional potential theory and boundary element methods. The logarithmic singularity is integrable, ensuring the problem is well-posed even when the evaluation point lies on the integration path.\n\nThe problem requires the derivation and implementation of a closed-form solution for the integral:\n$$\nI(\\mathbf{A}, \\mathbf{B}, \\mathbf{P}) = \\int_{\\Gamma} \\ln\\!\\left(\\frac{\\|\\mathbf{x} - \\mathbf{P}\\|}{L_0}\\right)\\, d\\ell\n$$\nGiven the reference length $L_0=1$, the argument of the logarithm becomes dimensionless. Since $\\ln(1)=0$, we have $\\ln(\\|\\mathbf{x} - \\mathbf{P}\\|/L_0) = \\ln(\\|\\mathbf{x} - \\mathbf{P}\\|) - \\ln(L_0) = \\ln(\\|\\mathbf{x} - \\mathbf{P}\\|)$. Let $r = \\|\\mathbf{x} - \\mathbf{P}\\|$. The integral simplifies to:\n$$\nI = \\int_{\\Gamma} \\ln r \\, d\\ell\n$$\n\nTo solve this integral, we establish a local coordinate system $(\\xi, \\eta)$ for the line segment $\\Gamma$. Let the origin be at point $\\mathbf{A}$, and let the $\\xi$-axis be aligned with the vector from $\\mathbf{A}$ to $\\mathbf{B}$. The length of the segment is $L = \\|\\mathbf{B} - \\mathbf{A}\\|$. A point $\\mathbf{x}$ on the segment can be parameterized by $\\xi \\in [0, L]$. The line element is $d\\ell = d\\xi$.\n\nThe unit tangent vector along the segment is $\\mathbf{t} = (\\mathbf{B} - \\mathbf{A})/L$. The unit normal vector, rotated counter-clockwise from $\\mathbf{t}$, is $\\mathbf{n}$. The field point $\\mathbf{P}$ can be described in this local system by coordinates $(\\xi_p, \\eta_p)$, which are the projections of the vector $\\mathbf{P} - \\mathbf{A}$ onto the local axes:\n$$\n\\xi_p = (\\mathbf{P} - \\mathbf{A}) \\cdot \\mathbf{t}\n$$\n$$\n\\eta_p = (\\mathbf{P} - \\mathbf{A}) \\cdot \\mathbf{n}\n$$\nThe distance $r$ from a point $\\mathbf{x}(\\xi)$ on the segment (with local coordinates $(\\xi, 0)$) to the field point $\\mathbf{P}$ (with local coordinates $(\\xi_p, \\eta_p)$) is given by:\n$$\nr = \\sqrt{(\\xi - \\xi_p)^2 + \\eta_p^2}\n$$\nThe integral becomes:\n$$\nI = \\int_{0}^{L} \\ln \\sqrt{(\\xi - \\xi_p)^2 + \\eta_p^2} \\, d\\xi = \\frac{1}{2} \\int_{0}^{L} \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) \\, d\\xi\n$$\n\nWe solve the indefinite integral $J(\\xi) = \\int \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) \\, d\\xi$ using integration by parts, $\\int u \\, dv = uv - \\int v \\, du$. Let $u = \\ln((\\xi - \\xi_p)^2 + \\eta_p^2)$ and $dv = d\\xi$. We choose $v = \\xi - \\xi_p$ for convenience. Then $du = \\frac{2(\\xi - \\xi_p)}{(\\xi - \\xi_p)^2 + \\eta_p^2} d\\xi$.\n$$\nJ(\\xi) = (\\xi - \\xi_p) \\ln \\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) - \\int (\\xi - \\xi_p) \\frac{2(\\xi - \\xi_p)}{(\\xi - \\xi_p)^2 + \\eta_p^2} \\, d\\xi\n$$\nThe remaining integral is evaluated by substitution. Let $s = \\xi - \\xi_p$:\n$$\n\\int \\frac{2s^2}{s^2 + \\eta_p^2} \\, ds = \\int \\frac{2(s^2 + \\eta_p^2) - 2\\eta_p^2}{s^2 + \\eta_p^2} \\, ds = \\int \\left( 2 - \\frac{2\\eta_p^2}{s^2 + \\eta_p^2} \\right) ds\n$$\n$$\n= 2s - 2\\eta_p^2 \\int \\frac{1}{s^2 + \\eta_p^2} ds = 2s - 2\\eta_p \\arctan\\left(\\frac{s}{\\eta_p}\\right)\n$$\nThis holds for any sign of $\\eta_p \\neq 0$. Substituting back $s = \\xi - \\xi_p$:\n$$\nJ(\\xi) = (\\xi - \\xi_p) \\ln\\left( (\\xi - \\xi_p)^2 + \\eta_p^2 \\right) - 2(\\xi - \\xi_p) + 2\\eta_p \\arctan\\left(\\frac{\\xi - \\xi_p}{\\eta_p}\\right)\n$$\nThe definite integral is $I = \\frac{1}{2}[J(L) - J(0)]$. Let $R_A = \\|\\mathbf{P} - \\mathbf{A}\\| = \\sqrt{\\xi_p^2 + \\eta_p^2}$ and $R_B = \\|\\mathbf{P} - \\mathbf{B}\\| = \\sqrt{(L-\\xi_p)^2 + \\eta_p^2}$.\n$$\nJ(L) = (L-\\xi_p)\\ln(R_B^2) - 2(L-\\xi_p) + 2\\eta_p \\arctan\\left(\\frac{L-\\xi_p}{\\eta_p}\\right)\n$$\n$$\nJ(0) = (-\\xi_p)\\ln(R_A^2) - 2(-\\xi_p) + 2\\eta_p \\arctan\\left(\\frac{-\\xi_p}{\\eta_p}\\right)\n$$\nSubtracting and simplifying gives:\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + \\eta_p \\left( \\arctan\\left(\\frac{L - \\xi_p}{\\eta_p}\\right) - \\arctan\\left(\\frac{-\\xi_p}{\\eta_p}\\right) \\right)\n$$\nUsing the identity $\\arctan(-x) = -\\arctan(x)$, the expression simplifies to:\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + \\eta_p \\left( \\arctan\\left(\\frac{L - \\xi_p}{\\eta_p}\\right) + \\arctan\\left(\\frac{\\xi_p}{\\eta_p}\\right) \\right)\n$$\nThis expression is an even function of $\\eta_p$, since for $\\eta_p < 0$, the initial factor $\\eta_p$ is negative, but each $\\arctan$ term also flips sign, resulting in the same value. Thus, we can write the formula using $|\\eta_p|$ to emphasize this symmetry:\n$$\nI = (L - \\xi_p) \\ln R_B + \\xi_p \\ln R_A - L + |\\eta_p| \\left( \\arctan\\left(\\frac{L - \\xi_p}{|\\eta_p|}\\right) + \\arctan\\left(\\frac{\\xi_p}{|\\eta_p|}\\right) \\right)\n$$\n\nNow, consider the limiting case where $\\mathbf{P}$ lies on the line containing the segment $\\Gamma$, i.e., $\\eta_p = 0$. We evaluate the integral directly for this case:\n$$\nI = \\int_0^L \\ln|\\xi - \\xi_p| \\, d\\xi\n$$\nUsing the antiderivative of $\\ln|u|$, which is $u \\ln|u| - u$:\n$$\nI = \\left[ (\\xi - \\xi_p) \\ln|\\xi - \\xi_p| - (\\xi - \\xi_p) \\right]_0^L\n$$\n$$\n= \\left((L - \\xi_p)\\ln|L - \\xi_p| - (L - \\xi_p)\\right) - \\left((-\\xi_p)\\ln|-\\xi_p| - (-\\xi_p)\\right)\n$$\n$$\nI = (L - \\xi_p)\\ln|L - \\xi_p| + \\xi_p\\ln|\\xi_p| - L\n$$\nThis expression is also the limit of the general formula as $\\eta_p \\to 0$, since $\\lim_{y \\to 0} y \\arctan(K/y) = 0$. When implementing, care must be taken for the cases where the argument of the logarithm is zero (i.e., $\\xi_p=0$ or $\\xi_p=L$). In these cases, the term $x \\ln|x|$ must be evaluated as its limit, which is $0$.\n\nThe implementation will use these two formulae. A small numerical tolerance on $|\\eta_p|/L$ is used to select between the general formula and the numerically more stable collinear case formula.\nThe coordinates of $\\mathbf{P}$ in the local system are computed as:\n$L = \\sqrt{(x_2-x_1)^2 + (y_2-y_1)^2}$\n$\\xi_p = \\frac{(x_f-x_1)(x_2-x_1) + (y_f-y_1)(y_2-y_1)}{L}$\n$\\eta_p = \\frac{(y_f-y_1)(x_2-x_1) - (x_f-x_1)(y_2-y_1)}{L}$\nThe quantity $(y_f-y_1)(x_2-x_1) - (x_f-x_1)(y_2-y_1)$ is related to the 2D vector cross product and represents the signed area of the parallelogram formed by vectors $\\mathbf{P}-\\mathbf{A}$ and $\\mathbf{B}-\\mathbf{A}$.", "answer": "```python\nimport numpy as np\n\ndef _x_times_log_abs_x(x):\n    \"\"\"\n    Calculates x * log(|x|) with a safeguard for x=0.\n    The limit of x*log|x| as x approaches 0 is 0.\n    \"\"\"\n    if np.abs(x) < 1e-30:\n        return 0.0\n    return x * np.log(np.abs(x))\n\ndef calculate_integral(A_coords, B_coords, P_coords):\n    \"\"\"\n    Calculates the integral I = integral over Gamma of ln(r) dl,\n    where Gamma is the line segment from A to B and r is the distance from a point on Gamma to P.\n    \n    Args:\n        A_coords (tuple): Coordinates of point A (x1, y1).\n        B_coords (tuple): Coordinates of point B (x2, y2).\n        P_coords (tuple): Coordinates of field point P (xf, yf).\n\n    Returns:\n        float: The value of the integral.\n    \"\"\"\n    A = np.array(A_coords, dtype=np.float64)\n    B = np.array(B_coords, dtype=np.float64)\n    P = np.array(P_coords, dtype=np.float64)\n\n    vec_AB = B - A\n    L_sq = vec_AB.dot(vec_AB)\n\n    # If the segment is a point (degenerate), the integral is zero.\n    if L_sq < 1e-30:\n        return 0.0\n    \n    L = np.sqrt(L_sq)\n    vec_AP = P - A\n\n    # Project P onto the local coordinate system of the segment.\n    # xi_p is the coordinate along the segment.\n    xi_p = vec_AP.dot(vec_AB) / L\n    \n    # eta_p is the perpendicular distance from P to the line containing the segment.\n    # It is calculated using the 2D cross product equivalent.\n    # The sign convention here corresponds to a normal vector obtained by a\n    # counter-clockwise rotation of the tangent vector.\n    # However, the final formula is independent of the sign of eta_p.\n    cross_prod = vec_AP[0] * vec_AB[1] - vec_AP[1] * vec_AB[0]\n    eta_p = -cross_prod / L\n\n    # Check for collinearity using a relative tolerance.\n    # If P is on (or very close to) the line containing the segment.\n    if np.abs(eta_p) / L < 1e-15:\n        term1 = _x_times_log_abs_x(L - xi_p)\n        term2 = _x_times_log_abs_x(xi_p)\n        return term1 + term2 - L\n    else:\n        # General case where P is not on the line.\n        abs_eta_p = np.abs(eta_p)\n        \n        # Distances from P to endpoints A and B.\n        # Calculated using local coordinates for robustness.\n        R_A = np.sqrt(xi_p**2 + eta_p**2)\n        R_B = np.sqrt((L - xi_p)**2 + eta_p**2)\n\n        term_log_A = xi_p * np.log(R_A)\n        term_log_B = (L - xi_p) * np.log(R_B)\n        \n        # Arctangent term.\n        arg1 = (L - xi_p) / abs_eta_p\n        arg2 = xi_p / abs_eta_p\n        term_atan = abs_eta_p * (np.arctan(arg1) + np.arctan(arg2))\n        \n        return term_log_A + term_log_B - L + term_atan\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test cases and prints the results\n    in the required format.\n    \"\"\"\n    test_cases = [\n        # Test 1: General case\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 0.4)},\n        # Test 2: P on the segment\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 0.0)},\n        # Test 3: P very close to the segment\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (0.3, 1e-12)},\n        # Test 4: P on line extension\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (-0.5, 0.0)},\n        # Test 5: General segment and point\n        {'A': (1.0, 2.0), 'B': (4.0, 6.0), 'P': (3.0, 3.0)},\n        # Test 6: Very short segment\n        {'A': (0.0, 0.0), 'B': (1e-9, 0.0), 'P': (0.0, 1.0)},\n        # Test 7: P at an endpoint\n        {'A': (0.0, 0.0), 'B': (1.0, 0.0), 'P': (1.0, 0.0)},\n    ]\n\n    results = []\n    for case in test_cases:\n        result = calculate_integral(case['A'], case['B'], case['P'])\n        results.append(f\"{result:.12f}\")\n\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2377305"}, {"introduction": "Beyond solving single-domain problems, the Boundary Element Method is a powerful tool for analyzing complex interactions between multiple bodies. This practice applies BEM to investigate a critical issue in numerical stability: the degradation of matrix conditioning when boundaries are in close proximity. By modeling a two-disc system and observing how the condition number of the system matrix explodes as the gap between them shrinks, you will gain practical insight into the challenges and limitations of BEM in realistic engineering and physics simulations [@problem_id:3103590].", "problem": "Consider the two-dimensional Laplace equation for the exterior of two disjoint circular discs. Let the unknown potential be $u(\\mathbf{x})$ satisfying $\\Delta u(\\mathbf{x}) = 0$ in the unbounded exterior domain outside two circles. On each circle boundary, $u$ is prescribed (Dirichlet boundary condition). The circles have equal radius $R$ and are centered at $\\mathbf{c}_1 = \\left(-R - \\frac{g}{2}, 0\\right)$ and $\\mathbf{c}_2 = \\left(R + \\frac{g}{2}, 0\\right)$, so that the gap between the two closest boundary points along the horizontal axis is $g$. The boundary curves are parameterized by angles in radians. Take $R = 1$ and use $N$ uniformly spaced collocation points per circle, with $N = 64$.\n\nStarting from first principles, use the Boundary Element Method (BEM) to formulate a collocation-based discretization of the exterior Dirichlet problem using the double-layer potential. The fundamental solution for the two-dimensional Laplace equation is $G(\\mathbf{x}, \\mathbf{y}) = -\\frac{1}{2\\pi} \\log \\|\\mathbf{x} - \\mathbf{y}\\|$. The double-layer operator involves the kernel\n$$\nK(\\mathbf{x}, \\mathbf{y}) = \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_{\\mathbf{y}}} = \\frac{1}{2\\pi} \\frac{\\mathbf{n}(\\mathbf{y}) \\cdot (\\mathbf{x} - \\mathbf{y})}{\\|\\mathbf{x} - \\mathbf{y}\\|^2},\n$$\nwhere $\\mathbf{n}(\\mathbf{y})$ is the unit normal vector at $\\mathbf{y}$ pointing outward from each disc’s interior. The exterior Dirichlet problem leads to a boundary integral equation of the second kind, with the well-known jump relation introducing a $-\\frac{1}{2}$ multiple of the identity operator in the limit to the boundary. For a collocation method with Nyström-type quadrature, take uniform weights $w_j = \\frac{2\\pi R}{N}$ for each boundary point.\n\nTask:\n- Derive and build the $2N \\times 2N$ discrete system matrix $A(g)$ for the combined boundary of two circles, corresponding to the operator $-\\frac{1}{2}I + K$, where $K$ is discretized using the above kernel and weights. Ensure that diagonal entries correspond to the $-\\frac{1}{2}$ identity contribution, and for the integral part omit the singular self-interaction by skipping $j = i$ in the quadrature sum.\n- The Dirichlet boundary values are given by constants: $u(\\mathbf{x}) = 1$ on the left disc and $u(\\mathbf{x}) = 0$ on the right disc. For this task, you do not need to solve for the density; instead, you must quantify the conditioning of the matrix $A(g)$ only. Specifically, compute the $2$-norm condition number $\\kappa_2(A(g)) = \\frac{\\sigma_{\\max}}{\\sigma_{\\min}}$, where $\\sigma_{\\max}$ and $\\sigma_{\\min}$ are the largest and smallest singular values of $A(g)$, respectively.\n- Use angles in radians for all parameterizations.\n- Geometry is dimensionless; no physical units are required.\n\nTest Suite:\n- Use radius $R = 1$ and $N = 64$ collocation points per circle.\n- Evaluate the condition number for the following gaps: $g \\in \\{0.50, 0.20, 0.10, 0.05, 0.02\\}$.\n\nRequired Final Output Format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,r_3,r_4,r_5]$), where each $r_i$ is the condition number for the corresponding $g$ rounded to six decimal places as a decimal number.", "solution": "The problem requires the computation of the condition number of the system matrix arising from a Boundary Element Method (BEM) discretization of the 2D exterior Laplace problem for two disjoint circular discs. The problem is well-posed and contains all necessary information for its solution.\n\nThe potential $u(\\mathbf{x})$ satisfies the Laplace equation in the domain $\\Omega$ exterior to two circles, $\\Gamma_1$ and $\\Gamma_2$:\n$$\n\\Delta u(\\mathbf{x}) = 0, \\quad \\mathbf{x} \\in \\Omega\n$$\nwith Dirichlet boundary conditions prescribed on the boundaries $\\Gamma = \\Gamma_1 \\cup \\Gamma_2$. The solution $u(\\mathbf{x})$ can be represented using a double-layer potential with an unknown density function $\\sigma(\\mathbf{y})$ defined on the boundary $\\Gamma$:\n$$\nu(\\mathbf{x}) = \\int_{\\Gamma} K(\\mathbf{x}, \\mathbf{y}) \\sigma(\\mathbf{y}) \\, dS(\\mathbf{y})\n$$\nwhere $K(\\mathbf{x}, \\mathbf{y})$ is the double-layer kernel, derived from the normal derivative of the fundamental solution for the 2D Laplace equation, $G(\\mathbf{x}, \\mathbf{y}) = -\\frac{1}{2\\pi} \\log \\|\\mathbf{x} - \\mathbf{y}\\|$. The kernel is given by:\n$$\nK(\\mathbf{x}, \\mathbf{y}) = \\frac{\\partial G(\\mathbf{x}, \\mathbf{y})}{\\partial n_{\\mathbf{y}}} = \\frac{1}{2\\pi} \\frac{\\mathbf{n}(\\mathbf{y}) \\cdot (\\mathbf{x} - \\mathbf{y})}{\\|\\mathbf{x} - \\mathbf{y}\\|^2}\n$$\nHere, $\\mathbf{n}(\\mathbf{y})$ is the unit normal vector at the boundary point $\\mathbf{y}$, directed outward from the interior of each disc.\n\nBy taking the limit as the point $\\mathbf{x}$ in the exterior domain approaches a point on the boundary $\\Gamma$, we use the jump properties of the double-layer potential to obtain a boundary integral equation (BIE) of the second kind for the unknown density $\\sigma$:\n$$\nu(\\mathbf{x}) = -\\frac{1}{2} \\sigma(\\mathbf{x}) + \\text{P.V.} \\int_{\\Gamma} K(\\mathbf{x}, \\mathbf{y}) \\sigma(\\mathbf{y}) \\, dS(\\mathbf{y}), \\quad \\mathbf{x} \\in \\Gamma\n$$\nwhere P.V. denotes the Cauchy Principal Value of the integral. This can be written in operator form as $(-\\frac{1}{2}I + \\mathcal{K})\\sigma = u$, where $\\mathcal{K}$ is the double-layer integral operator.\n\nTo solve this equation numerically, we employ a Nyström-based collocation method. The boundary $\\Gamma$ is discretized into $2N$ points, with $N=64$ points on each circle. Let these collocation points be $\\{\\mathbf{x}_i\\}_{i=1}^{2N}$. The integral is approximated by a quadrature sum. Using the given uniform weights $w_j = \\frac{2\\pi R}{N}$ for each quadrature point $\\mathbf{y}_j$ (which are the same as the collocation points, $\\mathbf{y}_j = \\mathbf{x}_j$), the discretized BIE at each collocation point $\\mathbf{x}_i$ is:\n$$\nu(\\mathbf{x}_i) = -\\frac{1}{2} \\sigma(\\mathbf{x}_i) + \\sum_{j=1, j \\neq i}^{2N} K(\\mathbf{x}_i, \\mathbf{x}_j) \\sigma(\\mathbf{x}_j) w_j\n$$\nThe problem specifies that the singular term ($j=i$) in the quadrature sum is omitted. This leads to a system of linear equations $A\\vec{\\sigma} = \\vec{u}$, where $\\vec{\\sigma}$ is the vector of unknown densities $\\{\\sigma(\\mathbf{x}_j)\\}$ and $\\vec{u}$ is the vector of prescribed boundary values $\\{u(\\mathbf{x}_i)\\}$. The entries of the $2N \\times 2N$ system matrix $A$ are defined as:\n$$\nA_{ij} = \\begin{cases}\n    -\\frac{1}{2} & \\text{if } i = j \\\\\n    w_j K(\\mathbf{x}_i, \\mathbf{x}_j) & \\text{if } i \\neq j\n\\end{cases}\n$$\nSubstituting the expressions for $w_j$ and $K(\\mathbf{x}_i, \\mathbf{x}_j)$, we have for $i \\neq j$:\n$$\nA_{ij} = \\left(\\frac{2\\pi R}{N}\\right) \\left(\\frac{1}{2\\pi}\\right) \\frac{\\mathbf{n}(\\mathbf{x}_j) \\cdot (\\mathbf{x}_i - \\mathbf{x}_j)}{\\|\\mathbf{x}_i - \\mathbf{x}_j\\|^2} = \\frac{R}{N} \\frac{\\mathbf{n}(\\mathbf{x}_j) \\cdot (\\mathbf{x}_i - \\mathbf{x}_j)}{\\|\\mathbf{x}_i - \\mathbf{x}_j\\|^2}\n$$\nThe geometry is defined by two circles of radius $R=1$. Their centers are $\\mathbf{c}_1 = (-1 - g/2, 0)$ and $\\mathbf{c}_2 = (1 + g/2, 0)$, where $g$ is the gap. The $N=64$ collocation points on each circle are uniformly distributed in angle. Let the angles be $\\theta_k = \\frac{2\\pi k}{N}$ for $k=0, \\dots, N-1$.\nThe points on circle 1 are $\\mathbf{x}_k = \\mathbf{c}_1 + R(\\cos\\theta_k, \\sin\\theta_k)$ for $k=0, \\dots, N-1$.\nThe points on circle 2 are $\\mathbf{x}_{k+N} = \\mathbf{c}_2 + R(\\cos\\theta_k, \\sin\\theta_k)$ for $k=0, \\dots, N-1$.\nThe outward normal vector at a point $\\mathbf{x}$ on a circle with center $\\mathbf{c}$ is $\\mathbf{n}(\\mathbf{x}) = (\\mathbf{x}-\\mathbf{c})/R$.\n\nThe task is to assemble the matrix $A(g)$ for several values of $g$ and compute its 2-norm condition number, $\\kappa_2(A) = \\sigma_{\\max}/\\sigma_{\\min}$, where $\\sigma_{\\max}$ and $\\sigma_{\\min}$ are the maximum and minimum singular values of $A$. This is performed using standard numerical linear algebra routines. The condition number quantifies the sensitivity of the solution of the linear system to perturbations in the input data and is an important measure of the stability of the numerical method, particularly as the geometry becomes nearly singular ($g \\to 0$).\n\nThe procedure is as follows:\n1. For each value of $g$ in $\\{0.50, 0.20, 0.10, 0.05, 0.02\\}$, set $R=1$ and $N=64$.\n2. Generate the $2N=128$ collocation points and their corresponding normal vectors for the two circles.\n3. Construct the $128 \\times 128$ matrix $A(g)$ according to the formula specified above.\n4. Compute the singular values of $A(g)$ and find the ratio of the largest to the smallest to obtain the condition number.\n5. Store the result rounded to six decimal places.\n\nThis process is repeated for each specified gap $g$, and the results are compiled into a final list.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the 2-norm condition number of the BEM matrix for the exterior\n    Laplace problem on two circles for various gap sizes.\n    \"\"\"\n\n    test_cases = [0.50, 0.20, 0.10, 0.05, 0.02]\n    R = 1.0\n    N = 64\n    \n    results = []\n\n    for g in test_cases:\n        # Step 1: Define the geometry (collocation points and normals)\n        M = 2 * N\n        \n        # Centers of the two circles\n        c1 = np.array([-R - g / 2.0, 0.0])\n        c2 = np.array([R + g / 2.0, 0.0])\n\n        # Uniformly spaced angles for parameterization\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n        \n        # Points and normals for circle 1\n        # For a circle, the outward normal is (x-c)/R.\n        # Since points are c + R*(cos,sin), normal is (cos,sin).\n        unit_vectors = np.vstack((np.cos(angles), np.sin(angles))).T\n        points1 = c1 + R * unit_vectors\n        normals1 = unit_vectors\n\n        # Points and normals for circle 2\n        points2 = c2 + R * unit_vectors\n        normals2 = unit_vectors\n\n        # Combine into single arrays for the entire boundary\n        points = np.vstack((points1, points2))  # Shape (M, 2)\n        normals = np.vstack((normals1, normals2))  # Shape (M, 2)\n\n        # Step 2: Assemble the system matrix A\n        w = 2 * np.pi * R / N  # Quadrature weight\n        A = np.zeros((M, M))\n\n        # Vectorized calculation of off-diagonal elements\n        # Shape broadcasting: xi becomes (M, 1, 2), xj becomes (1, M, 2)\n        xi = points[:, np.newaxis, :]\n        xj = points[np.newaxis, :, :]\n        diff = xi - xj  # Shape: (M, M, 2)\n\n        # Squared norm of the difference vector\n        diff_norm_sq = np.sum(diff**2, axis=2) # Shape: (M, M)\n        \n        # To avoid division by zero on the diagonal (i=j), add the identity matrix.\n        # The diagonal entries of the final matrix will be overwritten anyway.\n        diff_norm_sq_safe = diff_norm_sq + np.eye(M)\n\n        # Dot product of normal at source point (j) with difference vector\n        nj = normals[np.newaxis, :, :]  # Shape: (1, M, 2)\n        n_dot_diff = np.sum(nj * diff, axis=2)  # Shape: (M, M)\n\n        # Kernel evaluation\n        kernel_val = (1 / (2 * np.pi)) * n_dot_diff / diff_norm_sq_safe\n        \n        # Matrix of off-diagonal contributions\n        A = kernel_val * w\n        \n        # Set the diagonal elements based on the BIE jump relation\n        np.fill_diagonal(A, -0.5)\n\n        # Step 3: Compute the 2-norm condition number\n        cond_num = np.linalg.cond(A, p=2)\n        results.append(round(cond_num, 6))\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3103590"}]}