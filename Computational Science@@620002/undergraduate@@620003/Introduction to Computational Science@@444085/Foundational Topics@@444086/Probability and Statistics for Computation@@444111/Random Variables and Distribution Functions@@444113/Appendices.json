{"hands_on_practices": [{"introduction": "Understanding how a random variable's distribution changes under transformation is a fundamental skill in probability and statistics. This first practice introduces this concept with a simple linear transformation, $Y = -X$. By working through this exercise [@problem_id:1416764], you will reinforce your understanding of the core definition of the Cumulative Distribution Function (CDF) and see how to derive a new CDF from an existing one.", "problem": "In an experiment studying one-dimensional particle diffusion, the final position of a particle is described by a continuous random variable $X$. The particle is constrained to move on the interval $[0, 2]$. Its position is characterized by the Cumulative Distribution Function (CDF), $F_X(x)$, given by:\n$$\nF_X(x) = \\begin{cases}\n0, & x < 0 \\\\\n\\frac{x^2}{4}, & 0 \\le x < 2 \\\\\n1, & x \\ge 2\n\\end{cases}\n$$\nA measurement apparatus records the particle's position but with a sign inversion, producing a new random variable $Y = -X$.\n\nWhich of the following represents the CDF, $F_Y(y)$, of the random variable $Y$?\n\nA. $F_Y(y) = \\begin{cases} 0, & y \\le -2 \\\\ 1 - \\frac{y^2}{4}, & -2 < y \\le 0 \\\\ 1, & y > 0 \\end{cases}$\n\nB. $F_Y(y) = \\begin{cases} 0, & y < -2 \\\\ \\frac{(y+2)^2}{4}, & -2 \\le y < 0 \\\\ 1, & y \\ge 0 \\end{cases}$\n\nC. $F_Y(y) = \\begin{cases} 0, & y < 0 \\\\ 1-\\frac{(2-y)^2}{4}, & 0 \\le y < 2 \\\\ 1, & y \\ge 2 \\end{cases}$\n\nD. $F_Y(y) = \\begin{cases} 0, & y < 0 \\\\ \\frac{y^2}{4}, & 0 \\le y < 2 \\\\ 1, & y \\ge 2 \\end{cases}$", "solution": "We are given a continuous random variable $X$ supported on $[0,2]$ with CDF\n$$\nF_{X}(x)=\\begin{cases}\n0, & x<0 \\\\\n\\frac{x^{2}}{4}, & 0\\le x<2 \\\\\n1, & x\\ge 2\n\\end{cases}\n$$\nand a transformed random variable $Y=-X$. We seek the CDF $F_{Y}(y)=\\mathbb{P}(Y\\le y)$.\n\nFirst, determine the support of $Y$. Since $X\\in[0,2]$, it follows that $Y=-X\\in[-2,0]$.\n\nFor any real $y$, by definition of CDF and the monotone transformation $Y=-X$ (which is strictly decreasing), we have\n$$\nF_{Y}(y)=\\mathbb{P}(Y\\le y)=\\mathbb{P}(-X\\le y)=\\mathbb{P}(X\\ge -y).\n$$\nUsing the relation $\\mathbb{P}(X\\ge a)=1-F_{X}(a)$ for continuous $X$ (here $F_{X}$ is continuous), we obtain for values where $-y$ lies in the support,\n$$\nF_{Y}(y)=1-F_{X}(-y).\n$$\n\nNow evaluate piecewise over the real line based on the support of $Y$.\n\n- If $y<-2$, then $Y\\ge -2$ almost surely, so $\\mathbb{P}(Y\\le y)=0$. Hence $F_{Y}(y)=0$.\n\n- If $-2<y<0$, then $-y\\in(0,2)$ and we use $F_{X}(-y)=\\frac{(-y)^{2}}{4}=\\frac{y^{2}}{4}$ to get\n$$\nF_{Y}(y)=1-F_{X}(-y)=1-\\frac{y^{2}}{4}.\n$$\n\n- At the boundary points:\n  - At $y=-2$, $-y=2$ and $F_{X}(2)=1$, so $F_{Y}(-2)=1-1=0$.\n  - At $y=0$, $-y=0$ and $F_{X}(0)=0$, so $F_{Y}(0)=1$.\n  This is consistent with right-continuity of the CDF and the above piecewise expressions.\n\n- If $y>0$, then $Y\\le 0$ almost surely, so $\\mathbb{P}(Y\\le y)=1$. Hence $F_{Y}(y)=1$.\n\nCombining, we have\n$$\nF_{Y}(y)=\\begin{cases}\n0, & y\\le -2 \\\\\n1-\\frac{y^{2}}{4}, & -2<y\\le 0 \\\\\n1, & y>0\n\\end{cases}\n$$\nwhich matches option A.", "answer": "$$\\boxed{A}$$", "id": "1416764"}, {"introduction": "Building on the previous exercise, we now explore a non-linear transformation, $Y = X^2$. Such transformations are common in science and engineering, where quantities like energy are often related to the square of another variable. This practice [@problem_id:1416753] challenges you to handle a transformation that is not one-to-one, requiring careful application of the CDF definition to correctly account for the mapping from the original variable's domain to the new one.", "problem": "Let $X$ be a continuous random variable whose cumulative distribution function (CDF), $F_X(x)$, is given by the following piecewise expression:\n$$\nF_X(x) =\n\\begin{cases}\n0 & \\text{for } x \\le -1 \\\\\n\\frac{1}{2}(x+1)^2 & \\text{for } -1 < x \\le 0 \\\\\n1 - \\frac{1}{2}(1-x)^2 & \\text{for } 0 < x \\le 1 \\\\\n1 & \\text{for } x > 1\n\\end{cases}\n$$\nA new random variable $Y$ is defined by the transformation $Y = X^2$. Find the cumulative distribution function, $F_Y(y)$, for the random variable $Y$. The answer should be presented as a single, closed-form analytic expression for $F_Y(y)$, which may be defined piecewise.", "solution": "We are given a continuous random variable $X$ with support in $[-1,1]$ and cumulative distribution function\n$$\nF_{X}(x)=\n\\begin{cases}\n0 & x \\le -1 \\\\\n\\frac{1}{2}(x+1)^{2} & -1 < x \\le 0 \\\\\n1 - \\frac{1}{2}(1-x)^{2} & 0 < x \\le 1 \\\\\n1 & x > 1\n\\end{cases}\n$$\nDefine $Y=X^{2}$. The support of $Y$ is $[0,1]$ because $|X| \\le 1$. For any $y \\in \\mathbb{R}$, the cumulative distribution function of $Y$ is\n$$\nF_{Y}(y)=\\mathbb{P}(Y \\le y)=\\mathbb{P}(X^{2} \\le y).\n$$\nIf $y \\le 0$, then $X^{2} \\le y$ cannot occur for a continuous $X$ except at a single point of probability zero, so\n$$\nF_{Y}(y)=0 \\quad \\text{for } y \\le 0.\n$$\nIf $y \\ge 1$, then $X^{2} \\le y$ holds surely because $X \\in [-1,1]$, so\n$$\nF_{Y}(y)=1 \\quad \\text{for } y \\ge 1.\n$$\nFor $0<y<1$, write $a=\\sqrt{y} \\in (0,1)$. Then\n$$\nF_{Y}(y)=\\mathbb{P}(-a \\le X \\le a)=F_{X}(a)-F_{X}(-a).\n$$\nUsing the given $F_{X}$ on the appropriate intervals,\n$$\nF_{X}(a)=1-\\frac{1}{2}(1-a)^{2}, \\qquad F_{X}(-a)=\\frac{1}{2}(1-a)^{2},\n$$\nso\n$$\nF_{Y}(y)=\\left[1-\\frac{1}{2}(1-a)^{2}\\right]-\\left[\\frac{1}{2}(1-a)^{2}\\right]=1-(1-a)^{2}=2a-a^{2}.\n$$\nSubstituting $a=\\sqrt{y}$ gives\n$$\nF_{Y}(y)=2\\sqrt{y}-y \\quad \\text{for } 0<y<1.\n$$\nThis expression extends continuously to $y=0$ and $y=1$, yielding the final piecewise CDF:\n$$\nF_{Y}(y)=\n\\begin{cases}\n0 & y \\le 0 \\\\\n2\\sqrt{y}-y & 0< y \\le 1 \\\\\n1 & y > 1\n\\end{cases}\n$$\nwhich is right-continuous and nondecreasing, as required for a CDF.", "answer": "$$\\boxed{\nF_{Y}(y)=\n\\begin{cases}\n0 & y \\le 0 \\\\\n2\\sqrt{y}-y & 0< y \\le 1 \\\\\n1 & y > 1\n\\end{cases}\n}$$", "id": "1416753"}, {"introduction": "The true power of distribution functions in computational science is revealed when we use them to generate data for simulations. This final practice bridges the gap from pure theory to practical application by exploring the inverse transform sampling method, a cornerstone technique for random number generation. You will tackle a more realistic mixed random variable, with both continuous and discrete components, deriving its CDF and generalized inverse, and finally implementing a sampler in code to bring the distribution to life [@problem_id:3183232].", "problem": "Let $X$ be a mixed random variable whose law consists of an absolutely continuous component with a piecewise-defined probability density function (PDF) and two point-mass spikes (atoms). Use the following fundamental definitions as the base:\n- The cumulative distribution function (CDF) of $X$ is $F_X(x) = \\mathbb{P}(X \\le x)$.\n- Where $X$ is absolutely continuous, $F_X$ is differentiable and its derivative equals the PDF: $f_X(x) = \\frac{d}{dx}F_X(x)$.\n- At any atom located at $x_0$, the jump size of the CDF is $F_X(x_0) - F_X(x_0^-) = \\mathbb{P}(X = x_0)$.\n- The generalized inverse CDF (also called the quantile function) is $F_X^{-1}(u) = \\inf\\{x \\in \\mathbb{R} : F_X(x) \\ge u\\}$ for $u \\in [0,1]$.\n- The inverse CDF sampling method uses a Uniform Random Variable (URV) $U \\sim \\mathrm{Uniform}(0,1)$ and sets $X = F_X^{-1}(U)$.\n\nThe distribution of $X$ is specified as follows:\n- Continuous part with PDF $f_X(x)$:\n  1. For $x \\in [0,1)$, $f_X(x) = a$ with $a = 0.4$.\n  2. For $x \\in [1,2)$, $f_X(x) = b\\,(2-x)$ with $b = 0.8$.\n- Two atoms (spikes):\n  1. At $x = 0.5$ with mass $p_1 = 0.1$.\n  2. At $x = 2$ with mass $p_2 = 0.1$.\n\nTasks:\n1. Starting strictly from the above fundamental definitions, derive the complete piecewise expression of the CDF $F_X(x)$ for all real $x$. Your derivation must correctly account for the continuous accumulation on the intervals $[0,1)$ and $[1,2)$ and the jumps at $x=0.5$ and $x=2$ of sizes $p_1$ and $p_2$ respectively.\n2. Using only the definition $F_X^{-1}(u) = \\inf\\{x : F_X(x) \\ge u\\}$, derive a complete, piecewise-analytic expression for the generalized inverse CDF $F_X^{-1}(u)$ on $u \\in [0,1]$. Your expression must explicitly handle the discontinuities of $F_X$ at $u$ corresponding to the jumps at $x=0.5$ and $x=2$.\n3. Implement a program that:\n   - Computes and uses your derived $F_X^{-1}(u)$ to sample $X$ via inverse CDF given $U \\sim \\mathrm{Uniform}(0,1)$.\n   - Verifies correctness across discontinuities by checking that specific $u$ values map to the atom locations, and by empirically validating the probabilities of five disjoint sets that partition the support in a way that isolates both continuous regions and atoms:\n     - $S_1 = \\{X < 0.5\\}$ with expected probability $0.2$.\n     - $S_2 = \\{X = 0.5\\}$ with expected probability $0.1$.\n     - $S_3 = \\{0.5 < X < 1\\}$ with expected probability $0.2$.\n     - $S_4 = \\{1 \\le X < 2\\}$ with expected probability $0.4$.\n     - $S_5 = \\{X = 2\\}$ with expected probability $0.1$.\n   - Uses a tolerance parameter $\\varepsilon$ to declare empirical validation success if the maximum absolute deviation between empirical and theoretical probabilities across $S_1,\\dots,S_5$ is less than or equal to $\\varepsilon$.\n\nTest suite:\n- Case $1$ (deterministic spike mapping): Verify $F_X^{-1}(u)$ at $u$ values $[0.2, 0.25, 0.3, 0.9, 0.95, 1.0]$ equals $[0.5, 0.5, 0.5, 2, 2, 2]$ respectively.\n- Case $2$ (sampling, moderate size): Sample $N=5000$ values with seed $123$ and tolerance $\\varepsilon = 0.02$; return a boolean indicating whether all five sets $S_1$â€“$S_5$ pass simultaneously.\n- Case $3$ (sampling, larger size): Sample $N=50000$ values with seed $456$ and tolerance $\\varepsilon = 0.005$; return a boolean indicating whether all five sets $S_1$â€“$S_5$ pass simultaneously.\n- Case $4$ (monotonicity of the quantile): Check that $F_X^{-1}(u)$ is nondecreasing on the grid $[0.0, 0.1, 0.19, 0.2, 0.25, 0.3, 0.31, 0.49, 0.5, 0.7, 0.89, 0.9, 0.95, 1.0]$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[result1,result2,result3,result4]\"). Each result must be a boolean indicating pass or fail for the corresponding test case in the order given.\n- No additional text must be printed.", "solution": "The problem requires the derivation of the cumulative distribution function (CDF) $F_X(x)$ and its generalized inverse $F_X^{-1}(u)$ for a mixed random variable $X$, followed by an implementation to verify the derivations.\n\nThe law of the random variable $X$ is composed of an absolutely continuous part with density $f_X(x)$ and a discrete part with two atoms. The total probability must equal $1$. First, we verify this condition.\nThe total probability from the continuous part is:\n$$\nP_c = \\int_0^1 a \\,dx + \\int_1^2 b(2-x) \\,dx\n$$\nGiven $a=0.4$ and $b=0.8$:\n$$\nP_c = \\int_0^1 0.4 \\,dx + \\int_1^2 0.8(2-x) \\,dx = 0.4[x]_0^1 + 0.8\\left[2x - \\frac{x^2}{2}\\right]_1^2\n$$\n$$\nP_c = 0.4(1-0) + 0.8\\left( (4-2) - (2 - \\frac{1}{2}) \\right) = 0.4 + 0.8\\left(2 - \\frac{3}{2}\\right) = 0.4 + 0.8(0.5) = 0.4 + 0.4 = 0.8\n$$\nThe total probability from the discrete atoms is the sum of their masses:\n$$\nP_d = p_1 + p_2 = 0.1 + 0.1 = 0.2\n$$\nThe total probability is $P_{total} = P_c + P_d = 0.8 + 0.2 = 1.0$. The distribution is valid.\n\n### Part 1: Derivation of the Cumulative Distribution Function (CDF) $F_X(x)$\n\nWe derive the CDF, $F_X(x) = \\mathbb{P}(X \\le x)$, by accumulating probability mass across the domain of $X$. For a mixed random variable, this involves integrating the probability density function $f_X(x)$ and adding the masses of any atoms at locations less than or equal to $x$.\n\n1.  **For $x < 0$**: The support of $X$ is on $[0, 2]$. Thus, $\\mathbb{P}(X \\le x) = 0$.\n    $F_X(x) = 0$.\n\n2.  **For $0 \\le x < 0.5$**: The probability accumulates solely from the continuous density $f_X(t) = 0.4$.\n    $F_X(x) = \\int_{-\\infty}^x f_X(t) \\,dt = \\int_0^x 0.4 \\,dt = 0.4x$.\n\n3.  **At $x = 0.5$**: There is an atom of mass $p_1 = 0.1$. The CDF jumps at this point.\n    The value just before the jump is $F_X(0.5^-) = \\lim_{t \\uparrow 0.5} F_X(t) = 0.4(0.5) = 0.2$.\n    The CDF at $x=0.5$ is $F_X(0.5) = F_X(0.5^-) + \\mathbb{P}(X=0.5) = 0.2 + p_1 = 0.2 + 0.1 = 0.3$.\n\n4.  **For $0.5 \\le x < 1$**: The probability is the sum of the mass up to and including $x=0.5$, plus the accumulated probability from the density $f_X(t)=0.4$ on $(0.5, x]$.\n    $F_X(x) = F_X(0.5) + \\int_{0.5}^x 0.4 \\,dt = 0.3 + 0.4(x - 0.5) = 0.3 + 0.4x - 0.2 = 0.4x + 0.1$.\n    Note that this expression correctly gives $F_X(0.5) = 0.4(0.5)+0.1 = 0.3$.\n\n5.  **For $1 \\le x < 2$**: The CDF is continuous at $x=1$ as there is no atom.\n    $F_X(1) = F_X(1^-) = 0.4(1) + 0.1 = 0.5$.\n    For $x \\in [1, 2)$, we add the accumulated probability from the density $f_X(t) = 0.8(2-t)$.\n    $F_X(x) = F_X(1) + \\int_1^x 0.8(2-t) \\,dt = 0.5 + 0.8\\left[2t - \\frac{t^2}{2}\\right]_1^x$\n    $F_X(x) = 0.5 + 0.8\\left( (2x - \\frac{x^2}{2}) - (2 - \\frac{1}{2}) \\right) = 0.5 + 0.8\\left(2x - \\frac{x^2}{2} - \\frac{3}{2}\\right)$\n    $F_X(x) = 0.5 + 1.6x - 0.4x^2 - 1.2 = -0.4x^2 + 1.6x - 0.7$.\n\n6.  **At $x = 2$**: There is an atom of mass $p_2 = 0.1$. The CDF jumps again.\n    The value before the jump is $F_X(2^-) = \\lim_{t \\uparrow 2} (-0.4t^2 + 1.6t - 0.7) = -0.4(4) + 1.6(2) - 0.7 = -1.6 + 3.2 - 0.7 = 0.9$.\n    The CDF at $x=2$ is $F_X(2) = F_X(2^-) + \\mathbb{P}(X=2) = 0.9 + p_2 = 0.9 + 0.1 = 1.0$.\n\n7.  **For $x > 2$**: All probability has been accounted for.\n    $F_X(x) = 1.0$.\n\nCombining these pieces, the complete CDF is:\n$$\nF_X(x) = \\begin{cases}\n0 & \\text{if } x < 0 \\\\\n0.4x & \\text{if } 0 \\le x < 0.5 \\\\\n0.4x + 0.1 & \\text{if } 0.5 \\le x < 1 \\\\\n-0.4x^2 + 1.6x - 0.7 & \\text{if } 1 \\le x < 2 \\\\\n1 & \\text{if } x \\ge 2\n\\end{cases}\n$$\n\n### Part 2: Derivation of the Generalized Inverse CDF $F_X^{-1}(u)$\n\nWe derive the generalized inverse CDF, $F_X^{-1}(u) = \\inf\\{x \\in \\mathbb{R} : F_X(x) \\ge u\\}$, by inverting each segment of the piecewise CDF $F_X(x)$ for $u \\in [0, 1]$.\n\n1.  **For $u \\in [0, 0.2)$**: This corresponds to $x \\in [0, 0.5)$. We invert $u = 0.4x$.\n    $x = u / 0.4 = 2.5u$. So, $F_X^{-1}(u) = 2.5u$.\n\n2.  **For $u \\in [0.2, 0.3]$**: This range of $u$ corresponds to the jump in $F_X$ at $x=0.5$.\n    $F_X(0.5^-)=0.2$ and $F_X(0.5)=0.3$. For any $u \\in [0.2, 0.3]$, the set $\\{x : F_X(x) \\ge u\\}$ is $[0.5, \\infty)$. The infimum of this set is $0.5$.\n    Thus, $F_X^{-1}(u) = 0.5$.\n\n3.  **For $u \\in (0.3, 0.5]$**: This corresponds to $x \\in (0.5, 1]$. We invert $u = 0.4x + 0.1$.\n    $0.4x = u - 0.1 \\implies x = (u - 0.1)/0.4 = 2.5u - 0.25$.\n    So, $F_X^{-1}(u) = 2.5u - 0.25$.\n\n4.  **For $u \\in (0.5, 0.9]$**: This corresponds to $x \\in (1, 2]$. We invert $u = -0.4x^2 + 1.6x - 0.7$.\n    Rearranging gives a quadratic equation for $x$: $0.4x^2 - 1.6x + (u+0.7) = 0$.\n    Using the quadratic formula, $x = \\frac{1.6 \\pm \\sqrt{1.6^2 - 4(0.4)(u+0.7)}}{2(0.4)} = \\frac{1.6 \\pm \\sqrt{2.56 - 1.6u - 1.12}}{0.8} = \\frac{1.6 \\pm \\sqrt{1.44 - 1.6u}}{0.8}$.\n    This simplifies to $x = 2 \\pm \\frac{\\sqrt{1.44 - 1.6u}}{0.8} = 2 \\pm \\sqrt{2.25 - 2.5u}$.\n    Since $x$ must be in the interval $(1, 2]$, we must choose the negative root.\n    $F_X^{-1}(u) = 2 - \\sqrt{2.25 - 2.5u}$.\n\n5.  **For $u \\in (0.9, 1.0]$**: This range of $u$ corresponds to the jump at $x=2$.\n    $F_X(2^-)=0.9$ and $F_X(2)=1.0$. For any $u \\in (0.9, 1.0]$, the set $\\{x : F_X(x) \\ge u\\}$ is $[2, \\infty)$. The infimum of this set is $2$.\n    Thus, $F_X^{-1}(u) = 2$.\n\nCombining these pieces, the complete inverse CDF is:\n$$\nF_X^{-1}(u) = \\begin{cases}\n2.5u & \\text{if } 0 \\le u < 0.2 \\\\\n0.5 & \\text{if } 0.2 \\le u \\le 0.3 \\\\\n2.5u - 0.25 & \\text{if } 0.3 < u \\le 0.5 \\\\\n2 - \\sqrt{2.25 - 2.5u} & \\text{if } 0.5 < u \\le 0.9 \\\\\n2 & \\text{if } 0.9 < u \\le 1.0\n\\end{cases}\n$$\n\n### Part 3: Implementation\n\nThe derived expression for $F_X^{-1}(u)$ is implemented in Python. The function takes a uniform random variable sample $u$ and returns a sample $x$ from the distribution of $X$. This function is then used to perform the validation tests described in the problem statement. The code defines the piecewise inverse CDF and then executes four test cases: deterministic mapping of spikes, two sampling validations with different sample sizes and tolerances, and a monotonicity check. The results of these boolean tests are collected and printed in the specified format.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the solution by deriving the inverse CDF, and then running the specified test cases.\n    \"\"\"\n\n    def inverse_cdf_scalar(u):\n        \"\"\"\n        Computes the generalized inverse CDF F_X^{-1}(u) for a scalar u.\n        This function implements the piecewise formula derived in the solution.\n        \"\"\"\n        if u < 0.0:\n            # Although u should be in [0,1], handle out-of-bounds for robustness.\n            return 0.0\n        elif u < 0.2:\n            # Corresponds to x in [0, 0.5)\n            return 2.5 * u\n        elif u <= 0.3:\n            # Corresponds to the atom at x = 0.5\n            return 0.5\n        elif u <= 0.5:\n            # Corresponds to x in [0.5, 1)\n            return 2.5 * u - 0.25\n        elif u <= 0.9:\n            # Corresponds to x in [1, 2)\n            # This is the solution to 0.4x^2 - 1.6x + (u+0.7) = 0\n            return 2.0 - np.sqrt(2.25 - 2.5 * u)\n        else: # u > 0.9\n            # Corresponds to the atom at x = 2 and u > 1\n            return 2.0\n\n    # Vectorize the scalar function for efficient application to numpy arrays.\n    inverse_cdf = np.vectorize(inverse_cdf_scalar)\n\n    results = []\n\n    # Case 1: Deterministic spike mapping\n    u_vals_1 = np.array([0.2, 0.25, 0.3, 0.9, 0.95, 1.0])\n    expected_x = np.array([0.5, 0.5, 0.5, 2.0, 2.0, 2.0])\n    actual_x = inverse_cdf(u_vals_1)\n    # Use np.allclose for safe floating-point comparison\n    results.append(np.allclose(actual_x, expected_x))\n\n    def run_sampling_test(N, seed, epsilon):\n        \"\"\"\n        Helper function for Cases 2 and 3.\n        Generates N samples and validates their distribution against expected probabilities.\n        \"\"\"\n        np.random.seed(seed)\n        u_samples = np.random.rand(N)\n        x_samples = inverse_cdf(u_samples)\n\n        # Calculate empirical probabilities for the five disjoint sets.\n        # The comparisons are exact since the inverse CDF returns exact values for atoms.\n        p1_emp = np.sum(x_samples < 0.5) / N   # S1: X < 0.5\n        p2_emp = np.sum(x_samples == 0.5) / N  # S2: X = 0.5\n        p3_emp = np.sum((x_samples > 0.5) & (x_samples < 1.0)) / N # S3: 0.5 < X < 1\n        p4_emp = np.sum((x_samples >= 1.0) & (x_samples < 2.0)) / N # S4: 1 <= X < 2\n        p5_emp = np.sum(x_samples == 2.0) / N  # S5: X = 2\n\n        p_emp = np.array([p1_emp, p2_emp, p3_emp, p4_emp, p5_emp])\n        p_exp = np.array([0.2, 0.1, 0.2, 0.4, 0.1])\n        \n        # Check if the maximum absolute deviation is within the tolerance.\n        max_deviation = np.max(np.abs(p_emp - p_exp))\n        return max_deviation <= epsilon\n\n    # Case 2: Sampling, moderate size\n    results.append(run_sampling_test(N=5000, seed=123, epsilon=0.02))\n\n    # Case 3: Sampling, larger size\n    results.append(run_sampling_test(N=50000, seed=456, epsilon=0.005))\n    \n    # Case 4: Monotonicity of the quantile function\n    u_grid = np.array([0.0, 0.1, 0.19, 0.2, 0.25, 0.3, 0.31, 0.49, 0.5, 0.7, 0.89, 0.9, 0.95, 1.0])\n    x_vals = inverse_cdf(u_grid)\n    # Check if the sequence of x values is non-decreasing using np.diff.\n    # A small tolerance is used for floating point arithmetic safety.\n    is_monotonic = np.all(np.diff(x_vals) >= -1e-9)\n    results.append(is_monotonic)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, [bool(r) for r in results]))}]\")\n\nsolve()\n```", "id": "3183232"}]}