{"hands_on_practices": [{"introduction": "To truly grasp the Rayleigh Quotient Iteration (RQI), it's essential to first work through its mechanics manually. This exercise guides you through a single, complete iteration of the algorithm for a simple $2 \\times 2$ symmetric matrix. By performing each step by hand—calculating the Rayleigh quotient $\\mu_k$, solving the shifted linear system, and normalizing the new vector—you will build a foundational, step-by-step understanding of how RQI refines an eigenpair estimate. [@problem_id:2196909]", "problem": "The Rayleigh quotient iteration is a powerful numerical method used to find an eigenvalue and a corresponding eigenvector of a matrix. For a given symmetric matrix $A$ and an initial non-zero vector approximation $x_k$ (at iteration $k$), a single full iteration to compute the next approximation $x_{k+1}$ proceeds as follows:\n\n1.  Calculate the Rayleigh quotient, $\\mu_k$, which is an estimate for the eigenvalue:\n    $$ \\mu_k = \\frac{x_k^T A x_k}{x_k^T x_k} $$\n2.  Solve the linear system for an intermediate vector $w$:\n    $$ (A - \\mu_k I)w = x_k $$\n    where $I$ is the identity matrix.\n3.  Normalize the vector $w$ to find the new eigenvector approximation:\n    $$ x_{k+1} = \\frac{w}{||w||_2} $$\n    where $||w||_2$ denotes the Euclidean norm of $w$.\n\nYou are given the symmetric matrix $A = \\begin{pmatrix} 5 & 2 \\\\ 2 & 2 \\end{pmatrix}$ and an initial vector $x_0 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$.\n\nPerform one full iteration of the Rayleigh quotient method to find the next eigenvector approximation, $x_1$. Express your answer as a row matrix containing the two components of $x_1$ in their exact analytical form.", "solution": "Given $A=\\begin{pmatrix}5 & 2 \\\\ 2 & 2\\end{pmatrix}$ and $x_{0}=\\begin{pmatrix}1 \\\\ 0\\end{pmatrix}$.\n\nFirst compute the Rayleigh quotient:\n$$\n\\mu_{0}=\\frac{x_{0}^{T}Ax_{0}}{x_{0}^{T}x_{0}}=\\frac{\\begin{pmatrix}1 & 0\\end{pmatrix}\\begin{pmatrix}5 & 2 \\\\ 2 & 2\\end{pmatrix}\\begin{pmatrix}1 \\\\ 0\\end{pmatrix}}{\\begin{pmatrix}1 & 0\\end{pmatrix}\\begin{pmatrix}1 \\\\ 0\\end{pmatrix}}=\\frac{\\begin{pmatrix}1 & 0\\end{pmatrix}\\begin{pmatrix}5 \\\\ 2\\end{pmatrix}}{1}=\\frac{5}{1}=5.\n$$\n\nNext solve $(A-\\mu_{0}I)w=x_{0}$:\n$$\n\\left(\\begin{pmatrix}5 & 2 \\\\ 2 & 2\\end{pmatrix}-5\\begin{pmatrix}1 & 0 \\\\ 0 & 1\\end{pmatrix}\\right)\\begin{pmatrix}w_{1} \\\\ w_{2}\\end{pmatrix}=\\begin{pmatrix}1 \\\\ 0\\end{pmatrix}\\;\\;\\Longrightarrow\\;\\;\\begin{pmatrix}0 & 2 \\\\ 2 & -3\\end{pmatrix}\\begin{pmatrix}w_{1} \\\\ w_{2}\\end{pmatrix}=\\begin{pmatrix}1 \\\\ 0\\end{pmatrix}.\n$$\nThis gives the system\n$$\n2w_{2}=1,\\qquad 2w_{1}-3w_{2}=0.\n$$\nFrom the first equation $w_{2}=\\frac{1}{2}$, and substituting into the second gives $2w_{1}-\\frac{3}{2}=0$, hence $w_{1}=\\frac{3}{4}$. Therefore\n$$\nw=\\begin{pmatrix}\\frac{3}{4} \\\\ \\frac{1}{2}\\end{pmatrix}.\n$$\n\nNormalize $w$ to obtain $x_{1}$:\n$$\n\\|w\\|_{2}=\\sqrt{\\left(\\frac{3}{4}\\right)^{2}+\\left(\\frac{1}{2}\\right)^{2}}=\\sqrt{\\frac{9}{16}+\\frac{4}{16}}=\\sqrt{\\frac{13}{16}}=\\frac{\\sqrt{13}}{4},\n$$\n$$\nx_{1}=\\frac{w}{\\|w\\|_{2}}=\\frac{4}{\\sqrt{13}}\\begin{pmatrix}\\frac{3}{4} \\\\ \\frac{1}{2}\\end{pmatrix}=\\begin{pmatrix}\\frac{3}{\\sqrt{13}} \\\\ \\frac{2}{\\sqrt{13}}\\end{pmatrix}.\n$$\n\nExpressed as a row matrix, the two components are $\\begin{pmatrix}\\frac{3}{\\sqrt{13}} & \\frac{2}{\\sqrt{13}}\\end{pmatrix}$.", "answer": "$$\\boxed{\\begin{pmatrix}\\frac{3}{\\sqrt{13}} & \\frac{2}{\\sqrt{13}}\\end{pmatrix}}$$", "id": "2196909"}, {"introduction": "The remarkable speed of RQI's convergence depends on the initial estimate. This practice explores a fascinating edge case where the initial Rayleigh quotient $\\mu_0$ is positioned exactly at the midpoint between two true eigenvalues. By working through this carefully designed scenario, you will discover that the iteration does not converge to either eigenpair but instead enters a stable 2-cycle, highlighting the algorithm's sensitivity to the initial vector and deepening your intuition about its convergence dynamics. [@problem_id:3265660]", "problem": "Let $A \\in \\mathbb{R}^{2 \\times 2}$ be the real symmetric matrix\n$$\nA \\;=\\; \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix},\n$$\nand let the initial vector be\n$$\nv_{0} \\;=\\; \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}.\n$$\nDefine the Rayleigh quotient $\\mu(v)$ of a nonzero vector $v \\in \\mathbb{R}^{2}$ by\n$$\n\\mu(v) \\;=\\; \\frac{v^{\\mathsf{T}} A v}{v^{\\mathsf{T}} v}.\n$$\nYou will examine the behavior of the Rayleigh Quotient Iteration (RQI), which is the iteration defined by the following steps at iteration index $k$:\n- Given a unit vector $v_{k}$ and its Rayleigh quotient $\\mu_{k} \\,=\\, \\mu(v_{k})$, solve the shifted linear system\n$$\n\\left(A - \\mu_{k} I\\right) w_{k} \\;=\\; v_{k}.\n$$\n- Normalize $w_{k}$ to obtain the next iterate $v_{k+1} \\,=\\, \\dfrac{w_{k}}{\\|w_{k}\\|_{2}}$.\n- Update the Rayleigh quotient $\\mu_{k+1} \\,=\\, \\mu\\!\\left(v_{k+1}\\right)$.\n\nTasks:\n1. Starting from the fundamental definition of eigenvalues and eigenvectors of a real symmetric matrix and the definition of the Rayleigh quotient, verify that the initial Rayleigh quotient $\\mu_{0} \\,=\\, \\mu(v_{0})$ is exactly the midpoint of two eigenvalues of $A$, hence equidistant from them.\n2. Using only the definitions provided above and the iteration steps of RQI, carry out two full iterations symbolically to produce $v_{1}$, $\\mu_{1}$, then $v_{2}$, $\\mu_{2}$, explicitly showing each algebraic step.\n3. Determine the exact value of $\\mu_{2}$.\n\nYour final answer must be a single real number. No rounding is required.", "solution": "### Task 1: Verification of the initial Rayleigh quotient $\\mu_0$\n\nFirst, we find the eigenvalues of the matrix $A$. Since $A$ is a diagonal matrix, its eigenvalues are its diagonal entries.\n$$\nA = \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix}\n$$\nThe eigenvalues are $\\lambda_1 = 1$ and $\\lambda_2 = 3$. The corresponding eigenvectors are $e_1 = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ and $e_2 = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$, respectively.\n\nThe midpoint of these two eigenvalues is:\n$$\n\\frac{\\lambda_1 + \\lambda_2}{2} = \\frac{1 + 3}{2} = 2\n$$\nNext, we calculate the initial Rayleigh quotient $\\mu_0 = \\mu(v_0)$ using the provided initial vector $v_0 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$.\nThe denominator of the Rayleigh quotient is $v_0^{\\mathsf{T}} v_0 = \\|v_0\\|_2^2$.\n$$\n\\|v_0\\|_2^2 = \\left(\\frac{1}{\\sqrt{2}}\\right)^2 (1^2 + 1^2) = \\frac{1}{2} (1 + 1) = 1\n$$\nSince $v_0$ is a unit vector, the Rayleigh quotient simplifies to $\\mu_0 = v_0^{\\mathsf{T}} A v_0$.\nWe compute the numerator:\n$$\nv_0^{\\mathsf{T}} A v_0 = \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\right) \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix} \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} \\right)\n$$\n$$\n= \\frac{1}{2} \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}\n$$\n$$\n= \\frac{1}{2} \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} 1 \\cdot 1 + 0 \\cdot 1 \\\\ 0 \\cdot 1 + 3 \\cdot 1 \\end{pmatrix} = \\frac{1}{2} \\begin{pmatrix} 1 & 1 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix}\n$$\n$$\n= \\frac{1}{2} (1 \\cdot 1 + 1 \\cdot 3) = \\frac{1}{2} (4) = 2\n$$\nThus, $\\mu_0 = 2$. This value is exactly the midpoint of the eigenvalues $\\lambda_1=1$ and $\\lambda_2=3$. The distance from $\\mu_0$ to $\\lambda_1$ is $|\\mu_0 - \\lambda_1| = |2 - 1| = 1$, and the distance to $\\lambda_2$ is $|\\mu_0 - \\lambda_2| = |2-3| = 1$. The initial Rayleigh quotient is indeed equidistant from the two eigenvalues.\n\n### Task 2: Two full iterations of RQI\n\n**First Iteration ($k=0$)**\n\nWe start with $v_0 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$ and $\\mu_0 = 2$.\n1.  Solve the shifted linear system $(A - \\mu_0 I) w_0 = v_0$.\n    The shifted matrix is:\n    $$\n    A - \\mu_0 I = \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix} - 2 \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}\n    $$\n    The system to solve is:\n    $$\n    \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} w_0 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}\n    $$\n    The inverse of the shifted matrix is $(A - \\mu_0 I)^{-1} = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}$.\n    Solving for $w_0$:\n    $$\n    w_0 = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix} \\right) = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix}\n    $$\n2.  Normalize $w_0$ to obtain $v_1$.\n    First, compute the norm $\\|w_0\\|_2$:\n    $$\n    \\|w_0\\|_2 = \\sqrt{\\left(\\frac{-1}{\\sqrt{2}}\\right)^2 + \\left(\\frac{1}{\\sqrt{2}}\\right)^2} = \\sqrt{\\frac{1}{2} + \\frac{1}{2}} = \\sqrt{1} = 1\n    $$\n    Since the norm is $1$, the vector is already normalized.\n    $$\n    v_1 = \\frac{w_0}{\\|w_0\\|_2} = w_0 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix}\n    $$\n3.  Update the Rayleigh quotient to $\\mu_1 = \\mu(v_1)$.\n    Since $v_1$ is a unit vector, $\\mu_1 = v_1^{\\mathsf{T}} A v_1$.\n    $$\n    \\mu_1 = \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 & 1 \\end{pmatrix} \\right) \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix} \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix} \\right)\n    $$\n    $$\n    = \\frac{1}{2} \\begin{pmatrix} -1 & 1 \\end{pmatrix} \\begin{pmatrix} -1 \\\\ 3 \\end{pmatrix} = \\frac{1}{2} ((-1)(-1) + 1 \\cdot 3) = \\frac{1}{2} (1 + 3) = 2\n    $$\n    After the first iteration, we have $v_1 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix}$ and $\\mu_1 = 2$.\n\n**Second Iteration ($k=1$)**\n\nWe start with $v_1 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix}$ and $\\mu_1 = 2$.\n1.  Solve the shifted linear system $(A - \\mu_1 I) w_1 = v_1$.\n    The shifted matrix is:\n    $$\n    A - \\mu_1 I = \\begin{pmatrix} 1 & 0 \\\\ 0 & 3 \\end{pmatrix} - 2 \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix} = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix}\n    $$\n    The system to solve is:\n    $$\n    \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} w_1 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix}\n    $$\n    Solving for $w_1$:\n    $$\n    w_1 = \\begin{pmatrix} -1 & 0 \\\\ 0 & 1 \\end{pmatrix} \\left( \\frac{1}{\\sqrt{2}} \\begin{pmatrix} -1 \\\\ 1 \\end{pmatrix} \\right) = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}\n    $$\n    We observe that $w_1$ is equal to the original vector $v_0$.\n2.  Normalize $w_1$ to obtain $v_2$.\n    The norm is $\\|w_1\\|_2 = \\|v_0\\|_2 = 1$.\n    $$\n    v_2 = \\frac{w_1}{\\|w_1\\|_2} = w_1 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}\n    $$\n    So, $v_2 = v_0$.\n3.  Update the Rayleigh quotient to $\\mu_2 = \\mu(v_2)$.\n    Since $v_2 = v_0$, their Rayleigh quotients must be identical.\n    $$\n    \\mu_2 = \\mu(v_2) = \\mu(v_0) = \\mu_0 = 2\n    $$\n    For completeness, we can calculate it explicitly:\n    $$\n    \\mu_2 = v_2^{\\mathsf{T}} A v_2 = v_0^{\\mathsf{T}} A v_0 = 2\n    $$\nAfter two full iterations, we have $v_2 = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 \\\\ 1 \\end{pmatrix}$ and $\\mu_2 = 2$. The iteration has entered a cycle of period $2$ for the vector $(v_0 \\rightarrow v_1 \\rightarrow v_0)$ and is fixed for the Rayleigh quotient $(\\mu_0 \\rightarrow \\mu_1 \\rightarrow \\mu_2)$, with $\\mu_k = 2$ for all $k \\ge 0$.\n\n### Task 3: The exact value of $\\mu_2$\n\nAs determined in the second iteration of Task 2, the exact value of the Rayleigh quotient after two full iterations is $\\mu_2 = 2$.", "answer": "$$\\boxed{2}$$", "id": "3265660"}, {"introduction": "Moving from manual calculation to implementation is a crucial step in computational science. This practice challenges you to implement the RQI algorithm in code and test its performance across a variety of matrix types, including non-Hermitian and defective matrices. This exercise will illuminate the algorithm's practical behavior, demonstrating how it can produce complex eigenvalue estimates, break down for defective matrices, and, unlike the power method, converge to an eigenpair that is not necessarily dominant. [@problem_id:3265609]", "problem": "Implement a complete program that studies Rayleigh quotient iteration on specified non-Hermitian and Hermitian matrices using only first principles. Begin from core definitions: an eigenpair is a pair $\\left(\\lambda,\\boldsymbol{x}\\right)$ with $\\boldsymbol{x}\\neq \\boldsymbol{0}$ such that $A\\boldsymbol{x}=\\lambda \\boldsymbol{x}$ for a given square matrix $A\\in \\mathbb{C}^{n\\times n}$. The Rayleigh quotient of a nonzero vector $\\boldsymbol{v}\\in \\mathbb{C}^{n}$ with respect to $A$ is $R\\left(\\boldsymbol{v}\\right)=\\dfrac{\\boldsymbol{v}^{\\ast}A\\boldsymbol{v}}{\\boldsymbol{v}^{\\ast}\\boldsymbol{v}}$, where $\\left(\\cdot\\right)^{\\ast}$ denotes conjugate transpose. The residual for a pair $\\left(\\mu,\\boldsymbol{v}\\right)$ is $\\boldsymbol{r}\\left(\\mu,\\boldsymbol{v}\\right)=A\\boldsymbol{v}-\\mu \\boldsymbol{v}$. The Rayleigh quotient iteration constructs a sequence $\\left(\\mu_{k},\\boldsymbol{v}_{k}\\right)$ by repeatedly computing the Rayleigh quotient for the current vector, then solving a shifted linear system and renormalizing the result to unit Euclidean norm. You must implement this process using only these base definitions and linear algebra operations.\n\nYour program must do the following for the provided test suite.\n\nDefinitions and algorithmic requirements:\n- Use the conjugate transpose in the Rayleigh quotient, i.e., $R\\left(\\boldsymbol{v}\\right)=\\dfrac{\\boldsymbol{v}^{\\ast}A\\boldsymbol{v}}{\\boldsymbol{v}^{\\ast}\\boldsymbol{v}}$.\n- The update at iteration $k$ uses the shift $\\mu_{k}=R\\left(\\boldsymbol{v}_{k}\\right)$ and forms $\\boldsymbol{w}_{k}$ by solving $\\left(A-\\mu_{k}I\\right)\\boldsymbol{w}_{k}=\\boldsymbol{v}_{k}$. Then set $\\boldsymbol{v}_{k+1}=\\dfrac{\\boldsymbol{w}_{k}}{\\left\\lVert \\boldsymbol{w}_{k}\\right\\rVert_{2}}$.\n- Use the $2$-norm throughout. Detect convergence when $\\left\\lVert A\\boldsymbol{v}_{k}-\\mu_{k}\\boldsymbol{v}_{k}\\right\\rVert_{2}\\leq \\text{tol}\\cdot \\left\\lVert A\\right\\rVert_{2}\\cdot \\left\\lVert \\boldsymbol{v}_{k}\\right\\rVert_{2}$ or when $\\left\\lvert \\mu_{k}-\\mu_{k-1}\\right\\rvert\\leq \\text{tol}$ for $k\\geq 1$.\n- Detect breakdown if the shifted system is singular or numerically singular. Concretely, if $\\left(A-\\mu_{k}I\\right)$ is singular (linear solve fails) or if its condition number in the $2$-norm exceeds $10^{16}$, report breakdown and stop the iteration for that case.\n- Count a shift as complex if $\\left\\lvert \\operatorname{Im}\\left(\\mu_{k}\\right)\\right\\rvert > 10^{-12}$ for any computed $\\mu_{k}$.\n\nTest suite:\n- Case A (complex shift demonstration): $A_{A}=\\begin{bmatrix}1 & \\mathrm{i}\\\\ 0 & 2\\end{bmatrix}$ with $\\boldsymbol{v}_{A,0}=\\begin{bmatrix}1\\\\ 1\\end{bmatrix}$. Compute $\\mu_{0}=R\\left(\\boldsymbol{v}_{A,0}\\right)$ and return a boolean indicating whether $\\operatorname{Im}\\left(\\mu_{0}\\right)\\neq 0$ under the threshold above.\n- Case B (non-Hermitian, failure to converge to the dominant eigenpair): $A_{B}=\\begin{bmatrix}1 & 10\\\\ 0 & 5\\end{bmatrix}$ with $\\boldsymbol{v}_{B,0}=\\begin{bmatrix}1\\\\ 10^{-6}\\end{bmatrix}$. Run Rayleigh quotient iteration with $\\text{tol}=10^{-12}$ and $\\text{maxit}=20$. Let $\\hat{\\mu}$ be the last available shift (the last $\\mu_{k}$ computed prior to termination, whether converged or not). Let $\\left\\{\\lambda_{j}\\right\\}$ be the eigenvalues of $A_{B}$, and let $\\lambda_{\\mathrm{dom}}$ be the eigenvalue with maximal magnitude. Return a boolean indicating whether $\\left\\lvert \\hat{\\mu}-\\lambda_{\\mathrm{dom}}\\right\\rvert$ is strictly less than $\\left\\lvert \\hat{\\mu}-\\lambda\\right\\rvert$ for all other eigenvalues $\\lambda$. This boolean therefore reports whether the iteration converged to (or is closest to) the dominant eigenpair; you will thereby exhibit a counterexample if this boolean is false.\n- Case C (breakdown on a defective matrix): $A_{C}=\\begin{bmatrix}1 & 1\\\\ 0 & 1\\end{bmatrix}$ with $\\boldsymbol{v}_{C,0}=\\begin{bmatrix}1\\\\ 0\\end{bmatrix}$. Run a single Rayleigh quotient iteration step using the rules above with $\\text{tol}=10^{-12}$ and $\\text{maxit}=20$. Return a boolean indicating whether breakdown was detected.\n- Case D (Hermitian happy path): $A_{D}=\\begin{bmatrix}2 & 1\\\\ 1 & 3\\end{bmatrix}$ with $\\boldsymbol{v}_{D,0}=\\begin{bmatrix}1\\\\ 0.2\\end{bmatrix}$. Run Rayleigh quotient iteration with $\\text{tol}=10^{-12}$ and $\\text{maxit}=20$. Return a boolean indicating whether convergence was detected.\n\nAngle units are not relevant. No physical units are involved.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, ordered as $\\left[\\text{Case A result},\\text{Case B result},\\text{Case C result},\\text{Case D result}\\right]$.", "solution": "### Solution\n\nThe Rayleigh quotient iteration (RQI) is a powerful algorithm for finding an eigenpair $(\\lambda, \\boldsymbol{x})$ of a matrix $A$. Its defining characteristic is the use of the Rayleigh quotient $R(\\boldsymbol{v}) = (\\boldsymbol{v}^*A\\boldsymbol{v})/(\\boldsymbol{v}^*\\boldsymbol{v})$ as an adaptively updated shift at each step. The iteration, also known as inverse iteration with a Rayleigh quotient shift, takes the form:\n$$\n\\mu_k = R(\\boldsymbol{v}_k)\n$$\n$$\n\\boldsymbol{w}_k = (A - \\mu_k I)^{-1} \\boldsymbol{v}_k\n$$\n$$\n\\boldsymbol{v}_{k+1} = \\frac{\\boldsymbol{w}_k}{\\|\\boldsymbol{w}_k\\|_2}\n$$\nThis method exhibits very rapid local convergence. For a Hermitian matrix, the convergence of the eigenvalue approximations is typically cubic. For non-Hermitian matrices, it is typically quadratic. Unlike the power method, which converges to the dominant eigenpair, RQI converges to the eigenpair whose eigenvalue is closest to the initial Rayleigh quotient $R(\\boldsymbol{v}_0)$. This also means it can fail or break down, particularly if a shift $\\mu_k$ happens to be an eigenvalue, rendering the matrix $(A - \\mu_k I)$ singular.\n\nA general algorithm will be implemented to handle the logic for all test cases. This algorithm will take a matrix $A$, an initial vector $\\boldsymbol{v}_0$, a tolerance $\\text{tol}$, and a maximum number of iterations $\\text{maxit}$. It will report whether the process converged, broke down, or reached the iteration limit, along with the final computed shift.\n\n**Case A: Complex Shift Demonstration**\nFor a non-Hermitian matrix $A$, the Rayleigh quotient $R(\\boldsymbol{v})$ can be a complex number even if $A$ and $\\boldsymbol{v}$ are real. This case demonstrates this with a complex matrix. We are given $A_A = \\begin{bmatrix} 1 & \\mathrm{i} \\\\ 0 & 2 \\end{bmatrix}$ and $\\boldsymbol{v}_{A,0} = \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix}$. The task is to compute the initial Rayleigh quotient $\\mu_0$ and determine if it has a non-negligible imaginary part.\nThe conjugate transpose of $\\boldsymbol{v}_{A,0}$ is $\\boldsymbol{v}_{A,0}^\\ast = \\begin{bmatrix} 1 & 1 \\end{bmatrix}$.\nThe numerator is $\\boldsymbol{v}_{A,0}^\\ast A_A \\boldsymbol{v}_{A,0}$:\n$$\n\\begin{bmatrix} 1 & 1 \\end{bmatrix} \\begin{bmatrix} 1 & \\mathrm{i} \\\\ 0 & 2 \\end{bmatrix} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} 1 & 1 \\end{bmatrix} \\begin{bmatrix} 1+\\mathrm{i} \\\\ 2 \\end{bmatrix} = 1(1+\\mathrm{i}) + 1(2) = 3+\\mathrm{i}\n$$\nThe denominator is $\\boldsymbol{v}_{A,0}^\\ast \\boldsymbol{v}_{A,0}$:\n$$\n\\begin{bmatrix} 1 & 1 \\end{bmatrix} \\begin{bmatrix} 1 \\\\ 1 \\end{bmatrix} = 1^2 + 1^2 = 2\n$$\nThe Rayleigh quotient is $\\mu_0 = \\dfrac{3+\\mathrm{i}}{2} = 1.5 + 0.5\\mathrm{i}$.\nThe imaginary part is $\\operatorname{Im}(\\mu_0) = 0.5$. Since $|\\operatorname{Im}(\\mu_0)| = 0.5 > 10^{-12}$, the shift is considered complex. The result is **True**.\n\n**Case B: Convergence to Non-Dominant Eigenpair**\nThis case illustrates that RQI converges to the eigenvalue closest to the initial Rayleigh quotient, not necessarily the one with the largest magnitude. We have $A_B = \\begin{bmatrix} 1 & 10 \\\\ 0 & 5 \\end{bmatrix}$ and $\\boldsymbol{v}_{B,0} = \\begin{bmatrix} 1 \\\\ 10^{-6} \\end{bmatrix}$. The eigenvalues are the diagonal entries, $\\lambda_1 = 1$ and $\\lambda_2 = 5$. The dominant eigenvalue is $\\lambda_{\\mathrm{dom}} = 5$.\nThe initial vector $\\boldsymbol{v}_{B,0}$ is a small perturbation of the eigenvector $\\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$ corresponding to $\\lambda_1 = 1$. Let's compute $\\mu_0 = R(\\boldsymbol{v}_{B,0})$:\n$$\n\\mu_0 = \\frac{\\begin{bmatrix} 1 & 10^{-6} \\end{bmatrix} \\begin{bmatrix} 1 & 10 \\\\ 0 & 5 \\end{bmatrix} \\begin{bmatrix} 1 \\\\ 10^{-6} \\end{bmatrix}}{\\begin{bmatrix} 1 & 10^{-6} \\end{bmatrix} \\begin{bmatrix} 1 \\\\ 10^{-6} \\end{bmatrix}} = \\frac{1(1+10\\cdot10^{-6}) + 10^{-6}(5\\cdot10^{-6})}{1^2+(10^{-6})^2} = \\frac{1.000010000005}{1.000000000001} \\approx 1.00001\n$$\nSince $\\mu_0$ is very close to $\\lambda_1 = 1$, the iteration is expected to converge to $\\lambda_1$. The final shift $\\hat{\\mu}$ will be approximately $1$. The test is whether $|\\hat{\\mu} - \\lambda_{\\mathrm{dom}}| < |\\hat{\\mu} - \\lambda|$ for all other $\\lambda$. Here, this becomes $|\\hat{\\mu} - 5| < |\\hat{\\mu} - 1|$. For $\\hat{\\mu} \\approx 1$, this inequality is approximately $|1 - 5| < |1 - 1|$, or $4 < 0$, which is false. The result is **False**.\n\n**Case C: Breakdown on a Defective Matrix**\nThis case demonstrates a breakdown scenario. The matrix is a defective Jordan block $A_C = \\begin{bmatrix} 1 & 1 \\\\ 0 & 1 \\end{bmatrix}$. It has a single eigenvalue $\\lambda=1$ with algebraic multiplicity $2$ but geometric multiplicity $1$. The initial vector is $\\boldsymbol{v}_{C,0} = \\begin{bmatrix} 1 \\\\ 0 \\end{bmatrix}$, which is the unique eigenvector corresponding to $\\lambda=1$.\nFor the first iteration step ($k=0$), we compute the shift $\\mu_0$:\n$$\n\\mu_0 = R(\\boldsymbol{v}_{C,0}) = \\frac{\\boldsymbol{v}_{C,0}^\\ast A_C \\boldsymbol{v}_{C,0}}{\\boldsymbol{v}_{C,0}^\\ast \\boldsymbol{v}_{C,0}} = \\frac{\\boldsymbol{v}_{C,0}^\\ast (\\lambda \\boldsymbol{v}_{C,0})}{\\boldsymbol{v}_{C,0}^\\ast \\boldsymbol{v}_{C,0}} = \\lambda = 1\n$$\nThe shift $\\mu_0$ is exactly the eigenvalue $\\lambda=1$. Consequently, the shifted matrix to be inverted is $(A_C - \\mu_0 I) = (A_C - 1 \\cdot I) = \\begin{bmatrix} 0 & 1 \\\\ 0 & 0 \\end{bmatrix}$. This matrix is singular. Attempting to solve the system $(A_C - \\mu_0 I) \\boldsymbol{w}_0 = \\boldsymbol{v}_{C,0}$ will fail. This failure is a defined breakdown condition. The result is **True**.\n\n**Case D: Hermitian Happy Path**\nThis case demonstrates the standard, rapid convergence of RQI for a Hermitian matrix. We are given $A_D = \\begin{bmatrix} 2 & 1 \\\\ 1 & 3 \\end{bmatrix}$ (which is real symmetric and thus Hermitian) and an initial vector $\\boldsymbol{v}_{D,0} = \\begin{bmatrix} 1 \\\\ 0.2 \\end{bmatrix}$. The initial vector is not an eigenvector. RQI is expected to converge to one of the eigenpairs. The eigenvalues are $\\lambda = (5 \\pm \\sqrt{5})/2$, which are approximately $1.382$ and $3.618$. Given the tight tolerance $\\text{tol}=10^{-12}$ and the cubic convergence rate for Hermitian matrices, the algorithm is expected to satisfy a convergence criterion well within the $\\text{maxit}=20$ limit. The result is **True**.\n\nThe implementation will consist of a primary function `solve()` that orchestrates the four test cases, and a helper function `rayleigh_quotient_iteration()` that encapsulates the core algorithm.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef rayleigh_quotient_iteration(A, v0, tol, maxit):\n    \"\"\"\n    Performs Rayleigh Quotient Iteration to find an eigenpair of a matrix A.\n\n    Args:\n        A (np.ndarray): The square matrix.\n        v0 (np.ndarray): The initial vector.\n        tol (float): The tolerance for convergence.\n        maxit (int): The maximum number of iterations.\n\n    Returns:\n        tuple: A tuple containing:\n            - status (str): 'converged', 'breakdown', or 'max_iter_reached'.\n            - mu (complex): The last computed Rayleigh quotient.\n            - v (np.ndarray): The last computed vector.\n            - k (int): The number of iterations performed.\n    \"\"\"\n    v = v0.astype(np.complex128)\n    A = A.astype(np.complex128)\n    \n    mu_prev = np.inf\n    A_norm = np.linalg.norm(A, 2)\n    mu = 0.0 + 0.0j\n\n    for k in range(maxit):\n        # 1. Compute Rayleigh Quotient\n        v_norm_sq = (v.conj().T @ v).item()\n        if v_norm_sq == 0:\n            return 'breakdown', mu, v, k\n        \n        mu = (v.conj().T @ A @ v).item() / v_norm_sq\n\n        # 2. Check for convergence\n        v_norm = np.sqrt(v_norm_sq)\n        residual_norm = np.linalg.norm(A @ v - mu * v)\n        if residual_norm <= tol * A_norm * v_norm:\n            return 'converged', mu, v, k\n        \n        if k > 0 and abs(mu - mu_prev) <= tol:\n            return 'converged', mu, v, k\n        \n        # 3. Form shifted system and check for breakdown prior to solve\n        M = A - mu * np.identity(A.shape[0], dtype=np.complex128)\n        \n        # Condition number check\n        if np.linalg.cond(M) > 1e16:\n            return 'breakdown', mu, v, k\n\n        # 4. Solve the linear system\n        try:\n            w = np.linalg.solve(M, v)\n        except np.linalg.LinAlgError:\n            return 'breakdown', mu, v, k\n\n        # 5. Normalize for the next iteration\n        w_norm = np.linalg.norm(w)\n        if w_norm == 0:\n            return 'breakdown', mu, v, k\n            \n        v = w / w_norm\n        mu_prev = mu\n    \n    # If the loop completes without converging, it's max_iter_reached.\n    # The last computed mu is from the start of the last iteration.\n    return 'max_iter_reached', mu, v, k + 1\n\n\ndef solve():\n    \"\"\"\n    Executes the four test cases for Rayleigh Quotient Iteration as specified.\n    \"\"\"\n    results = []\n\n    # Case A: Complex shift demonstration\n    A_A = np.array([[1, 1j], [0, 2]], dtype=np.complex128)\n    v_A_0 = np.array([1, 1], dtype=np.complex128)\n    \n    mu_A_0_num = v_A_0.conj().T @ A_A @ v_A_0\n    mu_A_0_den = v_A_0.conj().T @ v_A_0\n    mu_A_0 = mu_A_0_num / mu_A_0_den\n    \n    # Check if the imaginary part is non-negligible\n    result_A = abs(mu_A_0.imag) > 1e-12\n    results.append(result_A)\n\n    # Common parameters for B, C, D\n    tol = 1e-12\n    maxit = 20\n\n    # Case B: Non-Hermitian, failure to converge to dominant eigenpair\n    A_B = np.array([[1, 10], [0, 5]], dtype=np.complex128)\n    v_B_0 = np.array([1, 1e-6], dtype=np.complex128)\n    \n    status_B, mu_hat_B, _, _ = rayleigh_quotient_iteration(A_B, v_B_0, tol, maxit)\n    \n    # Eigenvalues are 1 and 5. Dominant is 5.\n    lambda_dom_B = 5.0\n    lambda_other_B = 1.0\n    \n    result_B = abs(mu_hat_B - lambda_dom_B) < abs(mu_hat_B - lambda_other_B)\n    results.append(result_B)\n    \n    # Case C: Breakdown on a defective matrix\n    A_C = np.array([[1, 1], [0, 1]], dtype=np.complex128)\n    v_C_0 = np.array([1, 0], dtype=np.complex128)\n    \n    status_C, _, _, _ = rayleigh_quotient_iteration(A_C, v_C_0, tol, maxit)\n    \n    result_C = (status_C == 'breakdown')\n    results.append(result_C)\n\n    # Case D: Hermitian happy path\n    A_D = np.array([[2, 1], [1, 3]], dtype=np.complex128)\n    v_D_0 = np.array([1, 0.2], dtype=np.complex128)\n\n    status_D, _, _, _ = rayleigh_quotient_iteration(A_D, v_D_0, tol, maxit)\n    \n    result_D = (status_D == 'converged')\n    results.append(result_D)\n\n    # Final print statement\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "3265609"}]}