{"hands_on_practices": [{"introduction": "To effectively use the implicit Euler method, we must first understand its fundamental algebraic structure. This initial practice guides you through deriving the explicit update rule for a general linear ordinary differential equation (ODE). By rearranging the implicit formula into an explicit one for the next time step, $y_{n+1}$, you will gain insight into how the method operates and why it differs fundamentally from explicit methods [@problem_id:2178341].", "problem": "Consider the first-order linear Ordinary Differential Equation (ODE) given by:\n$$\n\\frac{dy}{dt} = ay(t) + b\n$$\nwhere $a$ and $b$ are non-zero real constants. We wish to approximate the solution to this ODE numerically using the implicit Euler method with a constant step size $h > 0$. The implicit Euler method discretizes the time derivative and evaluates the right-hand side of the ODE at the next time step. Let $y_n$ be the numerical approximation of the solution $y(t_n)$ at time $t_n = n h$.\n\nYour task is to derive the explicit update rule for this method. Express the next approximation, $y_{n+1}$, solely in terms of the current approximation, $y_n$, and the constants $a$, $b$, and $h$.", "solution": "We apply the implicit Euler method to the ODE $\\frac{dy}{dt} = a y + b$. For a constant step size $h$ and grid points $t_{n} = n h$, the implicit Euler discretization approximates the derivative by the backward difference and evaluates the right-hand side at the next step:\n$$\n\\frac{y_{n+1} - y_{n}}{h} = a y_{n+1} + b.\n$$\nMultiplying both sides by $h$ gives\n$\ny_{n+1} - y_{n} = h \\left(a y_{n+1} + b\\right).\n$\nCollecting the terms involving $y_{n+1}$ on the left yields\n$\ny_{n+1} - h a y_{n+1} = y_{n} + h b,\n$\nwhich factors to\n$\n\\left(1 - a h\\right) y_{n+1} = y_{n} + h b.\n$\nAssuming $1 - a h \\neq 0$, we solve for $y_{n+1}$:\n$$\ny_{n+1} = \\frac{y_{n} + h b}{1 - a h}.\n$$\nThis expresses $y_{n+1}$ solely in terms of $y_{n}$ and the constants $a$, $b$, and $h$.", "answer": "$$\\boxed{\\frac{y_{n}+h b}{1-a h}}$$", "id": "2178341"}, {"introduction": "With the algebraic foundation in place, let's apply the implicit Euler method to a practical scenario. This problem involves a simplified thermal model of a CPU, a common challenge in computer engineering where stiff ODEs often arise. By performing a single numerical step to predict the CPU's temperature, you will see how this method is used to approximate solutions to real-world dynamic systems [@problem_id:2178316].", "problem": "A simplified thermal model for a Central Processing Unit (CPU) under a variable load is described by the following first-order ordinary differential equation:\n$$ \\frac{dT}{dt} = -k(T - T_a) + P(t) $$\nwhere $T(t)$ is the temperature of the CPU in degrees Celsius ($^\\circ\\text{C}$) at time $t$ in minutes, $k$ is the heat dissipation constant, $T_a$ is the constant ambient temperature, and $P(t)$ represents the heat generated by the CPU's activity.\n\nSuppose the parameters are given as:\n- Heat dissipation constant, $k = 0.5 \\text{ min}^{-1}$\n- Ambient temperature, $T_a = 25^\\circ\\text{C}$\n- Heat generation function, $P(t) = P_0 \\cos(\\omega t)$, with $P_0 = 10^\\circ\\text{C}/\\text{min}$ and $\\omega = \\frac{\\pi}{6} \\text{ rad/min}$.\n- The initial temperature of the CPU is $T(0) = 85^\\circ\\text{C}$.\n\nTo predict the temperature evolution, a numerical method is employed. The temperature at the next time step, $T_{n+1}$ at time $t_{n+1}$, is estimated from the temperature at the current time step, $T_n$ at time $t_n$, using the following update rule:\n$$ T_{n+1} = T_n + h \\left( \\frac{dT}{dt} \\right)_{t=t_{n+1}, T=T_{n+1}} $$\nwhere $h = t_{n+1} - t_n$ is the time step.\n\nUsing a single step of this numerical method with a step size of $h = 0.5$ minutes, calculate the approximate temperature of the CPU at $t = 0.5$ minutes.\n\nExpress your answer in degrees Celsius, rounded to four significant figures.", "solution": "We are given the first-order ODE\n$$\n\\frac{dT}{dt}=-k\\left(T-T_{a}\\right)+P(t), \\quad P(t)=P_{0}\\cos(\\omega t),\n$$\nand we are to apply one step of the implicit (backward) Euler method with step size $h$ from $t_{0}=0$ to $t_{1}=h$. The backward Euler update is\n$$\nT_{1}=T_{0}+h\\left.\\frac{dT}{dt}\\right|_{t=t_{1},\\,T=T_{1}}=T_{0}+h\\big(-k(T_{1}-T_{a})+P_{0}\\cos(\\omega t_{1})\\big).\n$$\nWe solve this equation for $T_{1}$. Expand the right-hand side and collect $T_{1}$ terms:\n$$\nT_{1}=T_{0}-hkT_{1}+hkT_{a}+hP_{0}\\cos(\\omega t_{1}).\n$$\nBring the $T_{1}$ terms to the left-hand side:\n$$\nT_{1}+hkT_{1}=T_{0}+hkT_{a}+hP_{0}\\cos(\\omega t_{1}).\n$$\nFactor the left-hand side and solve for $T_{1}$:\n$$\nT_{1}=\\frac{T_{0}+hkT_{a}+hP_{0}\\cos(\\omega t_{1})}{1+hk}.\n$$\nNow we substitute the given data $T_{0}=85$, $k=0.5$, $T_{a}=25$, $P_{0}=10$, $\\omega=\\frac{\\pi}{6}$, $h=0.5$, and $t_{1}=0.5$:\n$$\n1+hk=1+0.5\\times 0.5=1.25,\n$$\n$$\nhkT_{a}=0.5\\times 0.5\\times 25=6.25,\n$$\n$$\nhP_{0}\\cos(\\omega t_{1})=0.5\\times 10\\times \\cos\\!\\left(\\frac{\\pi}{6}\\times 0.5\\right)=5\\cos\\!\\left(\\frac{\\pi}{12}\\right).\n$$\nThus\n$$\nT_{1}=\\frac{85+6.25+5\\cos\\!\\left(\\frac{\\pi}{12}\\right)}{1.25}.\n$$\nUsing $\\cos\\!\\left(\\frac{\\pi}{12}\\right)\\approx 0.9659258263$, we get\n$$\nT_{1}\\approx \\frac{85+6.25+4.829629131}{1.25}=\\frac{96.079629131}{1.25}\\approx 76.86370331.\n$$\nRounded to four significant figures, the approximate temperature at $t=0.5$ minutes is $76.86$ degrees Celsius.", "answer": "$$\\boxed{76.86}$$", "id": "2178316"}, {"introduction": "While the implicit Euler method is celebrated for its stability, it is not without its own complexities, especially for nonlinear ODEs. This exercise explores a situation where the method can fail, not due to instability, but because the algebraic equation for the next step may not have a real-valued solution. By analyzing the conditions for failure, you will develop a deeper appreciation for the nuances of implementing implicit solvers and the critical interplay between step size and the nature of the ODE itself [@problem_id:2178313].", "problem": "An analyst is studying the numerical stability of approximating solutions to a first-order Ordinary Differential Equation (ODE). The specific initial value problem under consideration is given by the differential equation $y' = 1 + y^2$, with the initial condition $y(0) = 0$.\n\nTo find an approximate solution, the implicit Euler method is employed. For a uniform step size $h$, this method generates a sequence of values $y_0, y_1, y_2, \\ldots$, where $y_n$ is the approximation of the solution at time $t_n = nh$. The update rule is defined as:\n$$y_{n+1} = y_n + h f(t_{n+1}, y_{n+1})$$\nwhere $f(t, y)$ is the right-hand side of the ODE, i.e., $y' = f(t,y)$.\n\nFor the given ODE, applying the implicit Euler method leads to an algebraic equation that must be solved for $y_{n+1}$ at each step. It turns out that for any given state $y_n$, there exists a positive critical step size, $h_{crit}$, such that for any step size $h > h_{crit}$, the algebraic equation for $y_{n+1}$ has no real-valued solutions, causing the method to fail.\n\nYour task is to determine the expression for this critical step size $h_{crit}$ as a function of the current state $y_n$. Assume the step size $h$ must be a positive real number.", "solution": "We apply the implicit Euler method to the ODE $y' = 1 + y^{2}$ with step size $h>0$. The update is\n$$\ny_{n+1} = y_{n} + h\\left(1 + y_{n+1}^{2}\\right).\n$$\nRearranging to collect terms in $y_{n+1}$ gives\n$$\ny_{n+1} - h y_{n+1}^{2} - y_{n} - h = 0,\n$$\nwhich is equivalent to the quadratic equation in $y_{n+1}$,\n$$\nh y_{n+1}^{2} - y_{n+1} + \\left(y_{n} + h\\right) = 0.\n$$\nA quadratic equation $a z^{2} + b z + c = 0$ has real solutions if and only if its discriminant $\\Delta = b^{2} - 4ac$ satisfies $\\Delta \\ge 0$. Here $a = h$, $b = -1$, and $c = y_{n} + h$, so\n$$\n\\Delta(h) = (-1)^2 - 4 h (y_{n} + h) = 1 - 4 h y_{n} - 4 h^{2}.\n$$\nFor a fixed $y_{n}$, real solutions exist exactly when $\\Delta(h) \\ge 0$. The critical step size $h_{crit}$ is the positive value of $h$ at which $\\Delta(h) = 0$:\n$$\n1 - 4 h y_{n} - 4 h^{2} = 0 \\;\\;\\Longleftrightarrow\\;\\; 4 h^{2} + 4 y_{n} h - 1 = 0.\n$$\nSolving this quadratic equation for $h$,\n$$\nh = \\frac{-4 y_{n} \\pm \\sqrt{(4y_n)^2 - 4(4)(-1)}}{2(4)} = \\frac{-4 y_{n} \\pm \\sqrt{16 y_{n}^{2} + 16}}{8} = \\frac{-y_{n} \\pm \\sqrt{y_{n}^{2} + 1}}{2}.\n$$\nSince $h$ must be positive, we must take the positive root:\n$$\nh_{crit}(y_{n}) = \\frac{-y_{n} + \\sqrt{1 + y_{n}^{2}}}{2}.\n$$\nThe other root is negative and thus not an admissible step size. For any $h > h_{crit}(y_{n})$, the discriminant is negative, and no real-valued solution for $y_{n+1}$ exists, which causes the method to fail. An equivalent form is $h_{crit}(y_{n}) = \\frac{1}{2\\left(\\sqrt{1 + y_{n}^{2}} + y_{n}\\right)}$.", "answer": "$$\\boxed{\\frac{\\sqrt{1+y_{n}^{2}}-y_{n}}{2}}$$", "id": "2178313"}]}