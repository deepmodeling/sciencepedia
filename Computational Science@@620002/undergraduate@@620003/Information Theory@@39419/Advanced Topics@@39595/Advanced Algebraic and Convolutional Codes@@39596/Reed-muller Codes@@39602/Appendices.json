{"hands_on_practices": [{"introduction": "To understand the power and limitations of any error-correcting code, we begin with its three fundamental parameters: the codeword length ($n$), the message dimension ($k$), and the minimum distance ($d$). For Reed-Muller codes, these parameters are elegantly determined by the number of variables ($m$) and the polynomial degree ($r$). This first exercise [@problem_id:1653132] grounds these abstract concepts by asking you to calculate the $[n, k, d]$ parameters for $RM(1,2)$, a simple yet illustrative example, directly from its polynomial construction.", "problem": "A team of engineers is designing a simple, robust communication protocol for a network of sensors. They decide to use a specific type of linear block code known as a first-order Reed-Muller (RM) code over two variables, denoted as $RM(1,2)$.\n\nIn this scheme, messages are represented by binary polynomials in $m=2$ variables, say $x_1$ and $x_2$, with a total degree of at most $r=1$. The coefficients of these polynomials form the binary message bits. A codeword is constructed by evaluating a given message polynomial at all possible binary input vectors $(x_1, x_2)$ in a fixed lexicographical order: $(0,0)$, $(0,1)$, $(1,0)$, and $(1,1)$. All arithmetic is performed in the finite field with two elements, $\\mathbb{F}_2 = \\{0, 1\\}$, where addition and multiplication are performed modulo 2 (i.e., $1+1=0$).\n\nThe performance of a block code is characterized by three fundamental parameters: $n$, the length of the resulting codewords; $k$, the number of independent bits in a message (also known as the dimension of the code); and $d$, the minimum Hamming distance of the code. The Hamming distance between two codewords is the number of positions at which their corresponding bits differ, and the minimum distance $d$ is the smallest Hamming distance found between any two distinct codewords in the code.\n\nDetermine the parameters $[n, k, d]$ for the $RM(1,2)$ code. Present your answer as a set of three integers in the order $[n, k, d]$.", "solution": "The problem asks for the parameters $[n, k, d]$ for the Reed-Muller code $RM(1,2)$. Let's determine each parameter step-by-step based on the provided definition.\n\n**Step 1: Determine the codeword length, $n$.**\n\nThe codeword is generated by evaluating a polynomial in $m=2$ variables, $x_1$ and $x_2$, over all possible binary input vectors. Since each variable can take a value from $\\{0, 1\\}$, the number of distinct input vectors $(x_1, x_2)$ is $2^m = 2^2 = 4$. The problem specifies these evaluation points are ordered as $(0,0), (0,1), (1,0), (1,1)$.\n\nSince the polynomial is evaluated at each of these 4 points to produce a single bit of the codeword, the total length of any codeword is the number of evaluation points.\n$$n = 2^m = 2^2 = 4$$\nSo, the codeword length is $n=4$.\n\n**Step 2: Determine the message length (dimension), $k$.**\n\nThe message is defined by the coefficients of the polynomials. The code is $RM(1,2)$, which means the polynomials have a maximum total degree of $r=1$ and are in $m=2$ variables. A general polynomial $P(x_1, x_2)$ with total degree at most 1 can be written as a linear combination of all monomials in $x_1, x_2$ with degree less than or equal to 1.\n\nThe monomials of degree 0 in two variables is the constant term: $1$.\nThe monomials of degree 1 in two variables are: $x_1, x_2$.\nThe monomial $x_1x_2$ has degree 2, and terms like $x_1^2$ have degree 2, so they are not included. (Note that in $\\mathbb{F}_2$, $x^2=x$, but the degree is defined for the polynomial form).\n\nThus, the general form of the polynomial is:\n$$P(x_1, x_2) = a_0 \\cdot 1 + a_1 \\cdot x_1 + a_2 \\cdot x_2$$\nwhere the coefficients $a_0, a_1, a_2$ are binary values from $\\{0, 1\\}$. These coefficients represent the message bits. The number of such coefficients defines the dimension of the code, $k$. In this case, there are 3 coefficients.\nSo, the message length is $k=3$.\n\nIn general, for an $RM(r,m)$ code, the dimension $k$ is the number of monomials in $m$ variables of degree up to $r$, which is given by the formula:\n$$k = \\sum_{i=0}^{r} \\binom{m}{i}$$\nFor our case, $r=1$ and $m=2$:\n$$k = \\sum_{i=0}^{1} \\binom{2}{i} = \\binom{2}{0} + \\binom{2}{1} = 1 + 2 = 3$$\nThis confirms our result. A message is a vector $(a_0, a_1, a_2)$, and there are $2^k=2^3=8$ possible messages, which generate the 8 codewords of the code.\n\n**Step 3: Determine the minimum distance, $d$.**\n\nThe minimum distance $d$ of a linear code is equal to the minimum Hamming weight of any non-zero codeword. The Hamming weight of a codeword is the number of '1's it contains. A non-zero codeword is any codeword other than the all-zero codeword, which is generated by the zero message $(a_0, a_1, a_2) = (0,0,0)$.\n\nLet's find the weights of the codewords generated by the basis messages:\n- Message $(1,0,0) \\implies P(x_1, x_2) = 1$. The codeword is $(P(0,0), P(0,1), P(1,0), P(1,1)) = (1,1,1,1)$. The weight is 4.\n- Message $(0,1,0) \\implies P(x_1, x_2) = x_1$. The codeword is $(0,0,1,1)$. The weight is 2.\n- Message $(0,0,1) \\implies P(x_1, x_2) = x_2$. The codeword is $(0,1,0,1)$. The weight is 2.\n\nNow we check the weights of codewords generated by linear combinations of these basis messages (addition is XOR):\n- Message $(1,1,0) \\implies P=1+x_1$. Codeword is $(1,1,1,1)+(0,0,1,1) = (1,1,0,0)$. Weight is 2.\n- Message $(1,0,1) \\implies P=1+x_2$. Codeword is $(1,1,1,1)+(0,1,0,1) = (1,0,1,0)$. Weight is 2.\n- Message $(0,1,1) \\implies P=x_1+x_2$. Codeword is $(0,0,1,1)+(0,1,0,1) = (0,1,1,0)$. Weight is 2.\n- Message $(1,1,1) \\implies P=1+x_1+x_2$. Codeword is $(1,1,0,0)+(0,1,0,1) = (1,0,0,1)$. Weight is 2.\n\nThe non-zero codewords have weights of either 2 or 4. The minimum weight among all non-zero codewords is 2.\nTherefore, the minimum distance is $d=2$.\n\nThis is also consistent with the general formula for the minimum distance of an $RM(r,m)$ code, $d = 2^{m-r}$. For our case, $r=1$ and $m=2$:\n$$d = 2^{2-1} = 2^1 = 2$$\n\nCombining our results, the parameters for the $RM(1,2)$ code are $n=4$, $k=3$, and $d=2$.", "answer": "$$\\boxed{\\begin{pmatrix} 4 & 3 & 2 \\end{pmatrix}}$$", "id": "1653132"}, {"introduction": "Moving from theory to practice, the next step is to master the encoding process itself. This involves converting a compact message into its longer, redundant codeword form. This problem [@problem_id:1653143] provides a hands-on opportunity to perform this crucial step: you will take a specific message vector, form the corresponding polynomial for the $RM(1,3)$ code, and generate the full codeword by evaluating it over the entire space $\\mathbb{F}_2^3$. This mechanical but essential exercise solidifies the link between the abstract algebraic definition and the tangible output of the encoder.", "problem": "Consider the first-order Reed-Muller code, denoted as RM(1,3). This code is constructed from Boolean polynomials in $m=3$ variables, $(x_1, x_2, x_3)$, with a degree of at most $r=1$. The basis functions for the message space, in a specific order, are given by the set $\\{1, x_1, x_2, x_3\\}$.\n\nA message is represented by a vector of coefficients corresponding to these basis functions. Suppose the message vector is $(u_0, u_1, u_2, u_3) = (1, 0, 1, 1)$. This message defines a polynomial $f(x_1, x_2, x_3) = u_0 \\cdot 1 + u_1 \\cdot x_1 + u_2 \\cdot x_2 + u_3 \\cdot x_3$, where all operations are performed in the finite field $\\mathbb{F}_2$ (i.e., addition is equivalent to the XOR operation and multiplication is equivalent to the AND operation).\n\nThe corresponding codeword is generated by evaluating this polynomial $f(x_1, x_2, x_3)$ for all possible input vectors $(x_1, x_2, x_3)$. The input vectors are ordered lexicographically, from $(0,0,0)$, $(0,0,1)$, ..., up to $(1,1,1)$. The resulting 8-bit codeword is the sequence of these evaluations.\n\nWhich of the following is the correct codeword?\n\nA. 11001100\n\nB. 01100110\n\nC. 10011001\n\nD. 10101010\n\nE. 00110011", "solution": "We work over $\\mathbb{F}_{2}$ with basis $\\{1,x_{1},x_{2},x_{3}\\}$. The message $(u_{0},u_{1},u_{2},u_{3})=(1,0,1,1)$ defines the Boolean polynomial\n$$\nf(x_{1},x_{2},x_{3}) \\;=\\; u_{0}\\cdot 1 + u_{1}x_{1} + u_{2}x_{2} + u_{3}x_{3}\n\\;=\\; 1 + 0\\cdot x_{1} + 1\\cdot x_{2} + 1\\cdot x_{3}\n\\;=\\; 1 + x_{2} + x_{3}\n$$\nwith addition and multiplication in $\\mathbb{F}_{2}$.\n\nThe codeword is obtained by evaluating $f$ on all $(x_{1},x_{2},x_{3})\\in\\{0,1\\}^{3}$ in lexicographic order: $(0,0,0)$, $(0,0,1)$, $(0,1,0)$, $(0,1,1)$, $(1,0,0)$, $(1,0,1)$, $(1,1,0)$, $(1,1,1)$. Compute each value:\n- For $(0,0,0)$: $f=1+0+0=1$.\n- For $(0,0,1)$: $f=1+0+1=0$.\n- For $(0,1,0)$: $f=1+1+0=0$.\n- For $(0,1,1)$: $f=1+1+1=1$.\n- For $(1,0,0)$: $f=1+0+0=1$.\n- For $(1,0,1)$: $f=1+0+1=0$.\n- For $(1,1,0)$: $f=1+1+0=0$.\n- For $(1,1,1)$: $f=1+1+1=1$.\n\nThus the 8-bit codeword is $10011001$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1653143"}, {"introduction": "The ultimate purpose of a code is to overcome noise, but every code has its limits. This final practice problem explores the critical topic of decoding and its potential failures when a received message is too corrupted. It uses the concept of a bounded minimum distance decoder, whose error-correction capability $t$ is determined by the code's minimum distance $d$. Through a carefully constructed hypothetical scenario [@problem_id:1653172], you will analyze what happens when the number of transmission errors exceeds $t$, demonstrating why the decoder may be unable to uniquely identify the original message and must declare a failure.", "problem": "The first-order Reed-Muller code, denoted as $RM(r,m)$, is a class of binary linear block codes. The codewords of $RM(r,m)$ are evaluation vectors of all boolean polynomials in $m$ variables ($x_1, ..., x_m$) with a degree of at most $r$. An evaluation vector for a function $f$ is a binary vector of length $n=2^m$ whose components are the values of $f(\\mathbf{v})$ as $\\mathbf{v}$ ranges over all $2^m$ vectors in the space $\\mathbb{F}_2^m$ in lexicographical order.\n\nConsider a communication system that uses the $RM(1,4)$ code. The all-zero codeword, a vector of 16 zeros, is transmitted. During transmission through deep space, the signal is struck by a burst of cosmic rays, inducing a specific pattern of bit-flip errors. The error $\\mathbf{e}$ is a binary vector of length 16 where the $i$-th bit is 1 if and only if the $i$-th bit of the codeword was flipped. The error pattern corresponds exactly to the evaluation vector of the boolean polynomial $h(x_1, x_2, x_3, x_4) = x_1 x_2$.\n\nThe receiver on Earth employs a bounded minimum distance decoder. This type of decoder will output a codeword $\\mathbf{c}$ if and only if $\\mathbf{c}$ is the unique codeword in $RM(1,4)$ that satisfies the condition $d(\\mathbf{y}, \\mathbf{c}) \\le t$, where $\\mathbf{y}$ is the received vector, $d(\\mathbf{y}, \\mathbf{c})$ is the Hamming distance, and $t$ is the maximum number of errors the code is mathematically guaranteed to correct. If no codeword or more than one codeword satisfies this condition, the decoder reports a decoding failure.\n\nLet $\\mathbf{c}_0$ be the all-zero codeword and $\\mathbf{c}_k$ be the codeword corresponding to the boolean polynomial $f(x) = x_k$. Which of the following options correctly describes the outcome at the receiver?\n\nA. The decoder correctly outputs the all-zero codeword $\\mathbf{c}_0$.\n\nB. The decoder incorrectly outputs the codeword $\\mathbf{c}_1$.\n\nC. The decoder incorrectly outputs the codeword $\\mathbf{c}_2$.\n\nD. The decoder reports a decoding failure.\n\nE. The decoder incorrectly outputs the codeword corresponding to the boolean polynomial $f(x) = x_1 + x_2$.", "solution": "For a Reed-Muller code $RM(1,m)$, the length is $n=2^{m}$ and the minimum distance is $d=2^{m-1}$. Therefore, for $m=4$,\n$$\nn=2^{4}=16, \\quad d=2^{4-1}=8.\n$$\nA bounded minimum distance decoder corrects up to\n$$\nt=\\left\\lfloor \\frac{d-1}{2} \\right\\rfloor=\\left\\lfloor \\frac{8-1}{2} \\right\\rfloor=3\n$$\nerrors.\n\nThe transmitted codeword is $\\mathbf{c}_{0}$ (all-zero), and the received vector is $\\mathbf{y}=\\mathbf{c}_{0}+\\mathbf{e}=\\mathbf{e}$, where $\\mathbf{e}$ is the evaluation vector of $h(x_{1},x_{2},x_{3},x_{4})=x_{1}x_{2}$. The Hamming weight of $\\mathbf{e}$ is the number of inputs with $x_{1}x_{2}=1$, which occurs when $x_{1}=1$ and $x_{2}=1$, independently of $(x_{3},x_{4})$. Hence\n$$\n\\mathrm{wt}(\\mathbf{e})=2^{4-2}=4,\n$$\nso\n$$\nd(\\mathbf{y},\\mathbf{c}_{0})=\\mathrm{wt}(\\mathbf{y})=4>t.\n$$\nThus, option A is not possible.\n\nConsider any affine codeword $f(x)=a_{0}+a_{1}x_{1}+a_{2}x_{2}+a_{3}x_{3}+a_{4}x_{4}\\in RM(1,4)$. Partition the $16$ inputs into four blocks by fixing $(x_{1},x_{2})\\in\\{(0,0),(1,0),(0,1),(1,1)\\}$ and letting $(x_{3},x_{4})$ vary. On each block, $h=x_{1}x_{2}$ is constant. If $(a_{3},a_{4})\\neq(0,0)$, then $a_{3}x_{3}+a_{4}x_{4}$ takes two zeros and two ones over the four points in the block, so $f$ differs from the constant $h$ on exactly two points in each block. Therefore\n$$\nd(\\mathbf{y},\\mathbf{f})=4\\times 2=8>t,\n$$\nso no such $\\mathbf{f}$ can be within distance $t$.\n\nIt remains to consider $f(x)=a_{0}+a_{1}x_{1}+a_{2}x_{2}$. On the four blocks, agreement with $h$ requires the system\n$$\n\\begin{aligned}\na_{0}&=0 &&\\text{for }(x_{1},x_{2})=(0,0),\\\\\na_{0}+a_{1}&=0 &&\\text{for }(x_{1},x_{2})=(1,0),\\\\\na_{0}+a_{2}&=0 &&\\text{for }(x_{1},x_{2})=(0,1),\\\\\na_{0}+a_{1}+a_{2}&=1 &&\\text{for }(x_{1},x_{2})=(1,1).\n\\end{aligned}\n$$\nFrom the first three equations, $(a_{0},a_{1},a_{2})=(0,0,0)$, which contradicts the fourth equation. Hence at least one block must mismatch, so the minimal number of mismatching blocks is $1$, yielding\n$$\n\\min_{a_{0},a_{1},a_{2}} d(\\mathbf{y},\\mathbf{f})=4.\n$$\nThis minimum is achieved, for example, by $f=0$, $f=x_{1}$, $f=x_{2}$, and $f=1+x_{1}+x_{2}$, each at distance $4$. Since $4>t$, there is no codeword $\\mathbf{c}$ with $d(\\mathbf{y},\\mathbf{c})\\leq t$.\n\nBy the definition of the bounded minimum distance decoder, it outputs a codeword only if there exists a unique codeword within distance $t$. Here, no codeword satisfies $d(\\mathbf{y},\\mathbf{c})\\leq t$, so the decoder reports a decoding failure.\n\nTherefore, the correct choice is D.", "answer": "$$\\boxed{D}$$", "id": "1653172"}]}