{"hands_on_practices": [{"introduction": "The Kraft inequality provides a fundamental test for the existence of a prefix code for a given set of codeword lengths. This first exercise allows you to directly calculate the Kraft sum, $\\sum D^{-l_i}$, which is the core of this inequality. By comparing this sum for different alphabet sizes ($D$), you will develop an intuition for how this value quantifies whether a set of lengths can form a valid code. [@problem_id:1605839]", "problem": "A team of communication engineers is developing a novel encoding scheme for a small set of control signals for an autonomous drone. There are three distinct signals to be encoded: `ARM`, `TAKEOFF`, and `LAND`. The proposed encoding scheme assigns codewords of lengths $l_1=1$, $l_2=2$, and $l_3=2$ to these signals, respectively.\n\nThe team is debating between two different hardware implementations for the transmitter.\n1.  A **binary** system, which uses an alphabet of size $D_A=2$ (e.g., symbols '0' and '1').\n2.  A **ternary** system, which uses an alphabet of size $D_B=3$ (e.g., symbols '0', '1', and '2').\n\nTo assess how compactly the chosen set of codeword lengths utilizes the potential of each alphabet, they analyze a quantity $K_D = \\sum_{i=1}^{3} D^{-l_i}$, where $D$ is the alphabet size and $\\{l_i\\}$ are the codeword lengths. A smaller value of $K_D$ indicates a less \"saturated\" code for the given lengths.\n\nCalculate the value of this quantity for the binary system, $K_A$, and for the ternary system, $K_B$. Present your final answer as a row matrix $\\begin{pmatrix} K_A & K_B \\end{pmatrix}$.", "solution": "We are given three codeword lengths $l_{1}=1$, $l_{2}=2$, $l_{3}=2$, and the utilization measure\n$$\nK_{D}=\\sum_{i=1}^{3}D^{-l_{i}}.\n$$\nFor the binary system with alphabet size $D_{A}=2$, we compute\n$$\nK_{A}=2^{-1}+2^{-2}+2^{-2}=\\frac{1}{2}+\\frac{1}{4}+\\frac{1}{4}=1.\n$$\nFor the ternary system with alphabet size $D_{B}=3$, we compute\n$$\nK_{B}=3^{-1}+3^{-2}+3^{-2}=\\frac{1}{3}+\\frac{1}{9}+\\frac{1}{9}=\\frac{5}{9}.\n$$\nThus the requested row matrix is $\\begin{pmatrix} 1 & \\frac{5}{9} \\end{pmatrix}$.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & \\frac{5}{9} \\end{pmatrix}}$$", "id": "1605839"}, {"introduction": "This exercise bridges the gap between a source's statistical properties and the practical design of a compression code. You will start with the probabilities of different source symbols, determine the corresponding codeword lengths using the Shannon coding method, and then apply the Kraft inequality to confirm the feasibility of constructing a prefix code. This practice demonstrates a complete workflow from analyzing a source to validating a potential encoding scheme. [@problem_id:1605809]", "problem": "A remote weather satellite monitors atmospheric conditions and transmits a daily report classifying the predominant state of cloud cover. The source alphabet consists of four symbols: 'Clear', 'Partly Cloudy', 'Mostly Cloudy', and 'Overcast'. The probabilities of these states are related as follows:\n- The probability of a 'Clear' day is exactly $1/4$.\n- The probability of a 'Partly Cloudy' day is half of the remaining probability after accounting for 'Clear' days.\n- The rest of the probability is distributed between 'Mostly Cloudy' and 'Overcast' such that a 'Mostly Cloudy' day is twice as likely as an 'Overcast' day.\n\nTo compress this data for transmission, a uniquely decodable binary code is designed. The length $l_i$ for the codeword corresponding to the $i$-th symbol (with probability $p_i$) is determined using the Shannon coding method, given by the formula $l_i = \\lceil -\\log_2 p_i \\rceil$.\n\nWhich of the following statements accurately describes the set of codeword lengths and the properties of the resulting code? The set of lengths is presented in an unordered manner.\n\nA. The lengths are $\\{2, 2, 2, 3\\}$. A valid prefix code can be constructed, and its average length is $2.125$ bits/symbol.\n\nB. The lengths are $\\{1, 2, 2, 3\\}$. A valid prefix code cannot be constructed with these lengths.\n\nC. The lengths are $\\{2, 2, 2, 3\\}$. A valid prefix code cannot be constructed with these lengths.\n\nD. The lengths are $\\{1, 2, 3, 4\\}$. A valid prefix code can be constructed, and its average length is $2.125$ bits/symbol.\n\nE. The lengths are $\\{2, 2, 2, 2\\}$. A valid prefix code can be constructed, and its average length is $2.0$ bits/symbol.", "solution": "Let the four symbols be Clear (C), Partly Cloudy (P), Mostly Cloudy (M), and Overcast (O), with probabilities $p_{C}$, $p_{P}$, $p_{M}$, and $p_{O}$.\n\nGiven $p_{C} = \\frac{1}{4}$. The remaining probability is $1 - p_{C} = \\frac{3}{4}$. The problem states $p_{P}$ is half of the remaining probability, so\n$$\np_{P} = \\frac{1}{2}\\left(1 - p_{C}\\right) = \\frac{1}{2} \\cdot \\frac{3}{4} = \\frac{3}{8}.\n$$\nThe rest, $p_{M} + p_{O} = 1 - p_{C} - p_{P} = 1 - \\frac{1}{4} - \\frac{3}{8} = \\frac{3}{8}$, is split with $p_{M} = 2 p_{O}$. Solving\n$$\np_{M} + p_{O} = 3 p_{O} = \\frac{3}{8} \\implies p_{O} = \\frac{1}{8}, \\quad p_{M} = \\frac{1}{4}.\n$$\nThus the probabilities are $\\left\\{\\frac{1}{4}, \\frac{3}{8}, \\frac{1}{4}, \\frac{1}{8}\\right\\}$.\n\nUsing Shannon coding, $l_{i} = \\lceil -\\log_{2} p_{i} \\rceil$:\n- For $p = \\frac{1}{4} = 2^{-2}$, $-\\log_{2} p = 2 \\implies l = 2$.\n- For $p = \\frac{3}{8}$, $-\\log_{2}\\left(\\frac{3}{8}\\right) = \\log_{2}\\left(\\frac{8}{3}\\right) = 3 - \\log_{2} 3$. Since $1  \\log_{2} 3  2$, we have $1  3 - \\log_{2} 3  2$, hence $\\lceil 3 - \\log_{2} 3 \\rceil = 2$.\n- For $p = \\frac{1}{8} = 2^{-3}$, $-\\log_{2} p = 3 \\implies l = 3$.\n\nTherefore, the multiset of lengths is $\\{2, 2, 2, 3\\}$.\n\nTo check prefix-code feasibility, apply the Kraft inequality:\n$$\n\\sum_{i} 2^{-l_{i}} = 3 \\cdot 2^{-2} + 2^{-3} = \\frac{3}{4} + \\frac{1}{8} = \\frac{7}{8} \\leq 1,\n$$\nso a valid prefix code exists.\n\nThe average codeword length is\n$$\n\\bar{L} = \\sum_{i} p_{i} l_{i} = \\left(\\frac{1}{4}\\right) 2 + \\left(\\frac{3}{8}\\right) 2 + \\left(\\frac{1}{4}\\right) 2 + \\left(\\frac{1}{8}\\right) 3 = \\frac{1}{2} + \\frac{3}{4} + \\frac{1}{2} + \\frac{3}{8} = \\frac{17}{8} = 2.125.\n$$\nThis matches statement A: lengths $\\{2,2,2,3\\}$, valid prefix code, average length $2.125$ bits/symbol. All other options are inconsistent with the computed lengths or properties.", "answer": "$$\\boxed{A}$$", "id": "1605809"}, {"introduction": "Simply satisfying the Kraft inequality guarantees that a prefix code can be constructed, but it does not guarantee that the code is optimal. This final practice challenges you to explore the subtle distinction between an existent code and an efficient one. By analyzing why a specific set of lengths can never be optimal, regardless of the source probabilities, you will uncover a crucial structural property required for any truly optimal prefix code. [@problem_id:1605827]", "problem": "In the field of data compression, a fundamental goal is to find an optimal prefix code for a given information source. A prefix code is one where no codeword is a prefix of another, and an optimal code is a prefix code that has the minimum possible average codeword length for a given probability distribution of source symbols.\n\nAn engineer is designing a binary prefix code for a data source that produces five distinct symbols. A colleague proposes using a code with codeword lengths given by the set $L = \\{1, 3, 4, 5, 5\\}$. The engineer claims that this code can never be optimal. That is, for any possible probability distribution on the five source symbols, there must exist a different prefix code with a strictly smaller average codeword length.\n\nWhich of the following statements provides the most rigorous and correct justification for the engineer's claim?\n\nA. The set of lengths $L$ does not satisfy the Kraft inequality, which is a necessary condition for the existence of any prefix code.\n\nB. An optimal code must assign shorter codewords to more probable symbols, and a code with repeated lengths like $L$ cannot guarantee this property.\n\nC. The code tree corresponding to these lengths must contain at least one internal node that has only a single child node, a structure that can always be improved to create a code with a smaller average length.\n\nD. For any valid probability distribution, a different prefix code with the set of lengths $L' = \\{2, 2, 3, 4, 4\\}$ can be constructed, and this new code is mathematically guaranteed to result in a lower average codeword length.\n\nE. The sum of the codeword lengths, which is $1+3+4+5+5=18$, is not a power of 2, a required property for optimal binary codes.", "solution": "We consider a binary prefix code with codeword lengths $l_{1},\\dots,l_{n}$ and average codeword length $L=\\sum_{i=1}^{n} p_{i} l_{i}$ for a source with symbol probabilities $p_{1},\\dots,p_{n}$, where $\\sum_{i=1}^{n} p_{i}=1$ and $p_{i}\\ge 0$. Existence of a prefix code with given lengths requires the Kraft inequality\n$$\n\\sum_{i=1}^{n} 2^{-l_{i}} \\le 1.\n$$\nMoreover, a well-known structural property is that a prefix code is represented by a rooted binary tree whose leaves correspond to codewords, and such a tree is full (every internal node has exactly two children) if and only if the Kraft sum equals $1$. If the Kraft sum is strictly less than $1$, the corresponding tree cannot be full, which implies the existence of at least one internal node with only one child (a unary internal node).\n\nFor the proposed set $L=\\{1,3,4,5,5\\}$, the Kraft sum is\n$$\n2^{-1}+2^{-3}+2^{-4}+2^{-5}+2^{-5}=\\frac{1}{2}+\\frac{1}{8}+\\frac{1}{16}+\\frac{1}{32}+\\frac{1}{32}=\\frac{24}{32}=\\frac{3}{4}1.\n$$\nThus the Kraft inequality is satisfied (so A is false as a justification), but the sum is strictly less than $1$. Therefore, any code tree realizing these lengths cannot be full; it must contain at least one internal node with only a single child.\n\nWe now show why any prefix code whose tree has an internal node with only one child is strictly suboptimal for every probability distribution. Let $v$ be such a unary internal node, let $u$ be its unique child, and let $S$ be the set of leaves in the subtree rooted at $u$. Consider the operation that removes the edge $(v,u)$ and merges $u$ into $v$, thereby shortening every codeword in $S$ by exactly $1$ bit and leaving all other codewords unchanged. The prefix-free property is preserved because the removed edge was traversed by all and only the codewords in $S$, and there are no codewords in the missing sibling subtree of $v$. Denote the new codeword lengths by $l_{i}'$:\n$$\nl_{i}'=\\begin{cases}\nl_{i}-1,  \\text{if the $i$th codeword is in } S,\\\\\nl_{i},  \\text{otherwise.}\n\\end{cases}\n$$\nHence the new average length is\n$$\nL'=\\sum_{i=1}^{n} p_{i} l_{i}'=\\sum_{i=1}^{n} p_{i} l_{i}-\\sum_{i\\in S} p_{i}=L-\\sum_{i\\in S} p_{i}.\n$$\nBecause the leaves in $S$ correspond to actual source symbols and $\\sum_{i=1}^{n} p_{i}=1$, at least one $p_{i}$ with $i\\in S$ is strictly positive, so\n$$\n\\sum_{i\\in S} p_{i}0 \\quad \\Rightarrow \\quad L'L.\n$$\nTherefore any code with a unary internal node is strictly improvable for every probability distribution, and thus cannot be optimal.\n\nApplying this to $L=\\{1,3,4,5,5\\}$: since the Kraft sum is strictly less than $1$, the corresponding tree must have at least one unary internal node, so it is strictly improvable as above. This provides a rigorous, distribution-independent justification that no code with these lengths can be optimal. This is precisely the content of option C.\n\nFor completeness:\n- A is incorrect because the Kraft inequality is satisfied (strictly).\n- B is not a rigorous justification: repeated lengths do not preclude optimality.\n- D is false because $\\{2,2,3,4,4\\}$ does not uniformly dominate $\\{1,3,4,5,5\\}$ for all distributions; for example, for a heavily skewed distribution, a length-$1$ codeword is favored.\n- E is incorrect; optimality for a prefix code is characterized by the Kraft equality $\\sum 2^{-l_{i}}=1$, not by the sum of lengths being a power of $2$.\n\nHence, the most rigorous and correct justification is C.", "answer": "$$\\boxed{C}$$", "id": "1605827"}]}