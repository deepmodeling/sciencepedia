{"hands_on_practices": [{"introduction": "The Kraft inequality serves as a fundamental litmus test for the existence of a prefix code. Before spending valuable time attempting to construct a code, we can use this simple mathematical check to determine if a desired set of codeword lengths is even theoretically possible. This first practice provides a direct application of this principle, asking you to act as a project lead and verify the feasibility of a proposed binary encoding scheme.", "problem": "A team of engineers is developing a custom binary encoding scheme for a small set of six specialized instructions, $\\{I_1, I_2, I_3, I_4, I_5, I_6\\}$, used to control a new type of microprocessor. To allow for rapid and unambiguous decoding, the chosen scheme must be a \"prefix code,\" which means that no codeword can be the prefix (the initial part) of any other codeword. A new team member excited to contribute proposes a specific structure for the code: she suggests assigning codewords of length 2 to three of the instructions and codewords of length 3 to the remaining three instructions.\n\nAs the project lead, you must verify the theoretical feasibility of this proposal before any implementation work begins. Can such a binary prefix code be constructed?\n\nA. Yes, a prefix code with this set of lengths is possible.\nB. No, a prefix code with this set of lengths is impossible to construct.\nC. It is only possible if the instructions are used with specific, non-uniform probabilities.\nD. There is not enough information to determine if such a code is possible.", "solution": "A binary prefix code exists for a multiset of codeword lengths $\\{l_{i}\\}$ if and only if the Kraft-McMillan inequality holds:\n$$\n\\sum_{i=1}^{n} 2^{-l_{i}} \\leq 1.\n$$\nFor the proposed lengths, take $l_{1}=l_{2}=l_{3}=2$ and $l_{4}=l_{5}=l_{6}=3$. Compute the Kraft sum:\n$$\n\\sum_{i=1}^{6} 2^{-l_{i}} = 3 \\cdot 2^{-2} + 3 \\cdot 2^{-3} = \\frac{3}{4} + \\frac{3}{8} = \\frac{9}{8}.\n$$\nSince\n$$\n\\frac{9}{8} > 1,\n$$\nthe Kraft-McMillan inequality is violated. Therefore, no binary prefix code can have three codewords of length $2$ and three codewords of length $3$. This impossibility is independent of any probability assignment to the instructions; it depends solely on the lengths.", "answer": "$$\\boxed{B}$$", "id": "1635990"}, {"introduction": "While binary codes are common, information can be encoded using any alphabet of size $D$. The Kraft inequality naturally generalizes to accommodate these $D$-ary codes, making it a versatile tool. In this exercise, you will move beyond simple verification and use the inequality to solve a design problem: determining the minimum alphabet size required to construct a prefix code with a specific, multi-tiered structure.", "problem": "A new communication protocol is being designed for a swarm of aerial drones. The protocol uses a set of command words built from an alphabet of $D$ distinct symbols. To ensure unambiguous and instantaneous decoding, the command set is designed such that no command word is a prefix of any other command word. The design specifies three tiers of commands:\n- Tier 1: 2 distinct commands, each of length 2.\n- Tier 2: 4 distinct commands, each of length 3.\n- Tier 3: 8 distinct commands, each of length 4.\n\nGiven these constraints on the command structure, what is the minimum possible integer value for the alphabet size $D$?", "solution": "We need a prefix-free set of codewords over a $D$-ary alphabet with lengths: two of length $2$, four of length $3$, and eight of length $4$. For a $D$-ary prefix-free code with codeword lengths $\\{l_{i}\\}$, the Kraft inequality provides a necessary and sufficient condition for existence:\n$$\n\\sum_{i} D^{-l_{i}} \\leq 1.\n$$\nApplying this to the given multiset of lengths, we require\n$$\n2 D^{-2} + 4 D^{-3} + 8 D^{-4} \\leq 1.\n$$\nMultiplying both sides by $D^{4}$ (valid for $D \\geq 1$) yields the equivalent inequality\n$$\n2 D^{2} + 4 D + 8 \\leq D^{4}.\n$$\nWe seek the smallest integer $D$ satisfying this inequality. Evaluate at $D=2$:\n$$\n2 \\cdot 2^{2} + 4 \\cdot 2 + 8 = 8 + 8 + 8 = 24,\\quad D^{4} = 16,\n$$\nso $24 \\leq 16$ is false, and $D=2$ is not feasible. Evaluate at $D=3$:\n$$\n2 \\cdot 3^{2} + 4 \\cdot 3 + 8 = 18 + 12 + 8 = 38,\\quad D^{4} = 81,\n$$\nso $38 \\leq 81$ holds, equivalently\n$$\n2 \\cdot 3^{-2} + 4 \\cdot 3^{-3} + 8 \\cdot 3^{-4} = \\frac{38}{81} \\leq 1.\n$$\nSince the function $D \\mapsto 2 D^{-2} + 4 D^{-3} + 8 D^{-4}$ is strictly decreasing for $D \\geq 1$, once the inequality holds at $D=3$, it holds for all larger $D$. By the Kraftâ€“McMillan theorem, $\\sum D^{-l_{i}} \\leq 1$ is also sufficient for the existence of a prefix-free code with the specified lengths. Therefore, the minimal feasible alphabet size is $D=3$.", "answer": "$$\\boxed{3}$$", "id": "1636006"}, {"introduction": "The power of a theoretical tool is often best seen when applied to extreme cases. This practice explores a fascinating thought experiment: is it possible to design a prefix code for a source with a countably infinite number of symbols? The Kraft inequality, when extended to handle infinite sets of codewords through the use of series, provides a definitive answer, showcasing its profound capabilities in analyzing even the most abstract coding scenarios.", "problem": "In information theory, a prefix code is a variable-length code system characterized by the \"prefix property,\" which states that no codeword in the system is a prefix of any other codeword. This property is crucial as it allows for instant and unambiguous decoding of a sequence of concatenated codewords.\n\nConsider a discrete memoryless source that can emit a countably infinite set of distinct symbols, denoted by $\\{s_1, s_2, s_3, \\dots\\}$. A proposal is made to encode these symbols using a binary alphabet, i.e., using codewords composed of $\\{0, 1\\}$. According to this proposal, the length of the codeword assigned to symbol $s_i$ is given by the rule $l_i = i + 1$, for all integers $i \\ge 1$.\n\nBased on this information, determine if it is possible to construct a binary prefix code that satisfies this set of codeword lengths $\\{l_i\\}_{i=1}^{\\infty}$.\n\nA. Yes, a prefix code with these lengths can be constructed.\nB. No, a prefix code with these lengths cannot be constructed.\nC. The existence of such a code is indeterminate for an infinite set of symbols.\nD. The existence of such a code depends on the specific probabilities of the source symbols, which are not provided.", "solution": "We use the Kraft inequality for a countably infinite set of codeword lengths over a binary alphabet. For a binary prefix code (alphabet size $D=2$) with lengths $\\{l_{i}\\}_{i=1}^{\\infty}$, a necessary and sufficient condition for existence is\n$$\n\\sum_{i=1}^{\\infty} 2^{-l_{i}} \\leq 1.\n$$\nHere $l_{i} = i+1$ for all integers $i \\geq 1$. Therefore the Kraft sum is\n$$\nS=\\sum_{i=1}^{\\infty} 2^{-(i+1)}.\n$$\nWe compute $S$ as a geometric series. Note that\n$$\n\\sum_{i=1}^{\\infty} 2^{-(i+1)}=\\sum_{i=2}^{\\infty} 2^{-i}=\\left(\\sum_{i=1}^{\\infty} 2^{-i}\\right)-2^{-1}.\n$$\nUsing the geometric series formula with ratio $r=\\frac{1}{2}$,\n$$\n\\sum_{i=1}^{\\infty} 2^{-i}=\\frac{\\frac{1}{2}}{1-\\frac{1}{2}}=1,\n$$\nso\n$$\nS=1-\\frac{1}{2}=\\frac{1}{2}\\leq 1.\n$$\nSince the Kraft inequality is satisfied with strict inequality, a binary prefix code with these lengths exists.\n\nAn explicit construction confirms feasibility: define the codeword for symbol $s_{i}$ as $c_{i}=1^{i}0$, i.e., $i$ ones followed by a zero. Then $|c_{i}|=i+1=l_{i}$. To check the prefix property, fix $i<j$. The first $i$ bits of $c_{j}$ are all ones, and the $(i+1)$-th bit of $c_{j}$ is also $1$, whereas the $(i+1)$-th bit of $c_{i}$ is $0$. Hence $c_{i}$ is not a prefix of $c_{j}$. Symmetrically, $c_{j}$ cannot be a prefix of $c_{i}$. Therefore, the set $\\{c_{i}\\}_{i=1}^{\\infty}$ is prefix-free and has the required lengths.\n\nThus, a binary prefix code with lengths $l_{i}=i+1$ for all $i\\geq 1$ exists, so the correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "1635991"}]}