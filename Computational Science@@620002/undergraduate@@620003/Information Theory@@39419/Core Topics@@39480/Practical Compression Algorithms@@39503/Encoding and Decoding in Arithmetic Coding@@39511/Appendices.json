{"hands_on_practices": [{"introduction": "Arithmetic coding's elegance lies in its ability to represent an entire sequence of symbols as a single fractional number within the interval $[0, 1)$. This first exercise guides you through the fundamental encoding mechanism by mapping a short sequence to its corresponding sub-interval. By working through this example [@problem_id:1602900], you will gain a concrete understanding of how the algorithm recursively partitions the interval based on the probabilities defined in a hypothetical source model.", "problem": "Arithmetic coding is a powerful data compression technique that represents an entire sequence of symbols as a single fraction in the interval $[0, 1)$. Consider a simplified source model for telemetry data from a planetary probe. The source emits symbols from the alphabet $\\{A, B, C\\}$ with the following fixed probabilities: $P(A) = 0.5$, $P(B) = 0.3$, and $P(C) = 0.2$.\n\nThe arithmetic coding algorithm starts with the interval $[0, 1)$ and iteratively narrows it based on the symbols in the input sequence. For the input sequence 'BCA', determine the final interval $[L, H)$ that represents this sequence.\n\nProvide the exact decimal values for the lower bound $L$ and the upper bound $H$ of the final interval.", "solution": "Arithmetic coding starts with the full interval $[0,1)$ and iteratively refines it using the source model. Let $L$ and $H$ denote the current lower and upper bounds, and let $W = H - L$ be the current width. For a symbol $s$ with cumulative distribution function $F(s)$ (the cumulative probability up to but not including $s$) and probability $p(s)$, the update is\n$$\nL' = L + W \\, F(s), \\quad H' = L + W \\, \\big(F(s) + p(s)\\big).\n$$\nUsing the given probabilities $P(A) = 0.5$, $P(B) = 0.3$, $P(C) = 0.2$, the cumulative ranges in the order $\\{A,B,C\\}$ are:\n$$\nA: [0, 0.5), \\quad B: [0.5, 0.8), \\quad C: [0.8, 1).\n$$\nStart with $[L_{0}, H_{0}) = [0, 1)$, so $W_{0} = 1$.\n\nFor the first symbol $B$, we have $F(B) = 0.5$ and $p(B) = 0.3$. Therefore,\n$$\nL_{1} = 0 + 1 \\cdot 0.5 = 0.5, \\quad H_{1} = 0 + 1 \\cdot (0.5 + 0.3) = 0.8,\n$$\nso the interval is $[0.5, 0.8)$ with width $W_{1} = 0.3$.\n\nFor the second symbol $C$, we have $F(C) = 0.8$ and $p(C) = 0.2$. Using $L_{1} = 0.5$ and $W_{1} = 0.3$,\n$$\nL_{2} = 0.5 + 0.3 \\cdot 0.8 = 0.74, \\quad H_{2} = 0.5 + 0.3 \\cdot (0.8 + 0.2) = 0.8,\n$$\nso the interval is $[0.74, 0.8)$ with width $W_{2} = 0.06$.\n\nFor the third symbol $A$, we have $F(A) = 0$ and $p(A) = 0.5$. Using $L_{2} = 0.74$ and $W_{2} = 0.06$,\n$$\nL_{3} = 0.74 + 0.06 \\cdot 0 = 0.74, \\quad H_{3} = 0.74 + 0.06 \\cdot 0.5 = 0.77.\n$$\nTherefore, the final interval representing the sequence 'BCA' is $[0.74, 0.77)$. As a consistency check, the final width is $0.77 - 0.74 = 0.03$, which equals $P(B) \\cdot P(C) \\cdot P(A) = 0.3 \\cdot 0.2 \\cdot 0.5 = 0.03$ as expected.", "answer": "$$\\boxed{\\begin{pmatrix}0.74 & 0.77\\end{pmatrix}}$$", "id": "1602900"}, {"introduction": "Once a message is encoded into a single value, the receiver must reconstruct the original symbol sequence. This practice [@problem_id:1619716] reverses the process, challenging you to decode a received numerical value back into its sequence of symbols. This exercise not only solidifies your understanding of interval partitioning but also introduces the practical use of an End-Of-Message (EOM) symbol, a common technique for handling messages of variable length.", "problem": "A simplified data compression scheme is used for transmitting short messages over a noisy channel. The source alphabet consists of three symbols: `A`, `B`, and a special `End-Of-Message` (EOM) symbol that signals the termination of a message. The statistical model for the source is fixed and known to both the sender and receiver. The probabilities of the symbols are given as:\n- $P(A) = 0.5$\n- $P(B) = 0.3$\n- $P(\\text{EOM}) = 0.2$\n\nTo perform arithmetic coding, the interval $[0, 1)$ is partitioned into sub-intervals corresponding to the symbols. The symbols are assigned these sub-intervals based on their probabilities, maintaining alphabetical order (i.e., A, then B, then EOM). A full message sequence is then encoded into a single floating-point number.\n\nA receiver has just received the encoded value $0.6$. Based on the provided statistical model, determine the original message sequence that was sent.\n\nA. BAA\n\nB. BABBAAB\n\nC. ABABA\n\nD. BABB\n\nE. BAAB", "solution": "Arithmetic decoding maps a code value $x \\in [0,1)$ through successive refinements of an interval $[L,U)$ according to the known model. With alphabetical order, the cumulative boundaries are\n$$c(A)=0,\\quad c(B)=P(A)=0.5,\\quad c(\\text{EOM})=P(A)+P(B)=0.8,$$\nand for any current interval $[L,U)$ of width $W=U-L$, the sub-interval for a symbol $s$ is\n$$\\big[L+W\\,c(s),\\; L+W\\,(c(s)+P(s))\\big).$$\nWe are given $x=0.6$. Initialize $[L,U)=[0,1)$.\n\nStep 1: $[L,U)=[0,1)$, $W=1$.\nSymbol sub-intervals:\n$A:[0,0.5),\\quad B:[0.5,0.8),\\quad \\text{EOM}:[0.8,1).$\nSince $x=0.6 \\in [0.5,0.8)$, decode $B$. Update $[L,U)=[0.5,0.8)$.\n\nStep 2: $[L,U)=[0.5,0.8)$, $W=0.3$.\n$A:[0.5, 0.5 + 0.3 \\cdot 0.5)=[0.5,0.65),$\n$B:[0.65, 0.65 + 0.3 \\cdot 0.3)=[0.65,0.74),$\n$\\text{EOM}:[0.74, 0.74 + 0.3 \\cdot 0.2)=[0.74,0.8).$\nSince $x=0.6 \\in [0.5,0.65)$, decode $A$. Update $[L,U)=[0.5,0.65)$.\n\nStep 3: $[L,U)=[0.5,0.65)$, $W=0.15$.\n$A:[0.5, 0.5 + 0.15 \\cdot 0.5)=[0.5,0.575),$\n$B:[0.575, 0.575 + 0.15 \\cdot 0.3)=[0.575,0.62),$\n$\\text{EOM}:[0.62, 0.62 + 0.15 \\cdot 0.2)=[0.62,0.65).$\nSince $x=0.6 \\in [0.575,0.62)$, decode $B$. Update $[L,U)=[0.575,0.62)$.\n\nStep 4: $[L,U)=[0.575,0.62)$, $W=0.045$.\n$A:[0.575, 0.575 + 0.045 \\cdot 0.5)=[0.575,0.5975),$\n$B:[0.5975, 0.5975 + 0.045 \\cdot 0.3)=[0.5975,0.611),$\n$\\text{EOM}:[0.611, 0.611 + 0.045 \\cdot 0.2)=[0.611,0.62).$\nSince $x=0.6 \\in [0.5975,0.611)$, decode $B$. Update $[L,U)=[0.5975,0.611)$.\n\nStep 5: $[L,U)=[0.5975,0.611)$, $W=0.0135$.\n$A:[0.5975, 0.5975 + 0.0135 \\cdot 0.5)=[0.5975,0.60425),$\n$B:[0.60425, 0.60425 + 0.0135 \\cdot 0.3)=[0.60425,0.6083),$\n$\\text{EOM}:[0.6083, 0.6083 + 0.0135 \\cdot 0.2)=[0.6083,0.611).$\nSince $x=0.6 \\in [0.5975,0.60425)$, decode $A$. Update $[L,U)=[0.5975,0.60425)$.\n\nStep 6: $[L,U)=[0.5975,0.60425)$, $W=0.00675$.\n$A:[0.5975, 0.5975 + 0.00675 \\cdot 0.5)=[0.5975,0.600875),$\n$B:[0.600875, 0.600875 + 0.00675 \\cdot 0.3)=[0.600875,0.6029),$\n$\\text{EOM}:[0.6029, 0.6029 + 0.00675 \\cdot 0.2)=[0.6029,0.60425).$\nSince $x=0.6 \\in [0.5975,0.600875)$, decode $A$. Update $[L,U)=[0.5975,0.600875)$.\n\nStep 7: $[L,U)=[0.5975,0.600875)$, $W=0.003375$.\n$A:[0.5975, 0.5975 + 0.003375 \\cdot 0.5)=[0.5975,0.5991875),$\n$B:[0.5991875, 0.5991875 + 0.003375 \\cdot 0.3)=[0.5991875,0.6002),$\n$\\text{EOM}:[0.6002, 0.6002 + 0.003375 \\cdot 0.2)=[0.6002,0.600875).$\nSince $x=0.6 \\in [0.5991875,0.6002)$, decode $B$. Update $[L,U)=[0.5991875,0.6002)$.\n\nStep 8: $[L,U)=[0.5991875,0.6002)$, $W=0.0010125$.\n$A:[0.5991875, 0.5991875 + 0.0010125 \\cdot 0.5)=[0.5991875,0.59969375),$\n$B:[0.59969375, 0.59969375 + 0.0010125 \\cdot 0.3)=[0.59969375,0.5999975),$\n$\\text{EOM}:[0.5999975, 0.5999975 + 0.0010125 \\cdot 0.2)=[0.5999975,0.6002).$\nSince $x=0.6 \\in [0.5999975,0.6002)$, decode $\\text{EOM}$ and stop.\n\nThe decoded sequence before $\\text{EOM}$ is $B\\,A\\,B\\,B\\,A\\,A\\,B$, which matches option B.", "answer": "$$\\boxed{B}$$", "id": "1619716"}, {"introduction": "A robust understanding of any algorithm requires testing its behavior at the limits. This problem [@problem_id:1619727] presents a crucial edge case: attempting to encode a symbol that the source model defines as having zero probability. This thought experiment demonstrates the profound connection between probability and information, revealing what happens when the interval width collapses to zero and why arithmetic coding cannot represent a sequence deemed impossible by the model.", "problem": "In a data compression course, you are tasked with analyzing the behavior of the arithmetic coding algorithm under a specific edge-case scenario. Consider a source that generates symbols from the alphabet {K, L, M, N} with the following fixed probabilities:\n- $P(\\text{K}) = 0.4$\n- $P(\\text{L}) = 0.2$\n- $P(\\text{M}) = 0.4$\n- $P(\\text{N}) = 0.0$\n\nThe arithmetic coding algorithm for this model is initialized with the interval $[0.0, 1.0)$. You are asked to encode the input sequence of symbols \"LKN\".\n\nWhich of the following statements correctly describes the outcome of this encoding process?\n\nA. The process successfully completes, and a valid encoded tag representing the sequence is 0.48.\n\nB. The symbol 'N' is ignored because its probability is zero, and the final interval is $[0.4, 0.48)$, corresponding to the sequence 'LK'.\n\nC. The encoding process fails because the specified model assigns a probability of zero to the input sequence 'LKN'.\n\nD. The process results in a final interval width of 0.08, which is the last non-zero width calculated.", "solution": "We use standard arithmetic coding with a fixed cumulative partition of the current interval according to the model probabilities. Let the symbol order be $\\{\\text{K},\\text{L},\\text{M},\\text{N}\\}$. For any current interval $[l,h)$ with width $w=h-l$, encoding a symbol $s$ whose cumulative fractional subinterval within $[0,1)$ is $[c_{s}^{l},c_{s}^{h})$ produces the next interval\n$$\n[l',h')=\\big[l+w\\,c_{s}^{l},\\;l+w\\,c_{s}^{h}\\big).\n$$\nGiven $P(\\text{K})=0.4$, $P(\\text{L})=0.2$, $P(\\text{M})=0.4$, $P(\\text{N})=0.0$, the cumulative fractional subintervals are\n- $\\text{K}:[0.0,0.4)$,\n- $\\text{L}:[0.4,0.6)$,\n- $\\text{M}:[0.6,1.0)$,\n- $\\text{N}:[1.0,1.0)$ (empty, since $P(\\text{N})=0$).\n\nStart with $[l,h)=[0,1)$.\n\nStep 1 (encode L): $w=1$, $[c_{\\text{L}}^{l},c_{\\text{L}}^{h})=[0.4,0.6)$, hence\n$$\n[l,h) \\leftarrow [0+1\\cdot 0.4,\\;0+1\\cdot 0.6)=[0.4,0.6),\\quad w=0.6-0.4=0.2.\n$$\n\nStep 2 (encode K): $w=0.2$, $[c_{\\text{K}}^{l},c_{\\text{K}}^{h})=[0.0,0.4)$, hence\n$$\n[l,h) \\leftarrow [0.4+0.2\\cdot 0.0,\\;0.4+0.2\\cdot 0.4)=[0.4,0.48),\\quad w=0.48-0.4=0.08.\n$$\n\nStep 3 (encode N): $w=0.08$, $[c_{\\text{N}}^{l},c_{\\text{N}}^{h})=[1.0,1.0)$, hence\n$$\n[l,h) \\leftarrow [0.4+0.08\\cdot 1.0,\\;0.4+0.08\\cdot 1.0)=[0.48,0.48),\\quad w=0.\n$$\n\nThe final interval is empty, so no valid tag exists in $[l,h)$. This reflects that the modeled probability of the sequence is zero due to $P(\\text{N})=0$, and arithmetic coding cannot encode a zero-probability symbol. Therefore, the encoding process fails.\n\nOption A is incorrect because $0.48$ is not a valid tag in the empty interval $[0.48,0.48)$. Option B is incorrect because the algorithm does not ignore symbols with zero probability. Option D is incorrect because the final interval width is $0$, not $0.08$ (which was the width before attempting to encode $\\text{N}$). The correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1619727"}]}