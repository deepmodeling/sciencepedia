{"hands_on_practices": [{"introduction": "This first exercise provides a concrete starting point for applying the Hamming bound. By calculating the maximum number of unique codewords for a system that must correct a single bit error, you will directly engage with the concept of sphere packing. This practice demonstrates how the Hamming bound serves as a fundamental limit on the capacity of any error-correcting code [@problem_id:1627660].", "problem": "A deep-space probe, the *ExoScout*, is designed to analyze the atmospheric composition of exoplanets. It communicates its findings back to Earth using a fixed-length binary code. Each distinct atmospheric profile it can identify is assigned a unique 12-bit codeword. The communication channel is noisy, and it is known that during transmission, at most one bit in any given codeword can be flipped. To ensure reliable communication, the set of chosen codewords must be designed such that any received 12-bit word can be unambiguously decoded back to the correct original codeword, even with a single bit error. What is the maximum number of distinct atmospheric profiles that the *ExoScout* can be designed to report?", "solution": "We have a binary block code of length $n=12$ that must correct up to one bit flip per codeword. To ensure unambiguous decoding whenever at most one bit error occurs, the minimum Hamming distance between distinct codewords must satisfy $d_{\\min} \\geq 3$, which is equivalent to requiring that the Hamming spheres of radius $t=1$ around distinct codewords are disjoint.\n\nLet $M$ denote the number of codewords. The Hamming (sphere-packing) bound states that\n$$\nM \\sum_{i=0}^{t} \\binom{n}{i} \\leq 2^{n}.\n$$\nHere, $n=12$ and $t=1$, so\n$$\n\\sum_{i=0}^{1} \\binom{12}{i} = \\binom{12}{0} + \\binom{12}{1} = 1 + 12 = 13,\n$$\nand thus\n$$\nM \\cdot 13 \\leq 2^{12}.\n$$\nTherefore,\n$$\nM \\leq \\left\\lfloor \\frac{2^{12}}{13} \\right\\rfloor = \\left\\lfloor \\frac{4096}{13} \\right\\rfloor = 315.\n$$\nHence, the maximum number of distinct atmospheric profiles equals $315$.", "answer": "$$\\boxed{315}$$", "id": "1627660"}, {"introduction": "Building on the previous practice, this problem explores a critical trade-off in code design: reliability versus information rate. You will calculate the maximum number of codewords for a system designed to correct up to two errors, where the error-correction capability is denoted by $t=2$. Comparing the result with a single-error case highlights the quantitative \"cost\" of enhanced error-correction capability in terms of reduced code size [@problem_id:1627624].", "problem": "The deep-space probe *Odysseus* communicates with its ground station on Earth by transmitting data packets as binary codewords. Each codeword is a sequence of length $n=13$ bits. To combat noise in the vast expanse of space, the communication protocol employs an error-correcting code. This code is designed to be powerful enough to correctly identify the original message even if up to $t=2$ bits are flipped during transmission.\n\nGiven these design constraints, what is the theoretical maximum integer number of distinct codewords that can exist in this code's dictionary?", "solution": "We have a binary block code of length $n=13$ that must correct up to $t=2$ errors. Error-correction capability $t$ requires minimum Hamming distance $d$ satisfying $t=\\left\\lfloor\\frac{d-1}{2}\\right\\rfloor$, hence $d\\geq 2t+1=5$.\n\nTo uniquely correct up to $t$ errors, the Hamming balls of radius $t$ centered at distinct codewords must be disjoint. The total number of binary $n$-tuples is $2^{n}$, and the volume of a Hamming ball of radius $t$ in $\\{0,1\\}^{n}$ is\n$$\nV(n,t)=\\sum_{i=0}^{t}\\binom{n}{i}.\n$$\nTherefore, by the sphere-packing (Hamming) bound, the maximum possible number of codewords $M$ satisfies\n$$\nM\\leq \\left\\lfloor \\frac{2^{n}}{\\sum_{i=0}^{t}\\binom{n}{i}} \\right\\rfloor.\n$$\nFor $n=13$ and $t=2$,\n$$\nV(13,2)=\\binom{13}{0}+\\binom{13}{1}+\\binom{13}{2}=1+13+\\frac{13\\cdot 12}{2}=1+13+78=92,\n$$\nso\n$$\nM\\leq \\left\\lfloor \\frac{2^{13}}{92} \\right\\rfloor=\\left\\lfloor \\frac{8192}{92} \\right\\rfloor.\n$$\nSince $92\\cdot 89=8188$ and $92\\cdot 90=8280>8192$, we obtain\n$$\nM\\leq 89.\n$$\nThus, the theoretical maximum integer number of distinct codewords, by the Hamming bound, is $89$.", "answer": "$$\\boxed{89}$$", "id": "1627624"}, {"introduction": "The Hamming bound is fundamentally a statement about geometry in a discrete space, often called the \"sphere-packing\" bound. This exercise makes that analogy tangible by having you calculate the portion of the total coding space that is left \"uncovered\" by a given code's error-correction spheres. This practice offers a direct way to visualize a code's packing efficiency and reinforces the geometric intuition behind the bound [@problem_id:1627587].", "problem": "An experimental communication system is designed to transmit data packets as binary strings of length $n=6$. The set of valid messages, known as the codebook, consists of $M=8$ unique binary strings, which we will call codewords.\n\nThe system incorporates a simple error-correction mechanism. When a binary string of length 6 is received, the receiver decodes it to the nearest codeword, as measured by Hamming distance. The Hamming distance between two binary strings of the same length is the number of positions at which their corresponding symbols are different. The system is designed to correctly decode any received string that has resulted from at most one single-bit flip error. This means any received string with a Hamming distance of $t=1$ or less from a unique codeword can be successfully corrected.\n\nGiven this setup, not all possible $2^6$ binary strings of length 6 are classifiable as being within a Hamming distance of 1 from one of the $M=8$ codewords. Calculate the total number of binary strings of length 6 that are *not* within a Hamming distance of 1 of any of the 8 codewords in the codebook.", "solution": "The problem asks for the number of binary vectors in the space of all possible vectors of length 6 that are not 'covered' by the error-correction capability of a given code.\n\nFirst, let's determine the size of the total space of possible received vectors. The vectors are binary strings of length $n=6$. Each of the 6 positions in a string can be either a 0 or a 1. Therefore, the total number of distinct binary strings is $2^n = 2^6$.\n$$|\\text{Total Space}| = 2^6 = 64$$\n\nNext, let's consider the set of vectors that *can* be corrected to a single, specific codeword. The problem states that the system can correct a received string if its Hamming distance from a unique codeword is at most $t=1$. For a single codeword $c$, the set of vectors that can be decoded to it includes the codeword itself (Hamming distance 0) and all vectors that differ from $c$ in exactly one position (Hamming distance 1).\n\nLet us calculate the size of this set for one codeword. The number of vectors at a Hamming distance of $k$ from a given vector of length $n$ is given by the binomial coefficient $\\binom{n}{k}$.\n- The number of vectors at a Hamming distance of 0 from the codeword is $\\binom{n}{0} = \\binom{6}{0} = 1$. This corresponds to the codeword itself, received without any errors.\n- The number of vectors at a Hamming distance of 1 from the codeword is $\\binom{n}{1} = \\binom{6}{1} = 6$. These correspond to all possible single-bit flip errors of the codeword.\n\nSo, the total number of vectors that are at a distance of at most 1 from a single codeword is the sum of these two quantities:\n$$|\\text{Vectors per codeword}| = \\binom{6}{0} + \\binom{6}{1} = 1 + 6 = 7$$\n\nThe codebook contains $M=8$ distinct codewords. For the system to be able to uniquely correct any single-bit error, the sets of vectors associated with each codeword (as calculated above) must be disjoint. If these sets were to overlap, a vector in the overlapping region would have a Hamming distance of 1 or 0 from two or more codewords, making the decoding process ambiguous. The problem statement guarantees unique decodability for these vectors, so we must assume these sets are disjoint.\n\nThe total number of vectors covered by the error-correction scheme for the entire codebook is the sum of the sizes of these $M=8$ disjoint sets.\n$$|\\text{Total Covered Vectors}| = M \\times |\\text{Vectors per codeword}| = 8 \\times 7 = 56$$\n\nFinally, the question asks for the number of binary strings that are *not* covered by this scheme. We can find this by subtracting the total number of covered vectors from the total number of vectors in the space.\n$$|\\text{Uncovered Vectors}| = |\\text{Total Space}| - |\\text{Total Covered Vectors}|$$\n$$|\\text{Uncovered Vectors}| = 64 - 56 = 8$$\n\nThus, there are 8 binary strings of length 6 that are not within a Hamming distance of 1 of any of the 8 codewords.", "answer": "$$\\boxed{8}$$", "id": "1627587"}]}