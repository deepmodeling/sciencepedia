{"hands_on_practices": [{"introduction": "To begin our hands-on exploration, we will start with a foundational example in coding theory: the Hamming code. This exercise asks you to verify if a binary code with parameters $[n,k,d] = [7,4,3]$ is a perfect code by applying the sphere-packing bound. Working through this problem will provide you with a concrete understanding of how perfect codes achieve optimal efficiency, with the decoding spheres of their codewords perfectly tiling the entire space of possible received words [@problem_id:1645662].", "problem": "A new space exploration startup is designing a communication protocol for a probe that will travel through the asteroid belt. They anticipate that cosmic ray interference will cause random bit-flips in the data transmission. To combat this, they have developed a binary linear block code.\n\nIn their design, message blocks consisting of $k=4$ bits are encoded into longer codewords of length $n=7$ bits for transmission. The engineers have analyzed the code's structure and determined its minimum Hamming distance to be $d=3$.\n\nA code is defined as a \"perfect code\" if it achieves the theoretical upper limit on packing efficiency, given by the Hamming bound. For a binary code (where the alphabet size is 2) with $M$ codewords of length $n$ and an error-correction capability of $t$ errors, this condition is met with equality:\n$$M \\cdot \\sum_{i=0}^{t} \\binom{n}{i} = 2^n$$\nHere, $\\binom{n}{i}$ is the binomial coefficient, representing the number of ways to have $i$ errors in an $n$-bit word. The term $\\sum_{i=0}^{t} \\binom{n}{i}$ represents the volume of a \"Hamming sphere\" of radius $t$ centered on a single codeword. A perfect code is one where these spheres, one for each codeword, completely fill the space of all possible $n$-bit words without any overlap.\n\nBased on the parameters of the startup's proposed code, which of the following statements is correct?\n\nA. Yes, the code is perfect as it satisfies the Hamming bound equality.\n\nB. No, the code is not perfect because the combined volume of the Hamming spheres is less than the total space of possible received words.\n\nC. No, the code is not perfect because the combined volume of the Hamming spheres would need to be greater than the total space of possible received words, which is impossible.\n\nD. It is impossible to determine if the code is perfect with the given information; the code's specific generator matrix is also required.", "solution": "The problem asks us to determine if a binary linear block code with parameters $n=7$, $k=4$, and $d=3$ is a perfect code. To do this, we must check if it satisfies the Hamming bound with equality.\n\nThe Hamming bound for a binary code is given by the equation:\n$$M \\cdot \\sum_{i=0}^{t} \\binom{n}{i} = 2^n$$\n\nWe need to determine the values of $M$ (the number of codewords) and $t$ (the error-correction capability) from the given parameters.\n\nFirst, let's find the number of codewords, $M$. The code encodes message blocks of length $k=4$ into codewords. Since the code is binary, there are $2^k$ possible unique messages. For a linear code, each unique message corresponds to a unique codeword.\n$$M = 2^k = 2^4 = 16$$\nSo, there are 16 codewords in this code.\n\nNext, let's find the error-correction capability, $t$. The maximum number of errors a code can correct is related to its minimum distance, $d$, by the formula:\n$$t = \\left\\lfloor \\frac{d-1}{2} \\right\\rfloor$$\nSubstituting the given minimum distance $d=3$:\n$$t = \\left\\lfloor \\frac{3-1}{2} \\right\\rfloor = \\left\\lfloor \\frac{2}{2} \\right\\rfloor = \\lfloor 1 \\rfloor = 1$$\nThis means the code is capable of correcting any single-bit error.\n\nNow we have all the necessary components to test the Hamming bound: $n=7$, $M=16$, and $t=1$. We will evaluate the left-hand side (LHS) and the right-hand side (RHS) of the bound equation separately.\n\nThe RHS is the total number of possible words of length $n=7$:\n$$RHS = 2^n = 2^7 = 128$$\n\nThe LHS is the product of the number of codewords and the volume of a Hamming sphere of radius $t=1$:\n$$LHS = M \\cdot \\sum_{i=0}^{1} \\binom{n}{i} = 16 \\cdot \\left( \\binom{7}{0} + \\binom{7}{1} \\right)$$\nWe calculate the binomial coefficients:\n$\\binom{7}{0} = 1$ (This represents the case of zero errors, i.e., the codeword itself).\n$\\binom{7}{1} = \\frac{7!}{1!(7-1)!} = 7$ (This represents all possible single-bit errors).\n\nSubstitute these values back into the expression for the LHS:\n$$LHS = 16 \\cdot (1 + 7) = 16 \\cdot 8 = 128$$\n\nNow we compare the LHS and RHS:\n$$LHS = 128$$\n$$RHS = 128$$\nSince $LHS = RHS$, the Hamming bound is met with equality. This means the code is a perfect code. The 16 \"spheres\" of radius 1, each containing 8 unique 7-bit words (the codeword plus its 7 single-error neighbors), perfectly tile the entire space of 128 possible 7-bit words.\n\nLet's evaluate the given options:\nA. Yes, the code is perfect as it satisfies the Hamming bound equality. This aligns with our calculation.\nB. This option suggests $LHS < RHS$, which is false.\nC. This option suggests $LHS > RHS$, which is false.\nD. This option is incorrect because the parameters $[n, k, d]$ are sufficient to check the Hamming bound. The specific construction of the code (i.e., its generator or parity-check matrix) is not necessary for this verification.\n\nTherefore, the correct statement is A.", "answer": "$$\\boxed{A}$$", "id": "1645662"}, {"introduction": "Having confirmed the properties of a basic perfect code, let's now apply our knowledge to a more advanced, non-trivial case: the famous binary Golay code. Given a codeword length of $n=23$ and an error-correcting capability of $t=3$, your task is to determine the information capacity, $k$, of this code. This practice shifts from simple verification to a design-oriented calculation, demonstrating how the sphere-packing bound is used to determine the fundamental parameters and trade-offs of powerful error-correcting codes [@problem_id:1645648].", "problem": "In the field of telecommunications, designers strive to create error-correcting codes that are as efficient as possible. A special class of these are known as \"perfect codes,\" which achieve the theoretical upper limit of data density for a given error-correction capability.\n\nConsider the design of a communication system for a deep-space probe that uses a binary block code. Each transmitted codeword has a fixed total length of $n=23$ bits. The code has been specifically constructed to be a perfect code. Its design specification guarantees that it can detect and correct any pattern of up to $t=3$ bit-flips that might occur in a single block during transmission.\n\nYour task is to determine the number of information bits, denoted by $k$, that can be encoded in each 23-bit block.", "solution": "To determine the number of information bits $k$, we use the condition for a perfect code: it must satisfy the Hamming (sphere-packing) bound with equality. The general bound for a linear $q$-ary code is:\n$$\nq^{k} \\sum_{i=0}^{t} \\binom{n}{i} (q-1)^{i} \\leq q^{n}.\n$$\nFor a perfect binary code ($q=2$), this bound becomes an equality:\n$$\n2^{k} \\sum_{i=0}^{t} \\binom{n}{i} = 2^{n}.\n$$\nThis equation can be rearranged as:\n$$\n\\sum_{i=0}^{t} \\binom{n}{i} = 2^{n-k}.\n$$\nWith $n=23$ and $t=3$,\n$$\n\\sum_{i=0}^{3} \\binom{23}{i} = \\binom{23}{0} + \\binom{23}{1} + \\binom{23}{2} + \\binom{23}{3}.\n$$\nCompute each term:\n$$\n\\binom{23}{0}=1,\\quad \\binom{23}{1}=23,\\quad \\binom{23}{2}=\\frac{23\\cdot 22}{2}=253,\\quad \\binom{23}{3}=\\frac{23\\cdot 22\\cdot 21}{3\\cdot 2\\cdot 1}=1771.\n$$\nThus,\n$$\n\\sum_{i=0}^{3} \\binom{23}{i} = 1+23+253+1771 = 2048 = 2^{11}.\n$$\nFrom $2^{n-k} = 2^{11}$, we obtain $n-k=11$, hence\n$$\nk = n-11 = 23-11 = 12.\n$$", "answer": "$$\\boxed{12}$$", "id": "1645648"}, {"introduction": "A crucial aspect of studying perfect codes is understanding not only what they are, but also why they are so rare. This final exercise provides a practical application of the sphere-packing bound as a tool for proving non-existence. You will investigate a hypothetical code with length $n=10$ and minimum distance $d=5$ and show why it cannot be perfect, illustrating how this fundamental bound serves as a quick and powerful filter to rule out impossible code constructions in the search for efficient communication schemes [@problem_id:1645700].", "problem": "In digital communications, error-correcting codes are used to ensure reliable data transmission. A *binary code* is a collection of binary strings of a fixed length, called *codewords*. The *length* of the code, denoted by $n$, is the number of bits in each codeword. The *Hamming distance* between two codewords is the number of bit positions in which they differ. The *minimum distance* of a code, denoted by $d$, is the smallest Hamming distance between any pair of distinct codewords.\n\nA code with minimum distance $d$ can uniquely correct any transmission that results in up to $t = \\lfloor (d-1)/2 \\rfloor$ bit errors. The set of all binary strings that are at a Hamming distance of $t$ or less from a specific codeword is called the *decoding sphere* for that codeword.\n\nA code is considered *perfect* if the decoding spheres of all its codewords partition the entire space of $2^n$ possible binary strings without any overlap or gaps. This implies that for a perfect code to exist, the size of a single decoding sphere must be a divisor of $2^n$.\n\nConsider a hypothetical perfect binary code with a length of $n=10$ and a minimum distance of $d=5$. Calculate the size of a single decoding sphere for this hypothetical code.", "solution": "The error-correction capability for a code with minimum distance $d$ is $t=\\lfloor (d-1)/2 \\rfloor$. With $d=5$, this gives $t=\\lfloor (5-1)/2 \\rfloor=\\lfloor 2 \\rfloor=2$.\n\nFor a binary code of length $n$, the size of a decoding sphere of radius $t$ around any codeword equals the number of binary strings at Hamming distance at most $t$ from that codeword. This is the sum over Hamming weights $i=0$ to $t$:\n$$\nS(n,t)=\\sum_{i=0}^{t} \\binom{n}{i}.\n$$\nSubstituting $n=10$ and $t=2$ yields\n$$\nS(10,2)=\\binom{10}{0}+\\binom{10}{1}+\\binom{10}{2}=1+10+45=56.\n$$\nThus, the size of a single decoding sphere is $56$. Although a perfect code would require $S(10,2)$ to divide $2^{10}$, the question only asks for the sphere size, which is $56$.", "answer": "$$\\boxed{56}$$", "id": "1645700"}]}