{"hands_on_practices": [{"introduction": "The best way to appreciate the unique strengths of geometric integrators is to see them in action on a system whose behavior we know perfectly. This practice pits a simple symplectic method against a standard explicit method on a classic problem: the harmonic oscillator. By implementing both and tracking key metrics like energy and phase, you will gain an intuitive, practical understanding of why preserving the underlying geometry of a system is crucial for accurate long-term simulations [@problem_id:3235506].", "problem": "Consider the conservative harmonic oscillator governed by the second-order Ordinary Differential Equation (ODE) $q''(t) + q(t) = 0$ with unit angular frequency. Introduce the canonical momentum $p(t) = q'(t)$ to obtain the first-order system $q'(t) = p(t)$ and $p'(t) = -q(t)$, which defines a Hamiltonian system with Hamiltonian $H(q,p) = \\frac{1}{2} q^2 + \\frac{1}{2} p^2$. The exact solution rotates the state $(q(t),p(t))$ on circles of radius $\\sqrt{q^2 + p^2}$ at angular speed $1$ in radians per second. Your task is to implement two numerical integrators for this system, compare their phase accuracy, and assess their energy behavior.\n\nYou must implement:\n- The Explicit Trapezoidal (Heun) Method, which is a two-stage Runge–Kutta method of order $2$ formed by averaging slopes over a predictor and corrector step.\n- The Symplectic Euler Method (kick–drift variant), which updates momentum using the potential gradient and then updates position using the new momentum, preserving the canonical symplectic two-form.\n\nFor each test case, perform the following steps:\n1. Convert the second-order ODE to the first-order system $q'(t) = p(t)$ and $p'(t) = -q(t)$.\n2. Integrate from initial conditions $(q(0),p(0)) = (q_0,p_0)$ using both methods with uniform step size $h$ for $N = \\mathrm{round}(T/h)$ steps, where $T$ is the intended total time. Let $T_{\\text{eff}} = N h$ denote the effective integrated time.\n3. Compute the exact phase at $t = T_{\\text{eff}}$ as $\\phi_{\\text{exact}} = \\phi_0 - T_{\\text{eff}}$, where $\\phi_0 = \\mathrm{atan2}(p_0,q_0)$. Use the two-argument arctangent function to define phase, and express angles in radians.\n4. For each method, compute the numerical phase $\\phi_{\\text{num}} = \\mathrm{atan2}(p_N,q_N)$ at the final state $(q_N,p_N)$. Define the signed minimal angle difference $\\Delta \\phi = \\phi_{\\text{num}} - \\phi_{\\text{exact}}$ wrapped into the interval $[-\\pi,\\pi]$ and report the absolute value $|\\Delta \\phi|$ as the phase error, in radians.\n5. Compute the amplitude ratio $\\rho = \\frac{\\sqrt{q_N^2 + p_N^2}}{\\sqrt{q_0^2 + p_0^2}}$ to evaluate deviation from the exact circular motion.\n6. Produce a boolean flag for each test case indicating whether the Heun method exhibits a strictly larger absolute phase error than the Symplectic Euler method.\n\nAngle units must be in radians. Time $T$ and step size $h$ must be treated in seconds, with angular frequency equal to $1$ radian per second. All floating-point outputs must be rounded to $6$ decimal places.\n\nTest suite:\n- Case $1$: $(q_0,p_0) = (1.0,0.0)$, $h = 0.2$ s, $T = 40\\pi$ s.\n- Case $2$: $(q_0,p_0) = (1.0,0.0)$, $h = 0.9$ s, $T = 40\\pi$ s.\n- Case $3$: $(q_0,p_0) = (0.7,0.3)$, $h = 0.05$ s, $T = 80\\pi$ s.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with one inner list per test case. Each inner list must have the form\n$[\\text{phase\\_error\\_Heun}, \\text{phase\\_error\\_SymplecticEuler}, \\text{amplitude\\_ratio\\_Heun}, \\text{amplitude\\_ratio\\_SymplecticEuler}, \\text{Heun\\_phase\\_worse}]$,\nwhere the first four entries are floats rounded to $6$ decimals and the last is a boolean. For example, the output format must look like $[[a_1,b_1,c_1,d_1,e_1],[a_2,b_2,c_2,d_2,e_2],[a_3,b_3,c_3,d_3,e_3]]$.", "solution": "The problem statement has been analyzed and is deemed valid. It is scientifically grounded, well-posed, objective, and contains all necessary information to proceed with a solution.\n\nThe problem investigates the numerical integration of a simple harmonic oscillator, a fundamental model in physics. The governing second-order Ordinary Differential Equation (ODE) is:\n$$\nq''(t) + q(t) = 0\n$$\nIntroducing the canonical momentum $p(t) = q'(t)$, we obtain the equivalent first-order Hamiltonian system:\n$$\n\\begin{cases}\nq'(t) = p(t) \\\\\np'(t) = -q(t)\n\\end{cases}\n$$\nThis system can be written in vector form as $\\mathbf{y}'(t) = f(\\mathbf{y}(t))$, where $\\mathbf{y} = [q, p]^T$ and $f(\\mathbf{y}) = [p, -q]^T$. The system's Hamiltonian, $H(q,p) = \\frac{1}{2}q^2 + \\frac{1}{2}p^2$, is a conserved quantity representing the total energy. The exact solution trajectories are circles in the $(q,p)$ phase space, corresponding to constant energy.\n\nWe will implement and compare two numerical methods to approximate the solution of this system.\n\n### The Explicit Trapezoidal (Heun) Method\nHeun's method is a second-order Runge-Kutta method. It is an explicit, two-stage predictor-corrector method. Given the state $\\mathbf{y}_n = [q_n, p_n]^T$ at time $t_n$, the state at $t_{n+1} = t_n + h$ is found by:\n1. Predictor step: $\\mathbf{k}_1 = f(\\mathbf{y}_n) = [p_n, -q_n]^T$. A preliminary state $\\mathbf{y}^*$ is estimated using the Forward Euler method: $\\mathbf{y}^* = \\mathbf{y}_n + h \\mathbf{k}_1$.\n2. Corrector step: Evaluate the slope at the predicted state: $\\mathbf{k}_2 = f(\\mathbf{y}^*) = f(\\mathbf{y}_n + h \\mathbf{k}_1)$.\n3. Update: Average the two slopes to update the state: $\\mathbf{y}_{n+1} = \\mathbf{y}_n + \\frac{h}{2}(\\mathbf{k}_1 + \\mathbf{k}_2)$.\n\nFor our specific system:\n$\\mathbf{k}_1 = [p_n, -q_n]^T$.\n$\\mathbf{y}^* = [q_n + h p_n, p_n - h q_n]^T$.\n$\\mathbf{k}_2 = [p_n - h q_n, -(q_n + h p_n)]^T$.\nThe update equations are:\n$$\nq_{n+1} = q_n + \\frac{h}{2}(p_n + (p_n - h q_n)) = (1 - \\frac{h^2}{2})q_n + h p_n\n$$\n$$\np_{n+1} = p_n + \\frac{h}{2}(-q_n - (q_n + h p_n)) = -h q_n + (1 - \\frac{h^2}{2})p_n\n$$\nIn matrix form, the update is $\\mathbf{y}_{n+1} = M_H \\mathbf{y}_n$, where the amplification matrix $M_H$ is:\n$$\nM_H = \\begin{pmatrix} 1 - \\frac{h^2}{2} & h \\\\ -h & 1 - \\frac{h^2}{2} \\end{pmatrix}\n$$\nThe determinant of this matrix is $\\det(M_H) = (1 - \\frac{h^2}{2})^2 + h^2 = 1 + \\frac{h^4}{4}$. Since $\\det(M_H) > 1$, the method is not symplectic. The area of phase space elements is not preserved, and for this system, the numerical energy (and amplitude) will systematically increase over time.\n\n### The Symplectic Euler Method (Kick-Drift)\nSymplectic integrators are designed to preserve the canonical symplectic two-form of Hamiltonian systems, which leads to superior long-term stability, particularly in energy conservation. The specified kick-drift variant is a first-order semi-implicit method. It updates the momentum first (kick), then uses the new momentum to update the position (drift).\nFor a separable Hamiltonian $H(q,p) = T(p) + V(q)$, the updates are:\n1. Kick: $p_{n+1} = p_n - h V'(q_n)$.\n2. Drift: $q_{n+1} = q_n + h T'(p_{n+1})$.\n\nFor our system, $V(q) = \\frac{1}{2}q^2 \\implies V'(q)=q$ and $T(p) = \\frac{1}{2}p^2 \\implies T'(p)=p$. The update equations are:\n$$\np_{n+1} = p_n - h q_n\n$$\n$$\nq_{n+1} = q_n + h p_{n+1} = q_n + h (p_n - h q_n) = (1 - h^2)q_n + h p_n\n$$\nIn matrix form, $\\mathbf{y}_{n+1} = M_{SE} \\mathbf{y}_n$, with the amplification matrix $M_{SE}$:\n$$\nM_{SE} = \\begin{pmatrix} 1 - h^2 & h \\\\ -h & 1 \\end{pmatrix}\n$$\nThe determinant is $\\det(M_{SE}) = (1 - h^2)(1) - (h)(-h) = 1$. The method is symplectic. It does not conserve the exact Hamiltonian $H$, but it exactly conserves a nearby \"shadow\" Hamiltonian. As a result, the numerical energy error remains bounded over long integration times.\n\n### Analysis and Computational Procedure\nFor each test case with initial conditions $(q_0, p_0)$, step size $h$, and total time $T$, we perform the following:\n1. Calculate the number of steps $N = \\mathrm{round}(T/h)$ and the effective integration time $T_{\\text{eff}} = N h$.\n2. For both methods, iterate the respective matrix update $N$ times to find the final state $(q_N, p_N)$.\n3. The initial radius is $R_0 = \\sqrt{q_0^2 + p_0^2}$. The final radius is $R_N = \\sqrt{q_N^2 + p_N^2}$. The amplitude ratio is $\\rho = R_N / R_0$. This ratio measures the numerical energy dissipation or growth, as $H = \\frac{1}{2}R^2$.\n4. The initial phase is $\\phi_0 = \\mathrm{atan2}(p_0, q_0)$. The exact solution has a phase that evolves as $\\phi(t) = \\phi_0 - t$. Thus, the exact final phase is $\\phi_{\\text{exact}} = \\phi_0 - T_{\\text{eff}}$.\n5. The numerical final phase is $\\phi_{\\text{num}} = \\mathrm{atan2}(p_N, q_N)$.\n6. The phase error is the minimal angle difference $\\Delta\\phi = \\phi_{\\text{num}} - \\phi_{\\text{exact}}$. This is wrapped into the interval $[-\\pi, \\pi]$ using $((\\Delta\\phi + \\pi) \\pmod{2\\pi}) - \\pi$. We report the absolute value $|\\Delta\\phi|$.\n7. We compare the absolute phase errors to determine if the Heun method's error is strictly greater than the Symplectic Euler's.\n\nThis process allows for a direct comparison of a standard Runge-Kutta method against a geometric integrator, highlighting the latter's advantages for long-term simulations of conservative systems.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the harmonic oscillator problem using Heun's and Symplectic Euler\n    methods and compares their phase accuracy and amplitude stability.\n    \"\"\"\n\n    # Test suite with initial conditions, step size, and total time.\n    # (q0, p0), h, T\n    test_cases = [\n        ((1.0, 0.0), 0.2, 40 * np.pi),  # Case 1\n        ((1.0, 0.0), 0.9, 40 * np.pi),  # Case 2\n        ((0.7, 0.3), 0.05, 80 * np.pi), # Case 3\n    ]\n\n    all_results = []\n\n    for case in test_cases:\n        (q0, p0), h, T = case\n        \n        y0 = np.array([q0, p0])\n\n        # 1. Calculate integration parameters\n        N = int(np.round(T / h))\n        T_eff = N * h\n\n        # 2. Define update matrices for the methods\n        # Heun's method matrix\n        M_H = np.array([\n            [1 - 0.5 * h**2, h],\n            [-h, 1 - 0.5 * h**2]\n        ])\n\n        # Symplectic Euler (kick-drift) matrix\n        M_SE = np.array([\n            [1 - h**2, h],\n            [-h, 1]\n        ])\n\n        # 3. Integrate using both methods\n        y_heun = y0.copy()\n        for _ in range(N):\n            y_heun = M_H @ y_heun\n        \n        y_se = y0.copy()\n        for _ in range(N):\n            y_se = M_SE @ y_se\n        \n        qN_heun, pN_heun = y_heun\n        qN_se, pN_se = y_se\n\n        # 4. Compute exact quantities and initial values\n        phi0 = np.arctan2(p0, q0)\n        phi_exact = phi0 - T_eff\n        r0 = np.linalg.norm(y0)\n        # Handle the case of (0,0) initial condition to avoid division by zero\n        if r0 == 0:\n            r0 = 1.0\n\n        # Create a helper function for calculating metrics\n        def calculate_metrics(qN, pN):\n            # Compute numerical phase\n            phi_num = np.arctan2(pN, qN)\n            \n            # Compute and wrap phase error\n            delta_phi = phi_num - phi_exact\n            wrapped_delta_phi = (delta_phi + np.pi) % (2 * np.pi) - np.pi\n            phase_error = np.abs(wrapped_delta_phi)\n            \n            # Compute amplitude ratio\n            rN = np.linalg.norm(np.array([qN, pN]))\n            amplitude_ratio = rN / r0\n            \n            return phase_error, amplitude_ratio\n\n        # 5. Calculate metrics for each method\n        phase_error_heun, amp_ratio_heun = calculate_metrics(qN_heun, pN_heun)\n        phase_error_se, amp_ratio_se = calculate_metrics(qN_se, pN_se)\n        \n        # 6. Compare phase errors\n        heun_phase_worse = phase_error_heun > phase_error_se\n        \n        # 7. Collect and format results for the current test case\n        case_results = [\n            phase_error_heun,\n            phase_error_se,\n            amp_ratio_heun,\n            amp_ratio_se,\n            heun_phase_worse,\n        ]\n        all_results.append(case_results)\n\n    # 8. Format the final output string exactly as required\n    results_str_list = []\n    for res in all_results:\n        s = (f\"[{res[0]:.6f},{res[1]:.6f},\"\n             f\"{res[2]:.6f},{res[3]:.6f},\"\n             f\"{res[4]}]\")\n        results_str_list.append(s)\n    \n    final_output = f\"[{','.join(results_str_list)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "3235506"}, {"introduction": "The previous practice likely demonstrated the superior long-term phase accuracy of the Symplectic Euler method. This exercise provides the mathematical foundation to understand and quantify that observation. By analyzing the \"numerical frequency\" of both the Symplectic Euler and the classical fourth-order Runge-Kutta (RK4) methods, you will derive exactly how their respective phase errors scale with the step size $h$, revealing the hidden strengths of geometric integration for oscillatory systems [@problem_id:3235367].", "problem": "Consider the Hamiltonian simple harmonic oscillator with Hamiltonian $H(q,p) = \\tfrac{1}{2} p^{2} + \\tfrac{1}{2} \\omega^{2} q^{2}$, so that Hamilton’s equations give the linear ordinary differential equation (ODE) system $q' = p$, $p' = -\\omega^{2} q$, equivalently $y' = A y$ with $y = (q,p)^{\\mathsf{T}}$ and $A = \\begin{pmatrix} 0 & 1 \\\\ -\\omega^{2} & 0 \\end{pmatrix}$. For a one-step method with step size $h$, define the numerical frequency $\\Omega_{\\text{num}}$ as follows: if the one-step update is $y_{n+1} = M y_{n}$ and the eigenvalues of $M$ are $\\lambda_{\\pm} = \\rho \\exp(\\pm i \\theta)$ with $\\rho > 0$ and $\\theta \\in \\mathbb{R}$ (for sufficiently small $h$), then the rotation angle per step is $\\theta$ (in radians), and the numerical frequency is $\\Omega_{\\text{num}} = \\theta / h$.\n\nYou will analyze the leading-order phase error (error in frequency) $\\Delta \\Omega = \\Omega_{\\text{num}} - \\omega$ as $h \\to 0$ for the following two methods applied with fixed step size $h$ to the oscillator:\n\n- Symplectic Euler (semi-implicit, kick-then-drift): $p_{n+1} = p_{n} - h \\,\\omega^{2} q_{n}$, $q_{n+1} = q_{n} + h\\, p_{n+1}$. Assume $0 < \\omega h < 2$ so that the update is a rotation.\n\n- Classical Runge–Kutta method of order four (RK4): for $y' = f(y)$ with step size $h$, the method is given by\n$k_{1} = f(y_{n})$, \n$k_{2} = f(y_{n} + \\tfrac{h}{2} k_{1})$, \n$k_{3} = f(y_{n} + \\tfrac{h}{2} k_{2})$, \n$k_{4} = f(y_{n} + h k_{3})$, \n$y_{n+1} = y_{n} + \\tfrac{h}{6} (k_{1} + 2 k_{2} + 2 k_{3} + k_{4})$.\nApply this with $f(y) = A y$.\n\nStarting from these definitions and the linear algebra of $A$, derive, to leading nonzero order in $h$, the asymptotic expressions of the phase errors $\\Delta \\Omega_{\\text{SE}}$ and $\\Delta \\Omega_{\\text{RK4}}$ as functions of $\\omega$ and $h$, valid for small $h$.\n\nExpress your final answer as a single row matrix containing the two expressions in the order $\\bigl[\\Delta \\Omega_{\\text{SE}}, \\Delta \\Omega_{\\text{RK4}}\\bigr]$. Use radians for angles. Do not include units. No rounding is required; give exact symbolic coefficients.", "solution": "The problem asks for the leading-order phase error $\\Delta \\Omega = \\Omega_{\\text{num}} - \\omega$ for two numerical methods applied to the simple harmonic oscillator system $y' = Ay$, where $y = (q,p)^{\\mathsf{T}}$ and $A = \\begin{pmatrix} 0 & 1 \\\\ -\\omega^{2} & 0 \\end{pmatrix}$. The numerical frequency $\\Omega_{\\text{num}}$ is defined as $\\theta/h$, where $\\theta$ is the rotation angle per step from the eigenvalues $\\rho \\exp(\\pm i\\theta)$ of the one-step update matrix $M$.\n\nThe eigenvalues of the matrix $A$ are the solutions to $\\lambda^2 + \\omega^2 = 0$, which are $\\lambda_{\\pm} = \\pm i\\omega$. The exact flow for a step size $h$ is given by the matrix exponential $\\exp(hA)$. Its eigenvalues are $\\exp(\\pm i\\omega h)$. This corresponds to an exact rotation angle $\\theta_{\\text{exact}} = \\omega h$ and frequency $\\Omega_{\\text{exact}} = \\omega$.\n\n### Analysis of Symplectic Euler (SE)\n\nThe Symplectic Euler method as defined is:\n$p_{n+1} = p_{n} - h \\omega^{2} q_{n}$\n$q_{n+1} = q_{n} + h p_{n+1}$\n\nSubstituting the first equation into the second gives the explicit update rule for $y_{n} = (q_n, p_n)^{\\mathsf{T}}$:\n$q_{n+1} = q_{n} + h (p_n - h \\omega^2 q_n) = (1 - \\omega^2 h^2) q_n + h p_n$\n$p_{n+1} = -h \\omega^2 q_n + p_n$\n\nThis can be written in matrix form $y_{n+1} = M_{\\text{SE}} y_n$, where the update matrix $M_{\\text{SE}}$ is:\n$$\nM_{\\text{SE}} = \\begin{pmatrix} 1 - \\omega^{2}h^{2} & h \\\\ -h\\omega^{2} & 1 \\end{pmatrix}\n$$\nThe eigenvalues $\\lambda$ of $M_{\\text{SE}}$ are given by the characteristic equation $\\det(M_{\\text{SE}} - \\lambda I) = 0$.\nThe trace of $M_{\\text{SE}}$ is $\\text{tr}(M_{\\text{SE}}) = 2 - \\omega^2 h^2$.\nThe determinant is $\\det(M_{\\text{SE}}) = (1 - \\omega^2 h^2)(1) - (h)(-h\\omega^2) = 1$.\nThe characteristic equation is $\\lambda^2 - \\text{tr}(M_{\\text{SE}})\\lambda + \\det(M_{\\text{SE}}) = 0$, which is:\n$$\n\\lambda^{2} - (2 - \\omega^{2}h^{2})\\lambda + 1 = 0\n$$\nThe discriminant is $D = (2 - \\omega^2 h^2)^2 - 4 = 4 - 4\\omega^2 h^2 + \\omega^4 h^4 - 4 = \\omega^2 h^2(\\omega^2 h^2 - 4)$.\nThe condition $0 < \\omega h < 2$ implies $D < 0$, so the eigenvalues are a complex conjugate pair on the unit circle (since $\\det(M_{\\text{SE}})=1$). Let the eigenvalues be $\\lambda_{\\pm} = \\exp(\\pm i \\theta_{\\text{SE}})$.\nThe sum of the eigenvalues is $\\lambda_+ + \\lambda_- = 2\\cos(\\theta_{\\text{SE}})$, which must equal the trace of $M_{\\text{SE}}$.\n$$\n2\\cos(\\theta_{\\text{SE}}) = 2 - \\omega^{2}h^{2} \\implies \\cos(\\theta_{\\text{SE}}) = 1 - \\frac{\\omega^{2}h^{2}}{2}\n$$\nThe numerical frequency is $\\Omega_{\\text{SE}} = \\theta_{\\text{SE}}/h$. We need to solve for $\\theta_{\\text{SE}}$ and expand for small $h$.\n$\\theta_{\\text{SE}} = \\arccos\\left(1 - \\frac{\\omega^{2}h^{2}}{2}\\right)$.\nLet $x = \\frac{\\omega^2 h^2}{2}$. For small $h$, $x$ is small. We use the Taylor series expansion of $\\arccos(1-x)$ for small $x>0$:\n$\\arccos(1-x) = \\sqrt{2x} + \\frac{1}{6\\sqrt{2}}x^{3/2} + O(x^{5/2})$.\nSubstituting $x = \\frac{\\omega^2 h^2}{2}$:\n$$\n\\theta_{\\text{SE}} = \\sqrt{2 \\cdot \\frac{\\omega^{2}h^{2}}{2}} + \\frac{1}{6\\sqrt{2}}\\left(\\frac{\\omega^{2}h^{2}}{2}\\right)^{3/2} + O(h^5)\n$$\n$$\n\\theta_{\\text{SE}} = \\omega h + \\frac{1}{6\\sqrt{2}} \\frac{\\omega^{3}h^{3}}{2\\sqrt{2}} + O(h^5) = \\omega h + \\frac{\\omega^{3}h^{3}}{24} + O(h^5)\n$$\nThe numerical frequency is:\n$$\n\\Omega_{\\text{SE}} = \\frac{\\theta_{\\text{SE}}}{h} = \\omega + \\frac{\\omega^{3}h^{2}}{24} + O(h^4)\n$$\nThe leading-order phase error for Symplectic Euler is:\n$$\n\\Delta \\Omega_{\\text{SE}} = \\Omega_{\\text{SE}} - \\omega = \\frac{\\omega^{3}h^{2}}{24}\n$$\n\n### Analysis of Classical Runge-Kutta (RK4)\n\nFor a linear ODE $y' = Ay$, the RK4 method gives a linear update $y_{n+1} = M_{\\text{RK4}}y_n$. The matrix $M_{\\text{RK4}}$ is a polynomial in $hA$:\n$$\nM_{\\text{RK4}} = I + hA + \\frac{(hA)^2}{2!} + \\frac{(hA)^3}{3!} + \\frac{(hA)^4}{4!}\n$$\nThe eigenvalues $\\lambda_{\\text{RK4}}$ of $M_{\\text{RK4}}$ are found by applying the same polynomial to the eigenvalues $\\pm i\\omega$ of $A$. Let $z=\\omega h$.\n$$\n\\lambda_{\\text{RK4}, \\pm} = 1 + (\\pm i\\omega h) + \\frac{(\\pm i\\omega h)^2}{2} + \\frac{(\\pm i\\omega h)^3}{6} + \\frac{(\\pm i\\omega h)^4}{24}\n$$\n$$\n\\lambda_{\\text{RK4}, \\pm} = 1 \\pm i(\\omega h) - \\frac{(\\omega h)^2}{2} \\mp i\\frac{(\\omega h)^3}{6} + \\frac{(\\omega h)^4}{24}\n$$\n$$\n\\lambda_{\\text{RK4}, \\pm} = \\left(1 - \\frac{z^2}{2} + \\frac{z^4}{24}\\right) \\pm i\\left(z - \\frac{z^3}{6}\\right)\n$$\nThe eigenvalues are of the form $\\rho \\exp(\\pm i\\theta_{\\text{RK4}})$. The angle $\\theta_{\\text{RK4}}$ is given by the argument of the complex number $\\lambda_{\\text{RK4},+}$.\n$$\n\\theta_{\\text{RK4}} = \\arg(\\lambda_{\\text{RK4},+}) = \\arctan\\left(\\frac{\\text{Im}(\\lambda_{\\text{RK4},+})}{\\text{Re}(\\lambda_{\\text{RK4},+})}\\right) = \\arctan\\left(\\frac{z - z^3/6}{1 - z^2/2 + z^4/24}\\right)\n$$\nTo find the leading-order error, we expand this expression for small $z = \\omega h$. Let the argument of the arctan function be $X$.\n$$\nX = \\frac{z(1-z^2/6)}{1-z^2/2+z^4/24}\n$$\nWe expand $X$ as a Taylor series in $z$:\n$X = z\\left(1-\\frac{z^2}{6}\\right)\\left(1 - \\left(\\frac{z^2}{2}-\\frac{z^4}{24}\\right)\\right)^{-1}$\n$ = z\\left(1-\\frac{z^2}{6}\\right)\\left(1 + \\left(\\frac{z^2}{2}-\\frac{z^4}{24}\\right) + \\left(\\frac{z^2}{2}\\right)^2 + O(z^6)\\right)$\n$ = z\\left(1-\\frac{z^2}{6}\\right)\\left(1 + \\frac{z^2}{2} + \\frac{5z^4}{24} + O(z^6)\\right)$\n$ = z\\left(1 + \\frac{z^2}{2} + \\frac{5z^4}{24} - \\frac{z^2}{6} - \\frac{z^4}{12} + O(z^6)\\right)$\n$ = z\\left(1 + \\frac{z^2}{3} + \\frac{z^4}{8} + O(z^6)\\right) = z + \\frac{z^3}{3} + \\frac{z^5}{8} + O(z^7)$\n\nThe Taylor series for $\\tan(z)$ is $\\tan(z) = z + \\frac{z^3}{3} + \\frac{2z^5}{15} + O(z^7)$.\nThus, we can write $X$ in terms of $\\tan(z)$:\n$X = \\tan(z) + \\left(\\frac{1}{8} - \\frac{2}{15}\\right)z^5 + O(z^7) = \\tan(z) - \\frac{z^5}{120} + O(z^7)$.\n\nNow we find $\\theta_{\\text{RK4}} = \\arctan(X)$. Let $T = \\tan(z)$ and $\\epsilon = -z^5/120 + O(z^7)$.\n$\\theta_{\\text{RK4}} = \\arctan(T+\\epsilon) = \\arctan(T) + \\frac{\\epsilon}{1+T^2} + O(\\epsilon^2)$.\nSince $\\arctan(T)=\\arctan(\\tan(z)) = z$ for small $z$, and $1/(1+T^2) = 1/(1+\\tan^2(z)) = \\cos^2(z) = 1-z^2/2+O(z^4)$, we have:\n$\\theta_{\\text{RK4}} = z + \\left(-\\frac{z^5}{120} + O(z^7)\\right)(\\cos^2(z)) = z - \\frac{z^5}{120} + O(z^7)$.\nSubstituting $z=\\omega h$:\n$$\n\\theta_{\\text{RK4}} = \\omega h - \\frac{(\\omega h)^5}{120} + O(h^7)\n$$\nThe numerical frequency for RK4 is:\n$$\n\\Omega_{\\text{RK4}} = \\frac{\\theta_{\\text{RK4}}}{h} = \\omega - \\frac{\\omega^5 h^4}{120} + O(h^6)\n$$\nThe leading-order phase error for RK4 is:\n$$\n\\Delta \\Omega_{\\text{RK4}} = \\Omega_{\\text{RK4}} - \\omega = -\\frac{\\omega^5 h^4}{120}\n$$\nThe final result consists of the two derived expressions for the phase errors.\n$\\Delta \\Omega_{\\text{SE}} = \\frac{\\omega^3 h^2}{24}$\n$\\Delta \\Omega_{\\text{RK4}} = -\\frac{\\omega^5 h^4}{120}$", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{\\omega^{3}h^{2}}{24} & -\\frac{\\omega^{5}h^{4}}{120} \\end{pmatrix}}\n$$", "id": "3235367"}, {"introduction": "Simple symplectic methods like the leapfrog integrator offer excellent long-term stability but are often of a low order of accuracy. This final practice introduces a powerful and elegant technique to build high-order symplectic integrators from simpler ones through symmetric composition. By deriving the \"magic\" coefficients that combine a second-order method into a fourth-order one, you will uncover the constructive principle behind many state-of-the-art geometric integrators used in demanding applications from celestial mechanics to molecular dynamics [@problem_id:3235366].", "problem": "Consider a separable Hamiltonian system with Hamiltonian $H(q,p)=T(p)+V(q)$, where $T$ depends only on the momentum $p$ and $V$ depends only on the position $q$. Let $\\mathcal{L}_{T}$ and $\\mathcal{L}_{V}$ denote the Hamiltonian (Liouville) operators generating the exact flows of $T$ and $V$, respectively, so that the exact time-$h$ flow of $H$ is $\\exp\\!\\big(h(\\mathcal{L}_{T}+\\mathcal{L}_{V})\\big)$. The standard second-order symmetric splitting (the leapfrog, also known as velocity Verlet) is\n$$\nS_{2}(h) \\;=\\; \\exp\\!\\left(\\tfrac{h}{2}\\mathcal{L}_{T}\\right)\\,\\exp\\!\\left(h\\,\\mathcal{L}_{V}\\right)\\,\\exp\\!\\left(\\tfrac{h}{2}\\mathcal{L}_{T}\\right).\n$$\nLet $\\operatorname{BCH}$ denote the Baker–Campbell–Hausdorff formula, which expresses products of exponentials of noncommuting operators as a single exponential of a series of nested commutators. By symmetry of $S_{2}$, its local error expansion in the exponent contains only odd powers of $h$; in particular, there exists an operator $\\mathcal{E}_{3}$ that is a fixed linear combination of nested commutators of $\\mathcal{L}_{T}$ and $\\mathcal{L}_{V}$ such that\n$$\nS_{2}(h) \\;=\\; \\exp\\!\\left(h(\\mathcal{L}_{T}+\\mathcal{L}_{V}) \\;+\\; h^{3}\\,\\mathcal{E}_{3} \\;+\\; \\mathcal{O}(h^{5})\\right).\n$$\nConsider the symmetric threefold composition of $S_{2}$ with scaled steps,\n$$\nS_{4}(h) \\;=\\; S_{2}(\\gamma_{1}h)\\,S_{2}(\\gamma_{2}h)\\,S_{2}(\\gamma_{1}h),\n$$\nwhere $\\gamma_{1}$ and $\\gamma_{2}$ are real coefficients to be determined. Using only the facts above, derive the order conditions on $\\gamma_{1}$ and $\\gamma_{2}$ required for $S_{4}(h)$ to be fourth order, i.e., \n$$\nS_{4}(h) \\;=\\; \\exp\\!\\left(h(\\mathcal{L}_{T}+\\mathcal{L}_{V}) \\;+\\; \\mathcal{O}(h^{5})\\right).\n$$\nSolve these conditions to obtain exact, closed-form values for $\\gamma_{1}$ and $\\gamma_{2}$.\n\nAnswer specification:\n- Provide your final answer as the ordered composition coefficient vector $(\\gamma_{1},\\gamma_{2},\\gamma_{1})$ in exact analytic form.\n- Do not approximate or round; give exact expressions.\n- No physical units are required.", "solution": "We start from the separable Hamiltonian $H(q,p)=T(p)+V(q)$ with flows generated by the Hamiltonian (Liouville) operators $\\mathcal{L}_{T}$ and $\\mathcal{L}_{V}$, so the exact time-$h$ flow is $\\exp\\!\\big(h(\\mathcal{L}_{T}+\\mathcal{L}_{V})\\big)$. The leapfrog (velocity Verlet) scheme is the symmetric second-order splitting\n$$\nS_{2}(h) \\;=\\; \\exp\\!\\left(\\tfrac{h}{2}\\mathcal{L}_{T}\\right)\\,\\exp\\!\\left(h\\,\\mathcal{L}_{V}\\right)\\,\\exp\\!\\left(\\tfrac{h}{2}\\mathcal{L}_{T}\\right).\n$$\nBy the Baker–Campbell–Hausdorff (BCH) formula, since $S_{2}$ is symmetric, its single-exponential representation contains only odd powers of $h$ in the exponent. Consequently, one can write\n$$\nS_{2}(h) \\;=\\; \\exp\\!\\left(h(\\mathcal{L}_{T}+\\mathcal{L}_{V}) \\;+\\; h^{3}\\,\\mathcal{E}_{3} \\;+\\; \\mathcal{O}(h^{5})\\right),\n$$\nwhere $\\mathcal{E}_{3}$ is a fixed linear combination of nested commutators of $\\mathcal{L}_{T}$ and $\\mathcal{L}_{V}$ (for example, a combination of $[\\mathcal{L}_{T},[\\mathcal{L}_{T},\\mathcal{L}_{V}]]$ and $[\\mathcal{L}_{V},[\\mathcal{L}_{T},\\mathcal{L}_{V}]]$), independent of $h$.\n\nWe now consider the symmetric composition\n$$\nS_{4}(h) \\;=\\; S_{2}(\\gamma_{1}h)\\,S_{2}(\\gamma_{2}h)\\,S_{2}(\\gamma_{1}h),\n$$\nand use the BCH formula to derive the effective exponent. For each factor,\n$$\nS_{2}(\\gamma h) \\;=\\; \\exp\\!\\left(\\gamma h(\\mathcal{L}_{T}+\\mathcal{L}_{V}) \\;+\\; (\\gamma h)^{3}\\,\\mathcal{E}_{3} \\;+\\; \\mathcal{O}(h^{5})\\right).\n$$\nLet us denote $\\mathcal{X}=\\mathcal{L}_{T}+\\mathcal{L}_{V}$ and $\\mathcal{Y}=\\mathcal{E}_{3}$. Then\n$$\nS_{2}(\\gamma h) \\;=\\; \\exp\\!\\left(\\gamma h\\,\\mathcal{X} \\;+\\; \\gamma^{3} h^{3}\\,\\mathcal{Y} \\;+\\; \\mathcal{O}(h^{5})\\right).\n$$\nWe form the product\n$$\nS_{4}(h) \\;=\\; \\exp\\!\\left(\\gamma_{1} h\\,\\mathcal{X} + \\gamma_{1}^{3} h^{3}\\,\\mathcal{Y} + \\mathcal{O}(h^{5})\\right)\\,\n\\exp\\!\\left(\\gamma_{2} h\\,\\mathcal{X} + \\gamma_{2}^{3} h^{3}\\,\\mathcal{Y} + \\mathcal{O}(h^{5})\\right)\\,\n\\exp\\!\\left(\\gamma_{1} h\\,\\mathcal{X} + \\gamma_{1}^{3} h^{3}\\,\\mathcal{Y} + \\mathcal{O}(h^{5})\\right).\n$$\nApplying the BCH formula iteratively and retaining terms up to order $h^{3}$ in the final exponent, we observe the following:\n- The leading term of order $h$ in the exponent is simply the sum of the $h$-terms, because commutators of $\\mathcal{X}$ with itself vanish and commutators acting on $\\mathcal{Y}$ raise the order beyond $h^{3}$. Thus the $h$-term is\n$$\n\\big(2\\gamma_{1} + \\gamma_{2}\\big)\\,h\\,\\mathcal{X}.\n$$\n- The $h^{3}$ term in the exponent accumulates linearly from each factor as $\\big(2\\gamma_{1}^{3} + \\gamma_{2}^{3}\\big)\\,h^{3}\\,\\mathcal{Y}$, because additional commutators produced by the BCH combination either involve at least one factor of $\\mathcal{X}$ (producing $h^{4}$ and higher due to symmetry) or cancel by symmetry.\n\nTherefore, up to order $h^{3}$, the composed method has the exponent\n$$\n\\big(2\\gamma_{1} + \\gamma_{2}\\big)\\,h\\,\\mathcal{X} \\;+\\; \\big(2\\gamma_{1}^{3} + \\gamma_{2}^{3}\\big)\\,h^{3}\\,\\mathcal{Y} \\;+\\; \\mathcal{O}(h^{5}).\n$$\nFor the composition to match the exact flow $\\exp(h\\mathcal{X})$ up to and including order $h^{4}$, the order conditions are:\n- Consistency at order $h$: \n$$\n2\\gamma_{1} + \\gamma_{2} \\;=\\; 1.\n$$\n- Cancellation of the $h^{3}$ error:\n$$\n2\\gamma_{1}^{3} + \\gamma_{2}^{3} \\;=\\; 0.\n$$\n\nWe now solve the system\n$$\n2\\gamma_{1} + \\gamma_{2} \\;=\\; 1, \\qquad 2\\gamma_{1}^{3} + \\gamma_{2}^{3} \\;=\\; 0.\n$$\nExpress $\\gamma_{2}$ from the first equation as $\\gamma_{2} = 1 - 2\\gamma_{1}$ and substitute into the second:\n$$\n2\\gamma_{1}^{3} + (1 - 2\\gamma_{1})^{3} \\;=\\; 0.\n$$\nExpanding,\n$$\n2\\gamma_{1}^{3} + \\big(1 - 6\\gamma_{1} + 12\\gamma_{1}^{2} - 8\\gamma_{1}^{3}\\big) \\;=\\; 0,\n$$\nso\n$$\n1 - 6\\gamma_{1} + 12\\gamma_{1}^{2} - 6\\gamma_{1}^{3} \\;=\\; 0.\n$$\nLet $\\alpha = \\gamma_{1}$. This cubic equation can be solved by introducing $\\beta = 2^{1/3}$ and recognizing the known solution structure for symmetric composition of second-order methods. One exact real solution is\n$$\n\\gamma_{1} \\;=\\; \\frac{1}{\\,2 - 2^{1/3}\\,}.\n$$\nWith $\\gamma_{2} = 1 - 2\\gamma_{1}$ we obtain\n$$\n\\gamma_{2} \\;=\\; 1 - \\frac{2}{\\,2 - 2^{1/3}\\,} \\;=\\; -\\,\\frac{2^{1/3}}{\\,2 - 2^{1/3}\\,}.\n$$\nA direct check verifies the order conditions:\n$$\n2\\gamma_{1} + \\gamma_{2} \\;=\\; \\frac{2}{\\,2 - 2^{1/3}\\,} - \\frac{2^{1/3}}{\\,2 - 2^{1/3}\\,} \\;=\\; \\frac{2 - 2^{1/3}}{\\,2 - 2^{1/3}\\,} \\;=\\; 1,\n$$\nand\n$$\n2\\gamma_{1}^{3} + \\gamma_{2}^{3} \\;=\\; \\frac{2}{\\,(2 - 2^{1/3})^{3}\\,} + \\frac{\\big(-2^{1/3}\\big)^{3}}{\\,(2 - 2^{1/3})^{3}\\,} \\;=\\; \\frac{2 - 2}{\\,(2 - 2^{1/3})^{3}\\,} \\;=\\; 0.\n$$\nThus the symmetric composition\n$$\nS_{4}(h) \\;=\\; S_{2}\\!\\left(\\frac{h}{\\,2 - 2^{1/3}\\,}\\right)\\,S_{2}\\!\\left(-\\,\\frac{2^{1/3}h}{\\,2 - 2^{1/3}\\,}\\right)\\,S_{2}\\!\\left(\\frac{h}{\\,2 - 2^{1/3}\\,}\\right)\n$$\nis a fourth-order symplectic integrator constructed by symmetric composition of the leapfrog method, with coefficients commonly attributed to Forest–Ruth and Yoshida.\n\nThe requested ordered composition coefficient vector $(\\gamma_{1},\\gamma_{2},\\gamma_{1})$ in exact form is therefore\n$$\n\\left(\\,\\frac{1}{\\,2 - 2^{1/3}\\,},\\;\\; -\\,\\frac{2^{1/3}}{\\,2 - 2^{1/3}\\,},\\;\\; \\frac{1}{\\,2 - 2^{1/3}\\,}\\,\\right).\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\\dfrac{1}{\\,2 - 2^{1/3}\\,} & -\\,\\dfrac{2^{1/3}}{\\,2 - 2^{1/3}\\,} & \\dfrac{1}{\\,2 - 2^{1/3}\\,}\\end{pmatrix}}$$", "id": "3235366"}]}