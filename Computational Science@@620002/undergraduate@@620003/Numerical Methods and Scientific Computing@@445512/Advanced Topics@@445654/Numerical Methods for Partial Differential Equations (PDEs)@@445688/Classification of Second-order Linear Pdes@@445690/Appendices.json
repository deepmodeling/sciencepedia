{"hands_on_practices": [{"introduction": "The first step in mastering PDE classification is to apply the discriminant formula to the most straightforward case: equations with constant coefficients. This exercise focuses on a PDE where the type—elliptic, parabolic, or hyperbolic—is uniform across the entire domain but depends on a constant parameter $k$. By determining the range of $k$ that makes the equation elliptic, you will practice applying the discriminant criterion $\\Delta = B^2 - 4AC \\lt 0$ and solidify your understanding that classification depends only on the principal (second-order) part of the PDE [@problem_id:2092221].", "problem": "A second-order linear partial differential equation (PDE) with two independent variables, $x$ and $y$, can be written in the general form:\n$$A u_{xx} + B u_{xy} + C u_{yy} + D u_x + E u_y + F u = G$$\nwhere the coefficients $A, B, C, D, E, F,$ and $G$ can be functions of $x$ and $y$. The classification of the PDE as elliptic, parabolic, or hyperbolic at any given point depends on the sign of the discriminant, which is a function of the coefficients $A, B,$ and $C$.\n\nConsider the following PDE with a real constant parameter $k$:\n$$u_{xx} + k u_{xy} + 4 u_{yy} + \\sin(x) u_x - \\exp(y) u = 0$$\n\nDetermine the range of values for the constant $k$ for which this PDE is classified as elliptic for all points $(x, y)$ in the plane.\n\nA. $k  4 \\text{ or } k  -4$\n\nB. $-4  k  4$\n\nC. $k = 4 \\text{ or } k = -4$\n\nD. $k  16 \\text{ or } k  -16$\n\nE. $-16  k  16$", "solution": "For a second-order linear PDE in two variables written as $A u_{xx} + B u_{xy} + C u_{yy} + D u_{x} + E u_{y} + F u = G$, the classification depends only on the second-order coefficients $A$, $B$, and $C$. The discriminant is given by $\\Delta = B^{2} - 4 A C$. The PDE is elliptic at a point if and only if $B^{2} - 4 A C  0$, parabolic if $B^{2} - 4 A C = 0$, and hyperbolic if $B^{2} - 4 A C  0$.\n\nFor the given PDE\n$$u_{xx} + k u_{xy} + 4 u_{yy} + \\sin(x) u_{x} - \\exp(y) u = 0,$$\nwe identify the coefficients of the second-order terms as $A = 1$, $B = k$, and $C = 4$. The lower-order terms with coefficients $D = \\sin(x)$, $E = 0$, and $F = -\\exp(y)$ do not affect the classification.\n\nCompute the discriminant:\n$$\\Delta = B^{2} - 4 A C = k^{2} - 4 \\cdot 1 \\cdot 4 = k^{2} - 16.$$\nFor ellipticity, require\n$$k^{2} - 16  0 \\quad \\Longleftrightarrow \\quad -4  k  4.$$\nSince $A$, $B$, and $C$ are constants (independent of $(x,y)$), this condition ensures the PDE is elliptic for all points $(x,y)$ in the plane.\n\nMatching with the given options, this corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "2092221"}, {"introduction": "Many physical phenomena are described by PDEs whose coefficients vary in space, causing the equation's character to change from one region to another. This exercise moves beyond constant coefficients to explore such a scenario, where you must determine the specific regions in the $xy$-plane where the PDE is hyperbolic, parabolic, or elliptic [@problem_id:2159323]. By analyzing the sign of the discriminant $\\Delta(x,y)$, you will learn to map out these different domains, a crucial skill for choosing appropriate numerical methods for different parts of a complex problem.", "problem": "A general second-order linear partial differential equation (PDE) with two independent variables, $x$ and $y$, can be written in the form:\n$$A(x,y)u_{xx} + B(x,y)u_{xy} + C(x,y)u_{yy} + D(x,y)u_x + E(x,y)u_y + F(x,y)u = G(x,y)$$\nwhere $u_{xx} = \\frac{\\partial^2 u}{\\partial x^2}$, $u_{xy} = \\frac{\\partial^2 u}{\\partial x \\partial y}$, and so on. The character of the equation at a point $(x,y)$ is determined by the sign of the quantity $\\Delta(x,y) = B(x,y)^2 - 4A(x,y)C(x,y)$. The PDE is classified as:\n- **Hyperbolic** at $(x,y)$ if $\\Delta(x,y)  0$.\n- **Parabolic** at $(x,y)$ if $\\Delta(x,y) = 0$.\n- **Elliptic** at $(x,y)$ if $\\Delta(x,y)  0$.\n\nConsider the following variable-coefficient PDE:\n$$y u_{xx} + 2x u_{xy} + x^2 u_{yy} = 0$$\n\nWhich of the following statements correctly describes the regions in the $xy$-plane where this PDE is hyperbolic, parabolic, or elliptic?\n\nA. The PDE is hyperbolic for $y  1$, elliptic for $y  1$, and parabolic on the line $y = 1$ and the y-axis.\n\nB. The PDE is hyperbolic for $y  1$ and $x \\neq 0$, elliptic for $y  1$ and $x \\neq 0$, and parabolic on the line $y = 1$ and the y-axis ($x = 0$).\n\nC. The PDE is hyperbolic in the first and third quadrants, elliptic in the second and fourth quadrants, and parabolic on the coordinate axes.\n\nD. The PDE is hyperbolic for $x  0$, elliptic for $x  0$, and parabolic on the y-axis ($x=0$).\n\nE. The PDE is hyperbolic for all points $(x,y)$ not on the coordinate axes, and parabolic on the coordinate axes.", "solution": "We compare the given PDE $y u_{xx} + 2x u_{xy} + x^{2} u_{yy} = 0$ with the general second-order linear PDE $A(x,y) u_{xx} + B(x,y) u_{xy} + C(x,y) u_{yy} + \\cdots = G(x,y)$ to identify the principal coefficients. Here, $A(x,y) = y$, $B(x,y) = 2x$, and $C(x,y) = x^{2}$.\n\nThe classification is determined by the discriminant $\\Delta(x,y) = B(x,y)^{2} - 4 A(x,y) C(x,y)$. Substituting the identified coefficients gives\n$$\n\\Delta(x,y) = (2x)^{2} - 4 \\cdot y \\cdot x^{2} = 4 x^{2} - 4 y x^{2} = 4 x^{2} (1 - y).\n$$\nWe analyze the sign of $\\Delta$:\n- If $x \\neq 0$ and $y  1$, then $1 - y  0$ and hence $\\Delta  0$, so the PDE is hyperbolic.\n- If $x \\neq 0$ and $y  1$, then $1 - y  0$ and hence $\\Delta  0$, so the PDE is elliptic.\n- If $y = 1$ (for any $x$) or $x = 0$ (for any $y$), then $\\Delta = 0$, so the PDE is parabolic along the line $y = 1$ and along the $y$-axis.\n\nThis matches statement B: hyperbolic for $y  1$ with $x \\neq 0$, elliptic for $y  1$ with $x \\neq 0$, and parabolic on $y = 1$ and on $x = 0$.", "answer": "$$\\boxed{B}$$", "id": "2159323"}, {"introduction": "In modern scientific computing, a deep understanding of mathematical theory is powerful when combined with the ability to implement it algorithmically. This advanced practice bridges that gap, challenging you to first derive the classification criterion from the fundamental properties of quadratic forms in linear algebra, and then to write a program that automatically classifies and counts points across a grid [@problem_id:3213827]. Completing this exercise will not only cement your theoretical knowledge but also provide hands-on experience in the computational analysis of PDEs, a core skill in numerical methods.", "problem": "You are given the task of classifying the type of a second-order linear partial differential equation (PDE) at points in the plane for several families of coefficient functions. Consider the general second-order linear PDE in two independent variables $x$ and $y$,\n$$\nA(x,y)\\,\\frac{\\partial^2 u}{\\partial x^2} + B(x,y)\\,\\frac{\\partial^2 u}{\\partial x \\partial y} + C(x,y)\\,\\frac{\\partial^2 u}{\\partial y^2} + \\text{(lower-order terms)} = 0,\n$$\nwhere $A(x,y)$, $B(x,y)$, and $C(x,y)$ are given coefficient functions. The classification of the PDE at a point is determined entirely by the principal part, that is, the quadratic form in the second derivatives. A standard and foundational approach is to use the symmetric matrix of the principal part,\n$$\nH(x,y) = \\begin{bmatrix} A(x,y)  \\tfrac{1}{2}B(x,y) \\\\ \\tfrac{1}{2}B(x,y)  C(x,y) \\end{bmatrix}.\n$$\nUsing only this base and linear algebra facts about symmetric matrices and quadratic forms, derive a numerically robust and implementable criterion to decide, at each point $(x,y)$, whether the PDE is elliptic, parabolic, or hyperbolic. Your derivation must not assume any pre-memorized classification criterion; start from the definiteness properties of $H(x,y)$ and justify the decision rule you will implement.\n\nProgram requirements:\n- Implement a program that, for the given test suite below, evaluates $A(x,y)$, $B(x,y)$, and $C(x,y)$ on a uniform integer grid of points\n$$\n\\{(x,y)\\,:\\, x\\in \\{-10,-9,\\dots,9,10\\},\\; y\\in \\{-10,-9,\\dots,9,10\\}\\},\n$$\nand classifies each grid point as elliptic, parabolic, or hyperbolic according to your derived criterion. There are $21\\times 21 = 441$ grid points per test case.\n- For numerical robustness, when your criterion involves equality to zero, use exact integer arithmetic where applicable. The specific test suite below is designed so that $A(x,y)$, $B(x,y)$, and $C(x,y)$ are integer-valued on the prescribed integer grid; therefore, implement equality checks exactly (i.e., do not use a floating tolerance).\n- For each test case, output a list of three integers $[N_E,N_P,N_H]$ giving the counts of elliptic, parabolic, and hyperbolic classifications over the grid, in that order.\n\nTest suite (coefficient functions):\n1) Case $1$: $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=1+x^2+y^2$.\n2) Case $2$: $A(x,y)=1$, $B(x,y)=2x$, $C(x,y)=x^2$.\n3) Case $3$: $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=-1+y^2$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list of lists, each inner list corresponding to one test case, ordered as above. Concretely, print\n$$\n[[N_E^{(1)},N_P^{(1)},N_H^{(1)}],[N_E^{(2)},N_P^{(2)},N_H^{(2)}],[N_E^{(3)},N_P^{(3)},N_H^{(3)}]]\n$$\nwith no spaces anywhere in the line. For example, a syntactically correct line would look like $[[1,2,3],[4,5,6],[7,8,9]]$ (this is only an example of format; do not use these numbers).\n\nNotes:\n- There are no physical units involved in this task.\n- Angles are not used, so no angle unit is required.\n- Percentages are not used; report only integer counts as specified.", "solution": "The supplied problem is valid. It is scientifically grounded in the mathematical theory of partial differential equations, is well-posed with all necessary information provided, and is stated objectively. The task is to first derive a classification criterion for second-order linear PDEs and then apply it to a given set of test cases.\n\n### Derivation of the Classification Criterion\n\nA general second-order linear partial differential equation in two variables, $x$ and $y$, is given by:\n$$\nA(x,y)\\,\\frac{\\partial^2 u}{\\partial x^2} + B(x,y)\\,\\frac{\\partial^2 u}{\\partial x \\partial y} + C(x,y)\\,\\frac{\\partial^2 u}{\\partial y^2} + \\text{(lower-order terms)} = 0\n$$\nThe type of the PDE at a point $(x,y)$ is determined by the principal part, which is the quadratic form associated with the second-order derivatives. This quadratic form can be represented using the Hessian of $u$, $\\nabla^2 u$, and a symmetric matrix of coefficients. Let the vector of second derivative operators be $\\mathbf{D} = \\left[\\frac{\\partial^2}{\\partial x^2}, \\frac{\\partial^2}{\\partial x \\partial y}, \\frac{\\partial^2}{\\partial y^2}\\right]^T$. The principal part corresponds to a quadratic form in variables $\\xi$ and $\\eta$ given by $A\\xi^2 + B\\xi\\eta + C\\eta^2$. This form can be expressed in matrix notation as:\n$$\n\\begin{bmatrix} \\xi  \\eta \\end{bmatrix} \\begin{bmatrix} A  \\frac{1}{2}B \\\\ \\frac{1}{2}B  C \\end{bmatrix} \\begin{bmatrix} \\xi \\\\ \\eta \\end{bmatrix}\n$$\nThe matrix of this quadratic form is the one provided in the problem statement:\n$$\nH(x,y) = \\begin{bmatrix} A(x,y)  \\frac{1}{2}B(x,y) \\\\ \\frac{1}{2}B(x,y)  C(x,y) \\end{bmatrix}\n$$\nThe classification of the PDE is based on the definiteness of this symmetric matrix $H$, which is determined by its eigenvalues, say $\\lambda_1$ and $\\lambda_2$.\n\n1.  **Elliptic PDE**: The PDE is elliptic if the matrix $H$ is definite (either positive definite or negative definite). This means its eigenvalues are all non-zero and have the same sign. For a $2 \\times 2$ matrix, this condition is $\\lambda_1  0$ and $\\lambda_2  0$, or $\\lambda_1  0$ and $\\lambda_2  0$. In both cases, the product of the eigenvalues is positive: $\\lambda_1 \\lambda_2  0$.\n\n2.  **Hyperbolic PDE**: The PDE is hyperbolic if the matrix $H$ is indefinite. This means its eigenvalues are non-zero and have opposite signs. For a $2 \\times 2$ matrix, this condition is $\\lambda_1 \\lambda_2  0$.\n\n3.  **Parabolic PDE**: The PDE is parabolic if the matrix $H$ is semi-definite. This means at least one of its eigenvalues is zero. For a non-zero principal part, exactly one eigenvalue is zero. This condition is $\\lambda_1 \\lambda_2 = 0$.\n\nThe product of the eigenvalues of a matrix is equal to its determinant. Therefore, we can rephrase the classification criteria using the determinant of $H$:\n$$\n\\det(H) = \\lambda_1 \\lambda_2 = A(x,y)C(x,y) - \\left(\\frac{1}{2}B(x,y)\\right)^2 = AC - \\frac{1}{4}B^2\n$$\n\n*   **Elliptic**: $\\det(H)  0 \\implies AC - \\frac{1}{4}B^2  0$\n*   **Hyperbolic**: $\\det(H)  0 \\implies AC - \\frac{1}{4}B^2  0$\n*   **Parabolic**: $\\det(H) = 0 \\implies AC - \\frac{1}{4}B^2 = 0$\n\nTo avoid fractions and facilitate integer arithmetic, it is conventional to multiply these inequalities by $-4$. This reverses the inequality signs. Let the discriminant be $\\Delta(x,y) = B(x,y)^2 - 4A(x,y)C(x,y)$. The relationship is $\\det(H) = -\\frac{1}{4}\\Delta$. The criteria become:\n\n*   **Elliptic**: $\\Delta(x,y)  0$\n*   **Hyperbolic**: $\\Delta(x,y)  0$\n*   **Parabolic**: $\\Delta(x,y) = 0$\n\nThis discriminant $\\Delta$ provides a numerically robust criterion. Since the problem specifies that the coefficients $A(x,y)$, $B(x,y)$, and $C(x,y)$ are integer-valued on the integer grid, $\\Delta$ will also be an integer. The comparison of an integer with zero is exact, fulfilling the problem's requirement for numerical robustness without floating-point tolerances.\n\n### Application to Test Cases\n\nThe implementation will iterate over a $21 \\times 21$ grid of points where $x,y \\in \\{-10, -9, \\dots, 9, 10\\}$. For each point $(x,y)$ and for each test case, we will compute $\\Delta(x,y)$ and classify the point, updating the counts $N_E$, $N_P$, and $N_H$.\n\n**Case 1:** $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=1+x^2+y^2$.\nThe discriminant is $\\Delta = B^2 - 4AC = 0^2 - 4(1)(1+x^2+y^2) = -4(1+x^2+y^2)$.\nSince $x^2 \\ge 0$ and $y^2 \\ge 0$, the term $1+x^2+y^2$ is always greater than or equal to $1$. Thus, $\\Delta$ is always strictly negative. All $21 \\times 21 = 441$ points are elliptic.\nThe expected counts are $[N_E, N_P, N_H] = [441, 0, 0]$.\n\n**Case 2:** $A(x,y)=1$, $B(x,y)=2x$, $C(x,y)=x^2$.\nThe discriminant is $\\Delta = B^2 - 4AC = (2x)^2 - 4(1)(x^2) = 4x^2 - 4x^2 = 0$.\nThe discriminant is identically zero for all points $(x,y)$. Thus, all $441$ points are parabolic.\nThe expected counts are $[N_E, N_P, N_H] = [0, 441, 0]$.\n\n**Case 3:** $A(x,y)=1$, $B(x,y)=0$, $C(x,y)=-1+y^2$.\nThe discriminant is $\\Delta = B^2 - 4AC = 0^2 - 4(1)(-1+y^2) = 4(1-y^2)$.\nThe classification depends only on the value of $y$:\n*   **Elliptic ($\\Delta  0$):** $1-y^2  0 \\implies y^2  1$. This holds for $y \\in \\{-10, \\dots, -2\\} \\cup \\{2, \\dots, 10\\}$. There are $9+9=18$ such values of $y$. For each, there are $21$ values of $x$. $N_E = 18 \\times 21 = 378$.\n*   **Parabolic ($\\Delta = 0$):** $1-y^2 = 0 \\implies y^2 = 1$. This holds for $y \\in \\{-1, 1\\}$. There are $2$ such values of $y$. $N_P = 2 \\times 21 = 42$.\n*   **Hyperbolic ($\\Delta  0$):** $1-y^2  0 \\implies y^2  1$. This holds for $y = 0$. There is $1$ such value of $y$. $N_H = 1 \\times 21 = 21$.\nThe total count is $378 + 42 + 21 = 441$.\nThe expected counts are $[N_E, N_P, N_H] = [378, 42, 21]$.\n\nThe program will implement this logic to compute and report these counts.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Classifies second-order linear PDEs on a grid for given coefficient functions.\n    \n    The classification is based on the sign of the discriminant Delta = B^2 - 4AC:\n    - Elliptic: Delta  0\n    - Parabolic: Delta = 0\n    - Hyperbolic: Delta  0\n    \"\"\"\n    \n    # Define the coefficient functions A(x,y), B(x,y), C(x,y) for each test case.\n    # The functions are designed to return integers for integer inputs.\n    test_cases = [\n        # Case 1: A=1, B=0, C=1+x^2+y^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 0,\n            \"C\": lambda x, y: 1 + x**2 + y**2,\n        },\n        # Case 2: A=1, B=2x, C=x^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 2 * x,\n            \"C\": lambda x, y: x**2,\n        },\n        # Case 3: A=1, B=0, C=-1+y^2\n        {\n            \"A\": lambda x, y: 1,\n            \"B\": lambda x, y: 0,\n            \"C\": lambda x, y: -1 + y**2,\n        },\n    ]\n\n    # Define the uniform integer grid of points.\n    # x and y range from -10 to 10 inclusive.\n    grid_coords = np.arange(-10, 11)\n    \n    all_results = []\n\n    # Iterate through each test case.\n    for case_coeffs in test_cases:\n        # Initialize counters for elliptic, parabolic, and hyperbolic points.\n        n_elliptic = 0\n        n_parabolic = 0\n        n_hyperbolic = 0\n\n        # Get the coefficient functions for the current case.\n        A_func = case_coeffs[\"A\"]\n        B_func = case_coeffs[\"B\"]\n        C_func = case_coeffs[\"C\"]\n\n        # Iterate over every point (x, y) in the grid.\n        for x in grid_coords:\n            for y in grid_coords:\n                # Evaluate coefficients at the point (x, y).\n                # Since x, y are integers, A, B, C will be integers.\n                A = A_func(x, y)\n                B = B_func(x, y)\n                C = C_func(x, y)\n\n                # Calculate the discriminant. This will be an integer.\n                discriminant = B**2 - 4 * A * C\n\n                # Classify the point based on the sign of the discriminant.\n                # The comparisons are exact as we are using integer arithmetic.\n                if discriminant  0:\n                    n_elliptic += 1\n                elif discriminant == 0:\n                    n_parabolic += 1\n                else:  # discriminant  0\n                    n_hyperbolic += 1\n        \n        # Store the counts for the current case.\n        case_result = [n_elliptic, n_parabolic, n_hyperbolic]\n        all_results.append(case_result)\n\n    # Format the final output string as specified: [[N_E1,N_P1,N_H1],[...],...]\n    # This involves building the string piece by piece to avoid spaces introduced\n    # by default list-to-string conversion.\n    inner_strings = [f\"[{','.join(map(str, res))}]\" for res in all_results]\n    final_output = f\"[{','.join(inner_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "3213827"}]}