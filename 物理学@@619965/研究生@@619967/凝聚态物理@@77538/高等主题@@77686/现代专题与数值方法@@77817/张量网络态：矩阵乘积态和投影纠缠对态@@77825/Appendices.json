{"hands_on_practices": [{"introduction": "我们的第一个练习是一个基础性训练。我们将直接从矩阵乘积态 (MPS) 的定义出发，为一个简单的有限尺寸系统计算波函数系数。这个动手计算对于建立关于矩阵乘积链如何构建完整量子态的直觉至关重要，而验证归一化的过程将在一个实际的背景下引入转移矩阵的概念 [@problem_id:3018555]。", "problem": "考虑一个开边界矩阵乘积态（MPS），其定义在长度为 $N=4$ 的链上，物理维度为 $d=2$（局域基矢为 $\\{|0\\rangle, |1\\rangle\\}$），键维度为 $D=2$。该 MPS 由位置依赖的张量 $\\{A_k^{s_k}\\}$ 和一个右边界向量 $v_R$ 指定，具体如下。对于格点 $k=1$，定义行向量 $A_1^{0}=\\big(\\frac{1}{\\sqrt{2}},\\,0\\big)$ 和 $A_1^{1}=\\big(0,\\,\\frac{1}{\\sqrt{2}}\\big)$。对于格点 $k=2,3,4$，定义 $2\\times 2$ 矩阵\n$$\nA_k^{0} \\equiv A^{0}=\\begin{pmatrix}\\cos\\theta & 0 \\\\ \\sin\\theta & 0\\end{pmatrix},\\qquad\nA_k^{1} \\equiv A^{1}=\\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix},\n$$\n并取右边界向量为 $v_R=\\begin{pmatrix}1\\\\1\\end{pmatrix}$。此处 $\\theta\\in[0,\\pi/2]$ 是一个以弧度为单位的实数参数。\n\n根据开边界矩阵乘积态（MPS）的定义，对于一个比特串 $s_1 s_2 s_3 s_4\\in\\{0,1\\}^4$，其波函数振幅由以下标量缩并给出\n$$\n\\psi(s_1 s_2 s_3 s_4)=A_1^{s_1}\\,A_2^{s_2}\\,A_3^{s_3}\\,A_4^{s_4}\\,v_R.\n$$\n\n仅从上述基本定义出发，不引用任何外部结论，完成以下任务：\n- 显式计算振幅 $\\psi(0\\,1\\,0\\,1)$，结果表示为关于 $\\theta$ 的闭式解析表达式。\n- 然后从第一性原理出发，验证对于任意 $\\theta\\in[0,\\pi/2]$，该态都是归一化的，即证明 $\\sum_{s_1,s_2,s_3,s_4\\in\\{0,1\\}}|\\psi(s_1 s_2 s_3 s_4)|^2=1$。\n\n将振幅 $\\psi(0\\,1\\,0\\,1)$ 的最终答案表示为关于 $\\theta$ 的单个闭式表达式。无需四舍五入。角度单位均为弧度。", "solution": "用户提供了一个凝聚态物理领域定义明确的问题，具体涉及矩阵乘积态（MPS）。该问题是自洽的、数学上一致且有科学依据的。所有必要的定义、张量和参数都已给出，并且它们的维度与所需运算兼容。任务明确，可以确定唯一的解。因此，该问题是有效的，我将开始进行解答。\n\n该问题要求基于给定的开边界 MPS 定义进行两项不同的计算。所有的矩阵和向量都是实数值的。\n\n**第一部分：计算振幅 $\\psi(0\\,1\\,0\\,1)$**\n\n对于构型 $s_1 s_2 s_3 s_4 = 0\\,1\\,0\\,1$，其波函数振幅由以下矩阵乘积给出：\n$$\n\\psi(0\\,1\\,0\\,1) = A_1^{0}\\,A_2^{1}\\,A_3^{0}\\,A_4^{1}\\,v_R\n$$\n张量为：\n$A_1^{0}=\\big(\\frac{1}{\\sqrt{2}},\\,0\\big)$\n$A_2^{1} = A^{1}=\\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix}$\n$A_3^{0} = A^{0}=\\begin{pmatrix}\\cos\\theta & 0 \\\\ \\sin\\theta & 0\\end{pmatrix}$\n$A_4^{1} = A^{1}=\\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix}$\n$v_R=\\begin{pmatrix}1\\\\1\\end{pmatrix}$\n\n我们通过从右向左缩并来计算该乘积：\n1.  首先，我们应用格点 $k=4$ 处的张量：\n    $$\n    A_4^{1}\\,v_R = \\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix} \\begin{pmatrix}1\\\\1\\end{pmatrix} = \\begin{pmatrix}0 \\cdot 1 + (\\sin\\theta) \\cdot 1 \\\\ 0 \\cdot 1 + (\\cos\\theta) \\cdot 1\\end{pmatrix} = \\begin{pmatrix}\\sin\\theta \\\\ \\cos\\theta\\end{pmatrix}\n    $$\n2.  接下来，我们应用格点 $k=3$ 处的张量：\n    $$\n    A_3^{0}\\,(A_4^{1}\\,v_R) = \\begin{pmatrix}\\cos\\theta & 0 \\\\ \\sin\\theta & 0\\end{pmatrix} \\begin{pmatrix}\\sin\\theta \\\\ \\cos\\theta\\end{pmatrix} = \\begin{pmatrix}(\\cos\\theta)(\\sin\\theta) + 0 \\cdot \\cos\\theta \\\\ (\\sin\\theta)(\\sin\\theta) + 0 \\cdot \\cos\\theta\\end{pmatrix} = \\begin{pmatrix}\\cos\\theta\\sin\\theta \\\\ \\sin^2\\theta\\end{pmatrix}\n    $$\n3.  然后，我们应用格点 $k=2$ 处的张量：\n    $$\n    A_2^{1}\\,(A_3^{0}\\,A_4^{1}\\,v_R) = \\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix} \\begin{pmatrix}\\cos\\theta\\sin\\theta \\\\ \\sin^2\\theta\\end{pmatrix} = \\begin{pmatrix}0 \\cdot \\cos\\theta\\sin\\theta + (\\sin\\theta)(\\sin^2\\theta) \\\\ 0 \\cdot \\cos\\theta\\sin\\theta + (\\cos\\theta)(\\sin^2\\theta)\\end{pmatrix} = \\begin{pmatrix}\\sin^3\\theta \\\\ \\cos\\theta\\sin^2\\theta\\end{pmatrix}\n    $$\n4.  最后，我们应用格点 $k=1$ 处的张量：\n    $$\n    \\psi(0\\,1\\,0\\,1) = A_1^{0}\\,(A_2^{1}\\,A_3^{0}\\,A_4^{1}\\,v_R) = \\big(\\frac{1}{\\sqrt{2}},\\,0\\big) \\begin{pmatrix}\\sin^3\\theta \\\\ \\cos\\theta\\sin^2\\theta\\end{pmatrix} = \\frac{1}{\\sqrt{2}}\\sin^3\\theta + 0 \\cdot (\\cos\\theta\\sin^2\\theta) = \\frac{1}{\\sqrt{2}}\\sin^3\\theta\n    $$\n所以，态 $|0101\\rangle$ 的振幅为 $\\frac{1}{\\sqrt{2}}\\sin^3\\theta$。\n\n**第二部分：归一化验证**\n\n问题要求从第一性原理出发，验证对于任意 $\\theta \\in [0, \\pi/2]$，该态都是归一化的。这意味着我们必须证明所有振幅的模长平方和等于 $1$：\n$$\n\\sum_{s_1,s_2,s_3,s_4\\in\\{0,1\\}}|\\psi(s_1 s_2 s_3 s_4)|^2 = 1\n$$\n振幅由 $\\psi(s_1 s_2 s_3 s_4)=A_1^{s_1}\\,A_2^{s_2}\\,A_3^{s_3}\\,A_4^{s_4}\\,v_R$ 给出。由于所有张量都是实数，模长的平方就是振幅的平方：$|\\psi|^2 = \\psi^2$。总概率的表达式为：\n$$\nZ = \\sum_{s_1,s_2,s_3,s_4} \\left( A_1^{s_1}\\,A_2^{s_2}\\,A_3^{s_3}\\,A_4^{s_4}\\,v_R \\right)^2\n$$\n由于振幅是一个标量（$1 \\times 1$ 矩阵），其平方等于其转置乘以自身。\n$$\nZ = \\sum_{s_1,s_2,s_3,s_4} \\left( A_1^{s_1}\\,A_2^{s_2}\\,A_3^{s_3}\\,A_4^{s_4}\\,v_R \\right)^T \\left( A_1^{s_1}\\,A_2^{s_2}\\,A_3^{s_3}\\,A_4^{s_4}\\,v_R \\right)\n$$\n使用性质 $(AB)^T = B^T A^T$，我们得到：\n$$\nZ = \\sum_{s_1,s_2,s_3,s_4} v_R^T (A_4^{s_4})^T (A_3^{s_3})^T (A_2^{s_2})^T (A_1^{s_1})^T A_1^{s_1} A_2^{s_2} A_3^{s_3} A_4^{s_4} v_R\n$$\n我们可以重新排列求和顺序，从格点 $k=1$ 到 $k=4$ 依次进行：\n$$\nZ = v_R^T \\left( \\sum_{s_4} (A_4^{s_4})^T \\left( \\sum_{s_3} (A_3^{s_3})^T \\left( \\sum_{s_2} (A_2^{s_2})^T \\left( \\sum_{s_1} (A_1^{s_1})^T A_1^{s_1} \\right) A_2^{s_2} \\right) A_3^{s_3} \\right) A_4^{s_4} \\right) v_R\n$$\n让我们从最内层开始计算这些嵌套项。\n1.  对 $s_1$ 求和：\n    令 $M_1 = \\sum_{s_1=0,1} (A_1^{s_1})^T A_1^{s_1}$。\n    当 $s_1=0$ 时：$(A_1^{0})^T A_1^{0} = \\begin{pmatrix}1/\\sqrt{2}\\\\0\\end{pmatrix} (\\frac{1}{\\sqrt{2}}, 0) = \\begin{pmatrix}1/2 & 0 \\\\ 0 & 0\\end{pmatrix}$。\n    当 $s_1=1$ 时：$(A_1^{1})^T A_1^{1} = \\begin{pmatrix}0\\\\1/\\sqrt{2}\\end{pmatrix} (0, \\frac{1}{\\sqrt{2}}) = \\begin{pmatrix}0 & 0 \\\\ 0 & 1/2\\end{pmatrix}$。\n    $$M_1 = \\begin{pmatrix}1/2 & 0 \\\\ 0 & 0\\end{pmatrix} + \\begin{pmatrix}0 & 0 \\\\ 0 & 1/2\\end{pmatrix} = \\begin{pmatrix}1/2 & 0 \\\\ 0 & 1/2\\end{pmatrix} = \\frac{1}{2}I_{2 \\times 2}$$\n2.  对 $s_2$ 求和：\n    令 $M_2 = \\sum_{s_2=0,1} (A_2^{s_2})^T M_1 A_2^{s_2} = \\sum_{s_2} (A_2^{s_2})^T (\\frac{1}{2}I) A_2^{s_2} = \\frac{1}{2}\\sum_{s_2} (A_2^{s_2})^T A_2^{s_2}$。\n    让我们为体张量 $A_k = A$（当 $k \\ge 2$ 时）计算 $E = \\sum_{s=0,1} (A^s)^T A^s$：\n    当 $s=0$ 时：$(A^{0})^T A^{0} = \\begin{pmatrix}\\cos\\theta & \\sin\\theta \\\\ 0 & 0\\end{pmatrix} \\begin{pmatrix}\\cos\\theta & 0 \\\\ \\sin\\theta & 0\\end{pmatrix} = \\begin{pmatrix}\\cos^2\\theta+\\sin^2\\theta & 0 \\\\ 0 & 0\\end{pmatrix} = \\begin{pmatrix}1 & 0 \\\\ 0 & 0\\end{pmatrix}$。\n    当 $s=1$ 时：$(A^{1})^T A^{1} = \\begin{pmatrix}0 & 0 \\\\ \\sin\\theta & \\cos\\theta\\end{pmatrix} \\begin{pmatrix}0 & \\sin\\theta \\\\ 0 & \\cos\\theta\\end{pmatrix} = \\begin{pmatrix}0 & 0 \\\\ 0 & \\sin^2\\theta+\\cos^2\\theta\\end{pmatrix} = \\begin{pmatrix}0 & 0 \\\\ 0 & 1\\end{pmatrix}$。\n    所以，$E = \\begin{pmatrix}1 & 0 \\\\ 0 & 0\\end{pmatrix} + \\begin{pmatrix}0 & 0 \\\\ 0 & 1\\end{pmatrix} = \\begin{pmatrix}1 & 0 \\\\ 0 & 1\\end{pmatrix} = I$。\n    因此，$M_2 = \\frac{1}{2}I$。\n3.  对 $s_3$ 求和：\n    计算过程与格点 $k=2$ 的情况完全相同：\n    $$M_3 = \\sum_{s_3=0,1} (A_3^{s_3})^T M_2 A_3^{s_3} = \\sum_{s_3} (A_3^{s_3})^T (\\frac{1}{2}I) A_3^{s_3} = \\frac{1}{2}\\sum_{s_3} (A_3^{s_3})^T A_3^{s_3} = \\frac{1}{2}I$$\n4.  对 $s_4$ 求和：\n    类似地，\n    $$M_4 = \\sum_{s_4=0,1} (A_4^{s_4})^T M_3 A_4^{s_4} = \\sum_{s_4} (A_4^{s_4})^T (\\frac{1}{2}I) A_4^{s_4} = \\frac{1}{2}\\sum_{s_4} (A_4^{s_4})^T A_4^{s_4} = \\frac{1}{2}I$$\n5.  最终缩并：\n    总和为 $Z = v_R^T M_4 v_R$。\n    $$\n    Z = v_R^T \\left(\\frac{1}{2}I\\right) v_R = \\frac{1}{2} v_R^T v_R\n    $$\n    对于 $v_R = \\begin{pmatrix}1\\\\1\\end{pmatrix}$，我们有 $v_R^T v_R = (1,1) \\begin{pmatrix}1\\\\1\\end{pmatrix} = 1 \\cdot 1 + 1 \\cdot 1 = 2$。\n    $$\n    Z = \\frac{1}{2}(2) = 1\n    $$\n这证实了对于任意 $\\theta \\in [0, \\pi/2]$，该态都是归一化的，因为参数 $\\theta$ 由于三角恒等式 $\\sin^2\\theta+\\cos^2\\theta=1$ 而被消去。\n\n问题要求的最终答案是振幅 $\\psi(0\\,1\\,0\\,1)$。", "answer": "$$\\boxed{\\frac{1}{\\sqrt{2}}\\sin^{3}(\\theta)}$$", "id": "3018555"}, {"introduction": "MPS 取得成功的一个关键原因在于它们能够有效地表示物理上重要的量子态，这些态通常遵循纠缠的“面积定律”。本练习将探讨这种联系，任务是为一个典型的多体纠缠态——W 态——构建一个 MPS。通过计算该链不同划分下的施密特秩，你将发现一个态的纠缠结构与其表示为 MPS 所需的最小键维数 $D_{\\min}$ 之间的根本关系 [@problem_id:3018439]。", "problem": "考虑一个由 $L \\geq 2$ 个自旋-$\\frac{1}{2}$ 位点构成的一维链，每个位点上的计算基为 $\\{|0\\rangle,|1\\rangle\\}$。系统处于W态\n$$\n|W_L\\rangle=\\frac{1}{\\sqrt{L}}\\sum_{i=1}^{L}|0\\rangle^{\\otimes (i-1)}\\otimes|1\\rangle\\otimes|0\\rangle^{\\otimes (L-i)}\\,,\n$$\n这是唯一的单激发对称态。仅使用开放边界条件下矩阵乘积态 (MPS) 的基本定义，即任何在 $L$ 个位点上的态 $|\\psi\\rangle$ 都可以写作\n$$\n|\\psi\\rangle=\\sum_{s_1,\\dots,s_L\\in\\{0,1\\}}\\left(b_{\\mathrm{L}}^{\\top}A^{[1]}_{s_1}A^{[2]}_{s_2}\\cdots A^{[L]}_{s_L}b_{\\mathrm{R}}\\right)|s_1s_2\\cdots s_L\\rangle\\,,\n$$\n其中 $A^{[i]}_{s_i}$ 是 $D\\times D$ 矩阵 (键维为 $D$), $b_{\\mathrm{L}},b_{\\mathrm{R}}$ 是 $D$ 分量边界向量，完成以下任务：\n\n1. 构造一组显式的、位点无关的 $D\\times D$ 矩阵 $\\{A^{0},A^{1}\\}$ 和边界向量 $b_{\\mathrm{L}},b_{\\mathrm{R}}$，使其在上述缩并下能够精确地生成 $|W_L\\rangle$。要求对于所有单激发串，其振幅为均匀的 $1/\\sqrt{L}$，而对于所有其他串，其振幅为零。\n\n2. 从跨越一个二分的施密特分解的定义以及施密特秩与MPS键维之间的关系出发，确定将 $|W_L\\rangle$ 精确表示为开放边界MPS所需的最小键维 $D_{\\min}$。你的最终答案必须是一个整数，无需四舍五入，也不涉及物理单位。", "solution": "该问题分为两部分。首先，我们必须为包含 $L$ 个位点的W态 $|W_L\\rangle$ 构造一个显式的、位点无关的矩阵乘积态 (MPS) 表示。其次，我们必须确定这种表示所需的最小键维。该问题提法清晰，并具有量子凝聚态物理领域的坚实科学基础。\n\n### 第一部分：W态的MPS构造\n\n包含 $L$ 个位点的W态由下式给出\n$$\n|W_L\\rangle = \\frac{1}{\\sqrt{L}}\\sum_{i=1}^{L}|0\\rangle^{\\otimes (i-1)}\\otimes|1\\rangle\\otimes|0\\rangle^{\\otimes (L-i)}\n$$\n该态是所有恰好包含一个激发（一个 $|1\\rangle$ 自旋）的可能基态的叠加。每个此类态的振幅为 $\\frac{1}{\\sqrt{L}}$，而任何没有激发或有一个以上激发的态的振幅均为0。\n\n我们寻求一个具有开放边界条件的、位点无关的MPS表示，如问题陈述中所定义的：\n$$\n|\\psi\\rangle = \\sum_{s_1,\\dots,s_L\\in\\{0,1\\}}\\left(b_{\\mathrm{L}}^{\\top}A_{s_1}A_{s_2}\\cdots A_{s_L}b_{\\mathrm{R}}\\right)|s_1s_2\\cdots s_L\\rangle\n$$\n其中 $\\{A_0, A_1\\}$ 是一组 $D \\times D$ 矩阵， $b_{\\mathrm{L}}, b_{\\mathrm{R}}$ 是 $D$ 维边界向量。令 $c(s_1, \\dots, s_L) = b_{\\mathrm{L}}^{\\top}A_{s_1}A_{s_2}\\cdots A_{s_L}b_{\\mathrm{R}}$ 为基态 $|s_1s_2\\cdots s_L\\rangle$ 的系数。\n\n对这些系数的条件是：\n1.  对于在位点 $i$ 处有一个激发的态 $|0\\dots01_i0\\dots0\\rangle$，其系数必须为 $c(\\dots) = b_{\\mathrm{L}}^{\\top}(A_0)^{i-1}A_1(A_0)^{L-i}b_{\\mathrm{R}} = \\frac{1}{\\sqrt{L}}$。这对所有 $i \\in \\{1, \\dots, L\\}$ 都必须成立。\n2.  对于没有激发的态 $|00\\dots0\\rangle$，其系数必须为 $c(\\dots) = b_{\\mathrm{L}}^{\\top}(A_0)^L b_{\\mathrm{R}} = 0$。\n3.  对于任何有一个以上激发的态，其系数必须为0。这意味着任何包含两个或更多 $A_1$ 矩阵的矩阵乘积，在与边界向量缩并时，其结果必须为零。\n\n我们尝试用键维 $D=2$ 进行构造。这些条件的结构提示了一个简单的逻辑：为了满足条件3，$A_1$ 应该是一个幂零矩阵，具体来说是 $A_1^2=0_{2\\times2}$（零矩阵）。一个严格上三角或下三角矩阵是很好的候选。我们选择 $A_1$ 为严格上三角矩阵。\n\n设 $A_1 = \\begin{pmatrix} 0 & \\alpha \\\\ 0 & 0 \\end{pmatrix}$，其中 $\\alpha$ 为某个常数。那么 $A_1^2 = \\begin{pmatrix} 0 & 0 \\\\ 0 & 0 \\end{pmatrix}$。这确保了任何包含一个以上 $A_1$ 的矩阵乘积 $A_{s_1}\\cdots A_{s_L}$ 都会是零矩阵。例如，$A_1 A_0^k A_1 = \\begin{pmatrix} 0 & \\alpha \\\\ 0 & 0 \\end{pmatrix} A_0^k \\begin{pmatrix} 0 & \\alpha \\\\ 0 & 0 \\end{pmatrix}$。如果我们也选择 $A_0$ 为上三角矩阵，比如 $A_0 = \\begin{pmatrix} a & b \\\\ 0 & d \\end{pmatrix}$，那么 $A_0^k$ 也是上三角的。乘积 $A_1 A_0^k A_1$ 于是将为零矩阵。能够简化计算的对 $A_0$ 的最简单选择是单位矩阵，$A_0 = I_2 = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$。\n\n当 $A_0=I_2$ 时，条件1变为 $b_{\\mathrm{L}}^{\\top}A_1 b_{\\mathrm{R}} = \\frac{1}{\\sqrt{L}}$，这与激发的位置 $i$ 无关。\n条件2变为 $b_{\\mathrm{L}}^{\\top}(I_2)^L b_{\\mathrm{R}} = b_{\\mathrm{L}}^{\\top}b_{\\mathrm{R}} = 0$。这意味着边界向量必须是正交的。\n\n我们为边界选择一对简单的正交向量。设 $b_{\\mathrm{L}} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$ 和 $b_{\\mathrm{R}} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$。它们是规范正交的，并满足 $b_{\\mathrm{L}}^{\\top}b_{\\mathrm{R}} = 0$。\n\n现在我们用这些选择来检验条件1：\n$$\nb_{\\mathrm{L}}^{\\top}A_1 b_{\\mathrm{R}} = \\begin{pmatrix} 1 & 0 \\end{pmatrix} \\begin{pmatrix} 0 & \\alpha \\\\ 0 & 0 \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0 & \\alpha \\end{pmatrix} \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = \\alpha\n$$\n为了得到W态的正确振幅，我们必须设定 $\\alpha = \\frac{1}{\\sqrt{L}}$。\n\n因此，$|W_L\\rangle$ 的一个有效的、位点无关的MPS表示由以下给出：\n- 键维: $D=2$\n- 矩阵: $A_0 = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$, $A_1 = \\begin{pmatrix} 0 & \\frac{1}{\\sqrt{L}} \\\\ 0 & 0 \\end{pmatrix}$\n- 边界向量: $b_{\\mathrm{L}} = \\begin{pmatrix} 1 \\\\ 0 \\end{pmatrix}$, $b_{\\mathrm{R}} = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$\n\n这个构造精确地生成了 $|W_L\\rangle$ 态。\n\n### 第二部分：最小键维\n\n将一个态精确表示为开放边界MPS所需的最小键维 $D_{\\min}$，由该链所有可能的二分上的最大施密特秩给出。\n$$\nD_{\\min} = \\max_{k=1,\\dots,L-1} \\chi_k\n$$\n其中 $\\chi_k$ 是在将位点 $\\{1, \\dots, k\\}$ (子系统A) 与位点 $\\{k+1, \\dots, L\\}$ (子系统B) 分开的二分下，该态的施密特秩。施密特秩是在该切分下，态的施密特分解中非零施密特系数的数量。\n\n让我们对 $|W_L\\rangle$ 在任意位置 $k$ 处的切分进行施密特分解。我们可以将 $|W_L\\rangle$ 定义中的求和分为两部分：一部分是单个激发在子系统A中（$1 \\le i \\le k$），另一部分是它在子系统B中（$k+1 \\le i \\le L$）。\n\n$$\n|W_L\\rangle = \\frac{1}{\\sqrt{L}} \\left( \\sum_{i=1}^{k} |0\\dots1_i\\dots0\\rangle_{\\mathrm{A}} \\otimes |0\\dots0\\rangle_{\\mathrm{B}} + \\sum_{i=k+1}^{L} |0\\dots0\\rangle_{\\mathrm{A}} \\otimes |0\\dots1_{i-k}\\dots0\\rangle_{\\mathrm{B}} \\right)\n$$\n为了使这个结构更清晰，我们为每个子系统定义两个正交的态：一个是没有激发的态，另一个是单激发态的叠加。\n对于子系统A（位点1到k）：\n- $|\\psi_{A,0}\\rangle = |0\\rangle^{\\otimes k}$\n- $|\\Phi_A\\rangle = \\frac{1}{\\sqrt{k}} \\sum_{i=1}^{k} |0\\dots1_i\\dots0\\rangle_{\\mathrm{A}}$\n集合 $\\{|\\psi_{A,0}\\rangle, |\\Phi_A\\rangle\\}$ 是规范正交的。\n\n对于子系统B（位点 $k+1$ 到 $L$，大小为 $L-k$）：\n- $|\\psi_{B,0}\\rangle = |0\\rangle^{\\otimes (L-k)}$\n- $|\\Phi_B\\rangle = \\frac{1}{\\sqrt{L-k}} \\sum_{j=1}^{L-k} |0\\dots1_j\\dots0\\rangle_{\\mathrm{B}}$\n集合 $\\{|\\psi_{B,0}\\rangle, |\\Phi_B\\rangle\\}$ 也是规范正交的。\n\n现在我们可以用这些态来重写 $|W_L\\rangle$。\n在A中的激发求和可以写为：\n$$\n\\sum_{i=1}^{k} |0\\dots1_i\\dots0\\rangle_{\\mathrm{A}} = \\sqrt{k} |\\Phi_A\\rangle\n$$\n在B中的激发求和可以写为：\n$$\n\\sum_{i=k+1}^{L} |0\\dots1_{i-k}\\dots0\\rangle_{\\mathrm{B}} = \\sum_{j=1}^{L-k} |0\\dots1_j\\dots0\\rangle_{\\mathrm{B}} = \\sqrt{L-k} |\\Phi_B\\rangle\n$$\n将这些代回到 $|W_L\\rangle$ 的表达式中：\n$$\n|W_L\\rangle = \\frac{1}{\\sqrt{L}} \\left( (\\sqrt{k} |\\Phi_A\\rangle) \\otimes |\\psi_{B,0}\\rangle + |\\psi_{A,0}\\rangle \\otimes (\\sqrt{L-k} |\\Phi_B\\rangle) \\right)\n$$\n$$\n|W_L\\rangle = \\sqrt{\\frac{k}{L}} |\\Phi_A\\rangle \\otimes |\\psi_{B,0}\\rangle + \\sqrt{\\frac{L-k}{L}} |\\psi_{A,0}\\rangle \\otimes |\\Phi_B\\rangle\n$$\n这个表达式是施密特分解的形式，即 $|\\psi\\rangle = \\sum_j \\lambda_j |\\phi_j\\rangle_A |\\chi_j\\rangle_B$，它有两项。施密特基矢对于子系统A是 $\\{|\\Phi_A\\rangle, |\\psi_{A,0}\\rangle\\}$，对于子系统B是 $\\{|\\psi_{B,0}\\rangle, |\\Phi_B\\rangle\\}$。相应的施密特系数是 $\\lambda_1 = \\sqrt{\\frac{k}{L}}$ 和 $\\lambda_2 = \\sqrt{\\frac{L-k}{L}}$。\n\n对于任何满足 $1 \\le k \\le L-1$ 的切分 $k$，$k$ 和 $L-k$ 都是正整数。因此，两个施密特系数都是非零的。所以，对于链的每一种可能的二分，施密特秩 $\\chi_k$（非零系数的数量）都是2。\n$$\n\\chi_k = 2 \\quad \\text{for } k=1, 2, \\dots, L-1\n$$\n最小键维是这些秩的最大值：\n$$\nD_{\\min} = \\max_{k=1,\\dots,L-1} \\chi_k = \\max_{k} (2) = 2\n$$\n这证实了我们在第一部分构造中使用的键维 $D=2$ 确实是可能的最小键维。", "answer": "$$\n\\boxed{2}\n$$", "id": "3018439"}, {"introduction": "除了表示量子态，张量网络形式主义的真正威力在于其能高效计算物理可观测量。这最后一个练习将我们带到热力学极限，考虑一个无限长的、平移不变的 MPS。你将实现一个数值程序，通过利用 MPS 转移矩阵的光谱性质来计算两点关联函数 $\\langle O_{0}\\, O_{r} \\rangle$，这是研究量子多体系统的基石技术之一 [@problem_id:3018490]。", "problem": "考虑一个无限长、具有平移不变性的矩阵乘积态（MPS），其用于一个物理维度为 $d$、键维度为 $D$ 的一维自旋链。该 MPS 由一组 $d$ 个复数 $D \\times D$ 矩阵 $\\{A^{s}\\}_{s=0}^{d-1}$ 指定，其中 $s$ 索引了局域基 $\\{|s\\rangle\\}$。为单点算符 $O$ 定义转移矩阵 $E$ 和算符插入的转移矩阵 $E_{O}$ 如下：\n$$\nE \\equiv \\sum_{s=0}^{d-1} A^{s} \\otimes \\overline{A^{s}}, \\quad\nE_{O} \\equiv \\sum_{s=0}^{d-1}\\sum_{s'=0}^{d-1} \\langle s|O|s'\\rangle\\, A^{s} \\otimes \\overline{A^{s'}}.\n$$\n此处 $\\overline{(\\cdot)}$ 表示复共轭，$\\otimes$ 是克罗内克积。\n\n对于一个无限长的平移不变链，局域算符 $O$ 在间距为 $r$（$r \\geq 1$ 为整数）处的两点函数，在通过 MPS 模长归一化后，可以用 $E$ 的主左、右本征向量以及 $E$ 的谱分解来表示。设 $\\lambda_{0}$ 是 $E$ 的最大模本征值，并设 $r$ 是以晶格单位计的间距。假设 $E$ 是可对角化的，并且主本征值 $\\lambda_{0}$ 是唯一的。如果 $V$ 是 $E$ 的右本征向量矩阵，而 $V^{-1}$ 是其逆矩阵，则左本征向量构成 $V^{-1}$ 的行，且 $E$ 的幂的谱表示为：\n$$\nE^{n} = V \\,\\mathrm{diag}(\\lambda_{0}^{n}, \\lambda_{1}^{n}, \\ldots)\\, V^{-1}, \\quad \\text{对于整数 } n \\geq 0.\n$$\n如果 $l^{T}$ 和 $r$ 分别表示与 $\\lambda_{0}$ 相关联的主左、右本征向量，并经双正交归一化选择以使 $l^{T} r = 1$，那么归一化的两点函数为：\n$$\n\\langle O_{0}\\, O_{r} \\rangle = \\frac{l^{T}\\, E_{O}\\, E^{\\,r-1}\\, E_{O}\\, r}{l^{T}\\, E^{\\,r+1}\\, r}.\n$$\n\n您的任务是实现一个程序，对于给定的由 $\\{A^{s}\\}$ 指定的平移不变 MPS 和单点算符 $O = S^{z}$（$d=2$），进行数值计算：\n- 从提供的 $A^{s}$ 和 $O$ 构建 $E$ 和 $E_{O}$。\n- 对角化 $E$ 以获得其本征值和本征向量。\n- 使用本征向量矩阵及其逆矩阵，确定主本征值 $\\lambda_{0}$ 以及相应的左、右本征向量 $l^{T}$ 和 $r$。\n- 根据上述公式，使用 $E$ 的谱分解来计算在指定间距 $r$ 处的 $\\langle S^{z}_{0}\\, S^{z}_{r} \\rangle$。\n\n使用标准的自旋-$\\frac{1}{2}$算符\n$$\nS^{z} = \\begin{pmatrix} \\tfrac{1}{2} & 0 \\\\ 0 & -\\tfrac{1}{2} \\end{pmatrix}.\n$$\n\n您的程序必须为以下平移不变 MPS 实例和间距 $r$ 的测试套件计算相关函数值：\n\n- 测试用例 1（键维度 $D=1$）：\n$$A^{0} = \\begin{pmatrix} 1 \\end{pmatrix},\\quad A^{1} = \\begin{pmatrix} 0 \\end{pmatrix}$$\n$r = 3$。\n- 测试用例 2（键维度 $D=2$）：\n$$A^{0} = \\begin{pmatrix} 0.7 & 0.0 \\\\ 0.0 & 0.3 \\end{pmatrix},\\quad\nA^{1} = \\begin{pmatrix} 0.1 & 0.2 \\\\ 0.3 & 0.4 \\end{pmatrix}$$\n$r = 1$。\n- 测试用例 3（键维度 $D=2$）：\n$$A^{0} = \\begin{pmatrix} 0.5 & 0.1 \\\\ 0.0 & 0.4 \\end{pmatrix},\\quad\nA^{1} = \\begin{pmatrix} 0.2 & 0.0 \\\\ 0.1 & 0.3 \\end{pmatrix}$$\n$r = 10$。\n\n所有量均为无量纲。您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，每个浮点数四舍五入到 $10$ 位小数（例如，$[0.2500000000,0.0123456789,0.0000000001]$）。这些值必须按照测试用例 1、2 和 3 的顺序排列。\n\n科学与算法要求：\n- 仅从上述定义和线性代数中标准的、经过充分检验的事实出发，例如可对角化矩阵的谱分解以及左、右本征向量的双正交性。\n- 除所述假设外，不依赖于 MPS 的任何特殊正则形式或规范固定。\n- 使用 $E$ 的本征分解来实现 $E^{n}$ 的计算，而不是通过重复乘法。\n- 如果在计算过程中出现中间复数值，则返回最终相关函数值的实部，因为 $S^{z}$ 是厄米算符，物理期望值应为实数。", "solution": "用户提供的问题已经过验证，被确定为计算凝聚态物理领域中一个定义明确、具有科学依据的问题。该问题要求实现一个标准算法，用以在无限长、平移不变的矩阵乘积态（MPS）中计算两点相关函数。所有必要的定义、公式和数据均已提供。\n\n解决方案通过实现指定的两点相关函数 $\\langle O_{0}\\, O_{r} \\rangle$ 公式来展开。该方法的核心依赖于 MPS 转移矩阵 $E$ 的谱特性。\n\n### 基于原理的方法\n\n由 MPS 表示的一维、无限长、平移不变的量子态的物理性质，由其转移矩阵 $E$ 所捕捉。转移矩阵作用于 MPS 的虚拟空间或键空间，并描述了状态如何从一个格点“转移”到下一个格点。\n\n两个相距为 $r = |i-j|$ 的局域算符 $O_i$ 和 $O_j$ 之间的相关函数，取决于转移矩阵如何在中间空间传播算符。对于无限系统，这用 $E$ 的本征向量和本征值来表示。相关的衰减由次主本征值与主本征值之比决定。\n\n所提供的公式，\n$$\n\\langle O_{0}\\, O_{r} \\rangle = \\frac{l^{T}\\, E_{O}\\, E^{\\,r-1}\\, E_{O}\\, r}{l^{T}\\, E^{\\,r+1}\\, r}\n$$\n是此形式体系的直接推论。这里，$l^T$ 和 $r$ 是 $E$ 的主左、右本征向量，对应于最大模本征值 $\\lambda_0$。$E_O$ 是一个在单个格点插入算符 $O$ 的修正转移矩阵。分母用于归一化该态。\n\n计算此量的算法包括以下步骤：\n\n1.  **构建矩阵**：根据给定的 MPS 张量 $\\{A^s\\}_{s=0}^{d-1}$ 和算符 $O=S^z$，我们构建所需的矩阵。\n    *   转移矩阵 $E$ 的大小为 $D^2 \\times D^2$，由 $E = \\sum_{s=0}^{d-1} A^{s} \\otimes \\overline{A^{s}}$ 给出。对于给定的问题，$A^s$ 矩阵是实数，因此复共轭 $\\overline{A^s}$ 就是 $A^s$。这里使用了克罗内克积 $\\otimes$。\n    *   算符插入的转移矩阵 $E_O$ 类似地定义为 $E_{O} = \\sum_{s, s'=0}^{d-1} \\langle s|O|s'\\rangle A^{s} \\otimes \\overline{A^{s'}}$。对于算符 $O=S^z=\\begin{pmatrix} 1/2 & 0 \\\\ 0 & -1/2 \\end{pmatrix}$，它在计算基 $\\{|0\\rangle, |1\\rangle\\}$ 中是对角的，该求和简化为 $E_{S^z} = \\frac{1}{2} A^0 \\otimes \\overline{A^0} - \\frac{1}{2} A^1 \\otimes \\overline{A^1}$。\n\n2.  **转移矩阵的本征分解**：对矩阵 $E$ 进行对角化，以获得其本征值 $\\{\\lambda_i\\}$ 和右本征向量。右本征向量构成一个矩阵 $V$ 的列。问题假设 $E$ 是可对角化的，因此我们可以写出其谱分解 $E = V \\mathrm{diag}(\\lambda_0, \\lambda_1, \\ldots) V^{-1}$。左本征向量是逆矩阵 $V^{-1}$ 的行。\n\n3.  **确定主本征系统**：主本征值 $\\lambda_0$ 是绝对值最大的那个。相应的主右本征向量 $r$ 是 $V$ 中与 $\\lambda_0$ 索引对应的列，主左本征向量 $l^T$ 是 $V^{-1}$ 中相同索引对应的行。根据构造，这些本征向量是双正交的，满足 $l^T r = 1$。\n\n4.  **计算相关函数表达式**：\n    *   **分母**：分母 $l^{T}\\, E^{\\,r+1}\\, r$ 可以显著简化。由于 $r$ 是 $E$ 的右本征向量，本征值为 $\\lambda_0$，我们有 $E r = \\lambda_0 r$。重复应用得到 $E^{r+1} r = \\lambda_0^{r+1} r$。因此，使用双正交条件，分母变为 $l^T (\\lambda_0^{r+1} r) = \\lambda_0^{r+1} (l^T r) = \\lambda_0^{r+1}$。\n    *   **分子**：分子是 $l^{T}\\, E_{S^z}\\, E^{\\,r-1}\\, E_{S^z}\\, r$。根据问题的指示，矩阵的幂 $E^{r-1}$ 使用谱分解进行计算：$E^{r-1} = V \\mathrm{diag}(\\lambda_0^{r-1}, \\lambda_1^{r-1}, \\ldots) V^{-1}$。为保持数值稳定性和效率，计算是通过一系列矩阵-向量乘法来执行的，而不是构建完整的矩阵 $E^{r-1}$。\n\n5.  **最终计算**：相关函数是计算出的分子与分母之比。由于算符 $S^z$ 是厄米的，且 MPS 代表一个物理态，因此最终的期望值必须是实数。取最终（可能为复数）数值结果的实部。整个计算使用复数浮点数进行，以处理对角化过程中可能出现的任何复数本征值或本征向量。\n\n该过程将为每个提供的测试用例实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef compute_correlation(A_s_list, r_sep, op_O):\n    \"\"\"\n    Computes the two-point correlation function for a translationally invariant MPS.\n\n    Args:\n        A_s_list (list of np.ndarray): MPS tensors [A^0, A^1, ...].\n        r_sep (int): Separation between operators.\n        op_O (np.ndarray): The single-site operator.\n\n    Returns:\n        float: The real part of the computed correlation value.\n    \"\"\"\n    # Use complex128 for all calculations to handle potential complex eigensystems.\n    A_s = [np.array(A, dtype=np.complex128) for A in A_s_list]\n    O = np.array(op_O, dtype=np.complex128)\n\n    # Physical dimension d and bond dimension D\n    d = len(A_s)\n    D = A_s[0].shape[0]\n    \n    # 1. Construct Transfer Matrices\n    # E = sum_{s} A^s (x) conj(A^s)\n    # E_O = sum_{s,s'} <s|O|s'> A^s (x) conj(A^s')\n    # Note: For the given test cases, A matrices are real, so np.conj is identity.\n    # The code includes it for generality as specified by the problem's definition.\n    E = np.zeros((D**2, D**2), dtype=np.complex128)\n    E_O = np.zeros((D**2, D**2), dtype=np.complex128)\n\n    for s in range(d):\n        E += np.kron(A_s[s], np.conj(A_s[s]))\n        for s_prime in range(d):\n            if O[s, s_prime] != 0:\n                E_O += O[s, s_prime] * np.kron(A_s[s], np.conj(A_s[s_prime]))\n\n    # 2. Diagonalize E\n    try:\n        eigvals, V = np.linalg.eig(E)\n        V_inv = np.linalg.inv(V)\n    except np.linalg.LinAlgError:\n        # This case suggests a non-diagonalizable matrix E, which violates problem assumptions.\n        # This should not happen with the provided test cases.\n        raise RuntimeError(\"Eigendecomposition failed. E might be singular or non-diagonalizable.\")\n\n    # 3. Identify dominant eigenvalue and eigenvectors\n    dom_idx = np.argmax(np.abs(eigvals))\n    lambda_0 = eigvals[dom_idx]\n    r_vec = V[:, dom_idx]\n    l_vec_T = V_inv[dom_idx, :]\n\n    # 4. Evaluate the correlation function\n    # Denominator = lambda_0**(r+1)\n    denominator = lambda_0**(r_sep + 1)\n\n    # Numerator = l^T * E_O * E^(r-1) * E_O * r\n    # Calculate E^(r-1) using spectral decomposition: E^n = V * diag(lambda^n) * V_inv\n    # This also works for r=1, since lambda^0=1 and E^0 = V*I*V_inv = I.\n    eigvals_pow = eigvals**(r_sep - 1)\n    E_pow_r_minus_1 = V @ np.diag(eigvals_pow) @ V_inv\n\n    # Compute numerator using efficient matrix-vector products\n    vec1 = E_O @ r_vec\n    vec2 = E_pow_r_minus_1 @ vec1\n    numerator = l_vec_T @ E_O @ vec2\n    \n    correlation = numerator / denominator\n\n    # The expectation value of a Hermitian operator must be real.\n    return np.real(correlation)\n\ndef solve():\n    # Define the spin-1/2 S^z operator\n    S_z = np.array([[0.5, 0.0], [0.0, -0.5]])\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            'As': [np.array([[1.0]]), np.array([[0.0]])],\n            'r': 3\n        },\n        {\n            'As': [\n                np.array([[0.7, 0.0], [0.0, 0.3]]),\n                np.array([[0.1, 0.2], [0.3, 0.4]])\n            ],\n            'r': 1\n        },\n        {\n            'As': [\n                np.array([[0.5, 0.1], [0.0, 0.4]]),\n                np.array([[0.2, 0.0], [0.1, 0.3]])\n            ],\n            'r': 10\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        A_s_list = case['As']\n        r_separation = case['r']\n        \n        result = compute_correlation(A_s_list, r_separation, S_z)\n        results.append(f\"{result:.10f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "3018490"}]}