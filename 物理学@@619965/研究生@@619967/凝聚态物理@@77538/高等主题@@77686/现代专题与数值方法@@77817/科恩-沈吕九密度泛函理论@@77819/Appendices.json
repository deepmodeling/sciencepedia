{"hands_on_practices": [{"introduction": "应用密度泛函理论的第一步是为给定的电子密度计算能量泛函。这项练习 [@problem_id:2998104] 为这项基本任务提供了动手实践。通过使用局域密度近似（LDA）计算一个模型原子的交换相关能，你将看到能量密度这一抽象概念如何通过积分转化为一个具体的、可计算的数值。", "problem": "考虑一个在 Kohn-Sham 密度泛函理论 (DFT) 框架下描述的自旋非极化球形原子。设电子密度是球对称的，其径向形式为 $n(r) = n_{0} \\exp(-\\alpha r)$（$r \\geq 0$），其中 $\\alpha > 0$ 和 $n_{0} > 0$ 是常数。总电子数为 $N$，密度必须归一化，使得 $\\int n(\\mathbf{r}) \\, d^{3}r = N$。在原子单位制下进行计算，取玻尔半径为1，能量以哈特里 (Hartree) 为单位。\n\n使用局域密度近似 (LDA) 处理交换与关联，并采用以下基本输入：\n- 交换贡献来自于零温下的三维均匀电子气。\n- 每个粒子的关联能取自 Perdew–Zunger 参数化的高密度极限，写作 $\\varepsilon_{c}(n) = A \\ln r_{s}(n) + B$，其中 $A$ 和 $B$ 是常数，而 $r_{s}(n) = \\left( \\frac{3}{4\\pi n} \\right)^{1/3}$ 是 Wigner-Seitz 半径。\n\n从与 Kohn-Sham DFT 及上述输入一致的第一性原理出发，推导该原子的总交换关联能 $E_{xc}^{\\mathrm{LDA}}[n]$ 的一个闭合形式解析表达式。该表达式应以 $A$、$B$、$N$ 和 $\\alpha$ 表示，并利用归一化约束消去 $n_{0}$。最终能量以哈特里 (Hartree) 表示。无需进行数值计算或四舍五入；提供一个单一的闭合形式表达式作为最终答案。", "solution": "该问题要求使用局域密度近似 (LDA)，计算具有给定电子密度 $n(r)$ 的球形原子模型的总交换关联能 $E_{xc}^{\\mathrm{LDA}}[n]$。总能量是交换贡献和关联贡献之和，$E_{xc}^{\\mathrm{LDA}}[n] = E_{x}^{\\mathrm{LDA}}[n] + E_{c}^{\\mathrm{LDA}}[n]$。推导过程分四步进行：首先，我们对电子密度进行归一化以求出常数 $n_{0}$；其次，我们计算交换能 $E_{x}^{\\mathrm{LDA}}[n]$；第三，我们计算关联能 $E_{c}^{\\mathrm{LDA}}[n]$；最后，我们将这两部分贡献相加。\n\n**第一步：电子密度的归一化**\n电子密度为 $n(r) = n_{0} \\exp(-\\alpha r)$，必须归一化到总电子数 $N$。由于密度是球对称的，我们在球坐标系中进行积分。\n$$\nN = \\int n(\\mathbf{r}) \\, d^{3}r = \\int_{0}^{2\\pi} d\\phi \\int_{0}^{\\pi} \\sin\\theta \\, d\\theta \\int_{0}^{\\infty} n(r) r^{2} \\, dr\n$$\n角向积分得到 $4\\pi$。\n$$\nN = 4\\pi \\int_{0}^{\\infty} n_{0} \\exp(-\\alpha r) r^{2} \\, dr = 4\\pi n_{0} \\int_{0}^{\\infty} r^{2} \\exp(-\\alpha r) \\, dr\n$$\n该积分为与伽马函数相关的标准形式：$\\int_{0}^{\\infty} x^{k} \\exp(-ax) \\, dx = \\frac{k!}{a^{k+1}}$。在我们的情况下，$k=2$ 且 $a=\\alpha$。\n$$\n\\int_{0}^{\\infty} r^{2} \\exp(-\\alpha r) \\, dr = \\frac{2!}{\\alpha^{2+1}} = \\frac{2}{\\alpha^{3}}\n$$\n将此结果代回归一化方程，得到：\n$$\nN = 4\\pi n_{0} \\left( \\frac{2}{\\alpha^{3}} \\right) = \\frac{8\\pi n_{0}}{\\alpha^{3}}\n$$\n我们求解常数 $n_{0}$，用给定的参数 $N$ 和 $\\alpha$ 来表示它。\n$$\nn_{0} = \\frac{N \\alpha^{3}}{8\\pi}\n$$\n这个表达式将用于从最终结果中消去 $n_{0}$。\n\n**第二步：交换能 $E_{x}^{\\mathrm{LDA}}$ 的计算**\n在 LDA 中，交换能由交换能密度的积分给出，该密度以均匀电子气 (UEG) 为模型。对于一个自旋非极化系统，每个粒子的交换能为 $\\varepsilon_{x}(n) = -C_{x} n^{1/3}$，其中常数在原子单位制下为 $C_{x} = \\frac{3}{4} \\left(\\frac{3}{\\pi}\\right)^{1/3}$。总交换能泛函为：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = \\int n(\\mathbf{r}) \\varepsilon_{x}(n(\\mathbf{r})) \\, d^{3}r = -C_{x} \\int [n(\\mathbf{r})]^{4/3} \\, d^{3}r\n$$\n我们再次使用球坐标进行积分。\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -C_{x} \\int_{0}^{\\infty} [n(r)]^{4/3} 4\\pi r^{2} \\, dr\n$$\n代入 $n(r) = n_{0} \\exp(-\\alpha r)$：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -4\\pi C_{x} \\int_{0}^{\\infty} [n_{0} \\exp(-\\alpha r)]^{4/3} r^{2} \\, dr = -4\\pi C_{x} n_{0}^{4/3} \\int_{0}^{\\infty} r^{2} \\exp\\left(-\\frac{4\\alpha r}{3}\\right) \\, dr\n$$\n该积分与之前的形式相同，只是 $k=2$ 且 $a = \\frac{4\\alpha}{3}$。\n$$\n\\int_{0}^{\\infty} r^{2} \\exp\\left(-\\frac{4\\alpha r}{3}\\right) \\, dr = \\frac{2!}{\\left(\\frac{4\\alpha}{3}\\right)^{3}} = \\frac{2}{\\frac{64\\alpha^{3}}{27}} = \\frac{54}{64\\alpha^{3}} = \\frac{27}{32\\alpha^{3}}\n$$\n因此，交换能为：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -4\\pi C_{x} n_{0}^{4/3} \\left(\\frac{27}{32\\alpha^{3}}\\right) = -C_{x} \\frac{108\\pi}{32\\alpha^{3}} n_{0}^{4/3} = -C_{x} \\frac{27\\pi}{8\\alpha^{3}} n_{0}^{4/3}\n$$\n现在，我们代入 $n_{0} = \\frac{N \\alpha^{3}}{8\\pi}$：\n$$\nn_{0}^{4/3} = \\left(\\frac{N \\alpha^{3}}{8\\pi}\\right)^{4/3} = \\frac{N^{4/3} (\\alpha^{3})^{4/3}}{(8\\pi)^{4/3}} = \\frac{N^{4/3} \\alpha^{4}}{((2)^{3})^{4/3} \\pi^{4/3}} = \\frac{N^{4/3} \\alpha^{4}}{16\\pi^{4/3}}\n$$\n将此代入 $E_{x}^{\\mathrm{LDA}}[n]$ 的表达式中：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -C_{x} \\frac{27\\pi}{8\\alpha^{3}} \\left(\\frac{N^{4/3} \\alpha^{4}}{16\\pi^{4/3}}\\right) = -C_{x} \\frac{27 N^{4/3} \\alpha}{128 \\pi^{1/3}}\n$$\n最后，我们代入 $C_{x}$ 的表达式：\n$$\nE_{x}^{\\mathrm{LDA}}[n] = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3} \\frac{27 N^{4/3} \\alpha}{128 \\pi^{1/3}} = -\\frac{3 \\cdot 27 \\cdot 3^{1/3}}{4 \\cdot 128 \\cdot \\pi^{1/3} \\cdot \\pi^{1/3}} N^{4/3} \\alpha = -\\frac{81 \\cdot 3^{1/3}}{512 \\pi^{2/3}} N^{4/3} \\alpha\n$$\n\n**第三步：关联能 $E_{c}^{\\mathrm{LDA}}$ 的计算**\n题目给出了每个粒子的关联能为 $\\varepsilon_{c}(n) = A \\ln r_{s}(n) + B$。总关联能为：\n$$\nE_{c}^{\\mathrm{LDA}}[n] = \\int n(\\mathbf{r}) \\varepsilon_{c}(n(\\mathbf{r})) \\, d^{3}r = \\int n(\\mathbf{r}) \\left[ A \\ln r_{s}(n(\\mathbf{r})) + B \\right] \\, d^{3}r\n$$\n这可以分为两项：\n$$\nE_{c}^{\\mathrm{LDA}}[n] = A \\int n(\\mathbf{r}) \\ln r_{s}(n(\\mathbf{r})) \\, d^{3}r + B \\int n(\\mathbf{r}) \\, d^{3}r = A \\int n(\\mathbf{r}) \\ln r_{s}(n(\\mathbf{r})) \\, d^{3}r + BN\n$$\n我们必须计算积分项。首先，用 $n$ 表示 $\\ln r_s(n)$：\n$$\nr_{s}(n) = \\left( \\frac{3}{4\\pi n} \\right)^{1/3} \\implies \\ln r_{s}(n) = \\frac{1}{3} \\ln\\left(\\frac{3}{4\\pi n}\\right) = \\frac{1}{3} \\left( \\ln\\left(\\frac{3}{4\\pi}\\right) - \\ln(n) \\right)\n$$\n积分变为：\n$$\n\\int n(\\mathbf{r}) \\ln r_{s}(n(\\mathbf{r})) \\, d^{3}r = \\frac{1}{3} \\int n(\\mathbf{r}) \\left( \\ln\\left(\\frac{3}{4\\pi}\\right) - \\ln(n(\\mathbf{r})) \\right) \\, d^{3}r\n$$\n$$\n= \\frac{1}{3} \\ln\\left(\\frac{3}{4\\pi}\\right) \\int n(\\mathbf{r}) \\, d^{3}r - \\frac{1}{3} \\int n(\\mathbf{r}) \\ln(n(\\mathbf{r})) \\, d^{3}r = \\frac{N}{3} \\ln\\left(\\frac{3}{4\\pi}\\right) - \\frac{1}{3} \\int n(\\mathbf{r}) \\ln(n(\\mathbf{r})) \\, d^{3}r\n$$\n我们来计算剩余的积分 $\\int n \\ln n \\, d^3r$：\n$$\n\\int n(r) \\ln(n(r)) 4\\pi r^{2} \\, dr = \\int_{0}^{\\infty} (n_{0} \\exp(-\\alpha r)) \\ln(n_{0} \\exp(-\\alpha r)) 4\\pi r^{2} \\, dr\n$$\n利用 $\\ln(n_{0} \\exp(-\\alpha r)) = \\ln(n_{0}) - \\alpha r$：\n$$\n= 4\\pi \\int_{0}^{\\infty} n_{0} \\exp(-\\alpha r) (\\ln(n_{0}) - \\alpha r) r^{2} \\, dr\n$$\n$$\n= 4\\pi n_{0} \\ln(n_{0}) \\int_{0}^{\\infty} r^{2} \\exp(-\\alpha r) \\, dr - 4\\pi n_{0} \\alpha \\int_{0}^{\\infty} r^{3} \\exp(-\\alpha r) \\, dr\n$$\n我们已经知道第一个积分是 $2/\\alpha^{3}$。第二个积分是 $\\int r^{3} \\exp(-\\alpha r) \\, dr = \\frac{3!}{\\alpha^4} = \\frac{6}{\\alpha^4}$。\n$$\n\\int n \\ln n \\, d^3r = 4\\pi n_{0} \\ln(n_{0}) \\left(\\frac{2}{\\alpha^{3}}\\right) - 4\\pi n_{0} \\alpha \\left(\\frac{6}{\\alpha^{4}}\\right) = \\frac{8\\pi n_{0}}{\\alpha^{3}} \\ln(n_{0}) - \\frac{24\\pi n_{0}}{\\alpha^{3}}\n$$\n使用归一化关系 $N = \\frac{8\\pi n_{0}}{\\alpha^{3}}$，上式简化为：\n$$\n\\int n \\ln n \\, d^3r = N \\ln(n_{0}) - 3N\n$$\n现在代入 $n_{0} = \\frac{N \\alpha^{3}}{8\\pi}$：\n$$\n\\int n \\ln n \\, d^3r = N \\ln\\left(\\frac{N \\alpha^{3}}{8\\pi}\\right) - 3N\n$$\n将此代回 $\\int n \\ln r_{s} \\, d^3r$ 的表达式中：\n$$\n\\int n \\ln r_{s} \\, d^3r = \\frac{N}{3} \\ln\\left(\\frac{3}{4\\pi}\\right) - \\frac{1}{3} \\left[ N \\ln\\left(\\frac{N \\alpha^{3}}{8\\pi}\\right) - 3N \\right]\n$$\n$$\n= \\frac{N}{3} \\left[ \\ln\\left(\\frac{3}{4\\pi}\\right) - \\ln\\left(\\frac{N \\alpha^{3}}{8\\pi}\\right) + 3 \\right] = \\frac{N}{3} \\left[ \\ln\\left( \\frac{3}{4\\pi} \\cdot \\frac{8\\pi}{N \\alpha^{3}} \\right) + 3 \\right] = \\frac{N}{3} \\left[ \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + 3 \\right]\n$$\n最后，我们组合出总关联能 $E_{c}^{\\mathrm{LDA}}$：\n$$\nE_{c}^{\\mathrm{LDA}}[n] = A \\left( \\frac{N}{3} \\left[ \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + 3 \\right] \\right) + BN = \\frac{AN}{3} \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + AN + BN\n$$\n$$\nE_{c}^{\\mathrm{LDA}}[n] = \\frac{AN}{3} \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + (A+B)N\n$$\n\n**第四步：总交换关联能**\n总交换关联能是交换部分和关联部分之和：$E_{xc}^{\\mathrm{LDA}}[n] = E_{x}^{\\mathrm{LDA}}[n] + E_{c}^{\\mathrm{LDA}}[n]$。\n$$\nE_{xc}^{\\mathrm{LDA}}[n] = -\\frac{81 \\cdot 3^{1/3}}{512 \\pi^{2/3}} N^{4/3} \\alpha + \\frac{AN}{3} \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + (A+B)N\n$$\n这就是以指定常数表示的总交换关联能的最终闭合形式解析表达式。", "answer": "$$\n\\boxed{-\\frac{81 \\cdot 3^{1/3}}{512 \\pi^{2/3}} N^{4/3} \\alpha + \\frac{AN}{3} \\ln\\left(\\frac{6}{N\\alpha^{3}}\\right) + (A+B)N}\n$$", "id": "2998104"}, {"introduction": "虽然LDA提供了一个简单的计算框架，但它的表现究竟如何？这项练习 [@problem_id:2998129] 让你能够批判性地评估LDA最显著的缺陷之一：自相互作用误差。通过将泛函应用于单电子的类氢原子体系——在该体系中，精确的交换能必须完全抵消哈特里自排斥能——你可以量化这一误差，并理解为何需要发展更高级的泛函。", "problem": "考虑一个核电荷为 $Z$ 的单电子类氢 Kohn-Sham 体系，其归一化的 1s 轨道密度为\n\n$$\nn_{Z}(\\mathbf{r}) \\equiv \\frac{Z^{3}}{\\pi a_{0}^{3}} \\exp\\left(-\\frac{2 Z r}{a_{0}}\\right),\n$$\n\n其中 $r = |\\mathbf{r}|$，$a_{0}$ 是玻尔半径。使用 Hartree 原子单位，因此 $a_{0}=1$ 且能量以 Hartree 为单位。在精确的 Kohn-Sham 密度泛函理论（DFT）中，对于单电子密度，交换相关能恰好抵消了经典静电（Hartree）自相互作用，且精确的相关能为零。与之相反，局域密度近似（LDA）和常见的广义梯度近似（GGAs）无法实现这种精确抵消。\n\n仅从下面列出的基本定义和标准 DFT 构建模块出发，完成以下任务：\n- 解析地推导 Hartree 能量 $E_{\\mathrm{H}}[n_{Z}]$。\n- 使用自旋非极化密度的局域密度近似交换泛函，\n  \n$$\n  E_{x}^{\\mathrm{LDA}}[n] = - C_{x} \\int d^{3}r\\, n(\\mathbf{r})^{4/3}, \\quad C_{x} \\equiv \\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3},\n$$\n\n  并忽略相关能（与精确单电子极限一致，设 $E_{c}^{\\mathrm{approx}} \\equiv 0$），计算 $E_{x}^{\\mathrm{LDA}}[n_{Z}]$。\n- 使用二阶梯度展开近似（许多广义梯度近似共有的小梯度极限），通过增强因子\n  \n$$\n  F_{x}(s) = 1 + \\mu s^{2} + \\mathcal{O}(s^{4}),\n$$\n\n  对交换能量密度进行建模，其中 $s(\\mathbf{r}) \\equiv \\dfrac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r})\\,n(\\mathbf{r})}$ 是约化密度梯度，而 $k_{F}(\\mathbf{r}) \\equiv \\big(3\\pi^{2}n(\\mathbf{r})\\big)^{1/3}$ 是费米波矢。因此，\n  \n$$\n  E_{x}^{\\mathrm{GEA2}}[n] = - C_{x} \\int d^{3}r\\, n(\\mathbf{r})^{4/3}\\Big(1 + \\mu s(\\mathbf{r})^{2}\\Big),\n$$\n\n  其中 $\\mu$ 是一个正常数（保留为符号）。以闭合形式计算 $E_{x}^{\\mathrm{GEA2}}[n_{Z}]$。\n- 对于每种近似 $\\mathrm{approx} \\in \\{\\mathrm{LDA}, \\mathrm{GEA2}\\}$，定义并计算剩余自相互作用误差\n  \n$$\n  \\Delta E^{(\\mathrm{approx})}(Z) \\equiv E_{\\mathrm{H}}[n_{Z}] + E_{xc}^{(\\mathrm{approx})}[n_{Z}],\n$$\n\n  其中因为您已设置 $E_{c}^{\\mathrm{approx}} \\equiv 0$，所以 $E_{xc}^{(\\mathrm{approx})} \\equiv E_{x}^{(\\mathrm{approx})}$。明确证明 $\\Delta E^{(\\mathrm{approx})}(Z) \\neq 0$。\n- 将最终结果表示为一个包含两个闭合形式解析表达式 $\\big[\\Delta E^{(\\mathrm{LDA})}(Z),\\ \\Delta E^{(\\mathrm{GEA2})}(Z;\\mu)\\big]$ 的单行矩阵。结果以 Hartree 单位表示。在最终的方框答案中不要包含任何数值近似或单位。", "solution": "问题要求使用两种近似的交换相关泛函：局域密度近似（LDA）和二阶梯度展开近似（GEA2），来计算核电荷为 $Z$ 的单电子类氢体系的剩余自相互作用误差。相关能被设为零，因此 $E_{xc}^{\\mathrm{approx}} = E_{x}^{\\mathrm{approx}}$。\n\n首先对问题进行验证。\n\n**步骤 1：提取已知条件**\n- 体系：单电子类氢 Kohn-Sham 体系，核电荷为 $Z$。\n- 密度：$n_{Z}(\\mathbf{r}) = \\frac{Z^{3}}{\\pi a_{0}^{3}} \\exp\\left(-\\frac{2 Z r}{a_{0}}\\right)$，其中 $r=|\\mathbf{r}|$。\n- 单位：Hartree 原子单位，所以 $a_{0}=1$ 且能量以 Hartree 为单位。密度变为 $n_{Z}(r) = \\frac{Z^{3}}{\\pi} \\exp(-2 Z r)$。\n- Hartree 能量：$E_{\\mathrm{H}}[n] = \\frac{1}{2} \\iint d^{3}r d^{3}r' \\frac{n(\\mathbf{r}) n(\\mathbf{r'})}{|\\mathbf{r} - \\mathbf{r'}|}$。\n- LDA 交换泛函：$E_{x}^{\\mathrm{LDA}}[n] = - C_{x} \\int d^{3}r\\, n(\\mathbf{r})^{4/3}$，其中 $C_{x} = \\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3}$。\n- GEA2 交换泛函：$E_{x}^{\\mathrm{GEA2}}[n] = - C_{x} \\int d^{3}r\\, n(\\mathbf{r})^{4/3}\\Big(1 + \\mu s(\\mathbf{r})^{2}\\Big)$，其中 $\\mu$ 是一个正常数。\n- 约化密度梯度：$s(\\mathbf{r}) = \\dfrac{|\\nabla n(\\mathbf{r})|}{2 k_{F}(\\mathbf{r})\\,n(\\mathbf{r})}$。\n- 费米波矢：$k_{F}(\\mathbf{r}) = (3\\pi^{2}n(\\mathbf{r}))^{1/3}$。\n- 剩余自相互作用误差：$\\Delta E^{(\\mathrm{approx})}(Z) = E_{\\mathrm{H}}[n_{Z}] + E_{xc}^{(\\mathrm{approx})}[n_{Z}]$。\n- 目标：行矩阵 $[\\Delta E^{(\\mathrm{LDA})}(Z), \\Delta E^{(\\mathrm{GEA2})}(Z;\\mu)]$ 的解析表达式。\n\n**步骤 2：使用提取的已知条件进行验证**\n该问题具有科学依据，提法恰当、客观、完整、一致，并需要基于密度泛函理论的基本原理进行非平凡的推导。它没有违反任何无效性标准。\n\n**步骤 3：结论和行动**\n问题是**有效的**。将提供完整的解答。\n\n**Hartree 能量 $E_{\\mathrm{H}}[n_Z]$ 的推导**\nHartree 能量是电荷分布 $n_Z(\\mathbf{r})$ 的经典静电自排斥能。对于球对称的 1s 密度，这是一个标准结果。\n$$ E_{\\mathrm{H}}[n_Z] = \\frac{1}{2} \\int d^3r \\int d^3r' \\frac{n_Z(r) n_Z(r')}{|\\mathbf{r}-\\mathbf{r'}|} $$\n对于氢 1s 轨道密度，该积分的计算结果为一个已知值。我们可以进行显式计算。由密度 $n_Z(r)$ 产生的势 $\\phi(r)$ 为 $\\phi(r) = \\frac{1}{r} - (Z + \\frac{1}{r})\\exp(-2Zr)$。Hartree 能量则为 $E_{\\mathrm{H}} = \\frac{1}{2}\\int n_Z(r) \\phi(r) d^3r$。\n$$ E_{\\mathrm{H}} = \\frac{1}{2} \\int_0^\\infty 4\\pi r^2 \\left( \\frac{Z^3}{\\pi} \\exp(-2Zr) \\right) \\left( \\frac{1}{r} - (Z+\\frac{1}{r})\\exp(-2Zr) \\right) dr $$\n$$ E_{\\mathrm{H}} = 2Z^3 \\left[ \\int_0^\\infty r \\exp(-2Zr) dr - Z \\int_0^\\infty r^2 \\exp(-4Zr) dr - \\int_0^\\infty r \\exp(-4Zr) dr \\right] $$\n使用标准积分 $\\int_0^\\infty x^k \\exp(-ax) dx = k!/a^{k+1}$:\n- $\\int_0^\\infty r \\exp(-2Zr) dr = \\frac{1!}{(2Z)^2} = \\frac{1}{4Z^2}$\n- $\\int_0^\\infty r^2 \\exp(-4Zr) dr = \\frac{2!}{(4Z)^3} = \\frac{2}{64Z^3} = \\frac{1}{32Z^3}$\n- $\\int_0^\\infty r \\exp(-4Zr) dr = \\frac{1!}{(4Z)^2} = \\frac{1}{16Z^2}$\n代入这些结果：\n$$ E_{\\mathrm{H}}[n_Z] = 2Z^3 \\left[ \\frac{1}{4Z^2} - Z\\left(\\frac{1}{32Z^3}\\right) - \\frac{1}{16Z^2} \\right] = 2Z^3 \\left[ \\frac{8}{32Z^2} - \\frac{1}{32Z^2} - \\frac{2}{32Z^2} \\right] = 2Z^3 \\left( \\frac{5}{32Z^2} \\right) = \\frac{5}{16}Z $$\n对于单电子体系，精确交换能是 Hartree 能量的负值，$E_x^{\\text{exact}}[n_Z] = -E_{\\mathrm{H}}[n_Z] = -\\frac{5}{16}Z$。\n\n**LDA 交换能量 $E_{x}^{\\mathrm{LDA}}[n_Z]$ 的推导**\nLDA 交换能由 $E_{x}^{\\mathrm{LDA}}[n] = -C_x \\int n(\\mathbf{r})^{4/3} d^3r$ 给出。我们计算关于 $n_Z(r)$ 的积分。\n$$ n_Z(r)^{4/3} = \\left( \\frac{Z^3}{\\pi} \\exp(-2Zr) \\right)^{4/3} = \\frac{Z^4}{\\pi^{4/3}} \\exp\\left(-\\frac{8Zr}{3}\\right) $$\n积分为：\n$$ \\int n_Z(r)^{4/3} d^3r = \\int_0^\\infty 4\\pi r^2 \\left( \\frac{Z^4}{\\pi^{4/3}} \\exp\\left(-\\frac{8Zr}{3}\\right) \\right) dr = \\frac{4\\pi Z^4}{\\pi^{4/3}} \\int_0^\\infty r^2 \\exp\\left(-\\frac{8Zr}{3}\\right) dr $$\n$$ \\int n_Z(r)^{4/3} d^3r = \\frac{4Z^4}{\\pi^{1/3}} \\left( \\frac{2!}{(8Z/3)^3} \\right) = \\frac{4Z^4}{\\pi^{1/3}} \\frac{2 \\cdot 27}{512Z^3} = \\frac{216Z}{512\\pi^{1/3}} = \\frac{27Z}{64\\pi^{1/3}} $$\n现在，乘以常数 $-C_x$：\n$$ E_{x}^{\\mathrm{LDA}}[n_Z] = -C_x \\left( \\frac{27Z}{64\\pi^{1/3}} \\right) = -\\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3} \\frac{27Z}{64\\pi^{1/3}} = -\\frac{3 \\cdot 3^{1/3}}{4\\pi^{1/3}} \\frac{3^3 Z}{64\\pi^{1/3}} = -\\frac{3^{1+1/3+3} Z}{256\\pi^{1/3+1/3}} $$\n$$ E_{x}^{\\mathrm{LDA}}[n_Z] = -\\frac{3^{13/3}Z}{256\\pi^{2/3}} $$\n\n**GEA2 交换能量 $E_{x}^{\\mathrm{GEA2}}[n_Z]$ 的推导**\nGEA2 泛函在 LDA 能量的基础上增加了一个修正项：$E_{x}^{\\mathrm{GEA2}}[n] = E_{x}^{\\mathrm{LDA}}[n] + \\Delta E_{x}^{\\mathrm{GEA2}}[n]$，其中 $\\Delta E_{x}^{\\mathrm{GEA2}}[n] = -C_x \\mu \\int n(\\mathbf{r})^{4/3} s(\\mathbf{r})^2 d^3r$。\n首先，我们求出约化密度梯度 $s(r)$:\n$$ |\\nabla n_Z(r)| = \\left| \\frac{d}{dr} \\left( \\frac{Z^3}{\\pi} \\exp(-2Zr) \\right) \\right| = \\left| \\frac{Z^3}{\\pi} (-2Z) \\exp(-2Zr) \\right| = 2Z n_Z(r) $$\n$$ k_F(r) = (3\\pi^2 n_Z(r))^{1/3} $$\n$$ s(r) = \\frac{|\\nabla n_Z(r)|}{2 k_F(r) n_Z(r)} = \\frac{2Z n_Z(r)}{2 (3\\pi^2 n_Z(r))^{1/3} n_Z(r)} = \\frac{Z}{(3\\pi^2)^{1/3} n_Z(r)^{1/3}} $$\n约化密度梯度的平方是：\n$$ s(r)^2 = \\frac{Z^2}{(3\\pi^2)^{2/3} n_Z(r)^{2/3}} $$\n现在我们计算修正积分：\n$$ \\int n_Z(r)^{4/3} s(r)^2 d^3r = \\int n_Z(r)^{4/3} \\frac{Z^2}{(3\\pi^2)^{2/3} n_Z(r)^{2/3}} d^3r = \\frac{Z^2}{(3\\pi^2)^{2/3}} \\int n_Z(r)^{2/3} d^3r $$\n我们需要计算 $n_Z(r)^{2/3}$ 的积分：\n$$ n_Z(r)^{2/3} = \\left(\\frac{Z^3}{\\pi} \\exp(-2Zr)\\right)^{2/3} = \\frac{Z^2}{\\pi^{2/3}} \\exp\\left(-\\frac{4Zr}{3}\\right) $$\n$$ \\int n_Z(r)^{2/3} d^3r = \\int_0^\\infty 4\\pi r^2 \\frac{Z^2}{\\pi^{2/3}} \\exp\\left(-\\frac{4Zr}{3}\\right) dr = \\frac{4\\pi Z^2}{\\pi^{2/3}} \\int_0^\\infty r^2 \\exp\\left(-\\frac{4Zr}{3}\\right) dr $$\n$$ \\int n_Z(r)^{2/3} d^3r = \\frac{4Z^2}{\\pi^{-1/3}} \\left(\\frac{2!}{(4Z/3)^3}\\right) = 4\\pi^{1/3} Z^2 \\frac{2 \\cdot 27}{64Z^3} = \\frac{216\\pi^{1/3}}{64Z} = \\frac{27\\pi^{1/3}}{8Z} $$\n修正项变为：\n$$ \\Delta E_{x}^{\\mathrm{GEA2}}[n_Z] = -C_x \\mu \\left( \\frac{Z^2}{(3\\pi^2)^{2/3}} \\right) \\left( \\frac{27\\pi^{1/3}}{8Z} \\right) = -C_x \\mu Z \\frac{27\\pi^{1/3}}{8 \\cdot 3^{2/3}\\pi^{4/3}} = -C_x \\mu Z \\frac{3^3 \\pi^{1/3}}{8 \\cdot 3^{2/3}\\pi^{4/3}} $$\n$$ \\Delta E_{x}^{\\mathrm{GEA2}}[n_Z] = -C_x \\mu Z \\frac{3^{7/3}}{8\\pi} $$\n代入 $C_x = \\frac{3}{4}\\left(\\frac{3}{\\pi}\\right)^{1/3} = \\frac{3^{4/3}}{4\\pi^{1/3}}$:\n$$ \\Delta E_{x}^{\\mathrm{GEA2}}[n_Z] = -\\left(\\frac{3^{4/3}}{4\\pi^{1/3}}\\right) \\mu Z \\frac{3^{7/3}}{8\\pi} = -\\frac{3^{4/3+7/3} \\mu Z}{32\\pi^{1/3+1}} = -\\frac{3^{11/3}\\mu Z}{32\\pi^{4/3}} $$\n因此，完整的 GEA2 交换能是：\n$$ E_{x}^{\\mathrm{GEA2}}[n_Z] = E_{x}^{\\mathrm{LDA}}[n_Z] + \\Delta E_{x}^{\\mathrm{GEA2}}[n_Z] = -\\frac{3^{13/3}Z}{256\\pi^{2/3}} - \\frac{3^{11/3}\\mu Z}{32\\pi^{4/3}} $$\n\n**剩余自相互作用误差的计算**\n剩余自相互作用误差为 $\\Delta E^{(\\mathrm{approx})}(Z) = E_{\\mathrm{H}}[n_Z] + E_{x}^{(\\mathrm{approx})}[n_Z]$。\n\n对于 LDA：\n$$ \\Delta E^{(\\mathrm{LDA})}(Z) = \\frac{5}{16}Z - \\frac{3^{13/3}Z}{256\\pi^{2/3}} = Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}}\\right) $$\n该表达式是非零的，因为当 $Z=1$ 时，$\\frac{5}{16} \\approx 0.3125$，而 $\\frac{3^{13/3}}{256\\pi^{2/3}} \\approx 0.2127$。\n\n对于 GEA2：\n$$ \\Delta E^{(\\mathrm{GEA2})}(Z) = E_{\\mathrm{H}}[n_Z] + E_{x}^{\\mathrm{GEA2}}[n_Z] = \\frac{5}{16}Z - \\frac{3^{13/3}Z}{256\\pi^{2/3}} - \\frac{3^{11/3}\\mu Z}{32\\pi^{4/3}} $$\n$$ \\Delta E^{(\\mathrm{GEA2})}(Z) = Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}} - \\frac{3^{11/3}\\mu}{32\\pi^{4/3}}\\right) $$\n由于 $\\mu > 0$，修正项非零，因此误差的总表达式通常也非零。\n\n**最终结果**\n所求的两个量是 $\\Delta E^{(\\mathrm{LDA})}(Z)$ 和 $\\Delta E^{(\\mathrm{GEA2})}(Z;\\mu)$ 的解析表达式。\n第一个分量是：\n$$ \\Delta E^{(\\mathrm{LDA})}(Z) = Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}}\\right) $$\n第二个分量是：\n$$ \\Delta E^{(\\mathrm{GEA2})}(Z;\\mu) = Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}} - \\frac{3^{11/3}\\mu}{32\\pi^{4/3}}\\right) $$\n按要求将它们格式化为行矩阵。", "answer": "$$\n\\boxed{\\begin{pmatrix} Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}}\\right) & Z\\left(\\frac{5}{16} - \\frac{3^{13/3}}{256\\pi^{2/3}} - \\frac{3^{11/3}\\mu}{32\\pi^{4/3}}\\right) \\end{pmatrix}}\n$$", "id": "2998129"}, {"introduction": "在科恩-沈密度泛函理论中，寻找基态能量不仅仅是评估一个泛函；它需要通过迭代来寻找自洽的电子密度。这个被称为自洽场（SCF）程序的数值过程可能会遇到不稳定的问题。这项练习 [@problem_id:2998091] 提供了一个简化但功能强大的模型来揭开SCF收敛的神秘面纱，让你能够模拟“电荷振荡”不稳定性，并测试在实际DFT计算中至关重要的预处理技术。", "problem": "在Kohn-Sham密度泛函理论（KS-DFT）中，自洽场（SCF）过程旨在寻找一个密度映射泛函的不动点，该泛函将输入密度与通过求解Kohn-Sham方程得到的输出密度关联起来。此过程的一个基本抽象是针对一个标量序参量的不动点迭代，该序参量模型化了电子密度的低波矢分量。考虑以下一维非线性映射，它近似了不动点附近的Kohn-Sham密度响应：\n$$\nF(n) \\equiv n_\\star - g\\,(n - n_\\star) + c\\,(n - n_\\star)^3,\n$$\n其中 $n$ 是当前迭代值（一个标量），$n_\\star$ 是目标不动点，$g \\ge 0$ 是一个有效线性响应增益，它捕捉了长波Hartree响应（电荷振荡）的增强效应，$c \\ge 0$ 是一个小的三次非线性项，用于模拟 $n_\\star$ 附近自由能形貌的弱非谐性。残差为\n$$\nr(n) \\equiv F(n) - n.\n$$\n那么，一个简单的混合更新规则是\n$$\nn^{(k+1)} = n^{(k)} + \\alpha\\,P\\,r\\left(n^{(k)}\\right),\n$$\n其中 $\\alpha \\in (0,1]$ 是一个混合参数，$P$ 是一个标量预条件子，用于抑制残差的长波分量。将探讨三种预条件选择：\n- 无预条件：$P \\equiv 1$。\n- 恒定预条件：$P \\equiv p_0$，其中 $p_0 \\in [0,1]$ 是一个固定的标量。\n- 类Kerker预条件：$P(q) \\equiv \\dfrac{q^2}{q^2 + k_s^2}$，其中 $q \\ge 0$ 是一个代表性波数，$k_s > 0$ 是一个屏蔽参数。\n\n从不动点迭代和线性响应稳定性分析的基本原理出发，您需要：\n- 作为一个确定性程序，实现上面定义的映射 $F(n)$ 和SCF迭代，包括三种预条件选择。\n- 使用双精度算术。当绝对误差满足 $|n^{(k)} - n_\\star| < \\varepsilon$（容差 $\\varepsilon = 10^{-8}$）时，宣告收敛；如果在 $K_{\\max} = 500$ 次迭代内未收敛，则宣告失败。如果在任何时刻 $|n^{(k)} - n_\\star|$ 超过 $10^{12}$ 或遇到非有限值，则终止并宣告该测试用例失败。\n- 对于每个测试用例，报告达到收敛标准所需的迭代次数 $k$；如果失败，则报告 $-1$。\n\n测试套件包含以下七个用例（每个用例指定了 $(n_0, n_\\star, g, c, \\alpha, \\text{预条件子}, \\text{参数})$）：\n1. 强电荷振荡，无预条件（预计会振荡发散）：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;9.0,\\; c=\\;0.1,\\; \\alpha=\\;0.3,\\; P\\equiv 1,\\;\\text{无参数})$。\n2. 与用例1相同，但使用恒定预条件以稳定收敛：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;9.0,\\; c=\\;0.1,\\; \\alpha=\\;0.3,\\; P\\equiv p_0,\\; p_0=\\;0.25)$。\n3. 与用例1相同，但在小波数下使用类Kerker预条件：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;9.0,\\; c=\\;0.1,\\; \\alpha=\\;0.3,\\; P(q)=\\dfrac{q^2}{q^2 + k_s^2},\\; q=\\;0.2,\\; k_s=\\;1.0)$。\n4. 弱混合，无预条件（稳定但较慢）：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;9.0,\\; c=\\;0.1,\\; \\alpha=\\;0.05,\\; P\\equiv 1,\\;\\text{无参数})$。\n5. 病态的恒定预条件子 $p_0=\\;0$（无更新；除非已收敛否则会失败）：$(n_0=\\;1.5,\\; n_\\star=\\;1.0,\\; g=\\;9.0,\\; c=\\;0.1,\\; \\alpha=\\;0.3,\\; P\\equiv p_0,\\; p_0=\\;0.0)$。\n6. 极强振荡，无预条件（预计会发散）：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;30.0,\\; c=\\;0.1,\\; \\alpha=\\;0.2,\\; P\\equiv 1,\\;\\text{无参数})$。\n7. 用例6，但在非常小的波数下使用类Kerker预条件：$(n_0=\\;2.0,\\; n_\\star=\\;1.0,\\; g=\\;30.0,\\; c=\\;0.1,\\; \\alpha=\\;0.2,\\; P(q)=\\dfrac{q^2}{q^2 + k_s^2},\\; q=\\;0.1,\\; k_s=\\;1.0)$。\n\n您的程序应产生单行输出，其中包含一个由方括号括起来的、逗号分隔的整数列表形式的结果（例如，“[12,-1,34]”）。列表中的第 $i$ 个整数必须是第 $i$ 个测试用例的迭代次数，如果该用例在规定标准下未能收敛，则为 $-1$。不允许有任何其他输出。此处所有量均为无量纲；不需要物理单位。", "solution": "该问题为Kohn-Sham密度泛函理论（KS-DFT）核心的自洽场（SCF）迭代提出了一个简化的一维模型。目标是实现一个确定性程序，以在各种条件下模拟此迭代过程，并分析其收敛行为。该模型捕捉了关键的物理现象，例如电荷振荡不稳定性以及预条件的稳定效应。\n\n**迭代的数学表述**\n\n问题的核心是由以下更新规则定义的不动点迭代：\n$$\nn^{(k+1)} = n^{(k)} + \\alpha\\,P\\,r\\left(n^{(k)}\\right)\n$$\n其中 $n^{(k)}$ 是第 $k$ 次迭代时的序参量值，$\\alpha \\in (0,1]$ 是一个混合参数，$P$ 是一个预条件子，$r(n^{(k)})$ 是残差。\n\n残差 $r(n)$ 衡量当前状态 $n$ 距离映射 $F(n)$ 的不动点有多远。它定义为：\n$$\nr(n) \\equiv F(n) - n\n$$\n\n非线性映射 $F(n)$ 模型化了电子密度的响应。它由围绕真实不动点 $n_\\star$ 的三次展开给出：\n$$\nF(n) \\equiv n_\\star - g\\,(n - n_\\star) + c\\,(n - n_\\star)^3\n$$\n此处，$g \\ge 0$ 代表线性响应增益，$c \\ge 0$ 是一个非线性系数。\n\n将 $F(n)$ 和 $r(n)$ 的定义代入更新规则，我们可以分析误差 $\\delta_k \\equiv n^{(k)} - n_\\star$ 的动力学。\n残差可以用误差 $\\delta_k$ 表示：\n$$\nr(n^{(k)}) = \\left( n_\\star - g\\,\\delta_k + c\\,\\delta_k^3 \\right) - (n_\\star + \\delta_k) = -(1+g)\\,\\delta_k + c\\,\\delta_k^3\n$$\n那么误差 $\\delta_k$ 的更新规则是：\n$$\n\\delta_{k+1} = n^{(k+1)} - n_\\star = \\left( n^{(k)} + \\alpha\\,P\\,r(n^{(k)}) \\right) - n_\\star = (n_\\star + \\delta_k) + \\alpha\\,P\\,r(n^{(k)}) - n_\\star\n$$\n$$\n\\delta_{k+1} = \\delta_k + \\alpha\\,P\\,\\left( -(1+g)\\,\\delta_k + c\\,\\delta_k^3 \\right) = \\delta_k \\left[ 1 - \\alpha\\,P\\,(1+g) \\right] + \\alpha\\,P\\,c\\,\\delta_k^3\n$$\n\n**线性稳定性分析**\n\n为了收敛，当 $k \\to \\infty$ 时，误差 $\\delta_k$ 必须趋近于 $0$。在不动点附近，误差 $\\delta_k$ 很小，可以忽略三次项 $\\alpha\\,P\\,c\\,\\delta_k^3$。线性化的更新规则变为：\n$$\n\\delta_{k+1} \\approx \\delta_k \\left[ 1 - \\alpha\\,P\\,(1+g) \\right]\n$$\n这是一个等比级数。当且仅当乘法因子的绝对值小于 $1$ 时，才能保证收敛：\n$$\n\\left| 1 - \\alpha\\,P\\,(1+g) \\right| < 1\n$$\n该不等式等价于 $-1 < 1 - \\alpha\\,P\\,(1+g) < 1$，可简化为：\n$$\n0 < \\alpha\\,P\\,(1+g) < 2\n$$\n由于 $\\alpha > 0$，$P \\ge 0$ 且 $g \\ge 0$，只要 $P \\ne 0$，左侧不等式 $0 < \\alpha\\,P\\,(1+g)$ 就成立。因此，稳定性的临界条件是：\n$$\n\\alpha\\,P\\,(1+g) < 2\n$$\n如果违反此条件，特别是当 $\\alpha\\,P\\,(1+g) > 2$ 时，乘数 $1 - \\alpha\\,P\\,(1+g)$ 将小于 $-1$，导致振荡发散，这是实际DFT计算中电荷振荡不稳定性的典型行为。\n\n**预条件策略**\n\n预条件子 $P$ 的作用是修改更新步长以确保稳定性。问题指定了三种类型：\n1.  **无预条件 ($P \\equiv 1$)：** 更新步长与原始残差成正比。如果 $\\alpha(1+g) \\ge 2$，则此方法不稳定。\n2.  **恒定预条件 ($P \\equiv p_0$)：** 应用一个恒定的阻尼因子 $p_0 \\in [0,1]$。通过选择一个足够小的 $p_0$，即使对于大的 $g$，也可以满足稳定性条件 $\\alpha\\,p_0\\,(1+g) < 2$。病态情况 $p_0=0$ 会冻结迭代，因为更新步长始终为零。\n3.  **类Kerker预条件 ($P(q) = \\frac{q^2}{q^2 + k_s^2}$)：** 这种形式具有物理动机。在实际系统中，有问题的​​不稳定性（大 $g$）发生在长波长处，对应于小波矢 $q$。该预条件子具有当 $q \\to 0$ 时 $P(q) \\to 0$ 的性质，从而有效抑制不稳定模式。对于标量模型，$q$ 是一个给定的参数，代表被建模模式的波矢。\n\n**算法设计与实现**\n\n解决方案需要实现一个程序，为提供的7个不同测试用例模拟SCF迭代。对于每个用例，程序将：\n1.  初始化迭代计数器 $k=0$ 和序参量 $n^{(0)} = n_0$。所有计算均使用双精度浮点数。\n2.  根据指定的类型和参数计算预条件子 $P$ 的值。\n3.  循环最多 $K_{\\max}=500$ 次迭代。在每个迭代步骤中（从 $k=0$ 开始）：\n    a. 检查收敛性：如果 $|n^{(k)} - n_\\star| < \\varepsilon = 10^{-8}$，则过程成功。所用迭代次数为 $k$，并报告此值。\n    b. 检查失败：如果在任何时刻 $|n^{(k)} - n_\\star|$ 超过 $10^{12}$ 或 $n^{(k)}$ 变为非有限值（例如 `NaN` 或 `infinity`），则迭代失败。报告值 $-1$。\n    c. 如果未收敛也未失败，且未达到迭代次数限制（即 $k < K_{\\max}$），则使用完整的非线性更新规则计算下一个值 $n^{(k+1)}$。\n4.  如果在检查状态 $n^{(500)}$ 后循环完成仍未满足收敛标准，则已超过最大迭代次数。这也构成失败，并报告 $-1$。\n\n此过程将应用于七个测试用例中的每一个，并将得到的迭代次数列表（或失败时为 $-1$）格式化为最终输出。每个测试用例的行为都可以通过线性稳定性分析来预测。例如，在用例1中，$\\alpha\\,P\\,(1+g) = 0.3 \\times 1 \\times (1+9) = 3.0 > 2$，预测会发生振荡发散。相比之下，用例2使用预条件将该值降至 $0.3 \\times 0.25 \\times 10 = 0.75 < 2$，从而稳定了迭代。程序将对这些理论预测进行数值验证。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef run_scf(n0, n_star, g, c, alpha, p_type, p_params):\n    \"\"\"\n    Performs the self-consistent field (SCF) iteration for a single test case.\n\n    Args:\n        n0 (float): Initial value of the order parameter n.\n        n_star (float): Target fixed point.\n        g (float): Linear response gain.\n        c (float): Cubic nonlinearity coefficient.\n        alpha (float): Mixing parameter.\n        p_type (str): Type of preconditioner ('none', 'const', 'kerker').\n        p_params (tuple): Parameters for the preconditioner.\n\n    Returns:\n        int: The number of iterations to converge, or -1 on failure.\n    \"\"\"\n    K_MAX = 500\n    EPSILON = 1e-8\n    DIVERGENCE_THRESHOLD = 1e12\n\n    # Ensure all inputs are double-precision floats\n    n = float(n0)\n    n_star = float(n_star)\n    g = float(g)\n    c = float(c)\n    alpha = float(alpha)\n\n    # Calculate the preconditioner P\n    if p_type == 'none':\n        P = 1.0\n    elif p_type == 'const':\n        p0 = float(p_params[0])\n        P = p0\n    elif p_type == 'kerker':\n        q, k_s = map(float, p_params)\n        P = (q**2) / (q**2 + k_s**2)\n    else:\n        # Invalid preconditioner type, problem is malformed from user side.\n        # This case should not be reached with the given problem statement.\n        return -1\n\n    # Main iteration loop\n    for k in range(K_MAX + 1):\n        # 3a. Check for convergence\n        error = abs(n - n_star)\n        if error < EPSILON:\n            return k\n\n        # 3b. Check for failure (divergence or non-finite)\n        if error > DIVERGENCE_THRESHOLD or not np.isfinite(n):\n            return -1\n\n        # If k reaches K_MAX, we have completed 500 updates (from k=0 to k=499)\n        # and this is the check for n^(500). If it hasn't converged, we fail.\n        if k == K_MAX:\n            break\n\n        # 3c. Calculate the next iterate n^(k+1)\n        # Residual: r(n) = F(n) - n\n        # F(n) = n_star - g*(n - n_star) + c*(n - n_star)^3\n        delta_n = n - n_star\n        F_n = n_star - g * delta_n + c * (delta_n**3)\n        r_n = F_n - n\n        \n        # Update rule: n^(k+1) = n^(k) + alpha * P * r(n^(k))\n        n = n + alpha * P * r_n\n\n    # 4. If loop finishes, max iterations exceeded without converging\n    return -1\n\ndef solve():\n    \"\"\"\n    Defines and runs the test suite for the SCF iteration problem.\n    \"\"\"\n    # Test cases: (n0, n_star, g, c, alpha, p_type, p_params)\n    test_cases = [\n        # Case 1: Strong sloshing, no preconditioning\n        (2.0, 1.0, 9.0, 0.1, 0.3, 'none', ()),\n        # Case 2: Case 1 with stabilizing constant preconditioning\n        (2.0, 1.0, 9.0, 0.1, 0.3, 'const', (0.25,)),\n        # Case 3: Case 1 with Kerker preconditioning\n        (2.0, 1.0, 9.0, 0.1, 0.3, 'kerker', (0.2, 1.0)),\n        # Case 4: Weak mixing, no preconditioning\n        (2.0, 1.0, 9.0, 0.1, 0.05, 'none', ()),\n        # Case 5: Pathological p0=0 preconditioner\n        (1.5, 1.0, 9.0, 0.1, 0.3, 'const', (0.0,)),\n        # Case 6: Extremely strong sloshing, no preconditioning\n        (2.0, 1.0, 30.0, 0.1, 0.2, 'none', ()),\n        # Case 7: Case 6 with Kerker preconditioning\n        (2.0, 1.0, 30.0, 0.1, 0.2, 'kerker', (0.1, 1.0)),\n    ]\n\n    results = []\n    for case in test_cases:\n        n0, n_star, g, c, alpha, p_type, p_params = case\n        result = run_scf(n0, n_star, g, c, alpha, p_type, p_params)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2998091"}]}