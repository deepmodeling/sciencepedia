{"hands_on_practices": [{"introduction": "在深入研究 SYK 模型复杂的动力学之前，我们必须首先掌握其基本构成单元——Majorana 费米子的语言。这个练习将引导你通过一个基础但至关重要的计算，来熟悉 Majorana 算符的代数性质，这是理解模型哈密顿量以及后续所有高级内容的关键。[@problem_id:148278]", "problem": "在量子混沌和全息对偶的研究中，Sachdev-Ye-Kitaev (SYK) 模型是一个关键的可解范例。该模型由 $N$ 个马约拉纳费米子构成，由算符 $\\chi_j$（其中 $j = 1, \\dots, N$）描述。这些算符是厄米的，即 $\\chi_j = \\chi_j^\\dagger$，并且它们满足 Clifford 代数的反对易关系：\n$$\n\\{\\chi_j, \\chi_k\\} = \\chi_j \\chi_k + \\chi_k \\chi_j = 2\\delta_{jk}\n$$\n其中 $\\delta_{jk}$ 是克罗内克 δ。由此得出的一个重要推论是，对任意 $j$，都有 $\\chi_j^2 = 1$。\n\n具有四次相互作用的 SYK 模型的哈密顿量由下式给出\n$$\nH = \\sum_{1 \\le j < k < l < m \\le N} J_{jklm} \\chi_j \\chi_k \\chi_l \\chi_m\n$$\n其中 $J_{jklm}$ 是由四个有序整数索引的实值耦合常数。\n\n对于一个固定但任意的指标 $p \\in \\{1, \\dots, N\\}$，计算哈密顿量 $H$ 与马约拉纳算符 $\\chi_p$ 的对易子。\n请将最终答案表示为三个不同马约拉纳算符乘积的线性组合。", "solution": "我们需要计算\n$$\n[H,\\chi_p]\n=\\sum_{1\\le j<k<l<m\\le N}J_{jklm}\\bigl[\\chi_j\\chi_k\\chi_l\\chi_m,\\chi_p\\bigr].\n$$  \n注意，如果 $p\\not\\in\\{j,k,l,m\\}$，则每一项都为零，因为将 $\\chi_p$ 移动越过另外四个马约拉纳算符会得到一个因子 $(-1)^4=+1$，因此对易子为零。只有其中一个指标等于 $p$ 的项才有贡献。我们考虑以下四种情况：\n\n1.  情况 $j=p$ (因此 $p<k<l<m$)：\n   $$\n   \\begin{aligned}\n   [\\chi_p\\chi_k\\chi_l\\chi_m,\\chi_p]\n   &=\\chi_p\\chi_k\\chi_l\\chi_m\\chi_p-\\chi_p\\chi_p\\chi_k\\chi_l\\chi_m\\\\\n   &=-\\chi_k\\chi_l\\chi_m-\\chi_k\\chi_l\\chi_m=-2\\,\\chi_k\\chi_l\\chi_m.\n   \\end{aligned}\n   $$  \n\n2.  情况 $k=p$ (因此 $j<p<l<m$)：\n   $$\n   [\\chi_j\\chi_p\\chi_l\\chi_m,\\chi_p]\n   =\\chi_j\\chi_l\\chi_m-(-\\chi_j\\chi_l\\chi_m)=2\\,\\chi_j\\chi_l\\chi_m.\n   $$  \n\n3.  情况 $l=p$ (因此 $j<k<p<m$)：\n   $$\n   [\\chi_j\\chi_k\\chi_p\\chi_m,\\chi_p]\n   =-\\chi_j\\chi_k\\chi_m-\\chi_j\\chi_k\\chi_m=-2\\,\\chi_j\\chi_k\\chi_m.\n   $$  \n\n4.  情况 $m=p$ (因此 $j<k<l<p$)：\n   $$\n   [\\chi_j\\chi_k\\chi_l\\chi_p,\\chi_p]\n   =\\chi_j\\chi_k\\chi_l-(-\\chi_j\\chi_k\\chi_l)=2\\,\\chi_j\\chi_k\\chi_l.\n   $$  \n\n将这四项贡献加起来得到\n$$\n\\begin{aligned}\n[H,\\chi_p]\n&=\\sum_{p<k<l<m}J_{pklm}(-2\\,\\chi_k\\chi_l\\chi_m)\n+\\sum_{j<p<l<m}J_{jplm}(2\\,\\chi_j\\chi_l\\chi_m)\\\\\n&\\quad+\\sum_{j<k<p<m}J_{jkpm}(-2\\,\\chi_j\\chi_k\\chi_m)\n+\\sum_{j<k<l<p}J_{jklp}(2\\,\\chi_j\\chi_k\\chi_l).\n\\end{aligned}\n$$\n重新排序并提出因子 $2$，即可得到所述的三个马约拉纳算符乘积的线性组合。", "answer": "$$\n\\boxed{\n[H,\\chi_p]\n=2\\sum_{1\\le j<k<l<p}J_{jklp}\\,\\chi_j\\chi_k\\chi_l\n-2\\sum_{1\\le j<k<p<m\\le N}J_{jkpm}\\,\\chi_j\\chi_k\\chi_m\n+2\\sum_{1\\le j<p<l<m\\le N}J_{jplm}\\,\\chi_j\\chi_l\\chi_m\n-2\\sum_{p<k<l<m\\le N}J_{pklm}\\,\\chi_k\\chi_l\\chi_m\n}\n$$", "id": "148278"}, {"introduction": "理论上，SYK 模型在 $N \\to \\infty$ 极限下的性质由 Schwinger-Dyson (SD) 方程组完全确定，但精确求解这些积分方程极具挑战性。这个练习将理论付诸实践，指导你编写一个数值程序，通过迭代自洽地求解有限温度下的 SD 方程，让你能亲手计算出模型的 Green 函数并验证其基本性质。[@problem_id:3014182]", "problem": "考虑具有 Majorana 费米子间四次相互作用的大$N$ Sachdev-Ye-Kitaev (SYK) 模型，通常记为 SYK$_4$。在无序平均、大$N$极限以及有限温度 $T=1/\\beta$下，Matsubara 格林函数 $G(i\\omega_n)$ 和自能 $\\Sigma(i\\omega_n)$ 满足 Schwinger–Dyson 方程。使用 Majorana 费米子的虚时间和 Matsubara 频率格林函数的标准定义，并采用约定 $\\{\\chi,\\chi\\}=1$，基本关系式如下：\n- 虚频轴上的 Dyson 方程：$$G(i\\omega_n) = \\frac{1}{i\\omega_n - \\Sigma(i\\omega_n)}$$\n- 虚时间中的自能：$$\\Sigma(\\tau) = J^2 \\, G(\\tau)^3,$$ 其中 $J$ 是具有能量量纲的相互作用强度。\n- 有限温度下从虚时间到 Matsubara 频率的变换：\n  $$G(\\tau) = \\frac{1}{\\beta}\\sum_{n=-\\infty}^{\\infty} e^{-i\\omega_n \\tau} \\, G(i\\omega_n), \\quad \\omega_n = \\frac{(2n+1)\\pi}{\\beta},$$\n  $$\\Sigma(i\\omega_n) = \\int_{0}^{\\beta} d\\tau \\, e^{i\\omega_n \\tau} \\, \\Sigma(\\tau)$$\n\n你的任务是编写一个完整的、自包含的程序，该程序能够：\n1) 使用离散虚时间网格和截断的费米子 Matsubara 频率集，通过数值迭代自洽求解有限温度下 SYK$_4$ 的这些方程。对积分使用简单的矩形求积法，对级数使用直接的离散求和。迭代过程可以通过线性混合来稳定。\n2) 验证由 Majorana 费米子反对易关系和粒子-空穴对称性导出的两条基本求和规则：\n   - 高频归一化：$$\\lim_{|n|\\to\\infty} \\,\\mathrm{Re}\\left[i\\omega_n \\, G(i\\omega_n)\\right] = 1$$\n   - 在粒子-空穴对称态中的等时/谱归一化（在零化学势下成立）：如果 $A(\\omega)$ 是在上述约定下与 Majorana 格林函数相关的谱函数，则 $$\\int_{-\\infty}^{\\infty} d\\omega \\, A(\\omega) = 1,$$ 在有限温度下，这等价地通过虚时间极限 $0^+$ 反映出来 $$-2\\,G(0^+) = \\int_{-\\infty}^{\\infty} d\\omega \\, A(\\omega)$$ 由于在离散网格上无法直接获取 $G(0^+)$，因此取第一个正时间网格点 $G(\\Delta \\tau)$ 作为 $G(0^+)$ 的代理来估计其值。\n\n你必须从第一性原理出发实现以下数值步骤：\n- 选择 $N_\\tau$ 个虚时间点 $\\tau_m = m \\Delta \\tau$，其中 $\\Delta\\tau = \\beta/N_\\tau$，对于 $m=0,1,\\dots,N_\\tau-1$。\n- 选择 $N_\\omega$ 个费米子 Matsubara 频率 $\\omega_n = (2n+1)\\pi/\\beta$，对于 $n=-N_\\omega/2,\\dots,N_\\omega/2-1$。\n- 初始化 $G^{(0)}(i\\omega_n) = 1/(i\\omega_n)$。\n- 迭代直至收敛：\n  1. 计算 $$G^{(k)}(\\tau_m) = \\frac{1}{\\beta}\\sum_{n=-N_\\omega/2}^{N_\\omega/2-1} e^{-i \\omega_n \\tau_m}\\, G^{(k)}(i\\omega_n)$$\n  2. 计算 $$\\Sigma^{(k)}(\\tau_m) = J^2 \\left[G^{(k)}(\\tau_m)\\right]^3$$\n  3. 计算 $$\\Sigma^{(k)}(i\\omega_n) = \\sum_{m=0}^{N_\\tau-1} e^{i \\omega_n \\tau_m}\\, \\Sigma^{(k)}(\\tau_m)\\, \\Delta\\tau$$\n  4. 更新 $$\\tilde{G}^{(k+1)}(i\\omega_n) = \\frac{1}{i\\omega_n - \\Sigma^{(k)}(i\\omega_n)}, \\quad G^{(k+1)} = \\alpha \\,\\tilde{G}^{(k+1)} + (1-\\alpha)\\, G^{(k)},$$ 其中 $0<\\alpha\\le 1$ 是用于改善收敛性的线性混合参数。\n  5. 当所有 $n$ 对应的 $G(i\\omega_n)$ 的最大绝对变化量低于某个容差时停止。\n\n收敛后，估计：\n- 通过对 $K$ 个最大的 $|\\omega_n|$ 值进行平均来估计高频归一化：$$S_{\\mathrm{tail}} = \\frac{1}{K} \\sum_{n \\in \\mathcal{T}} \\mathrm{Re}\\left[i\\omega_n \\, G(i\\omega_n)\\right],$$ 其中 $\\mathcal{T}$ 是对应于 $K$ 个最大 $|\\omega_n|$ 的索引集合。\n- 等时/谱归一化代理值 $$S_{0^+} = -2\\,\\mathrm{Re}\\left[G(\\Delta\\tau)\\right]$$\n\n你的程序必须对以下参数集测试套件运行这些计算，这些参数集针对了互补的物理区间和数值边界情况：\n- 情况 A（一般相互作用区，中等温度）：$\\beta = 20$, $J = 1$, $N_\\tau = 256$, $N_\\omega = 256$, $\\alpha = 0.5$, $\\mathrm{tol} = 10^{-8}$, $\\mathrm{max\\_iter} = 250$, $K = 16$。\n- 情况 B（接近自由极限的弱耦合）：$\\beta = 20$, $J = 0.2$, $N_\\tau = 256$, $N_\\omega = 256$, $\\alpha = 0.7$, $\\mathrm{tol} = 10^{-9}$, $\\mathrm{max\\_iter} = 250$, $K = 16$。\n- 情况 C（高温，强耦合）：$\\beta = 5$, $J = 2$, $N_\\tau = 256$, $N_\\omega = 256$, $\\alpha = 0.6$, $\\mathrm{tol} = 10^{-8}$, $\\mathrm{max\\_iter} = 250$, $K = 16$。\n\n对于每种情况，定量报告三元组\n$$\\left[S_{\\mathrm{tail}},\\, S_{0^+},\\, \\text{converged}\\right],$$\n其中 $S_{\\mathrm{tail}}$ 和 $S_{0^+}$ 是浮点数， `converged` 是一个布尔值，指示迭代是否在最大迭代次数内达到了收敛容差。\n\n最终输出格式：\n- 你的程序应生成单行输出，包含三种情况的结果，形式为由逗号分隔的列表的列表，用方括号括起来，并严格按照情况 A、情况 B、情况 C 的顺序排列。例如：\n\"[ [S_tail_A,S_0p_A,converged_A], [S_tail_B,S_0p_B,converged_B], [S_tail_C,S_0p_C,converged_C] ]\"。\n所有浮点数值必须以标准十进制表示法打印，布尔值打印为 \"True\" 或 \"False\"。不应打印任何其他文本。", "solution": "该问题要求在大$N$极限和有限逆温$\\beta$下，对具有四次相互作用的 Sachdev-Ye-Kitaev (SYK) 模型（记为SYK$_4$）的自洽 Schwinger-Dyson 方程进行数值求解。求解过程涉及在一个离散化的虚时间和 Matsubara 频率网格上执行的迭代程序。求解之后，我们必须验证两条基本的求和规则，以作为对数值结果的自洽性检验。\n\n问题的核心在于找到一对自洽的 Majorana 费米子格林函数 $G$ 和自能 $\\Sigma$，它们能同时满足以下方程组：\n1. Matsubara 频率空间中的 Dyson 方程：$G(i\\omega_n) = [i\\omega_n - \\Sigma(i\\omega_n)]^{-1}$。\n2. 虚时间中的自能定义：$\\Sigma(\\tau) = J^2 G(\\tau)^3$。\n3. 在逆温$\\beta$下连接费米子函数的时间域和频率域的傅里叶变换：\n$$G(\\tau) = \\frac{1}{\\beta}\\sum_{n=-\\infty}^{\\infty} e^{-i\\omega_n \\tau} \\, G(i\\omega_n)$$\n$$\\Sigma(i\\omega_n) = \\int_{0}^{\\beta} d\\tau \\, e^{i\\omega_n \\tau} \\, \\Sigma(\\tau)$$\n其中费米子 Matsubara 频率由 $\\omega_n = (2n+1)\\pi/\\beta$ 给出，n 为整数。\n\n为了数值求解该系统，我们对虚时间 $\\tau$ 和 Matsubara 频率 $\\omega_n$ 同时进行离散化。\n虚时间区间 $[0, \\beta)$ 被离散为 $N_\\tau$ 个点：$\\tau_m = m \\Delta\\tau$，其中 $\\Delta\\tau = \\beta/N_\\tau$，$m = 0, 1, \\dots, N_\\tau-1$。\n无限的 Matsubara 频率集被截断为一个包含 $N_\\omega$ 个频率的有限对称集，由 $n = -N_\\omega/2, \\dots, N_\\omega/2 - 1$ 索引。这定义了频率网格 $\\omega_n = (2n+1)\\pi/\\beta$。\n\n自洽解通过迭代算法找到：\n\n**初始化：** 迭代（由 k 索引）从 k=0 开始，采用一个具有物理动机的格林函数初值。在没有相互作用（$J=0$）的情况下，自能为零，$\\Sigma(i\\omega_n) = 0$，Dyson 方程给出自由费米子格林函数。我们以此作为出发点：\n$$G^{(0)}(i\\omega_n) = \\frac{1}{i\\omega_n}$$\n\n**迭代循环：** 对于每次迭代 $k=0, 1, 2, \\dots$，我们执行以下四个步骤来生成格林函数的下一个近似值 $G^{(k+1)}(i\\omega_n)$。\n\n**第 1 步：傅里叶逆变换：** 我们将格林函数从频域变换到时域。无限求和被替换为在我们截断的频率网格上的求和：\n$$G^{(k)}(\\tau_m) = \\frac{1}{\\beta}\\sum_{n=-N_\\omega/2}^{N_\\omega/2-1} e^{-i \\omega_n \\tau_m}\\, G^{(k)}(i\\omega_n)$$\n这是一个离散傅里叶变换，可以高效地实现为矩阵-向量乘积。\n\n**第 2 步：计算时域中的自能：** 时域中的自能是通过使用时域格林函数的瞬时值进行局域的、逐元素的操作来计算的：\n$$\\Sigma^{(k)}(\\tau_m) = J^2 \\left[G^{(k)}(\\tau_m)\\right]^3$$\n这个方程直接耦合了 $G$ 和 $\\Sigma$，是该模型强耦合性质的来源。\n\n**第 3 步：傅里叶变换：** 我们将自能变换回频域。积分采用简单的矩形求积法则来近似，这变成了一个在时间网格上的离散求和：\n$$\\Sigma^{(k)}(i\\omega_n) = \\sum_{m=0}^{N_\\tau-1} e^{i \\omega_n \\tau_m}\\, \\Sigma^{(k)}(\\tau_m)\\, \\Delta\\tau$$\n这是另一个离散傅里叶变换，同样可以实现为矩阵-向量乘积。\n\n**第 4 步：更新格林函数：** 使用新计算出的自能，通过 Dyson 方程计算格林函数的新估计值 $\\tilde{G}^{(k+1)}(i\\omega_n)$：\n$$\\tilde{G}^{(k+1)}(i\\omega_n) = \\frac{1}{i\\omega_n - \\Sigma^{(k)}(i\\omega_n)}$$\n为了稳定迭代并防止振荡或发散，我们采用线性混合。下一次迭代的更新格林函数 $G^{(k+1)}$ 是新估计值 $\\tilde{G}^{(k+1)}$ 和前一个值 $G^{(k)}$ 的加权平均：\n$$G^{(k+1)}(i\\omega_n) = \\alpha \\,\\tilde{G}^{(k+1)}(i\\omega_n) + (1-\\alpha)\\, G^{(k)}(i\\omega_n)$$\n其中 $\\alpha$是一个满足 $0 < \\alpha \\le 1$ 的混合参数。较小的 $\\alpha$ 提供更大的稳定性，但可能会减慢收敛速度。\n\n**收敛：** 重复迭代过程直到解稳定下来。我们监测连续迭代之间格林函数的变化，当所有频率点的最大绝对变化小于指定的容差 $\\mathrm{tol}$ 时，即宣告收敛：\n$$\\max_{n} \\left| G^{(k+1)}(i\\omega_n) - G^{(k)}(i\\omega_n) \\right| < \\mathrm{tol}$$\n如果在最大迭代次数 $\\mathrm{max\\_iter}$ 内未达到收敛，则停止该过程。\n\n**求和规则验证：** 收敛后，使用得到的格林函数来检验两条求和规则。\n**1. 高频归一化：** 在非常高的频率下，即 $|i\\omega_n| \\gg J$，相互作用的影响变得可以忽略不计，自能 $\\Sigma(i\\omega_n)$ 应当消失。在此极限下，$G(i\\omega_n) \\approx 1/(i\\omega_n)$，这意味着 $i\\omega_n G(i\\omega_n) \\approx 1$。我们通过计算我们网格中 $K$ 个最大频率上 $\\mathrm{Re}[i\\omega_n G(i\\omega_n)]$ 的平均值来验证这一点：\n$$S_{\\mathrm{tail}} = \\frac{1}{K} \\sum_{n \\in \\mathcal{T}} \\mathrm{Re}\\left[i\\omega_n \\, G(i\\omega_n)\\right]$$\n其中 $\\mathcal{T}$ 代表 $K$ 个模最大的频率的索引集合。这个值应该接近 1。\n\n**2. 等时归一化：** Majorana 费米子的正则反对易关系 $\\{\\chi,\\chi\\}=1$ 意味着总谱权重上有一条求和规则，这等价于虚时间格林函数在 $\\tau \\to 0^+$ 时的条件。具体来说，总谱权重 $\\int_{-\\infty}^{\\infty} d\\omega A(\\omega)$ 应等于 1，这又对应于 $-2G(0^+) = 1$。由于我们的离散网格不包含 $\\tau=0^+$ 点，我们使用第一个时间步 $\\tau_1 = \\Delta\\tau$ 作为代理。计算的量是：\n$$S_{0^+} = -2\\,\\mathrm{Re}\\left[G(\\Delta\\tau)\\right]$$\n对于精确解，这个值也应该接近 1。\n\n所提供的 Python 程序实现了这整个过程，它会遍历指定的测试用例，并报告 $S_{\\mathrm{tail}}$、$S_{0^+}$ 的值以及一个指示收敛性的布尔值。为了提高效率，程序采用了 `numpy` 库的向量化操作。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef syk_solver(beta, J, N_tau, N_omega, alpha, tol, max_iter, K):\n    \"\"\"\n    Solves the SYK4 Schwinger-Dyson equations at finite temperature.\n\n    Args:\n        beta (float): Inverse temperature.\n        J (float): Interaction strength.\n        N_tau (int): Number of imaginary time grid points.\n        N_omega (int): Number of Matsubara frequency points.\n        alpha (float): Linear mixing parameter.\n        tol (float): Convergence tolerance.\n        max_iter (int): Maximum number of iterations.\n        K (int): Number of tail frequencies for sum rule verification.\n\n    Returns:\n        tuple: A triplet containing (S_tail, S_0p, converged).\n               S_tail (float): High-frequency normalization sum rule.\n               S_0p (float): Equal-time normalization sum rule proxy.\n               converged (bool): True if the iteration converged, False otherwise.\n    \"\"\"\n    # 1. Setup grids\n    delta_tau = beta / N_tau\n    tau_grid = np.arange(N_tau) * delta_tau\n\n    # Fermionic Matsubara frequencies: omega_n = (2n+1) * pi / beta\n    # n chosen symmetrically around 0: n = -N_omega/2, ..., N_omega/2 - 1\n    n_indices = np.arange(-N_omega // 2, N_omega // 2)\n    omega_n_real = (2 * n_indices + 1) * np.pi / beta\n    \n    # Pre-compute Fourier transform kernels (matrices)\n    # These are vectorized implementations of the required sums.\n    # Inverse FT: G(tau) = (1/beta) * sum_n exp(-i*omega_n*tau) * G(i*omega_n)\n    exp_matrix_ift = np.exp(-1j * np.outer(tau_grid, omega_n_real))\n    \n    # Forward FT: Sigma(i*omega_n) = integral d_tau exp(i*omega_n*tau) * Sigma(tau)\n    # Integral is a sum with measure delta_tau\n    exp_matrix_ft = np.exp(1j * np.outer(omega_n_real, tau_grid))\n\n    # 2. Initialization\n    # G(i*omega_n) = 1 / (i*omega_n) for the non-interacting case (J=0)\n    G_omega = 1.0 / (1j * omega_n_real)\n    \n    converged = False\n    G_tau = np.zeros(N_tau, dtype=np.complex128)\n\n    # 3. Self-consistent iteration loop\n    for k in range(max_iter):\n        G_omega_old = np.copy(G_omega)\n\n        # Step 1: IFT to get G(tau)\n        G_tau = (1.0 / beta) * np.dot(exp_matrix_ift, G_omega)\n\n        # Step 2: Calculate Sigma(tau) = J^2 * G(tau)^3\n        Sigma_tau = (J**2) * (G_tau**3)\n\n        # Step 3: FT to get Sigma(i*omega_n)\n        Sigma_omega = delta_tau * np.dot(exp_matrix_ft, Sigma_tau)\n        \n        # Step 4: Update G(i*omega_n) using Dyson eq. and linear mixing\n        G_omega_tilde = 1.0 / (1j * omega_n_real - Sigma_omega)\n        G_omega = alpha * G_omega_tilde + (1.0 - alpha) * G_omega_old\n\n        # Check for convergence\n        error = np.max(np.abs(G_omega - G_omega_old))\n        if error < tol:\n            converged = True\n            # We need G_tau for the final sum rule, so recalculate it with the converged G_omega\n            G_tau = (1.0 / beta) * np.dot(exp_matrix_ift, G_omega)\n            break\n    \n    if not converged and 'G_tau' not in locals() or (G_tau == 0).all():\n         G_tau = (1.0 / beta) * np.dot(exp_matrix_ift, G_omega)\n\n\n    # 4. Sum rule verification\n    # High-frequency normalization: Re[i*omega_n*G(i*omega_n)] -> 1\n    # Average over K largest |omega_n|\n    abs_omega = np.abs(omega_n_real)\n    tail_indices = np.argsort(abs_omega)[-K:]\n    tail_values = (1j * omega_n_real[tail_indices] * G_omega[tail_indices]).real\n    S_tail = np.mean(tail_values)\n\n    # Equal-time normalization: -2*G(0+) = 1\n    # Use G(delta_tau) as a proxy for G(0+)\n    # G_tau[0] is G(0), G_tau[1] is G(delta_tau)\n    S_0p = -2.0 * G_tau[1].real\n\n    return S_tail, S_0p, converged\n\n\ndef solve():\n    \"\"\"\n    Main function to run the SYK solver for the specified test cases.\n    \"\"\"\n    test_cases = [\n        # Case A (general interacting regime, moderate temperature)\n        {'beta': 20, 'J': 1, 'N_tau': 256, 'N_omega': 256, 'alpha': 0.5, 'tol': 1e-8, 'max_iter': 250, 'K': 16},\n        # Case B (weak coupling close to free limit)\n        {'beta': 20, 'J': 0.2, 'N_tau': 256, 'N_omega': 256, 'alpha': 0.7, 'tol': 1e-9, 'max_iter': 250, 'K': 16},\n        # Case C (high temperature, stronger coupling)\n        {'beta': 5, 'J': 2, 'N_tau': 256, 'N_omega': 256, 'alpha': 0.6, 'tol': 1e-8, 'max_iter': 250, 'K': 16},\n    ]\n\n    results = []\n    for case_params in test_cases:\n        s_tail, s_0p, converged = syk_solver(**case_params)\n        results.append([s_tail, s_0p, converged])\n\n    # Format the final output string exactly as specified\n    case_strings = [f\"[{res[0]}, {res[1]}, {str(res[2])}]\" for res in results]\n    final_output = f\"[{', '.join(case_strings)}]\"\n    \n    print(final_output)\n\n# Run the solver\nsolve()\n\n```", "id": "3014182"}, {"introduction": "在获得了模型的基础解——两点 Green 函数之后，我们便可以探索更深层次的物理，即系统的集体涨落和响应。SYK 模型之所以能够成为全息对偶和量子混沌的“可解”范例，其秘密就藏在四点函数中。这项练习将引导你分析四点函数背后的“梯子图”求和，并揭示导致系统呈现最大混沌行为的重整化模式 (reparametrization mode)。[@problem_id:3014194]", "problem": "考虑 Sachdev-Ye-Kitaev (SYK) 模型，该模型包含 $N$ 个马约拉纳费米子 (Majorana fermion) $\\psi_i(\\tau)$，$i=1,\\dots,N$。其相互作用为随机的全连接 $q$ 体相互作用，耦合系数 $J_{i_1 \\cdots i_q}$ 呈高斯分布，均值为零，方差为 $\\langle J_{i_1 \\cdots i_q}^2 \\rangle = \\frac{(q-1)! J^2}{N^{q-1}}$。定义无序平均的两点函数 $G(\\tau_1,\\tau_2) = \\frac{1}{N} \\sum_{i=1}^N \\langle \\mathcal{T} \\psi_i(\\tau_1) \\psi_i(\\tau_2) \\rangle$ 和单态通道中的关联四点函数\n$$\n\\mathcal{F}(\\tau_1,\\tau_2,\\tau_3,\\tau_4) = \\frac{1}{N} \\sum_{i,j=1}^N \\langle \\mathcal{T} \\psi_i(\\tau_1) \\psi_i(\\tau_2) \\psi_j(\\tau_3) \\psi_j(\\tau_4) \\rangle_c.\n$$\n在强耦合、零温和大 $N$ 极限下进行分析，此时 Schwinger-Dyson (SD) 方程在共形区 $J |\\tau| \\gg 1$ 简化为一个标度不变解\n$$\nG_c(\\tau) = \\frac{b\\, \\mathrm{sgn}(\\tau)}{|J \\tau|^{2 \\Delta}}, \\quad \\Delta = \\frac{1}{q},\n$$\n其中 $b$ 由 SD 方程的自洽性确定。\n\n从大 $N$ 极限下的瓜状图 (melonic limit) 出发，并使用关于 $G_c$ 涨落的双局域形式，完成以下任务：\n\n1. 推导核 $K(\\tau_1,\\tau_2;\\tau_3,\\tau_4)$。该核通过在两条“轨道”之间附加一个相互作用“梯级”来产生对四点函数的前导 $1/N$ 修正，并仅用 $G_c$ 表示。\n\n2. 论证前导关联四点函数是通过对阶梯图求和得到的，因此它服从一个 Bethe-Salpeter 型的积分方程。该方程可重求和为一个作用在由非关联两点函数确定的适当非齐次源项上的、以 $K$ 的幂次展开的几何级数。\n\n3. 使用线性化的 SD 方程来确定与涌现的重参数化模式相关的核 $K$ 的一个本征函数，并在限制为偶数 $q \\ge 4$ 的情况下，计算在共形极限中标度维度 $h=2$ 处对应的核本征值。\n\n你的最终答案应该是对于一般的偶数 $q \\ge 4$，在 $h=2$ 处计算的阶梯核的本征值，以单个精确数或闭式解析表达式的形式给出。不要包含单位。不要四舍五入；请给出精确结果。", "solution": "该问题要求我们在大 $N$、强耦合极限下分析 Sachdev-Ye-Kitaev (SYK) 模型中的四点函数。我们按照问题陈述中列出的三个步骤进行。\n\nSYK 模型由哈密顿量 $H = i^{q/2} \\sum_{1 \\le i_1 < \\dots < i_q \\le N} J_{i_1 \\dots i_q} \\psi_{i_1} \\cdots \\psi_{i_q}$ 描述，其耦合为高斯随机变量。在大 $N$ 极限下，模型的动力学由一个涉及两点函数 $G(\\tau_1, \\tau_2)$ 和自能 $\\Sigma(\\tau_1, \\tau_2)$ 的双局域集体场形式所描述。相应的 Schwinger-Dyson (SD) 方程为：\n$$\n(\\partial_{\\tau_1} - \\Sigma(\\tau_1, \\tau_2)) * G(\\tau_2, \\tau_3) = \\delta(\\tau_1 - \\tau_3)\n$$\n$$\n\\Sigma(\\tau_1, \\tau_2) = J^2 G(\\tau_1, \\tau_2)^{q-1}\n$$\n在强耦合极限下 ($J|\\tau| \\gg 1$)，这些方程允许一个共形不变解 $G_c(\\tau) = b \\, \\mathrm{sgn}(\\tau) / |J\\tau|^{2\\Delta}$，其中 $\\Delta = 1/q$。\n\n**1. 阶梯核 $K$**\n\n两点函数的前导修正，以及由此决定的多点函数结构，是由围绕共形解的涨落确定的。设 $G = G_c + \\delta G$ 和 $\\Sigma = \\Sigma_c + \\delta \\Sigma$。将 SD 方程线性化，得到这些涨落之间的关系：\n$$\n\\delta \\Sigma(\\tau_1, \\tau_2) = J^2(q-1) G_c(\\tau_1, \\tau_2)^{q-2} \\delta G(\\tau_1, \\tau_2)\n$$\n涨落 $\\delta G$ 可通过线性化第一个 SD 方程 $(\\partial - \\Sigma_c - \\delta\\Sigma)(G_c + \\delta G) = \\delta$ 得到。由于 $(\\partial - \\Sigma_c)G_c = \\delta$，一阶近似给出：\n$$\n(\\partial - \\Sigma_c)\\delta G - \\delta\\Sigma G_c = 0 \\implies \\delta G = G_c * \\delta\\Sigma * G_c\n$$\n其中 $*$ 表示卷积（对中间时间变量的积分）。将 $\\delta\\Sigma$ 的表达式代入 $\\delta G$ 的表达式中，我们得到涨落 $\\delta G$ 的一个自洽方程：\n$$\n\\delta G(\\tau_1, \\tau_2) = J^2(q-1) \\int d\\tau_3 d\\tau_4 \\, G_c(\\tau_1, \\tau_3) \\left[ G_c(\\tau_3, \\tau_4)^{q-2} \\delta G(\\tau_3, \\tau_4) \\right] G_c(\\tau_4, \\tau_2)\n$$\n该方程具有 $\\delta G = \\mathcal{K}[\\delta G]$ 的形式，其中 $\\mathcal{K}$ 是一个积分算子。该算子表示阶梯图单个“梯级”的作用。其核 $K(\\tau_1,\\tau_2;\\tau_3,\\tau_4)$ 可以从这个表达式中辨认出来。按照惯例，核作用在代表阶梯两条“轨道”的函数上。如果我们考虑单态通道中的关联四点函数 $\\mathcal{F}(\\tau_1,\\tau_2;\\tau_3,\\tau_4) \\propto \\langle (\\psi_i\\psi_i)(\\tau_1,\\tau_2) (\\psi_j\\psi_j)(\\tau_3,\\tau_4) \\rangle_c$，阶梯的梯级是构成阶梯两侧的传播子之间的相互作用。通过两个费米子传播子 $G_c(\\tau_a, \\tau_c)$ 和 $G_c(\\tau_b, \\tau_d)$ 连接点 $(\\tau_a, \\tau_b)$ 到 $(\\tau_c, \\tau_d)$ 的单个梯级的核可以写为：\n$$\nK(\\tau_1,\\tau_2;\\tau_3,\\tau_4) = -(q-1) J^2 G_c(\\tau_1, \\tau_3) G_c(\\tau_2, \\tau_4) G_c(\\tau_3, \\tau_4)^{q-2}\n$$\n负号源于构成梯级的费米子圈，因子 $(q-1)$ 来自组合学。项 $G_c(\\tau_3, \\tau_4)^{q-2}$ 代表构成梯级本身的 $q-2$ 条费米子线，并在共形解上取值。这就是产生阶梯图的核。\n\n**2. Bethe-Salpeter 方程**\n\n在大 $N$ 极限下，完整的关联四点函数 $\\mathcal{F}$ 由所有“瓜状”阶梯图的总和给出。令 $F_0(\\tau_1,\\tau_2;\\tau_3,\\tau_4) = G_c(\\tau_1,\\tau_3)G_c(\\tau_2,\\tau_4) - G_c(\\tau_1,\\tau_4)G_c(\\tau_2,\\tau_3)$ 为最低阶的贡献（即没有任何梯级的阶梯两侧）。包含 0, 1, 2, ... 个梯级的图的总和可以递归地表示。所有图的总和 $\\mathcal{F}$ 由前导项 $F_0$ 加上所有至少包含一个梯级的图的总和给出。后一项可以看作是核算子 $\\mathcal{K}$ 作用在总和 $\\mathcal{F}$ 上。这就导出了 Bethe-Salpeter 方程：\n$$\n\\mathcal{F} = F_0 + \\mathcal{K}[\\mathcal{F}]\n$$\n其中 $\\mathcal{K}[\\mathcal{F}]$ 表示核 $K$ 对 $\\mathcal{F}$ 的积分。形式上求解 $\\mathcal{F}$ 得到一个用核算子表示的几何级数：\n$$\n\\mathcal{F} = (1 - \\mathcal{K})^{-1} [F_0] = F_0 + \\mathcal{K}[F_0] + \\mathcal{K}^2[F_0] + \\dots\n$$\n这表明关联四点函数是通过对阶梯图求和得到的，其中级数中的每一项对应于增加一个由核 $K$ 生成的梯级。\n\n**3. 重参数化模式的本征值**\n\n核算子 $\\mathcal{K}$ 的本征函数对应于系统的集体模式。一个本征值为 $k$ 的本征函数 $f$ 满足 $\\mathcal{K}[f] = k f$。从线性化的 SD 方程，我们有 $\\delta G = \\mathcal{K}[\\delta G]$，这是一个本征值为 $k=1$ 的本征值方程。因此，任何满足线性化 SD 方程的涨落 $\\delta G$ 都是核的一个本征值为 1 的本征函数。\n\n共形解 $G_c$ 在全局共形群 $SL(2,\\mathbb{R})$ 下是不变的。然而，在强耦合极限下，SD 方程的结构展现出一个更大的涌现对称性：时间重参数化不变性。设 $\\tau = \\phi(u)$ 为任意光滑单调函数。通过变换\n$$\nG_{\\phi}(u_1, u_2) = [\\phi'(u_1)\\phi'(u_2)]^{\\Delta} G_c(\\phi(u_1), \\phi(u_2))\n$$\n可以从 $G_c$ 生成一个新的解。\n考虑一个无穷小重参数化 $\\phi(\\tau) = \\tau + \\epsilon(\\tau)$，其中 $\\epsilon(\\tau)$ 是一个小函数。格林函数的变化量 $\\delta G_c = G_{\\phi} - G_c$，在 $\\epsilon$ 的一阶近似下由下式给出：\n$$\n\\delta G_c(\\tau_1, \\tau_2) = \\epsilon(\\tau_1) \\partial_1 G_c(\\tau_1, \\tau_2) + \\epsilon(\\tau_2) \\partial_2 G_c(\\tau_1, \\tau_2) + \\Delta[\\epsilon'(\\tau_1) + \\epsilon'(\\tau_2)] G_c(\\tau_1, \\tau_2)\n$$\n由于 $G_{\\phi}$ 也是 SD 方程的一个解，这个无穷小变化量 $\\delta G_c$ 必须是围绕 $G_c$ 的线性化 SD 方程的一个解。如上所述，这意味着 $\\delta G_c$ 是核算子 $\\mathcal{K}$ 的一个本征值为 1 的本征函数：\n$$\n\\mathcal{K}[\\delta G_c] = 1 \\cdot \\delta G_c\n$$\n这个本征函数被称为重参数化模式。\n\n核的本征函数可以根据其在共形变换下的标度维度 $h$ 进行分类。详细的分析表明，重参数化模式 $\\delta G_c$ 对应于一个标度维度为 $h=2$ 的算子。\n\n核算子 $\\mathcal{K}$ 在共形群 $SL(2,\\mathbb{R})$ 的作用下是不变的。根据舒尔引理 (Schur's lemma)，作用于群的不可约表示上的不变算子必须与单位矩阵成正比。具有给定标度维度 $h$ 的函数空间构成了 $SL(2,\\mathbb{R})$ 的一个表示。对于 $h=2$，这个表示是不可约的。既然我们已经在这个空间中找到了一个本征值为 1 的本征函数（即重参数化模式），那么核算子 $\\mathcal{K}$ 在整个 $h=2$ 子空间上的作用必定是单位算子。\n\n因此，对应于标度维度 $h=2$ 的阶梯核的本征值为 1。这个论证对任何偶数 $q \\ge 4$ 都成立，因为这个条件确保了推导中使用的共形解和核的结构。", "answer": "$$\\boxed{1}$$", "id": "3014194"}]}