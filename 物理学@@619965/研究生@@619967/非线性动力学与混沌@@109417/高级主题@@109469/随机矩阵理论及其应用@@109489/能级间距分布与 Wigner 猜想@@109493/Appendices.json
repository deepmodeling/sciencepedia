{"hands_on_practices": [{"introduction": "我们从一个基础的分析练习开始，以熟悉高斯正交系综（GOE）的 Wigner 猜想。这个练习要求你使用微积分来找到其概率密度函数的一个关键特征——拐点，从而帮助你深入理解能级排斥的特征形状及其数学描述。通过求解，你将对 GOE 分布 $P(s)$ 的函数形式有更具体的把握 [@problem_id:881630]。", "problem": "在随机矩阵理论中，复杂量子系统的能级统计特性由大随机矩阵的本征值建模。一个关键的统计量是相邻能级间距 $s$ 的分布，该分布是在经过一个称为“展开”（unfolding）的归一化过程后得到的，此过程将平均间距设为1。\n\n对于具有时间反演不变性的系统，其哈密顿量可由实对称矩阵表示，相关的矩阵系综是高斯正交系综 (GOE)。展开后能级间距的概率分布 $P(s)$ 可由 Wigner 猜想很好地近似，该猜想源自 2x2 矩阵的精确解。GOE Wigner 猜想由以下概率密度函数给出：\n$$\nP(s) = \\frac{\\pi s}{2} \\exp\\left(-\\frac{\\pi s^2}{4}\\right) \\quad \\text{for } s \\ge 0\n$$\n该分布表现出能级排斥，即当 $s \\to 0$ 时，$P(s) \\to 0$。它具有单峰，并且对于大间距会快速衰减。\n\n函数的拐点是其图像上曲率或凹凸性改变符号的点。对于一个二阶可导函数，拐点出现在其二阶导数为零且变号的位置。\n\n确定展开后能级间距 $s$ 的值，该值对应于 GOE Wigner 猜想分布 $P(s)$ 的非平凡拐点。", "solution": "我们有\n$$P(s)=\\frac{\\pi s}{2}\\exp\\!\\biggl(-\\frac{\\pi s^2}{4}\\biggr)\\,. $$\n1. 计算一阶导数：\n$$P'(s)=\\frac{\\pi}{2}\\frac{d}{ds}\\Bigl[s\\,e^{-B s^2}\\Bigr],\\quad B=\\frac{\\pi}{4}.$$\n使用乘法法则，\n$$P'(s)=\\frac{\\pi}{2}\\Bigl(e^{-B s^2}+s(-2B s)e^{-B s^2}\\Bigr)\n=\\frac{\\pi}{2}e^{-B s^2}\\bigl(1-2B s^2\\bigr).$$\n2. 计算二阶导数：\n$$P''(s)=\\frac{\\pi}{2}\\frac{d}{ds}\\Bigl[e^{-B s^2}(1-2B s^2)\\Bigr].$$\n再次使用乘法法则得到\n$$P''(s)=\\frac{\\pi}{2}\\,e^{-B s^2}\\Bigl[-2B s(1-2B s^2)-4B s\\Bigr]\n=\\frac{\\pi}{2}e^{-B s^2}\\bigl(4B^2s^3-6Bs\\bigr).$$\n提出因子 $2B s$：\n$$P''(s)=\\frac{\\pi}{2}e^{-B s^2}\\,2B s\\,(2B s^2-3).$$\n3. 拐点满足 $P''(s)=0$。排除平凡解 $s=0$，我们令\n$$2B s^2-3=0\\quad\\Longrightarrow\\quad s^2=\\frac{3}{2B}=\\frac{3}{2\\cdot(\\pi/4)}=\\frac{6}{\\pi}\\,. $$\n因此，非平凡拐点为\n$$s=\\sqrt{\\frac{6}{\\pi}}\\,. $$", "answer": "$$\\boxed{\\sqrt{\\frac{6}{\\pi}}}$$", "id": "881630"}, {"introduction": "Wigner 猜想预测标准混沌系统中能级简并的概率为零，但这一结论是否普遍成立？这个练习将引导你研究一个非标准的、由离散随机变量构成的随机矩阵系综。通过计算简并发生的概率 $P_{\\text{deg}}$，你将揭示矩阵元的基础概率分布在产生能级排斥现象中所扮演的关键角色 [@problem_id:881592]。", "problem": "在随机矩阵理论中，研究的是具有随机元素的矩阵的特征值的统计性质。一个核心概念是能级排斥，它描述了特征值避免聚集的趋势。对于许多标准系综，例如高斯正交系综 (GOE)，找到两个完全相等的特征值（简并）的概率为零。本问题探讨一个情况并非如此的非标准系综。\n\n考虑一个由以下形式的 $2 \\times 2$ 实对称矩阵组成的系综：\n$$\nH = \\begin{pmatrix} H_{11} & H_{12} \\\\ H_{12} & H_{22} \\end{pmatrix}\n$$\n三个独立的矩阵元 $H_{11}$、$H_{22}$ 和 $H_{12}$ 是独立的随机变量。它们的值是从同一个几何分布 $P(k;p)$ 中抽取的非负整数：\n$$\nP(k;p) = p(1-p)^k, \\quad k \\in \\{0, 1, 2, \\ldots\\}\n$$\n其中 $p$ 是一个满足 $0 < p < 1$ 的参数。\n\n计算矩阵 $H$ 具有简并特征值的概率 $P_{\\text{deg}}$。将您的答案表示为关于 $p$ 的闭式解析表达式。", "solution": "1. 矩阵 \n$$H=\\begin{pmatrix}H_{11}&H_{12}\\\\H_{12}&H_{22}\\end{pmatrix}$$ \n的特征值是简并的，当且仅当其判别式为零：\n$$\\Delta=(H_{11}-H_{22})^2+4H_{12}^2=0\\;\\Longrightarrow\\;H_{11}=H_{22},\\;H_{12}=0.$$\n2. 根据独立性，\n$$P_{\\rm deg}=P(H_{12}=0)\\,P(H_{11}=H_{22}).$$\n3. 由 $P(k;p)=p(1-p)^k$ 可得，\n$$P(H_{12}=0)=p.$$\n4. 此外\n$$P(H_{11}=H_{22})\n=\\sum_{k=0}^\\infty P(H_{11}=k)\\,P(H_{22}=k)\n=\\sum_{k=0}^\\infty p(1-p)^k\\;p(1-p)^k\n=p^2\\sum_{k=0}^\\infty(1-p)^{2k}\n=\\frac{p^2}{1-(1-p)^2}\n=\\frac{p}{2-p}.$$\n5. 因此\n$$P_{\\rm deg}\n=p\\;\\frac{p}{2-p}\n=\\frac{p^2}{2-p}.$$", "answer": "$$\\boxed{\\frac{p^2}{2-p}}$$", "id": "881592"}, {"introduction": "理论是强大的，但亲眼见证其应用则更能启发思考。最后一个练习是一项计算任务，你将亲自生成随机矩阵系综，计算其本征值间距，并用统计方法检验数据与理论 Wigner 猜想的吻合程度。这项实践将连接抽象的数学公式与本征值具体的统计行为，让你体会理论物理与计算科学的交融 [@problem_id:2387505]。", "problem": "考虑高斯正交系综（GOE）。一个大小为 $N$ 的GOE矩阵是一个实对称随机矩阵 $H \\in \\mathbb{R}^{N \\times N}$，其构造方式为：对角线以上的元素是均值为 $0$、方差为 $1$ 的独立同分布正态随机变量，对角线上的元素是均值为 $0$、方差为 $2$ 的独立正态随机变量，且 $H_{ij} = H_{ji}$。等价地，可以定义 $H = \\left(R + R^{\\mathsf{T}}\\right)/\\sqrt{2}$，其中 $R$ 的元素是独立同分布的标准正态随机变量。对于每个矩阵 $H$，设其有序特征值为 $\\lambda_1 \\leq \\lambda_2 \\leq \\cdots \\leq \\lambda_N$。定义最近邻间距为 $s_k = \\lambda_{k+1} - \\lambda_k$，其中 $k = 1, 2, \\ldots, N-1$。对于给定的 $N$，从指定数量的独立抽取的矩阵中汇总所有这些间距。通过除以其样本均值来归一化这些间距，使得归一化后的间距具有单位均值。对于GOE，归一化最近邻间距的概率密度函数的 Wigner 猜想为\n$$\nP_{\\mathrm{W}}(s) = \\frac{\\pi}{2} s \\, e^{-\\frac{\\pi}{4} s^2}, \\quad s \\ge 0,\n$$\n其累积分布函数为\n$$\nF_{\\mathrm{W}}(s) = \\int_0^s P_{\\mathrm{W}}(t)\\, dt = 1 - e^{-\\frac{\\pi}{4} s^2}.\n$$\n令 $F_n(s)$ 表示在给定测试案例中由归一化间距构建的经验累积分布函数。使用 Kolmogorov–Smirnov 距离来量化与 Wigner 猜想的一致性\n$$\nD = \\sup_{s \\ge 0} \\left| F_n(s) - F_{\\mathrm{W}}(s) \\right|.\n$$\n您的任务是编写一个完整的程序，对于下方的每个测试案例，按照描述构造GOE间距，将其归一化至单位均值，计算归一化间距的经验分布与 $F_{\\mathrm{W}}(s)$ 之间的 Kolmogorov–Smirnov 距离 $D$，并输出 $D$。\n\n测试套件（每个测试案例是一个三元组 $(N, M, s)$，其中 $N$ 是矩阵大小，$M$ 是独立抽取的矩阵数量，$s$ 是伪随机数生成器的种子）：\n- 案例1：$(N, M, s) = (2, 10000, 17)$。\n- 案例2：$(N, M, s) = (40, 120, 2024)$。\n- 案例3：$(N, M, s) = (3, 200, 7)$。\n\n所有数值输出必须表示为纯小数。您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，列表内容为各案例的结果，顺序与上述案例相同，每个 Kolmogorov–Smirnov 距离四舍五入到六位小数（例如，$[0.012345,0.067890,0.123456]$）。", "solution": "所述问题是有效的。它提出了一个明确的计算任务，该任务植根于随机矩阵理论（RMT）的既定原则，这是数学物理学的一个关键领域。该问题具有科学依据，对高斯正交系综（GOE）、能级间距的 Wigner 猜想以及适当的统计度量——Kolmogorov-Smirnov 距离都有正确的定义。数值模拟的参数已完全指定，包括矩阵维度、样本大小和随机种子，这确保了问题是自洽的且解是可复现的。不存在逻辑矛盾、歧义或事实错误。\n\n解将通过直接数值模拟获得，遵循问题陈述中概述的明确步骤。对于每个测试案例，其特征在于矩阵维度 $N$、矩阵实现数量 $M$ 以及伪随机数生成器种子 $s$，我们将执行以下系统性步骤。\n\n首先，我们使用提供的种子 $s$ 初始化随机数生成器。这对于结果的可复现性至关重要。\n\n该程序的核心是生成特征值间距的统计系综。我们将以下步骤重复 $M$ 次：\n1.  构造一个GOE矩阵：我们生成一个 $N \\times N$ 的GOE矩阵 $H$。问题给出了一个高效的构造性定义，$H = (R + R^{\\mathsf{T}})/\\sqrt{2}$，其中 $R$ 是一个其元素 $R_{ij}$ 独立地从标准正态分布 $\\mathcal{N}(0, 1)$ 中抽取的矩阵。此方法正确地生成了一个实对称矩阵 $H$，其中对角元素 $H_{ii}$ 服从 $\\mathcal{N}(0, 2)$ 分布，非对角元素 $H_{ij}$（当 $i \\neq j$ 时）服从 $\\mathcal{N}(0, 1)$ 分布，这满足GOE的定义。\n2.  特征值计算：对于每个生成的矩阵 $H$，我们计算其 $N$ 个特征值。由于 $H$ 是实数对称矩阵，其特征值保证为实数。我们使用一种为对称矩阵优化的数值稳定算法，例如 `numpy.linalg.eigh` 函数提供的算法。该函数还有一个额外的好处，即返回按升序排列的特征值，$\\lambda_1 \\le \\lambda_2 \\le \\cdots \\le \\lambda_N$。\n3.  间距计算：从排序后的特征值列表中，我们计算 $N-1$ 个最近邻间距，定义为 $s_k = \\lambda_{k+1} - \\lambda_k$，其中 $k=1, 2, \\ldots, N-1$。\n\n对所有 $M$ 个矩阵重复此过程后，我们将得到的 $M(N-1)$ 个间距汇总到一个数据集中。\n\n下一步是归一化。理论上的 Wigner 分布是建立在单位平均间距的基础上的。为了将我们的经验数据与此理论进行比较，我们必须重新缩放我们的数据集。我们计算所有收集到的间距的样本均值 $\\bar{s}$，然后通过除以该均值来归一化每个间距 $s_k$：$s'_k = s_k / \\bar{s}$。得到的归一化间距集合 $\\{s'_k\\}$ 的样本均值现在为 $1$。\n\n最后，我们使用 Kolmogorov-Smirnov (KS) 距离 $D$ 来量化归一化间距的经验分布与理论 Wigner 猜想之间的一致性。KS 距离是数据的经验累积分布函数 $F_n(s)$ 与理论累积分布函数 $F_{\\mathrm{W}}(s)$ 之间的最大绝对差：\n$$\nD = \\sup_{s \\ge 0} \\left| F_n(s) - F_{\\mathrm{W}}(s) \\right|\n$$\nWigner 猜想的累积分布函数（CDF）已给出：\n$$\nF_{\\mathrm{W}}(s) = 1 - e^{-\\frac{\\pi}{4} s^2}\n$$\n经验累积分布函数 $F_n(s)$ 是一个由归一化间距构建的阶梯函数。为计算 $D$，我们将利用 `scipy.stats` 库中提供的单样本 KS 检验的标准、稳健实现。此函数 `kstest` 将我们的归一化间距样本和一个代表理论累积分布函数 $F_{\\mathrm{W}}(s)$ 的可调用对象作为输入，并返回 KS 距离 $D$。\n\n对每个指定的测试案例执行此计算过程。然后将得到的 $D$ 值格式化为六位小数，并以所需的输出格式呈现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import kstest\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test cases.\n    For each case, it generates GOE matrices, computes eigenvalue spacings,\n    normalizes them, and calculates the Kolmogorov-Smirnov distance\n    to the Wigner surmise CDF.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (2, 10000, 17),    # Case 1: (N, M, seed)\n        (40, 120, 2024),   # Case 2: (N, M, seed)\n        (3, 200, 7),       # Case 3: (N, M, seed)\n    ]\n\n    results = []\n    \n    # Define the Wigner surmise cumulative distribution function (CDF)\n    # for the Gaussian Orthogonal Ensemble (GOE).\n    def F_W(s):\n        return 1.0 - np.exp(-np.pi / 4.0 * s**2)\n\n    for N, M, seed in test_cases:\n        # Initialize the random number generator for reproducibility.\n        rng = np.random.default_rng(seed)\n        \n        all_spacings = []\n\n        # Generate M matrices and collect their eigenvalue spacings.\n        for _ in range(M):\n            # Generate an N x N matrix with i.i.d. standard normal entries.\n            R = rng.standard_normal(size=(N, N))\n            \n            # Construct the symmetric GOE matrix H.\n            H = (R + R.T) / np.sqrt(2.0)\n            \n            # Calculate eigenvalues. eigh is for Hermitian (real-symmetric)\n            # matrices and returns sorted eigenvalues.\n            eigenvalues = np.linalg.eigh(H)[0]\n            \n            # Calculate the nearest-neighbor spacings.\n            spacings = np.diff(eigenvalues)\n            all_spacings.append(spacings)\n\n        # Concatenate all spacings from all matrices into a single array.\n        # This check is for the edge case where M*(N-1) is 0.\n        if not all_spacings:\n            # If no spacings, KS distance is undefined.\n            # As per problem constraints N>=2, so this won't happen.\n            ks_dist = 0.0\n        else:\n            flat_spacings = np.concatenate(all_spacings)\n            \n            # Normalize the spacings to have a unit mean.\n            mean_spacing = np.mean(flat_spacings)\n            if mean_spacing > 0:\n                normalized_spacings = flat_spacings / mean_spacing\n            else:\n                # This case is highly improbable with this generator.\n                # If mean is 0, normalization is not meaningful.\n                # We can skip KS-test as the data is pathological.\n                # We expect positive spacings from sorted distinct eigenvalues.\n                normalized_spacings = flat_spacings\n            \n            # Compute the Kolmogorov-Smirnov distance D between the\n            # empirical distribution of spacings and the Wigner surmise CDF.\n            # The kstest returns the statistic (D) and the p-value.\n            ks_dist, _ = kstest(normalized_spacings, F_W)\n\n        results.append(ks_dist)\n\n    # Final print statement in the exact required format.\n    # The output is a comma-separated list of D values rounded to six decimal places.\n    print(f\"[{','.join(f'{d:.6f}' for d in results)}]\")\n\nsolve()\n```", "id": "2387505"}]}