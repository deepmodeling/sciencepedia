{"hands_on_practices": [{"introduction": "理解玻色-爱因斯坦凝聚体动力学的第一步是研究其基态周围的小幅振荡。通过对含时Gross-Pitaevskii方程进行线性化，我们可以推导出描述这些元激发的Bogoliubov-de Gennes方程。这项实践练习 [@problem_id:1235560] 聚焦于这些激发的长波极限，它将向您展示声波这一基本概念如何在一个量子流体中涌现，以及声速是如何由原子间的微观相互作用强度决定的。", "problem": "一个由玻色子原子组成的弱相互作用玻色-爱因斯坦凝聚（BEC），在平均场水平上可以很好地由 Gross-Pitaevskii 理论描述。凝聚体基态之上的元激发可以通过对依赖于时间的 Gross-Pitaevskii 方程进行线性化来分析，这会得到 Bogoliubov-de Gennes 方程。\n\n对于一个凝聚体数密度为 $n_0$ 的均匀 BEC，这些元激发（Bogoliubov 模）的色散关系由下式给出：\n$$\n\\hbar \\omega_k = \\sqrt{\\epsilon_k (\\epsilon_k + 2 g n_0)}\n$$\n其中 $k$ 是激发的波矢，$\\omega_k$ 是其角频率，$\\hbar$ 是约化普朗克常数，$\\epsilon_k = \\frac{\\hbar^2 k^2}{2m}$ 是一个质量为 $m$ 的自由粒子的动能。参数 $g$ 代表原子间接触相互作用的强度。\n\n在长波极限下（即，对于小 $k$），色散关系变为线性，$\\omega_k \\approx c_s k$。这种行为是声波的特征，系数 $c_s$ 被认为是凝聚体中的声速。\n\n考虑一个由 $N$ 个原子组成的 BEC，每个原子的质量为 $m$。这些原子被限制在一个边长为 $L$ 的三维立方盒子内，其体积为 $V = L^3$。我们假设凝聚体足够稀疏和均匀，其数密度为 $n_0 = N/V$。原子间的相互作用是排斥性的，并由一个正的 s-波散射长度 $a_s$ 来表征。相互作用强度 $g$ 与 $a_s$ 的关系为 $g = \\frac{4 \\pi \\hbar^2 a_s}{m}$。\n\n使用给定的 Bogoliubov 色散关系，确定这个均匀 BEC 中的声速 $c_s$。将你的答案表示为一个以 $N$、$m$、$L$、$a_s$ 和 $\\hbar$ 表示的闭式解析表达式。", "solution": "我们从均匀 BEC 的 Bogoliubov 色散关系开始，\n$$\n\\hbar \\omega_k \\;=\\;\\sqrt{\\epsilon_k\\,\\bigl(\\epsilon_k+2g\\,n_0\\bigr)},\n\\qquad\n\\epsilon_k=\\frac{\\hbar^2k^2}{2m}, \n\\;\\;n_0=\\frac{N}{L^3},\n\\;\\;g=\\frac{4\\pi\\hbar^2a_s}{m}.\n$$\n在长波极限 $k\\to0$ 下，我们有 $\\epsilon_k\\ll2g\\,n_0$，所以\n$$\n\\hbar\\omega_k\\approx\\sqrt{\\epsilon_k\\,(2g\\,n_0)}\n=\\sqrt{2g\\,n_0\\,\\frac{\\hbar^2k^2}{2m}}\n=\\hbar k\\sqrt{\\frac{g\\,n_0}{m}}.\n$$\n因此，激发频率与 $k$ 呈线性关系，\n$$\n\\omega_k\\approx c_s\\,k,\n\\qquad\nc_s=\\sqrt{\\frac{g\\,n_0}{m}}.\n$$\n将 $g=\\frac{4\\pi\\hbar^2a_s}{m}$ 和 $n_0=\\frac{N}{L^3}$ 代入可得\n$$\nc_s=\\sqrt{\\frac{1}{m}\\,\\frac{4\\pi\\hbar^2a_s}{m}\\,\\frac{N}{L^3}}\n=\\sqrt{\\frac{4\\pi\\hbar^2a_sN}{m^2L^3}}\n=\\frac{\\hbar}{m}\\,\\sqrt{\\frac{4\\pi a_sN}{L^3}}.\n$$", "answer": "$$\\boxed{\\frac{\\hbar}{m}\\,\\sqrt{\\frac{4\\pi\\,a_s\\,N}{L^3}}}$$", "id": "1235560"}, {"introduction": "当处理大幅度的动力学过程时，直接求解完整的非线性Gross-Pitaevskii方程可能非常复杂。对于处于Thomas-Fermi机制下的凝聚体，标度变换是一种优雅而强大的近似方法，它能将复杂的偏微分方程简化为一组常微分方程。这项实践 [@problem_id:1276650] 将该技术应用于一个经典问题——凝聚体从陷阱中释放后的自由膨胀，引导您理解其形状的非凡动力学特征，特别是著名的“长宽比反转”现象。", "problem": "一个包含大量原子的雪茄形玻色-爱因斯坦凝聚体（BEC）最初被置于一个各向异性的谐振子陷阱中，并处于热平衡状态。囚禁势由 $V_{ext}(\\mathbf{r}) = \\frac{1}{2}m(\\omega_\\rho^2(x^2+y^2) + \\omega_z^2 z^2)$ 给出，其中 $m$ 是单个原子的质量，囚禁频率满足 $\\omega_z \\ll \\omega_\\rho$。\n\n在大原子数极限下（Thomas-Fermi 区域），基态密度分布呈抛物线形状。在时刻 $t=0$ 时，谐振子陷阱被突然关闭，凝聚体开始自由膨胀。\n\n凝聚体形状的演化可以通过一个标度变换拟设（scaling ansatz）来精确描述，其中径向（$\\rho$）和轴向（$z$）的 Thomas-Fermi 半径 $R_\\rho(t)$ 和 $R_z(t)$，其演化遵循 $R_\\rho(t) = R_\\rho(0)\\lambda_\\rho(t)$ 和 $R_z(t)=R_z(0)\\lambda_z(t)$。无量纲的标度变换参数 $\\lambda_i(t)$ 服从以下耦合微分方程组：\n$$ \\ddot{\\lambda}_\\rho = \\frac{\\omega_\\rho^2}{\\lambda_\\rho^3 \\lambda_z} $$\n$$ \\ddot{\\lambda}_z = \\frac{\\omega_z^2}{\\lambda_\\rho^2 \\lambda_z^2} $$\n对应于从静态基态释放的初始条件是 $\\lambda_\\rho(0) = 1$，$\\lambda_z(0) = 1$，$\\dot{\\lambda}_\\rho(0) = 0$ 和 $\\dot{\\lambda}_z(0) = 0$。\n\n凝聚体的纵横比定义为 $A(t) = R_z(t)/R_\\rho(t)$。在 Thomas-Fermi 区域，初始半径与囚禁频率的关系为 $R_i(0) \\propto 1/\\omega_i$。\n\n计算在陷阱关闭后瞬间，纵横比的初始加速度 $\\ddot{A}(0)$。请用囚禁频率 $\\omega_\\rho$ 和 $\\omega_z$ 表示你的答案。", "solution": "1. 纵横比为\n$$A(t)=\\frac{R_z(t)}{R_\\rho(t)}\n=\\frac{R_z(0)\\,\\lambda_z(t)}{R_\\rho(0)\\,\\lambda_\\rho(t)}\n=\\frac{R_z(0)}{R_\\rho(0)}\\frac{\\lambda_z}{\\lambda_\\rho}\\,. $$\n在 Thomas-Fermi 区域中，$R_i(0)\\propto1/\\omega_i$，所以 \n$$\\frac{R_z(0)}{R_\\rho(0)}=\\frac{\\omega_\\rho}{\\omega_z}\\,. $$\n\n2. 因此\n$$A(t)=\\frac{\\omega_\\rho}{\\omega_z}\\,\\frac{\\lambda_z}{\\lambda_\\rho}\\,. $$\n\n3. 计算在 $t=0$ 时的二阶导数。设\n$$A=\\beta\\frac{\\lambda_z}{\\lambda_\\rho},\\quad\\beta=\\frac{\\omega_\\rho}{\\omega_z},$$ \n我们有\n$$\\dot A=\\beta\\frac{\\dot\\lambda_z\\,\\lambda_\\rho-\\lambda_z\\,\\dot\\lambda_\\rho}\n{\\lambda_\\rho^2},$$\n并且由于 $\\lambda_i(0)=1,\\;\\dot\\lambda_i(0)=0$，可得 $\\dot A(0)=0$。然后\n$$\\ddot A(0)\n=\\beta\\Big[\\ddot\\lambda_z(0)-\\ddot\\lambda_\\rho(0)\\Big]\\,. $$\n\n4. 根据标度变换方程，\n$$\\ddot\\lambda_\\rho=\\frac{\\omega_\\rho^2}{\\lambda_\\rho^3\\lambda_z},\\quad\n\\ddot\\lambda_z=\\frac{\\omega_z^2}{\\lambda_\\rho^2\\lambda_z^2},$$\n所以在 $t=0$ 时（$\\lambda_\\rho=\\lambda_z=1$），\n$$\\ddot\\lambda_\\rho(0)=\\omega_\\rho^2,\\quad\n\\ddot\\lambda_z(0)=\\omega_z^2.$$\n\n5. 因此，\n$$\\ddot A(0)\n=\\frac{\\omega_\\rho}{\\omega_z}\\bigl(\\omega_z^2-\\omega_\\rho^2\\bigr)\\,. $$", "answer": "$$\\boxed{\\frac{\\omega_\\rho}{\\omega_z}\\bigl(\\omega_z^2-\\omega_\\rho^2\\bigr)}$$", "id": "1276650"}, {"introduction": "解析方法，即便是近似的，也有其局限性。数值模拟是现代物理学中探索复杂动力学不可或缺的工具。这个问题 [@problem_id:2441319] 是一项实践性的编程练习，介绍了分裂算符傅里叶方法——求解TDGPE的标准算法。您将学习如何通过虚时演化技术来高效地计算BEC的基态，这是模拟任何后续实时动力学之前的基本步骤。", "problem": "您的任务是实现一个完整、可运行的程序，将分裂算符（时间分裂谱）方法应用于一维空间中的非线性 Gross-Pitaevskii 方程，其中有效势取决于演化中的波函数。您需要通过归一化虚时演化方法计算得到的一系列小测试用例的稳态化学势，并以指定格式在单行上输出结果。\n\n从一维、无量纲单位下的随时间变化的 Gross-Pitaevskii 方程开始，其中约化普朗克常数和粒子质量均为 1，即 $\\hbar = 1$ 和 $m = 1$：\n$$\n\\mathrm{i}\\,\\frac{\\partial \\psi(x,t)}{\\partial t} \\;=\\; \\left[-\\frac{1}{2}\\frac{\\partial^2}{\\partial x^2} \\;+\\; V_{\\mathrm{ext}}(x) \\;+\\; g\\,|\\psi(x,t)|^2 \\right] \\psi(x,t).\n$$\n通过将 $t$ 替换为 $-\\,\\mathrm{i}\\,\\tau$，在虚时间中演化以获得稳态基态，并在每个时间步后强制对波函数进行归一化，以满足 $\\int |\\psi(x,\\tau)|^2\\,\\mathrm{d}x = 1$。使用一个二阶精度的对称分裂算符方案，该方案在傅里叶空间中的动能算符和实空间中合并的外部势加非线性势之间交替。使用与有限域上离散傅里叶变换一致的周期性边界条件。\n\n对于给定的最终归一化态 $\\psi(x)$，使用稳态 Gross-Pitaevskii 方程所隐含的定义计算稳态解的化学势 $\\mu$：\n$$\n\\mu\\,\\psi(x) \\;=\\; \\left[-\\frac{1}{2}\\frac{\\partial^2}{\\partial x^2} \\;+\\; V_{\\mathrm{ext}}(x) \\;+\\; g\\,|\\psi(x)|^2 \\right]\\psi(x),\n$$\n并将 $\\mu$ 表示为从 $\\psi(x)$ 及其梯度计算出的标量。所有积分必须通过数值网格上适当的黎曼和来近似，动能贡献所需的空间导数必须以与所选网格上的傅里叶表示一致的方式进行计算。\n\n所有量均为无量纲单位，因此您的程序必须以无量纲能量单位输出化学势。\n\n为以下参数集的测试套件实现您的程序，所有情况均在一维空间中：\n- 情况 A（线性谐振子，基准检查）：\n  - 外部势 $V_{\\mathrm{ext}}(x) = \\tfrac{1}{2}\\,\\omega^2 x^2$，其中 $\\omega = 1.0$。\n  - 相互作用强度 $g = 0.0$。\n  - 域长度 $L = 20.0$，采用周期性边界条件，网格点数 $N = 512$，因此 $\\Delta x = L/N$。\n  - 虚时间步长 $\\Delta \\tau = 0.001$，步数 $N_{\\mathrm{steps}} = 2500$。\n  - 初始波函数：归一化高斯函数 $\\psi(x,0) \\propto \\exp\\!\\big(-x^2/(2\\sigma^2)\\big)$，其中 $\\sigma = 1.0$，归一化至 $\\int |\\psi(x,0)|^2\\,\\mathrm{d}x = 1$。\n- 情况 B（排斥性非线性谐振子）：\n  - 外部势 $V_{\\mathrm{ext}}(x) = \\tfrac{1}{2}\\,\\omega^2 x^2$，其中 $\\omega = 1.0$。\n  - 相互作用强度 $g = 1.0$。\n  - 域长度 $L = 20.0$，采用周期性边界条件，网格点数 $N = 512$。\n  - 虚时间步长 $\\Delta \\tau = 0.001$，步数 $N_{\\mathrm{steps}} = 2500$。\n  - 初始波函数：归一化高斯函数，其中 $\\sigma = 1.0$，归一化为 1。\n- 情况 C（周期性盒子，均匀稳态）：\n  - 外部势 $V_{\\mathrm{ext}}(x) = 0$。\n  - 相互作用强度 $g = 2.0$。\n  - 域长度 $L = 10.0$，采用周期性边界条件，网格点数 $N = 512$。\n  - 虚时间步长 $\\Delta \\tau = 0.001$，步数 $N_{\\mathrm{steps}} = 10$。\n  - 初始波函数：均匀函数 $\\psi(x,0) = 1/\\sqrt{L}$，使其恰好归一化。\n\n您的程序必须：\n- 对每种情况，使用虚时间步长上为二阶的对称分裂算符方案演化至最终时间，并在每个时间步后进行归一化以维持 $\\int |\\psi|^2\\,\\mathrm{d}x = 1$。\n- 从最终的归一化态为每种情况计算化学势 $\\mu$。\n- 生成单行输出，包含三个结果，格式为逗号分隔并用方括号括起的列表，例如 `[0.500000,1.234567,0.200000]`，每个值四舍五入到 $6$ 位小数。\n\n约束和实现细节：\n- 空间网格：$x_j = x_{\\min} + j\\,\\Delta x$，其中 $x_{\\min} = -L/2$，$j = 0,1,\\dots,N-1$，以及 $\\Delta x = L/N$。\n- 波数：用于动能步和谱导数的 k 网格必须与离散傅里叶变换和周期性边界条件一致。\n- 算法必须是完全自包含的，并且不得读取任何输入。\n- 您的程序必须计算上述三种情况的化学势，并以要求的输出格式返回。\n\n您的最终程序必须是一个完整、可运行的脚本，仅打印一行：一个 `[\\mu_A,\\mu_B,\\mu_C]` 格式的列表，每个条目四舍五入到 $6$ 位小数。", "solution": "该问题要求实现一个数值算法，以找到一维 Gross-Pitaevskii 方程 (GPE) 的稳态基态，并计算其相关的化学势 $\\mu$。指定的方法是使用二阶对称分裂算符方案的虚时演化。\n\n随时间变化的 GPE 给出如下：\n$$\n\\mathrm{i}\\,\\frac{\\partial \\psi(x,t)}{\\partial t} \\;=\\; \\hat{H}\\psi(x,t) \\;=\\; \\left[-\\frac{1}{2}\\frac{\\partial^2}{\\partial x^2} \\;+\\; V_{\\mathrm{ext}}(x) \\;+\\; g\\,|\\psi(x,t)|^2 \\right] \\psi(x,t)\n$$\n其中质量 $m$ 和约化普朗克常数 $\\hbar$ 均设为 $1$。哈密顿量 $\\hat{H}$ 由动能算符 $\\hat{T} = -\\frac{1}{2}\\frac{\\partial^2}{\\partial x^2}$ 和势能算符 $\\hat{V}(x, \\psi) = V_{\\mathrm{ext}}(x) + g\\,|\\psi(x,t)|^2$ 组成，后者包含一个依赖于波函数密度本身的项。\n\n为了找到基态，我们采用虚时演化方法。这是通过替换 $t \\to -i\\tau$ 实现的，它将薛定谔方程转换为一个关于虚时间变量 $\\tau$ 的扩散型方程：\n$$\n\\frac{\\partial \\psi(x,\\tau)}{\\partial \\tau} \\;=\\; -\\hat{H}\\psi(x,\\tau)\n$$\n这个方程在一个小时间步长 $\\Delta\\tau$ 内的形式解是 $\\psi(x, \\tau+\\Delta\\tau) = e^{-\\hat{H}\\Delta\\tau}\\psi(x,\\tau)$。当一个任意初始态按此规则进行演化时，对应于较高能量本征态的分量会比基态分量衰减得更快。通过在每个步骤重复应用演化算符并重归一化波函数，该状态会收敛到基态，即 $\\hat{H}$ 的具有最低本征值的本征态。\n\n演化算符 $e^{-\\hat{H}\\Delta\\tau} = e^{-(\\hat{T} + \\hat{V})\\Delta\\tau}$ 难以直接计算，因为动能算符 $\\hat{T}$ 和势能算符 $\\hat{V}$ 不对易 ($\\left[\\hat{T}, \\hat{V}\\right] \\neq 0$)。分裂算符方法通过分离动能和势能的传播来近似该演化。采用了一种二阶精度的对称分裂，也称为 Strang 分裂：\n$$\ne^{-(\\hat{T} + \\hat{V})\\Delta\\tau} \\approx e^{-\\hat{V}\\Delta\\tau/2} \\, e^{-\\hat{T}\\Delta\\tau} \\, e^{-\\hat{V}\\Delta\\tau/2} + O(\\Delta\\tau^3)\n$$\n该方案在从 $\\tau$ 到 $\\tau + \\Delta\\tau$ 的单个时间步内按以下算法实现：\n\n1.  **势能半步：** 波函数首先在势能算符下演化半个时间步 $\\Delta\\tau/2$。此操作在位置空间是局域的，相当于一个简单的乘法。对于非线性 GPE，必须使用当前状态 $\\psi(x,\\tau)$ 来计算势：\n    $$\n    \\psi'(x) = e^{-(V_{\\mathrm{ext}}(x) + g|\\psi(x,\\tau)|^2)\\Delta\\tau/2} \\psi(x,\\tau)\n    $$\n2.  **动能全步：** 动能算符 $\\hat{T}$ 在动量（或 k）空间是局域的。演化过程使用快速傅里叶变换（FFT）可以最高效地执行。状态 $\\psi'(x)$ 被变换到傅里叶空间，$\\tilde{\\psi}'(k) = \\mathcal{F}\\{\\psi'(x)\\}$。在此基底下，动能算符是对角的，$\\hat{T}_k = k^2/2$，因此演化是一个乘法操作：\n    $$\n    \\tilde{\\psi}''(k) = e^{-k^2\\Delta\\tau/2} \\tilde{\\psi}'(k)\n    $$\n    结果随后被逆变换回位置空间：$\\psi''(x) = \\mathcal{F}^{-1}\\{\\tilde{\\psi}''(k)\\}$。波矢网格 $k_j$ 必须与空间网格 $x_j$ 一致，这可以通过使用 `fftfreq` 函数来实现，其中 $k_j = 2\\pi f_j$，$f_j$ 是离散频率。对于长度为 $L$、有 $N$ 个点且网格间距为 $\\Delta x = L/N$ 的空间域，波矢为 $k = 2\\pi \\cdot \\texttt{fftfreq}(N, d=\\Delta x)$。\n\n3.  **势能半步（第二次）：** 在势能算符下再进行半个时间步 $\\Delta\\tau/2$ 的演化，以完成对称步。为确保对称性和稳定性，使用更新后的波函数 $\\psi''(x)$ 重新计算势：\n    $$\n    \\psi(x, \\tau+\\Delta\\tau)_{\\text{un-norm}} = e^{-(V_{\\mathrm{ext}}(x) + g|\\psi''(x)|^2)\\Delta\\tau/2} \\psi''(x)\n    $$\n4.  **归一化：** 由于虚时演化不守恒范数，因此必须在每个完整步骤后对波函数进行重归一化，以维持物理约束 $\\int |\\psi|^2 dx = 1$。积分由黎曼和近似：$I = \\sum_j |\\psi_j|^2 \\Delta x$。然后波函数更新为 $\\psi_j \\to \\psi_j / \\sqrt{I}$。\n\n经过足够多的步数 $N_{\\mathrm{steps}}$ 后，波函数 $\\psi(x)$ 收敛到稳态基态。化学势 $\\mu$ 是与此状态对应的本征值，由稳态 GPE 定义：$\\hat{H}\\psi(x) = \\mu\\psi(x)$。$\\mu$ 的值被计算为哈密顿量相对于最终归一化态的期望值：\n$$\n\\mu = \\langle \\psi | \\hat{H} | \\psi \\rangle = \\int \\psi^*(x) \\hat{H} \\psi(x) \\, dx\n$$\n该期望值是三个能量贡献的总和：\n- **动能：** $E_{kin} = \\int \\psi^*(x) \\left(-\\frac{1}{2}\\frac{\\partial^2}{\\partial x^2}\\right) \\psi(x) \\, dx$。这在傅里叶空间中可以高效计算：$E_{kin} = \\int \\tilde{\\psi}^*(k) \\left(\\frac{k^2}{2}\\right) \\tilde{\\psi}(k) \\, dk$。在数值上，这是 $\\sum_j |\\tilde{\\psi}_j|^2 \\frac{k_j^2}{2}$（有适当的 FFT 归一化），或者更直接地，通过将动能算符作用于 $\\psi$ 并计算内积：$E_{kin} \\approx \\Delta x \\sum_j \\psi_j^* \\mathcal{F}^{-1}\\{ (k^2/2) \\mathcal{F}\\{\\psi_j\\} \\}$。\n- **外部势能：** $E_{pot, ext} = \\int V_{\\mathrm{ext}}(x) |\\psi(x)|^2 \\, dx$。这通过求和 $\\Delta x \\sum_j V_{\\mathrm{ext}}(x_j) |\\psi_j|^2$ 来近似。\n- **相互作用能：** $E_{int} = \\int g |\\psi(x)|^4 \\, dx$。这通过求和 $\\Delta x \\sum_j g |\\psi_j|^4$ 来近似。\n\n化学势是三者之和 $\\mu = E_{kin} + E_{pot, ext} + E_{int}$。该算法应用于指定的三个测试用例中的每一个，得出它们各自的化学势。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.fft import fft, ifft, fftfreq\n\ndef compute_mu(params):\n    \"\"\"\n    Computes the chemical potential for a given Gross-Pitaevskii equation setup\n    using imaginary-time propagation with a split-operator method.\n\n    Args:\n        params (dict): A dictionary containing all simulation parameters:\n            - L (float): Domain length.\n            - N (int): Number of grid points.\n            - g (float): Interaction strength.\n            - V_ext_func (callable): Function for the external potential V_ext(x).\n            - dt (float): Imaginary time step (delta_tau).\n            - N_steps (int): Number of propagation steps.\n            - psi0_func (callable): Function for the initial wavefunction psi(x, 0).\n\n    Returns:\n        float: The computed chemical potential, mu.\n    \"\"\"\n    # Unpack parameters\n    L = params[\"L\"]\n    N = params[\"N\"]\n    g = params[\"g\"]\n    V_ext_func = params[\"V_ext_func\"]\n    dt = params[\"dt\"]\n    N_steps = params[\"N_steps\"]\n    psi0_func = params[\"psi0_func\"]\n\n    # 1. Setup spatial and momentum grids\n    dx = L / N\n    x = np.linspace(-L / 2, L / 2 - dx, N)\n    k = 2 * np.pi * fftfreq(N, d=dx)\n\n    # 2. Setup kinetic operator and time-evolution propagators\n    T_k = 0.5 * k**2\n    kinetic_propagator = np.exp(-T_k * dt)\n    V_ext = V_ext_func(x)\n\n    # 3. Setup initial wavefunction and normalize it\n    psi = psi0_func(x).astype(np.complex128)\n    norm_sq = np.sum(np.abs(psi)**2) * dx\n    psi = psi / np.sqrt(norm_sq)\n\n    # 4. Imaginary time evolution loop\n    for _ in range(N_steps):\n        # Symmetric split-operator step: V/2, T, V/2\n        \n        # First half-step in potential\n        V_eff = V_ext + g * np.abs(psi)**2\n        psi *= np.exp(-V_eff * dt / 2.0)\n\n        # Full step in kinetic energy (in Fourier space)\n        psi_k = fft(psi)\n        psi_k *= kinetic_propagator\n        psi = ifft(psi_k)\n\n        # Second half-step in potential\n        V_eff = V_ext + g * np.abs(psi)**2\n        psi *= np.exp(-V_eff * dt / 2.0)\n\n        # Renormalize the wavefunction after the full step\n        norm_sq = np.sum(np.abs(psi)**2) * dx\n        psi /= np.sqrt(norm_sq)\n\n    # 5. Calculate the chemical potential mu from the final stationary state\n    # mu = <psi|H|psi> = <T> + <V_ext> + <V_int>\n    \n    # Kinetic energy expectation value\n    psi_k = fft(psi)\n    T_psi = ifft(T_k * psi_k)\n    E_kin = np.sum(np.conj(psi) * T_psi).real * dx\n    \n    # External potential energy expectation value\n    E_pot_ext = np.sum(V_ext * np.abs(psi)**2).real * dx\n    \n    # Interaction energy expectation value\n    E_int = np.sum(g * np.abs(psi)**4).real * dx\n    \n    mu = E_kin + E_pot_ext + E_int\n\n    return mu\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A: Linear harmonic oscillator (g=0)\n        {\n            \"L\": 20.0, \"N\": 512, \"g\": 0.0, \"omega\": 1.0, \"sigma\": 1.0,\n            \"dt\": 0.001, \"N_steps\": 2500,\n            \"V_ext_func\": lambda x, w=1.0: 0.5 * w**2 * x**2,\n            \"psi0_func\": lambda x, s=1.0: np.exp(-x**2 / (2 * s**2))\n        },\n        # Case B: Repulsive nonlinear harmonic oscillator (g>0)\n        {\n            \"L\": 20.0, \"N\": 512, \"g\": 1.0, \"omega\": 1.0, \"sigma\": 1.0,\n            \"dt\": 0.001, \"N_steps\": 2500,\n            \"V_ext_func\": lambda x, w=1.0: 0.5 * w**2 * x**2,\n            \"psi0_func\": lambda x, s=1.0: np.exp(-x**2 / (2 * s**2))\n        },\n        # Case C: Periodic box, uniform state\n        {\n            \"L\": 10.0, \"N\": 512, \"g\": 2.0,\n            \"dt\": 0.001, \"N_steps\": 10,\n            \"V_ext_func\": lambda x: np.zeros_like(x),\n            \"psi0_func\": lambda x, L=10.0: np.full_like(x, 1.0 / np.sqrt(L))\n        }\n    ]\n\n    results = []\n    for case_params in test_cases:\n        mu = compute_mu(case_params)\n        results.append(mu)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2441319"}]}