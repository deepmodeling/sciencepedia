{"hands_on_practices": [{"introduction": "霍夫曼编码是构建最优前缀码的基石，它为无损数据压缩提供了理论基础。本次练习将超越基础的二元编码，探讨为三元信源设计霍夫曼编码的场景。通过这个练习，你将亲手实践为D元信源构建霍夫曼树的过程，包括处理符号数量以满足算法要求（[@problem_id:53364]），并进一步分析码字长度的统计特性，这对于深入理解编码性能的稳定性至关重要。", "problem": "一个信源从字母表 $\\mathcal{S} = \\{s_1, s_2, s_3, s_4\\}$ 中产生符号。这些符号的概率由 $p_1 = p$、$p_2 = p/2$、$p_3 = 3p/10$ 和 $p_4 = p/5$ 给出，其中 $p$ 为某个常数。需要使用三元字母表 $\\mathcal{C} = \\{0, 1, 2\\}$ 为此信源设计一种高效的无前缀码。\n\n为此，我们构建一个三元（$D=3$）Huffman 码。标准的 Huffman 编码算法被推广以适用于 D 元字母表。对于一个包含 $N_0$ 个符号的信源，可能需要添加 $k$ 个概率为零的“虚拟”符号，以确保符号总数 $N=N_0+k$ 满足条件 $(N-1) \\pmod{D-1} = 0$。这确保了符号可以被合并成一棵满 D 元树。然后，该算法通过迭代地将概率最低的 $D$ 个符号合并成一个新的复合符号，直到只剩下一个符号（树的根节点）为止。符号 $s_i$ 的码字长度 $l_i$ 是其在树中对应叶节点的深度。\n\n你的任务是计算原始信源四个符号的码字长度的方差。方差 $\\sigma_L^2$ 定义为 $\\sigma_L^2 = \\mathbb{E}[L^2] - (\\mathbb{E}[L])^2$，其中 $L$ 是码字长度的随机变量，$\\mathbb{E}[L]$ 是其期望（平均长度），$\\mathbb{E}[L^2]$ 是其均方值。", "solution": "概率由 $p_1 = p$、$p_2 = p/2$、$p_3 = 3p/10$ 和 $p_4 = p/5$ 给出。概率之和必须等于 1：\n\n$$\np + \\frac{p}{2} + \\frac{3p}{10} + \\frac{p}{5} = 1\n$$\n\n将所有项通分为分母 10：\n\n$$\n\\frac{10p}{10} + \\frac{5p}{10} + \\frac{3p}{10} + \\frac{2p}{10} = \\frac{20p}{10} = 2p = 1\n$$\n\n解出 $p$：\n\n$$\np = \\frac{1}{2}\n$$\n\n代入 $p = 1/2$ 得到确切的概率：\n\n$$\np_1 = \\frac{1}{2}, \\quad p_2 = \\frac{1}{4}, \\quad p_3 = \\frac{3}{20}, \\quad p_4 = \\frac{1}{10}\n$$\n\n\n一个三元（$D=3$）Huffman 码要求符号数量 $N$ 满足 $(N-1) \\equiv 0 \\pmod{D-1}$。对于 $N_0 = 4$ 个原始符号：\n\n$$\n(4-1) \\pmod{2} = 3 \\pmod{2} = 1 \\not\\equiv 0\n$$\n\n添加 $k$ 个概率为零的虚拟符号以满足该条件：\n\n$$\n(4 + k - 1) \\pmod{2} = (3 + k) \\pmod{2} = 0\n$$\n\n最小的非负整数 $k$ 是 $k=1$，所以添加一个虚拟符号，得到五个符号，其概率为：\n\n$$\n\\frac{1}{2}, \\quad \\frac{1}{4}, \\quad \\frac{3}{20}, \\quad \\frac{1}{10}, \\quad 0\n$$\n\n\nHuffman 算法通过重复地将三个概率最小的符号合并为一个新的复合符号来进行：\n- **步骤 1：** 三个最小的概率是 $0$、$1/10$ 和 $3/20$。将它们合并成一个复合符号，其概率为：\n  \n$$\n  0 + \\frac{1}{10} + \\frac{3}{20} = \\frac{2}{20} + \\frac{3}{20} = \\frac{5}{20} = \\frac{1}{4}\n  $$\n\n  剩余的符号：$s_1$（$1/2$）、$s_2$（$1/4$）和复合符号（$1/4$）。\n- **步骤 2：** 将剩下的三个符号（$1/2$、$1/4$、$1/4$）合并成一个单一的根节点，其概率为：\n  \n$$\n  \\frac{1}{2} + \\frac{1}{4} + \\frac{1}{4} = 1\n  $$\n\n\nHuffman 树构建完成，码字长度根据深度分配如下：\n- $s_1$：深度为 1，长度 $l_1 = 1$\n- $s_2$：深度为 1，长度 $l_2 = 1$\n- $s_3$：深度为 2，长度 $l_3 = 2$\n- $s_4$：深度为 2，长度 $l_4 = 2$\n\n码字长度 $L$ 的方差定义为：\n\n$$\n\\sigma_L^2 = \\mathbb{E}[L^2] - (\\mathbb{E}[L])^2\n$$\n\n首先，计算 $\\mathbb{E}[L]$：\n\n$$\n\\mathbb{E}[L] = \\sum_{i=1}^{4} p_i l_i = p_1 l_1 + p_2 l_2 + p_3 l_3 + p_4 l_4\n$$\n\n代入概率和长度：\n\n$$\n\\mathbb{E}[L] = \\left(\\frac{1}{2} \\cdot 1\\right) + \\left(\\frac{1}{4} \\cdot 1\\right) + \\left(\\frac{3}{20} \\cdot 2\\right) + \\left(\\frac{1}{10} \\cdot 2\\right) = \\frac{1}{2} + \\frac{1}{4} + \\frac{6}{20} + \\frac{2}{10}\n$$\n\n通分为分母 20：\n\n$$\n\\frac{1}{2} = \\frac{10}{20}, \\quad \\frac{1}{4} = \\frac{5}{20}, \\quad \\frac{6}{20} = \\frac{6}{20}, \\quad \\frac{2}{10} = \\frac{4}{20}\n$$\n\n\n$$\n\\mathbb{E}[L] = \\frac{10}{20} + \\frac{5}{20} + \\frac{6}{20} + \\frac{4}{20} = \\frac{25}{20} = \\frac{5}{4}\n$$\n\n\n接下来，计算 $\\mathbb{E}[L^2]$：\n\n$$\n\\mathbb{E}[L^2] = \\sum_{i=1}^{4} p_i l_i^2 = p_1 l_1^2 + p_2 l_2^2 + p_3 l_3^2 + p_4 l_4^2\n$$\n\n代入：\n\n$$\n\\mathbb{E}[L^2] = \\left(\\frac{1}{2} \\cdot 1^2\\right) + \\left(\\frac{1}{4} \\cdot 1^2\\right) + \\left(\\frac{3}{20} \\cdot 2^2\\right) + \\left(\\frac{1}{10} \\cdot 2^2\\right) = \\frac{1}{2} + \\frac{1}{4} + \\frac{12}{20} + \\frac{4}{10}\n$$\n\n通分为分母 20：\n\n$$\n\\frac{1}{2} = \\frac{10}{20}, \\quad \\frac{1}{4} = \\frac{5}{20}, \\quad \\frac{12}{20} = \\frac{12}{20}, \\quad \\frac{4}{10} = \\frac{8}{20}\n$$\n\n\n$$\n\\mathbb{E}[L^2] = \\frac{10}{20} + \\frac{5}{20} + \\frac{12}{20} + \\frac{8}{20} = \\frac{35}{20} = \\frac{7}{4}\n$$\n\n\n现在计算方差：\n\n$$\n\\sigma_L^2 = \\mathbb{E}[L^2] - (\\mathbb{E}[L])^2 = \\frac{7}{4} - \\left(\\frac{5}{4}\\right)^2 = \\frac{7}{4} - \\frac{25}{16}\n$$\n\n通分为分母 16：\n\n$$\n\\frac{7}{4} = \\frac{28}{16}, \\quad \\frac{25}{16} = \\frac{25}{16}\n$$\n\n\n$$\n\\sigma_L^2 = \\frac{28}{16} - \\frac{25}{16} = \\frac{3}{16}\n$$", "answer": "$$\n\\boxed{\\dfrac{3}{16}}\n$$", "id": "53364"}, {"introduction": "从理论走向实践，LZW（Lempel-Ziv-Welch）算法是工业界应用最广泛的自适应字典压缩算法之一，例如在GIF和PDF格式中你都能发现它的身影。这个练习提供了一个绝佳的动手机会，让你模拟LZW编码器的完整工作流程。你将追踪字典的动态增长，并根据字典大小的变化，计算每个输出码的比特数（[@problem_id:53455]），从而深刻理解该算法是如何在处理数据流时“学习”并实现高效压缩的。", "problem": "Lempel-Ziv-Welch (LZW) 算法是一种通用的无损数据压缩算法。其操作依赖于在压缩过程中建立一个遇到的字符串字典。\n\nLZW 算法可概括如下：\n1.  使用一组单字符字符串初始化字典。\n2.  将 `W`（工作字符串）设置成输入流的第一个字符。\n3.  遍历输入流：\n    a. 读取下一个字符 `K`。\n    b. 如果字符串 `W + K` 存在于字典中，则设置 `W = W + K`。\n    c. 如果 `W + K` 不在字典中，则：\n        i. 输出与 `W` 对应的字典码。\n        ii. 将新字符串 `W + K` 以新编码添加到字典中。\n        iii. 设置 `W = K`。\n4.  输入流耗尽后，输出最后一个工作字符串 `W` 的编码。\n\n考虑具有以下规范的 LZW 的具体实现：\n*   初始字典包含 256 个条目，用于 8 位 ASCII 字符。这些字符的编码是其对应的 ASCII 值 (0-255)。用于新字典条目的下一个可用编码是 256。\n*   用于表示输出编码的比特数由输出瞬间的字典大小决定。如果字典包含 $N$ 个条目，则输出编码使用 $\\lceil \\log_2(N) \\rceil$ 比特表示。\n*   待压缩的输入字符串为 `BANANA_BANDANA`。\n\n您的任务是计算最终压缩输出序列中的总比特数。", "solution": "输入字符串为 \"BANANA_BANDANA\"。逐步模拟 LZW 压缩过程，以确定输出编码以及每次输出时的字典大小。字典初始有 256 个条目（0 到 255 用于 ASCII 字符）。下一个可用编码是 256。\n\n**分步模拟：**\n\n1. 用 ASCII 0-255 初始化字典。设置 $ W = $ 第一个字符 'B'。\n2. 读取下一个字符 'A'：\"BA\" 不在字典中。\n   - 输出 'B' 的编码 (66)。\n   - 将 \"BA\" 添加到字典，编码为 256。\n   - 设置 $ W = $ 'A'。\n   - 输出时的字典大小：256 → 比特数 = $ \\lceil \\log_2(256) \\rceil = 8 $。\n3. 读取下一个字符 'N'：\"AN\" 不在字典中。\n   - 输出 'A' 的编码 (65)。\n   - 将 \"AN\" 添加到字典，编码为 257。\n   - 设置 $ W = $ 'N'。\n   - 输出时的字典大小：257 → 比特数 = $ \\lceil \\log_2(257) \\rceil = 9 $（因为 $ 256 < 257 < 512 $）。\n4. 读取下一个字符 'A'：\"NA\" 不在字典中。\n   - 输出 'N' 的编码 (78)。\n   - 将 \"NA\" 添加到字典，编码为 258。\n   - 设置 $ W = $ 'A'。\n   - 输出时的字典大小：258 → 比特数 = 9。\n5. 读取下一个字符 'N'：\"A\" + \"N\" = \"AN\" 在字典中（编码 257）。设置 $ W = $ \"AN\"。\n6. 读取下一个字符 'A'：\"AN\" + \"A\" = \"ANA\" 不在字典中。\n   - 输出 \"AN\" 的编码 (257)。\n   - 将 \"ANA\" 添加到字典，编码为 259。\n   - 设置 $ W = $ 'A'。\n   - 输出时的字典大小：259 → 比特数 = 9。\n7. 读取下一个字符 '_' (下划线)：\"A\" + \"_\" = \"A_\" 不在字典中。\n   - 输出 'A' 的编码 (65)。\n   - 将 \"A_\" 添加到字典，编码为 260。\n   - 设置 $ W = $ '_'。\n   - 输出时的字典大小：260 → 比特数 = 9。\n8. 读取下一个字符 'B'：\"_\" + \"B\" = \"_B\" 不在字典中。\n   - 输出 '_' 的编码 (95, ASCII 值)。\n   - 将 \"_B\" 添加到字典，编码为 261。\n   - 设置 $ W = $ 'B'。\n   - 输出时的字典大小：261 → 比特数 = 9。\n9. 读取下一个字符 'A'：\"B\" + \"A\" = \"BA\" 在字典中（编码 256）。设置 $ W = $ \"BA\"。\n10. 读取下一个字符 'N'：\"BA\" + \"N\" = \"BAN\" 不在字典中。\n    - 输出 \"BA\" 的编码 (256)。\n    - 将 \"BAN\" 添加到字典，编码为 262。\n    - 设置 $ W = $ 'N'。\n    - 输出时的字典大小：262 → 比特数 = 9。\n11. 读取下一个字符 'D'：\"N\" + \"D\" = \"ND\" 不在字典中。\n    - 输出 'N' 的编码 (78)。\n    - 将 \"ND\" 添加到字典，编码为 263。\n    - 设置 $ W = $ 'D'。\n    - 输出时的字典大小：263 → 比特数 = 9。\n12. 读取下一个字符 'A'：\"D\" + \"A\" = \"DA\" 不在字典中。\n    - 输出 'D' 的编码 (68)。\n    - 将 \"DA\" 添加到字典，编码为 264。\n    - 设置 $ W = $ 'A'。\n    - 输出时的字典大小：264 → 比特数 = 9。\n13. 读取下一个字符 'N'：\"A\" + \"N\" = \"AN\" 在字典中（编码 257）。设置 $ W = $ \"AN\"。\n14. 读取下一个字符 'A'：\"AN\" + \"A\" = \"ANA\" 在字典中（编码 259）。设置 $ W = $ \"ANA\"。输入结束。\n    - 输出 \"ANA\" 的编码 (259)。\n    - 输出时的字典大小：265（因为最后一次添加的编码是 264，这里没有添加新字符串）→ 比特数 = $ \\lceil \\log_2(265) \\rceil = 9 $。\n\n**输出编码和比特数统计：**\n- 输出 1: 66 → 8 比特\n- 输出 2: 65 → 9 比特\n- 输出 3: 78 → 9 比特\n- 输出 4: 257 → 9 比特\n- 输出 5: 65 → 9 比特\n- 输出 6: 95 → 9 比特\n- 输出 7: 256 → 9 比特\n- 输出 8: 78 → 9 比特\n- 输出 9: 68 → 9 比特\n- 输出 10: 259 → 9 比特\n\n**总比特数计算：**\n- 输出 1: 8 比特\n- 输出 2 到 10: 9 个输出 × 每个 9 比特 = 81 比特\n- 总比特数 = 8 + 81 = 89", "answer": "\\boxed{89}", "id": "53455"}, {"introduction": "信道容量定义了在有噪声信道上可靠通信的速率上限，是信息论的核心概念。对于频率特性不均匀的连续信道，例如本题中噪声功率谱密度随频率变化的信道，如何有效分配有限的信号功率以达到最大传输速率是一个关键问题。这个练习将引导你应用著名的“注水”原理（[@problem_id:53407]），这是一种优美的功率分配策略，它直观地展示了如何根据信道不同频段的“好坏”来智能地分配能量，从而最大化整体信道容量。", "problem": "考虑一个受加性有色高斯噪声影响的连续时间通信信道。信道输出 $Y(t)$ 由 $Y(t) = X(t) + N(t)$ 给出，其中 $X(t)$ 是输入信号，$N(t)$ 是噪声。\n\n输入信号 $X(t)$ 的总平均功率受限于 $P$。传输是带限的。噪声过程 $N(t)$ 是一个零均值平稳高斯过程，其单边功率谱密度 (PSD) 由下式给出：\n$$\nS_N(f) = \\begin{cases}\n\\alpha f & \\text{对于 } f \\in [W_1, W_2] \\\\\n\\infty & \\text{其他}\n\\end{cases}\n$$\n此处，$f$ 是频率，$\\alpha$、$W_1$和 $W_2$ 是正常数，且满足 $W_2 > W_1 > 0$。\n\n对于一个实值信号，该信道的容量 $C$ 可通过在所有满足功率约束 $\\int_{W_1}^{W_2} S_X(f) df = P$ 的有效信号功率分配 $S_X(f)$ 上，最大化频谱信息率的积分来求得。容量公式为：\n$$\nC = \\max_{S_X(f)} \\int_{W_1}^{W_2} \\log_2 \\left(1 + \\frac{S_X(f)}{S_N(f)}\\right) df\n$$\n求该信道的容量 $C$。计算时应假设总信号功率 $P$ 足够小，使得最优功率分配策略不占用整个可用频带 $[W_1, W_2]$。请用 $P$、$\\alpha$ 和 $W_1$ 来表示您的答案。", "solution": "我们在频带 $[W_1,W_2]$ 上应用注水解，并假设只有 $[W_1,F]$ 被使用，其中 $F\\le W_2$。噪声功率谱密度为 $S_N(f)=\\alpha f$。设水位为 $\\mu$。那么\n1. 功率分配：\n$$S_X(f)=\\bigl[\\mu-\\alpha f\\bigr]_+\\,,\\quad f\\in[W_1,W_2].$$\n在小功率 $P$ 的假设下，我们得到支撑集为 $f\\in[W_1,F]$，且有 $\\mu=\\alpha F$。\n2. 总功率约束\n$$\\int_{W_1}^F(\\mu-\\alpha f)\\,df\n=\\int_{W_1}^F(\\alpha F-\\alpha f)\\,df\n=\\alpha\\int_{W_1}^F(F-f)\\,df\n=\\frac{\\alpha}{2}(F-W_1)^2\n= P$$\n得到\n$$F-W_1=\\sqrt{\\frac{2P}{\\alpha}}\\,,\\qquad F=W_1+\\sqrt{\\frac{2P}{\\alpha}}\\,. $$\n3. 容量为\n$$\nC=\\int_{W_1}^F\\log_2\\!\\biggl(1+\\frac{S_X(f)}{\\alpha f}\\biggr)\\,df\n=\\int_{W_1}^F\\log_2\\!\\frac{\\alpha F}{\\alpha f}\\,df\n=\\int_{W_1}^F\\bigl[\\log_2(\\alpha F)-\\log_2(\\alpha f)\\bigr]df.\n$$ \n分别计算各项：设 $D=F-W_1$，\n$$\n\\int_{W_1}^F\\log_2(\\alpha F)\\,df=D\\log_2(\\alpha F),\\quad\n\\int_{W_1}^F\\log_2(\\alpha f)\\,df\n=\\frac{1}{\\ln2}\\bigl[f\\ln(\\alpha f)-f\\bigr]_{W_1}^{F}.\n$$\n因此\n$$\nC=\\frac{1}{\\ln2}\\Bigl[D\\ln(\\alpha F)-\\bigl(F\\ln(\\alpha F)-F-W_1\\ln(\\alpha W_1)+W_1\\bigr)\\Bigr].\n$$\n使用 $D=F-W_1$ 和 $\\ln(\\alpha F)=\\ln(\\alpha W_1)+\\ln\\bigl(1+\\frac{D}{W_1}\\bigr)$，可以得到\n$$\nC=\\frac{1}{\\ln2}\\Bigl[-W_1\\ln\\bigl(1+\\tfrac{D}{W_1}\\bigr)+D\\Bigr]\n=\\frac{1}{\\ln2}\\Bigl[-W_1\\ln\\!\\bigl(1+\\sqrt{\\tfrac{2P}{\\alpha}}/W_1\\bigr)\n+\\sqrt{\\tfrac{2P}{\\alpha}}\\Bigr].\n$$\n这就是容量，单位为比特/秒。", "answer": "$$\\boxed{\\frac{\\sqrt{\\tfrac{2P}{\\alpha}}-W_{1}\\,\\ln\\!\\bigl(1+\\tfrac{1}{W_{1}}\\sqrt{\\tfrac{2P}{\\alpha}}\\bigr)}{\\ln2}}$$", "id": "53407"}]}