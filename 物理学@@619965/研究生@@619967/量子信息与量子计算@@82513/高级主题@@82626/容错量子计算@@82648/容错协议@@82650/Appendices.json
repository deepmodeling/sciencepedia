{"hands_on_practices": [{"introduction": "量子纠错不仅仅关乎编码本身；测量和校正过程也同样脆弱。这个问题以一个简单的重复码为例，生动地展示了在综合征测量过程中的单个CNOT门故障如何出人意料地导致错误传播和误判，并最终翻转整个逻辑比特。这个练习 [@problem_id:83521] 是理解设计真正容错操作中微妙挑战的基础。", "problem": "一个距离为3的重复码被用来保护一个逻辑量子比特免受比特翻转（$X$）错误的影响。逻辑基态定义为 $|0\\rangle_L = |000\\rangle$ 和 $|1\\rangle_L = |111\\rangle$。通过测量两个稳定器生成元 $S_1 = Z_1 Z_2$ 和 $S_2 = Z_2 Z_3$ 来实现错误探测和纠正，其中 $Z_i$ 是作用在量子比特 $i$ 上的泡利-Z算符。\n\n稳定器 $Z_i Z_j$ 的测量是使用一个辅助量子比特（记作 ancilla）来执行的。该辅助量子比特被初始化到 $|0\\rangle_a$ 态，然后应用一个由两个连续的 CNOT 门组成的线路，即先 CNOT($i, a$) 后 CNOT($j, a$)。在计算基 $\\{|0\\rangle, |1\\rangle\\}$ 下测量该辅助量子比特，得到 syndrome 位。测量结果为 0 对应于 syndrome 位 $s=0$（稳定器本征值为 $+1$），测量结果为 1 对应于 $s=1$（稳定器本征值为 $-1$）。\n\n考虑一个初始化在无错误状态 $|0\\rangle_L$ 的逻辑量子比特。启动一个单周期的错误纠正，其中首先测量 $S_1$ 的 syndrome，然后测量 $S_2$ 的 syndrome。\n\n在此周期中发生了一个单一故障：在测量第一个稳定器 $S_1 = Z_1 Z_2$ 的过程中，第二个 CNOT 门 CNOT(2, a) 出现故障。这个故障门在执行标准 CNOT(2, a) 操作的同时，还对其控制量子比特（数据量子比特2）施加了一个泡利 $X$ 错误。假设整个错误纠正周期中的所有其他门和测量都是完美的。\n\n纠正程序基于测得的 syndrome 对 $(s_1, s_2)$。该程序假设至多发生了一个单量子比特 $X$ 错误，并对与测得的 syndrome 唯一对应的数据量子比特施加相应的泡利 $X$ 纠正。如果 syndrome 是 (0,0)，则不施加任何纠正。\n\n计算这个单一故障导致逻辑错误的概率。逻辑错误被定义为这样一个事件：在纠正步骤之后，数据量子比特的最终状态会在随后一个完美的错误纠正轮次中被解码为 $|1\\rangle_L$。", "solution": "初始状态为 $|0\\rangle_L = |000\\rangle$。错误纠正周期从测量 $S_1 = Z_1 Z_2$ 开始，使用一个初始化为 $|0\\rangle_a$ 的辅助量子比特。\n\n- 应用 CNOT(1, a)：控制量子比特是量子比特1（处于 $|0\\rangle$ 态），因此辅助量子比特保持不变。状态：$|000\\rangle |0\\rangle_a$。\n- 第二个 CNOT 门 CNOT(2, a) 存在故障。首先，它执行标准的 CNOT(2, a) 操作：控制量子比特2处于 $|0\\rangle$ 态，因此辅助量子比特保持不变。状态：$|000\\rangle |0\\rangle_a$。然后，它对量子比特2施加一个 $X$ 错误，将其翻转为 $|1\\rangle$。状态：$|010\\rangle |0\\rangle_a$。\n- 测量辅助量子比特：结果为 0（因为它处于 $|0\\rangle$ 态），因此 syndrome 位 $s_1 = 0$。\n- 测量后，丢弃辅助量子比特。数据状态为：$|010\\rangle$。\n\n接下来，用一个新的初始化为 $|0\\rangle_a$ 的辅助量子比特测量 $S_2 = Z_2 Z_3$。\n\n- 应用 CNOT(2, a)：控制量子比特2处于 $|1\\rangle$ 态，因此辅助量子比特翻转。状态：$|010\\rangle |1\\rangle_a$。\n- 应用 CNOT(3, a)：控制量子比特3处于 $|0\\rangle$ 态，因此没有变化。状态：$|010\\rangle |1\\rangle_a$。\n- 测量辅助量子比特：结果为 1，因此 syndrome 位 $s_2 = 1$。\n- Syndrome 对：$(s_1, s_2) = (0, 1)$。\n\n对于 syndrome (0,1) 的纠正程序假设在量子比特3上发生了一个单一 $X$ 错误，并应用 $X_3$。\n\n- 对量子比特3应用 $X$：状态从 $|010\\rangle$ 变为 $|011\\rangle$。\n\n最终状态为 $|011\\rangle$。随后一个完美的错误纠正轮次将对此状态进行解码：\n\n- 测量 $S_1 = Z_1 Z_2$：\n  - $Z_1 Z_2 |011\\rangle = Z_1 |0\\rangle \\otimes Z_2 |1\\rangle \\otimes |1\\rangle = (+1)|0\\rangle \\otimes (-1)|1\\rangle \\otimes |1\\rangle = -|011\\rangle$，所以本征值为 $-1$，syndrome 位 $s_1 = 1$。\n- 测量 $S_2 = Z_2 Z_3$：\n  - $Z_2 Z_3 |011\\rangle = |0\\rangle \\otimes Z_2 |1\\rangle \\otimes Z_3 |1\\rangle = |0\\rangle \\otimes (-|1\\rangle) \\otimes (-|1\\rangle) = (+1)|011\\rangle$，所以本征值为 $+1$，syndrome 位 $s_2 = 0$。\n- Syndrome (1,0) 对应于量子比特1上的一个 $X$ 错误。应用 $X_1$：$|011\\rangle$ 变为 $|111\\rangle = |1\\rangle_L$。\n\n状态被解码为 $|1\\rangle_L$，这是一个逻辑错误，因为初始状态是 $|0\\rangle_L$。由于演化是确定性的且没有分支，该故障总是导致这个结果。\n\n因此，发生逻辑错误的概率是1。", "answer": "$$ \\boxed{1} $$", "id": "83521"}, {"introduction": "“魔术态蒸馏”是实现通用容错量子计算的一项关键技术，因为仅有横向的克利福德门是不够的。这个练习 [@problem_id:83563] 深入探讨了一种特定蒸馏协议的内部机制，要求你计算其错误概率是如何被抑制的。通过这个过程，你将定量地理解如何将多个低质量的噪声态“提纯”成一个更高保真度的状态，这是构建可靠量子计算机的基石。", "problem": "魔术态蒸馏是许多容错量子计算方案中的一个关键子程序。该过程消耗多个含噪声的魔术态，以生成一个保真度更高的单一魔术态。在本问题中，我们将分析一个特定的魔术态蒸馏协议的性能。\n\n所讨论的魔术态是 $|H\\rangle$ 态，定义为 $|H\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle)$，它是泡利X算符的 $+1$ 本征态。该协议从八个含噪声的输入态开始，其中每个态 $\\rho_{in}$ 是一个 Z-错误信道作用于理想 $|H\\rangle$ 态的结果。每个输入态的密度矩阵由下式给出：\n$$ \\rho_{in} = (1-\\epsilon)|H\\rangle\\langle H| + \\epsilon|-\\rangle\\langle -| $$\n其中 $|-\\rangle = \\frac{1}{\\sqrt{2}}(|0\\rangle - |1\\rangle)$ 且 $\\epsilon$ 是初始不忠实度。给定量子比特上的一个错误对应于一个泡利 $Z$ 算符，它将态从 $|H\\rangle$ 翻转到 $|-\\rangle$。\n\n该蒸馏协议基于一个特定的 $[[8, 1, 3]]$ 量子纠错码。一个码距 $d=3$ 的码可以纠正任意单量子比特错误。该协议按以下步骤进行：\n1.  准备八个物理量子比特，每个都处于相同的含噪声态 $\\rho_{in}$。这个初始的8量子比特态代表了逻辑态 $|\\bar{H}\\rangle$ 的一个含噪声版本。\n2.  测量该 $[[8, 1, 3]]$ 码的七个稳定子生成元。\n3.  根据测量结果（错误综合症），应用一个标准的纠错程序。\n\n这个特定码及其解码过程的属性如下：\n*   任意单量子比特 $Z$ 错误都会被完美纠正，这意味着最终状态没有逻辑错误。\n*   任意双量子比特 $Z$ 错误（即形式为 $Z_i Z_j$ 且 $i \\neq j$ 的错误）会被错误地纠正，从而在编码的量子比特上变成一个逻辑 $Z_L$ 错误。\n*   权重为三或更高的错误可能被纠正也可能不被纠正，但对于本问题，它们对最终不忠实度的贡献可以忽略不计。\n\n你的任务是计算最终的单量子比特逻辑态的不忠实度 $\\epsilon_{out}$。输出不忠实度定义为最终状态是逻辑态 $|\\bar{-}\\rangle$ 的概率。请给出 $\\epsilon_{out}$ 关于 $\\epsilon$ 的主导非零阶表达式。", "solution": "输出不忠实度 $\\epsilon_{out}$ 定义为最终状态是逻辑态 $|\\bar{-}\\rangle$ 的概率。这种情况发生在纠错后存在一个逻辑 $Z_L$ 错误时。\n\n每个输入态都经过一个 Z-错误信道，且不同量子比特上的错误是独立的。任何单个量子比特上发生 Z 错误的概率是 $\\epsilon$，没有错误的概率是 $1 - \\epsilon$。\n\n根据 $[[8, 1, 3]]$ 码的属性：\n- 任意单量子比特 Z 错误都会被完美纠正，不产生逻辑错误。\n- 任意双量子比特 Z 错误（即 $Z_i Z_j$ 且 $i \\neq j$）会被错误地纠正为一个逻辑 $Z_L$ 错误。\n- 根据问题陈述，对于 $\\epsilon$ 的主导阶，权重为三或更高的错误可以忽略。\n\n在主导非零阶上，导致逻辑 $Z_L$ 错误的事件是八个量子比特上恰好发生两个 Z 错误。恰好发生两个错误的概率由二项分布给出：\n\n$$ P(\\text{exactly two errors}) = \\binom{8}{2} \\epsilon^2 (1 - \\epsilon)^{6} $$\n\n展开 $(1 - \\epsilon)^6$：\n\n$$ (1 - \\epsilon)^6 = 1 - 6\\epsilon + 15\\epsilon^2 - 20\\epsilon^3 + \\cdots $$\n\n乘以 $\\binom{8}{2} \\epsilon^2$：\n\n$$ P(\\text{exactly two errors}) = \\binom{8}{2} \\epsilon^2 (1 - 6\\epsilon + 15\\epsilon^2 - \\cdots) = \\binom{8}{2} \\epsilon^2 - 6\\binom{8}{2} \\epsilon^3 + \\cdots $$\n\n主导非零项是 $\\binom{8}{2} \\epsilon^2$。计算二项式系数：\n\n$$ \\binom{8}{2} = \\frac{8!}{2! \\, 6!} = \\frac{8 \\times 7}{2 \\times 1} = 28 $$\n\n因此：\n\n$$ \\epsilon_{out} = 28 \\epsilon^2 + \\mathcal{O}(\\epsilon^3) $$\n\n因此，对于 $\\epsilon$ 的主导非零阶，输出不忠实度为 $28 \\epsilon^2$。", "answer": "$$ \\boxed{28 \\epsilon^{2}} $$", "id": "83563"}, {"introduction": "在实践中，量子算法的“成本”通常由非克利福德门的制备开销主导。这个练习 [@problem_id:83631] 建立了一个“魔术态工厂”模型，要求你计算创建一个逻辑控制相位门所需的T门的总资源消耗。解决这个问题将帮助你建立资源估算的思维模式，这是评估和设计大规模量子算法的一项关键技能。", "problem": "在容错量子计算方案中，例如使用 Steane $[[7,1,3]]$ 码的方案，来自 Clifford 群的逻辑操作（如 Hadamard、Phase、CNOT）通常可以横向实现，使其成本相对较低。然而，非 Clifford 门，如 $T$ 门 ($T = \\text{diag}(1, e^{i\\pi/4})$)，对于通用量子计算至关重要，但其容错实现的成本要高得多。\n\n实现逻辑 $T$ 门的一种常用方法是“魔术态注入”。这包括将一个特制的辅助量子比特制备在“魔术态”上，然后消耗它。这些魔术态必须以非常高的保真度制备，这一任务由“魔术态蒸馏工厂”完成。\n\n考虑一个运行“$N_{in}$-to-1”蒸馏协议的工厂。每次尝试，该协议消耗 $N_{in}$ 个物理魔术态。\n- 以概率 $p_{succ}$ 成功，产生一个高保真度的逻辑魔术态。在这种情况下，还会确定初始 $N_{in}$ 个态中有 $k$ 个未被错误损坏，可以返回到可用物理态池中。\n- 以概率 $1-p_{succ}$ 失败。不产生逻辑魔术态，所有 $N_{in}$ 个物理态都被视为丢失。\n\n为使工厂成为态的净消耗者（即不是永动机），它必须满足条件 $N_{in} > k p_{succ}$。\n\n某个特定算法需要一个逻辑受控相位门（$CS$门，或受控-$S$门），这是一个非 Clifford 门。逻辑 $CS$ 门的一个标准分解需要执行几个逻辑 Clifford 门和三个逻辑 T 族门（$T$ 或 $T^\\dagger$）。假设为 $T^\\dagger$ 门制备魔术态的成本与为 $T$ 门制备的成本相同。与魔术态制备相比，逻辑 Clifford 门的成本被认为是可忽略不计的。\n\n计算实现单个逻辑 $CS$ 门所消耗的物理魔术态的期望*净*数量。您的答案应以参数 $N_{in}$、$k$ 和 $p_{succ}$ 表示。", "solution": "为了求出实现单个逻辑 $CS$ 门所消耗的物理魔术态的期望净数量，我们注意到该门需要三个逻辑 T 族门（每个 $T$ 或 $T^\\dagger$）。每个 T 族门需要一个逻辑魔术态，因此总共需要三个逻辑魔术态。\n\n产生一个逻辑魔术态所需的物理魔术态的期望净消耗量，记为 $E$，满足从蒸馏协议推导出的方程：\n- 以概率 $p_{succ}$，尝试成功：净消耗为 $N_{in} - k$ 个物理态（消耗 $N_{in}$ 个，但返回 $k$ 个未损坏的态），且不产生额外成本。\n- 以概率 $1 - p_{succ}$，尝试失败：净消耗为 $N_{in}$ 个物理态（全部丢失），并且过程重新开始，产生一个额外的期望成本 $E$。\n\n因此，$E$ 的方程为：\n\n$$\nE = p_{succ} (N_{in} - k) + (1 - p_{succ}) (N_{in} + E)\n$$\n\n求解 $E$：\n\n$$\nE = p_{succ} N_{in} - p_{succ} k + (1 - p_{succ}) N_{in} + (1 - p_{succ}) E\n$$\n\n\n$$\nE = N_{in} - p_{succ} k + (1 - p_{succ}) E\n$$\n\n\n$$\nE - (1 - p_{succ}) E = N_{in} - p_{succ} k\n$$\n\n\n$$\np_{succ} E = N_{in} - p_{succ} k\n$$\n\n\n$$\nE = \\frac{N_{in} - p_{succ} k}{p_{succ}} = \\frac{N_{in}}{p_{succ}} - k\n$$\n\n这是每个逻辑魔术态所消耗的物理魔术态的期望净数量。对于三个逻辑魔术态，总的期望净消耗量是：\n\n$$\n3E = 3 \\left( \\frac{N_{in}}{p_{succ}} - k \\right)\n$$\n\n每个逻辑魔术态的生成过程是相同且独立的，而表达式 $E$ 已经考虑了在蒸馏该魔术态的过程中对返回的物理态的重用。因此，三个逻辑魔术态的总期望净消耗量为 $3E$。", "answer": "$$\\boxed{3\\left(\\frac{N_{in}}{p_{succ}} - k\\right)}$$", "id": "83631"}]}