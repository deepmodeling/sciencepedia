{"hands_on_practices": [{"introduction": "Calderbank-Shor-Steane (CSS) 构造是利用经典线性码构建量子纠错码的一种基本方法。这项练习旨在通过一个具体示例，让你亲手实践CSS构造的核心步骤。你将需要验证两个经典码是否满足构造所需的子码条件 ($C_2 \\subseteq C_1$)，并利用它们的维度计算出所生成量子码的逻辑量子比特数 ([@problem_id:64136])。掌握如何通过生成矩阵来分析码与码之间的关系，是理解更复杂量子编码方案的基础。", "problem": "Calderbank-Shor-Steane (CSS) 构造是一种强大的方法，它利用经典线性码来构建量子纠错码。让我们从一些定义开始。\n\n一个长度为 $n$、维度为 $k$ 的经典二元线性码 $C$，记作 $[n, k]$ 码，是向量空间 $\\mathbb{F}_2^n$ 的一个 $k$ 维子空间。这样的码可以由一个生成矩阵 $G$ 定义，该矩阵的行构成了码 $C$ 的一组基。因此，码的维度 $k$ 等于其生成矩阵 $G$ 在有限域 $\\mathbb{F}_2$ 上的秩。\n\nCSS 构造使用两个长度均为 $n$ 的经典线性码，$C_1$（一个 $[n, k_1]$ 码）和 $C_2$（一个 $[n, k_2]$ 码）。如果 $C_2$ 是 $C_1$ 的子码，即 $C_2 \\subseteq C_1$，则可以构建一个有效的 CSS 量子纠错码。所得到的量子码，我们记作 $[[n, k, d]]_{CSS}$，将 $k$ 个逻辑量子比特编码到 $n$ 个物理量子比特中。逻辑量子比特的数量 $k$ 由以下公式给出：\n$$ k = k_1 - k_2 $$\n\n考虑两个长度为 $n=8$ 的经典二元线性码 $C_1$ 和 $C_2$。它们由各自的生成矩阵 $G_1$ 和 $G_2$ 指定。这些码是由这些矩阵的行向量在 $\\mathbb{F}_2$ 上张成的向量空间。\n\n$$\nG_1 = \\begin{pmatrix}\n1 & 1 & 0 & 0 & 1 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & 1 & 0 & 0 & 1 & 1 \\\\\n1 & 0 & 1 & 0 & 1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 & 0 & 1 & 1 & 0\n\\end{pmatrix}\n$$\n\n$$\nG_2 = \\begin{pmatrix}\n1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 \\\\\n1 & 0 & 0 & 1 & 1 & 0 & 0 & 1 \\\\\n0 & 1 & 1 & 0 & 0 & 1 & 1 & 0\n\\end{pmatrix}\n$$\n\n首先，验证条件 $C_2 \\subseteq C_1$ 是否满足。然后，计算由 $C_1$ 和 $C_2$ 构建的量子 CSS 码的逻辑量子比特数量 $k$。", "solution": "1. $G_1$ 的秩。设其行向量为\n\n$$\nr_1=(1,1,0,0,1,1,0,0),\\;\nr_2=(0,0,1,1,0,0,1,1),\\;\nr_3=(1,0,1,0,1,0,1,0),\\;\nr_4=(0,1,1,0,0,1,1,0).\n$$\n\n计算\n\n$$\nr_1+r_3=(1,1,0,0,1,1,0,0)+(1,0,1,0,1,0,1,0)=(0,1,1,0,0,1,1,0)=r_4.\n$$\n\n因此 $r_4$ 是 $r_1, r_3$ 的线性组合，且 $\\{r_1,r_2,r_3\\}$ 是线性无关的。因此\n\n$$\nk_1=\\rank(G_1)=3.\n$$\n\n\n2. $G_2$ 的秩。设其行向量为\n\n$$\ns_1=(1,1,1,1,1,1,1,1),\\;\ns_2=(1,0,0,1,1,0,0,1),\\;\ns_3=(0,1,1,0,0,1,1,0).\n$$\n\n计算\n\n$$\ns_1+s_2=(1,1,1,1,1,1,1,1)+(1,0,0,1,1,0,0,1)=(0,1,1,0,0,1,1,0)=s_3.\n$$\n\n因此 $\\{s_1,s_2\\}$ 是线性无关的，而 $s_3$ 是线性相关的。因此\n\n$$\nk_2=\\rank(G_2)=2.\n$$\n\n\n3. 验证 $C_2\\subseteq C_1$。我们必须证明每个 $s_i$ 都在 $\\Span\\{r_1,r_2,r_3\\}$ 中。我们有\n\n$$\ns_1=r_1+r_2,\\quad\ns_2=0\\cdot r_1+1\\cdot r_2+1\\cdot r_3,\n$$\n\n这可以通过逐坐标模2运算来检验。因此 $C_2\\subseteq C_1$。\n\n4. 逻辑量子比特的数量：\n\n$$\nk=k_1-k_2=3-2=1.\n$$", "answer": "$$\\boxed{1}$$", "id": "64136"}, {"introduction": "构建一个量子码只是第一步，更关键的是理解其纠错能力，这体现在码的距离和逻辑算符上。本练习将以著名的 $[[7,1,3]]$ Steane 码为例，它由经典的 $[7,4,3]$ Hamming 码构造而成。通过这个练习，你将探索经典码的结构（例如其码重分布）如何决定其对应的量子码的关键属性，特别是如何确定最小权重的逻辑算符 ([@problem_id:64149])。这有助于你深入理解从经典码到量子码的特性传承关系。", "problem": "一个Calderbank-Shor-Steane (CSS) 码可以由一对长度为 $n$ 且满足条件 $C_2 \\subset C_1$ 的经典二元线性码 $C_1$ 和 $C_2$ 构造。一种更具体的构造方法是使用一个满足 $C^\\perp \\subset C$ 性质的经典线性码 $C$，即一个 $[n, k_{cl}, d_{cl}]$ 码，其中 $C^\\perp$ 是 $C$ 的对偶码。生成的量子码是一个参数为 $[[n, k_{q}, d_{q}]]$ 的稳定子码，其中 $k_q = 2k_{cl} - n$。\n\n此类码的稳定子群 $S$ 由对于 $C^\\perp$ 的一个生成集中的所有 $s$ 的形如 $X(s) = \\bigotimes_{i=1}^n X_i^{s_i}$ 和 $Z(s) = \\bigotimes_{i=1}^n Z_i^{s_i}$ 的算符生成。此处，$X_i, Z_i$ 是作用在第 $i$ 个量子比特上的泡利矩阵，$s = (s_1, \\dots, s_n)$ 是一个二元向量。\n\n一个逻辑泡利Z算符是形如 $\\bar{Z} = Z(c) = \\bigotimes_{i=1}^n Z_i^{c_i}$ 的算符，它与稳定子群 $S$ 的所有元素对易，但其本身不是 $S$ 中的元素。泡利算符的权重是其非平凡作用（即，作用不为单位矩阵）的量子比特数。量子码的距离 $d_q$ 是任意非平凡逻辑算符的最小权重。\n\n考虑 [[7,1,3]] Steane码，它是一个由经典 $[7,4,3]$ Hamming码（我们称之为 $H_3$）构造的CSS码。码 $H_3$ 是由生成矩阵 $G$ 的行向量在 $\\mathbb{F}_2^7$ 中张成的子空间，也可以定义为校验矩阵 $H$ 的零空间，即 $H_3 = \\{ c \\in \\mathbb{F}_2^7 \\mid Hc^T = 0 \\}$。Hamming码的校验矩阵 $H$ 的列由所有7个不同的长度为3的非零二元向量组成。对于此码，条件 $H_3^\\perp \\subset H_3$ 成立。\n\n确定 [[7,1,3]] Steane码的不同最小权重逻辑Z算符的数量。", "solution": "1. 对于一个由满足 $C^\\perp\\subset C$ 的经典 $[n,k_{cl},d_{cl}]$ 码 $C$ 构造的CSS码，逻辑量子比特的数量为 \n$$k_q=2k_{cl}-n\\,. $$\n对于Steane码，$n=7$, $k_{cl}=4$，所以 \n$$k_q=2\\cdot4-7=1\\,. $$\n\n2. 量子码的距离为 \n$$d_q=\\min\\{\\wt(c):c\\in C\\setminus C^\\perp\\}\\,. $$\n由于 $C$ 是 $[7,4,3]$ Hamming码，$d_{cl}=3$，且 $C^\\perp$（单纯形码）没有权重为3的码字，我们得到 \n$$d_q=3\\,. $$\n\n3. 不同的最小权重逻辑Z算符的数量等于陪集 $C\\setminus C^\\perp$ 中权重为3的码字的数量。$[7,4,3]$ Hamming码的权重分布为\n$$A_0=1,\\;A_3=7,\\;A_4=7,\\;A_7=1,$$\n且 $C^\\perp$ 没有权重为3的码字。因此，所有7个权重为3的码字都位于 $C\\setminus C^\\perp$ 中。\n\n4. 因此，不同的最小权重逻辑Z算符的数量是 \n$$7\\,. $$", "answer": "$$\\boxed{7}$$", "id": "64149"}, {"introduction": "标准的CSS构造要求一个经典码是另一个码的子码，这是一个非常严格的条件。当这个条件不满足时，我们是否就无能为力了呢？纠缠辅助（Entanglement-Assisted, EA）量子码提供了一个强大的推广，它允许我们利用预共享的纠缠资源来放宽这一限制。这项练习将引导你计算在给定一对不满足标准CSS条件的经典码的情况下，构造一个EA-CSS码所需的最少纠缠比特（ebits）数量 ([@problem_id:64199])。这展示了量子资源（纠缠）如何在量子编码中扮演关键角色。", "problem": "Calderbank-Shor-Steane (CSS) 构造是一种利用经典线性码构建量子纠错码的方法。对于两个经典二元线性码 $C_1=[n, k_1]$ 和 $C_2=[n, k_2]$，如果 $C_2 \\subset C_1$ 或 $C_1 \\subset C_2$ 成立，则可以构造一个标准CSS码。\n\n这种构造可以推广到任意一对长度同为 $n$ 的经典线性码 $C_1$ 和 $C_2$，其代价是消耗预共享的量子比特纠缠对 (ebits)。这被称为纠缠辅助CSS (EA-CSS) 构造。此类码的稳定子群由泡利算符 $\\{X(\\mathbf{v}) | \\mathbf{v} \\in C_1\\}$ 和 $\\{Z(\\mathbf{w}) | \\mathbf{w} \\in C_2\\}$ 生成。该构造所需的 ebit 数量 $c$ 由X型和Z型稳定子生成元之间的对易关系所施加的独立约束的数量给出。这个量可以计算为两个码的生成向量内积矩阵的秩，即 $c = \\text{rank}_{\\mathbb{F}_2}(G_1 G_2^T)$，其中 $G_1$ 和 $G_2$ 分别是 $C_1$ 和 $C_2$ 的生成矩阵。\n\n等价地，所需的 ebit 数量可以用码的维数及其交集的维数来计算：\n$$ c = \\dim(C_1) - \\dim(C_1 \\cap C_2^\\perp) $$\n或\n$$ c = \\dim(C_2) - \\dim(C_2 \\cap C_1^\\perp) $$\n其中 $C^\\perp$ 表示对偶码。\n\n考虑两个长度为 $n=15$ 的二元循环码。域扩张 $GF(2^4)$ 由本原多项式 $x^4+x+1=0$ 构造。$GF(2^4)$ 中元素在 $GF(2)$ 上的最小多项式为：\n-   $m_0(x) = x+1$\n-   $m_1(x) = x^4+x+1$\n-   $m_3(x) = x^4+x^3+x^2+x+1$\n-   $m_5(x) = x^2+x+1$\n-   $m_7(x) = x^4+x^3+1$\n\n这两个码是：\n1.  $C_1$：一个 $[15, 11]$ 二元循环 Hamming 码，其生成多项式为 $g_1(x)=m_1(x)$。\n2.  $C_2$：一个 $[15, 5]$ 二元循环 BCH 码，其生成多项式为 $g_2(x) = m_1(x)m_3(x)m_5(x)$。\n\n计算从 $C_1$ 和 $C_2$ 构造一个 EA-CSS 码所需的最小 ebit 数量 $c$。", "solution": "问题要求计算使用经典码 $C_1$ 和 $C_2$ 进行纠缠辅助CSS (EA-CSS) 构造所需的 ebit 数量 $c$。ebit 的数量可以使用所提供的等价公式之一来计算：\n1.  $c = \\dim(C_1) - \\dim(C_1 \\cap C_2^\\perp)$\n2.  $c = \\dim(C_2) - \\dim(C_2 \\cap C_1^\\perp)$\n\n我们将使用两种公式计算 $c$ 以验证我们结果的一致性。这需要求出交集码的维数，而这又需要求出它们的生成多项式。对于循环码，两个码的交集是由它们的生成多项式的最小公倍式(lcm)生成的码。两个码的和是由它们的生成元的最大公因式(gcd)生成的。循环码的对偶码也是循环码。\n\n**码参数：**\n-   $C_1$：一个 $[n, k_1] = [15, 11]$ 的循环码，其生成多项式为 $g_1(x) = m_1(x)$。$\\dim(C_1) = k_1 = 11$。\n-   $C_2$：一个 $[n, k_2] = [15, 5]$ 的循环码，其生成多项式为 $g_2(x) = m_1(x)m_3(x)m_5(x)$。$\\dim(C_2) = k_2 = 5$。\n\n长度为 $n$、生成多项式为 $g(x)$ 的循环码的维数是 $k = n - \\deg(g(x))$。我们来核对一下给定的维数。\n-   $\\deg(g_1(x)) = \\deg(m_1(x)) = 4$。所以 $k_1 = 15 - 4 = 11$。这是正确的。\n-   $\\deg(g_2(x)) = \\deg(m_1) + \\deg(m_3) + \\deg(m_5) = 4 + 4 + 2 = 10$。所以 $k_2 = 15 - 10 = 5$。这是正确的。\n\n**求对偶码 $C_1^\\perp$ 和 $C_2^\\perp$**\n\n对偶码 $C^\\perp$ 的生成多项式与原码 $C$ 的校验多项式 $h(x) = (x^n-1)/g(x)$ 相关。具体来说，$g_{C^\\perp}(x) = \\tilde{h}(x)$，其中 $\\tilde{h}(x)$ 是 $h(x)$ 的倒数多项式。\n$x^{15}-1$ 在 $GF(2)$ 上的因式分解为 $x^{15}-1 = m_0(x)m_1(x)m_3(x)m_5(x)m_7(x)$。所有这些最小多项式都是自互反的。\n\n对于 $C_1$：\n$h_1(x) = (x^{15}-1)/g_1(x) = (x^{15}-1)/m_1(x) = m_0(x)m_3(x)m_5(x)m_7(x)$。\n由于所有因子都是自互反的，所以 $h_1(x)$ 是自互反的。因此，$g_{C_1^\\perp}(x) = \\tilde{h}_1(x) = h_1(x)$。\n$\\deg(g_{C_1^\\perp}(x)) = 1+4+2+4=11$。\n$C_1^\\perp$ 的维数是 $15 - 11 = 4$。这与一个 $[15,11]$ 码的对偶码是一个 $[15,4]$ 码是一致的。\n\n对于 $C_2$：\n$h_2(x) = (x^{15}-1)/g_2(x) = (x^{15}-1)/(m_1(x)m_3(x)m_5(x)) = m_0(x)m_7(x)$。\n因子 $m_0(x)$ 和 $m_7(x)$ 是自互反的，所以 $h_2(x)$ 也是自互反的。因此，$g_{C_2^\\perp}(x) = \\tilde{h}_2(x) = h_2(x)$。\n$\\deg(g_{C_2^\\perp}(x)) = \\deg(m_0) + \\deg(m_7) = 1+4=5$。\n$C_2^\\perp$ 的维数是 $15-5 = 10$。这与一个 $[15,5]$ 码的对偶码是一个 $[15,10]$ 码是一致的。\n\n**使用第一个公式计算： $c = k_1 - \\dim(C_1 \\cap C_2^\\perp)$**\n\n我们需要求出交集码 $C_{\\text{int},1} = C_1 \\cap C_2^\\perp$ 的维数。该码的生成多项式为 $g_{\\text{int},1}(x) = \\text{lcm}(g_1(x), g_{C_2^\\perp}(x))$。\n$g_1(x) = m_1(x)$\n$g_{C_2^\\perp}(x) = m_0(x)m_7(x)$\n对于不同的 $i$，最小多项式 $m_i(x)$ 是互质的。因此，$g_1(x)$ 和 $g_{C_2^\\perp}(x)$ 互质。\n因此，$g_{\\text{int},1}(x) = \\text{lcm}(m_1(x), m_0(x)m_7(x)) = m_1(x)m_0(x)m_7(x)$。\n该生成多项式的次数为 $\\deg(g_{\\text{int},1}(x)) = \\deg(m_1)+\\deg(m_0)+\\deg(m_7) = 4+1+4=9$。\n交集码的维数是 $\\dim(C_1 \\cap C_2^\\perp) = n - \\deg(g_{\\text{int},1}(x)) = 15 - 9 = 6$。\n现在我们可以计算 $c$：\n$c = k_1 - \\dim(C_1 \\cap C_2^\\perp) = 11 - 6 = 5$。\n\n**使用第二个公式计算： $c = k_2 - \\dim(C_2 \\cap C_1^\\perp)$**\n\n我们需要求出交集码 $C_{\\text{int},2} = C_2 \\cap C_1^\\perp$ 的维数。该码的生成多项式为 $g_{\\text{int},2}(x) = \\text{lcm}(g_2(x), g_{C_1^\\perp}(x))$。\n$g_2(x) = m_1(x)m_3(x)m_5(x)$\n$g_{C_1^\\perp}(x) = m_0(x)m_3(x)m_5(x)m_7(x)$\n最小公倍式是所有唯一因子的乘积：\n$g_{\\text{int},2}(x) = \\text{lcm}(m_1m_3m_5, m_0m_3m_5m_7) = m_0(x)m_1(x)m_3(x)m_5(x)m_7(x) = x^{15}-1$。\n该生成多项式的次数为 $\\deg(g_{\\text{int},2}(x)) = 15$。\n交集码的维数是 $\\dim(C_2 \\cap C_1^\\perp) = n - \\deg(g_{\\text{int},2}(x)) = 15 - 15 = 0$。\n该交集是零码 $\\{0\\}$。\n现在我们可以计算 $c$：\n$c = k_2 - \\dim(C_2 \\cap C_1^\\perp) = 5 - 0 = 5$。\n\n两种公式都得出了相同的结果，$c=5$。", "answer": "$$ \\boxed{5} $$", "id": "64199"}]}