{"hands_on_practices": [{"introduction": "掌握泡利算符的二进制表示及其辛内积是运用稳定子形式体系的基础。这个练习将引导你完成一个基础但至关重要的任务：将多量子比特的泡利算符串（Pauli string）转换为二进制辛矢量，并利用辛内积来判定它们之间是对易还是反对易。通过这项练习 [@problem_id:144648]，你将体会到这种表示方法在处理复杂的算符代数时，相比于直接进行矩阵乘法所带来的巨大便利。", "problem": "$n$量子比特泡利群 $\\mathcal{P}_n$ 由单量子比特泡利矩阵 $\\{I, X, Y, Z\\}$ 的张量积算符组成，并带一个来自 $\\{1, -1, i, -i\\}$ 的全局相位因子。在研究对易关系时，可以忽略相位因子。一个 $n$ 量子比特泡利串 $P = \\sigma_1 \\otimes \\sigma_2 \\otimes \\dots \\otimes \\sigma_n$，其中 $\\sigma_j \\in \\{I, X, Y, Z\\}$，可以方便地用一个长度为 $2n$ 的二进制向量表示。\n\n这种二进制辛表示的构造如下。首先，我们将每个单量子比特泡利算符映射到一对比特 $(x, z)$：\n- $I \\rightarrow (0, 0)$\n- $X \\rightarrow (1, 0)$\n- $Z \\rightarrow (0, 1)$\n- $Y = iXZ \\rightarrow (1, 1)$\n\n一个 $n$ 量子比特泡利算符 $P = \\sigma_1 \\otimes \\dots \\otimes \\sigma_n$ 随之被映射到一个 $2n$ 维的二进制向量 $v_P = (x_1, \\dots, x_n | z_1, \\dots, z_n)$，其中 $(x_j, z_j)$ 是与 $\\sigma_j$ 对应的二进制对。竖线仅为标记清晰起见。\n\n两个泡利算符 $P_1$ 和 $P_2$ 之间的对易关系可以通过它们对应二进制向量 $v_1 = (x_1 | z_1)$ 和 $v_2 = (x_2 | z_2)$ 的辛内积来确定。辛内积定义为：\n$$\n\\omega(v_1, v_2) = x_1 \\cdot z_2 + x_2 \\cdot z_1 \\pmod 2\n$$\n这里，点积 $a \\cdot b = \\sum_j a_j b_j$ 是在二元域 $\\mathbb{F}_2$ 上进行的（即，加法是异或运算）。当且仅当 $\\omega(v_1, v_2) = 0$ 时，两个算符对易，即 $P_1 P_2 = P_2 P_1$。当且仅当 $\\omega(v_1, v_2) = 1$ 时，它们反对易，即 $P_1 P_2 = -P_2 P_1$。\n\n考虑一个 4 量子比特系统和以下两个泡利算符（以紧凑表示法写出，例如，$YIXZ = Y \\otimes I \\otimes X \\otimes Z$）：\n- $P_1 = YIXZ$\n- $P_2 = ZYXI$\n\n计算辛内积 $\\omega(v_{P_1}, v_{P_2})$ 的值。", "solution": "给定一个 4 量子比特系统的两个泡利算符：\n- $ P_1 = Y \\otimes I \\otimes X \\otimes Z $\n- $ P_2 = Z \\otimes Y \\otimes X \\otimes I $\n\n首先，使用以下映射将每个算符表示为二进制向量：\n- $ I \\rightarrow (0, 0) $\n- $ X \\rightarrow (1, 0) $\n- $ Z \\rightarrow (0, 1) $\n- $ Y \\rightarrow (1, 1) $\n\n对于 $ P_1 = YIXZ $：\n- 量子比特 1 (Y): $ (x_1, z_1) = (1, 1) $\n- 量子比特 2 (I): $ (x_2, z_2) = (0, 0) $\n- 量子比特 3 (X): $ (x_3, z_3) = (1, 0) $\n- 量子比特 4 (Z): $ (x_4, z_4) = (0, 1) $\n因此，$ v_{P_1} = (x_1, x_2, x_3, x_4 | z_1, z_2, z_3, z_4) = (1, 0, 1, 0 | 1, 0, 0, 1) $。\n\n对于 $ P_2 = ZYXI $：\n- 量子比特 1 (Z): $ (x_1', z_1') = (0, 1) $\n- 量子比特 2 (Y): $ (x_2', z_2') = (1, 1) $\n- 量子比特 3 (X): $ (x_3', z_3') = (1, 0) $\n- 量子比特 4 (I): $ (x_4', z_4') = (0, 0) $\n因此，$ v_{P_2} = (x_1', x_2', x_3', x_4' | z_1', z_2', z_3', z_4') = (0, 1, 1, 0 | 1, 1, 0, 0) $。\n\n辛内积定义为：\n\n$$\n\\omega(v_{P_1}, v_{P_2}) = \\mathbf{x} \\cdot \\mathbf{z}' + \\mathbf{x}' \\cdot \\mathbf{z} \\pmod{2}\n$$\n\n其中：\n- $\\mathbf{x} = (x_1, x_2, x_3, x_4) = (1, 0, 1, 0)$ 对应 $v_{P_1}$\n- $\\mathbf{z} = (z_1, z_2, z_3, z_4) = (1, 0, 0, 1)$ 对应 $v_{P_1}$\n- $\\mathbf{x}' = (x_1', x_2', x_3', x_4') = (0, 1, 1, 0)$ 对应 $v_{P_2}$\n- $\\mathbf{z}' = (z_1', z_2', z_3', z_4') = (1, 1, 0, 0)$ 对应 $v_{P_2}$\n并且 $\\cdot$ 表示在 $\\mathbb{F}_2$ 上的点积（乘积之和模 2）。\n\n计算 $\\mathbf{x} \\cdot \\mathbf{z}'$：\n\n$$\n\\mathbf{x} \\cdot \\mathbf{z}' = (1 \\cdot 1) + (0 \\cdot 1) + (1 \\cdot 0) + (0 \\cdot 0) = 1 + 0 + 0 + 0 = 1\n$$\n\n计算 $\\mathbf{x}' \\cdot \\mathbf{z}$：\n\n$$\n\\mathbf{x}' \\cdot \\mathbf{z} = (0 \\cdot 1) + (1 \\cdot 0) + (1 \\cdot 0) + (0 \\cdot 1) = 0 + 0 + 0 + 0 = 0\n$$\n\n现在求和并对 2 取模：\n\n$$\n\\omega(v_{P_1}, v_{P_2}) = (1 + 0) \\pmod 2 = 1 \\pmod 2 = 1\n$$\n\n或者，按量子比特计算（对每个 $j$ 求和 $x_j z_j' + x_j' z_j$）：\n- 量子比特 1: $x_1 z_1' + x_1' z_1 = (1 \\cdot 1) + (0 \\cdot 1) = 1 + 0 = 1$\n- 量子比特 2: $x_2 z_2' + x_2' z_2 = (0 \\cdot 1) + (1 \\cdot 0) = 0 + 0 = 0$\n- 量子比特 3: $x_3 z_3' + x_3' z_3 = (1 \\cdot 0) + (1 \\cdot 0) = 0 + 0 = 0$\n- 量子比特 4: $x_4 z_4' + x_4' z_4 = (0 \\cdot 0) + (0 \\cdot 1) = 0 + 0 = 0$\n求和：$1 + 0 + 0 + 0 = 1$，且 $1 \\pmod 2 = 1$。\n\n因此，$\\omega(v_{P_1}, v_{P_2}) = 1$。", "answer": "$$ \\boxed{1} $$", "id": "144648"}, {"introduction": "在掌握了静态的对易关系之后，下一步是理解在克利福德门（Clifford gate）作用下泡利算符的动态演化。本练习将让你直接应用常见的克利福德门，如哈达玛门（Hadamard）和受控非门（CNOT），来更新泡利算符的二进制矢量表示。通过这个具体的计算过程 [@problem_id:144682]，你将学会如何追踪泡利算符在量子线路中的变换，这是理解稳定子纠错码和容错计算的关键一步。", "problem": "在量子计算的背景下，$n$-量子比特Pauli群 $G_n$ 由单量子比特Pauli矩阵 $\\{I, X, Y, Z\\}$ 的张量积生成。任何算符 $P \\in G_n$ 都可以写成 $P = p \\cdot P_s$ 的形式，其中 $p \\in \\{\\pm 1, \\pm i\\}$ 是一个相位因子，而 $P_s$ 是Pauli矩阵的张量积（一个Pauli串）。\n\nPauli串部分 $P_s = \\bigotimes_{k=1}^n \\sigma_k$（其中 $\\sigma_k \\in \\{I, X, Y, Z\\}$）可以由一个长度为 $2n$ 的二进制向量高效地表示。这被称为二进制辛表示。该向量通过拼接两个长度为 $n$ 的二进制向量 $v = (x_1, \\dots, x_n | z_1, \\dots, z_n)$ 来构建，其中对于每个量子比特 $k$：\n- $I \\leftrightarrow (x_k=0, z_k=0)$\n- $X \\leftrightarrow (x_k=1, z_k=0)$\n- $Z \\leftrightarrow (x_k=0, z_k=1)$\n- $Y \\leftrightarrow (x_k=1, z_k=1)$ (因为 $Y=iXZ$)\n\n当一个Pauli算符 $P$ 被一个Clifford门 $U$ 共轭时，得到的算符 $P' = UPU^\\dagger$ 也是一个Pauli算符（不计相位因子）。这个共轭作用对应于其二进制向量 $v$ 在域 $\\mathbb{F}_2$ 上的一个线性变换。对于一个由Hadamard ($H$) 门和Controlled-NOT ($CNOT$) 门组成的线路，二进制向量 $v = (x_1, \\dots, x_n | z_1, \\dots, z_n)$ 的更新规则如下：\n\n1.  **作用于量子比特 $j$ 上的Hadamard门 ($H_j$)：** 这个门交换对应的 $x_j$ 和 $z_j$ 分量。所有其他分量保持不变。\n    $$\n    x_j' = z_j, \\quad z_j' = x_j\n    $$\n\n2.  **控制量子比特为 $c$、目标量子比特为 $t$ 的CNOT门 ($CNOT_{ct}$)：** 这个门更新与控制和目标量子比特对应的分量。所有其他分量保持不变。\n    $$\n    x_c' = x_c, \\quad x_t' = x_c \\oplus x_t\n    $$\n    $$\n    z_c' = z_c \\oplus z_t, \\quad z_t' = z_t\n    $$\n    其中 $\\oplus$ 表示模2加法。\n\n考虑一个3量子比特的Pauli算符 $S = Z_1 Z_2 I_3$。现应用一个量子线路 $U = CNOT_{12} H_1$，其中 $H_1$ 是作用于量子比特 1 上的Hadamard门，而 $CNOT_{12}$ 的控制比特为量子比特 1，目标比特为量子比特 2。这将算符 $S$ 变换为 $S' = U S U^\\dagger$。\n\n你的任务是求出代表算符 $S'$ 的最终二进制向量的汉明权重。一个二进制向量的汉明权重是它所包含的'1'的个数。", "solution": "初始Pauli算符 $S = Z_1 Z_2 I_3$ 的二进制辛表示为 $v = (0, 0, 0 | 1, 1, 0)$。我们按照线路 $U = \\text{CNOT}_{12} H_1$ 的顺序，从右到左，更新这个向量。\n\n1.  **应用 $H_1$：**\n    Hadamard门 $H_1$ 作用于量子比特1，它会交换该比特的 $x_1$ 和 $z_1$ 分量。\n    -   初始向量: $v = (x_1=0, x_2=0, x_3=0 \\mid z_1=1, z_2=1, z_3=0)$\n    -   交换 $x_1$ 和 $z_1$：$x_1' = z_1 = 1$, $z_1' = x_1 = 0$。\n    -   变换后的向量: $v' = (1, 0, 0 \\mid 0, 1, 0)$。\n\n2.  **应用 $\\text{CNOT}_{12}$：**\n    CNOT门以量子比特1为控制比特，量子比特2为目标比特。我们根据更新规则作用于向量 $v'$。\n    -   $x_1'' = x_1' = 1$\n    -   $x_2'' = x_1' \\oplus x_2' = 1 \\oplus 0 = 1$\n    -   $x_3'' = x_3' = 0$\n    -   $z_1'' = z_1' \\oplus z_2' = 0 \\oplus 1 = 1$\n    -   $z_2'' = z_2' = 1$\n    -   $z_3'' = z_3' = 0$\n    -   最终向量: $v'' = (1, 1, 0 \\mid 1, 1, 0)$。\n\n这个最终的二进制向量代表了变换后的Pauli算符 $S'$。\n\n最后，计算该向量的汉明权重，即向量中“1”的个数：\n汉明权重 = $1 + 1 + 0 + 1 + 1 + 0 = 4$。", "answer": "$$ \\boxed{4} $$", "id": "144682"}, {"introduction": "最后，我们将前两个练习的技能结合起来，解决一个更综合的应用问题：模拟一次投影测量对稳定子态的影响。本练习 [@problem_id:144769] 要求你更新一个四量子比特线性簇态（linear cluster state）的稳定子生成元矩阵，以反映一次泡利 $Y_2$ 算符的测量结果。这个过程不仅巩固了对易关系检查和生成元更新的知识，还引入了线性代数工具来获得规范化的结果，全面展示了二进制辛表示法在模拟稳定子量子计算中的强大功能。", "problem": "一个 $N$ 量子比特泡利算符 $P$，除去一个相位因子，可由一个长度为 $2N$ 的二元行向量 $v = (x_1, \\dots, x_N | z_1, \\dots, z_N) \\in \\mathbb{F}_2^{2N}$ 表示。单量子比特泡利矩阵到 $(x|z)$ 对的映射关系如下：$I \\to (0|0)$，$X \\to (1|0)$，$Z \\to (0|1)$，以及 $Y \\to (1|1)$。对于泡利算符的张量积，其二元向量由各个量子比特对应的二元向量拼接而成。一个稳定子态由一组 $N$ 个相互对易、线性无关的泡利算符 $\\{S_i\\}$（称为稳定子生成元）所定义。这组算符可以用一个 $N \\times 2N$ 的二元矩阵 $G$（称为生成元矩阵）来表示，其中第 $i$ 行为 $S_i$ 的二元向量。两个泡利算符 $P_1$ 和 $P_2$ 的乘积，对应于其各自二元向量的模2加法。\n\n两个泡利算符 $P_1$ 和 $P_2$（其二元向量分别为 $v_1 = (x_1|z_1)$ 和 $v_2 = (x_2|z_2)$）之间的对易关系由辛内积决定：$P_1 P_2 = (-1)^{v_1 \\cdot \\Lambda \\cdot v_2^T} P_2 P_1$，其中 $\\Lambda = \\begin{pmatrix} 0 & I_N \\\\ I_N & 0 \\end{pmatrix}$。若指数 $v_1 \\cdot \\Lambda \\cdot v_2^T = x_1 \\cdot z_2 + z_1 \\cdot x_2 \\pmod 2$ 为 0，则算符对易；若为 1，则反对易。\n\n考虑一个4量子比特的线性簇态，其稳定子生成元为：\n$S_1 = X_1 Z_2$\n$S_2 = Z_1 X_2 Z_3$\n$S_3 = Z_2 X_3 Z_4$\n$S_4 = Z_3 X_4$\n\n对该态进行泡利算符 $M = Y_2$ 的投影测量，测量结果为 -1。该操作会更新稳定子群及其生成元矩阵。生成元矩阵 $G$ 的更新规则如下：\n1. 找出与测量算符 $M$ 反对易的初始生成元集合 $\\{S_i\\}$。\n2. 从这些反对易的生成元中任选一个（记作 $S_p$）作为主元。\n3. 对于每个与 $M$ 反对易的其他生成元 $S_j$，其在生成元矩阵中对应的行向量 $g_j$ 更新为 $g_j' = g_j + g_p \\pmod 2$。\n4. 主元生成元所在的行 $g_p$ 被测量算符 $M$ 的二元向量 $m$ 所替换。\n5. 与 $M$ 对易的生成元保持不变。\n测量结果（$\\pm 1$）不影响最终的二元生成元矩阵。\n\n你的任务是求出更新后的 $4 \\times 8$ 生成元矩阵 $G_{final}$。为确保答案唯一，需将此矩阵化为域 $\\mathbb{F}_2$ 上的简化行阶梯形矩阵（RREF）。求该最终 RREF 矩阵中所有二元元素之和。", "solution": "首先，我们将初始稳定子生成元和测量算符转换为它们的二进制辛表示。行向量格式为 $(x_1,x_2,x_3,x_4 | z_1,z_2,z_3,z_4) \\in \\mathbb{F}_2^8$。\n- $S_1 = X_1 Z_2 \\implies g_1 = (1,0,0,0|0,1,0,0)$\n- $S_2 = Z_1 X_2 Z_3 \\implies g_2 = (0,1,0,0|1,0,1,0)$\n- $S_3 = Z_2 X_3 Z_4 \\implies g_3 = (0,0,1,0|0,1,0,1)$\n- $S_4 = Z_3 X_4 \\implies g_4 = (0,0,0,1|0,0,1,0)$\n- $M = Y_2 \\implies m = (0,1,0,0|0,1,0,0)$\n\n接下来，我们检查每个生成元与 $M$ 的对易关系，通过计算辛内积 $\\omega(g_i, m)$：\n- $\\omega(g_1, m) = (1 \\cdot 0 + 0 \\cdot 1) + (0 \\cdot 1 + 1 \\cdot 1) + (0 \\cdot 0 + 0 \\cdot 0) + (0 \\cdot 0 + 0 \\cdot 0) = 1$ (反对易)\n- $\\omega(g_2, m) = (0 \\cdot 0 + 1 \\cdot 1) + (1 \\cdot 1 + 0 \\cdot 1) + (0 \\cdot 0 + 1 \\cdot 0) + (0 \\cdot 0 + 0 \\cdot 0) = 1$ (反对易)\n- $\\omega(g_3, m) = (0 \\cdot 0 + 0 \\cdot 1) + (0 \\cdot 1 + 1 \\cdot 1) + (1 \\cdot 0 + 0 \\cdot 0) + (0 \\cdot 0 + 1 \\cdot 0) = 1$ (反对易)\n- $\\omega(g_4, m) = (0 \\cdot 0 + 0 \\cdot 1) + (0 \\cdot 1 + 0 \\cdot 1) + (0 \\cdot 0 + 1 \\cdot 0) + (1 \\cdot 0 + 0 \\cdot 0) = 0$ (对易)\n$S_1, S_2, S_3$ 反对易，$S_4$ 对易。\n\n根据更新规则，我们选择 $S_1$ (即 $g_1$) 作为主元。\n1.  $g_1$ 被替换为 $m$：$g_1' = m = (0,1,0,0|0,1,0,0)$\n2.  更新其他反对易的生成元 $g_2, g_3$：\n    -   $g_2' = g_2 + g_1 = (0,1,0,0|1,0,1,0) + (1,0,0,0|0,1,0,0) = (1,1,0,0|1,1,1,0)$\n    -   $g_3' = g_3 + g_1 = (0,0,1,0|0,1,0,1) + (1,0,0,0|0,1,0,0) = (1,0,1,0|0,0,0,1)$\n3.  对易的生成元 $g_4$ 保持不变：$g_4' = g_4 = (0,0,0,1|0,0,1,0)$\n\n更新后的生成元矩阵 $G_{final}$ 为：\n$$\nG_{final} = \\left(\\begin{array}{cccc|cccc}\n0 & 1 & 0 & 0 & 0 & 1 & 0 & 0 \\\\\n1 & 1 & 0 & 0 & 1 & 1 & 1 & 0 \\\\\n1 & 0 & 1 & 0 & 0 & 0 & 0 & 1 \\\\\n0 & 0 & 0 & 1 & 0 & 0 & 1 & 0\n\\end{array}\\right)\n$$\n现在，我们将此矩阵化为简化行阶梯形矩阵（RREF）：\n$$\nG_{\\text{RREF}} = \\left(\\begin{array}{cccc|cccc}\n1 & 0 & 0 & 0 & 1 & 0 & 1 & 0 \\\\\n0 & 1 & 0 & 0 & 0 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & 0 & 1 & 0 & 1 & 1 \\\\\n0 & 0 & 0 & 1 & 0 & 0 & 1 & 0\n\\end{array}\\right)\n$$\n最后，计算该 RREF 矩阵中所有二元元素之和。各行的元素和分别为 3, 2, 4, 2，因此总和为 $3+2+4+2=11$。", "answer": "$$\\boxed{11}$$", "id": "144769"}]}