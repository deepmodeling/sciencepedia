{"hands_on_practices": [{"introduction": "德哈斯-范阿尔芬效应（de Haas-van Alphen effect）的核心价值在于它能够精确测量费米面的几何特性。这个实践练习将引导你运用基本的翁萨格关系（Onsager relation），将宏观可测量的振荡周期与材料的微观载流子浓度联系起来。通过这个计算，你将亲身体验如何从量子振荡现象中提取关于材料电子结构的关键信息。", "problem": "德哈斯-范阿尔芬 (dHvA) 效应是指金属的磁化率作为外加磁场 $B$ 的函数所表现出的振荡现象。这些振荡在逆磁场 $1/B$ 中是周期性的。该周期 $\\Delta(1/B)$ 通过翁萨格关系与材料费米面的几何形状有着根本的联系：\n$$\n\\Delta\\left(\\frac{1}{B}\\right) = \\frac{2\\pi e}{\\hbar A_F}\n$$\n其中 $e$ 是元电荷，$\\hbar$ 是约化普朗克常数，$A_F$ 是 k 空间中垂直于磁场方向的费米面极值截面积。\n\n考虑一个二维电子气 (2DEG)，磁场垂直于该气体平面施加。此二维电子气中的电子具有各向同性但非抛物线性的能量色散关系，由下式给出：\n$$\nE(1 + \\alpha E) = \\frac{\\hbar^2 k^2}{2m^*}\n$$\n此处，$E$ 是电子能量，$k$ 是二维波矢的大小，$m^*$ 是带边有效质量，$\\alpha$ 是一个常数非抛物线性参数。该系统具有恒定的、自旋简并的载流子浓度 $n$。\n\n计算该系统的德哈斯-范阿尔芬振荡周期 $\\Delta(1/B)$。用载流子浓度 $n$、元电荷 $e$ 和约化普朗克常数 $\\hbar$ 来表示您的答案。", "solution": "德哈斯-范阿尔芬振荡周期由翁萨格关系给出：\n\n$$\n\\Delta\\left(\\frac{1}{B}\\right) = \\frac{2\\pi e}{\\hbar A_F}\n$$\n\n其中 $A_F$ 是垂直于磁场的费米面极值截面积。对于磁场垂直平面施加的二维电子气 (2DEG)，由于色散是各向同性的，费米面是圆形的，而 $A_F$ 是 k 空间中费米圆盘的面积。\n\n能量色散关系为：\n\n$$\nE(1 + \\alpha E) = \\frac{\\hbar^2 k^2}{2m^*}\n$$\n\n在费米能 $E_F$ 处，此式变为：\n\n$$\nE_F(1 + \\alpha E_F) = \\frac{\\hbar^2 k_F^2}{2m^*}\n$$\n\n其中 $k_F$ 是费米波矢。载流子浓度 $n$ 是恒定的且自旋简并（简并度 $g = 2$）。单位面积的态密度为：\n\n$$\ng(E) = \\frac{m^*}{\\pi \\hbar^2} (1 + 2\\alpha E)\n$$\n\n载流子浓度为：\n\n$$\nn = \\int_0^{E_F} g(E)  dE = \\frac{m^*}{\\pi \\hbar^2} \\int_0^{E_F} (1 + 2\\alpha E)  dE\n$$\n\n计算该积分：\n\n$$\nn = \\frac{m^*}{\\pi \\hbar^2} \\left[ E + \\alpha E^2 \\right]_0^{E_F} = \\frac{m^*}{\\pi \\hbar^2} (E_F + \\alpha E_F^2)\n$$\n\n使用在 $E_F$ 处的色散关系：\n\n$$\nE_F + \\alpha E_F^2 = \\frac{\\hbar^2 k_F^2}{2m^*}\n$$\n\n代入：\n\n$$\nn = \\frac{m^*}{\\pi \\hbar^2} \\cdot \\frac{\\hbar^2 k_F^2}{2m^*} = \\frac{k_F^2}{2\\pi}\n$$\n\n求解 $k_F^2$：\n\n$$\nk_F^2 = 2\\pi n\n$$\n\n极值截面积 $A_F$ 是费米圆盘的面积：\n\n$$\nA_F = \\pi k_F^2 = \\pi (2\\pi n) = 2\\pi^2 n\n$$\n\n将 $A_F$ 代入翁萨格关系：\n\n$$\n\\Delta\\left(\\frac{1}{B}\\right) = \\frac{2\\pi e}{\\hbar (2\\pi^2 n)} = \\frac{e}{\\pi \\hbar n}\n$$", "answer": "$$ \\boxed{\\dfrac{e}{\\pi \\hbar n}} $$", "id": "122328"}, {"introduction": "虽然 dHvA 效应是探测费米面的有力工具，但它的可观测性并非理所当然。这个练习将带你探究一个更贴近真实的紧束缚模型，揭示费米面拓扑结构（开放轨道与闭合轨道）如何决定量子振荡能否发生。理解这个从闭合轨道到开放轨道的转变，是正确解读真实材料 dHvA 实验数据的关键一步。", "problem": "考虑一个方形晶格上的二维无相互作用电子气，晶格常数为 $a$。在紧束缚近似下，能量色散关系由下式给出：\n$$ E(k_x, k_y) = -2t (\\cos(k_x a) + \\cos(k_y a)) $$\n其中 $t$ 是最近邻跃迁积分，$(k_x, k_y)$ 是波矢在第一布里渊区内的分量，第一布里渊区由 $-\\pi/a < k_x \\le \\pi/a$ 和 $-\\pi/a < k_y \\le \\pi/a$ 定义。\n\nde Haas-van Alphen (dHvA) 效应，即磁化率作为倒数磁场的函数发生振荡的现象，是探测金属费米面的有力工具。观察到dHvA振荡的一个关键要求是，在垂直于外加磁场（我们假设其沿z轴，垂直于二维平面）的k空间中存在闭合的电子轨道。\n\n当能带填充从零开始增加时，费米面最初由以布里渊区 $\\Gamma$ 点 $(0,0)$ 为中心的闭合的电子型口袋构成。然而，在某个临界能带填充下，费米面会接触到布里渊区的边界，并发展出一种“开放”拓扑，在扩展区图形中无限延伸。这些开放轨道对dHvA信号没有贡献。\n\n确定临界能带填充分数 $\\nu_c$，在该填充下，费米面拓扑首次从纯粹的闭合轨道转变为支持开放轨道。能带填充分数 $\\nu$ 定义为每个晶格位置的平均电子数。注意，由于自旋简并，一个完全填充的能带对应于 $\\nu=2$。", "solution": "问题要求解二维方形晶格紧束缚模型中，费米面从只包含闭合轨道转变为支持开放轨道时的临界能带填充分数 $\\nu_c$。\n\n1.  **分析费米面拓扑**\n\n能量色散关系为 $E(k_x, k_y) = -2t (\\cos(k_x a) + \\cos(k_y a))$。我们假设 $t>0$。费米面是由 $E(k_x, k_y) = E_F$ 定义的等能线。\n\n能带在 $\\Gamma$ 点 $(k_x, k_y) = (0,0)$ 处有最小能量，$E_{min} = -2t(\\cos(0) + \\cos(0)) = -4t$。\n能带在 M 点 $(k_x, k_y) = (\\pi/a, \\pi/a)$ 处有最大能量，$E_{max} = -2t(\\cos(\\pi) + \\cos(\\pi)) = 4t$。\n\n对于略高于 $E_{min}$ 的费米能 $E_F$，费米面由以 $\\Gamma$ 点为中心的一些小的、闭合的、近似圆形的等能线构成。这些是闭合的电子轨道。\n\n当费米面首次接触到第一布里渊区的边界时，发生向开放轨道的转变。第一布里渊区是由 $|k_x| \\le \\pi/a$ 和 $|k_y| \\le \\pi/a$ 定义的正方形。当费米面到达能量色散的鞍点时，拓扑发生变化，这些鞍点位于布里渊区边界的 X 点和 Y 点：$(\\pm \\pi/a, 0)$ 和 $(0, \\pm \\pi/a)$。\n\n让我们计算这些鞍点处的能量。例如，在 $(k_x, k_y) = (\\pi/a, 0)$ 处：\n$$ E(\\pi/a, 0) = -2t (\\cos(\\pi a / a) + \\cos(0)) = -2t(-1 + 1) = 0 $$\n所以，发生转变的临界费米能是 $E_F^c = 0$。\n\n对于 $E_F < 0$，费米面是围绕 $\\Gamma$ 点的闭合等能线。\n对于 $E_F > 0$，费米面是围绕 M 点的闭合等能线（可以视为空穴口袋）。\n在 $E_F = 0$ 时，费米面由 $\\cos(k_x a) + \\cos(k_y a) = 0$ 给出。这个面连接了点 $(\\pm\\pi/a, 0)$ 和 $(0, \\pm\\pi/a)$，形成一个旋转了 45° 的方形网格，在扩展区图形中延伸到整个k空间。这就是开放轨道的开始。\n\n2.  **计算临界填充分数**\n\n现在我们需要计算与临界费米能 $E_F^c = 0$ 对应的能带填充分数 $\\nu_c$。\n能带填充分数 $\\nu$ 是每个格点的电子数，即 $N_e/N_{sites}$。\n第一布里渊区中可用的k态总数等于晶格位置数 $N_{sites}$。考虑到自旋简并，电子态的总数是 $2 N_{sites}$。\n\n电子数 $N_e$ 由已占据态的数量给出。考虑到自旋，这个数量是已占据k态数量的两倍。已占据k态的数量是 $N_{sites}$ 乘以布里渊区中被占据的面积分数。\n$$ N_e = 2 \\times N_{sites} \\times \\frac{A_{occ}(E_F)}{A_{BZ}} $$\n其中 $A_{occ}(E_F)$ 是 k 空间中满足 $E(\\vec{k}) \\le E_F$ 的区域面积，而 $A_{BZ} = (2\\pi/a)^2$ 是第一布里渊区的总面积。\n\n因此，填充分数为：\n$$ \\nu = \\frac{N_e}{N_{sites}} = 2 \\frac{A_{occ}(E_F)}{A_{BZ}} $$\n我们需要为临界费米能 $E_F^c = 0$ 计算这个值。\n$$ \\nu_c = 2 \\frac{A_{occ}(E_F=0)}{A_{BZ}} $$\n已占据面积 $A_{occ}(E_F=0)$ 是第一布里渊区内满足 $E(\\vec{k}) \\le 0$ 的区域。给定 $t>0$，这个条件是：\n$$ -2t (\\cos(k_x a) + \\cos(k_y a)) \\le 0 \\implies \\cos(k_x a) + \\cos(k_y a) \\ge 0 $$\n我们需要找到满足此条件的布里渊区面积分数。\n\n我们可以通过直接积分来解决这个问题，但一个更巧妙的方法是利用模型的粒子-空穴对称性。能谱表现出性质 $E(k_x + \\pi/a, k_y + \\pi/a) = -E(k_x, k_y)$：\n$$ E(k_x + \\pi/a, k_y + \\pi/a) = -2t (\\cos(k_x a + \\pi) + \\cos(k_y a + \\pi)) $$\n$$ = -2t (-\\cos(k_x a) - \\cos(k_y a)) = 2t (\\cos(k_x a) + \\cos(k_y a)) = -E(k_x, k_y) $$\n这意味着对于每个能量为 $E$ 的 k 态，都存在另一个能量为 $-E$ 的 k 态（由向量 $\\vec{Q} = (\\pi/a, \\pi/a)$ 平移得到）。这导致在从 $-4t$ 到 $4t$ 的能带范围内，态密度 (DOS) 是对称的，即 $D(E) = D(-E)$。\n\n能带中的总态数正比于 $\\int_{-4t}^{4t} D(E) dE$。\n对于 $E_F=0$，已占据态的数量正比于 $\\int_{-4t}^{0} D(E) dE$。\n\n由于对称性 $D(E) = D(-E)$，我们有：\n$$ \\int_{-4t}^{0} D(E) dE = \\int_{0}^{4t} D(-E) dE = \\int_{0}^{4t} D(E) dE $$\n因此，\n$$ \\int_{-4t}^{4t} D(E) dE = \\int_{-4t}^{0} D(E) dE + \\int_{0}^{4t} D(E) dE = 2 \\int_{-4t}^{0} D(E) dE $$\n这意味着在 $E_F=0$ 时，能带中恰好有一半的可用 k 态被填充。已占据态的面积分数为：\n$$ \\frac{A_{occ}(E_F=0)}{A_{BZ}} = \\frac{\\int_{-4t}^{0} D(E) dE}{\\int_{-4t}^{4t} D(E) dE} = \\frac{1}{2} $$\n将此代入我们关于临界填充分数的表达式中：\n$$ \\nu_c = 2 \\times \\frac{A_{occ}(E_F=0)}{A_{BZ}} = 2 \\times \\frac{1}{2} = 1 $$\n向开放轨道的转变发生在半满时，即每个晶格位置有一个电子。", "answer": "$$ \\boxed{1} $$", "id": "64420"}, {"introduction": "理论计算为我们提供了 dHvA 效应的物理图像，但在真实实验中，我们如何从充满噪声和背景的原始数据中提取出在 $1/B$ 空间中呈周期性的振荡频率呢？本练习是一个计算物理实践，它将指导你完成一个标准的 dHvA 数据分析流程，包括对非均匀磁场数据进行重采样、去除背景趋势以及应用窗函数。这个过程模拟了凝聚态实验物理学家的日常工作，让你掌握将理论应用于数据分析的核心技能。", "problem": "您将执行一项基于材料物理学中德哈斯-范阿尔芬 (dHvA) 效应研究的任务。在磁场存在的情况下，由于电子轨道的朗道量子化，磁化响应会呈现出振荡，这些振荡在磁场倒数变量中是周期的。目标是通过在磁场倒数中构建均匀网格、对数据进行变迹处理以减轻频谱泄漏，并计算快速傅里叶变换 (FFT) 来识别主导频率分量，从而从有限窗口的磁化数据集中提取振荡频率。您的程序必须完整实现整个处理流程，并计算出最终的数值答案。\n\n请从以下基本原理出发，不要使用任何关于处理结果的快捷公式：\n- 朗道量子化在改变磁场时会在热力学量中产生振荡贡献，这些贡献在磁场倒数变量中是周期的。因此，任何用于揭示这些周期性的离散傅里叶变换 (DFT) 分析都必须针对磁场倒数变量进行，因为周期性存在于 $1/B$ 中，而不是在 $B$ 中。\n- 离散傅里叶变换要求其自变量的数据是均匀采样的，在本例中，自变量为 $x = 1/B$。\n- 对有限长度的时间序列进行加窗（变迹）处理，用于减少因在有限采样区间上隐式乘以矩形窗而产生的频谱泄漏。\n\n您的任务是：\n- 给定在有限磁场窗口 $[B_{\\min},B_{\\max}]$ 上观测到的磁化数据集 $M(B)$，在磁场倒数变量 $x = 1/B$ 中构建均匀网格，将磁化强度插值到该网格上，去除随 $x$ 缓慢变化的背景，应用变迹窗，并计算快速傅里叶变换 (FFT)。\n- 从 FFT 幅度谱中，识别主导的 dHvA 频率。对于每个测试用例，返回所需数量的主导峰值频率。频率必须以特斯拉 (T) 为单位表示，这是德哈斯-范阿尔芬频率的自然单位，因为在 $x=1/B$ 中的傅里叶变换的频率轴单位是周期/特斯拉。频率必须四舍五入到最接近的整数（单位为 $\\mathrm{T}$）。\n- 您必须在您的代码结构和附带的解决方案中，为每个预处理步骤提供理由：均匀 $1/B$ 网格构建、去趋势和 FFT 之前的变迹处理。\n\n数据模型和确定性测试套件：\n- 对于每个测试用例，磁化数据是确定性生成的，它是一个在 $B$ 中缓慢变化的多项式背景、一个在 $1/B$ 中周期的振荡贡献、一个弱振幅包络因子和一个小的确定性伪噪声项的总和。具体来说，对于索引为 $i \\in \\{0,1,\\dots,N-1\\}$ 的样本，定义\n  - $B_i = \\mathrm{sort}\\left(B_{\\min} + \\frac{B_{\\max} - B_{\\min}}{N-1} \\, i + \\varepsilon \\sin\\!\\left(\\frac{2\\pi i}{N-1}\\right)\\right)$,\n  - $x_i = 1/B_i$,\n  - $M_i = \\underbrace{c_0 + c_1 B_i + c_2 B_i^2}_{\\text{$B$ 中的背景}} + \\underbrace{\\sum_{j=1}^{J} A_j B_i^{-1/2} \\sin\\!\\left(2\\pi \\frac{F_j}{B_i} + \\phi_j\\right)}_{\\text{在 $1/B$ 中周期的 dHvA 振荡}} + \\underbrace{\\eta_1 \\sin\\!\\left(2\\pi \\frac{B_i}{\\tau_1}\\right) + \\eta_2 \\cos\\!\\left(2\\pi \\frac{B_i}{\\tau_2}\\right)}_{\\text{确定性小伪噪声}}.$\n- 在所有测试用例中，对伪噪声使用以下确定性常数：$\\tau_1 = 1.3\\,\\mathrm{T}$, $\\tau_2 = 0.7\\,\\mathrm{T}$, $\\eta_1 = 0.02$, and $\\eta_2 = 0.015$。\n\n为每个测试用例实现以下处理流程：\n- 构建 $x_i = 1/B_i$ 并按 $x_i$ 递增顺序对数据对 $(x_i, M_i)$ 进行排序。\n- 将 $\\{(x_i, M_i)\\}$ 插值到一个覆盖区间 $[x_{\\min}, x_{\\max}]$ 的均匀网格 $\\{x_k\\}$ 上，其中 $x_{\\min} = \\min_i x_i$ 且 $x_{\\max} = \\max_i x_i$。该网格必须在 $x$ 上是均匀的，包含 $N_{\\mathrm{grid}} = N$ 个点。使用稳定、分段线性的插值方法。\n- 通过减去一个关于 $x$ 的 $d=2$ 次多项式拟合来对插值后的序列进行去趋势处理。即，将 $P_2(x) = a_0 + a_1 x + a_2 x^2$ 拟合到插值后的 $M(x)$，并使用 $M_{\\mathrm{detrend}}(x) = M(x) - P_2(x)$。\n- 对去趋势后的数据应用变迹（加窗）函数 $w(x)$，例如，对于 $k = 0,\\dots,N_{\\mathrm{grid}}-1$，使用汉宁窗 $w_k = \\tfrac{1}{2}\\big(1 - \\cos(2\\pi k/(N_{\\mathrm{grid}}-1))\\big)$。\n- 使用为均匀采样优化的实数到复数 FFT 计算单边 FFT 幅度谱 $| \\mathcal{F}\\{ M_{\\mathrm{detrend}}(x) w(x) \\} |$，并使用均匀 $x$ 网格的采样间隔 $\\Delta x$ 计算相应的频率轴 $f$（单位为 $\\mathrm{T}$）。对于非负数 $k$，使用 $f_k = \\frac{k}{N_{\\mathrm{grid}} \\Delta x}$。\n- 通过在 FFT 幅度谱中寻找具有足够突显度的局部最大值来识别峰值频率。排除零频分量。为保证数值稳健性，您可以忽略相对于所提供磁场窗口而言非常低的频率（例如，低于某个小的下限值）。\n\n测试套件：\n- 共有四个测试用例。对每个用例，指定 $(B_{\\min}, B_{\\max}, N, \\varepsilon, J, \\{F_j\\}_{j=1}^J, \\{A_j\\}_{j=1}^J, \\{\\phi_j\\}_{j=1}^J, c_0, c_1, c_2)$ 以及要返回的主导频率数量。\n  1. 用例 A（单频，中等窗口）：$B_{\\min} = 7\\,\\mathrm{T}$， $B_{\\max} = 15\\,\\mathrm{T}$， $N = 601$， $\\varepsilon = 0.02\\,\\mathrm{T}$， $J = 1$， $F_1 = 530\\,\\mathrm{T}$， $A_1 = 1.2$， $\\phi_1 = 0.3$， $c_0 = 0.5$， $c_1 = 0.1$， $c_2 = 0$， 返回 $K=1$ 个主导频率。\n  2. 用例 B（双频）：$B_{\\min} = 8\\,\\mathrm{T}$， $B_{\\max} = 20\\,\\mathrm{T}$， $N = 801$， $\\varepsilon = 0.015\\,\\mathrm{T}$， $J = 2$， $(F_1,F_2) = (380\\,\\mathrm{T}, 1050\\,\\mathrm{T})$， $(A_1,A_2) = (1.0, 0.6)$， $(\\phi_1,\\phi_2) = (-0.2, 1.0)$， $(c_0,c_1,c_2) = (-0.3, 0.05, 0.002)$， 返回 $K=2$ 个主导频率。\n  3. 用例 C（窄窗口，分辨率有限）：$B_{\\min} = 14\\,\\mathrm{T}$， $B_{\\max} = 16\\,\\mathrm{T}$， $N = 401$， $\\varepsilon = 0.005\\,\\mathrm{T}$， $J = 1$， $F_1 = 800\\,\\mathrm{T}$， $A_1 = 1.0$， $\\phi_1 = 0.5$， $(c_0,c_1,c_2) = (0.1, 0.02, -0.0005)$，返回 $K=1$ 个主导频率。\n  4. 用例 D（强背景和伪噪声）：$B_{\\min} = 5\\,\\mathrm{T}$， $B_{\\max} = 10\\,\\mathrm{T}$， $N = 501$， $\\varepsilon = 0.02\\,\\mathrm{T}$， $J = 1$， $F_1 = 600\\,\\mathrm{T}$， $A_1 = 0.6$， $\\phi_1 = -1.0$， $(c_0,c_1,c_2) = (1.0, 0.8, 0.0)$，返回 $K=1$ 个主导频率。\n\n数值和单位要求：\n- 所有返回的频率都以特斯拉 (T) 为单位表示，并四舍五入到最接近的整数。因为傅里叶变换是针对以 $\\mathrm{T}^{-1}$ 为单位采样的 $x = 1/B$ 执行的，所以频率轴的单位是 $\\mathrm{T}$。\n- 不涉及角度单位。不要返回百分比；所有数字必须是指定单位下的纯数字。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个 Python 风格的整数列表的列表（单位为特斯拉），按测试用例 $[\\text{用例 A}, \\text{用例 B}, \\text{用例 C}, \\text{用例 D}]$ 的顺序排列。例如，格式必须与以下完全一样\n  - $[[f_A],[f_{B,1},f_{B,2}],[f_C],[f_D]]$\n- 除方括号和逗号分隔的列表中的内容外，不要包含任何额外的文本或空格。\n\n您的程序必须是一个完整的、可运行的实现，它根据上述公式确定性地生成四个数据集，执行处理流程，并以指定格式打印最终的数值结果。代码必须是自包含的，且不得要求任何用户输入或外部文件。唯一允许使用的库是 Python 标准库、NumPy 和 SciPy。", "solution": "所提出的问题是计算材料物理学中一个有效且适定的任务。它要求实现一个标准的数据分析流程，用于从模拟的磁化信号中提取德哈斯-范阿尔芬 (dHvA) 振荡频率。该问题具有科学依据、形式规范且客观。它没有违反任何无效标准。因此，我将提供一个完整的解决方案。\n\ndHvA 效应的核心原理是，在强磁场 $B$ 的作用下，电子轨道量子化为朗道能级，导致热力学性质（如磁化强度 $M$）发生振荡。这些振荡不是在磁场 $B$ 本身中呈周期性，而是在其倒数 $x = 1/B$ 中呈周期性。这些振荡的频率 $F$（以特斯拉为单位表示）与垂直于磁场的费米面极端截面积成正比。目标是从给定的信号 $M(B)$ 中提取这些频率。\n\n所提供的数据是通过以下模型确定性生成的：\n$$\nM_i = \\underbrace{c_0 + c_1 B_i + c_2 B_i^2}_{\\text{背景}} + \\underbrace{\\sum_{j=1}^{J} A_j B_i^{-1/2} \\sin\\!\\left(2\\pi \\frac{F_j}{B_i} + \\phi_j\\right)}_{\\text{dHvA 振荡}} + \\underbrace{\\eta_1 \\sin\\!\\left(2\\pi \\frac{B_i}{\\tau_1}\\right) + \\eta_2 \\cos\\!\\left(2\\pi \\frac{B_i}{\\tau_2}\\right)}_{\\text{伪噪声}}\n$$\n其中磁场样本 $B_i$ 是近似均匀但非完全均匀的。分析流程必须能够稳健地处理非均匀采样、背景信号和有限窗口效应，以准确确定频率 $F_j$。以下步骤详细说明了该方法，并为每个关键处理阶段提供了理由。\n\n**步骤 1：网格变换和重采样**\n\n频率分析的基本工具是傅里叶变换。离散傅里叶变换 (DFT) 及其高效实现——快速傅里叶变换 (FFT) 要求输入信号在其自变量上以均匀间隔采样。dHvA 效应的物理性质决定了磁化强度的振荡部分在 $x=1/B$ 中是周期的。因此，傅里叶分析的自变量必须是 $x$。\n\n原始数据以数据对 $(B_i, M_i)$ 的形式提供，其中 $B_i$ 样本并非均匀间隔。因此，磁场倒数中的样本 $x_i = 1/B_i$ 也是非均匀的。为了应用 FFT，我们必须首先将磁化数据重采样到 $x$ 变量的均匀网格上。\n\n流程如下：\n1. 对于每次测量 $(B_i, M_i)$，计算磁场倒数 $x_i = 1/B_i$。\n2. 因为原始的 $B_i$ 值是排序的，所以得到的 $x_i$ 值将按降序排列。将数据对 $(x_i, M_i)$ 按 $x_i$ 递增排序，为插值做准备。\n3. 构建一个新的均匀网格 $\\{x_k\\}_{k=0}^{N_{\\mathrm{grid}}-1}$，该网格跨越数据的整个范围，从 $x_{\\min} = \\min(x_i)$ 到 $x_{\\max} = \\max(x_i)$。此网格上的点数 $N_{\\mathrm{grid}}$ 选择为与原始数据点数 $N$ 相等。网格间距是均匀的：$\\Delta x = (x_{\\max} - x_{\\min}) / (N_{\\mathrm{grid}}-1)$。\n4. 通过对排序后的非均匀数据 $(x_i, M_i)$ 应用分段线性插值，获得此均匀网格上的磁化值 $M(x_k)$。选择此方法是因其稳定性和计算效率。\n\n**步骤 2：背景扣除（去趋势）**\n\n磁化信号 $M(x)$ 是我们期望的高频 dHvA 振荡与一个缓慢变化的背景分量的叠加。在所提供的模型中，这个背景源于多项式 $c_0 + c_1 B + c_2 B^2$，当作为 $x = 1/B$ 的函数时，它变成了一个非多项式趋势。如果不移除这个低频趋势，它将在零频及其附近主导傅里叶谱。当 FFT 将信号视为周期信号时，此趋势的起始值和结束值之间的不连续性会引入显著的频谱泄漏，这可能会掩盖较弱的 dHvA 峰。\n\n为了分离振荡分量，必须减去这个背景趋势。这个过程称为去趋势。一种常用且有效的方法是，将一个低次多项式拟合到信号 $M(x_k)$，然后从数据中减去这个拟合。问题指定拟合一个关于变量 $x$ 的 $d=2$ 次多项式：\n$$\nP_2(x_k) = a_0 + a_1 x_k + a_2 x_k^2\n$$\n系数 $(a_0, a_1, a_2)$ 通过对插值数据 $M(x_k)$ 进行最小二乘拟合来确定。然后计算去趋势后的信号：\n$$\nM_{\\mathrm{detrend}}(x_k) = M(x_k) - P_2(x_k)\n$$\n此过程有效地移除了缓慢变化的分量，留下一个在零点附近振荡的信号，这对于后续的傅里叶分析是理想的。\n\n**步骤 3：变迹（加窗）**\n\n分析有限段的数据在数学上等同于将一个无限信号乘以一个矩形窗函数，该函数在测量区间 $[x_{\\min}, x_{\\max}]$ 上为 1，在其他地方为 0。这个矩形窗在 $x$ 域中的尖锐边缘导致在频域中与一个 $\\mathrm{sinc}$ 函数进行卷积。这导致每个真实的光谱峰被展宽并伴有大的旁瓣，这种效应被称为频谱泄漏。这些旁瓣可能会掩盖附近较弱的峰，或被误认为是真实的频率。\n\n为了减轻这种情况，将去趋势后的数据乘以一个变迹（或加窗）函数 $w(x_k)$，该函数在区间边界处平滑地衰减到零。这降低了信号截断的尖锐度，从而抑制了频谱中的旁瓣，但代价是主峰会略微展宽。对于此问题，指定使用汉宁窗：\n$$\nw_k = \\frac{1}{2} \\left(1 - \\cos\\left(\\frac{2\\pi k}{N_{\\mathrm{grid}}-1}\\right)\\right) \\quad \\text{for } k = 0, \\dots, N_{\\mathrm{grid}}-1\n$$\n加窗后的信号为 $M_{\\mathrm{windowed}}(x_k) = M_{\\mathrm{detrend}}(x_k) \\cdot w_k$。\n\n**步骤 4：傅里叶变换和峰值识别**\n\n经过预处理步骤后，信号已准备好进行傅里叶分析。\n1. 对最终信号 $M_{\\mathrm{windowed}}(x_k)$ 应用一维实数到复数快速傅里叶变换 (FFT)。\n2. 计算与 FFT 输出相对应的频率轴。频率 $f_k$ 由 $f_k = k / (N_{\\mathrm{grid}} \\Delta x)$ 给出，其中 $\\Delta x$ 是磁场倒数域中的均匀采样间隔。$f_k$ 的单位是特斯拉 ($\\mathrm{T}$)，因为 $\\Delta x$ 的单位是 $\\mathrm{T}^{-1}$。\n3. 计算复数 FFT 输出的幅度以获得功率谱。\n4. dHvA 频率对应于该幅度谱中不同峰值的位置。通过寻找局部最大值来识别峰值。零频分量（直流偏移）被忽略，因为它包含了任何未完全减去的背景的残余。同时，应用一个低频下限，以避免去趋势过程可能产生的伪峰。\n5. 将识别出的峰值按其幅度（突显度）排序，并如每个测试用例所指定，选择前 $K$ 个频率作为结果。然后将这些频率按升序排序并四舍五入到最接近的整数。\n\n这套完整的流程确保了从原始磁化数据中稳健且具有物理意义地提取 dHvA 频率。", "answer": "```python\nimport numpy as np\nfrom scipy.signal import find_peaks\n\ndef solve():\n    \"\"\"\n    Main function to run the dHvA analysis for all test cases.\n    \"\"\"\n\n    # Deterministic constants for pseudo-noise\n    tau1 = 1.3\n    tau2 = 0.7\n    eta1 = 0.02\n    eta2 = 0.015\n\n    # Test suite definition\n    test_cases = [\n        {\n            \"name\": \"A\", \"B_min\": 7.0, \"B_max\": 15.0, \"N\": 601, \"epsilon\": 0.02,\n            \"J\": 1, \"F\": [530.0], \"A\": [1.2], \"phi\": [0.3],\n            \"c0\": 0.5, \"c1\": 0.1, \"c2\": 0.0, \"K\": 1\n        },\n        {\n            \"name\": \"B\", \"B_min\": 8.0, \"B_max\": 20.0, \"N\": 801, \"epsilon\": 0.015,\n            \"J\": 2, \"F\": [380.0, 1050.0], \"A\": [1.0, 0.6], \"phi\": [-0.2, 1.0],\n            \"c0\": -0.3, \"c1\": 0.05, \"c2\": 0.002, \"K\": 2\n        },\n        {\n            \"name\": \"C\", \"B_min\": 14.0, \"B_max\": 16.0, \"N\": 401, \"epsilon\": 0.005,\n            \"J\": 1, \"F\": [800.0], \"A\": [1.0], \"phi\": [0.5],\n            \"c0\": 0.1, \"c1\": 0.02, \"c2\": -0.0005, \"K\": 1\n        },\n        {\n            \"name\": \"D\", \"B_min\": 5.0, \"B_max\": 10.0, \"N\": 501, \"epsilon\": 0.02,\n            \"J\": 1, \"F\": [600.0], \"A\": [0.6], \"phi\": [-1.0],\n            \"c0\": 1.0, \"c1\": 0.8, \"c2\": 0.0, \"K\": 1\n        },\n    ]\n\n    final_results = []\n\n    for case in test_cases:\n        N = case[\"N\"]\n        B_min, B_max = case[\"B_min\"], case[\"B_max\"]\n        epsilon = case[\"epsilon\"]\n        \n        # --- 1. Data Generation ---\n        i = np.arange(N)\n        B_raw = B_min + (B_max - B_min) / (N - 1) * i + epsilon * np.sin(2 * np.pi * i / (N - 1))\n        B = np.sort(B_raw)\n        \n        # Background\n        M = case[\"c0\"] + case[\"c1\"] * B + case[\"c2\"] * B**2\n        \n        # dHvA oscillations\n        dHvA_signal = np.zeros_like(B)\n        for j in range(case[\"J\"]):\n            F, A, phi = case[\"F\"][j], case[\"A\"][j], case[\"phi\"][j]\n            dHvA_signal += A * B**(-0.5) * np.sin(2 * np.pi * F / B + phi)\n        M += dHvA_signal\n        \n        # Pseudo-noise\n        noise = eta1 * np.sin(2 * np.pi * B / tau1) + eta2 * np.cos(2 * np.pi * B / tau2)\n        M += noise\n\n        # --- 2. Processing Pipeline ---\n        \n        # Construct inverse field grid and sort\n        x = 1.0 / B\n        # B is sorted ascending, so x is sorted descending. Reverse to sort ascending.\n        x_sorted = x[::-1]\n        M_sorted = M[::-1]\n\n        # Interpolate onto a uniform grid in x\n        x_min, x_max = x_sorted[0], x_sorted[-1]\n        N_grid = N\n        x_uniform = np.linspace(x_min, x_max, N_grid)\n        M_uniform = np.interp(x_uniform, x_sorted, M_sorted)\n        \n        # Detrend by subtracting a 2nd degree polynomial fit in x\n        poly_coeffs = np.polyfit(x_uniform, M_uniform, 2)\n        poly_fit = np.polyval(poly_coeffs, x_uniform)\n        M_detrended = M_uniform - poly_fit\n        \n        # Apply Hann window (apodization)\n        hann_window = np.hanning(N_grid)\n        M_windowed = M_detrended * hann_window\n        \n        # Compute FFT\n        delta_x = x_uniform[1] - x_uniform[0]\n        fft_freqs = np.fft.rfftfreq(N_grid, d=delta_x)\n        fft_magnitudes = np.abs(np.fft.rfft(M_windowed))\n\n        # --- 3. Peak Identification ---\n        \n        # Find peaks with sufficient prominence, ignoring low frequencies\n        # A low frequency floor is set to avoid spurious peaks from detrending artifacts.\n        min_freq_threshold = 50.0  # In Tesla\n        \n        # Prominence is set relative to the max signal amplitude for robustness\n        prominence = 0.1 * np.max(fft_magnitudes) \n        \n        peak_indices, properties = find_peaks(fft_magnitudes, prominence=prominence)\n        \n        # Filter peaks by frequency threshold\n        valid_peaks = []\n        for p_idx in peak_indices:\n            freq = fft_freqs[p_idx]\n            if freq >= min_freq_threshold:\n                valid_peaks.append({'freq': freq, 'mag': fft_magnitudes[p_idx]})\n        \n        # Sort peaks by magnitude in descending order\n        valid_peaks.sort(key=lambda p: p['mag'], reverse=True)\n        \n        # Select top K frequencies\n        K = case[\"K\"]\n        top_freqs = [p['freq'] for p in valid_peaks[:K]]\n        \n        # Sort frequencies in ascending order for consistent output\n        top_freqs.sort()\n        \n        # Round to the nearest integer\n        result_freqs = [int(round(f)) for f in top_freqs]\n        \n        final_results.append(result_freqs)\n    \n    # Format and print the final output\n    # Use replace to remove spaces from str(list) conversion\n    output_str = f\"[{','.join(map(str, final_results))}]\".replace(\" \", \"\")\n    print(output_str)\n\nsolve()\n```", "id": "2812572"}]}