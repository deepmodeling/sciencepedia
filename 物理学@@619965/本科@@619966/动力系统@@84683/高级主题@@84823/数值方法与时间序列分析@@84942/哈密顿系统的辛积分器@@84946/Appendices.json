{"hands_on_practices": [{"introduction": "学习辛积分器的第一步是理解它们的基本构造。本练习将指导您为非线性势能中的粒子运动推导最简单的辛积分器——辛欧拉法的具体更新规则。这个过程的核心在于将哈密顿量（Hamiltonian）分解为动能和势能两部分，并分别对其进行精确求解，以此构建出完整的数值格式。通过这个实践，您将掌握将辛积分的抽象概念转化为具体可执行算法的基础技能 [@problem_id:1713082]。", "problem": "一位计算物理课程的学生接到了一个任务，需要模拟一个粒子的一维运动。该粒子的动力学由一个形式为 $H(q,p) = T(p) + V(q)$ 的可分离哈密顿量控制，其中 $q$ 是位置，$p$ 是动量，$T(p)$ 是动能，$V(q)$ 是势能。\n\n为了进行此模拟，必须实现一个特定的一阶数值积分器，有时称为辛欧拉-B方法。该方法包含两个连续的步骤，将系统从时间 $t_n$ 的状态 $(q_n, p_n)$ 推进到时间 $t_{n+1} = t_n + \\Delta t$ 的新状态 $(q_{n+1}, p_{n+1})$，其中 $\\Delta t$ 是时间步长。步骤如下：\n\n1.  首先，将动量从其当前值 $p_n$ 更新到其新值 $p_{n+1}$。此更新使用一个显式欧拉步在时间间隔 $\\Delta t$ 上完成，驱动力来自于在初始位置 $q_n$ 处计算的势能 $V(q)$ 所导出的力。\n2.  其次，将位置从其当前值 $q_n$ 更新到其新值 $q_{n+1}$。此更新使用一个显式欧拉步在相同的时间间隔 $\\Delta t$ 上完成，速度由*新计算出*的动量 $p_{n+1}$ 决定。\n\n所考虑的具体系统是一个质量为 $m$ 的粒子在一维四次势阱中运动，其势能函数为 $V(q) = \\frac{1}{4} k q^4$，其中 $k$ 是一个正常数。相应的动能由 $T(p) = \\frac{p^2}{2m}$ 给出。\n\n你的任务是确定位置 $q_{n+1}$ 和动量 $p_{n+1}$ 的显式更新表达式。最终表达式必须仅用初始状态变量 $q_n$ 和 $p_n$、时间步长 $\\Delta t$ 以及物理参数 $m$ 和 $k$ 来表示。", "solution": "我们从可分离哈密顿量 $H(q,p)=T(p)+V(q)$ 开始，其运动方程由哈密顿方程给出：\n$$\n\\dot{q}=\\frac{\\partial H}{\\partial p}=\\frac{\\partial T}{\\partial p},\\qquad \\dot{p}=-\\frac{\\partial H}{\\partial q}=-\\frac{\\partial V}{\\partial q}.\n$$\n对于给定系统，$T(p)=\\frac{p^{2}}{2m}$ 且 $V(q)=\\frac{1}{4}k q^{4}$。因此，\n$$\n\\frac{\\partial T}{\\partial p}=\\frac{p}{m},\\qquad \\frac{\\partial V}{\\partial q}=k q^{3},\n$$\n所以运动方程为\n$$\n\\dot{q}=\\frac{p}{m},\\qquad \\dot{p}=-k q^{3}.\n$$\n\n辛欧拉-B方法（先踢后漂）通过两个步骤在时间步长 $\\Delta t$ 内将 $(q_{n},p_{n})$ 推进到 $(q_{n+1},p_{n+1})$：\n\n1) 动量更新（使用在 $q_{n}$ 处计算的力的显式欧拉法）：\n$$\np_{n+1}=p_{n}+\\Delta t\\,\\dot{p}\\big|_{q=q_{n}}=p_{n}-\\Delta t\\,k\\,q_{n}^{3}.\n$$\n\n2) 位置更新（使用在 $p_{n+1}$ 处计算的速度的显式欧拉法）：\n$$\nq_{n+1}=q_{n}+\\Delta t\\,\\dot{q}\\big|_{p=p_{n+1}}=q_{n}+\\Delta t\\,\\frac{p_{n+1}}{m}.\n$$\n\n将动量更新代入位置更新，得到一个仅用 $q_{n}$、$p_{n}$、$\\Delta t$、$m$ 和 $k$ 表示的表达式：\n$$\nq_{n+1}=q_{n}+\\frac{\\Delta t}{m}\\left(p_{n}-\\Delta t\\,k\\,q_{n}^{3}\\right)\n= q_{n}+\\frac{\\Delta t}{m}p_{n}-\\frac{k\\,(\\Delta t)^{2}}{m}q_{n}^{3}.\n$$\n\n因此，所需的显式更新为：\n$$\nq_{n+1}=q_{n}+\\frac{\\Delta t}{m}p_{n}-\\frac{k\\,(\\Delta t)^{2}}{m}q_{n}^{3},\\qquad\np_{n+1}=p_{n}-\\Delta t\\,k\\,q_{n}^{3}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix} q_{n}+\\frac{\\Delta t}{m}p_{n}-\\frac{k(\\Delta t)^{2}}{m}q_{n}^{3} & p_{n}-\\Delta t\\,k\\,q_{n}^{3} \\end{pmatrix}}$$", "id": "1713082"}, {"introduction": "构建出辛积分器后，下一个关键问题是：它究竟“特别”在哪里？本练习旨在通过一个可视化的计算实验，揭示辛积分器最核心的几何特性——相空间面积守恒。您将对比一个辛方法（辛欧拉法）和一个非辛方法（前向欧拉法）在模拟简谐振子时的表现。通过分析相空间中一个初始区域面积的演化，您将从几何和定量的角度深刻理解为何辛积分器在哈密顿系统的长期模拟中表现卓越 [@problem_id:2444632]。", "problem": "考虑一个二维谐振子，其哈密顿量为 $H(x,p)=\\dfrac{p^2}{2 m}+\\dfrac{1}{2} k x^2$，其中 $m=1$ 且 $k=\\omega^2$，$x$ 是位置坐标，$p$ 是共轭动量。哈密顿运动方程为 $\\dot{x}=p$ 和 $\\dot{p}=-\\omega^2 x$。定义两个时间步长为 $h$ 的离散时间单步映射如下：\n- 映射 $\\mathcal{F}$ (一个显式前向步)：$x_{n+1}=x_n+h\\,p_n$，$p_{n+1}=p_n-h\\,\\omega^2 x_n$。\n- 映射 $\\mathcal{S}$ (一个半隐式步)：$p_{n+1}=p_n-h\\,\\omega^2 x_n$，$x_{n+1}=x_n+h\\,p_{n+1}$。\n设 $\\mathcal{C}_0$ 为 $(x,p)$ 相平面中的一个封闭凸多边形，其 $M$ 个顶点 $\\{(x_j(0),p_j(0))\\}_{j=0}^{M-1}$ 按逆时针排序，由下式给出：\n$$\nx_j(0)=R\\cos\\theta_j,\\quad p_j(0)=R\\sin\\theta_j,\\quad \\theta_j=\\dfrac{2\\pi j}{M},\n$$\n对于 $j\\in\\{0,1,\\dots,M-1\\}$，所有角度均以弧度为单位。所有量均为无量纲量。\n\n对于给定的映射 $\\mathcal{M}\\in\\{\\mathcal{F},\\mathcal{S}\\}$ 和一个正整数 $N$，将 $\\mathcal{C}_N$ 定义为将映射 $\\mathcal{M}$ 连续 $N$ 步应用于 $\\mathcal{C}_0$ 的每个顶点而得到的多边形，并保持顶点顺序。定义多边形面积泛函\n$$\nA[\\mathcal{C}]=\\dfrac{1}{2}\\left|\\sum_{j=0}^{M-1}\\left(x_j\\,p_{j+1}-x_{j+1}\\,p_j\\right)\\right|,\n$$\n采用循环索引 $x_M\\equiv x_0$ 和 $p_M\\equiv p_0$。对于下方的每个测试用例，分别计算当 $\\mathcal{M}=\\mathcal{F}$ 和 $\\mathcal{M}=\\mathcal{S}$ 时的面积比 $A[\\mathcal{C}_N]/A[\\mathcal{C}_0]$。\n\n使用以下参数集 $(\\omega,h,N,M,R)$ 的测试套件：\n- 测试 1：$(\\omega,h,N,M,R)=\\left(1,\\,0.1,\\,100,\\,128,\\,1\\right)$。\n- 测试 2：$(\\omega,h,N,M,R)=\\left(1,\\,0.5,\\,20,\\,128,\\,1\\right)$。\n- 测试 3：$(\\omega,h,N,M,R)=\\left(2,\\,0.1,\\,100,\\,128,\\,1\\right)$。\n- 测试 4：$(\\omega,h,N,M,R)=\\left(1,\\,0.01,\\,1000,\\,128,\\,1\\right)$。\n\n你的程序必须对按所列顺序的每个测试，产生两个浮点数：首先是映射 $\\mathcal{F}$ 的面积比，然后是映射 $\\mathcal{S}$ 的面积比。将每个数字四舍五入到 6 位小数。最终输出必须是单行，包含一个用逗号分隔的列表，括在方括号中，并按顺序包含所有结果，即，\n$$\n\\left[\\rho^{(\\mathcal{F})}_1,\\rho^{(\\mathcal{S})}_1,\\rho^{(\\mathcal{F})}_2,\\rho^{(\\mathcal{S})}_2,\\rho^{(\\mathcal{F})}_3,\\rho^{(\\mathcal{S})}_3,\\rho^{(\\mathcal{F})}_4,\\rho^{(\\mathcal{S})}_4\\right],\n$$\n其中 $\\rho^{(\\mathcal{M})}_i=A[\\mathcal{C}_N]/A[\\mathcal{C}_0]$ 是第 i 个测试用例和映射 $\\mathcal{M}$ 的结果。本问题不涉及物理单位，且所有角度必须以弧度为单位。", "solution": "问题要求计算一个多边形在两种不同的谐振子数值积分方案下演化后，其相空间面积的比率。对 $M$ 个顶点中的每一个进行 $N$ 个时间步的直接模拟是一种有效但计算效率低下的方法。通过分析映射的代数性质，可以找到一个更具洞察力的解法。\n\n设相空间中系统的状态由向量 $z = (x, p)^T$ 表示。哈密顿运动方程为 $\\dot{x} = \\partial H / \\partial p = p/m$ 和 $\\dot{p} = -\\partial H / \\partial x = -kx$。当 $m=1$ 且 $k=\\omega^2$ 时，我们有 $\\dot{z} = A z$，其中 $A = \\begin{pmatrix} 0 & 1 \\\\ -\\omega^2 & 0 \\end{pmatrix}$。映射 $\\mathcal{F}$ 和 $\\mathcal{S}$ 是此线性系统流的离散近似。\n\n映射 $\\mathcal{F}$ 和 $\\mathcal{S}$ 都是从时间步 $n$ 的状态 $(x_n, p_n)$ 到时间步 $n+1$ 的状态 $(x_{n+1}, p_{n+1})$ 的线性变换。我们可以将它们表示为矩阵形式 $z_{n+1} = M z_n$。\n\n对于映射 $\\mathcal{F}$ (显式前向欧拉法)：\n$$\n\\begin{cases}\nx_{n+1} = x_n + h\\,p_n \\\\\np_{n+1} = p_n - h\\,\\omega^2 x_n\n\\end{cases}\n\\implies\n\\begin{pmatrix} x_{n+1} \\\\ p_{n+1} \\end{pmatrix} =\n\\begin{pmatrix} 1 & h \\\\ -h\\omega^2 & 1 \\end{pmatrix}\n\\begin{pmatrix} x_n \\\\ p_n \\end{pmatrix}\n$$\n因此，单步演化矩阵为 $M_{\\mathcal{F}} = \\begin{pmatrix} 1 & h \\\\ -h\\omega^2 & 1 \\end{pmatrix}$。\n\n对于映射 $\\mathcal{S}$ (半隐式欧拉法)：\n$$\n\\begin{cases}\np_{n+1} = p_n - h\\,\\omega^2 x_n \\\\\nx_{n+1} = x_n + h\\,p_{n+1} = x_n + h(p_n - h\\omega^2 x_n) = (1-h^2\\omega^2)x_n + h p_n\n\\end{cases}\n$$\n$$\n\\implies\n\\begin{pmatrix} x_{n+1} \\\\ p_{n+1} \\end{pmatrix} =\n\\begin{pmatrix} 1-h^2\\omega^2 & h \\\\ -h\\omega^2 & 1 \\end{pmatrix}\n\\begin{pmatrix} x_n \\\\ p_n \\end{pmatrix}\n$$\n单步演化矩阵为 $M_{\\mathcal{S}} = \\begin{pmatrix} 1-h^2\\omega^2 & h \\\\ -h\\omega^2 & 1 \\end{pmatrix}$。\n\n经过 $N$ 步后，从初始状态 $z_0$ 到最终状态 $z_N$ 的变换由 $z_N = (M_{\\mathcal{M}})^N z_0$ 给出，其中 $\\mathcal{M} \\in \\{\\mathcal{F}, \\mathcal{S}\\}$。这是一个线性变换，我们称其矩阵为 $T = (M_{\\mathcal{M}})^N$。\n\n一个顶点为 $\\{(x_j, p_j)\\}_{j=0}^{M-1}$ 的多边形 $\\mathcal{C}$ 的面积由鞋带公式给出：\n$$\nA[\\mathcal{C}]=\\dfrac{1}{2}\\left|\\sum_{j=0}^{M-1}\\left(x_j\\,p_{j+1}-x_{j+1}\\,p_j\\right)\\right|\n$$\n当一个多边形经过一个矩阵为 $T$ 的线性变换时，其面积 $A$ 变换为 $A' = |\\det(T)| A$。\n在我们的例子中，初始多边形 $\\mathcal{C}_0$ 的顶点 $\\{z_j(0)\\}$ 被变换为最终多边形 $\\mathcal{C}_N$ 的顶点 $\\{z_j(N) = T z_j(0)\\}$。因此，最终多边形的面积为 $A[\\mathcal{C}_N] = |\\det(T)| A[\\mathcal{C}_0]$。\n\n所求的面积比为：\n$$\n\\dfrac{A[\\mathcal{C}_N]}{A[\\mathcal{C}_0]} = |\\det(T)| = |\\det((M_{\\mathcal{M}})^N)| = |\\det(M_{\\mathcal{M}})|^N\n$$\n这个结果与初始多边形的具体几何形状无关，即参数 $M$ 和 $R$ 与最终的比率无关。我们只需要计算单步矩阵的行列式。\n\n对于映射 $\\mathcal{F}$：\n$$\n\\det(M_{\\mathcal{F}}) = (1)(1) - (h)(-h\\omega^2) = 1 + h^2\\omega^2\n$$\n面积比为 $\\rho^{(\\mathcal{F})} = (1 + h^2\\omega^2)^N$。由于 $h > 0$ 且 $\\omega > 0$，该值恒大于 1，表明面积呈指数增长。该映射不是辛映射。\n\n对于映射 $\\mathcal{S}$：\n$$\n\\det(M_{\\mathcal{S}}) = (1-h^2\\omega^2)(1) - (h)(-h\\omega^2) = 1 - h^2\\omega^2 + h^2\\omega^2 = 1\n$$\n面积比为 $\\rho^{(\\mathcal{S})} = (1)^N = 1$。对于任意参数选择，该映射都能精确地保持相空间面积，因此是一个辛映射。\n\n我们现在将这些公式应用于给定的测试用例。\n\n测试 1：$(\\omega,h,N,M,R)=\\left(1,\\,0.1,\\,100,\\,128,\\,1\\right)$\n$\\rho^{(\\mathcal{F})} = (1 + (0.1)^2(1)^2)^{100} = (1.01)^{100} \\approx 2.704814$\n$\\rho^{(\\mathcal{S})} = 1.0$\n\n测试 2：$(\\omega,h,N,M,R)=\\left(1,\\,0.5,\\,20,\\,128,\\,1\\right)$\n$\\rho^{(\\mathcal{F})} = (1 + (0.5)^2(1)^2)^{20} = (1.25)^{20} \\approx 86.736174$\n$\\rho^{(\\mathcal{S})} = 1.0$\n\n测试 3：$(\\omega,h,N,M,R)=\\left(2,\\,0.1,\\,100,\\,128,\\,1\\right)$\n$\\rho^{(\\mathcal{F})} = (1 + (0.1)^2(2)^2)^{100} = (1.04)^{100} \\approx 50.504948$\n$\\rho^{(\\mathcal{S})} = 1.0$\n\n测试 4：$(\\omega,h,N,M,R)=\\left(1,\\,0.01,\\,1000,\\,128,\\,1\\right)$\n$\\rho^{(\\mathcal{F})} = (1 + (0.01)^2(1)^2)^{1000} = (1.0001)^{1000} \\approx 1.105116$\n$\\rho^{(\\mathcal{S})} = 1.0$\n\n这些计算将在提供的程序结构中实现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by analytically calculating the area ratios for the two maps.\n    The area ratio for a polygon under a linear map T is given by |det(T)|.\n    For N steps, the transformation is T = M^N, where M is the one-step matrix.\n    The area ratio is |det(M^N)| = |det(M)|^N.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each test case is a tuple: (omega, h, N, M, R)\n    test_cases = [\n        (1.0, 0.1, 100, 128, 1.0),\n        (1.0, 0.5, 20, 128, 1.0),\n        (2.0, 0.1, 100, 128, 1.0),\n        (1.0, 0.01, 1000, 128, 1.0),\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        omega, h, N, M, R = case\n\n        # --- Map F (Explicit Euler) ---\n        # The one-step matrix M_F has determinant det(M_F) = 1 + h^2 * omega^2.\n        # The area ratio after N steps is (det(M_F))^N.\n        det_M_F = 1.0 + h**2 * omega**2\n        rho_F = np.power(det_M_F, N)\n\n        # --- Map S (Symplectic Euler) ---\n        # The one-step matrix M_S has determinant det(M_S) = 1.\n        # The area ratio after N steps is (det(M_S))^N = 1^N = 1.\n        rho_S = 1.0\n\n        # Append the rounded results for the current test case.\n        results.append(round(rho_F, 6))\n        results.append(round(rho_S, 6))\n\n    # Final print statement in the exact required format.\n    # The output is a single line, comma-separated list of numbers in brackets.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2444632"}, {"introduction": "辛积分器因其出色的长期能量稳定性而备受推崇，但这往往会导向一个微妙的误解。这个思想实验旨在挑战您区分“精确守恒原始哈密顿量”与“守恒一个修正的‘影子哈密顿量’”二者之间的区别。标准的显式辛积分器实际上实现了后者，这导致其数值能量在一个真实值附近作有界振荡，而非保持绝对不变。通过这个练习，您将厘清这一关键的理论细节，并理解为什么像 Verlet 这样的辛方法产生的数值轨迹并不会完美地停留在原始系统的等能面上 [@problem_id:1713086]。", "problem": "考虑一个一维简谐振子，其质量$m=1$，角频率$\\omega=1$。该系统的状态由其位置$q$和动量$p$描述。代表系统总能量的哈密顿量由$H(q, p) = \\frac{1}{2}(p^2 + q^2)$给出。对于任何给定的初始状态，其在相空间（$q$-$p$平面）中的精确轨迹是一个完美的圆形，这对应于能量守恒。\n\n一名学生正在测试一种新的数值积分算法。他们将该算法应用于这个谐振子系统，使用一个固定的、非零的时间步长$\\Delta t$。他们观察到，对于任何初始条件$(q_0, p_0)$，该积分器对$n=1, 2, 3, \\dots$生成的点序列$(q_n, p_n)$都精确地位于由$q^2 + p^2 = q_0^2 + p_0^2$定义的初始圆周上。\n\n以下哪个陈述为这一新算法不可能是标准的显式辛积分器（如Störmer-Verlet方法或辛欧拉方法）提供了最准确的物理原因？\n\nA. 标准的显式辛积分器并不精确守恒原始哈密顿量；它们守恒的是一个修正的“影子”哈密顿量，这导致数值能量在真实值附近振荡，而不是保持完全恒定。\n\nB. 辛积分器必须是时间可逆的，但一个精确沿圆形路径运动的方法必须是耗散的，以修正数值误差并防止偏离圆周。\n\nC. 任何标准辛积分器的局部截断误差都不可避免地导致数值轨迹向外螺旋，随时间推移能量增加，这与保持在固定圆周上相矛盾。\n\nD. 完美的圆形轨迹意味着该积分器对于任何时间步长$\\Delta t$都是无条件稳定的，而用于谐振子的标准辛方法已知仅是条件稳定的。\n\nE. 任何能产生完美圆形轨迹的积分器都必须是隐式方法，而像Verlet这样著名的辛方法是纯粹显式的。", "solution": "我们考虑哈密顿量为$H(q,p)=\\frac{1}{2}(p^{2}+q^{2})$的谐振子，这产生如下线性系统\n$$\n\\begin{pmatrix} q \\\\ p \\end{pmatrix}' \\;=\\; A \\begin{pmatrix} q \\\\ p \\end{pmatrix}, \n\\quad A=\\begin{pmatrix} 0 & 1 \\\\ -1 & 0 \\end{pmatrix}, \n$$\n因此，精确流是旋转$y(t)=\\exp(tA)y(0)$，它保持$y^{T}y=q^{2}+p^{2}=2H$守恒。对于任何固定步长为$h$的单步法，其离散演化为$y_{n+1}=S(h)\\,y_{n}$，其中$S(h)$是某个矩阵。所观察到的性质“对所有$n$，$q_{n}^{2}+p_{n}^{2}$都精确地是一个常数”等价于\n$$\ny_{n}^{T}y_{n}=y_{0}^{T}y_{0}\\quad\\text{for all }n,\n$$\n此式成立当且仅当$S(h)$是正交矩阵，即\n$$\nS(h)^{T}S(h)=I.\n$$\n\n我们现在检验标准的显式辛积分器在这个系统上的表现。\n\n1) 辛欧拉方法（显式变体）：\n$$\nq_{n+1}=q_{n}+h\\,p_{n},\\qquad p_{n+1}=p_{n}-h\\,q_{n+1}.\n$$\n这给出了更新矩阵\n$$\nS_{\\text{SE}}(h)=\\begin{pmatrix} 1 & h \\\\ -h & 1-h^{2} \\end{pmatrix}.\n$$\n计算$S_{\\text{SE}}(h)^{T}S_{\\text{SE}}(h)$。其非对角线元素等于\n$$\n(1)(-h)+h(1-h^{2})=-h+h-h^{3}=-h^{3}\\neq 0\\quad\\text{for }h\\neq 0,\n$$\n因此$S_{\\text{SE}}(h)^{T}S_{\\text{SE}}(h)\\neq I$。所以$q^{2}+p^{2}$并不精确守恒；相反，存在一个修正的二次不变量$y^{T}M(h)y$被守恒，其中$M(h)\\neq I$。\n\n2) Störmer-Verlet方法（速度-Verlet形式）：\n$$\np_{n+\\frac{1}{2}}=p_{n}-\\frac{h}{2}q_{n},\\quad q_{n+1}=q_{n}+h\\,p_{n+\\frac{1}{2}},\\quad p_{n+1}=p_{n+\\frac{1}{2}}-\\frac{h}{2}q_{n+1}.\n$$\n消去半步得到\n$$\nq_{n+1}=\\Bigl(1-\\frac{h^{2}}{2}\\Bigr)q_{n}+h\\,p_{n},\\qquad\np_{n+1}=\\Bigl(1-\\frac{h^{2}}{2}\\Bigr)p_{n}-h\\Bigl(1-\\frac{h^{2}}{4}\\Bigr)q_{n}.\n$$\n所以\n$$\nS_{\\text{SV}}(h)=\n\\begin{pmatrix}\n1-\\frac{h^{2}}{2} & h \\\\\n-h\\Bigl(1-\\frac{h^{2}}{4}\\Bigr) & 1-\\frac{h^{2}}{2}\n\\end{pmatrix}.\n$$\n在$S_{\\text{SV}}(h)^{T}S_{\\text{SV}}(h)$中的非对角线元素是\n$$\n\\Bigl(1-\\frac{h^{2}}{2}\\Bigr)\\bigl(h-h(1-\\tfrac{h^{2}}{4})\\bigr)\n=\\Bigl(1-\\frac{h^{2}}{2}\\Bigr)\\frac{h^{3}}{4}\\neq 0\\quad\\text{for }h\\neq 0,\n$$\n所以同样有$S_{\\text{SV}}(h)^{T}S_{\\text{SV}}(h)\\neq I$。因此$q^{2}+p^{2}$不是精确守恒的；相反，一个依赖于$h$的二次不变量（一个“影子能量”）是守恒的，这对应于$(q,p)$-平面上的一个椭圆。\n\n这些计算表明，标准的显式辛方法并不精确守恒原始哈密顿量$H=\\frac{1}{2}(p^{2}+q^{2})$；它们守恒的是一个修正的或影子的哈密顿量$H_{h}=H+\\mathcal{O}(h^{2})$，因此数值能量会在真实值附近振荡，但不是完全恒定的。因此，一个对于固定的非零$h$能产生精确位于初始圆周$q^{2}+p^{2}=\\text{const}$上的点的算法，不可能是像辛欧拉方法或Störmer-Verlet方法这样的标准显式辛积分器。\n\n简要讨论其他选项：\n- B是错误的：精确的圆周运动是非耗散的；辛方法是保体积的，不需要引入耗散。\n- C是错误的：辛积分器不一定会向外螺旋；它们通常产生由影子哈密顿量控制的有界的、振荡的能量误差。\n- D不是根本原因：虽然Verlet方法对谐振子有稳定性限制，但在某个固定的$h$下的精确圆形轨迹并不意味着无条件稳定性是这里的决定性问题。\n- E的说法太绝对了：精确的圆形更新可以通过隐式中点法（该方法对于二次哈密顿量是辛的且能量守恒的）实现，但“必须是隐式的”这一论断通常是错误的，因为人们可以利用三角函数构造出针对特定问题的显式精确映射；相对于标准的显式辛格式，决定性的点在于它们不精确守恒原始哈密顿量。\n\n因此，最准确的物理原因是，标准的显式辛积分器守恒的是一个修正的哈密顿量，而不是原始能量，这与选项A相符。", "answer": "$$\\boxed{A}$$", "id": "1713086"}]}