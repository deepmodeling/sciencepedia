{"hands_on_practices": [{"introduction": "分析任何掺杂半导体的第一步是确定其平衡载流子浓度。这个问题处理的是一种常见情况，即同时包含施主和受主杂质的“补偿”半导体。为了求出电子浓度，你需要同时运用半导体物理学中两个最基本的原理：质量作用定律和电中性条件。掌握这项计算 [@problem_id:1787500] 至关重要，因为它构成了理解几乎所有半导体器件电子特性的基础。", "problem": "一位材料科学家正在开发一种名为“Cryptonium”的新型半导体材料，旨在用于高频电子设备。在 300 K 的工作温度下，纯 Cryptonium 的本征载流子浓度为 $n_i = 1.5 \\times 10^{13} \\text{ cm}^{-3}$。为精确控制其电学特性，该材料同时掺杂了施主和受主杂质，这一过程称为补偿。施主原子的浓度为 $N_d = 4.0 \\times 10^{13} \\text{ cm}^{-3}$，受主原子的浓度为 $N_a = 1.0 \\times 10^{13} \\text{ cm}^{-3}$。对于该材料，在给定温度下，可以极好地近似假设所有掺杂原子都已完全电离。该材料中载流子的行为受质量作用定律和电中性原理的支配。\n\n计算该掺杂 Cryptonium 样品中的平衡电子浓度 $n$。答案以 cm⁻³ 为单位，并四舍五入至三位有效数字。", "solution": "给定本征载流子浓度 $n_{i}$ 和掺杂物的完全电离，其支配关系为：\n- 质量作用定律：$n p = n_{i}^{2}$。\n- 电中性原理：$n + N_{a} = p + N_{d}$。\n\n根据电中性原理，重新整理可得：\n$$n - p = N_{d} - N_{a} \\equiv \\Delta N.$$\n使用此关系将 $p$ 表示为 $n$ 的函数：\n$$p = n - \\Delta N.$$\n代入质量作用定律：\n$$n(n - \\Delta N) = n_{i}^{2},$$\n得到关于 $n$ 的二次方程：\n$$n^{2} - \\Delta N\\, n - n_{i}^{2} = 0.$$\n使用二次公式求解，并选择具有物理意义的正根：\n$$n = \\frac{\\Delta N + \\sqrt{\\Delta N^{2} + 4 n_{i}^{2}}}{2}.$$\n\n现在代入给定值 $N_{d} = 4.0 \\times 10^{13} \\text{ cm}^{-3}$，$N_{a} = 1.0 \\times 10^{13} \\text{ cm}^{-3}$ 和 $n_{i} = 1.5 \\times 10^{13} \\text{ cm}^{-3}$：\n$$\\Delta N = N_{d} - N_{a} = 3.0 \\times 10^{13} \\text{ cm}^{-3},$$\n$$\\Delta N^{2} = 9.0 \\times 10^{26}, \\quad 4 n_{i}^{2} = 4 \\times (1.5 \\times 10^{13})^{2} = 9.0 \\times 10^{26},$$\n$$\\Delta N^{2} + 4 n_{i}^{2} = 1.8 \\times 10^{27}, \\quad \\sqrt{\\Delta N^{2} + 4 n_{i}^{2}} \\approx 4.242640687 \\times 10^{13}.$$\n因此，\n$$n = \\frac{3.0 \\times 10^{13} + 4.242640687 \\times 10^{13}}{2} \\approx 3.621320343 \\times 10^{13}.$$\n四舍五入至三位有效数字，得到 $n \\approx 3.62 \\times 10^{13}$，单位为 $\\text{cm}^{-3}$。", "answer": "$$\\boxed{3.62 \\times 10^{13}}$$", "id": "1787500"}, {"introduction": "在物理学和工程学中，知道何时可以进行简化近似，与知道如何求解完整的复杂方程同等重要。本练习探讨了在外掺杂半导体中最常用的一个近似：多数载流子浓度约等于净掺杂浓度。你将通过计算精确的载流子浓度并进行比较，来研究在 n 型半导体中 $n \\approx N_D$ 这个近似的有效性。通过对宽带隙材料进行这个计算 [@problem_id:1764213]，你将对为何该近似在许多实际情况中如此可靠有一个深刻的、定量的理解，并培养出审视物理模型背后假设的批判性思维。", "problem": "在掺杂半导体的分析中，通常会进行近似来简化电中性方程。本题探讨了这种近似对于宽禁带材料的有效性。\n\n考虑一个假设的宽禁带半导体，在温度 $T = 300 \\text{ K}$ 时处于热平衡状态。其材料属性如下：\n- 带隙能量: $E_g = 3.20 \\text{ eV}$\n- 导带有效状态密度: $N_C = 1.0 \\times 10^{19} \\text{ cm}^{-3}$\n- 价带有效状态密度: $N_V = 5.0 \\times 10^{19} \\text{ cm}^{-3}$\n\n该半导体掺杂了浓度为 $N_D = 2.0 \\times 10^{16} \\text{ cm}^{-3}$ 的浅施主，并假设所有施主原子都已电离。没有受主杂质。\n\n平衡电子浓度 $n_{exact}$ 是电中性方程的精确解。对于这种n型半导体，一个常见的简化是使用近似 $n_{approx} = N_D$。\n\n请计算该近似引入的相对误差，其定义为 $\\frac{|n_{approx} - n_{exact}|}{n_{exact}}$。最终答案以小数形式表示，并四舍五入到两位有效数字。\n\n在计算中，请使用玻尔兹曼常数 $k_B = 8.617 \\times 10^{-5} \\text{ eV/K}$。", "solution": "在热平衡状态下，对于一个施主完全电离且没有受主的n型半导体，其电中性条件由 $N_{D}^{+} + p = n + N_{A}^{-}$ 给出。当 $N_{A}^{-} = 0$ 且 $N_{D}^{+} = N_{D}$ 时，该方程简化为\n$$\nn = N_{D} + p.\n$$\n在非简并（麦克斯韦-玻尔兹曼）统计下，质量作用定律成立：\n$$\nn p = n_{i}^{2},\n$$\n其中本征载流子浓度为\n$$\nn_{i} = \\sqrt{N_{C} N_{V}} \\exp\\!\\left(-\\frac{E_{g}}{2 k_{B} T}\\right).\n$$\n将 $n = N_{D} + p$ 与 $p = \\frac{n_{i}^{2}}{n}$ 结合，得到一个关于 $n$ 的二次方程：\n$$\nn^{2} - N_{D} n - n_{i}^{2} = 0,\n$$\n其正解为\n$$\nn_{\\text{exact}} = \\frac{N_{D} + \\sqrt{N_{D}^{2} + 4 n_{i}^{2}}}{2}.\n$$\n近似值为 $n_{\\text{approx}} = N_{D}$。相对误差为\n$$\n\\frac{|n_{\\text{approx}} - n_{\\text{exact}}|}{n_{\\text{exact}}} = \\frac{n_{\\text{exact}} - N_{D}}{n_{\\text{exact}}} = \\frac{p}{n_{\\text{exact}}} = \\frac{n_{i}^{2}}{n_{\\text{exact}}^{2}}.\n$$\n在 $T = 300\\,\\text{K}$ 时进行数值计算，参数为 $k_{B} = 8.617 \\times 10^{-5}\\,\\text{eV/K}$，$E_{g} = 3.20\\,\\text{eV}$，$N_{C} = 1.0 \\times 10^{19}\\,\\text{cm}^{-3}$，$N_{V} = 5.0 \\times 10^{19}\\,\\text{cm}^{-3}$。首先计算\n$$\nk_{B} T = 8.617 \\times 10^{-5} \\times 300 \\,\\text{eV} = 0.025851\\,\\text{eV},\n$$\n$$\n\\frac{E_{g}}{k_{B} T} = \\frac{3.20}{0.025851} \\approx 123.786,\n$$\n因此\n$$\nn_{i}^{2} = N_{C} N_{V} \\exp\\!\\left(-\\frac{E_{g}}{k_{B} T}\\right) \\approx \\left(5.0 \\times 10^{38}\\right) \\times \\exp(-123.786) \\approx 8.7 \\times 10^{-16}\\,\\text{cm}^{-6}.\n$$\n给定 $N_{D} = 2.0 \\times 10^{16}\\,\\text{cm}^{-3}$，则 $N_{D}^{2} = 4.0 \\times 10^{32}\\,\\text{cm}^{-6}$。由于 $n_{i}^{2} \\ll N_{D}^{2}$，所以 $n_{\\text{exact}} \\approx N_{D}$ 并且\n$$\n\\frac{|n_{\\text{approx}} - n_{\\text{exact}}|}{n_{\\text{exact}}} = \\frac{n_{i}^{2}}{n_{\\text{exact}}^{2}} \\approx \\frac{n_{i}^{2}}{N_{D}^{2}} \\approx \\frac{8.7 \\times 10^{-16}}{4.0 \\times 10^{32}} = 2.175 \\times 10^{-48}.\n$$\n四舍五入到两位有效数字，相对误差为 $2.2 \\times 10^{-48}$。", "answer": "$$\\boxed{2.2 \\times 10^{-48}}$$", "id": "1764213"}, {"introduction": "尽管代数解对于建立物理直觉非常有价值，但许多现实世界中的半导体问题需要借助计算方法来解决。这个高级实践将挑战你通过数值求解电中性方程来确定费米能级 ($E_F$)，这个关键参数主导着载流子的统计分布。你将实现一个求根算法来求解超越方程 $n(E_F, T) = p(E_F, T)$，其中包含了态密度的完整温度依赖性。这个练习 [@problem_id:2377959] 填补了教科书理论与计算物理之间的鸿沟，为你提供了一套实用的工具集，以模拟更复杂、更真实的半导体系统。", "problem": "您的任务是实现一种区间法，通过求解电中性方程 $n(E_F, T) - p(E_F, T) = 0$ 来数值确定本征半导体在温度 $T$ 下的费米能级 $E_F$。您的方法必须从非简并半导体的已确立表达式出发，并使用一种区间求根方法来定位带隙内的唯一解。所有能量必须以电子伏特（eV）为单位表示。您的程序必须产生单行输出，其中包含一个由方括号括起来的、以逗号分隔的结果列表。\n\n需使用的基本原理和定义：\n- 在非简并极限和有效质量近似下，电子浓度和空穴浓度由下式给出\n$$ n(E_F, T) = N_c(T)\\,\\exp\\!\\left(-\\frac{E_c - E_F}{k_B T}\\right), \\quad p(E_F, T) = N_v(T)\\,\\exp\\!\\left(-\\frac{E_F - E_v}{k_B T}\\right), $$\n其中 $E_c$ 是导带底，$E_v$ 是价带顶，$k_B$ 是玻尔兹曼常数，$N_c(T)$ 和 $N_v(T)$ 分别是导带和价带中的有效态密度。\n- 对于三维抛物线形能带，有效态密度为\n$$ N_c(T) = 2 \\left( \\frac{2\\pi m_n^\\ast k_B T}{h^2} \\right)^{3/2}, \\quad N_v(T) = 2 \\left( \\frac{2\\pi m_p^\\ast k_B T}{h^2} \\right)^{3/2}, $$\n其中 $m_n^\\ast$ 和 $m_p^\\ast$ 分别是电子和空穴的有效质量，$h$ 是普朗克常数，因子 $2$ 考虑了自旋简并。当 $m_n^\\ast$、$m_p^\\ast$、$k_B$ 和 $h$ 采用国际单位制（SI）单位时，这些表达式将得出单位为 $\\mathrm{m}^{-3}$ 的 $N_c(T)$ 和 $N_v(T)$。\n- 假设一个本征半导体，其 $E_v = 0\\,\\text{eV}$ 且 $E_c = E_g$，其中 $E_g$ 是以电子伏特为单位的带隙。您必须求解方程\n$$ f(E_F) \\equiv n(E_F, T) - p(E_F, T) = 0 $$\n以求得 $E_F$。\n\n算法要求：\n- 从基本原理出发，实现一种区间求根方法（如二分法）来求解 $E_F$。\n- 使用一个保守的能量区间\n$$ [\\,E_v - 0.5\\,\\text{eV}, \\; E_c + 0.5\\,\\text{eV}\\,] $$\n以确保 $f(E_F)$ 在该区间内有符号变化。\n- 在指数项中使用以电子伏特每开尔文为单位的玻尔兹曼常数 $k_B = 8.617333262145\\times 10^{-5}\\,\\text{eV/K}$，以便指数中的能量单位统一为电子伏特。在计算 $N_c(T)$ 和 $N_v(T)$ 时，使用 $k_B = 1.380649\\times 10^{-23}\\,\\text{J/K}$，$h = 6.62607015\\times 10^{-34}\\,\\text{J}\\cdot\\text{s}$ 以及电子静止质量 $m_e = 9.1093837015\\times 10^{-31}\\,\\text{kg}$。将 $m_n^\\ast$ 和 $m_p^\\ast$ 视为 $m_e$ 的倍数，即在 $N_c(T)$ 和 $N_v(T)$ 的公式中使用 $m_n^\\ast m_e$ 和 $m_p^\\ast m_e$。\n- 使用基于能量区间宽度的停止准则：当区间宽度小于 $10^{-12}\\,\\text{eV}$ 或达到最大 200 次迭代时停止，以先满足者为准。\n- 将您最终的 $E_F$ 答案以电子伏特表示，并四舍五入到六位小数。\n\n测试套件：\n使用以下四个独立的测试用例。在每个用例中，设置 $E_v = 0\\,\\text{eV}$ 和 $E_c = E_g$。\n1. A情形（类硅不对称性）：$T = 300\\,\\text{K}$，$E_g = 1.12\\,\\text{eV}$，$m_n^\\ast = 1.08$，$m_p^\\ast = 0.60$。\n2. B情形（对称能带）：$T = 450\\,\\text{K}$，$E_g = 1.42\\,\\text{eV}$，$m_n^\\ast = 0.50$，$m_p^\\ast = 0.50$。\n3. C情形（价带态密度主导）：$T = 300\\,\\text{K}$，$E_g = 0.66\\,\\text{eV}$，$m_n^\\ast = 0.20$，$m_p^\\ast = 1.50$。\n4. D情形（小带隙，低温）：$T = 100\\,\\text{K}$，$E_g = 0.05\\,\\text{eV}$，$m_n^\\ast = 0.30$，$m_p^\\ast = 0.30$。\n\n要求的最终输出格式：\n- 您的程序应生成单行输出，其中包含四个测试用例的 $E_F$ 结果，按上述顺序列出，作为一个由方括号括起来的、以逗号分隔的列表，例如 $[x_1,x_2,x_3,x_4]$，其中每个 $x_i$ 都四舍五入到六位小数并以 $\\text{eV}$ 为单位表示。", "solution": "该问题陈述已经过严格验证，被认为是科学上合理、提法明确且完整的。它提出了一个计算凝聚态物理学中的标准问题，可以使用指定的方法和数据来解决。因此，我们可以继续推导解决方案。\n\n基本任务是求解本征半导体的电中性方程，该方程规定电子浓度 $n$ 必须等于空穴浓度 $p$。因此，待求解的方程为 $f(E_F) = n(E_F, T) - p(E_F, T) = 0$，其中 $E_F$ 是费米能级，$T$ 是温度。\n\n浓度由非简并半导体的 Maxwell-Boltzmann 近似给出：\n$$ n(E_F, T) = N_c(T)\\,\\exp\\!\\left(-\\frac{E_c - E_F}{k_B T}\\right) $$\n$$ p(E_F, T) = N_v(T)\\,\\exp\\!\\left(-\\frac{E_F - E_v}{k_B T}\\right) $$\n在这里，$E_c$ 和 $E_v$ 分别是导带底和价带顶，$k_B$ 是玻尔兹曼常数。$N_c(T)$ 和 $N_v(T)$ 是有效态密度，定义为：\n$$ N_c(T) = 2 \\left( \\frac{2\\pi m_n^\\ast m_e k_B T}{h^2} \\right)^{3/2} $$\n$$ N_v(T) = 2 \\left( \\frac{2\\pi m_p^\\ast m_e k_B T}{h^2} \\right)^{3/2} $$\n其中 $m_n^\\ast m_e$ 和 $m_p^\\ast m_e$ 是电子和空穴的有效质量，$h$ 是普朗克常数。对于这些表达式，所有物理常数（$k_B, h, m_e$）必须使用国际单位制（SI）单位，以得到单位为 $\\mathrm{m}^{-3}$ 的密度。在浓度的指数项中，能量以电子伏特（eV）给出，因此乘积 $k_B T$ 也必须以 eV 为单位。这要求使用单位为 eV/K 的 $k_B$。问题陈述提供了这两个值，这是正确且为保证一致性所必需的。\n\n为求根 $E_F$ 所解的函数是：\n$$ f(E_F) = N_c(T)\\,\\exp\\!\\left(\\frac{E_F - E_c}{k_B T}\\right) - N_v(T)\\,\\exp\\!\\left(\\frac{E_v - E_F}{k_B T}\\right) = 0 $$\n$f(E_F)$ 关于 $E_F$ 的导数是：\n$$ \\frac{df}{dE_F} = \\frac{1}{k_B T} \\left[ N_c(T)\\,\\exp\\!\\left(\\frac{E_F - E_c}{k_B T}\\right) + N_v(T)\\,\\exp\\!\\left(\\frac{E_v - E_F}{k_B T}\\right) \\right] = \\frac{n+p}{k_B T} $$\n由于 $n, p, k_B, T$ 均为正量，因此对于所有 $E_F$，都有 $\\frac{df}{dE_F} > 0$。这证明了 $f(E_F)$ 是一个严格单调函数，从而保证如果存在根，则该根是唯一的。问题指定了区间 $[E_v - 0.5\\,\\text{eV}, E_c + 0.5\\,\\text{eV}]$。在下界， $E_F$ 远低于 $E_v$，使得 $p \\gg n$ 从而 $f(E_F) < 0$。在上界， $E_F$ 远高于 $E_c$，使得 $n \\gg p$ 从而 $f(E_F) > 0$。根据介值定理，此区间内必定存在一个根。\n\n直接对 $f(E_F)$ 进行数值计算可能会因指数函数有大的正或负自变量而导致浮点上溢或下溢，特别是在低温或宽带隙情况下。需要一个在数值上更稳定的表达式。让我们定义本征能级 $E_i = (E_c + E_v)/2$，并将费米能级表示为与该能级的偏差 $\\delta_E$：$E_F = E_i + \\delta_E$。在给定条件 $E_v=0$ 和 $E_c=E_g$ 下，我们有 $E_i = E_g/2$。\n将 $E_F = E_g/2 + \\delta_E$ 代入电中性方程 $n=p$ 中：\n$$ N_c(T)\\,\\exp\\!\\left(-\\frac{E_g - (E_g/2 + \\delta_E)}{k_B T}\\right) = N_v(T)\\,\\exp\\!\\left(-\\frac{(E_g/2 + \\delta_E) - 0}{k_B T}\\right) $$\n$$ N_c(T)\\,\\exp\\!\\left(-\\frac{E_g/2 - \\delta_E}{k_B T}\\right) = N_v(T)\\,\\exp\\!\\left(-\\frac{E_g/2 + \\delta_E}{k_B T}\\right) $$\n两边同除以 $\\exp(-E_g/(2k_B T))$ 可得：\n$$ N_c(T)\\,\\exp\\!\\left(\\frac{\\delta_E}{k_B T}\\right) = N_v(T)\\,\\exp\\!\\left(-\\frac{\\delta_E}{k_B T}\\right) $$\n我们定义一个新函数 $g(\\delta_E)$，并寻求其根：\n$$ g(\\delta_E) = N_c(T)\\,\\exp\\!\\left(\\frac{\\delta_E}{k_B T}\\right) - N_v(T)\\,\\exp\\!\\left(-\\frac{\\delta_E}{k_B T}\\right) = 0 $$\n这种形式在数值上是稳健的，因为它避免了大的、共有的项 $\\exp(-E_g/(2k_B T))$。\n\n寻找根 $\\delta_E$ 的算法将是二分法，按要求从基本原理出发实现。\n1.  对于给定的测试用例（$T, E_g, m_n^\\ast, m_p^\\ast$），首先使用国际单位制（SI）的 $h, k_B, m_e$ 值计算常数 $N_c(T)$ 和 $N_v(T)$。\n2.  将 $E_F$ 的初始搜索区间定义为 $[a_F, b_F] = [-0.5, E_g + 0.5]$。\n3.  将此区间变换到 $\\delta_E$ 域：$[a_\\delta, b_\\delta] = [a_F - E_g/2, b_F - E_g/2] = [-0.5 - E_g/2, 0.5 + E_g/2]$。\n4.  用区间 $[a,b] = [a_\\delta, b_\\delta]$ 初始化二分法算法。检查 $g(a)$ 和 $g(b)$ 是否异号。\n5.  迭代最多 200 次：\n    a. 计算中点 $c = (a+b)/2$。\n    b. 如果区间宽度 $(b-a)$ 小于容差 $10^{-12}\\,\\text{eV}$，则迭代终止。\n    c. 计算 $g(c)$。\n    d. 如果 $g(a)$ 和 $g(c)$ 同号，则根位于 $[c,b]$ 内；因此，令 $a=c$。\n    e. 否则，根位于 $[a,c]$ 内；因此，令 $b=c$。\n6.  根的估计值为 $\\delta_E^\\ast = (a+b)/2$。\n7.  最终的费米能级通过 $E_F = E_i + \\delta_E^\\ast = E_g/2 + \\delta_E^\\ast$ 恢复。然后将该值四舍五入到六位小数。\n\n此过程是系统化的、有物理依据且在数值上稳定的，并将被实现以解决给定的测试用例。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the Fermi energy in an intrinsic semiconductor for four test cases\n    using a bisection root-finding method.\n    \"\"\"\n    \n    # Define physical constants as specified in the problem statement.\n    # For exponents, in eV/K:\n    KB_EV = 8.617333262145e-5\n    # For Nc and Nv calculations, in SI units:\n    KB_SI = 1.380649e-23      # J/K\n    H_SI = 6.62607015e-34    # J*s\n    ME_SI = 9.1093837015e-31  # kg\n\n    # Define the test cases from the problem statement.\n    # Format: (T in K, Eg in eV, m_n_star, m_p_star)\n    test_cases = [\n        (300, 1.12, 1.08, 0.60),   # Case A (silicon-like asymmetry)\n        (450, 1.42, 0.50, 0.50),   # Case B (symmetric bands)\n        (300, 0.66, 0.20, 1.50),   # Case C (strong valence-band DOS dominance)\n        (100, 0.05, 0.30, 0.30),   # Case D (small gap, low temperature)\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        T, Eg, mn_star, mp_star = case\n        result = find_fermi_energy(T, Eg, mn_star, mp_star, KB_EV, KB_SI, H_SI, ME_SI)\n        results.append(result)\n\n    # Format the final results as a comma-separated string in brackets,\n    # with each value rounded to six decimal places.\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef find_fermi_energy(T, Eg, mn_star, mp_star, kb_ev, kb_si, h_si, me_si):\n    \"\"\"\n    Calculates the Fermi energy for a given set of semiconductor parameters.\n    \n    This function implements a bisection method to solve the charge neutrality\n    equation in a numerically stable form.\n\n    Args:\n        T (float): Temperature in Kelvin.\n        Eg (float): Band gap in electronvolts (eV).\n        mn_star (float): Effective mass factor for electrons.\n        mp_star (float): Effective mass factor for holes.\n        kb_ev (float): Boltzmann constant in eV/K.\n        kb_si (float): Boltzmann constant in J/K.\n        h_si (float): Planck's constant in J*s.\n        me_si (float): Electron rest mass in kg.\n\n    Returns:\n        float: The calculated Fermi energy in eV.\n    \"\"\"\n    \n    # --- 1. Calculate Effective Densities of States (Nc, Nv) ---\n    # Pre-calculate the constant part of the N_c/N_v formula for efficiency.\n    # N(T) = 2 * (2*pi*m*kb*T/h^2)^(3/2) = [2*(2*pi*me*kb/h^2)^(3/2)] * (m_star*T)^(3/2)\n    # The term m*T is incorrect based on derivation; it should be (m_star)^(3/2) * T^(3/2)\n    const_factor = 2 * ( (2 * np.pi * me_si * kb_si) / (h_si**2) )**1.5\n    \n    Nc = const_factor * (mn_star**1.5) * (T**1.5)\n    Nv = const_factor * (mp_star**1.5) * (T**1.5)\n    \n    # --- 2. Define the Numerically Stable Objective Function g(delta_E) ---\n    # We solve g(delta_E) = Nc*exp(delta_E/kbT) - Nv*exp(-delta_E/kbT) = 0\n    # where E_F = E_i + delta_E and E_i = Eg/2.\n    kbT_ev = kb_ev * T\n\n    def g(delta_E):\n        term1 = Nc * np.exp(delta_E / kbT_ev)\n        term2 = Nv * np.exp(-delta_E / kbT_ev)\n        return term1 - term2\n\n    # --- 3. Set up and run the Bisection Method ---\n    # Initial bracket for E_F: [Ev - 0.5, Ec + 0.5] = [-0.5, Eg + 0.5]\n    # Corresponding bracket for delta_E = E_F - Eg/2:\n    # [-0.5 - Eg/2, 0.5 + Eg/2]\n    Ei = Eg / 2.0\n    a = -0.5 - Ei\n    b = 0.5 + Ei\n    \n    max_iter = 200\n    tolerance = 1.0e-12\n    \n    # Evaluate g(a) once before the loop\n    ga = g(a)\n\n    for _ in range(max_iter):\n        # Check for convergence based on interval width\n        if (b - a) < tolerance:\n            break\n            \n        midpoint = a + (b - a) / 2.0 # More stable than (a+b)/2\n        g_mid = g(midpoint)\n        \n        # Update the bracket\n        if ga * g_mid > 0:\n            a = midpoint\n            ga = g_mid\n        else:\n            b = midpoint\n\n    # The root is the final midpoint of the delta_E interval\n    delta_E_root = a + (b - a) / 2.0\n    \n    # Convert back to Fermi energy E_F = Ei + delta_E\n    Ef = Ei + delta_E_root\n    \n    return Ef\n\nsolve()\n```", "id": "2377959"}]}