{"hands_on_practices": [{"introduction": "布洛赫定理为晶体中电子的波函数设定了严格的数学形式。我们如何检验一个给定的函数是否满足这个条件呢？本练习提供了一个简单的正弦函数 $\\psi(x) = A\\sin(k_0 x)$，要求我们判断其是否能成为一个有效的布洛赫函数。通过这个辨析，你将不仅仅是记忆布洛赫函数的标准形式，而是深入理解其背后关于平移对称性的本质要求。", "problem": "在一维晶体中电子态的研究中，波函数必须满足布洛赫定理。考虑一个晶格常数为 $a$ 的假想一维晶体。晶体中的一个电子，其波函数被假设为 $\\psi(x) = A \\sin(k_0 x)$ 的形式，其中 $A$ 是一个归一化常数，而 $k_0$ 是一个代表波矢量的正实数。\n\n在什么条件下（如果存在的话），这个波函数可以被认为是该晶体的一个有效的布洛赫函数？\n\nA. 可以，只要对于某个整数 $n$，满足 $k_0 a = n \\pi$。\n\nB. 可以，只要对于某个整数 $n$，满足 $k_0 a = 2n \\pi$。\n\nC. 不可以，因为一个有效的布洛赫函数必须是一个复指数函数，而不是一个实值正弦函数。\n\nD. 不可以，因为对于任意的 $k_0$，函数 $\\psi(x) = A \\sin(k_0 x)$ 并不具有晶格周期 $a$。\n\nE. 可以，对于任何 $k_0$ 值，这始终是一个有效的布洛赫函数。", "solution": "根据布洛赫定理，对于一个晶格常数为 $a$ 的一维晶格，如果一个函数 $\\psi(x)$ 满足以下条件，它就是一个有效的布洛赫函数：\n$$ \\psi(x+a) = C \\psi(x) $$\n对于所有的 $x$，其中 $C$ 是一个模为1的复常数，通常写成 $C = \\exp(ika)$ 的形式，其中 $k$ 是某个实数波矢量。这个波矢量 $k$ 被称为晶体动量。\n\n让我们用这个条件来检验给定的波函数 $\\psi(x) = A \\sin(k_0 x)$。\n首先，我们计算波函数在 $x+a$ 处的值：\n$$ \\psi(x+a) = A \\sin(k_0(x+a)) = A \\sin(k_0 x + k_0 a) $$\n使用正弦和角公式的三角恒等式 $\\sin(\\alpha + \\beta) = \\sin(\\alpha)\\cos(\\beta) + \\cos(\\alpha)\\sin(\\beta)$，我们可以展开这个表达式：\n$$ \\psi(x+a) = A (\\sin(k_0 x) \\cos(k_0 a) + \\cos(k_0 x) \\sin(k_0 a)) $$\n现在，我们把这个代入布洛赫条件：\n$$ A (\\sin(k_0 x) \\cos(k_0 a) + \\cos(k_0 x) \\sin(k_0 a)) = C (A \\sin(k_0 x)) $$\n归一化常数 $A$ 不为零，所以可以从两边消去：\n$$ \\sin(k_0 x) \\cos(k_0 a) + \\cos(k_0 x) \\sin(k_0 a) = C \\sin(k_0 x) $$\n为了使分析更清晰，让我们把所有项移到一边来重新整理方程：\n$$ \\sin(k_0 x) (\\cos(k_0 a) - C) + \\cos(k_0 x) \\sin(k_0 a) = 0 $$\n这个方程必须对所有 $x$ 值都成立。对于 $k_0 \\neq 0$，函数 $\\sin(k_0 x)$ 和 $\\cos(k_0 x)$ 是线性无关的。要使线性无关函数的线性组合对变量的所有值都为零，每个函数的系数必须为零。\n这给了我们两个联立条件：\n1. $\\sin(k_0 x)$ 的系数必须为零：$\\cos(k_0 a) - C = 0 \\implies C = \\cos(k_0 a)$。\n2. $\\cos(k_0 x)$ 的系数必须为零：$\\sin(k_0 a) = 0$。\n\n让我们先分析第二个条件。要使 $\\sin(k_0 a) = 0$，其参数 $k_0 a$ 必须是 $\\pi$ 的整数倍。也就是说：\n$$ k_0 a = n \\pi \\quad \\text{for some integer } n $$\n如果这个条件不满足，方程就不能对所有 $x$ 成立，那么 $\\psi(x)$ 就不是一个布洛赫函数。\n\n现在，我们假设这个条件得到满足。然后我们可以检验第一个条件。将 $k_0 a = n\\pi$ 代入 $C$ 的表达式中：\n$$ C = \\cos(n \\pi) $$\n对于任何整数 $n$，$\\cos(n \\pi)$ 的值要么是 $+1$（当 $n$ 为偶数时），要么是 $-1$（当 $n$ 为奇数时）。在这两种情况下，常数 $C$ 都是一个实数。我们还必须验证它的模为1，即 $|C|=1$。由于 $C = \\pm 1$，我们得到 $|C|=1$，这与布洛赫函数的要求是一致的。\n如果 $n$ 是偶数，则 $k_0 a = 2m\\pi$，$C=1$，所以晶体动量 $k$ 满足 $\\exp(ika)=1$，意味着 $k=2p\\pi/a$（一个倒格矢，包括 $k=0$）。\n如果 $n$ 是奇数，则 $k_0 a = (2m+1)\\pi$，$C=-1$，所以晶体动量 $k$ 满足 $\\exp(ika)=-1$，意味着 $k=(2p+1)\\pi/a$（布里渊区边界）。\n\n因此，函数 $\\psi(x) = A \\sin(k_0 x)$ 是一个有效的布洛赫函数，当且仅当对于某个整数 $n$，有 $k_0 a = n\\pi$。\n\n让我们回顾一下选项：\nA. 条件是对于某个整数 $n$，有 $k_0 a = n \\pi$。这与我们的推导相符。\nB. 这个条件过于严格，因为它只包括 $C=+1$ 的情况，而排除了 $C=-1$ 的情况（$n$ 为奇数）。\nC. 这是不正确的。布洛赫函数可以是实函数。例如，布洛赫态 $\\psi_k(x)$ 和 $\\psi_{-k}(x)$ 的叠加可以是实数。我们的函数是一个驻波，它可以在周期性势场中出现。\nD. 这是对布洛赫定理的一个常见误解。该定理不要求波函数 $\\psi(x)$ 本身具有周期 $a$。它要求波函数可以写成 $\\psi(x) = u_k(x) \\exp(ikx)$ 的形式，其中包络函数 $u_k(x)$ 具有周期 $a$。\nE. 这是不正确的，因为我们已经证明必须满足一个特定条件。\n\n因此，唯一正确的陈述是A。", "answer": "$$\\boxed{A}$$", "id": "1762586"}, {"introduction": "在理解了布洛赫函数的定义之后，下一步是将其应用于一个具体的物理模型。紧束缚模型是一个描述晶体中电子行为的简洁而强大的框架。在这个练习中，你将利用布洛赫函数的特性作为求解薛定谔方程的“钥匙”，为一维单原子链推导出其能带结构 $E(k)$。这个经典的推导过程将清晰地揭示能带的起源——即电子在周期性势场中离域运动的直接后果。", "problem": "考虑一个无限长的一维单原子晶体，其晶格常数为 $a$，每个晶格格点上有一个正交归一的局域轨道 $\\{|n\\rangle\\}$，其中 $n \\in \\mathbb{Z}$ 标记了位置为 $R_{n} = n a$ 的格点。假设采用紧束缚近似描述，在该基下，唯一非零的哈密顿量矩阵元为在位能 $\\langle n|\\hat{H}|n\\rangle = \\epsilon$ 和最近邻耦合 $\\langle n|\\hat{H}|n \\pm 1\\rangle = -t$，所有其他矩阵元均为零。不含时 Schrödinger 方程为 $\\hat{H}|\\psi\\rangle = E|\\psi\\rangle$。该晶体是完全周期的，因此哈密顿量与晶格平移算符对易，其本征态可以选择为在第一布里渊区内具有确定晶体动量 $k$ 的态。\n\n仅从这些原理和定义（平移不变性、给定的哈密顿量矩阵元以及不含时 Schrödinger 方程）出发，推导该晶格上 Bloch 态的色散关系 $E(k)$。将最终答案表示为关于 $k$、$a$、$\\epsilon$ 和 $t$ 的单个闭合形式解析表达式。除已说明的近似外，不要引入任何其他近似。最终答案是一个能量表达式；无需进行数值计算或单位转换。", "solution": "目标是求解在一维周期势中，由紧束缚哈密顿量描述的电子的色散关系 $E(k)$。由于晶体的周期性，该系统的本征态（称为 Bloch 态）同时也是晶格平移算符的本征态。\n\n设 $|\\psi_k\\rangle$ 是一个对应于晶体动量 $k$ 的 Bloch 态。该状态可以在正交归一的局域轨道基 $\\{|n\\rangle\\}$ 上展开，其中 $n \\in \\mathbb{Z}$ 索引了位置为 $R_n = na$ 的晶格格点：\n$$ |\\psi_k\\rangle = \\sum_{n=-\\infty}^{\\infty} c_n(k) |n\\rangle $$\n该基的正交归一性由 $\\langle m|n\\rangle = \\delta_{mn}$ 给出。\n\n根据 Bloch 定理，平移算符本征态的系数 $c_n(k)$ 具有特定形式。平移算符 $\\hat{T}_a$（将晶格平移一个常数 $a$）作用于 Bloch 态的结果为 $\\hat{T}_a |\\psi_k\\rangle = e^{ika} |\\psi_k\\rangle$。将此应用于 $|\\psi_k\\rangle$ 的展开式：\n$$ \\hat{T}_a |\\psi_k\\rangle = \\sum_{n=-\\infty}^{\\infty} c_n(k) \\hat{T}_a|n\\rangle = \\sum_{n=-\\infty}^{\\infty} c_n(k) |n+1\\rangle = \\sum_{m=-\\infty}^{\\infty} c_{m-1}(k) |m\\rangle $$\n将其与本征值方程 $e^{ika} |\\psi_k\\rangle = \\sum_{m=-\\infty}^{\\infty} e^{ika} c_m(k) |m\\rangle$ 比较，我们建立起系数之间的关系：$c_{m-1}(k) = e^{ika} c_m(k)$，或等效地，$c_m(k) = e^{ikma} c_0(k)$。常数 $c_0(k)$ 是总归一化的一部分。因此，Bloch 态的形式为：\n$$ |\\psi_k\\rangle = \\mathcal{N} \\sum_{n=-\\infty}^{\\infty} e^{ikna} |n\\rangle $$\n其中 $\\mathcal{N}$ 是一个归一化常数，它不会影响能量本征值的计算。\n\n现在我们将此拟设代入不含时 Schrödinger 方程 $\\hat{H}|\\psi_k\\rangle = E(k)|\\psi_k\\rangle$ 中：\n$$ \\hat{H} \\left( \\sum_{n=-\\infty}^{\\infty} e^{ikna} |n\\rangle \\right) = E(k) \\left( \\sum_{n=-\\infty}^{\\infty} e^{ikna} |n\\rangle \\right) $$\n根据哈密顿量 $\\hat{H}$ 的线性性质，上式变为：\n$$ \\sum_{n=-\\infty}^{\\infty} e^{ikna} \\hat{H} |n\\rangle = E(k) \\sum_{n=-\\infty}^{\\infty} e^{ikna} |n\\rangle $$\n为了求解能量本征值 $E(k)$，我们将此方程投影到一个任意的基矢左矢 $\\langle m|$ 上：\n$$ \\sum_{n=-\\infty}^{\\infty} e^{ikna} \\langle m | \\hat{H} | n \\rangle = E(k) \\sum_{n=-\\infty}^{\\infty} e^{ikna} \\langle m | n \\rangle $$\n我们使用正交归一性条件 $\\langle m|n\\rangle = \\delta_{mn}$ 来计算右侧：\n$$ E(k) \\sum_{n=-\\infty}^{\\infty} e^{ikna} \\delta_{mn} = E(k) e^{ikma} $$\n对于左侧，我们使用给定的哈密顿量矩阵元：$\\langle n|\\hat{H}|n\\rangle = \\epsilon$ 和 $\\langle n|\\hat{H}|n \\pm 1\\rangle = -t$。对于 $|m-n|>1$ 的所有其他矩阵元 $\\langle m|\\hat{H}|n\\rangle$ 均为零。因此，对 $n$ 的求和中只有三项非零，即 $n=m$、$n=m-1$ 和 $n=m+1$：\n$$ \\sum_{n=-\\infty}^{\\infty} e^{ikna} \\langle m | \\hat{H} | n \\rangle = e^{ik(m-1)a} \\langle m|\\hat{H}|m-1\\rangle + e^{ikma} \\langle m|\\hat{H}|m\\rangle + e^{ik(m+1)a} \\langle m|\\hat{H}|m+1\\rangle $$\n代入给定的矩阵元值：\n$$ = e^{ik(m-1)a}(-t) + e^{ikma}(\\epsilon) + e^{ik(m+1)a}(-t) $$\n$$ = \\epsilon e^{ikma} - t \\left( e^{ik(m-1)a} + e^{ik(m+1)a} \\right) $$\n令左右两侧的表达式相等，得到：\n$$ \\epsilon e^{ikma} - t \\left( e^{ik(m-1)a} + e^{ik(m+1)a} \\right) = E(k) e^{ikma} $$\n我们将整个方程除以非零因子 $e^{ikma}$：\n$$ \\epsilon - t \\left( e^{-ika} + e^{ika} \\right) = E(k) $$\n该表达式与格点指数 $m$ 无关，这正是平移对称性的要求。使用 Euler 恒等式 $e^{ix} + e^{-ix} = 2\\cos(x)$，我们简化括号中的项：\n$$ e^{ika} + e^{-ika} = 2\\cos(ka) $$\n将此结果代回能量方程，我们得到最终的色散关系：\n$$ E(k) = \\epsilon - 2t\\cos(ka) $$\n该结果表示晶体中电子的能带，是其波矢 $k$ 的函数。这正是严格根据给定原理推导出的所需闭合形式解析表达式。", "answer": "$$\n\\boxed{\\epsilon - 2t\\cos(ka)}\n$$", "id": "2802941"}, {"introduction": "理论上，布洛赫定理适用于无限大的理想晶体，但这与我们现实中有限大小的材料似乎有所出入。本计算实践旨在通过数值方法搭建从有限到无限的桥梁。你将通过编写代码来计算有限原子链的能级，并观察随着原子数 $N$ 的增加，这些分立的能级是如何逐渐汇聚成连续的能带的。这个过程不仅验证了前面练习中的解析结果，还直观地展示了从分子轨道到固体能带的演化，从而深化你对能带形成物理图像的理解。", "problem": "考虑一个在原子轨道线性组合 (LCAO) 紧束缚近似下建模的一维线性相同氢原子链。每个格点使用单个归一化的氢 $1s$ 轨道，忽略除最近邻哈密顿耦合之外的所有重叠。设在位能为 $\\varepsilon$（单位为电子伏特），最近邻跃迁参数为 $t$（单位为电子伏特）。原子等距排列，晶格常数为 $a$（单位为长度单位）。施加开放边界条件，使系统成为一个包含 $N$ 个原子的有限链。\n\n定义哈密顿矩阵 $H \\in \\mathbb{R}^{N \\times N}$ 为\n$$\nH_{ij} \\;=\\; \\varepsilon\\,\\delta_{ij} \\;+\\; t\\left(\\delta_{i,j+1} + \\delta_{i+1,j}\\right),\n$$\n其中 $i,j \\in \\{1,2,\\ldots,N\\}$。离散分子轨道能量是 $H$ 的本征值，按非递减顺序表示为\n$$\nE_1(N) \\le E_2(N) \\le \\cdots \\le E_N(N).\n$$\n\n对于具有相同参数的无限周期性链，Bloch 定理指出，本征态可以由晶格波矢 $k$ 标记，其色散关系为\n$$\nE(k) \\;=\\; \\varepsilon \\;+\\; 2t \\cos(ka),\n$$\n其中 $k$ 位于第一布里渊区，且 $ka$ 以弧度为单位。无限链的能带边为\n$$\nE_{\\min}^{(\\infty)} \\;=\\; \\varepsilon - 2|t|, \n\\qquad \nE_{\\max}^{(\\infty)} \\;=\\; \\varepsilon + 2|t|.\n$$\n\n任务是，对于每个指定的链长度 $N$，计算从有限链本征值谱中导出的以下六个量：\n1. 最低能量 $E_{\\min}(N) \\equiv E_1(N)$（单位为电子伏特）。\n2. 最高能量 $E_{\\max}(N) \\equiv E_N(N)$（单位为电子伏特）。\n3. 带宽 $W(N) \\equiv E_{\\max}(N) - E_{\\min}(N)$（单位为电子伏特）。\n4. 上能带边偏差 $D_{\\text{upper}}(N) \\equiv \\left|E_{\\max}(N) - E_{\\max}^{(\\infty)}\\right|$（单位为电子伏特）。\n5. 下能带边偏差 $D_{\\text{lower}}(N) \\equiv \\left|E_{\\min}(N) - E_{\\min}^{(\\infty)}\\right|$（单位为电子伏特）。\n6. 与开放链精确公式的最大偏差，\n$$\nD_{\\text{open}}(N) \\;\\equiv\\; \\max_{m \\in \\{1,\\ldots,N\\}} \\left| E_m(N) \\;-\\; \\left[\\varepsilon + 2t \\cos\\!\\left(\\frac{m\\pi}{N+1}\\right)\\right] \\right|,\n$$\n单位为电子伏特，其中所有角度均以弧度为单位。\n\n对所有测试用例使用以下参数值：$\\varepsilon = 0$ eV， $t = -1$ eV，以及 $a = 1$（因此 $ka$ 是无量纲的，并以弧度度量）。能量和偏差必须以电子伏特表示，并四舍五入到六位小数。\n\n测试组（四个用例）：$N \\in \\{2,4,8,16\\}$，按此顺序进行评估。\n\n最终输出格式：您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔的结果列表。对于顺序为 $[2,4,8,16]$ 中的每个 $N$，输出一个子列表\n$$\n\\left[E_{\\min}(N),\\; E_{\\max}(N),\\; W(N),\\; D_{\\text{upper}}(N),\\; D_{\\text{lower}}(N),\\; D_{\\text{open}}(N)\\right],\n$$\n其中每个浮点数四舍五入到六位小数。因此，最终打印的行必须看起来像\n$$\n\\big[ [\\cdots], [\\cdots], [\\cdots], [\\cdots] \\big],\n$$\n并按规定顺序包含恰好四个子列表，无任何附加文本。", "solution": "问题的核心是确定有限 $N$ 原子链的哈密顿矩阵的本征值。在最近邻 LCAO 紧束缚近似下，哈密顿量 $H$ 是一个 $N \\times N$ 矩阵，其元素定义为：\n$$\nH_{ij} \\;=\\; \\varepsilon\\,\\delta_{ij} \\;+\\; t\\left(\\delta_{i,j+1} + \\delta_{i+1,j}\\right)\n$$\n其中 $i,j \\in \\{1, 2, \\ldots, N\\}$，$\\varepsilon$ 是在位能， $t$ 是最近邻跃迁参数。对于此分析，参数被指定为 $\\varepsilon = 0 \\, \\text{eV}$ 和 $t = -1 \\, \\text{eV}$。因此，哈密顿量简化为一个实对称三对角矩阵，其主对角线上为零，第一超对角线和次对角线上为 $-1$。这种矩阵是一种特定类型的托普利茨矩阵。\n\n有限链的分子轨道能量 $E_m(N)$ 是该矩阵 $H$ 的本征值。找到这些能量和导出量的算法步骤如下：\n\n1.  **构造哈密顿量**：对于集合 $\\{2, 4, 8, 16\\}$ 中的每个指定链长度 $N$，我们构造相应的 $N \\times N$ 矩阵 $H$。\n\n2.  **数值对角化**：我们计算 $H$ 的本征值。由于 $H$ 是一个实对称（因此是厄米）矩阵，其所有本征值都是实数。我们采用一种数值稳定的算法，例如 `numpy.linalg.eigvalsh` 中实现的算法，该算法专为此类矩阵设计，并返回按非递减顺序排序的本征值。这产生了有序的能谱 $E_1(N) \\le E_2(N) \\le \\cdots \\le E_N(N)$。\n\n3.  **计算导出量**：利用数值确定的本征值，我们为每个 $N$ 计算六个指定的量。\n\n    a.  **最低和最高能量**：最低能量是第一个本征值 $E_{\\min}(N) = E_1(N)$，最高能量是最后一个本征值 $E_{\\max}(N) = E_N(N)$。\n\n    b.  **带宽**：有限链的带宽是最高和最低能量之差，$W(N) = E_{\\max}(N) - E_{\\min}(N)$。\n\n    c.  **与无限链能带边的偏差**：对于相应的无限周期性链，能量色散关系为 $E(k) = \\varepsilon + 2t \\cos(ka)$。当 $\\varepsilon = 0$ 和 $t = -1$ 时，此关系为 $E(k) = -2\\cos(ka)$。允许的能带范围从 $E_{\\min}^{(\\infty)}$ 到 $E_{\\max}^{(\\infty)}$。\n        - 最大能量为 $E_{\\max}^{(\\infty)} = \\varepsilon + 2|t| = 0 + 2|-1| = 2 \\, \\text{eV}$。\n        - 最小能量为 $E_{\\min}^{(\\infty)} = \\varepsilon - 2|t| = 0 - 2|-1| = -2 \\, \\text{eV}$。\n        有限链能带边与这些无限链极限的偏差则为：\n        - $D_{\\text{upper}}(N) = |E_{\\max}(N) - E_{\\max}^{(\\infty)}| = |E_{\\max}(N) - 2|$。\n        - $D_{\\text{lower}}(N) = |E_{\\min}(N) - E_{\\min}^{(\\infty)}| = |E_{\\min}(N) - (-2)| = |E_{\\min}(N) + 2|$。\n\n    d.  **与开放链精确公式的偏差**：这个特定三对角哈密顿量的本征值有解析解：\n        $$\n        E_m(N) = \\varepsilon + 2t \\cos\\left(\\frac{m\\pi}{N+1}\\right)\n        $$\n        对于我们的参数，这变为 $E_m^{\\text{analytic}}(N) = -2 \\cos\\left(\\frac{m\\pi}{N+1}\\right)$，其中 $m=1, \\dots, N$。这个量 $D_{\\text{open}}(N)$ 用于验证本征值计算的数值准确性。我们计算数值计算的本征值与这些精确解析值之间的最大绝对差：\n        $$\n        D_{\\text{open}}(N) = \\max_{m \\in \\{1,\\ldots,N\\}} \\left| E_m(N) - E_m^{\\text{analytic}}(N) \\right|\n        $$\n        对于 $m=1, \\dots, N$，解析本征值已经按升序排列，与数值求解器返回的本征值顺序相匹配。这允许直接进行逐元素比较。该偏差预计在机器精度量级。\n\n对测试组中的每个 $N$ 值执行此完整过程。然后将最终结果按要求格式化为六位小数。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the tight-binding model for a 1D chain of N atoms with open boundary conditions.\n\n    The function iterates through a set of chain lengths N, constructs the\n    Hamiltonian matrix, computes its eigenvalues, and then calculates six\n    derived quantities based on these eigenvalues.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [2, 4, 8, 16]\n\n    # Global parameters for the model\n    epsilon = 0.0  # On-site energy in eV\n    t = -1.0       # Hopping parameter in eV\n\n    # Store results for all test cases\n    all_results = []\n\n    for N in test_cases:\n        # Step 1: Construct the Hamiltonian matrix H\n        # H is a tridiagonal matrix with epsilon on the diagonal and t on the\n        # first off-diagonals. Here, epsilon is 0.\n        # H = t * (np.diag(np.ones(N - 1), k=1) + np.diag(np.ones(N - 1), k=-1))\n        # Note: No need to add the diagonal as it's zero.\n        # A more efficient way to build a tridiagonal matrix\n        diag_elements = np.full(N, epsilon)\n        off_diag_elements = np.full(N - 1, t)\n        # Using np.diag for construction\n        H = np.diag(diag_elements) + np.diag(off_diag_elements, k=1) + np.diag(off_diag_elements, k=-1)\n        \n        # Step 2: Compute eigenvalues (energies E_m(N))\n        # numpy.linalg.eigvalsh is used for Hermitian matrices and returns\n        # sorted real eigenvalues, which is what we need.\n        eigvals = np.linalg.eigvalsh(H)\n\n        # Step 3: Calculate the six required quantities for the current N\n        # 1. Lowest energy E_min(N)\n        E_min_N = eigvals[0]\n        \n        # 2. Highest energy E_max(N)\n        E_max_N = eigvals[-1]\n        \n        # 3. Bandwidth W(N)\n        W_N = E_max_N - E_min_N\n        \n        # Band edges for the infinite chain\n        E_min_inf = epsilon - 2 * abs(t)\n        E_max_inf = epsilon + 2 * abs(t)\n        \n        # 4. Upper-edge deviation D_upper(N)\n        D_upper_N = abs(E_max_N - E_max_inf)\n        \n        # 5. Lower-edge deviation D_lower(N)\n        D_lower_N = abs(E_min_N - E_min_inf)\n        \n        # 6. Maximum deviation from the exact open-chain formula D_open(N)\n        m_values = np.arange(1, N + 1)\n        analytic_eigvals = epsilon + 2 * t * np.cos(m_values * np.pi / (N + 1))\n        \n        # Since t < 0 and cos is decreasing on (0, pi), the analytic eigenvalues\n        # are already sorted in increasing order, matching the output of eigvalsh.\n        D_open_N = np.max(np.abs(eigvals - analytic_eigvals))\n\n        # Store the results for this N in a list\n        result_for_N = [E_min_N, E_max_N, W_N, D_upper_N, D_lower_N, D_open_N]\n        all_results.append(result_for_N)\n\n    # Final print statement in the exact required format.\n    # The format is a list of lists, with each number as a string\n    # rounded to six decimal places.\n    sublist_strs = []\n    for sublist in all_results:\n        # Format each number to 6 decimal places\n        formatted_nums = [f\"{x:.6f}\" for x in sublist]\n        # Join numbers with a comma and space, enclose in brackets\n        sublist_strs.append(f\"[{', '.join(formatted_nums)}]\")\n    \n    # Join the sublist strings with a comma and space, enclose in brackets\n    final_output_str = f\"[{', '.join(sublist_strs)}]\"\n    \n    print(final_output_str)\n\nsolve()\n```", "id": "2450997"}]}