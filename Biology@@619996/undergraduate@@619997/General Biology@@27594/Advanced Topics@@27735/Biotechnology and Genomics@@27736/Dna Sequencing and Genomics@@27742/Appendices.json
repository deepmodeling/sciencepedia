{"hands_on_practices": [{"introduction": "How do scientists piece together a full genome from millions of tiny DNA fragments generated by a sequencer? This exercise introduces the De Bruijn graph, a powerful and elegant method used in modern genome assembly. By treating short, overlapping sequences (k-mers) as a puzzle, you will build a graph and trace a path through it to reconstruct the original DNA sequence, providing a hands-on feel for this fundamental bioinformatic challenge. [@problem_id:2290987]", "problem": "A molecular biologist is performing *de novo* genome assembly on a short, linear DNA fragment from a newly discovered extremophilic bacterium. The sequencing process yielded a collection of short, overlapping reads. To reconstruct the original DNA sequence, the biologist employs a De Bruijn graph assembly strategy. The process begins by breaking down all the sequencing reads into a complete set of k-mers, which are short substrings of a fixed length $k$.\n\nFor this particular assembly, a value of $k=4$ was used. The complete, unordered set of all 4-mers obtained from the reads is:\n`{ ATGC, TGCG, GCGT, CGTA, GTAC, TACG, ACGT, CGTG }`\n\nYou are tasked with reconstructing the original, contiguous DNA sequence from this set of 4-mers. To do this, you must first construct the corresponding De Bruijn graph. In this specific graph model:\n1.  The nodes (or vertices) of the graph are all the unique (k-1)-mers. A (k-1)-mer is a sequence of length $k-1=3$. These nodes are derived from the prefixes (the first 3 bases) and suffixes (the last 3 bases) of every 4-mer in the given set.\n2.  A directed edge is drawn from a node `U` to a node `V` if and only if there exists a 4-mer in the set whose prefix is `U` and whose suffix is `V`. Each 4-mer in the set corresponds to exactly one directed edge in the graph.\n\nBy finding the unique path that traverses every edge exactly once, determine the full DNA sequence of the original linear fragment.", "solution": "The problem asks us to reconstruct a DNA sequence from a set of k-mers using a De Bruijn graph. The given set of k-mers with $k=4$ is `{ATGC, TGCG, GCGT, CGTA, GTAC, TACG, ACGT, CGTG}`.\n\n**Step 1: Identify the nodes of the De Bruijn graph.**\nThe nodes are the unique (k-1)-mers, which are 3-mers (trinucleotides). We can find them by listing the prefixes and suffixes of all the given 4-mers.\n\nThe 4-mers are:\n- `ATGC`: prefix `ATG`, suffix `TGC`\n- `TGCG`: prefix `TGC`, suffix `GCG`\n- `GCGT`: prefix `GCG`, suffix `CGT`\n- `CGTA`: prefix `CGT`, suffix `GTA`\n- `GTAC`: prefix `GTA`, suffix `TAC`\n- `TACG`: prefix `TAC`, suffix `ACG`\n- `ACGT`: prefix `ACG`, suffix `CGT`\n- `CGTG`: prefix `CGT`, suffix `GTG`\n\nThe set of all prefixes is `{ATG, TGC, GCG, CGT, GTA, TAC, ACG}`.\nThe set of all suffixes is `{TGC, GCG, CGT, GTA, TAC, ACG, GTG}`.\n\nThe complete set of unique nodes is the union of these two sets:\nNodes = `{ATG, TGC, GCG, CGT, GTA, TAC, ACG, GTG}`.\n\n**Step 2: Construct the directed edges.**\nEach 4-mer corresponds to a directed edge from its prefix node to its suffix node.\n\n- `ATGC` → edge from `ATG` to `TGC`\n- `TGCG` → edge from `TGC` to `GCG`\n- `GCGT` → edge from `GCG` to `CGT`\n- `CGTA` → edge from `CGT` to `GTA`\n- `GTAC` → edge from `GTA` to `TAC`\n- `TACG` → edge from `TAC` to `ACG`\n- `ACGT` → edge from `ACG` to `CGT`\n- `CGTG` → edge from `CGT` to `GTG`\n\n**Step 3: Find the start and end nodes of the Eulerian path.**\nReconstructing the sequence requires finding an Eulerian path, which is a path that visits every edge exactly once. For a directed graph, an Eulerian path exists if and only if the graph is connected and at most one vertex has `out-degree - in-degree = 1`, at most one vertex has `in-degree - out-degree = 1`, and all other vertices have `in-degree = out-degree`.\n\nLet's calculate the in-degree and out-degree for each node:\n- **ATG**: out-degree = 1 (to TGC), in-degree = 0. Difference = +1. This is the starting node.\n- **TGC**: out-degree = 1 (to GCG), in-degree = 1 (from ATG). Difference = 0.\n- **GCG**: out-degree = 1 (to CGT), in-degree = 1 (from TGC). Difference = 0.\n- **CGT**: out-degree = 2 (to GTA, to GTG), in-degree = 2 (from GCG, from ACG). Difference = 0.\n- **GTA**: out-degree = 1 (to TAC), in-degree = 1 (from CGT). Difference = 0.\n- **TAC**: out-degree = 1 (to ACG), in-degree = 1 (from GTA). Difference = 0.\n- **ACG**: out-degree = 1 (to CGT), in-degree = 1 (from TAC). Difference = 0.\n- **GTG**: out-degree = 0, in-degree = 1 (from CGT). Difference = -1. This is the ending node.\n\nThe graph has a single start node (`ATG`) and a single end node (`GTG`), so a unique Eulerian path exists.\n\n**Step 4: Trace the Eulerian path and reconstruct the sequence.**\nThe path starts at the node `ATG`. The sequence begins with the string of the starting node, which is `ATG`. We then append the last character of each subsequent k-mer traversed in the path.\n\n1.  Start at `ATG`. The only outgoing edge corresponds to the k-mer `ATGC`. Sequence so far: `ATGC`. We are now at node `TGC`.\n2.  From `TGC`, the outgoing edge corresponds to `TGCG`. We append the last character, `G`. Sequence: `ATGCG`. We are now at node `GCG`.\n3.  From `GCG`, the outgoing edge corresponds to `GCGT`. We append `T`. Sequence: `ATGCGT`. We are now at node `CGT`.\n4.  From `CGT`, there are two outgoing edges, `CGTA` and `CGTG`. We know `GTG` is the final node in the entire path, so we should not traverse the edge to `GTG` yet, unless it's the only option. Let's take the edge for `CGTA`. We append `A`. Sequence: `ATGCGTA`. We are now at node `GTA`.\n5.  From `GTA`, the outgoing edge corresponds to `GTAC`. Append `C`. Sequence: `ATGCGTAC`. We are now at node `TAC`.\n6.  From `TAC`, the outgoing edge corresponds to `TACG`. Append `G`. Sequence: `ATGCGTACG`. We are now at node `ACG`.\n7.  From `ACG`, the outgoing edge corresponds to `ACGT`. Append `T`. Sequence: `ATGCGTACGT`. This leads us back to node `CGT`.\n8.  We are at `CGT` again. The edge for `CGTA` has been used. The only remaining unused edge from `CGT` is the one for `CGTG`. We traverse this edge. Append `G`. Sequence: `ATGCGTACGTG`. We arrive at the final node `GTG`.\n\nAll 8 edges (k-mers) have been used exactly once. The path starts at `ATG` and ends at `GTG`. The final reconstructed sequence is the string we have built.\n\nFinal Sequence: `ATGCGTACGTG`.", "answer": "$$\\boxed{ATGCGTACGTG}$$", "id": "2290987"}, {"introduction": "An assembled genome sequence is like a book written in an unknown language; the next step is to find the \"words\" and \"sentences\" that have meaning. This practice will guide you through identifying Open Reading Frames (ORFs), which are the primary indicators of potential protein-coding genes. You will learn to scan a DNA sequence for the specific start and stop signals that delineate a gene, a foundational skill in genome annotation. [@problem_id:2291009]", "problem": "In molecular biology, an Open Reading Frame (ORF) is a continuous stretch of DNA sequence that has the potential to be translated into a protein. It starts with a start codon and ends with a stop codon in the same reading frame.\n\nConsider the following single-stranded DNA sequence, which represents a fragment from a newly discovered bacterium:\n`5'-AGCTTAGCATGCTAGGCGATTACGTAGCATGATTGCCGACTAGCATAA-3'`\n\nFor the purpose of this problem, we will define an ORF by the following specific rules:\n1.  The start codon is exclusively `ATG`.\n2.  The stop codons are `TAA`, `TAG`, or `TGA`.\n3.  An ORF begins with a start codon (`ATG`) and ends with the first subsequent stop codon (`TAA`, `TAG`, or `TGA`) that is \"in-frame\". A stop codon is considered in-frame if the number of nucleotides from the first base of the start codon to the first base of the stop codon is a multiple of 3.\n4.  The ORF sequence includes all nucleotides from the start of the start codon to the end of the stop codon, inclusive.\n\nAnalyze the provided DNA sequence and identify all possible ORFs according to these rules. Your task is to determine the nucleotide sequence of the longest possible ORF.", "solution": "We consider only the provided single-stranded sequence in the 5' to 3' direction and apply the ORF rules: an ORF starts at the start codon ATG and ends at the first subsequent in-frame stop codon from the set {TAA, TAG, TGA}. A stop at position $j$ is in-frame with a start at position $i$ if and only if $j-i$ is a multiple of $3$, i.e., there exists $k \\in \\mathbb{Z}_{\\ge 0}$ such that $j = i + 3k$.\n\nIndex the nucleotides from the 5' end as positions $1,2,\\dots,48$. The given sequence is:\nAGCTTAGCATGCTAGGCGATTACGTAGCATGATTGCCGACTAGCATAA,\nwith nucleotide positions:\n1 A, 2 G, 3 C, 4 T, 5 T, 6 A, 7 G, 8 C, 9 A, 10 T, 11 G, 12 C, 13 T, 14 A, 15 G, 16 G, 17 C, 18 G, 19 A, 20 T, 21 T, 22 A, 23 C, 24 G, 25 T, 26 A, 27 G, 28 C, 29 A, 30 T, 31 G, 32 A, 33 T, 34 T, 35 G, 36 C, 37 C, 38 G, 39 A, 40 C, 41 T, 42 A, 43 G, 44 C, 45 A, 46 T, 47 A, 48 A.\n\nIdentify all start codons ATG by scanning triplets $(i,i+1,i+2)$:\n- At positions $9$–$11$: ATG (start).\n- At positions $29$–$31$: ATG (start).\nNo other ATG occurs.\n\nFor the start at $i=9$ (codon 9–11 = ATG), examine successive in-frame codons $(9$–$11)$, $(12$–$14)$, $(15$–$17)$, $(18$–$20)$, $(21$–$23)$, $(24$–$26)$, $(27$–$29)$, $(30$–$32)$:\n- 9–11: ATG (start),\n- 12–14: CTA,\n- 15–17: GGC,\n- 18–20: GAT,\n- 21–23: TAC,\n- 24–26: GTA,\n- 27–29: GCA,\n- 30–32: TGA (stop).\nThe first in-frame stop is TGA at $j=30$, and $j-i=30-9=21=3 \\times 7$, so it is in-frame. Therefore, this ORF spans positions $9$ through $32$ inclusive (length $32-9+1=24$ nucleotides), with sequence:\nATG CTA GGC GAT TAC GTA GCA TGA,\ni.e., ATGCTAGGCGATTACGTAGCATGA.\n\nFor the start at $i=29$ (codon 29–31 = ATG), examine successive in-frame codons $(29$–$31)$, $(32$–$34)$, $(35$–$37)$, $(38$–$40)$, $(41$–$43)$:\n- 29–31: ATG (start),\n- 32–34: ATT,\n- 35–37: GCC,\n- 38–40: GAC,\n- 41–43: TAG (stop).\nThe first in-frame stop is TAG at $j=41$, and $j-i=41-29=12=3 \\times 4$, so it is in-frame. Therefore, this ORF spans positions $29$ through $43$ inclusive (length $43-29+1=15$ nucleotides), with sequence:\nATG ATT GCC GAC TAG,\ni.e., ATGATTGCCGACTAG.\n\nComparing lengths, $24 > 15$, so the longest ORF is the one starting at position $9$ and ending at position $32$, with nucleotide sequence ATGCTAGGCGATTACGTAGCATGA.", "answer": "$$\\boxed{ATGCTAGGCGATTACGTAGCATGA}$$", "id": "2291009"}, {"introduction": "For any heterozygous locus, standard sequencing tells us which two alleles an individual has, but not which allele is on which chromosome copy. This exercise tackles the challenge of \"haplotype phasing\" using data from a family trio. By applying principles of Mendelian inheritance, you'll resolve the child's ambiguous genotype data into two complete haplotypes, one inherited from each parent, demonstrating a cornerstone of modern medical and population genetics. [@problem_id:2290984]", "problem": "A human genetics lab is studying the transmission of genetic material in a family trio consisting of a mother, a father, and their child. They have performed whole-genome sequencing and are focusing on a specific 50 kilobase region on chromosome 8. Within this region, they have identified 10 polymorphic loci, which are Single Nucleotide Polymorphisms (SNPs). The unphased diploid genotypes for each individual at these 10 loci are provided below. The loci are listed in order along the chromosome. For a heterozygous locus, the alleles are listed alphabetically (e.g., A/G, not G/A).\n\n| Locus | Mother's Genotype | Father's Genotype | Child's Genotype |\n| :--- | :---: | :---: | :---: |\n| SNP 1 | C/C | A/G | A/C |\n| SNP 2 | T/T | A/C | A/T |\n| SNP 3 | G/G | G/T | G/G |\n| SNP 4 | A/C | C/C | A/C |\n| SNP 5 | T/T | T/T | G/T |\n| SNP 6 | A/G | A/A | A/G |\n| SNP 7 | C/T | T/T | C/T |\n| SNP 8 | A/G | G/G | G/G |\n| SNP 9 | C/C | A/T | A/C |\n| SNP 10| G/T | G/G | G/T |\n\nYour task is to determine the child's two complete haplotypes for this region—one inherited from the mother (maternal) and one from the father (paternal). Assume that at most one *de novo* mutation and at most one recombination event have occurred within this 10-SNP segment in the germlines that produced the child.\n\nWhich of the following pairs represents the child's correct maternal and paternal haplotypes?\n\nA.\nMaternal: C-T-G-A-T-G-C-G-C-T\nPaternal: A-A-G-C-G-A-T-G-A-G\n\nB.\nMaternal: C-T-G-C-T-A-C-G-C-G\nPaternal: A-A-G-A-G-A-T-G-A-T\n\nC.\nMaternal: C-T-G-C-T-A-C-A-C-G\nPaternal: A-A-G-A-G-A-T-G-A-T\n\nD.\nMaternal: C-T-G-C-T-A-T-A-C-G\nPaternal: A-C-G-A-G-A-C-G-T-T\n\nE.\nMaternal: C-T-G-A-T-G-C-G-C-T\nPaternal: A-C-G-C-T-A-T-G-A-G", "solution": "We must determine, for each option, whether the proposed maternal and paternal haplotypes produce the child's observed unphased genotype at every SNP, while satisfying the constraints:\n- At each SNP, the child's genotype must equal the unordered pair formed by the proposed maternal and paternal alleles at that SNP.\n- Each transmitted allele must be present in the corresponding parent's genotype, except that at most one locus across all ten SNPs may involve a single de novo mutation.\n- The transmitted alleles along each parent's heterozygous sites must be explainable by at most one recombination event within this 10-SNP segment. If the transmitted alleles at all heterozygous sites correspond to a single parental haplotype, that implies zero recombinations, which is within the allowed maximum.\n\nGiven data by SNP index $1$ to $10$:\n- Mother: $1$ C/C, $2$ T/T, $3$ G/G, $4$ A/C, $5$ T/T, $6$ A/G, $7$ C/T, $8$ A/G, $9$ C/C, $10$ G/T.\n- Father: $1$ A/G, $2$ A/C, $3$ G/T, $4$ C/C, $5$ T/T, $6$ A/A, $7$ T/T, $8$ G/G, $9$ A/T, $10$ G/G.\n- Child: $1$ A/C, $2$ A/T, $3$ G/G, $4$ A/C, $5$ G/T, $6$ A/G, $7$ C/T, $8$ G/G, $9$ A/C, $10$ G/T.\n\nCheck option A.\nMaternal: C-T-G-A-T-G-C-G-C-T; Paternal: A-A-G-C-G-A-T-G-A-G.\nFor each SNP $i$, write $(m_{i},p_{i})$ for maternal and paternal alleles proposed, and verify:\n- $i=1$: $(\\text{C},\\text{A})$ gives A/C, matches child A/C; C in mother C/C, A in father A/G.\n- $i=2$: $(\\text{T},\\text{A})$ gives A/T, matches; T in mother T/T, A in father A/C.\n- $i=3$: $(\\text{G},\\text{G})$ gives G/G, matches; G in mother G/G, G in father G/T.\n- $i=4$: $(\\text{A},\\text{C})$ gives A/C, matches; A in mother A/C, C in father C/C.\n- $i=5$: $(\\text{T},\\text{G})$ gives G/T, matches; T in mother T/T, but father is T/T so G is absent. This requires exactly one de novo mutation in the paternal germline at SNP $5$.\n- $i=6$: $(\\text{G},\\text{A})$ gives A/G, matches; G in mother A/G, A in father A/A.\n- $i=7$: $(\\text{C},\\text{T})$ gives C/T, matches; C in mother C/T, T in father T/T.\n- $i=8$: $(\\text{G},\\text{G})$ gives G/G, matches; G in mother A/G, G in father G/G.\n- $i=9$: $(\\text{C},\\text{A})$ gives A/C, matches; C in mother C/C, A in father A/T.\n- $i=10$: $(\\text{T},\\text{G})$ gives G/T, matches; T in mother G/T, G in father G/G.\nThus, option A matches all child genotypes with exactly one de novo mutation (at SNP $5$ paternal). Recombination consistency: maternal heterozygous sites are SNPs $4,6,7,8,10$ with transmitted alleles A, G, C, G, T, which can all reside on a single maternal haplotype (zero recombinations). Paternal heterozygous sites are SNPs $1,2,3,9$ with transmitted alleles A, A, G, A, again consistent with a single paternal haplotype (zero recombinations). Therefore, option A satisfies at most one de novo (exactly one) and at most one recombination (zero).\n\nEliminate other options:\n- Option B: At SNP $4$, paternal allele A is absent in father C/C (one de novo). At SNP $5$, paternal allele G is absent in father T/T (second de novo). Moreover, at SNP $6$ the proposed $(\\text{A},\\text{A})$ would yield A/A, which does not match the child's A/G. Hence invalid.\n- Option C: Same paternal issues as B at SNPs $4$ and $5$ (at least two de novo), and at SNP $6$ gives A/A, not matching A/G. Hence invalid.\n- Option D: At SNP $2$, $(\\text{T},\\text{C})$ gives C/T, but the child is A/T. Hence invalid.\n- Option E: At SNP $2$, $(\\text{T},\\text{C})$ gives C/T, but the child is A/T. Hence invalid.\n\nTherefore, only option A is consistent with the trio genotypes and the constraint of at most one de novo mutation and at most one recombination event in this region.", "answer": "$$\\boxed{A}$$", "id": "2290984"}]}