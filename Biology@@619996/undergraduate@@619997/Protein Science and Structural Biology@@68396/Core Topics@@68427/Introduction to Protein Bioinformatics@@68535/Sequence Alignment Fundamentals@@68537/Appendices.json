{"hands_on_practices": [{"introduction": "Before an algorithm can find the *best* alignment, we must first define what 'best' means. At the heart of every sequence alignment algorithm is a scoring system that quantifies the quality of a potential alignment. This first practice exercise provides a direct, hands-on way to apply a scoring scheme, reinforcing the core concepts of match rewards, mismatch penalties, and gap penalties that are the building blocks of sequence comparison [@problem_id:2136319].", "problem": "In bioinformatics, sequence alignment is a fundamental method for comparing two or more biological sequences. The quality of an alignment is often quantified by a scoring system. Consider the following gapped alignment of two short peptide sequences, represented using standard one-letter amino acid codes. A hyphen (`-`) is used to represent a gap.\n\nSequence 1: `M A V L I S Q R T V K`\nSequence 2: `M G V L - S R Q T - K`\n\nA simple scoring scheme is employed to evaluate this alignment. The rules are as follows:\n- A match, where the amino acids in a column are identical, receives a score of `+5`.\n- A mismatch, where the amino acids in a column are different, receives a score of `-3`.\n- A gap, where an amino acid is aligned with a gap character (`-`), incurs a penalty of `-8`.\n\nBased on this scoring scheme, calculate the total alignment score for the given pairwise alignment.", "solution": "To calculate the total alignment score, we need to analyze the alignment column by column and sum the scores for each position according to the provided scoring scheme.\n\nThe given alignment is:\nSequence 1: `M A V L I S Q R T V K`\nSequence 2: `M G V L - S R Q T - K`\n\nThe scoring rules are:\n- Match score = `+5`\n- Mismatch score = `-3`\n- Gap penalty = `-8`\n\nLet's iterate through the 11 columns of the alignment and determine the type of alignment at each position (match, mismatch, or gap).\n\n1.  Position 1: `M` vs `M`. This is a **match**.\n2.  Position 2: `A` vs `G`. This is a **mismatch**.\n3.  Position 3: `V` vs `V`. This is a **match**.\n4.  Position 4: `L` vs `L`. This is a **match**.\n5.  Position 5: `I` vs `-`. This is a **gap**.\n6.  Position 6: `S` vs `S`. This is a **match**.\n7.  Position 7: `Q` vs `R`. This is a **mismatch**.\n8.  Position 8: `R` vs `Q`. This is a **mismatch**.\n9.  Position 9: `T` vs `T`. This is a **match**.\n10. Position 10: `V` vs `-`. This is a **gap**.\n11. Position 11: `K` vs `K`. This is a **match**.\n\nNext, we count the total number of matches, mismatches, and gaps.\n-   Number of matches = 6 (at positions 1, 3, 4, 6, 9, 11)\n-   Number of mismatches = 3 (at positions 2, 7, 8)\n-   Number of gaps = 2 (at positions 5, 10)\n\nNow, we calculate the total score by multiplying the counts by their respective scores and summing the results.\n\nTotal Score = (Number of matches * Match score) + (Number of mismatches * Mismatch score) + (Number of gaps * Gap penalty)\n\nSubstituting the values:\nTotal Score = $(6 \\times 5) + (3 \\times (-3)) + (2 \\times (-8))$\nTotal Score = $30 - 9 - 16$\nTotal Score = $21 - 16$\nTotal Score = $5$\n\nThus, the total alignment score for the given alignment is 5.", "answer": "$$\\boxed{5}$$", "id": "2136319"}, {"introduction": "Dynamic programming algorithms, like the Needleman-Wunsch method, systematically build an optimal alignment by solving a series of smaller, overlapping subproblems. This exercise zooms in on the single, fundamental calculation at the heart of this process, governed by a recurrence relation. By determining the score of one cell in the dynamic programming matrix based on its neighbors, you will gain a core understanding of how the algorithm finds the highest-scoring alignment path [@problem_id:2136340].", "problem": "In bioinformatics, the Needleman-Wunsch algorithm is a fundamental method used for global sequence alignment. It relies on a dynamic programming approach to find the optimal alignment score between two sequences. The algorithm fills a matrix, $S$, where each cell $S_{i,j}$ stores the optimal alignment score for the first $i$ characters of sequence A and the first $j$ characters of sequence B.\n\nThe score for a cell $S_{i,j}$ is determined by the scores of its neighboring cells: the top-left (diagonal) cell $S_{i-1,j-1}$, the top cell $S_{i-1,j}$, and the left cell $S_{i,j-1}$. The recurrence relation is given by:\n$$S_{i,j} = \\max \\begin{cases} S_{i-1, j-1} + \\text{score}(a_i, b_j) & \\text{(Alignment of } a_i \\text{ and } b_j\\text{)} \\\\ S_{i-1, j} + d & \\text{(Gap in sequence B)} \\\\ S_{i, j-1} + d & \\text{(Gap in sequence A)} \\end{cases}$$\nwhere $a_i$ is the $i$-th character of sequence A, $b_j$ is the $j$-th character of sequence B, $\\text{score}(a_i, b_j)$ is the score for aligning these two characters, and $d$ is the constant gap penalty.\n\nSuppose you are calculating the value for cell $S_{i,j}$ and have the following information:\n- The score of the diagonal cell is $S_{i-1,j-1} = 15$.\n- The score of the top cell is $S_{i-1,j} = 9$.\n- The score of the left cell is $S_{i,j-1} = 11$.\n- The amino acid at position $i$ of sequence A is Leucine (L).\n- The amino acid at position $j$ of sequence B is Isoleucine (I).\n- The scoring system is defined as: match score = +7, mismatch score = -4.\n- The linear gap penalty is $d = -10$.\n\nGiven these values, determine the score for the cell $S_{i,j}$.", "solution": "We use the Needleman-Wunsch dynamic programming recurrence:\n$$S_{i,j}=\\max\\left\\{S_{i-1,j-1}+\\text{score}(a_{i},b_{j}),\\; S_{i-1,j}+d,\\; S_{i,j-1}+d\\right\\}.$$\nGiven $a_{i}=\\text{L}$ and $b_{j}=\\text{I}$, and since $\\text{L}\\neq\\text{I}$, this is a mismatch, so\n$$\\text{score}(a_{i},b_{j})=-4.$$\nWith $S_{i-1,j-1}=15$, $S_{i-1,j}=9$, $S_{i,j-1}=11$, and $d=-10$, the three candidate scores are\n$$\\text{diagonal: } S_{i-1,j-1}+\\text{score}(a_{i},b_{j})=15+(-4)=11,$$\n$$\\text{top (gap in B): } S_{i-1,j}+d=9+(-10)=-1,$$\n$$\\text{left (gap in A): } S_{i,j-1}+d=11+(-10)=1.$$\nTaking the maximum,\n$$S_{i,j}=\\max\\{11,-1,1\\}=11.$$\nTherefore, the score for the cell $S_{i,j}$ is $11$.", "answer": "$$\\boxed{11}$$", "id": "2136340"}, {"introduction": "The true power of computational methods like sequence alignment lies in their adaptability to solve real-world biological puzzles. In bioinformatics, prior knowledge from laboratory experiments can be used to guide the alignment process towards more biologically meaningful results. This advanced problem challenges you to modify the standard global alignment framework to incorporate such a constraint, demonstrating how a complex problem can be elegantly solved by breaking it down into smaller, manageable subproblems [@problem_id:2136318].", "problem": "In structural biology, sometimes experimental evidence, such as from a chemical cross-linking experiment, suggests that two specific residues, one from each of two interacting proteins, are in close spatial proximity. This provides a strong constraint that can be incorporated into sequence alignment algorithms to guide the search for a more biologically meaningful alignment.\n\nConsider two protein sequences, $X$ and $Y$:\n$X = \\text{PAWHEAE}$\n$Y = \\text{HEAGAWGHE}$\n\nYou are tasked with finding the optimal global alignment score between $X$ and $Y$ under a specific constraint: the third residue of sequence $X$ (a Tryptophan, 'W') must be aligned with the fourth residue of sequence $Y$ (a Glycine, 'G').\n\nThe scoring system is defined by a linear gap penalty of $d=8$ (i.e., a score of $-8$ for each position in a gap) and the following substitution matrix, $S(a, b)$:\n\n| | A | G | E | H | P | W |\n| :--- | :-: | :-: | :-: | :-: | :-: | :-: |\n| **A** | +4 | -2 | -1 | -2 | -1 | -3 |\n| **G** | -2 | +6 | -2 | -2 | -2 | -2 |\n| **E** | -1 | -2 | +5 | -2 | 0 | -3 |\n| **H** | -2 | -2 | -2 | +8 | -2 | -2 |\n| **P** | -1 | -2 | 0 | -2 | +7 | -4 |\n| **W** | -3 | -2 | -3 | -2 | -4 | +11 |\n\nCalculate the score of the optimal global alignment that adheres to the specified constraint. The final answer should be a single integer.", "solution": "Let $X=\\text{PAWHEAE}$ and $Y=\\text{HEAGAWGHE}$, with the constraint that $X_{3}=\\text{W}$ must be aligned to $Y_{4}=\\text{G}$. With a linear gap penalty $d=8$ and substitution scores $S(\\cdot,\\cdot)$ as given, any global alignment satisfying the constraint decomposes uniquely into:\n- a global alignment of the prefixes $X_{1..2}=\\text{PA}$ with $Y_{1..3}=\\text{HEA}$,\n- the anchored column $(\\text{W},\\text{G})$ contributing $S(\\text{W},\\text{G})$,\n- a global alignment of the suffixes $X_{4..7}=\\text{HEAE}$ with $Y_{5..9}=\\text{AGWHE}$.\n\nTherefore, the optimal constrained score is\n$$\n\\text{Score}=\\underbrace{\\text{NW}(\\text{PA},\\text{HEA})}_{\\text{left}}+S(\\text{W},\\text{G})+\\underbrace{\\text{NW}(\\text{HEAE},\\text{AGWHE})}_{\\text{right}},\n$$\nwhere $\\text{NW}$ denotes the optimal Needlemanâ€“Wunsch global alignment score with recurrence\n$$\nF(0,0)=0,\\quad F(i,0)=-di,\\quad F(0,j)=-dj,\n$$\n$$\nF(i,j)=\\max\\{F(i-1,j-1)+S(x_{i},y_{j}),\\;F(i-1,j)-d,\\;F(i,j-1)-d\\}.\n$$\n\nCompute the left subproblem $\\text{NW}(\\text{PA},\\text{HEA})$ with $d=8$. Required substitution scores are $S(\\text{P},\\text{H})=-2$, $S(\\text{P},\\text{E})=0$, $S(\\text{P},\\text{A})=-1$, $S(\\text{A},\\text{H})=-2$, $S(\\text{A},\\text{E})=-1$, $S(\\text{A},\\text{A})=4$. Initialize $F(0,0)=0$, $F(0,1)=-8$, $F(0,2)=-16$, $F(0,3)=-24$, $F(1,0)=-8$, $F(2,0)=-16$. Then:\n- $F(1,1)=\\max\\{-2,-16,-16\\}=-2$,\n- $F(1,2)=\\max\\{-8,-24,-10\\}=-8$,\n- $F(1,3)=\\max\\{-17,-32,-16\\}=-16$,\n- $F(2,1)=\\max\\{-10,-10,-24\\}=-10$,\n- $F(2,2)=\\max\\{-3,-16,-18\\}=-3$,\n- $F(2,3)=\\max\\{-4,-24,-11\\}=-4$.\n\nThus $\\text{NW}(\\text{PA},\\text{HEA})=F(2,3)=-4$.\n\nThe anchor contributes $S(\\text{W},\\text{G})=-2$.\n\nCompute the right subproblem $\\text{NW}(\\text{HEAE},\\text{AGWHE})$ with $d=8$. Needed scores include $S(\\text{H},\\text{A})=-2$, $S(\\text{H},\\text{G})=-2$, $S(\\text{H},\\text{W})=-2$, $S(\\text{H},\\text{H})=8$, $S(\\text{H},\\text{E})=-2$, $S(\\text{E},\\text{A})=-1$, $S(\\text{E},\\text{G})=-2$, $S(\\text{E},\\text{W})=-3$, $S(\\text{E},\\text{H})=-2$, $S(\\text{E},\\text{E})=5$, $S(\\text{A},\\text{A})=4$, $S(\\text{A},\\text{G})=-2$, $S(\\text{A},\\text{W})=-3$, $S(\\text{A},\\text{H})=-2$, $S(\\text{A},\\text{E})=-1$. Initialize $F(0,j)=-8j$ for $j=0,\\dots,5$ and $F(i,0)=-8i$ for $i=0,\\dots,4$. Fill the DP:\n\nRow $i=1$ ($x_{1}=\\text{H}$):\n- $F(1,1)=\\max\\{-2,-16,-16\\}=-2$,\n- $F(1,2)=\\max\\{-10,-24,-10\\}=-10$,\n- $F(1,3)=\\max\\{-18,-32,-18\\}=-18$,\n- $F(1,4)=\\max\\{-16,-40,-26\\}=-16$,\n- $F(1,5)=\\max\\{-34,-48,-24\\}=-24$.\n\nRow $i=2$ ($x_{2}=\\text{E}$):\n- $F(2,1)=\\max\\{-9,-10,-24\\}=-9$,\n- $F(2,2)=\\max\\{-4,-18,-17\\}=-4$,\n- $F(2,3)=\\max\\{-13,-26,-12\\}=-12$,\n- $F(2,4)=\\max\\{-20,-24,-20\\}=-20$,\n- $F(2,5)=\\max\\{-11,-32,-28\\}=-11$.\n\nRow $i=3$ ($x_{3}=\\text{A}$):\n- $F(3,1)=\\max\\{-12,-17,-32\\}=-12$,\n- $F(3,2)=\\max\\{-11,-12,-20\\}=-11$,\n- $F(3,3)=\\max\\{-7,-20,-19\\}=-7$,\n- $F(3,4)=\\max\\{-14,-28,-15\\}=-14$,\n- $F(3,5)=\\max\\{-21,-19,-22\\}=-19$.\n\nRow $i=4$ ($x_{4}=\\text{E}$):\n- $F(4,1)=\\max\\{-25,-20,-40\\}=-20$,\n- $F(4,2)=\\max\\{-14,-19,-28\\}=-14$,\n- $F(4,3)=\\max\\{-14,-15,-22\\}=-14$,\n- $F(4,4)=\\max\\{-9,-22,-22\\}=-9$,\n- $F(4,5)=\\max\\{-9,-27,-17\\}=-9$.\n\nThus $\\text{NW}(\\text{HEAE},\\text{AGWHE})=F(4,5)=-9$.\n\nSumming all parts gives\n$$\n\\text{Score}=(-4)+(-2)+(-9)=-15.\n$$", "answer": "$$\\boxed{-15}$$", "id": "2136318"}]}