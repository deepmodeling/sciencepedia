{"hands_on_practices": [{"introduction": "Understanding asynchronous dynamics begins with mastering the step-by-step process of individual node updates. This exercise challenges you to work backward, much like a detective retracing a sequence of events. Given a specific path the network followed through its state space, your task is to deduce the precise order of node updates that could have produced this trajectory [@problem_id:1469521].", "id": "1469521", "problem": "Consider a small-scale model of a biological network consisting of three nodes, $X_1$, $X_2$, and $X_3$. The state of each node can be either 0 (inactive) or 1 (active). The state of the entire network at a given time is represented by a vector $S = (x_1, x_2, x_3)$, where $x_i$ is the state of node $X_i$.\n\nThe system evolves over discrete time steps through an asynchronous update scheme. In each step, exactly one node is chosen and its state is updated according to a set of fixed logical rules. The new state of the chosen node, $x_i'$, depends on the current state of the entire network $S = (x_1, x_2, x_3)$. The update rules are given by the following Boolean functions:\n\n- For node $X_1$: $x_1' = x_1$\n- For node $X_2$: $x_2' = x_1 \\land (\\neg x_3)$\n- For node $X_3$: $x_3' = x_1 \\land x_2$\n\nHere, $\\land$ represents the logical AND operation, and $\\neg$ represents the logical NOT operation.\n\nSuppose the network starts in the initial state $S_0 = (1, 0, 0)$. A specific sequence of single-node updates is applied, causing the network to follow the exact state trajectory:\n$(1, 0, 0) \\to (1, 1, 0) \\to (1, 1, 1)$.\n\nWhich of the following ordered sequences of node updates could produce this trajectory?\n\nA. Update $X_2$, then $X_3$\nB. Update $X_3$, then $X_2$\nC. Update $X_1$, then $X_2$, then $X_3$\nD. Update $X_2$, then $X_1$\nE. Update $X_3$, then $X_1$\n\n", "solution": "The asynchronous update rule means that at each step a single chosen node updates to the value given by its Boolean function evaluated on the current state, while the other two nodes remain unchanged.\n\nThe update rules are:\n- For $X_{1}$: $x_{1}'=x_{1}$.\n- For $X_{2}$: $x_{2}'=x_{1}\\land(\\neg x_{3})$.\n- For $X_{3}$: $x_{3}'=x_{1}\\land x_{2}$.\n\nStarting from $S_{0}=(1,0,0)$, the first transition is to $(1,1,0)$. We test which single-node update can produce this:\n- Update $X_{1}$: from $(1,0,0)$, $x_{1}'=x_{1}=1$, so the state remains $(1,0,0)$; this does not yield $(1,1,0)$.\n- Update $X_{2}$: from $(1,0,0)$, $x_{2}'=x_{1}\\land(\\neg x_{3})=1\\land 1=1$, so the state becomes $(1,1,0)$; this matches.\n- Update $X_{3}$: from $(1,0,0)$, $x_{3}'=x_{1}\\land x_{2}=1\\land 0=0$, so the state remains $(1,0,0)$; not a match.\n\nTherefore, the first update must be $X_{2}$.\n\nNow from $(1,1,0)$, the second transition is to $(1,1,1)$. We test which single-node update can produce this:\n- Update $X_{1}$: $x_{1}'=x_{1}=1$, so the state remains $(1,1,0)$; not a match.\n- Update $X_{2}$: $x_{2}'=x_{1}\\land(\\neg x_{3})=1\\land 1=1$, so the state remains $(1,1,0)$; not a match.\n- Update $X_{3}$: $x_{3}'=x_{1}\\land x_{2}=1\\land 1=1$, so the state becomes $(1,1,1)$; this matches.\n\nTherefore, the second update must be $X_{3}$. The only ordered sequence that produces the trajectory $(1,0,0)\\to(1,1,0)\\to(1,1,1)$ is to update $X_{2}$, then $X_{3}$, which corresponds to option A. Options starting with $X_{1}$ or $X_{3}$ fail to produce the first transition, option D fails on the second transition, and option C introduces an extra update step not present in the given trajectory.", "answer": "$$\\boxed{A}$$"}, {"introduction": "The choice between synchronous and asynchronous updating is not a minor detail; it can fundamentally alter a network's behavior from the very first step. This practice provides a direct, side-by-side comparison of the two schemes acting on an identical initial state. By calculating the outcome for a single time step under both paradigms, you will see how the timing of information flow creates a critical fork in the network's path [@problem_id:1469482].", "id": "1469482", "problem": "In systems biology, Boolean networks are often used as simplified models for gene regulatory networks. Consider a small network involving three regulatory proteins (A, B, and C) and a target gene (D). The state of each component can be either active (1) or inactive (0).\n\nThe network's dynamics are governed by the following set of update rules, where the next state of a component is determined by the current states of others:\n- Protein A's next state is determined by protein C: $A_{\\text{next}} = C_{\\text{current}}$\n- Protein B's next state is determined by protein A: $B_{\\text{next}} = A_{\\text{current}}$\n- Protein C's next state is determined by protein B: $C_{\\text{next}} = B_{\\text{current}}$\n- Gene D's activity is a logical combination of the protein states: $D_{\\text{next}} = (A_{\\text{current}} \\text{ AND } B_{\\text{current}}) \\text{ OR } C_{\\text{current}}$\n\nAt time $t=0$, the system is in the following state: Protein A is active, Protein B is active, and Protein C is inactive. The state of gene D is consistent with these protein states at $t=0$.\n\nYour task is to determine the state of gene D at the next time step, $t=1$, under two different update schemes:\n1.  **Synchronous update**: All four components (A, B, C, and D) update their states simultaneously, based on the system's state at $t=0$.\n2.  **Asynchronous update**: The components update their states one by one in the fixed sequential order: A, then B, then C, then D. The new state of a component is used immediately in the calculation for the subsequent components in the sequence.\n\nLet $D_{\\text{sync}}$ be the state of gene D at $t=1$ under the synchronous scheme, and $D_{\\text{async}}$ be its state under the specified asynchronous scheme. Express your answer as a pair of values, $(D_{\\text{sync}}, D_{\\text{async}})$.\n\n", "solution": "We are given Boolean update rules:\n- $A_{\\text{next}} = C_{\\text{current}}$\n- $B_{\\text{next}} = A_{\\text{current}}$\n- $C_{\\text{next}} = B_{\\text{current}}$\n- $D_{\\text{next}} = (A_{\\text{current}} \\text{ AND } B_{\\text{current}}) \\text{ OR } C_{\\text{current}}$\n\nInitial condition at $t=0$: $A_{0}=1$, $B_{0}=1$, $C_{0}=0$. The statement says $D$ is consistent at $t=0$, so by the rule,\n$$\nD_{0} = (A_{0} \\text{ AND } B_{0}) \\text{ OR } C_{0} = (1 \\text{ AND } 1) \\text{ OR } 0 = 1 \\text{ OR } 0 = 1.\n$$\n\nSynchronous update (all next states computed from $t=0$ states):\n- $A_{1} = C_{0} = 0$.\n- $B_{1} = A_{0} = 1$.\n- $C_{1} = B_{0} = 1$.\n- $D_{1} = (A_{0} \\text{ AND } B_{0}) \\text{ OR } C_{0} = (1 \\text{ AND } 1) \\text{ OR } 0 = 1$.\nThus, $D_{\\text{sync}} = 1$.\n\nAsynchronous update in order $A \\rightarrow B \\rightarrow C \\rightarrow D$, using immediately updated values:\n- Start: $(A,B,C,D) = (1,1,0,1)$.\n- Update $A$: $A \\leftarrow C_{\\text{current}} = 0$, state becomes $(0,1,0,1)$.\n- Update $B$: $B \\leftarrow A_{\\text{current}} = 0$, state becomes $(0,0,0,1)$.\n- Update $C$: $C \\leftarrow B_{\\text{current}} = 0$, state remains $(0,0,0,1)$.\n- Update $D$: $D \\leftarrow (A_{\\text{current}} \\text{ AND } B_{\\text{current}}) \\text{ OR } C_{\\text{current}} = (0 \\text{ AND } 0) \\text{ OR } 0 = 0$.\nThus, $D_{\\text{async}} = 0$.\n\nTherefore, $(D_{\\text{sync}}, D_{\\text{async}}) = (1, 0)$.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 0 \\end{pmatrix}}$$"}, {"introduction": "Building on the single-step divergence, we now explore the long-term consequences of the update scheme on the network's global dynamics. This practice investigates whether a target state is ultimately reachable from a starting point, a question that depends on the available pathways in the state space. You will discover how asynchronous updating can unlock trajectories and lead to attractors that are entirely inaccessible under synchronous rules, thus reshaping the entire dynamical landscape of the system [@problem_id:1469545].", "id": "1469545", "problem": "Consider a simplified model of a gene regulatory network consisting of three genes, which we will label X, Y, and Z. The state of each gene can be either \"off\" (represented by the value 0) or \"on\" (represented by the value 1). The state of the entire system at any given time is described by the ordered triplet of the states of its genes, $(X, Y, Z)$.\n\nThe genes' states evolve according to the following set of logical rules:\n- The new state of gene X is determined by the logical OR of the old states of genes Y and Z. ($X_{\\text{new}} = Y_{\\text{old}} \\lor Z_{\\text{old}}$)\n- The new state of gene Y is a direct copy of the old state of gene X. ($Y_{\\text{new}} = X_{\\text{old}}$)\n- The new state of gene Z is also a direct copy of the old state of gene X. ($Z_{\\text{new}} = X_{\\text{old}}$)\n\nThe system is initially in the state $(0, 1, 0)$. We are interested in whether the system can ever reach the target state $(1, 1, 1)$. Analyze this possibility under two different schemes for updating the gene states:\n\n1.  **Synchronous Update:** All three genes update their states simultaneously at each discrete time step, based on the state of the system from the previous time step.\n2.  **Asynchronous Update:** At each time step, only one gene is chosen to update its state according to its rule. The choice of which gene to update at each step is not fixed and can vary. The target state is considered \"reachable\" if there exists at least one sequence of single-gene updates that transforms the initial state into the target state.\n\nWhich of the following statements correctly describes the reachability of the state $(1, 1, 1)$?\n\nA. The state $(1, 1, 1)$ is reachable under both synchronous and asynchronous updating.\nB. The state $(1, 1, 1)$ is reachable under synchronous updating, but not under asynchronous updating.\nC. The state $(1, 1, 1)$ is reachable under asynchronous updating, but not under synchronous updating.\nD. The state $(1, 1, 1)$ is not reachable under either synchronous or asynchronous updating.\n\n", "solution": "Let the Boolean state at discrete time $t$ be $(X_{t},Y_{t},Z_{t})\\in\\{0,1\\}^{3}$ with update rules\n$$\nX_{t+1}=Y_{t}\\lor Z_{t},\\qquad Y_{t+1}=X_{t},\\qquad Z_{t+1}=X_{t}.\n$$\nThe initial state is $(X_{0},Y_{0},Z_{0})=(0,1,0)$ and the target state is $(1,1,1)$.\n\nSynchronous update: All components update simultaneously from the previous state. From $(0,1,0)$,\n$$\nX_{1}=1\\lor 0=1,\\quad Y_{1}=0,\\quad Z_{1}=0 \\;\\Rightarrow\\; (X_{1},Y_{1},Z_{1})=(1,0,0).\n$$\nFrom $(1,0,0)$,\n$$\nX_{2}=0\\lor 0=0,\\quad Y_{2}=1,\\quad Z_{2}=1 \\;\\Rightarrow\\; (X_{2},Y_{2},Z_{2})=(0,1,1).\n$$\nFrom $(0,1,1)$,\n$$\nX_{3}=1\\lor 1=1,\\quad Y_{3}=0,\\quad Z_{3}=0 \\;\\Rightarrow\\; (X_{3},Y_{3},Z_{3})=(1,0,0).\n$$\nThus the synchronous trajectory enters the 2-cycle $(1,0,0)\\leftrightarrow(0,1,1)$ and never visits $(1,1,1)$ from the given initial state. Although $(1,1,1)$ is a fixed point (since $1\\lor 1=1$ and copies of $1$ remain $1$), it is not reachable synchronously from $(0,1,0)$.\n\nAsynchronous update: At each step, choose one gene to update using the current values of the other genes. We exhibit a sequence that reaches the target.\n- First update $X$ using the current $Y$ and $Z$:\n$$\nX\\leftarrow Y\\lor Z=1\\lor 0=1,\\quad \\text{state becomes }(1,1,0).\n$$\n- Next update $Z$ using the current $X$:\n$$\nZ\\leftarrow X=1,\\quad \\text{state becomes }(1,1,1).\n$$\nTherefore, there exists an asynchronous update sequence that reaches $(1,1,1)$ from $(0,1,0)$. (Note that other choices, such as updating $Y$ first to obtain $(0,0,0)$, lead to a different attractor, but reachability only requires existence of at least one successful sequence.)\n\nConsequently, the correct option is that the state is reachable under asynchronous updating but not under synchronous updating.", "answer": "$$\\boxed{C}$$"}]}