{"hands_on_practices": [{"introduction": "The most fundamental way to understand a discrete dynamical system is to simulate its evolution step by step. This practice allows you to trace the behavior of a simple genetic circuit over time, applying synchronous update rules to determine its state at each interval. By following the response of the circuit to a transient external signal, you will gain direct experience with how logical rules translate into dynamic behavior [@problem_id:1429384].", "problem": "Consider a simple synthetic genetic circuit engineered in a bacterium, consisting of two genes, an activator gene $G_A$ and a repressor gene $G_R$. The state of each gene (either expressed or not expressed) is modeled by a discrete Boolean variable at integer time steps $t = 0, 1, 2, \\dots$. Let $A(t)$ be the state of gene $G_A$ and $R(t)$ be the state of gene $G_R$ at time $t$. A value of 1 indicates the gene is expressed (active), and a value of 0 indicates it is not expressed (inactive).\n\nThe dynamics of this circuit are governed by the following synchronous update rules, which determine the state at time $t+1$ based on the state at time $t$:\n1.  The activator gene $G_A$ is turned on by an external chemical signal, $S(t)$, but its expression is prevented by the protein product of the repressor gene $G_R$. Specifically, $G_A$ becomes active at time $t+1$ if and only if the signal $S$ is present at time $t$ AND the repressor gene $G_R$ is inactive at time $t$.\n2.  The repressor gene $G_R$ is turned on by the protein product of the activator gene $G_A$. Specifically, $G_R$ becomes active at time $t+1$ if and only if the activator gene $G_A$ is active at time $t$.\n\nThe circuit starts in a fully inactive state, meaning at time $t=0$, we have $A(0)=0$ and $R(0)=0$.\nThe system is subjected to a transient pulse of the chemical signal. The signal is present only at times $t=1$ and $t=2$. That is, $S(t)=1$ for $t \\in \\{1, 2\\}$, and $S(t)=0$ for all other non-negative integer times.\n\nDetermine the state of the genetic circuit, represented by the ordered pair of values $(A(t), R(t))$, at time $t=4$.", "solution": "Let the synchronous Boolean update rules be\n$$A(t+1)=S(t)\\land \\lnot R(t), \\quad R(t+1)=A(t),$$\nwith initial state $A(0)=0$, $R(0)=0$, and signal $S(t)=1$ for $t\\in\\{1,2\\}$ and $S(t)=0$ otherwise.\n\nCompute step by step:\n- From $t=0$ to $t=1$: $S(0)=0$. The state is $(A(0),R(0))=(0,0)$. The next state is:\n$$A(1)=S(0)\\land \\lnot R(0) = 0 \\land \\lnot 0 = 0,\\quad R(1)=A(0)=0.$$\n- From $t=1$ to $t=2$: $S(1)=1$. The state is $(A(1),R(1))=(0,0)$. The next state is:\n$$A(2)=S(1)\\land \\lnot R(1) = 1 \\land \\lnot 0 = 1,\\quad R(2)=A(1)=0.$$\n- From $t=2$ to $t=3$: $S(2)=1$. The state is $(A(2),R(2))=(1,0)$. The next state is:\n$$A(3)=S(2)\\land \\lnot R(2) = 1 \\land \\lnot 0 = 1,\\quad R(3)=A(2)=1.$$\n- From $t=3$ to $t=4$: $S(3)=0$. The state is $(A(3),R(3))=(1,1)$. The next state is:\n$$A(4)=S(3)\\land \\lnot R(3) = 0 \\land \\lnot 1 = 0,\\quad R(4)=A(3)=1.$$\n\nTherefore, at time $t=4$ the state is $(A(4),R(4))=(0,1)$.", "answer": "$$\\boxed{\\begin{pmatrix}0 & 1\\end{pmatrix}}$$", "id": "1429384"}, {"introduction": "Biological networks can appear complex, but not all apparent connections are equally meaningful. This exercise introduces the concept of redundancy, where an input in a model has no actual effect on the outcome. By using Boolean algebra to simplify a given regulatory rule, you will learn to identify which inputs are essential and which are superfluous, a key skill in simplifying models to reveal their core logic [@problem_id:1429447].", "problem": "A systems biologist is studying a simplified gene regulatory network that determines whether a progenitor cell commits to one of two distinct fates. The decision is governed by a target gene, `FateGene`, whose expression state at the next discrete time step, $F(t+1)$, is controlled by the current expression states of three transcription factor genes: `TF_A`, `TF_B`, and `TF_C`. The state of a gene is represented by a Boolean variable, where `1` signifies the gene is expressed and `0` signifies it is not. The logical update rule derived from experimental data for `FateGene` is given as:\n$$F(t+1) = (A(t) \\land B(t)) \\lor (A(t) \\land \\lnot B(t))$$\nHere, $A(t)$, $B(t)$, and $C(t)$ are the respective states of the transcription factor genes `TF_A`, `TF_B`, and `TF_C` at time $t$. A transcription factor gene is considered redundant if its expression state has no influence on the resulting state of `FateGene` for any possible combination of the input states.\n\nBased on this model, which of the transcription factor genes are redundant?\n\nA. `TF_A` only\n\nB. `TF_B` only\n\nC. `TF_C` only\n\nD. `TF_B` and `TF_C`\n\nE. `TF_A` and `TF_C`\n\nF. None of the genes are redundant.\n\nG. All three genes (`TF_A`, `TF_B`, `TF_C`) are redundant.", "solution": "We are given the Boolean update rule\n$$F(t+1) = (A(t) \\land B(t)) \\lor (A(t) \\land \\lnot B(t)),$$\nwhere $A(t)$, $B(t)$, and $C(t)$ are the states of $TF\\_A$, $TF\\_B$, and $TF\\_C$, respectively, at time $t$. A transcription factor is redundant if its state does not affect $F(t+1)$ for any possible combination of the inputs.\n\nFirst, simplify the Boolean expression using the distributive law of Boolean algebra:\n$$X \\land Y \\lor X \\land Z = X \\land (Y \\lor Z).$$\nLet $X = A(t)$, $Y = B(t)$, and $Z = \\lnot B(t)$. Then\n$$F(t+1) = A(t) \\land \\big(B(t) \\lor \\lnot B(t)\\big).$$\nApply the complement law $p \\lor \\lnot p = 1$:\n$$B(t) \\lor \\lnot B(t) = 1.$$\nThen use the identity law $p \\land 1 = p$:\n$$F(t+1) = A(t).$$\n\nFrom this simplified form, $F(t+1)$ depends only on $A(t)$ and is independent of both $B(t)$ and $C(t)$:\n- $TF\\_B$ is redundant because for any fixed $A(t)$, changing $B(t)$ does not change $F(t+1)$.\n- $TF\\_C$ is redundant because it does not appear in the rule and has no influence on $F(t+1)$ for any inputs.\n\n$TF\\_A$ is not redundant because changing $A(t)$ directly changes $F(t+1)$.\n\nTherefore, the redundant transcription factor genes are $TF\\_B$ and $TF\\_C$.", "answer": "$$\\boxed{D}$$", "id": "1429447"}, {"introduction": "Discrete update rules give rise to global, system-level behaviors called attractors, such as stable fixed points or oscillations. This practice explores the stability of these attractors by asking what happens when a system is 'knocked off' its normal course by a perturbation. You will determine if the system returns to its original rhythm or settles into a completely new state, illustrating the crucial concepts of stability and basins of attraction that govern biological switches [@problem_id:1429422].", "problem": "A simplified model for a biological switch is described by a discrete-time dynamical system with two nodes, $X$ and $Y$. The state of each node can be either 0 (inactive) or 1 (active), so the overall system state is an ordered pair $(X, Y)$. The states are updated synchronously at each time step according to the following logical rules:\n\n- The next state of node X is determined by the current state of node Y: $X_{t+1} = Y_t$.\n- The next state of node Y is determined by a combination of the current states of both nodes: $Y_{t+1} = X_t \\lor (\\lnot Y_t)$.\n\nThe system is known to operate in a stable oscillatory mode, which represents a biological rhythm. At a particular time $t_p$, the system is observed to be in the state $(0, 1)$. Immediately after this observation, a perturbation is applied that flips the state of node $X$ from 0 to 1, while leaving node $Y$ unchanged.\n\nWhat is the long-term behavior of the system following this perturbation?\n\nA. The system eventually returns to its original oscillatory mode.\n\nB. The system enters a new oscillatory mode with a different period.\n\nC. The system settles into a stable fixed point, where the state no longer changes.\n\nD. The system briefly deviates but returns to the state $(0,1)$ within one time step and continues its original oscillation.\n\nE. The system's behavior becomes non-repeating.", "solution": "The problem asks for the long-term behavior of a discrete dynamical system after a perturbation. To solve this, we must first characterize the system's behavior before the perturbation and then trace its evolution from the new, perturbed state.\n\nThe system's state is $(X, Y)$ and the update rules are:\n1.  $X_{t+1} = Y_t$\n2.  $Y_{t+1} = X_t \\lor (\\lnot Y_t)$\n\n**Step 1: Characterize the original \"stable oscillatory mode\"**\n\nThe problem states the system is in an oscillatory mode and is observed in the state $(0, 1)$ at time $t_p$. Let's trace the state transitions starting from $(0, 1)$ to understand this oscillation.\n\n-   **Current State at $t_p$**: $(X_t, Y_t) = (0, 1)$\n-   **Next State at $t_p+1$**:\n    -   $X_{t+1} = Y_t = 1$\n    -   $Y_{t+1} = X_t \\lor (\\lnot Y_t) = 0 \\lor (\\lnot 1) = 0 \\lor 0 = 0$\n    -   The state becomes $(1, 0)$.\n\n-   **State at $t_p+2$**: Starting from $(1, 0)$:\n    -   $X_{t+2} = Y_{t+1} = 0$\n    -   $Y_{t+2} = X_{t+1} \\lor (\\lnot Y_{t+1}) = 1 \\lor (\\lnot 0) = 1 \\lor 1 = 1$\n    -   The state becomes $(0, 1)$.\n\nThe system follows the sequence $(0, 1) \\to (1, 0) \\to (0, 1) \\to \\dots$. This is a stable limit cycle with a period of 2. This is the \"stable oscillatory mode\" mentioned in the problem.\n\n**Step 2: Determine the perturbed state**\n\nAt time $t_p$, the system is in state $(0, 1)$. A perturbation flips the state of node X from 0 to 1, while node Y remains unchanged.\n\n-   Original state at $t_p$: $(0, 1)$\n-   Perturbed state: $(1, 1)$\n\nThe perturbation forces the system into the state $(1, 1)$. This state is not part of the original limit cycle.\n\n**Step 3: Trace the long-term behavior from the perturbed state**\n\nNow we must determine the trajectory of the system starting from this new state, $(1, 1)$. Let's call the time of perturbation $t_{pert}$.\n\n-   **State at $t_{pert}$**: $(X, Y) = (1, 1)$\n-   **State at $t_{pert}+1$**:\n    -   $X_{\\text{new}} = Y_{\\text{old}} = 1$\n    -   $Y_{\\text{new}} = X_{\\text{old}} \\lor (\\lnot Y_{\\text{old}}) = 1 \\lor (\\lnot 1) = 1 \\lor 0 = 1$\n    -   The next state is $(1, 1)$.\n\nSince the state $(1, 1)$ maps to itself, it is a stable fixed point. Once the system enters this state, it will remain there for all subsequent time steps.\n\n**Step 4: Conclusion**\n\nThe perturbation knocks the system out of its original 2-state limit cycle and into the basin of attraction of a different attractor. This new attractor is the fixed point $(1, 1)$. Therefore, the long-term behavior of the system is to settle into this stable fixed point and cease oscillating.\n\nComparing this conclusion with the given options:\n- A. The system eventually returns to its original oscillatory mode. (Incorrect)\n- B. The system enters a new oscillatory mode with a different period. (Incorrect, it stops oscillating)\n- C. The system settles into a stable fixed point, where the state no longer changes. (Correct)\n- D. The system briefly deviates but returns to the state $(0,1)$ within one time step and continues its original oscillation. (Incorrect)\n- E. The system's behavior becomes non-repeating. (Incorrect, it becomes constant)\n\nThe correct answer is C.", "answer": "$$\\boxed{C}$$", "id": "1429422"}]}