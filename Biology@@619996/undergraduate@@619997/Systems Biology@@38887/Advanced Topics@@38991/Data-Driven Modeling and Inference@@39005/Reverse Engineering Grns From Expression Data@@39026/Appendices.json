{"hands_on_practices": [{"introduction": "The first step in reverse engineering a gene regulatory network (GRN) is often to identify which genes behave similarly across different conditions. One of the most fundamental ways to measure this is by calculating the Pearson correlation coefficient, which quantifies the linear relationship between the expression profiles of two genes. This exercise [@problem_id:1463682] provides hands-on practice with this foundational statistical technique, allowing you to compute the degree of co-expression from a small, hypothetical dataset.", "problem": "A systems biologist is investigating a potential link between two genes, `ATF1` and `HSP2`, as part of an effort to model the Gene Regulatory Network (GRN) of a plant species under drought stress. Gene expression levels were quantified under five different experimental conditions (control, mild stress, moderate stress, severe stress, and recovery).\n\nThe normalized expression levels for `ATF1` across the five conditions were recorded as the sequence of values $X = (2.0, 4.0, 5.0, 8.0, 6.0)$.\nThe corresponding expression levels for `HSP2` under the same five conditions were recorded as the sequence of values $Y = (3.0, 5.0, 7.0, 10.0, 5.0)$.\n\nTo assess the degree of linear co-expression between `ATF1` and `HSP2`, calculate the Pearson correlation coefficient of their expression profiles. Round your final answer to three significant figures.", "solution": "The Pearson correlation coefficient between two variables with paired samples $(x_{i},y_{i})$ for $i=1,\\dots,n$ is defined by\n$$\nr=\\frac{\\sum_{i=1}^{n}\\left(x_{i}-\\bar{x}\\right)\\left(y_{i}-\\bar{y}\\right)}{\\sqrt{\\left(\\sum_{i=1}^{n}\\left(x_{i}-\\bar{x}\\right)^{2}\\right)\\left(\\sum_{i=1}^{n}\\left(y_{i}-\\bar{y}\\right)^{2}\\right)}}.\n$$\nFor $X=(2.0,4.0,5.0,8.0,6.0)$ and $Y=(3.0,5.0,7.0,10.0,5.0)$ with $n=5$, first compute the means:\n$$\n\\bar{x}=\\frac{2.0+4.0+5.0+8.0+6.0}{5}=\\frac{25.0}{5}=5.0,\\qquad\n\\bar{y}=\\frac{3.0+5.0+7.0+10.0+5.0}{5}=\\frac{30.0}{5}=6.0.\n$$\nCompute deviations and their products and squares:\n- For $(2.0,3.0)$: $(x_{1}-\\bar{x},y_{1}-\\bar{y})=(-3.0,-3.0)$ gives product $9.0$, squares $9.0$ and $9.0$.\n- For $(4.0,5.0)$: $(-1.0,-1.0)$ gives product $1.0$, squares $1.0$ and $1.0$.\n- For $(5.0,7.0)$: $(0.0,1.0)$ gives product $0.0$, squares $0.0$ and $1.0$.\n- For $(8.0,10.0)$: $(3.0,4.0)$ gives product $12.0$, squares $9.0$ and $16.0$.\n- For $(6.0,5.0)$: $(1.0,-1.0)$ gives product $-1.0$, squares $1.0$ and $1.0$.\nThus,\n$$\n\\sum_{i=1}^{5}(x_{i}-\\bar{x})(y_{i}-\\bar{y})=9.0+1.0+0.0+12.0-1.0=21.0,\n$$\n$$\n\\sum_{i=1}^{5}(x_{i}-\\bar{x})^{2}=9.0+1.0+0.0+9.0+1.0=20.0,\\qquad\n\\sum_{i=1}^{5}(y_{i}-\\bar{y})^{2}=9.0+1.0+1.0+16.0+1.0=28.0.\n$$\nTherefore,\n$$\nr=\\frac{21.0}{\\sqrt{20.0\\times 28.0}}=\\frac{21}{\\sqrt{560}}=\\frac{21}{4\\sqrt{35}}\\approx 0.887041\\ldots\n$$\nRounding to three significant figures gives $0.887$.", "answer": "$$\\boxed{0.887}$$", "id": "1463682"}, {"introduction": "Gene regulation often involves complex, switch-like logic that goes beyond simple linear associations. To capture these dynamics, we can use Boolean models, where genes and transcription factors are either 'ON' ($1$) or 'OFF' ($0$). This practice [@problem_id:1463718] challenges you to work backward from experimental outcomes to deduce the precise logical rule—such as AND, OR, or NOT—governing a target gene's expression, a core skill in discrete modeling of GRNs.", "problem": "A systems biologist is investigating a small Gene Regulatory Network (GRN) within a bacterial species. This network consists of three transcription factors, TF-A, TF-B, and TF-C, which are suspected to regulate a target gene, Gene G. To understand the regulatory logic, the biologist conducts a series of experiments where the presence or absence of each transcription factor is controlled, and the resulting expression of Gene G is observed. In this simplified Boolean model, a state of '1' signifies presence or expression (ON), while '0' signifies absence or non-expression (OFF). The compiled experimental data is shown in the table below:\n\n| Experiment Number | TF-A State | TF-B State | TF-C State | Gene G State |\n| :---: | :---: | :---: | :---: | :---: |\n| 1 | 0 | 0 | 0 | 0 |\n| 2 | 0 | 0 | 1 | 0 |\n| 3 | 0 | 1 | 0 | 0 |\n| 4 | 0 | 1 | 1 | 0 |\n| 5 | 1 | 0 | 0 | 1 |\n| 6 | 1 | 0 | 1 | 1 |\n| 7 | 1 | 1 | 0 | 0 |\n| 8 | 1 | 1 | 1 | 0 |\n\nYour task is to reverse-engineer the logical rule that governs the expression of Gene G based on the states of the transcription factors. Let $A$, $B$, and $C$ represent the Boolean states of TF-A, TF-B, and TF-C, respectively. The logical AND operator is denoted by multiplication (e.g., $A*B$), the OR operator is denoted by addition (e.g., $A+B$), and the NOT operator is denoted by a prime symbol (e.g., $A'$).\n\nWhich one of the following Boolean expressions accurately represents the state of Gene G as a function of the transcription factor states?\n\nA. $G = A + B'$\n\nB. $G = A * C$\n\nC. $G = (A * B)'$\n\nD. $G = A * B'$\n\nE. $G = B + C'$\n\nF. $G = A + C$", "solution": "We read off from the truth table the input combinations for which Gene G is ON. From the data, $G=1$ occurs exactly for $(A,B,C)=(1,0,0)$ and $(1,0,1)$. Writing the canonical sum-of-minterms using $A$ as the most significant bit gives:\n$$\nG(A,B,C)=A B' C' + A B' C.\n$$\nFactor the common term $A B'$:\n$$\nG = A B' (C' + C).\n$$\nApply the complementarity law $C' + C = 1$:\n$$\nG = A B' \\cdot 1.\n$$\nApply the identity law $X \\cdot 1 = X$:\n$$\nG = A B'.\n$$\nThus, the Boolean rule is independent of $C$ and equals $A B'$, which corresponds to option D. A quick verification against all experiments confirms that $G=1$ precisely when $A=1$ and $B=0$, and $G=0$ otherwise, matching the table.", "answer": "$$\\boxed{D}$$", "id": "1463718"}, {"introduction": "No computational model is perfect, so a critical part of reverse engineering is evaluating how well an inferred network matches biological reality. This is done by comparing the model's predictions to a known \"gold-standard\" network and classifying each inferred interaction. This essential exercise [@problem_id:1463707] introduces the fundamental concepts of true positives, false positives, and false negatives, giving you the vocabulary and framework needed to critically assess the performance of any GRN inference algorithm.", "problem": "A systems biologist is evaluating the performance of a new computational algorithm designed to infer Gene Regulatory Networks (GRNs) from experimental data. The algorithm's accuracy is being benchmarked against a small, well-characterized \"gold-standard\" network, which represents the true biological regulatory interactions.\n\nThe gold-standard network consists of three genes, let's call them $G_1$, $G_2$, and $G_3$. The set of true directed interactions, denoted as $T$, is given by:\n$$T = \\{ (G_1, G_2), (G_2, G_3) \\}$$\nHere, an ordered pair $(G_i, G_j)$ signifies that the protein product of gene $G_i$ regulates the expression of gene $G_j$.\n\nAfter processing gene expression data from an experiment, the algorithm proposes an inferred network. The set of inferred interactions, denoted as $I$, is:\n$$I = \\{ (G_1, G_2), (G_1, G_3) \\}$$\n\nIn the context of network inference evaluation, a \"false positive\" is an inferred interaction that does not exist in the true network, and a \"false negative\" is a true interaction that the algorithm failed to infer.\n\nBased on the comparison of the inferred set $I$ with the true set $T$, which of the following statements is correct?\n\nA. The interaction $(G_1, G_3)$ is a false negative, and the interaction $(G_2, G_3)$ is a false positive.\n\nB. The interaction $(G_1, G_2)$ is a false positive, and the interaction $(G_2, G_3)$ is a false negative.\n\nC. The interaction $(G_1, G_3)$ is a false positive, and the interaction $(G_2, G_3)$ is a false negative.\n\nD. The interaction $(G_1, G_2)$ is a true positive, and the interaction $(G_1, G_3)$ is a false negative.\n\nE. Both $(G_1, G_3)$ and $(G_2, G_3)$ are false positives.", "solution": "We are given the true interaction set $T = \\{(G_{1}, G_{2}), (G_{2}, G_{3})\\}$ and the inferred interaction set $I = \\{(G_{1}, G_{2}), (G_{1}, G_{3})\\}$. By definition:\n- A true positive is any interaction in $I \\cap T$.\n- A false positive is any interaction in $I \\setminus T$.\n- A false negative is any interaction in $T \\setminus I$.\n\nCompute each set explicitly:\n$$I \\cap T = \\{(G_{1}, G_{2})\\}$$\n$$I \\setminus T = \\{(G_{1}, G_{3})\\}$$\n$$T \\setminus I = \\{(G_{2}, G_{3})\\}$$\n\nTherefore, $(G_{1}, G_{2})$ is a true positive, $(G_{1}, G_{3})$ is a false positive, and $(G_{2}, G_{3})$ is a false negative. Among the provided options, this corresponds exactly to option C.\n\nFor completeness, the other options misclassify at least one edge:\n- A incorrectly labels $(G_{1}, G_{3})$ as a false negative and $(G_{2}, G_{3})$ as a false positive.\n- B incorrectly labels $(G_{1}, G_{2})$ as a false positive.\n- D incorrectly labels $(G_{1}, G_{3})$ as a false negative.\n- E incorrectly labels $(G_{2}, G_{3})$ as a false positive.", "answer": "$$\\boxed{C}$$", "id": "1463707"}]}