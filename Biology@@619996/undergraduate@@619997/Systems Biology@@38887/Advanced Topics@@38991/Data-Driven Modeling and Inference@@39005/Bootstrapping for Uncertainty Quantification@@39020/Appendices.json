{"hands_on_practices": [{"introduction": "Before running your own simulations, it's crucial to understand how to interpret their results. This first practice exercise places you in the role of a systems biologist analyzing experimental data on bacterial persistence. You will work with the output of a completed bootstrap analysis to extract a confidence interval, a fundamental task that demonstrates how this method provides a robust estimate of uncertainty, which is especially valuable when dealing with small datasets that may not follow a normal distribution. [@problem_id:1420137]", "problem": "A systems biology researcher is investigating bacterial persistence, a phenomenon where a small fraction of a microbial population survives a lethal dose of an antibiotic. The researcher conducts an experiment with eight replicate cultures of *Escherichia coli*. Each culture is treated with a high concentration of ampicillin, and after a set period, the survival fraction is determined by counting the remaining Colony-Forming Units (CFUs). The following eight survival fractions were measured:\n$$ \\{1.72, 1.41, 1.55, 3.15, 1.63, 1.88, 1.39, 1.61\\} \\times 10^{-5} $$\nTo quantify the uncertainty in the estimation of the true mean survival fraction from this small and non-normally distributed dataset, a computational bootstrap analysis was performed. This analysis involved generating $B=10,000$ bootstrap resamples from the original data and calculating the mean of each resample. This created a distribution of 10,000 bootstrap means. After sorting these means in ascending order, key values from the sorted list were recorded. The values at specific ranks in the sorted list are as follows:\n- 250th value: $1.59 \\times 10^{-5}$\n- 500th value: $1.64 \\times 10^{-5}$\n- 9500th value: $2.31 \\times 10^{-5}$\n- 9750th value: $2.42 \\times 10^{-5}$\n\nUsing this information from the bootstrap analysis, determine the 90% confidence interval for the mean survival fraction using the percentile method. Provide the lower and upper bounds of this interval. Express your final answers for the lower and upper bounds in units of $10^{-5}$, and round each to three significant figures.", "solution": "We want a 90% confidence interval for the mean using the bootstrap percentile method. Let $B$ be the number of bootstrap resamples and let $\\{\\bar{x}^{*(1)},\\ldots,\\bar{x}^{*(B)}\\}$ denote the bootstrap means sorted in ascending order. For a two-sided percentile interval with nominal coverage $1-\\alpha=0.90$, the lower and upper bounds are taken at the empirical quantiles $p_{\\text{lower}}=\\alpha/2$ and $p_{\\text{upper}}=1-\\alpha/2$ of the sorted bootstrap distribution:\n$$\n\\text{CI}_{\\text{percentile}}=\\left[\\bar{x}^{*}_{(\\lfloor p_{\\text{lower}} B \\rfloor)}\\,,\\,\\bar{x}^{*}_{(\\lceil p_{\\text{upper}} B \\rceil)}\\right].\n$$\nHere $B=10000$ and $\\alpha=0.10$, so\n$$\np_{\\text{lower}}=0.05,\\quad p_{\\text{upper}}=0.95,\\quad p_{\\text{lower}} B=500,\\quad p_{\\text{upper}} B=9500.\n$$\nThe problem provides the exact sorted bootstrap values at these ranks:\n- 500th value (the 0.05 quantile): $1.64 \\times 10^{-5}$,\n- 9500th value (the 0.95 quantile): $2.31 \\times 10^{-5}$.\nTherefore, the 90% bootstrap percentile confidence interval for the mean survival fraction is\n$$\n\\left[1.64 \\times 10^{-5},\\,2.31 \\times 10^{-5}\\right].\n$$\nExpressing these bounds in units of $10^{-5}$ gives the pair $\\left(1.64,\\,2.31\\right)$, already to three significant figures.", "answer": "$$\\boxed{\\begin{pmatrix}1.64 & 2.31\\end{pmatrix}}$$", "id": "1420137"}, {"introduction": "Bootstrapping can feel like a purely computational method, but it is deeply rooted in the principles of probability. This next problem explores that connection in the context of a modern high-throughput experiment in protein engineering. By thinking through the process of resampling, you will discover that the seemingly complex simulation can sometimes be described by a simple, elegant analytical model, deepening your intuition for the statistical foundation of the bootstrap method. [@problem_id:1420152]", "problem": "A systems biology laboratory is investigating the functional consequences of single amino acid substitutions in a particular enzyme using Deep Mutational Scanning (DMS). This high-throughput experiment yields a continuous \"fitness score,\" $s$, for each mutation. A fitness score of $s=0$ indicates a neutral mutation (no effect on function), $s<0$ indicates a deleterious mutation, and $s>0$ indicates a beneficial mutation.\n\nDue to inherent experimental noise and the resolution of the assay, any mutation with a fitness score $s$ in the range $|s| \\le 0.05$ is considered to be functionally neutral. In a pilot experiment, the following 25 fitness scores were measured for 25 distinct mutations:\n$S = [-1.21, -0.99, -0.87, -0.65, -0.53, -0.48, -0.33, -0.29, -0.21, -0.15, -0.11, -0.08, -0.04, -0.02, 0.01, 0.03, 0.04, 0.07, 0.10, 0.14, 0.22, 0.35, 0.58, 0.91, 1.15]$\n\nTo quantify the statistical uncertainty of the proportion of neutral mutations based on this limited sample, you are tasked with performing a resampling analysis. Specifically, your goal is to determine the 95% confidence interval for the true fraction of neutral mutations. To achieve this, you should conceptualize the generation of $B=10000$ resampled datasets. Each resampled dataset is constructed by drawing 25 fitness scores *with replacement* from the original dataset $S$. For each of these $10000$ resampled datasets, one would compute the fraction of neutral mutations. The 95% confidence interval is then given by the 2.5th and 97.5th percentiles of the resulting distribution of these 10000 fractions.\n\nCalculate the lower and upper bounds of this 95% confidence interval. Report your answer as a pair of values, with the lower bound first, rounded to three significant figures.", "solution": "We first classify each fitness score $s \\in S$ as neutral if $|s| \\leq 0.05$. In the given list,\n$$S = [-1.21, -0.99, -0.87, -0.65, -0.53, -0.48, -0.33, -0.29, -0.21, -0.15, -0.11, -0.08, -0.04, -0.02, 0.01, 0.03, 0.04, 0.07, 0.10, 0.14, 0.22, 0.35, 0.58, 0.91, 1.15],$$\nthe neutral scores are $-0.04, -0.02, 0.01, 0.03, 0.04$, so the neutral count is $c=5$ out of $n=25$ total. The observed neutral fraction is\n$$\\hat{p} = \\frac{c}{n} = \\frac{5}{25} = 0.2.$$\n\nIn the bootstrap procedure, each resampled dataset is constructed by drawing $n=25$ scores with replacement from $S$. Each draw is from the empirical distribution that places mass $1/n$ on each observed score; hence the probability a draw is neutral equals $\\hat{p}$. Therefore, the number of neutral mutations $K$ in one bootstrap resample follows\n$$K \\sim \\operatorname{Binomial}(n, \\hat{p}), \\quad \\text{with } n=25, \\ \\hat{p}=0.2.$$\nThe bootstrap distribution of the neutral fraction is $K/n$. The 95% bootstrap percentile interval corresponds to the $0.025$ and $0.975$ quantiles of $K/n$, i.e., values $k_{\\mathrm{L}}$ and $k_{\\mathrm{U}}$ such that\n$$\\Pr(K \\leq k_{\\mathrm{L}}) \\geq 0.025 \\ \\text{and} \\ \\Pr(K \\leq k_{\\mathrm{L}}-1) < 0.025,$$\n$$\\Pr(K \\leq k_{\\mathrm{U}}) \\geq 0.975 \\ \\text{and} \\ \\Pr(K \\leq k_{\\mathrm{U}}-1) < 0.975.$$\n\nThe binomial probabilities are\n$$\\Pr(K=k) = \\binom{25}{k} (0.2)^{k} (0.8)^{25-k}.$$\nCompute the lower tail using $P_k=\\Pr(K=k)$ and the recursion\n$$\\frac{P_{k+1}}{P_k} = \\frac{25-k}{k+1} \\cdot \\frac{0.2}{0.8} = \\frac{25-k}{k+1} \\cdot 0.25.$$\nStart from\n$$P_0 = 0.8^{25} \\approx 0.003776,$$\n$$P_1 = P_0 \\cdot 25 \\cdot 0.25 \\approx 0.0236,$$\nso\n$$\\Pr(K \\leq 0) \\approx 0.003776 < 0.025,\\quad \\Pr(K \\leq 1) \\approx 0.003776 + 0.0236 = 0.0274 \\geq 0.025.$$\nThus $k_{\\mathrm{L}}=1$, giving the lower bound $k_{\\mathrm{L}}/n = 1/25 = 0.04$.\n\nFor the upper tail, continue cumulative sums:\n$$P_2 = 3 P_1 \\approx 0.0708,\\ \\ P_3 \\approx 0.1356,\\ \\ P_4 \\approx 0.1865,\\ \\ P_5 \\approx 0.1958,$$\n$$P_6 \\approx 0.1631,\\ \\ P_7 \\approx 0.1107,\\ \\ P_8 \\approx 0.06227,\\ \\ P_9 \\approx 0.02941.$$\nCumulative probabilities:\n$$\\Pr(K \\leq 8) \\approx 0.9521 < 0.975,\\quad \\Pr(K \\leq 9) \\approx 0.9815 \\geq 0.975.$$\nHence $k_{\\mathrm{U}}=9$, giving the upper bound $k_{\\mathrm{U}}/n = 9/25 = 0.36$.\n\nTherefore, the 95% confidence interval for the true fraction of neutral mutations, using the bootstrap percentile method described, is $[0.04, 0.36]$. Rounded to three significant figures, this is $[0.0400, 0.360]$.", "answer": "$$\\boxed{\\begin{pmatrix} 0.0400 & 0.360 \\end{pmatrix}}$$", "id": "1420152"}, {"introduction": "The most effective way to master an algorithm is to build it from scratch. This final exercise challenges you to move from user to creator by implementing the bootstrap and its cousin, the jackknife, in a programming environment. Starting from first principles and using only a basic random number generator, you will construct a complete workflow for uncertainty quantification, solidifying your understanding of the mechanics behind these indispensable statistical tools. [@problem_id:2404323]", "problem": "You must write a complete program that implements nonparametric resampling for uncertainty quantification in the following sense. Given a finite dataset $\\{x_{1},x_{2},\\dots,x_{n}\\}$ of real numbers and a statistic $T$ that maps any finite sequence of real numbers to a real number, your goal is to compute two uncertainty quantification measures: the bootstrap standard error and the jackknife standard error of $T$ on the given dataset, and a bootstrap percentile confidence interval (CI). The implementation must use only a source of independent draws $U \\sim \\mathrm{Uniform}(0,1)$ to perform bootstrap resampling; no built-in sampling function that directly samples indices or elements with replacement may be used. The correctness of the bootstrap index sampling must follow from the following fact: if $U \\sim \\mathrm{Uniform}(0,1)$ and $n \\in \\mathbb{N}$ is the dataset size, then the integer $J=\\lfloor n U \\rfloor$ is uniformly distributed on $\\{0,1,\\dots,n-1\\}$, that is, $\\mathbb{P}(J=k)=1/n$ for each integer $k \\in \\{0,1,\\dots,n-1\\}$. Use this fact to map independent draws of $U$ to independent bootstrap indices. You must not call any function that directly samples elements or indices with replacement. Use the following foundational definitions as your starting point. For a chosen statistic $T$, the bootstrap procedure forms $B$ bootstrap replicates by drawing, for each replicate $b \\in \\{1,2,\\dots,B\\}$, a resample of size $n$ by sampling indices with replacement from $\\{0,1,\\dots,n-1\\}$ and computing $T$ on that resample. Denote these bootstrap statistics by $\\{\\hat{\\theta}_{b}\\}_{b=1}^{B}$. The bootstrap standard error is the sample standard deviation of $\\{\\hat{\\theta}_{b}\\}_{b=1}^{B}$, namely $s_{\\mathrm{boot}}=\\sqrt{\\frac{1}{B-1}\\sum_{b=1}^{B}\\left(\\hat{\\theta}_{b}-\\bar{\\theta}\\right)^{2}}$ with $\\bar{\\theta}=\\frac{1}{B}\\sum_{b=1}^{B}\\hat{\\theta}_{b}$. The bootstrap percentile confidence interval at nominal level $1-\\alpha$ is defined by the empirical quantiles of $\\{\\hat{\\theta}_{b}\\}$ at probabilities $p_{\\ell}=\\alpha/2$ and $p_{u}=1-\\alpha/2$. To avoid ambiguity, define the empirical quantile at probability $p \\in [0,1]$ as follows: if $t_{(1)} \\le t_{(2)} \\le \\dots \\le t_{(B)}$ are the sorted bootstrap values, then $q_{p}=t_{(k)}$ with $k=\\lceil p B \\rceil$ and the convention that $k$ is clipped to the range $\\{1,2,\\dots,B\\}$ if $p$ is $0$ or $1$. For the jackknife, define the leave-one-out statistics $\\{\\hat{\\theta}_{(i)}\\}_{i=1}^{n}$ where $\\hat{\\theta}_{(i)}=T(x_{1},\\dots,x_{i-1},x_{i+1},\\dots,x_{n})$ is computed on the dataset with $x_{i}$ omitted. Let $\\bar{\\theta}_{\\mathrm{jack}}=\\frac{1}{n}\\sum_{i=1}^{n}\\hat{\\theta}_{(i)}$. The jackknife standard error is $s_{\\mathrm{jack}}=\\sqrt{\\frac{n-1}{n}\\sum_{i=1}^{n}\\left(\\hat{\\theta}_{(i)}-\\bar{\\theta}_{\\mathrm{jack}}\\right)^{2}}$. Your program must implement these definitions exactly. Implement the following statistics $T$ on a finite array of real numbers: the sample mean and the sample median, where the median for even length is the average of the two central order statistics. You must not use any built-in resampling function such as a direct choice-with-replacement routine; all bootstrap indices must be produced by transforming independent draws from $\\mathrm{Uniform}(0,1)$ using $J=\\lfloor n U \\rfloor$. Use the following test suite. For each test case, you are given a dataset, a statistic choice, the number of bootstrap replicates $B$, a nominal tail probability $\\alpha$, and a random seed. For each test case, compute and return in order four values: the bootstrap standard error $s_{\\mathrm{boot}}$, the jackknife standard error $s_{\\mathrm{jack}}$, and the lower and upper bounds $(q_{\\ell},q_{u})$ of the bootstrap percentile confidence interval at level $1-\\alpha$ using the quantile definition above. The test suite is:\n- Case $1$: data $[1.2,2.0,3.4,2.2]$, statistic mean, $B=5000$, $\\alpha=0.1$, seed $=12345$.\n- Case $2$: data $[5.0,5.0,5.0,5.0,5.0]$, statistic median, $B=3000$, $\\alpha=0.2$, seed $=2468$.\n- Case $3$: data $[0.2,0.5,1.1,2.8,4.0,7.5,9.0]$, statistic median, $B=6000$, $\\alpha=0.1$, seed $=13579$.\n- Case $4$: data $[0.2,0.5,1.1,2.8,4.0,7.5,9.0]$, statistic mean, $B=6000$, $\\alpha=0.05$, seed $=98765$.\nYour program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets. The list must contain $16$ real numbers in this order: for Case $1$, output $s_{\\mathrm{boot}}$, $s_{\\mathrm{jack}}$, $q_{\\ell}$, $q_{u}$; then for Case $2$ in the same order; then for Case $3$; then for Case $4$. For numerical stability and to make the results directly comparable, round each output value to exactly $6$ decimal places. No physical units are involved. Angles are not involved. Percentages must be expressed as decimals, so $\\alpha$ is provided directly as a number in $[0,1]$ and you must not print any percentage signs.", "solution": "The problem is valid. It presents a clear, self-contained, and scientifically sound task in computational statistics. All definitions, data, and parameters are provided unambiguously, allowing for a direct and verifiable implementation. The core of the problem is to implement two nonparametric resampling techniques—the bootstrap and the jackknife—to estimate the uncertainty of a given statistic.\n\nThe solution proceeds by first defining the necessary statistical functions and then implementing the resampling procedures as specified.\n\n**1. Statistical Preliminaries**\n\nGiven a dataset $X = \\{x_{1}, x_{2}, \\dots, x_{n}\\}$ of size $n$, and a statistic $T$, our objective is to quantify the uncertainty in the estimate $\\hat{\\theta} = T(X)$.\n\nThe problem requires implementing two specific statistics:\n- **Sample Mean**: For a dataset $\\{y_1, \\dots, y_k\\}$, the mean is $\\bar{y} = \\frac{1}{k}\\sum_{i=1}^{k} y_i$.\n- **Sample Median**: For an ordered dataset $y_{(1)} \\le y_{(2)} \\le \\dots \\le y_{(k)}$, the median is defined as $y_{((k+1)/2)}$ if $k$ is odd, and $\\frac{1}{2}(y_{(k/2)} + y_{(k/2+1)})$ if $k$ is even.\n\n**2. Bootstrap Procedure**\n\nThe bootstrap method estimates the sampling distribution of $\\hat{\\theta}$ by repeatedly sampling from the given dataset.\n\n- **Resampling**: The procedure involves generating $B$ bootstrap replicates. For each replicate $b \\in \\{1, 2, \\dots, B\\}$, we construct a bootstrap sample $X^{*b}$ of size $n$ by drawing indices with replacement from $\\{0, 1, \\dots, n-1\\}$. The problem mandates a specific method for this: for each position in the bootstrap sample, an index $J \\in \\{0, 1, \\dots, n-1\\}$ is generated from a uniform random variate $U \\sim \\mathrm{Uniform}(0,1)$ using the formula $J = \\lfloor nU \\rfloor$. This process is repeated $n$ times to obtain a full set of indices for one bootstrap sample.\n- **Bootstrap Statistics**: For each bootstrap sample $X^{*b}$, the statistic $T$ is computed, yielding a bootstrap statistic $\\hat{\\theta}_b = T(X^{*b})$. This process is repeated for all $B$ replicates to form the bootstrap distribution $\\{\\hat{\\theta}_1, \\hat{\\theta}_2, \\dots, \\hat{\\theta}_B\\}$.\n\n- **Bootstrap Standard Error ($s_{\\mathrm{boot}}$)**: The bootstrap estimate of the standard error of $\\hat{\\theta}$ is the sample standard deviation of the bootstrap statistics:\n$$s_{\\mathrm{boot}} = \\sqrt{\\frac{1}{B-1}\\sum_{b=1}^{B}\\left(\\hat{\\theta}_{b}-\\bar{\\theta}\\right)^{2}}$$\nwhere $\\bar{\\theta} = \\frac{1}{B}\\sum_{b=1}^{B}\\hat{\\theta}_{b}$ is the average of the bootstrap statistics.\n\n- **Bootstrap Percentile Confidence Interval**: To construct a $(1-\\alpha)$ confidence interval, we use the quantiles of the ordered bootstrap statistics $t_{(1)} \\le t_{(2)} \\le \\dots \\le t_{(B)}$. The interval is given by $[q_{\\ell}, q_{u}]$, where $q_{\\ell}$ and $q_{u}$ are the empirical quantiles corresponding to probabilities $p_{\\ell} = \\alpha/2$ and $p_{u} = 1-\\alpha/2$, respectively. According to the problem's definition, the quantile $q_p$ is $t_{(k)}$, where the index $k$ is calculated as $k = \\lceil pB \\rceil$. This 1-based index $k$ is clipped to the range $\\{1, 2, \\dots, B\\}$. To implement this, for a given probability $p$, we compute $k = \\max(1, \\lceil pB \\rceil)$ and select the element at index $k-1$ from the 0-indexed sorted array of bootstrap statistics.\n\n**3. Jackknife Procedure**\n\nThe jackknife is an alternative resampling technique that systematically omits each observation from the dataset.\n\n- **Resampling**: For each observation $i \\in \\{1, 2, \\dots, n\\}$, a jackknife sample $X_{(i)}$ is formed by removing $x_i$ from the original dataset. This creates $n$ datasets, each of size $n-1$.\n- **Jackknife Statistics**: The statistic $T$ is computed for each of these $n$ samples, yielding the leave-one-out statistics $\\{\\hat{\\theta}_{(1)}, \\hat{\\theta}_{(2)}, \\dots, \\hat{\\theta}_{(n)}\\}$.\n\n- **Jackknife Standard Error ($s_{\\mathrm{jack}}$)**: The jackknife estimate of the standard error of $\\hat{\\theta}$ is defined as:\n$$s_{\\mathrm{jack}} = \\sqrt{\\frac{n-1}{n}\\sum_{i=1}^{n}\\left(\\hat{\\theta}_{(i)}-\\bar{\\theta}_{\\mathrm{jack}}\\right)^{2}}$$\nwhere $\\bar{\\theta}_{\\mathrm{jack}} = \\frac{1}{n}\\sum_{i=1}^{n}\\hat{\\theta}_{(i)}$ is the average of the jackknife statistics.\n\n**4. Implementation Strategy**\n\nThe overall program is structured to handle the specified test cases. A main function iterates through each case, calling a core computational function. This function performs the following steps for a given dataset, statistic, and parameters ($B, \\alpha$, seed):\n1.  Set the random number generator seed to ensure reproducibility.\n2.  Perform the bootstrap procedure: generate $B$ bootstrap samples using the specified $\\lfloor nU \\rfloor$ method, compute the $B$ statistics, and then calculate $s_{\\mathrm{boot}}$ and the percentile confidence interval bounds $(q_{\\ell}, q_{u})$.\n3.  Perform the jackknife procedure: generate the $n$ leave-one-out samples, compute the $n$ statistics, and calculate $s_{\\mathrm{jack}}$.\n4.  Return the four required values: $s_{\\mathrm{boot}}, s_{\\mathrm{jack}}, q_{\\ell}, q_{u}$.\n\nThe final results from all test cases are collected, rounded to $6$ decimal places, and printed in the required single-line format.", "answer": "$$\\boxed{\\text{A single line of 16 comma-separated numeric values in square brackets is expected here.}}$$", "id": "2404323"}]}