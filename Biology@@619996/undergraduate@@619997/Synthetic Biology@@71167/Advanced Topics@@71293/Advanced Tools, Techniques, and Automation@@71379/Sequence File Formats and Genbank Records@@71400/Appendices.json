{"hands_on_practices": [{"introduction": "The journey into computational biology often begins with the FASTA format, the universal language for representing nucleotide or protein sequences. This exercise grounds you in the fundamental rules of constructing a valid FASTA file, a critical skill for ordering synthetic DNA or using bioinformatics software. By correctly formatting a header and sequence, you practice the first step in translating a digital design into a physical biological part [@problem_id:2068080].", "id": "2068080", "problem": "A synthetic biology student is designing a new genetic circuit in *Escherichia coli* (*E. coli*). As part of this circuit, the student needs to order a custom-designed, 80-base-pair synthetic promoter. The company that synthesizes the Deoxyribonucleic Acid (DNA) requires the order to be submitted in the FASTA format.\n\nThe company specifies that the FASTA header line must follow the structure: `>GeneID|Designer|TargetOrganism`.\nFor this specific order, the required information is:\n*   GeneID: `pMod_v1`\n*   Designer: `A.Lovelace`\n*   TargetOrganism: `E.coli`\n\nThe 80-base-pair DNA sequence for the promoter is:\n`5'-AGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTGATTAACATGGAGATTACGCG-3'`\n\nThe sequence data itself must be formatted according to standard bioinformatics conventions. This means the sequence starts on a new line after the header, and text lines should not exceed 80 characters. For sequences longer than a conventional line length of 60 characters, the sequence is typically wrapped onto subsequent lines.\n\nWhich of the following represents the correctly formatted FASTA submission for this synthetic promoter?\n\nA.\n```\n>pMod_v1,A.Lovelace,E.coli\nAGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTGATTAACATGGAGATTACGCG\n```\n\nB.\n```\nAGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTG\nATTAACATGGAGATTACGCG\n```\n\nC.\n```\n>pMod_v1|A.Lovelace|E.coliAGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTGATTAACATGGAGATTACGCG\n```\n\nD.\n```\n>pMod_v1|A.Lovelace|E.coli\nAGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTGATTAACATGGAGATTACGCG\n```\n\nE.\n```\n>pMod_v1|A.Lovelace|E.coli\nAGCTTCAAGTTGATTGGAGCGGTCACAGGTTTGCGACGGTATCAGGCTAGAGTCACCTG\nATTAACATGGAGATTACGCG\n```\n\n", "solution": "We identify the required FASTA formatting rules from the prompt:\n- Header must be a single line starting with \">\" and formatted as \">GeneID|Designer|TargetOrganism\".\n- The sequence must start on a new line after the header.\n- Lines must not exceed 80 characters; sequences longer than 60 characters are typically wrapped, commonly at 60 characters per line.\n\nGiven GeneID pMod_v1, Designer A.Lovelace, TargetOrganism E.coli, the correct header is exactly:\n>pMod_v1|A.Lovelace|E.coli\n\nEvaluate the options:\n- A uses commas instead of vertical bars and is therefore incorrect.\n- B lacks the required FASTA header line, so it is incorrect.\n- C places the sequence on the same line as the header, violating the rule that the sequence starts on a new line; incorrect.\n- D has the correct header and places the entire sequence on the next line. While this does not exceed 80 characters and is generally acceptable, the problem emphasizes the typical wrapping at 60 characters for sequences longer than 60.\n- E has the correct header and wraps the 80-base sequence across two lines, with the first line at the conventional 60-character length and the remaining 20 characters on the next line, matching standard bioinformatics conventions.\n\nTherefore, the correctly formatted FASTA submission is option E.", "answer": "$$\\boxed{E}$$"}, {"introduction": "While FASTA files store raw sequences, GenBank records provide a rich layer of biological context through annotations. This practice challenges you to act as a bioinformatician performing a crucial quality control check on an annotated gene [@problem_id:2068087]. You will learn to parse complex location strings, which describe features like spliced genes, and apply biological rules to verify that the annotated protein length matches the genetic information.", "id": "2068087", "problem": "A bioinformatician is performing a quality control check on a newly submitted genome annotation. They suspect an error in a particular gene entry within a GenBank file. The gene's Coding Sequence (CDS) feature is described as follows:\n\n`CDS             complement(join(1201..1350,1501..1602,1820..1984))`\n\nThe `/translation` qualifier associated with this `CDS` feature provides an amino acid sequence that is 140 amino acids long.\n\nAccording to GenBank format conventions:\n- The numbers `a..b` indicate a contiguous sequence of nucleotides from base `a` to base `b`, inclusive. The length of such a segment is `b - a + 1`.\n- `join(loc1, loc2, ...)` indicates that the `CDS` is formed by concatenating the nucleotide sequences from each location in the specified order. These joined segments form the messenger RNA (mRNA) after splicing.\n- `complement(...)` indicates that the gene is located on the complementary strand of the DNA. For the purpose of calculating the total length of the coding region, this information does not alter the total number of base pairs involved.\n- A `CDS` by definition includes the coding region for the stop codon. The translation process converts each 3-base codon into one amino acid, but the final stop codon itself is *not* translated into an amino acid and is not part of the final protein chain.\n\nYour task is to determine the correct length of the protein, expressed as a number of amino acids, that should be produced from the given `CDS` location string.\n\n", "solution": "The CDS location is given as complement(join(1201..1350,1501..1602,1820..1984)). The total coding length is the sum of the lengths of the three segments, where each segment length is computed as $b-a+1$.\n\nFor the first segment $1201..1350$, the length is\n$$\nL_{1}=1350-1201+1=150.\n$$\nFor the second segment $1501..1602$, the length is\n$$\nL_{2}=1602-1501+1=102.\n$$\nFor the third segment $1820..1984$, the length is\n$$\nL_{3}=1984-1820+1=165.\n$$\nThe total CDS length is\n$$\nL=L_{1}+L_{2}+L_{3}=150+102+165=417.\n$$\nThe complement indication does not change the total number of nucleotides. A CDS includes the stop codon, and translation uses $3$ nucleotides per codon. Therefore, the total number of codons is\n$$\nN_{\\text{codons}}=\\frac{L}{3}=\\frac{417}{3}=139.\n$$\nSince the stop codon is not translated into an amino acid, the resulting protein length in amino acids is\n$$\nN_{\\text{aa}}=N_{\\text{codons}}-1=139-1=138.\n$$\nThe provided translation length of $140$ amino acids is therefore inconsistent with the CDS coordinates.", "answer": "$$\\boxed{138}$$"}, {"introduction": "A cornerstone of synthetic biology is the design of novel genetic constructs, a process now largely planned 'in silico' before any lab work begins. This exercise simulates a virtual cloning experiment, where a gene from a FASTA file is inserted into a plasmid vector described by a GenBank record [@problem_id:2068076]. The central challenge lies not just in modifying the sequence, but in developing a robust algorithm to accurately update the coordinates of all existing features, ensuring the final record remains a valid and useful map of the new plasmid.", "id": "2068076", "problem": "In a synthetic biology project, a researcher needs to computationally simulate the insertion of a gene into a plasmid vector before performing the experiment in the lab. The process involves editing a GenBank file for the vector to include the sequence and features of the new gene.\n\nYou are given two files:\n1.  `pVector.gb`: A GenBank file for a circular plasmid of 5000 base pairs (bp). Its FEATURES table contains several annotated regions. For the purpose of cloning, it includes a specific feature defined as `misc_feature 2501..2506` with the qualifier `/label=\"CloningSite\"`. You can assume that no other annotated features overlap with this site.\n2.  `myGene.fa`: A FASTA (Fast-All) format file containing the DNA sequence for a gene of interest. The sequence in this file is 1500 bp long.\n\nThe task is to generate a new GenBank file representing the recombinant plasmid. This is achieved by excising the 6 bp sequence at the \"CloningSite\" (`2501..2506`) from `pVector.gb` and inserting the 1500 bp sequence from `myGene.fa` in its place.\n\nWhich of the following algorithmic procedures correctly describes all the necessary steps to generate a valid GenBank file for the new recombinant plasmid?\n\nA. Parse both input files to extract their sequences and the feature table from the vector. Construct the new, longer DNA sequence by replacing the 6 bp \"CloningSite\" sequence with the 1500 bp gene sequence. Update the total length in the `LOCUS` line. In the feature table, remove the \"CloningSite\" feature, add a new feature for the inserted gene, and for all features located entirely downstream of the insertion point, shift their start and end coordinates by the net change in sequence length (`1500 - 6 = 1494`). Finally, assemble the updated components into a new GenBank file.\n\nB. Parse both input files. Construct the new DNA sequence by replacing the \"CloningSite\" sequence with the gene sequence. Update the `LOCUS` line with the new total length. In the feature table, remove the \"CloningSite\" feature and add a new feature for the gene at the insertion location. Do not modify the coordinates of any other existing features. Assemble the components into a new GenBank file.\n\nC. Parse both input files. Construct the new DNA sequence by replacing the \"CloningSite\" sequence with the gene sequence. Do not modify the total length specified in the `LOCUS` line. In the feature table, remove the \"CloningSite\" feature, add a new feature for the inserted gene, and correctly shift the coordinates of all downstream features. Assemble the components into a new GenBank file.\n\nD. Parse both input files. Construct a new DNA sequence by appending the 1500 bp gene sequence to the end of the original 5000 bp vector sequence. Update the `LOCUS` line to a total length of 6500 bp. In the feature table, add a new feature for the gene at location `5001..6500`. Assemble the components into a new GenBank file.\n\nE. Parse both input files. Construct the new DNA sequence by replacing the \"CloningSite\" sequence with the gene sequence. Update the `LOCUS` line with the new total length. In the feature table, remove the \"CloningSite\" feature, add a new feature for the inserted gene, and for all features located entirely downstream of the insertion point, shift their start and end coordinates by the full length of the inserted gene (1500). Assemble the components into a new GenBank file.\n\n", "solution": "We formalize the editing as a coordinate transformation on an annotated circular DNA sequence represented in GenBank format.\n\nLet the original plasmid length be $L_{\\text{old}}$, the deleted segment length be $L_{\\text{del}}$, and the inserted gene length be $L_{\\text{ins}}$. The net length change is $\\Delta L = L_{\\text{ins}} - L_{\\text{del}}$, and the new total length is $L_{\\text{new}} = L_{\\text{old}} + \\Delta L$. With the given values, $L_{\\text{old}}=5000$, $L_{\\text{del}}=6$, $L_{\\text{ins}}=1500$, so $\\Delta L = 1494$ and $L_{\\text{new}}=6494$.\n\nDefine the insertion interval by coordinates $a..b$ in the original vector, with $a=2501$ and $b=2506$, and assume (as stated) that no other annotated features overlap $[a,b]$. Construct the new sequence by replacing the subsequence at $[a,b]$ in the original vector sequence with the full gene sequence from the FASTA file, yielding a contiguous sequence of length $L_{\\text{new}}$. Update the LOCUS line to reflect $L_{\\text{new}}$ and maintain the circular topology.\n\nFor feature coordinate updates, apply the standard coordinate shift rules for an in-place replacement edit:\n- Remove the feature that annotated the excised interval (here, the feature with key and qualifiers identifying the cloning site).\n- Add a new feature for the inserted gene occupying $[a, a + L_{\\text{ins}} - 1]$ in the new coordinate system.\n- For any existing feature entirely upstream, i.e., with both endpoints $\\leq a - 1$, leave coordinates unchanged.\n- For any existing feature entirely downstream, i.e., with both endpoints $\\geq b + 1$, shift both start and end by $\\Delta L$.\n- For features overlapping $[a,b]$, one would split or adjust as appropriate, but the problem states no overlaps, so this case does not occur.\n\nFinally, reconstruct a valid GenBank record by assembling the updated LOCUS line, FEATURES table with the aforementioned removals, insertions, and coordinate shifts, and the updated ORIGIN sequence.\n\nEvaluate each option against these necessary steps:\n- Option A specifies replacing the $6$ bp interval with the $1500$ bp gene, updating the LOCUS length, removing the cloning-site feature, adding the gene feature, and shifting all downstream features by the net change $\\Delta L = 1500 - 6 = 1494$, then assembling a new GenBank file. This matches the correct coordinate transformation and metadata updates.\n- Option B fails by not shifting downstream feature coordinates, which would render annotations incorrect.\n- Option C fails by not updating the LOCUS total length, which must change to $L_{\\text{new}}$ after sequence modification.\n- Option D incorrectly appends rather than replaces, contradicting the specified excision and replacement at the cloning site.\n- Option E shifts downstream features by $L_{\\text{ins}}$ instead of $\\Delta L$, ignoring the deletion of $L_{\\text{del}}$, thus misplacing downstream features.\n\nTherefore, the only correct procedure is Option A.", "answer": "$$\\boxed{A}$$"}]}