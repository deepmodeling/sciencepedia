{"hands_on_practices": [{"introduction": "Transitioning from theory to practice, the first step in any DNA data storage project is to determine the physical resources required. This exercise simulates the initial planning phase, where a digital file must be converted into a specification for DNA synthesis. You will see that robust data storage requires more than a simple conversion; we must also account for redundancy, a crucial layer of error-correcting information that safeguards our data against the inherent fallibility of biological processes [@problem_id:2031289]. This practice will ground your understanding of encoding density and the practical costs associated with ensuring data integrity.", "problem": "A synthetic biology company is developing a novel pipeline for long-term data archival using deoxyribonucleic acid (DNA). Their process involves encoding a digital file into a sequence of nucleotides (A, C, G, T). To ensure data integrity over time, their encoding algorithm introduces a 25% data redundancy. This means that for every 100 bits of original data, an additional 25 bits of error-correcting information are added. The final encoding scheme synthesizes the DNA strand with an information density of 1.5 bits per nucleotide.\n\nGiven this process, calculate the total number of nucleotides that must be synthesized to store a single digital file with a size of 100 kilobytes. For the purpose of this problem, assume that 1 kilobyte is equal to 1024 bytes and 1 byte is equal to 8 bits.\n\nRound your final answer to four significant figures.", "solution": "We first convert the file size to bits using the given definitions. With $1$ kilobyte $=1024$ bytes and $1$ byte $=8$ bits, a $100$ kilobyte file contains\n$$\nB_{\\text{orig}}=100\\times 1024\\times 8=819200\\ \\text{bits}.\n$$\n\nThe encoding introduces redundancy equal to $0.25$ of the original data, so the total number of bits to be stored is scaled by a factor of $1+0.25=1.25$:\n$$\nB_{\\text{tot}}=B_{\\text{orig}}\\times 1.25=819200\\times 1.25=1024000\\ \\text{bits}.\n$$\n\nGiven an information density of $1.5$ bits per nucleotide, the number of nucleotides required is the total bits divided by the bits per nucleotide:\n$$\nN=\\frac{B_{\\text{tot}}}{1.5}=\\frac{1024000}{1.5}=682666.\\overline{6}.\n$$\n\nRounding to four significant figures gives\n$$\nN\\approx 6.827\\times 10^{5}.\n$$", "answer": "$$\\boxed{6.827 \\times 10^{5}}$$", "id": "2031289"}, {"introduction": "After establishing the need for redundancy in our first practice, we now explore how it works on a tangible level. This problem demonstrates a simple yet powerful error-correction scheme based on majority consensus, a foundational concept in fault-tolerant computing. By synthesizing multiple copies of our data, we can use a \"voting\" system to identify and correct errors that arise during synthesis or sequencing [@problem_id:2031328]. This exercise will sharpen your diagnostic skills, helping you to not only reconstruct the correct data but also to classify the type of error that occurred, a critical step in improving storage pipelines.", "problem": "In the field of synthetic biology, Deoxyribonucleic Acid (DNA) is being explored as a high-density, long-term data storage medium. A common strategy to ensure data integrity against errors that occur during DNA synthesis or sequencing is to use redundancy.\n\nConsider a simple error-correction scheme where a short segment of data, encoded as a 4-base DNA sequence, is synthesized in triplicate. During data retrieval, all three physical copies are sequenced. The original sequence is then reconstructed by a majority-rules consensus: for each position in the sequence, the base that appears in at least two of the three copies is assumed to be the original, correct base.\n\nAn engineer is trying to retrieve a 4-base-long data segment. The three sequencing reads obtained are:\n- Read 1: `GATC`\n- Read 2: `GTTC`\n- Read 3: `GTTC`\n\nSingle-base errors in DNA synthesis or sequencing are typically categorized as one of the following:\n- **Substitution**: A single base is replaced by a different base (e.g., `A` becomes `G`).\n- **Insertion**: An extra base is added into the sequence (e.g., `GTC` becomes `GTAC`).\n- **Deletion**: A single base is removed from the sequence (e.g., `GTC` becomes `GC`).\n\nBased on the provided reads and the majority-rules consensus method, determine the most likely original sequence and identify the type of error that occurred in the one non-conforming read.\n\nA) Original: `GTTC`; Error: Substitution\n\nB) Original: `GATC`; Error: Substitution\n\nC) Original: `GATC`; Error: Deletion\n\nD) Original: `GTTC`; Error: Insertion\n\nE) Original: `GTAC`; Error: Substitution", "solution": "We denote the three reads as sequences of length $4$:\n- $R_{1}=\\text{GATC}$\n- $R_{2}=\\text{GTTC}$\n- $R_{3}=\\text{GTTC}$\n\nUsing majority-rules consensus, for each position $i\\in\\{1,2,3,4\\}$, the consensus base $C_{i}$ is defined as the mode of $\\{R_{1,i},R_{2,i},R_{3,i}\\}$.\n\nCompute position-wise majorities:\n- Position $i=1$: $\\{G,G,G\\}\\Rightarrow C_{1}=G$.\n- Position $i=2$: $\\{A,T,T\\}\\Rightarrow C_{2}=T$.\n- Position $i=3$: $\\{T,T,T\\}\\Rightarrow C_{3}=T$.\n- Position $i=4$: $\\{C,C,C\\}\\Rightarrow C_{4}=C$.\n\nThus the consensus (most likely original) sequence is $\\text{GTTC}$.\n\nNext, identify the error type in the non-conforming read. Comparing each read to the consensus:\n- $R_{2}=\\text{GTTC}$ matches exactly.\n- $R_{3}=\\text{GTTC}$ matches exactly.\n- $R_{1}=\\text{GATC}$ differs from the consensus only at position $2$ (consensus $T$ versus $A$ in $R_{1}$), with no change in length.\n\nA single-base difference at a fixed position with unchanged length corresponds to a substitution. Insertions or deletions would change alignment and typically alter length, which is not observed here.\n\nTherefore, the correct choice is: Original $\\text{GTTC}$; Error: Substitution, i.e., option A.", "answer": "$$\\boxed{A}$$", "id": "2031328"}, {"introduction": "The final challenge in DNA data storage lies in retrieval: how do we reassemble a coherent file from millions of short, unordered, and error-prone sequencing reads? This practice introduces you to k-mer frequency analysis, a cornerstone of modern bioinformatics used to solve this complex puzzle. By creating a statistical \"fingerprint\" for each DNA fragment, we can computationally group related reads together, paving the way for full data reconstruction [@problem_id:2031320]. This exercise provides a hands-on introduction to the algorithmic thinking required to turn a chaotic soup of sequenced DNA back into structured information.", "problem": "In the field of synthetic biology, DNA is being explored as a high-density, long-term data storage medium. Information is encoded into sequences of synthetic DNA oligonucleotides (oligos). To retrieve the data, these oligos are sequenced, but this process generates millions of short, unordered, and error-prone fragments called reads. A fundamental challenge is to cluster these reads back to their original source oligos.\n\nConsider a simplified scenario where two data files have been encoded into two distinct, long source sequences, `S1` and `S2`. A common technique for clustering a given read `R` is to compare its k-mer frequency profile to the profiles of the source sequences. A k-mer is a substring of length `k`. The k-mer frequency profile of a sequence is a map that counts the occurrences of every possible k-mer within that sequence.\n\nThe two source sequences are given as:\n- `S1 = ATGCGATACG`\n- `S2 = TACTGCTAGC`\n\nDuring sequencing, a read `R` is obtained:\n- `R = TGCAATAC`\n\nYou are tasked to determine which source sequence `R` most likely originated from. To do this, you will use a k-mer length of `k=3`. The distance between two k-mer frequency profiles, `P_A` and `P_B`, is defined as the Manhattan distance:\n$$D(P_A, P_B) = \\sum_{i} |P_A(k_i) - P_B(k_i)|$$\nwhere the sum is taken over all unique k-mers `k_i` appearing in at least one of the sequences A or B. `P_A(k_i)` is the count of k-mer `k_i` in sequence A (and is zero if `k_i` does not appear in A).\n\nLet `P_1`, `P_2`, and `P_R` be the 3-mer frequency profiles for `S1`, `S2`, and `R`, respectively. Calculate the distance `D_1 = D(P_R, P_1)` and `D_2 = D(P_R, P_2)`.\n\nCompute the ratio `D_2 / D_1`. Round your final answer to three significant figures.", "solution": "We use k-mer length $k=3$. For a sequence of length $L$, there are $L-k+1$ overlapping 3-mers.\n\nCompute 3-mers and their counts:\n\nFor $S1=\\text{ATGCGATACG}$ ($L=10$):\n3-mers: ATG, TGC, GCG, CGA, GAT, ATA, TAC, ACG. Each occurs once.\nThus $P_{1}(\\text{ATG})=\\cdots=P_{1}(\\text{ACG})=1$ for these eight, and zero otherwise.\n\nFor $S2=\\text{TACTGCTAGC}$ ($L=10$):\n3-mers: TAC, ACT, CTG, TGC, GCT, CTA, TAG, AGC. Each occurs once.\nThus $P_{2}(\\text{TAC})=\\cdots=P_{2}(\\text{AGC})=1$ for these eight, and zero otherwise.\n\nFor $R=\\text{TGCAATAC}$ ($L=8$):\n3-mers: TGC, GCA, CAA, AAT, ATA, TAC. Each occurs once.\nThus $P_{R}(\\text{TGC})=\\cdots=P_{R}(\\text{TAC})=1$ for these six, and zero otherwise.\n\nThe Manhattan distance between profiles $P_{A}$ and $P_{B}$ is\n$$\nD(P_{A},P_{B})=\\sum_{k\\in U}|P_{A}(k)-P_{B}(k)|,\n$$\nwhere $U$ is the set of 3-mers appearing in at least one of $A$ or $B$.\n\nDistance to $S1$:\nLet $U_{1}$ be the union of 3-mers in $R$ and $S1$:\n$U_{1}=\\{\\text{TGC},\\text{GCA},\\text{CAA},\\text{AAT},\\text{ATA},\\text{TAC},\\text{ATG},\\text{GCG},\\text{CGA},\\text{GAT},\\text{ACG}\\}$.\nTerm-by-term absolute differences:\n$|\\!P_{R}-P_{1}\\!|$ are $0$ for TGC, ATA, TAC and $1$ for the other eight listed.\nHence\n$$\nD_{1}=D(P_{R},P_{1})=8.\n$$\n\nDistance to $S2$:\nLet $U_{2}$ be the union of 3-mers in $R$ and $S2$:\n$U_{2}=\\{\\text{TGC},\\text{GCA},\\text{CAA},\\text{AAT},\\text{ATA},\\text{TAC},\\text{ACT},\\text{CTG},\\text{GCT},\\text{CTA},\\text{TAG},\\text{AGC}\\}$.\nTerm-by-term absolute differences:\n$|\\!P_{R}-P_{2}\\!|$ are $0$ for TGC and TAC, and $1$ for the remaining ten listed.\nHence\n$$\nD_{2}=D(P_{R},P_{2})=10.\n$$\n\nTherefore, the requested ratio is\n$$\n\\frac{D_{2}}{D_{1}}=\\frac{10}{8}=1.25,\n$$\nwhich to three significant figures is $1.25$.", "answer": "$$\\boxed{1.25}$$", "id": "2031320"}]}