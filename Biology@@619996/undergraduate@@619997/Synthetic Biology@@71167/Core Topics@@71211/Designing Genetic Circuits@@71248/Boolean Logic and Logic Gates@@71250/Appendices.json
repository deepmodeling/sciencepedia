{"hands_on_practices": [{"introduction": "The essence of synthetic biology lies in programming cellular behavior using the language of genetics. This first exercise challenges you to act as a reverse-engineer, deducing the logical function of a simple genetic circuit from its underlying molecular rules. By analyzing how an activator and a repressor compete for control of a promoter, you will build a truth table and identify the specific Boolean operation this system performs, a fundamental skill for understanding genetic logic [@problem_id:2023965].", "problem": "In a synthetic biology project, a strain of *E. coli* is engineered to function as a biological logic gate. The circuit's output, Z, is defined as HIGH (Z=1) if the cell exhibits strong fluorescence, and LOW (Z=0) otherwise. This fluorescence is produced by a Green Fluorescent Protein (GFP), whose gene is under the control of a specific promoter, $P_{out}$.\n\nThe circuit's behavior is controlled by two chemical inducers, which serve as the logical inputs X and Y. A value of 1 for an input means the corresponding inducer is present in the growth medium, and a value of 0 means it is absent.\n\nThe system is designed with the following rules:\n1.  The promoter $P_{out}$ has a negligible basal expression level. GFP is only produced if an activator protein is bound to this promoter's operator site.\n2.  The presence of Inducer X (X=1) causes the cell to produce an activator protein, A. In the absence of Inducer X (X=0), protein A is not produced.\n3.  The presence of Inducer Y (Y=1) causes the cell to produce a repressor protein, B. In the absence of Inducer Y (Y=0), protein B is not produced.\n4.  Both protein A (the activator) and protein B (the repressor) are designed to bind to the exact same operator site on the promoter $P_{out}$.\n5.  Due to its molecular structure, protein B has a significantly higher binding affinity for the operator site than protein A. Consequently, if both proteins A and B are present in the cell, protein B will outcompete protein A and will be the one bound to the operator site.\n\nGiven this design, which of the following Boolean expressions correctly describes the relationship between the inputs (X, Y) and the output (Z)?\n\nA. Z = X AND Y\n\nB. Z = X OR Y\n\nC. Z = X AND (NOT Y)\n\nD. Z = X NOR Y\n\nE. Z = Y AND (NOT X)\n\nF. Z = X XOR Y", "solution": "Let the binary inputs be $X \\in \\{0,1\\}$ and $Y \\in \\{0,1\\}$, and the output be $Z \\in \\{0,1\\}$, where $Z=1$ indicates GFP expression and $Z=0$ indicates no GFP. By rule 1, the promoter $P_{out}$ has negligible basal expression, so $Z=1$ only if an activator is bound.\n\nBy rule 2, activator protein $A$ is produced if and only if $X=1$. By rule 3, repressor protein $B$ is produced if and only if $Y=1$.\n\nBy rules 4 and 5, $A$ and $B$ compete for the same operator site, with $B$ having higher affinity. Therefore:\n- If $Y=1$ (so $B$ present), the operator is occupied by $B$ regardless of whether $A$ is present, preventing activation, hence $Z=0$.\n- If $Y=0$ (so $B$ absent), then:\n  - If $X=1$ (so $A$ present), $A$ binds and activates $P_{out}$, giving $Z=1$.\n  - If $X=0$ (so $A$ absent), no activator binds, giving $Z=0$.\n\nThus $Z=1$ exactly when $X=1$ and $Y=0$. In Boolean form,\n$$\nZ = X \\land (\\lnot Y).\n$$\nThis corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "2023965"}, {"introduction": "While Boolean logic provides a powerful digital abstraction, real biological circuits operate in an analog world of varying molecular concentrations. This practice moves from qualitative analysis to quantitative prediction by introducing the Hill equation, the standard model for a genetic inverter's transfer function. You will calculate the output of a two-stage transcriptional cascade, gaining insight into how signal strength propagates through layers of genetic regulation [@problem_id:2023898].", "problem": "A synthetic biologist is designing a genetic signal processing circuit within a bacterial chassis. The circuit is designed as a two-stage transcriptional cascade, intended to function as a signal buffer. The input to the system is the concentration of a repressor protein, $R_1$. $R_1$ represses the gene for an intermediate protein, $R_2$, which is also a repressor. In turn, $R_2$ represses the gene for a final output protein, $Y$, which is a fluorescent marker.\n\nThe steady-state concentration of a protein product, $[P_{\\text{out}}]$, that is repressed by an input protein, $[P_{\\text{in}}]$, can be modeled by the following relationship, which describes the transfer function of a genetic inverter:\n$$\n[P_{\\text{out}}] = \\frac{P_{\\text{max}}}{1 + \\left(\\frac{[P_{\\text{in}}]}{K}\\right)^{n}}\n$$\nwhere $P_{\\text{max}}$ is the maximum possible steady-state concentration of the output protein in the absence of repression, $K$ is the repression coefficient (the concentration of the input repressor required for half-maximal repression), and $n$ is the Hill coefficient which describes the cooperativity of the repression.\n\nThe parameters for the two stages of the cascade are as follows:\n\nFor the first stage ($R_1$ represses $R_2$):\n- Maximum concentration of $R_2$, $R2_{\\text{max}}$ = 500.0 nM\n- Repression coefficient, $K_1$ = 50.0 nM\n- Hill coefficient, $n_1$ = 2.0\n\nFor the second stage ($R_2$ represses $Y$):\n- Maximum concentration of $Y$, $Y_{\\text{max}}$ = 1000.0 nM\n- Repression coefficient, $K_2$ = 200.0 nM\n- Hill coefficient, $n_2$ = 4.0\n\nIf the input signal is a steady-state concentration of $[R_1]$ = 100.0 nM, calculate the resulting steady-state concentration of the output protein $Y$. Express your final answer in nM, rounded to three significant figures.", "solution": "The cascade consists of two genetic inverters in series. For a repression relationship with input concentration $[P_{\\text{in}}]$ and output concentration $[P_{\\text{out}}]$, the steady-state transfer function is\n$$\n[P_{\\text{out}}] = \\frac{P_{\\text{max}}}{1 + \\left(\\frac{[P_{\\text{in}}]}{K}\\right)^{n}}.\n$$\n\nFirst stage (R1 represses R2):\nGiven $R2_{\\text{max}} = 500.0$, $K_{1} = 50.0$, $n_{1} = 2.0$, and $[R1] = 100.0$, we compute\n$$\n[R2] = \\frac{R2_{\\text{max}}}{1 + \\left(\\frac{[R1]}{K_{1}}\\right)^{n_{1}}}\n= \\frac{500.0}{1 + \\left(\\frac{100.0}{50.0}\\right)^{2.0}}\n= \\frac{500.0}{1 + 2^{2}}\n= \\frac{500.0}{1 + 4}\n= \\frac{500.0}{5}\n= 100.0.\n$$\n\nSecond stage (R2 represses Y):\nGiven $Y_{\\text{max}} = 1000.0$, $K_{2} = 200.0$, $n_{2} = 4.0$, and using the computed $[R2] = 100.0$, we compute\n$$\n[Y] = \\frac{Y_{\\text{max}}}{1 + \\left(\\frac{[R2]}{K_{2}}\\right)^{n_{2}}}\n= \\frac{1000.0}{1 + \\left(\\frac{100.0}{200.0}\\right)^{4.0}}\n= \\frac{1000.0}{1 + \\left(\\frac{1}{2}\\right)^{4}}\n= \\frac{1000.0}{1 + \\frac{1}{16}}\n= \\frac{1000.0}{\\frac{17}{16}}\n= 1000.0 \\cdot \\frac{16}{17}\n= \\frac{16000.0}{17}\n\\approx 941.176470588.\n$$\nRounding to three significant figures gives $941$.", "answer": "$$\\boxed{941}$$", "id": "2023898"}, {"introduction": "The true power of synthetic biology emerges when we combine simple logical components to build sophisticated information-processing systems. In this final challenge, you will step into the role of a circuit designer, tasked with implementing a 3-input majority gateâ€”a circuit that outputs a signal only if at least two of its three inputs are present. This exercise requires you to strategically combine basic activation and repression logic into a multi-layered architecture, translating a complex Boolean expression into a functional biological design [@problem_id:2023903].", "problem": "A synthetic biology research group aims to engineer a bacterial strain to function as a biosensor. The desired behavior is for the cell to produce a fluorescent signal if and only if at least two of three specific environmental chemical inducers, denoted as $I_A$, $I_B$, and $I_C$, are present in the growth medium. This is logically equivalent to a 3-input majority gate.\n\nThe researchers have a toolkit of well-characterized genetic parts:\n\n*   **Inputs:** The inducers $I_A$, $I_B$, and $I_C$. Their presence or absence corresponds to a logical `1` or `0` for inputs A, B, and C, respectively.\n*   **Output:** A gene encoding a Green Fluorescent Protein (GFP). Its expression provides the output signal.\n*   **Regulatory Proteins:**\n    *   A set of transcriptional activators, $\\text{Act}_A$, $\\text{Act}_B$, and $\\text{Act}_C$. These proteins are constitutively expressed in an inactive state. They become functionally active *only* when bound to their corresponding inducer ($I_A$ for $\\text{Act}_A$, etc.).\n    *   A set of transcriptional repressors, $\\text{Rep}_A$, $\\text{Rep}_B$, and $\\text{Rep}_C$. These proteins are constitutively expressed in an active, DNA-binding state. They become functionally inactive (i.e., they unbind from DNA) *only* when bound to their corresponding inducer ($I_A$ for $\\text{Rep}_A$, etc.).\n*   **Circuit Architecture:** The design involves three distinct genetic constructs. Each construct uses a unique engineered promoter ($P_1$, $P_2$, or $P_3$) to drive the expression of a unique intermediate activator protein ($\\text{OutAct}_1$, $\\text{OutAct}_2$, or $\\text{OutAct}_3$, respectively). Each of these promoters, $P_1$, $P_2$, and $P_3$, is designed with exactly one binding site for one of the Act-type activators and one binding site (operator) for one of the Rep-type repressors. For transcription to occur from these promoters, the activator site must be bound by an active activator AND the repressor site must be free of an active repressor.\n*   **Final Output Stage:** The `gfp` gene is placed under the control of a final promoter, $P_{gfp}$. This promoter is engineered to be activated if *any* of the intermediate activators ($\\text{OutAct}_1$, $\\text{OutAct}_2$, or $\\text{OutAct}_3$) are present, effectively implementing an OR gate for these intermediate signals.\n\nWhich of the following configurations for the regulatory logic of promoters $P_1$, $P_2$, and $P_3$ correctly programs the cell to behave as a 3-input majority gate?\n\nA. $P_1$ is activated by $\\text{Act}_A$ and repressed by $\\text{Rep}_B$. $P_2$ is activated by $\\text{Act}_B$ and repressed by $\\text{Rep}_C$. $P_3$ is activated by $\\text{Act}_C$ and repressed by $\\text{Rep}_A$.\n\nB. $P_1$ is activated by $\\text{Act}_A$ and repressed by $\\text{Rep}_A$. $P_2$ is activated by $\\text{Act}_B$ and repressed by $\\text{Rep}_B$. $P_3$ is activated by $\\text{Act}_C$ and repressed by $\\text{Rep}_C$.\n\nC. $P_1$ is activated by $\\text{Act}_A$ and repressed by $\\text{Rep}_B$. $P_2$ is activated by $\\text{Act}_B$ and repressed by $\\text{Rep}_A$. $P_3$ is activated by $\\text{Act}_C$ and repressed by $\\text{Rep}_C$.\n\nD. $P_1$ is activated by $\\text{Act}_A$ and repressed by $\\text{Rep}_A$. $P_2$ is activated by $\\text{Act}_B$ and repressed by $\\text{Rep}_A$. $P_3$ is activated by $\\text{Act}_C$ and repressed by $\\text{Rep}_A$.", "solution": "Let the inputs be Boolean variables $A,B,C \\in \\{0,1\\}$ representing the presence of inducers $I_{A}, I_{B}, I_{C}$, respectively. Each promoter $P$ with a single activator site for $\\text{Act}_{X}$ and a single operator for $\\text{Rep}_{Y}$ transcribes only if two conditions hold simultaneously:\n1) the activator site is bound by an active activator, which occurs if and only if $X=1$ (since $\\text{Act}_{X}$ becomes active only when $I_{X}$ is present),\n2) the repressor site is free of active repressor, which occurs if and only if $Y=1$ (since $\\text{Rep}_{Y}$ is active unless $I_{Y}$ is present to inactivate it).\nTherefore, the logic implemented by such a promoter is\n$$\nP(\\text{Act}_{X},\\text{Rep}_{Y})=X \\land Y.\n$$\nEach construct produces an intermediate activator $\\text{OutAct}_{i}$ with logic\n$$\n\\text{OutAct}_{i}=X \\land Y,\n$$\nwhere $X$ is the activatorâ€™s input and $Y$ is the repressorâ€™s input for that promoter. The final promoter $P_{gfp}$ implements an OR gate over the three intermediate signals, so the GFP output is\n$$\nG=\\text{OutAct}_{1} \\lor \\text{OutAct}_{2} \\lor \\text{OutAct}_{3}.\n$$\nThe desired 3-input majority function is\n$$\nM(A,B,C)=(A \\land B)\\lor(B \\land C)\\lor(C \\land A).\n$$\nWe now evaluate each option:\n\nOption A:\n$P_{1}$ uses $\\text{Act}_{A}$ and $\\text{Rep}_{B}$, so $\\text{OutAct}_{1}=A \\land B$.\n$P_{2}$ uses $\\text{Act}_{B}$ and $\\text{Rep}_{C}$, so $\\text{OutAct}_{2}=B \\land C$.\n$P_{3}$ uses $\\text{Act}_{C}$ and $\\text{Rep}_{A}$, so $\\text{OutAct}_{3}=C \\land A$.\nThus,\n$$\nG=(A \\land B)\\lor(B \\land C)\\lor(C \\land A)=M(A,B,C),\n$$\nwhich is exactly the majority function.\n\nOption B:\n$P_{1}$ uses $\\text{Act}_{A}$ and $\\text{Rep}_{A}$, so $\\text{OutAct}_{1}=A \\land A=A$.\nSimilarly, $\\text{OutAct}_{2}=B$ and $\\text{OutAct}_{3}=C$.\nThen\n$$\nG=A \\lor B \\lor C,\n$$\nwhich yields $G=1$ when exactly one input is $1$, so it is not the majority function.\n\nOption C:\n$P_{1}$ gives $\\text{OutAct}_{1}=A \\land B$, $P_{2}$ gives $\\text{OutAct}_{2}=B \\land A=A \\land B$, and $P_{3}$ gives $\\text{OutAct}_{3}=C \\land C=C$.\nTherefore\n$$\nG=(A \\land B)\\lor C,\n$$\nwhich yields $G=1$ when $C=1$ alone, so it is not the majority function.\n\nOption D:\n$P_{1}$ gives $\\text{OutAct}_{1}=A$, $P_{2}$ gives $\\text{OutAct}_{2}=B \\land A$, and $P_{3}$ gives $\\text{OutAct}_{3}=C \\land A$.\nThus\n$$\nG=A \\lor (B \\land A) \\lor (C \\land A)=A\n$$\nby absorption, which is not the majority function.\n\nTherefore, only Option A implements the required 3-input majority gate.", "answer": "$$\\boxed{A}$$", "id": "2023903"}]}