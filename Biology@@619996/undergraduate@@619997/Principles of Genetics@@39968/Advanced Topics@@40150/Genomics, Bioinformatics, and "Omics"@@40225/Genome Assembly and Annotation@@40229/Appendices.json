{"hands_on_practices": [{"introduction": "Before we can assemble a genome or annotate its genes, we must first be able to read and handle the data. Biological sequences, like DNA and proteins, are stored in specific text-based formats, and the FASTA format is one of the most ubiquitous. This first exercise [@problem_id:1493807] will help you develop the crucial skill of recognizing the FASTA format and distinguishing it from other common file types you will encounter in bioinformatics.", "problem": "A computational biologist is processing data from a whole-genome sequencing project for a newly isolated bacterium. The sequencing core facility has provided several text files, each containing a portion of the assembled genome. The analysis software requires that the input DNA sequence data be in the standard FASTA format. Below are excerpts from five different files. Your task is to identify which excerpt represents a sequence stored in the correct FASTA format.\n\n**A.**\n```\n>Contig_1_B.anthracis_strain_Ames_length=5227295\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\nAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATA\n```\n\n**B.**\n```\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\nAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATA\n```\n\n**C.**\n```\n@Contig_1_B.anthracis\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTG\n+\n!''*((((***+))%%%++)(%%%%).1***-+*''))**5(5-2*./....-/2234'44555666655....\n```\n\n**D.**\n```\nLOCUS       Contig_1      5227295 bp    DNA     linear   CON 26-JUL-2024\nDEFINITION  B. anthracis strain Ames, complete genome.\nACCESSION   AE016879\nORIGIN\n        1 agcttttcattctgactgcaacgggcaatatgtctctgtgtggattaaaaaaagagtgtc\n       61 tgatagcagcttctgaactggttacctgccgtgagtaaattaaaattttattgacttag\n```\n\n**E.**\n```\nContig_1,AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAA,B.anthracis_Ames\n```", "solution": "To identify the correct FASTA format, we need to understand its specific structure. The FASTA format is a text-based format for representing nucleotide sequences or peptide sequences, in which base pairs or amino acids are represented using single-letter codes. A sequence in FASTA format consists of two main parts:\n\n1.  A **header line**: This is a single line that must start with a greater-than symbol (`>`). The rest of this line contains a unique identifier for the sequence and often includes other descriptive information. There are no strict rules for the content after the `>` symbol.\n2.  The **sequence data**: The lines following the header line contain the sequence itself. The sequence can be on a single line or split across multiple lines. Lines containing sequence data must not begin with a `>`.\n\nNow, we will analyze each option based on this definition.\n\n**Option A:** This excerpt begins with a line starting with a `>` symbol (`>Contig_1_B.anthracis...`). This serves as the header line. The subsequent lines contain a sequence of characters (A, C, G, T), which represent the nucleotide sequence. This structure perfectly matches the definition of the FASTA format.\n\n**Option B:** This excerpt consists only of sequence data. It is missing the mandatory header line that must begin with a `>`. This is often referred to as a \"raw\" or \"plain\" sequence format and is not FASTA format.\n\n**Option C:** This excerpt begins with a line starting with an at-symbol (`@`), not a `>`. It is followed by a sequence line, a line containing only a plus symbol (`+`), and then a line of ASCII characters that represent quality scores. This four-line structure is characteristic of the FASTQ format, which is commonly used for raw sequencing reads and includes per-base quality information. It is not FASTA format.\n\n**Option D:** This excerpt shows a highly structured format with keywords like `LOCUS`, `DEFINITION`, `ACCESSION`, and `ORIGIN`. The sequence data itself is annotated with line numbers. This is the characteristic format of a GenBank file, which contains rich annotations in addition to the sequence. It is not FASTA format.\n\n**Option E:** This excerpt shows a single line where information is separated by commas. This is a form of a delimited format, such as a Comma-Separated Values (CSV) file. It does not follow the `>` header and subsequent sequence line structure required by the FASTA format.\n\nBased on this step-by-step analysis, only Option A adheres to the rules of the FASTA format.", "answer": "$$\\boxed{A}$$", "id": "1493807"}, {"introduction": "Genome assembly algorithms piece together millions of short DNA reads into longer, continuous sequences called contigs. However, not all assemblies are created equal; some are highly fragmented, while others are more contiguous. To quantitatively compare the quality of different assemblies, we use statistics like N50, which this practice [@problem_id:1493824] will teach you how to calculate. Mastering this concept is key to judging whether an assembled genome is suitable for further analysis.", "problem": "A bioinformatics team is working on the genome assembly of a newly discovered species of archaea. After sequencing, they use two different assembly algorithms, which result in two different sets of contiguous DNA sequences (contigs). To evaluate and compare the quality of the two assemblies, the team needs to calculate several metrics, one of the most important being the N50 statistic.\n\nThe N50 statistic is a measure of assembly contiguity. It is defined as the length of the shortest contig in the smallest set of contigs whose lengths sum to at least 50% of the total assembly length.\n\nYou are given the complete list of contig lengths for one of the outputs, \"Assembly Alpha\". The lengths of the contigs, in kilobases (kb), are:\n`110, 15, 95, 6, 25, 45, 70, 4`\n\nCalculate the N50 statistic for Assembly Alpha. Provide your answer as a single number in kilobases (kb).", "solution": "The goal is to calculate the N50 statistic for the given set of contig lengths from \"Assembly Alpha\". The provided contig lengths in kilobases (kb) are: `110, 15, 95, 6, 25, 45, 70, 4`.\n\nStep 1: Calculate the total length of the assembly.\nWe sum the lengths of all the contigs:\n$$ \\text{Total Length} = 110 + 15 + 95 + 6 + 25 + 45 + 70 + 4 $$\n$$ \\text{Total Length} = 370 \\text{ kb} $$\n\nStep 2: Determine the 50% threshold of the total assembly length.\nThis is the target value that our cumulative sum of contig lengths must reach or exceed.\n$$ 50\\% \\text{ of Total Length} = 0.5 \\times 370 \\text{ kb} = 185 \\text{ kb} $$\n\nStep 3: Sort the contig lengths in descending order.\nArranging the contigs from longest to shortest is essential for the N50 calculation.\nSorted list: `110, 95, 70, 45, 25, 15, 6, 4`\n\nStep 4: Calculate the cumulative sum of the sorted contig lengths.\nWe add the contig lengths one by one, starting from the largest, until the cumulative sum is greater than or equal to the 50% threshold calculated in Step 2.\n\n- Add the first (longest) contig:\n  Cumulative Sum = `110` kb. This is less than `185` kb.\n\n- Add the second longest contig:\n  Cumulative Sum = `110 + 95 = 205` kb.\n\nThis cumulative sum (`205` kb) is the first sum that is greater than or equal to the 50% threshold (`185` kb).\n\nStep 5: Identify the N50 value.\nThe N50 statistic is defined as the length of the shortest contig in the set that was summed to reach this threshold. In our case, the set of contigs is `{110, 95}`. The shortest contig in this set is `95` kb. Therefore, the N50 value is the length of this last contig we added.\n\nThe N50 for Assembly Alpha is `95` kb.", "answer": "$$\\boxed{95}$$", "id": "1493824"}, {"introduction": "Once a high-quality genome assembly is in hand, the next challenge is annotation: identifying the locations of genes and other functional elements. The most fundamental task in annotation is finding protein-coding genes by identifying Open Reading Frames (ORFs). This practice [@problem_id:1493765] provides a hands-on look at the logic of a simplified gene-finding algorithm, where you will translate a DNA sequence from a start codon to a stop codon, mimicking the first step of computational gene discovery.", "problem": "A bioinformatician is developing a simplified gene annotation pipeline. The pipeline's first step is to scan raw Deoxyribonucleic Acid (DNA) sequencing reads for potential protein-coding sequences. The algorithm identifies an Open Reading Frame (ORF) by starting at the first occurrence of an `ATG` start codon and translating the subsequent nucleotide triplets until it encounters the first in-frame stop codon.\n\nThe pipeline is given the following DNA sequence segment, which represents the coding strand and is read from 5' to 3':\n\n`5'-ATGGGCCGATTATGGTGTTAGGACCGTTA-3'`\n\nFor the translation process, use the standard RNA codon table provided below. You should treat Thymine (T) in the DNA coding strand as Uracil (U) for the purpose of using this RNA codon table.\n\n**Standard RNA Codon Table:**\n- **Phe (F):** `UUU`, `UUC`\n- **Leu (L):** `UUA`, `UUG`, `CUU`, `CUC`, `CUA`, `CUG`\n- **Ile (I):** `AUU`, `AUC`, `AUA`\n- **Met (M) / START:** `AUG`\n- **Val (V):** `GUU`, `GUC`, `GUA`, `GUG`\n- **Ser (S):** `UCU`, `UCC`, `UCA`, `UCG`, `AGU`, `AGC`\n- **Pro (P):** `CCU`, `CCC`, `CCA`, `CCG`\n- **Thr (T):** `ACU`, `ACC`, `ACA`, `ACG`\n- **Ala (A):** `GCU`, `GCC`, `GCA`, `GCG`\n- **Tyr (Y):** `UAU`, `UAC`\n- **His (H):** `CAU`, `CAC`\n- **Gln (Q):** `CAA`, `CAG`\n- **Asn (N):** `AAU`, `AAC`\n- **Lys (K):** `AAA`, `AAG`\n- **Asp (D):** `GAU`, `GAC`\n- **Glu (E):** `GAA`, `GAG`\n- **Cys (C):** `UGU`, `UGC`\n- **Trp (W):** `UGG`\n- **Arg (R):** `CGU`, `CGC`, `CGA`, `CGG`, `AGA`, `AGG`\n- **Gly (G):** `GGU`, `GGC`, `GGA`, `GGG`\n- **STOP:** `UAA`, `UAG`, `UGA`\n\nHow many amino acids will be in the polypeptide chain predicted by this pipeline from the given DNA segment? Provide your answer as a single integer.", "solution": "The pipeline starts translation at the first occurrence of the start codon in the coding strand, which is the triplet ATG at the 5' end. To use the RNA codon table, replace thymine with uracil when mapping to amino acids.\n\nStarting at the first ATG, partition the DNA sequence into in-frame triplets: ATG-GGC-CGA-TTA-TGG-TGT-TAG-GAC-CGT-...\n\nConvert each DNA triplet to its RNA equivalent (T replaced by U) and translate using the provided table:\n- ATG → AUG → Met (START)\n- GGC → GGC → Gly\n- CGA → CGA → Arg\n- TTA → UUA → Leu\n- TGG → UGG → Trp\n- TGT → UGU → Cys\n- TAG → UAG → STOP\n\nThe first in-frame stop codon encountered is UAG at the seventh codon, so translation stops before incorporating it. Therefore, the polypeptide contains the six amino acids translated from the first six codons.", "answer": "$$\\boxed{6}$$", "id": "1493765"}]}