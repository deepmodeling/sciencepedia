{"hands_on_practices": [{"introduction": "Our journey into the hands-on analysis of microbiomes begins at the source of our data: the molecular measurement itself. Amplicon sequencing, a workhorse of the field, relies on the polymerase chain reaction (PCR), a process susceptible to biases that can distort our view of microbial reality. This exercise [@problem_id:2617745] provides a crucial opportunity to move beyond a qualitative understanding of \"PCR bias\" by building a quantitative model from biophysical principles, allowing you to directly calculate how subtle primer-template mismatches can lead to dramatic differences in observed community composition.", "problem": "In comparative zoology and botany, amplicon-based surveys of host-associated microbiomes rely on polymerase chain reaction (PCR) amplification of marker genes (for example, bacterial $16\\mathrm{S}$ ribosomal RNA or fungal Internal Transcribed Spacer). Primer-template mismatches can bias the observed taxonomic composition, confounding inferences about host physiology and evolution. Consider a three-taxon community with true fractional abundances $x_{\\mathrm{A}}$, $x_{\\mathrm{B}}$, and $x_{\\mathrm{C}}$ summing to $1$, amplified by a forward and a reverse primer. Assume the following foundations.\n\n- Polymerase Chain Reaction (PCR) kinetics: after $n$ cycles, the number of molecules from taxon $i$ is $N_{i}(n)=N_{i}(0)\\,E_{i}^{n}$, where $E_{i}$ is the per-cycle fold amplification for that template.\n- Baseline amplification $E_{0}$ is the same for all templates; differential amplification arises solely from primer binding probabilities.\n- Empirically, primer binding probability is well described by a Boltzmann factor proportional to $\\exp(-\\Delta G/(k_{\\mathrm{B}}T))$. Mismatches increase the effective binding free-energy penalty additively by position-specific amounts. We work in units where $k_{\\mathrm{B}}T=1$, so the per-primer binding probability is $\\exp(-\\sum \\alpha)$ for the relevant mismatched positions.\n\nLet the $3^{\\prime}$-end proximal positions $1$ through $5$ of the forward primer have penalties $\\alpha_{f,1}=1.2$, $\\alpha_{f,2}=0.8$, $\\alpha_{f,3}=0.5$, $\\alpha_{f,4}=0.3$, $\\alpha_{f,5}=0.2$, and the reverse primer have $\\alpha_{r,1}=1.0$, $\\alpha_{r,2}=0.7$, $\\alpha_{r,3}=0.4$, $\\alpha_{r,4}=0.3$, $\\alpha_{r,5}=0.2$. For taxon $i$, the sets of mismatched positions at the $3^{\\prime}$ end are, for the forward primer, $M_{f,i}\\subset\\{1,2,3,4,5\\}$ and, for the reverse primer, $M_{r,i}\\subset\\{1,2,3,4,5\\}$, specified as follows:\n- Taxon $\\mathrm{A}$: $M_{f,\\mathrm{A}}=\\{3\\}$ and $M_{r,\\mathrm{A}}=\\varnothing$.\n- Taxon $\\mathrm{B}$: $M_{f,\\mathrm{B}}=\\{1,4\\}$ and $M_{r,\\mathrm{B}}=\\{2\\}$.\n- Taxon $\\mathrm{C}$: $M_{f,\\mathrm{C}}=\\{2\\}$ and $M_{r,\\mathrm{C}}=\\{1,5\\}$.\n\nAssume $n=25$ cycles and true abundances $x_{\\mathrm{A}}=0.50$, $x_{\\mathrm{B}}=0.30$, $x_{\\mathrm{C}}=0.20$.\n\nTasks:\n1. Starting from the assumptions above, derive the expression for the relative per-cycle priming probability $p_{i}$ of taxon $i$ in terms of its mismatch profiles and the per-position penalties, and relate $E_{i}$ to $E_{0}$ and $p_{i}$.\n2. Using first principles and the definition of composition, derive the expected observed fractional abundance $y_{i}$ after $n$ cycles, in terms of the true abundance $x_{i}$ and $p_{i}$ for $i\\in\\{\\mathrm{A},\\mathrm{B},\\mathrm{C}\\}$.\n3. Propose a corrective weighting scheme $w_{i}$ that, when applied to the observed fractional abundances $y_{i}$, recovers the unbiased true composition under this model.\n4. Using the provided mismatch profiles and penalties, compute the expected observed fractional abundance of taxon $\\mathrm{B}$ after $n=25$ cycles, expressed as a decimal fraction. Round your answer to four significant figures.", "solution": "The problem will be validated against the required criteria before any attempt at a solution.\n\n### Step 1: Extract Givens\n- **Community**: Three taxa, $\\mathrm{A}$, $\\mathrm{B}$, $\\mathrm{C}$, with true fractional abundances $x_{\\mathrm{A}}$, $x_{\\mathrm{B}}$, $x_{\\mathrm{C}}$.\n- **Constraint**: $x_{\\mathrm{A}} + x_{\\mathrm{B}} + x_{\\mathrm{C}} = 1$.\n- **PCR Kinetics**: Number of molecules of taxon $i$ after $n$ cycles is $N_{i}(n)=N_{i}(0)\\,E_{i}^{n}$, where $E_{i}$ is the per-cycle fold amplification.\n- **Amplification Efficiency**: Baseline amplification is $E_{0}$, constant for all templates. Differential amplification is due solely to primer binding probabilities.\n- **Binding Probability**: Proportional to a Boltzmann factor $\\exp(-\\Delta G/(k_{\\mathrm{B}}T))$.\n- **Energy Units**: $k_{\\mathrm{B}}T=1$.\n- **Per-Primer Binding Probability**: Given as $\\exp(-\\sum \\alpha)$ for mismatches.\n- **Forward Primer Mismatch Penalties**: $\\alpha_{f,1}=1.2$, $\\alpha_{f,2}=0.8$, $\\alpha_{f,3}=0.5$, $\\alpha_{f,4}=0.3$, $\\alpha_{f,5}=0.2$.\n- **Reverse Primer Mismatch Penalties**: $\\alpha_{r,1}=1.0$, $\\alpha_{r,2}=0.7$, $\\alpha_{r,3}=0.4$, $\\alpha_{r,4}=0.3$, $\\alpha_{r,5}=0.2$.\n- **Mismatch Sets ($M_{f,i}$, $M_{r,i}$)**:\n    - Taxon $\\mathrm{A}$: $M_{f,\\mathrm{A}}=\\{3\\}$, $M_{r,\\mathrm{A}}=\\varnothing$.\n    - Taxon $\\mathrm{B}$: $M_{f,\\mathrm{B}}=\\{1,4\\}$, $M_{r,\\mathrm{B}}=\\{2\\}$.\n    - Taxon $\\mathrm{C}$: $M_{f,\\mathrm{C}}=\\{2\\}$, $M_{r,\\mathrm{C}}=\\{1,5\\}$.\n- **PCR Cycles**: $n=25$.\n- **True Abundances**: $x_{\\mathrm{A}}=0.50$, $x_{\\mathrm{B}}=0.30$, $x_{\\mathrm{C}}=0.20$.\n- **Tasks**:\n    1. Derive relative per-cycle priming probability $p_{i}$ and relate $E_{i}$ to $E_{0}$ and $p_{i}$.\n    2. Derive observed fractional abundance $y_{i}$ in terms of $x_{i}$ and $p_{i}$.\n    3. Propose a corrective weighting scheme $w_{i}$.\n    4. Compute the expected observed fractional abundance of taxon $\\mathrm{B}$, $y_{\\mathrm{B}}$, to four significant figures.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, using a simplified but standard biophysical model of PCR amplification bias (Boltzmann-like term for binding energy, exponential amplification). It is well-posed, with all necessary data and definitions provided to arrive at a unique solution. The language is objective and precise. The problem does not violate any of the specified invalidity criteria. It is a formalizable and solvable problem in quantitative biology.\n\n### Step 3: Verdict and Action\nThe problem is valid. A complete solution will be provided.\n\n### Solution Derivation\n\n**Task 1: Priming Probability and Amplification Efficiency**\n\nThe binding probability for a single primer (forward or reverse) is given as being proportional to $\\exp(-\\sum \\alpha)$, where the sum is over the mismatch penalties. With $k_{\\mathrm{B}}T=1$, the total mismatch free-energy penalty for taxon $i$ is the sum of penalties from its forward and reverse primers.\nLet $\\Delta G_{f,i} = \\sum_{j \\in M_{f,i}} \\alpha_{f,j}$ and $\\Delta G_{r,i} = \\sum_{k \\in M_{r,i}} \\alpha_{r,k}$.\nA successful amplification event in one cycle requires both primers to bind. Assuming independence, the joint probability of successful priming is proportional to the product of individual probabilities. Thus, the effective priming probability is proportional to $\\exp(-\\Delta G_{f,i}) \\exp(-\\Delta G_{r,i}) = \\exp(-(\\Delta G_{f,i} + \\Delta G_{r,i}))$.\nLet us define the total penalty for taxon $i$ as $\\Delta G_i = \\Delta G_{f,i} + \\Delta G_{r,i}$.\nThe problem asks for the *relative* per-cycle priming probability $p_i$. We define this relative to a perfectly matched template, for which $\\Delta G=0$ and the exponential factor is $\\exp(0)=1$.\nTherefore, the relative priming probability for taxon $i$ is:\n$$p_i = \\exp(-\\Delta G_i) = \\exp\\left(-\\left(\\sum_{j \\in M_{f,i}} \\alpha_{f,j} + \\sum_{k \\in M_{r,i}} \\alpha_{r,k}\\right)\\right)$$\nThe problem states that differential amplification arises solely from these probabilities. The baseline amplification $E_0$ is given for all templates. The most direct and simple model that allows the unspecified constant $E_0$ to cancel out in compositional calculations is a direct proportionality between efficiency $E_i$ and probability $p_i$. Let us define $E_0$ as the amplification efficiency for a perfect match ($p_i=1$). Then, the efficiency for taxon $i$ is given by:\n$$E_i = E_0 p_i$$\n\n**Task 2: Observed Fractional Abundance**\n\nThe initial number of molecules of taxon $i$ is $N_i(0)$. The true fractional abundance is $x_i = N_i(0) / N_{\\text{total}}(0)$, where $N_{\\text{total}}(0) = \\sum_j N_j(0)$.\nAfter $n$ cycles, the number of molecules of taxon $i$ is $N_i(n) = N_i(0) E_i^n$.\nThe observed fractional abundance, $y_i$, is the ratio of molecules of taxon $i$ to the total molecules after amplification:\n$$y_i = \\frac{N_i(n)}{\\sum_j N_j(n)} = \\frac{N_i(0) E_i^n}{\\sum_j N_j(0) E_j^n}$$\nSubstituting $N_i(0) = x_i N_{\\text{total}}(0)$:\n$$y_i = \\frac{x_i N_{\\text{total}}(0) E_i^n}{\\sum_j x_j N_{\\text{total}}(0) E_j^n} = \\frac{x_i E_i^n}{\\sum_j x_j E_j^n}$$\nNow, using the relationship $E_i = E_0 p_i$ from Task 1:\n$$y_i = \\frac{x_i (E_0 p_i)^n}{\\sum_j x_j (E_0 p_j)^n} = \\frac{x_i E_0^n p_i^n}{E_0^n \\sum_j x_j p_j^n} = \\frac{x_i p_i^n}{\\sum_j x_j p_j^n}$$\nThis is the required expression. It correctly shows that the observed composition is independent of the baseline efficiency $E_0$.\n\n**Task 3: Corrective Weighting Scheme**\n\nWe seek a set of weights $w_i$ such that the true composition $x_i$ can be recovered from the observed composition $y_i$. The corrected abundance $x'_i$ is defined as:\n$$x'_i = \\frac{w_i y_i}{\\sum_j w_j y_j}$$\nWe require $x'_i = x_i$. Substituting the expression for $y_i$:\n$$x_i = \\frac{w_i \\left(\\frac{x_i p_i^n}{\\sum_k x_k p_k^n}\\right)}{\\sum_j w_j \\left(\\frac{x_j p_j^n}{\\sum_k x_k p_k^n}\\right)} = \\frac{w_i x_i p_i^n}{\\sum_j w_j x_j p_j^n}$$\nFor $x_i \\neq 0$, we can divide by $x_i$:\n$$1 = \\frac{w_i p_i^n}{\\sum_j w_j x_j p_j^n}$$\nThis implies $w_i p_i^n = \\sum_j w_j x_j p_j^n$. The right-hand side is a constant, independent of the index $i$. Let this constant be $C$.\nThen $w_i p_i^n = C$, which gives $w_i = C/p_i^n$.\nSince the weights are used in a ratio, the constant $C$ is arbitrary and can be set to $1$. A suitable corrective weighting scheme is therefore:\n$$w_i = (p_i)^{-n}$$\n\n**Task 4: Calculation of Observed Abundance of Taxon B**\n\nFirst, we calculate the total mismatch penalties $\\Delta G_i$ for each taxon.\n- Taxon $\\mathrm{A}$: $\\Delta G_{\\mathrm{A}} = \\alpha_{f,3} = 0.5$.\n- Taxon $\\mathrm{B}$: $\\Delta G_{\\mathrm{B}} = (\\alpha_{f,1} + \\alpha_{f,4}) + \\alpha_{r,2} = (1.2 + 0.3) + 0.7 = 2.2$.\n- Taxon $\\mathrm{C}$: $\\Delta G_{\\mathrm{C}} = \\alpha_{f,2} + (\\alpha_{r,1} + \\alpha_{r,5}) = 0.8 + (1.0 + 0.2) = 2.0$.\n\nNext, we calculate the relative priming probabilities $p_i = \\exp(-\\Delta G_i)$.\n- $p_{\\mathrm{A}} = \\exp(-0.5)$.\n- $p_{\\mathrm{B}} = \\exp(-2.2)$.\n- $p_{\\mathrm{C}} = \\exp(-2.0)$.\n\nThe given parameters are $x_{\\mathrm{A}}=0.50$, $x_{\\mathrm{B}}=0.30$, $x_{\\mathrm{C}}=0.20$, and $n=25$.\nThe observed fractional abundance of taxon $\\mathrm{B}$ is:\n$$y_{\\mathrm{B}} = \\frac{x_{\\mathrm{B}} p_{\\mathrm{B}}^{n}}{x_{\\mathrm{A}} p_{\\mathrm{A}}^{n} + x_{\\mathrm{B}} p_{\\mathrm{B}}^{n} + x_{\\mathrm{C}} p_{\\mathrm{C}}^{n}}$$\nSubstituting the values:\n$$y_{\\mathrm{B}} = \\frac{0.30 \\times (\\exp(-2.2))^{25}}{0.50 \\times (\\exp(-0.5))^{25} + 0.30 \\times (\\exp(-2.2))^{25} + 0.20 \\times (\\exp(-2.0))^{25}}$$\n$$y_{\\mathrm{B}} = \\frac{0.30 \\exp(-55.0)}{0.50 \\exp(-12.5) + 0.30 \\exp(-55.0) + 0.20 \\exp(-50.0)}$$\nTo compute this, we evaluate the terms in the denominator:\n- Term A: $0.50 \\exp(-12.5) \\approx 0.50 \\times (3.72665 \\times 10^{-6}) \\approx 1.86333 \\times 10^{-6}$.\n- Term B: $0.30 \\exp(-55.0) \\approx 0.30 \\times (1.38879 \\times 10^{-24}) \\approx 4.16638 \\times 10^{-25}$.\n- Term C: $0.20 \\exp(-50.0) \\approx 0.20 \\times (1.91517 \\times 10^{-22}) \\approx 3.83034 \\times 10^{-23}$.\n\nThe denominator is the sum of these terms:\nDenominator $\\approx (1.86333 \\times 10^{-6}) + (4.16638 \\times 10^{-25}) + (3.83034 \\times 10^{-23}) \\approx 1.86333 \\times 10^{-6}$.\nThe terms for taxa $\\mathrm{B}$ and $\\mathrm{C}$ are negligible compared to the term for taxon $\\mathrm{A}$.\nThe numerator is Term B: $4.16638 \\times 10^{-25}$.\nSo, the observed fractional abundance of taxon $\\mathrm{B}$ is:\n$$y_{\\mathrm{B}} \\approx \\frac{4.16638 \\times 10^{-25}}{1.86333 \\times 10^{-6}} \\approx 2.23594 \\times 10^{-19}$$\nRounding to four significant figures, we get $2.236 \\times 10^{-19}$.\nThis result demonstrates a severe amplification bias against taxon $\\mathrm{B}$ due to its multiple high-penalty primer mismatches.", "answer": "$$\\boxed{2.236 \\times 10^{-19}}$$", "id": "2617745"}, {"introduction": "After generating sequence counts, we face the challenge of comparing samples with different library sizes, a step fraught with statistical pitfalls. For decades, the field relied on a technique called rarefaction—subsampling counts to an equal depth—but is this practice statistically sound? This problem [@problem_id:2617801] challenges you to use fundamental principles of statistics, such as the law of total variance and the known properties of diversity estimators, to dissect the impact of rarefaction on bias and variance and to reason towards more robust, modern alternatives.", "problem": "A comparative study of gut microbiomes from two vertebrate host lineages with distinct physiologies measures amplicon sequence variant counts per sample by high-throughput sequencing. For each sample, the observed counts over taxa are generated by a multinomial sampling process with total reads $N$ and underlying true relative abundances $\\mathbf{p} = (p_1,\\dots,p_S)$, where $S$ is the total number of taxa in the regional pool. Investigators wish to compare within-sample diversity between host lineages using richness and Shannon diversity, while acknowledging that sequencing depth differs across samples.\n\nConsider the following foundational base:\n- Multinomial sampling: if $X_i$ denotes the count for taxon $i$ in a sample with total reads $N$, then $(X_1,\\dots,X_S) \\sim \\mathrm{Multinomial}(N,\\mathbf{p})$ and $\\hat{p}_i = X_i/N$ is the plug-in estimate of $p_i$.\n- Rarefaction: equalizing library sizes by subsampling without replacement to a fixed depth $n^\\star < N$ is equivalent to drawing $(R_1,\\dots,R_S)$ from a multivariate hypergeometric distribution conditional on $(X_1,\\dots,X_S)$, and then using $R_i/n^\\star$ in place of $\\hat{p}_i$.\n- Law of total variance: for any random variable $Y$ and conditioning variable $Z$, $\\mathrm{Var}(Y) = \\mathbb{E}[\\mathrm{Var}(Y \\mid Z)] + \\mathrm{Var}(\\mathbb{E}[Y \\mid Z])$.\n- Observed richness in a multinomial sample of size $n$ has expectation $\\sum_{i=1}^S \\left(1 - (1-p_i)^n\\right)$, which is strictly increasing in $n$ for any $p_i \\in (0,1)$.\n- The Shannon entropy of the true community is $H = -\\sum_{i=1}^S p_i \\log p_i$. The plug-in estimator based on empirical proportions has a negative small-sample bias that worsens as $n$ decreases, a consequence of the concavity of the logarithm.\n\nUsing only these principles, evaluate how rarefaction affects the variance and bias of richness and Shannon diversity estimates across samples with heterogeneous $N$. Then, select the option that both correctly characterizes these effects and proposes a statistically principled alternative that preserves sample-size differences while controlling for compositionality in microbiome data.\n\nWhich option is most appropriate?\n\nA. Rarefaction equalizes $N$ and therefore reduces variance in richness and Shannon estimates; by discarding reads it also removes low-abundance noise and eliminates bias. It should be preferred in all cases.\n\nB. Rarefaction introduces an extra hypergeometric sampling stage that inflates variance, and by reducing $n$ it increases negative bias in plug-in Shannon estimates and reduces expected observed richness; instead, retain all counts and model them with a multinomial or Dirichlet–multinomial likelihood including sample-specific library size as an offset, estimate alpha diversity using coverage-standardized Hill numbers, and address compositionality with log-ratio transforms (for example, centered log-ratio) or validated reference frames; this preserves differences in $N$ without discarding data.\n\nC. Rarefaction leaves bias unchanged because it is an unbiased resampling scheme and typically lowers variance in diversity estimates; a better alternative is total-sum scaling to relative abundances followed by Euclidean analysis, which controls compositionality by making all vectors sum to $1$.\n\nD. Rarefaction reduces bias by removing rare taxa that are mostly sequencing errors; a superior approach is to filter all low-count taxa and then compare observed richness with standard $t$-tests using the filtered data.\n\nE. Rarefaction increases variance but also eliminates compositional effects by matching depths; an alternative is to always rarefy to the minimum $N$ observed and analyze untransformed proportions, because compositionality is no longer a concern when depths are equalized.", "solution": "The problem statement is submitted for validation.\n\n### Step 1: Extract Givens\n\nThe problem provides the following data, definitions, and principles:\n- **System**: A comparative study of gut microbiomes from two vertebrate host lineages.\n- **Data**: Amplicon sequence variant counts per sample, generated by high-throughput sequencing.\n- **Sampling Model**: Observed counts $(X_1, \\dots, X_S)$ for $S$ taxa follow a multinomial distribution, $\\mathrm{Multinomial}(N, \\mathbf{p})$, where $N$ is the total reads (library size) for a sample and $\\mathbf{p} = (p_1, \\dots, p_S)$ are the true relative abundances summing to $1$.\n- **Estimator**: The plug-in estimate of the true proportion $p_i$ is $\\hat{p}_i = X_i/N$.\n- **Goal**: Compare within-sample diversity (richness and Shannon diversity) between host lineages.\n- **Challenge**: Sequencing depth $N$ is heterogeneous across samples.\n- **Technique under scrutiny**: Rarefaction, defined as subsampling without replacement to a fixed depth $n^\\star < N$. The resulting counts $(R_1, \\dots, R_S)$ follow a multivariate hypergeometric distribution conditional on the original counts $(X_1, \\dots, X_S)$. The post-rarefaction proportions are $R_i/n^\\star$.\n- **Principle 1 (Law of Total Variance)**: For any random variables $Y$ and $Z$, $\\mathrm{Var}(Y) = \\mathbb{E}[\\mathrm{Var}(Y \\mid Z)] + \\mathrm{Var}(\\mathbb{E}[Y \\mid Z])$.\n- **Principle 2 (Expected Richness)**: The expected observed richness in a multinomial sample of size $n$ is given by $\\sum_{i=1}^S \\left(1 - (1-p_i)^n\\right)$. This expectation is a strictly increasing function of the sample size $n$ for any $p_i \\in (0,1)$.\n- **Principle 3 (Shannon Diversity Bias)**: The plug-in estimator of Shannon entropy, $H = -\\sum_{i=1}^S p_i \\log p_i$, has a negative small-sample bias. This bias becomes more severe (i.e., more negative) as the sample size $n$ decreases, due to the concavity of the logarithm function.\n\n### Step 2: Validate Using Extracted Givens\n\nThe problem statement must be evaluated for scientific grounding, well-posedness, and objectivity.\n\n1.  **Scientific or Factual Unsoundness**: The problem is factually sound. It describes a canonical problem in microbial ecology and bioinformatics. The statistical models (Multinomial, multivariate hypergeometric) and concepts (rarefaction, richness, Shannon diversity, compositionality) are standard in this field. The provided principles—the law of total variance, the formula for expected richness, and the properties of the plug-in Shannon estimator—are all correct and well-established results in mathematical statistics.\n2.  **Non-Formalizable or Irrelevant**: The problem is highly relevant to the specified topic (*the microbiome in host physiology and evolution*). It is not metaphorical and is entirely formalizable within a statistical framework.\n3.  **Incomplete or Contradictory Setup**: The problem provides a sufficient set of principles to analyze the effects of rarefaction and evaluate the proposed alternatives. There are no contradictions.\n4.  **Unrealistic or Infeasible**: The scenario of heterogeneous sequencing depths is not only realistic but is the default situation in virtually all high-throughput sequencing studies.\n5.  **Ill-Posed or Poorly Structured**: The problem is well-posed. It asks for an evaluation of a specific technique (rarefaction) based on given principles and a comparison with alternatives. This task has a definite, verifiable answer based on statistical theory.\n6.  **Pseudo-Profound, Trivial, or Tautological**: The problem is not trivial. It requires a correct application and synthesis of several statistical concepts (sampling distributions, bias, variance) to dissect a common but often misunderstood bioinformatics practice.\n7.  **Outside Scientific Verifiability**: All claims and principles are scientifically verifiable.\n\n### Step 3: Verdict and Action\n\nThe problem statement is **valid**. It is a well-posed, scientifically grounded question in biostatistics. I will proceed with the solution.\n\n### Derivation and Evaluation\n\nThe task is to evaluate rarefaction's effect on bias and variance of diversity estimates and identify a superior alternative. I will use the provided principles. Let a diversity estimate (e.g., richness or Shannon diversity) from a rarefied sample be the random variable $Y$. The original, full-depth count vector is the conditioning variable $Z = (X_1, \\dots, X_S)$. The rarefaction process is a second stage of sampling, conditional on $Z$.\n\n**Effect on Variance:**\nAccording to the Law of Total Variance, $\\mathrm{Var}(Y) = \\mathbb{E}[\\mathrm{Var}(Y \\mid Z)] + \\mathrm{Var}(\\mathbb{E}[Y \\mid Z])$.\nThe term $\\mathbb{E}[\\mathrm{Var}(Y \\mid Z)]$ represents the variance introduced by the rarefaction step (the hypergeometric subsampling), averaged over all possible initial samples $Z$. Since rarefaction is a random subsampling process, for any non-trivial diversity estimator, this variance is positive. This term represents an additional source of variance that would not exist if we used an estimator based on the full data $Z$. Therefore, rarefaction discards data and, in doing so, *inflates* a properly defined total variance of the estimate across repeated experiments. The notion that it reduces variance is incorrect; it trades the true variance component from variable library sizes for an artificial inflation of variance due to random data discarding.\n\n**Effect on Bias of Richness Estimator:**\nAccording to Principle 2, expected observed richness, $\\mathbb{E}[\\text{Richness}] = \\sum_{i=1}^S (1 - (1-p_i)^n)$, is a strictly increasing function of sample size $n$. Rarefaction replaces the original library sizes $N_j$ for each sample $j$ with a smaller, fixed size $n^\\star$. This means the resulting richness estimate for any given sample will have a lower expected value than an estimate based on its original, larger library size. It systematically pushes all estimates downward, losing information about communities that were more deeply sequenced, and makes it impossible to estimate the true richness of any community. Thus, it *reduces the expected observed richness*.\n\n**Effect on Bias of Shannon Diversity Estimator:**\nAccording to Principle 3, the plug-in Shannon estimator has a negative bias that worsens as sample size $n$ decreases. Rarefaction reduces the sample size from $N$ to $n^\\star < N$. Consequently, for any sample, the negative bias of the Shannon estimate computed on the rarefied data will be of greater magnitude than the bias of an estimate computed on the full data. Therefore, rarefaction *increases the negative bias* of the plug-in Shannon estimator.\n\n**Evaluation of Alternatives:**\nA principled alternative must address the following:\n1.  **Data Retention**: It should use all available data, not discard it.\n2.  **Variable Sequencing Depth**: It must properly account for the variable information content in samples with different library sizes ($N$).\n3.  **Compositionality**: It must respect the compositional nature of the data (i.e., that proportions sum to a constant and are thus not independent).\n\n### Option-by-Option Analysis\n\n**A. Rarefaction equalizes $N$ and therefore reduces variance in richness and Shannon estimates; by discarding reads it also removes low-abundance noise and eliminates bias. It should be preferred in all cases.**\n- **`reduces variance`**: Incorrect. As shown by the law of total variance, rarefaction introduces an additional sampling step, which inflates variance.\n- **`removes low-abundance noise`**: Unscientific language. \"Noise\" is not well-defined. This amounts to arbitrary data filtering. Many rare taxa are biologically real and informative.\n- **`eliminates bias`**: Incorrect. For richness, it systematically reduces the expected value. For Shannon diversity, it increases the negative bias.\n**Verdict: Incorrect.**\n\n**B. Rarefaction introduces an extra hypergeometric sampling stage that inflates variance, and by reducing $n$ it increases negative bias in plug-in Shannon estimates and reduces expected observed richness; instead, retain all counts and model them with a multinomial or Dirichlet–multinomial likelihood including sample-specific library size as an offset, estimate alpha diversity using coverage-standardized Hill numbers, and address compositionality with log-ratio transforms (for example, centered log-ratio) or validated reference frames; this preserves differences in $N$ without discarding data.**\n- **`inflates variance`**: Correct. This follows from the law of total variance.\n- **`increases negative bias in plug-in Shannon estimates`**: Correct. This follows from Principle 3.\n- **`reduces expected observed richness`**: Correct. This follows from Principle 2.\n- **`Alternative`**: The proposed alternative is a summary of modern best practices.\n    - Modeling counts with appropriate distributions (Multinomial, Dirichlet-Multinomial) and using library size as an offset in a generalized linear model framework is the correct way to handle variable sampling effort.\n    - Coverage-standardized Hill numbers are the state-of-the-art method for comparing diversity across samples with different library sizes, replacing rarefaction.\n    - Log-ratio transforms are the theoretically sound method for analyzing compositional data.\nThis option correctly identifies the statistical flaws of rarefaction and proposes a comprehensive and statistically principled replacement strategy.\n**Verdict: Correct.**\n\n**C. Rarefaction leaves bias unchanged because it is an unbiased resampling scheme and typically lowers variance in diversity estimates; a better alternative is total-sum scaling to relative abundances followed by Euclidean analysis, which controls compositionality by making all vectors sum to $1$.**\n- **`leaves bias unchanged`**: Incorrect. As established from the principles, it changes the bias for both richness and Shannon estimators. The resampling may be \"unbiased\" with respect to the proportions in the original sample, but the subsequent diversity calculation is a nonlinear transformation, which does not preserve this property for the final estimate's expectation.\n- **`lowers variance`**: Incorrect. It inflates variance.\n- **`Alternative`**: Total-sum scaling (i.e., converting to proportions) followed by standard methods assuming Euclidean geometry (e.g., PCA, t-tests on proportions) is known to be statistically invalid for compositional data and can lead to spurious conclusions. Making all vectors sum to $1$ is the *definition* of the compositional problem, not its solution.\n**Verdict: Incorrect.**\n\n**D. Rarefaction reduces bias by removing rare taxa that are mostly sequencing errors; a superior approach is to filter all low-count taxa and then compare observed richness with standard $t$-tests using the filtered data.**\n- **`reduces bias by removing rare taxa`**: This is a baseless assertion. It assumes rare taxa are errors, and it confuses the statistical definition of bias with an ad-hoc filtering procedure.\n- **`Alternative`**: This is also statistically poor practice. Arbitrary filtering of low-count taxa is not principled. Using standard $t$-tests on richness counts without an appropriate error model (e.g., Poisson, Negative Binomial) that accounts for the mean-variance relationship is not robust.\n**Verdict: Incorrect.**\n\n**E. Rarefaction increases variance but also eliminates compositional effects by matching depths; an alternative is to always rarefy to the minimum $N$ observed and analyze untransformed proportions, because compositionality is no longer a concern when depths are equalized.**\n- **`increases variance`**: This part is correct.\n- **`eliminates compositional effects`**: This is fundamentally false. Compositionality is the constraint that proportions must sum to a constant ($1$). This constraint exists regardless of whether the total counts ($N$) are equal across samples. Equalizing the denominator does not make the numerators independent.\n- **`Alternative`**: The premise that compositionality is no longer a concern is wrong, making the proposed analysis of untransformed proportions invalid.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{B}$$", "id": "2617801"}, {"introduction": "Ultimately, the goal of studying microbiomes is to understand their function and interactions within the host ecosystem. Moving beyond descriptive statistics, this final practice guides you into the realm of mechanistic modeling using Flux Balance Analysis (FBA), a cornerstone of systems biology. In this exercise [@problem_id:2617800], you will construct a stoichiometric metabolic model for a microbial community from the ground up, using linear programming to predict how host-supplied nutrients and constraints on metabolite exchange shape the growth and cooperation of its members.", "problem": "You are modeling a minimal, scientifically plausible, stoichiometric community metabolic network for a cross-feeding microbial pair living in a host-associated environment. Microbe $1$ ferments glucose to lactate and requires acetate to build biomass; Microbe $2$ oxidizes lactate to acetate using oxygen and also forms its own biomass from lactate. The host imposes constraints on nutrient supply and on how quickly extracellular acetate and lactate can be cleared. Use the steady-state mass balance formulation and Flux Balance Analysis (FBA) to predict the specific growth rates of both microbes under several host-imposed constraints.\n\nFundamental base to use:\n- Steady-state mass balance for metabolites given by $$S \\, v = 0,$$ where $S$ is the stoichiometric matrix and $v$ is the vector of reaction fluxes.\n- Linear bounds on reaction fluxes to represent uptake limits and host clearance capacities.\n- Linear programming to maximize a linear community objective function (sum of growth rates).\n\nNetwork specification:\n- Metabolites are divided into extracellular and intracellular pools. Extracellular metabolites: $\\mathrm{Glc_e}$, $\\mathrm{Lac_e}$, $\\mathrm{Ace_e}$, $\\mathrm{NH4_e}$, $\\mathrm{O2_e}$, $\\mathrm{CO2_e}$. Intracellular pools for Microbe $1$: $\\mathrm{Glc1}$, $\\mathrm{Lac1}$, $\\mathrm{Ace1}$, $\\mathrm{NH4\\_1}$, $\\mathrm{ATP1}$, $\\mathrm{ADP1}$, $\\mathrm{Pi1}$, $\\mathrm{B1}$. Intracellular pools for Microbe $2$: $\\mathrm{Lac2}$, $\\mathrm{Ace2}$, $\\mathrm{NH4\\_2}$, $\\mathrm{O2\\_2}$, $\\mathrm{ATP2}$, $\\mathrm{ADP2}$, $\\mathrm{Pi2}$, $\\mathrm{B2}$.\n- Reactions (all are irreversible with lower bound $0$ and large upper bound unless otherwise specified):\n\nExternal supply and host clearance:\n1. $\\mathrm{Glc\\_src}: \\quad \\varnothing \\rightarrow \\mathrm{Glc\\_e}$ with $0 \\le v \\le G$.\n2. $\\mathrm{O2\\_src}: \\quad \\varnothing \\rightarrow \\mathrm{O2\\_e}$ with $0 \\le v \\le O$.\n3. $\\mathrm{NH4\\_src}: \\quad \\varnothing \\rightarrow \\mathrm{NH4\\_e}$ with $0 \\le v \\le N$, where $N$ is a large number (set $N = 10^6$).\n4. $\\mathrm{Ace\\_sink}: \\quad \\mathrm{Ace\\_e} \\rightarrow \\varnothing$ with $0 \\le v \\le A$.\n5. $\\mathrm{Lac\\_sink}: \\quad \\mathrm{Lac\\_e} \\rightarrow \\varnothing$ with $0 \\le v \\le L$.\n6. $\\mathrm{CO2\\_sink}: \\quad \\mathrm{CO2\\_e} \\rightarrow \\varnothing$ with $0 \\le v \\le 10^6$.\n\nTransport for Microbe $1$:\n7. $\\mathrm{M1\\_Glc\\_upt}: \\quad \\mathrm{Glc\\_e} \\rightarrow \\mathrm{Glc1}$.\n8. $\\mathrm{M1\\_Ace\\_upt}: \\quad \\mathrm{Ace\\_e} \\rightarrow \\mathrm{Ace1}$.\n9. $\\mathrm{M1\\_Lac\\_sec}: \\quad \\mathrm{Lac1} \\rightarrow \\mathrm{Lac\\_e}$.\n10. $\\mathrm{M1\\_NH4\\_upt}: \\quad \\mathrm{NH4\\_e} \\rightarrow \\mathrm{NH4\\_1}$.\n\nTransport for Microbe $2$:\n11. $\\mathrm{M2\\_Lac\\_upt}: \\quad \\mathrm{Lac\\_e} \\rightarrow \\mathrm{Lac2}$.\n12. $\\mathrm{M2\\_Ace\\_sec}: \\quad \\mathrm{Ace2} \\rightarrow \\mathrm{Ace\\_e}$.\n13. $\\mathrm{M2\\_O2\\_upt}: \\quad \\mathrm{O2\\_e} \\rightarrow \\mathrm{O2\\_2}$.\n14. $\\mathrm{M2\\_NH4\\_upt}: \\quad \\mathrm{NH4\\_e} \\rightarrow \\mathrm{NH4\\_2}$.\n\nInternal metabolism Microbe $1$:\n15. $\\mathrm{M1\\_ferm}: \\quad \\mathrm{Glc1} + 2\\,\\mathrm{ADP1} + 2\\,\\mathrm{Pi1} \\rightarrow 2\\,\\mathrm{Lac1} + 2\\,\\mathrm{ATP1}$.\n16. $\\mathrm{M1\\_assim}: \\quad \\mathrm{Ace1} + \\mathrm{ATP1} \\rightarrow \\mathrm{B1} + \\mathrm{ADP1} + \\mathrm{Pi1}$.\n17. $\\mathrm{M1\\_biomass}: \\quad \\mathrm{B1} + \\mathrm{NH4\\_1} + \\mathrm{ATP1} \\rightarrow \\mathrm{ADP1} + \\mathrm{Pi1}$, the flux of this reaction is the specific growth rate $\\mu_1$ of Microbe $1$ in $\\mathrm{h}^{-1}$.\n18. $\\mathrm{M1\\_ATPM}: \\quad \\mathrm{ATP1} \\rightarrow \\mathrm{ADP1} + \\mathrm{Pi1}$ with lower bound $0$ and large upper bound.\n\nInternal metabolism Microbe $2$:\n19. $\\mathrm{M2\\_ox}: \\quad \\mathrm{Lac2} + \\mathrm{O2\\_2} + 3\\,\\mathrm{ADP2} + 3\\,\\mathrm{Pi2} \\rightarrow \\mathrm{Ace2} + 3\\,\\mathrm{ATP2} + \\mathrm{CO2\\_e}$.\n20. $\\mathrm{M2\\_bioprec}: \\quad \\mathrm{Lac2} + \\mathrm{ATP2} \\rightarrow \\mathrm{B2} + \\mathrm{ADP2} + \\mathrm{Pi2} + \\mathrm{CO2\\_e}$.\n21. $\\mathrm{M2\\_biomass}: \\quad \\mathrm{B2} + \\mathrm{NH4\\_2} + \\mathrm{ATP2} \\rightarrow \\mathrm{ADP2} + \\mathrm{Pi2}$, the flux of this reaction is the specific growth rate $\\mu_2$ of Microbe $2$ in $\\mathrm{h}^{-1}$.\n22. $\\mathrm{M2\\_ATPM}: \\quad \\mathrm{ATP2} \\rightarrow \\mathrm{ADP2} + \\mathrm{Pi2}$ with lower bound $0$ and large upper bound.\n\nObjective:\n- Maximize the community growth rate given by $$\\text{maximize } \\mu_1 + \\mu_2,$$ subject to $$S\\,v = 0$$ and the bounds above. Interpret $\\mu_1$ as the flux of $\\mathrm{M1\\_biomass}$ and $\\mu_2$ as the flux of $\\mathrm{M2\\_biomass}$, in $\\mathrm{h}^{-1}$.\n\nAngles are not used. All rates must be reported in units of $\\mathrm{h}^{-1}$. Report numerical values as decimal floats rounded to six decimal places. Do not use percentage signs.\n\nTest suite and parameters:\nLet the host supplies and clearances be given for four cases as tuples $(G,O,A,L)$, where $G$ is maximum glucose supply, $O$ is maximum oxygen supply, $A$ is maximum acetate clearance capacity, and $L$ is maximum lactate clearance capacity, all in consistent flux units per hour. Use $N = 10^6$ for ammonium supply in all cases.\n\n- Case $1$: $(G,O,A,L) = (10,10,5,5)$.\n- Case $2$: $(G,O,A,L) = (10,0,5,100)$.\n- Case $3$: $(G,O,A,L) = (2,10,0.1,0.1)$.\n- Case $4$: $(G,O,A,L) = (50,100,20,20)$.\n\nFinal output format:\n- Your program should produce a single line of output containing a list of four items, one per test case, where each item is a two-element list $[\\mu_1,\\mu_2]$ with each value rounded to six decimal places. For example: $[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]]$ with no extra spaces.", "solution": "The problem presented requires the application of Flux Balance Analysis (FBA), a standard computational method in systems biology, to determine the steady-state growth rates of a two-species microbial community. The problem is well-defined, scientifically grounded, and internally consistent. It provides a complete specification of the metabolic network, including metabolites, reactions, stoichiometry, and environmental constraints. The objective is clearly stated as the maximization of the sum of the growth rates of the two microbes. This formulation corresponds to a canonical Linear Programming (LP) problem, for which robust solution methods exist. Therefore, the problem is valid and a solution can be constructed.\n\nThe core principle of FBA is the assumption of a pseudo-steady state for the intracellular metabolite concentrations. This leads to the mass balance equation for all metabolites in the system:\n$$S \\cdot \\mathbf{v} = \\mathbf{0}$$\nwhere $S$ is the stoichiometric matrix of dimensions $m \\times n$ ($m$ metabolites, $n$ reactions), and $\\mathbf{v}$ is the vector of $n$ reaction fluxes. The entries $S_{ij}$ of the matrix represent the stoichiometric coefficient of metabolite $i$ in reaction $j$. A positive coefficient indicates production, and a negative coefficient indicates consumption.\n\nThe system is further constrained by thermodynamic and environmental limitations, which are expressed as lower and upper bounds on the individual fluxes:\n$$ \\mathbf{v}_{lb} \\le \\mathbf{v} \\le \\mathbf{v}_{ub} $$\nFor irreversible reactions, the lower bound is typically $0$. The upper bounds are determined by factors such as enzyme capacity, nutrient availability from the host ($G$, $O$), or host clearance capacity ($A$, $L$).\n\nThe biological objective, in this case, maximizing community growth, is formulated as a linear objective function to be maximized:\n$$ Z = \\mathbf{c}^T \\cdot \\mathbf{v} $$\nwhere $\\mathbf{c}$ is a vector that selects the flux(es) of interest. Here, we wish to maximize $\\mu_1 + \\mu_2$, where $\\mu_1$ is the flux of the biomass reaction for Microbe 1 ($v_{\\text{M1\\_biomass}}$) and $\\mu_2$ is the flux of the biomass reaction for Microbe 2 ($v_{\\text{M2\\_biomass}}$).\n\nCombining these elements yields a standard LP problem:\n$$ \\begin{aligned} \\text{maximize} \\quad & \\mathbf{c}^T \\cdot \\mathbf{v} \\\\ \\text{subject to} \\quad & S \\cdot \\mathbf{v} = \\mathbf{0} \\\\ & \\mathbf{v}_{lb} \\le \\mathbf{v} \\le \\mathbf{v}_{ub} \\end{aligned} $$\nStandard LP solvers typically perform minimization. Thus, we will minimize $-Z = -\\mathbf{c}^T \\cdot \\mathbf{v}$.\n\nTo solve the specific problem, we first construct the stoichiometric matrix $S$ from the $22$ given reactions and $22$ metabolites. The metabolites and reactions are ordered systematically to define the rows and columns of $S$. Let the metabolites be ordered as: $6$ extracellular ($\\mathrm{Glc_e}$, $\\mathrm{Lac_e}$, $\\mathrm{Ace_e}$, $\\mathrm{NH4_e}$, $\\mathrm{O2_e}$, $\\mathrm{CO2_e}$), followed by $8$ for Microbe 1 ($\\mathrm{Glc1}$, $\\mathrm{Lac1}$, ..., $\\mathrm{B1}$), and $8$ for Microbe 2 ($\\mathrm{Lac2}$, $\\mathrm{Ace2}$, ..., $\\mathrm{B2}$). Let the reactions be ordered as they are listed in the problem statement. The resulting $S$ is a $22 \\times 22$ matrix.\n\nFor example, the mass balance for the extracellular lactate ($\\mathrm{Lac_e}$) involves its secretion by Microbe 1 ($v_9$), its clearance by the host ($v_5$), and its uptake by Microbe 2 ($v_{11}$). The corresponding row in the $S \\cdot \\mathbf{v} = \\mathbf{0}$ equation is:\n$$ +1 \\cdot v_9 - 1 \\cdot v_5 - 1 \\cdot v_{11} = 0 $$\n\nThe objective vector $\\mathbf{c}$ is constructed to represent the maximization of $\\mu_1 + \\mu_2$. Given that $\\mu_1$ is the flux of reaction $17$ ($v_{17}$) and $\\mu_2$ is the flux of reaction $21$ ($v_{21}$), we want to maximize $v_{17} + v_{21}$. For a minimization solver, the objective vector $\\mathbf{c}$ will be a vector of zeros, with $-1$ at the positions corresponding to $v_{17}$ and $v_{21}$.\n\nThe flux bounds are defined for each test case. All reactions are given as irreversible, so all lower bounds are $0$. The upper bounds are specified as follows:\n- $v_1 \\le G$\n- $v_2 \\le O$\n- $v_3 \\le N = 10^6$\n- $v_4 \\le A$\n- $v_5 \\le L$\n- $v_6 \\le 10^6$\n- All other reaction fluxes ($v_7$ through $v_{22}$) are given a large upper bound, for which we use $10^6$, consistent with the non-limiting supply of ammonium.\n\nFor each of the four test cases $(G, O, A, L)$, we assemble the corresponding flux bounds vector $\\mathbf{v}_{ub}$ and solve the defined LP problem using a numerical solver, specifically `scipy.optimize.linprog`. The resulting optimal flux vector $\\mathbf{v}^*$ provides the solution. The growth rates $\\mu_1$ and $\\mu_2$ are then extracted from this vector as $v_{17}^*$ and $v_{21}^*$, respectively. The final values are rounded to six decimal places as required. The provided Python code implements this entire procedure.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Solves the Flux Balance Analysis problem for the microbial community.\n    \"\"\"\n    # Test cases as tuples (G, O, A, L)\n    test_cases = [\n        (10, 10, 5, 5),\n        (10, 0, 5, 100),\n        (2, 10, 0.1, 0.1),\n        (50, 100, 20, 20),\n    ]\n\n    # There are 22 metabolites and 22 reactions.\n    num_metabolites = 22\n    num_reactions = 22\n    \n    # Stoichiometric matrix S (22x22)\n    S = np.zeros((num_metabolites, num_reactions))\n\n    # Metabolite indices (0-based)\n    met_map = {\n        'Glc_e': 0, 'Lac_e': 1, 'Ace_e': 2, 'NH4_e': 3, 'O2_e': 4, 'CO2_e': 5,\n        'Glc1': 6, 'Lac1': 7, 'Ace1': 8, 'NH4_1': 9, 'ATP1': 10, 'ADP1': 11, 'Pi1': 12, 'B1': 13,\n        'Lac2': 14, 'Ace2': 15, 'NH4_2': 16, 'O2_2': 17, 'ATP2': 18, 'ADP2': 19, 'Pi2': 20, 'B2': 21\n    }\n\n    # Reaction indices (0-based)\n    rxn_map = {\n        'Glc_src': 0, 'O2_src': 1, 'NH4_src': 2, 'Ace_sink': 3, 'Lac_sink': 4, 'CO2_sink': 5,\n        'M1_Glc_upt': 6, 'M1_Ace_upt': 7, 'M1_Lac_sec': 8, 'M1_NH4_upt': 9,\n        'M2_Lac_upt': 10, 'M2_Ace_sec': 11, 'M2_O2_upt': 12, 'M2_NH4_upt': 13,\n        'M1_ferm': 14, 'M1_assim': 15, 'M1_biomass': 16, 'M1_ATPM': 17,\n        'M2_ox': 18, 'M2_bioprec': 19, 'M2_biomass': 20, 'M2_ATPM': 21\n    }\n\n    # Reaction definitions: S[met_idx, rxn_idx] = stoich_coeff\n    # 1. Glc_src: -> Glc_e\n    S[met_map['Glc_e'], rxn_map['Glc_src']] = 1\n    # 2. O2_src: -> O2_e\n    S[met_map['O2_e'], rxn_map['O2_src']] = 1\n    # 3. NH4_src: -> NH4_e\n    S[met_map['NH4_e'], rxn_map['NH4_src']] = 1\n    # 4. Ace_sink: Ace_e -> \n    S[met_map['Ace_e'], rxn_map['Ace_sink']] = -1\n    # 5. Lac_sink: Lac_e ->\n    S[met_map['Lac_e'], rxn_map['Lac_sink']] = -1\n    # 6. CO2_sink: CO2_e ->\n    S[met_map['CO2_e'], rxn_map['CO2_sink']] = -1\n    # 7. M1_Glc_upt: Glc_e -> Glc1\n    S[met_map['Glc_e'], rxn_map['M1_Glc_upt']] = -1\n    S[met_map['Glc1'], rxn_map['M1_Glc_upt']] = 1\n    # 8. M1_Ace_upt: Ace_e -> Ace1\n    S[met_map['Ace_e'], rxn_map['M1_Ace_upt']] = -1\n    S[met_map['Ace1'], rxn_map['M1_Ace_upt']] = 1\n    # 9. M1_Lac_sec: Lac1 -> Lac_e\n    S[met_map['Lac1'], rxn_map['M1_Lac_sec']] = -1\n    S[met_map['Lac_e'], rxn_map['M1_Lac_sec']] = 1\n    # 10. M1_NH4_upt: NH4_e -> NH4_1\n    S[met_map['NH4_e'], rxn_map['M1_NH4_upt']] = -1\n    S[met_map['NH4_1'], rxn_map['M1_NH4_upt']] = 1\n    # 11. M2_Lac_upt: Lac_e -> Lac2\n    S[met_map['Lac_e'], rxn_map['M2_Lac_upt']] = -1\n    S[met_map['Lac2'], rxn_map['M2_Lac_upt']] = 1\n    # 12. M2_Ace_sec: Ace2 -> Ace_e\n    S[met_map['Ace2'], rxn_map['M2_Ace_sec']] = -1\n    S[met_map['Ace_e'], rxn_map['M2_Ace_sec']] = 1\n    # 13. M2_O2_upt: O2_e -> O2_2\n    S[met_map['O2_e'], rxn_map['M2_O2_upt']] = -1\n    S[met_map['O2_2'], rxn_map['M2_O2_upt']] = 1\n    # 14. M2_NH4_upt: NH4_e -> NH4_2\n    S[met_map['NH4_e'], rxn_map['M2_NH4_upt']] = -1\n    S[met_map['NH4_2'], rxn_map['M2_NH4_upt']] = 1\n    # 15. M1_ferm: Glc1 + 2 ADP1 + 2 Pi1 -> 2 Lac1 + 2 ATP1\n    S[met_map['Glc1'], rxn_map['M1_ferm']] = -1\n    S[met_map['ADP1'], rxn_map['M1_ferm']] = -2\n    S[met_map['Pi1'], rxn_map['M1_ferm']] = -2\n    S[met_map['Lac1'], rxn_map['M1_ferm']] = 2\n    S[met_map['ATP1'], rxn_map['M1_ferm']] = 2\n    # 16. M1_assim: Ace1 + ATP1 -> B1 + ADP1 + Pi1\n    S[met_map['Ace1'], rxn_map['M1_assim']] = -1\n    S[met_map['ATP1'], rxn_map['M1_assim']] = -1\n    S[met_map['B1'], rxn_map['M1_assim']] = 1\n    S[met_map['ADP1'], rxn_map['M1_assim']] = 1\n    S[met_map['Pi1'], rxn_map['M1_assim']] = 1\n    # 17. M1_biomass: B1 + NH4_1 + ATP1 -> ADP1 + Pi1\n    S[met_map['B1'], rxn_map['M1_biomass']] = -1\n    S[met_map['NH4_1'], rxn_map['M1_biomass']] = -1\n    S[met_map['ATP1'], rxn_map['M1_biomass']] = -1\n    S[met_map['ADP1'], rxn_map['M1_biomass']] = 1\n    S[met_map['Pi1'], rxn_map['M1_biomass']] = 1\n    # 18. M1_ATPM: ATP1 -> ADP1 + Pi1\n    S[met_map['ATP1'], rxn_map['M1_ATPM']] = -1\n    S[met_map['ADP1'], rxn_map['M1_ATPM']] = 1\n    S[met_map['Pi1'], rxn_map['M1_ATPM']] = 1\n    # 19. M2_ox: Lac2 + O2_2 + 3 ADP2 + 3 Pi2 -> Ace2 + 3 ATP2 + CO2_e\n    S[met_map['Lac2'], rxn_map['M2_ox']] = -1\n    S[met_map['O2_2'], rxn_map['M2_ox']] = -1\n    S[met_map['ADP2'], rxn_map['M2_ox']] = -3\n    S[met_map['Pi2'], rxn_map['M2_ox']] = -3\n    S[met_map['Ace2'], rxn_map['M2_ox']] = 1\n    S[met_map['ATP2'], rxn_map['M2_ox']] = 3\n    S[met_map['CO2_e'], rxn_map['M2_ox']] = 1\n    # 20. M2_bioprec: Lac2 + ATP2 -> B2 + ADP2 + Pi2 + CO2_e\n    S[met_map['Lac2'], rxn_map['M2_bioprec']] = -1\n    S[met_map['ATP2'], rxn_map['M2_bioprec']] = -1\n    S[met_map['B2'], rxn_map['M2_bioprec']] = 1\n    S[met_map['ADP2'], rxn_map['M2_bioprec']] = 1\n    S[met_map['Pi2'], rxn_map['M2_bioprec']] = 1\n    S[met_map['CO2_e'], rxn_map['M2_bioprec']] = 1\n    # 21. M2_biomass: B2 + NH4_2 + ATP2 -> ADP2 + Pi2\n    S[met_map['B2'], rxn_map['M2_biomass']] = -1\n    S[met_map['NH4_2'], rxn_map['M2_biomass']] = -1\n    S[met_map['ATP2'], rxn_map['M2_biomass']] = -1\n    S[met_map['ADP2'], rxn_map['M2_biomass']] = 1\n    S[met_map['Pi2'], rxn_map['M2_biomass']] = 1\n    # 22. M2_ATPM: ATP2 -> ADP2 + Pi2\n    S[met_map['ATP2'], rxn_map['M2_ATPM']] = -1\n    S[met_map['ADP2'], rxn_map['M2_ATPM']] = 1\n    S[met_map['Pi2'], rxn_map['M2_ATPM']] = 1\n\n    # Objective function: maximize mu1 + mu2, which means minimize -(mu1 + mu2)\n    # mu1 is v_M1_biomass (rxn 16), mu2 is v_M2_biomass (rxn 20)\n    c = np.zeros(num_reactions)\n    c[rxn_map['M1_biomass']] = -1\n    c[rxn_map['M2_biomass']] = -1\n\n    # Equality constraints S*v = 0\n    b_eq = np.zeros(num_metabolites)\n\n    # N is defined as 10^6\n    N = 10**6\n    large_bound = 10**6\n    \n    results = []\n    mu1_idx = rxn_map['M1_biomass']\n    mu2_idx = rxn_map['M2_biomass']\n\n    for G, O, A, L in test_cases:\n        # Bounds for fluxes: 0 <= v <= ub. All reactions are irreversible.\n        bounds = [(0, large_bound)] * num_reactions\n        bounds[rxn_map['Glc_src']] = (0, G)\n        bounds[rxn_map['O2_src']] = (0, O)\n        bounds[rxn_map['NH4_src']] = (0, N)\n        bounds[rxn_map['Ace_sink']] = (0, A)\n        bounds[rxn_map['Lac_sink']] = (0, L)\n        bounds[rxn_map['CO2_sink']] = (0, large_bound) # Was specified as 10^6\n\n        res = linprog(c, A_eq=S, b_eq=b_eq, bounds=bounds, method='highs')\n\n        if res.success:\n            mu1 = res.x[mu1_idx] if res.x[mu1_idx] > 1e-9 else 0.0\n            mu2 = res.x[mu2_idx] if res.x[mu2_idx] > 1e-9 else 0.0\n            results.append([mu1, mu2])\n        else:\n            # Append null result if optimization fails\n            results.append([0.0, 0.0])\n    \n    # Format the final output string\n    output_parts = [f\"[{r[0]:.6f},{r[1]:.6f}]\" for r in results]\n    print(f\"[{','.join(output_parts)}]\")\n\nsolve()\n```", "id": "2617800"}]}