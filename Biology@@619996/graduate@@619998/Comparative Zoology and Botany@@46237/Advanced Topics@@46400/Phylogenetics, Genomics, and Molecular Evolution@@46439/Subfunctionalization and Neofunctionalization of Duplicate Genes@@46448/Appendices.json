{"hands_on_practices": [{"introduction": "The evolutionary fate of a duplicated gene is often revealed in its DNA sequence. After duplication, relaxed or divergent selective pressures can lead to different rates of protein evolution between the two copies. This practice focuses on a cornerstone of molecular evolution: quantifying these selective pressures using the ratio of nonsynonymous ($d_N$) to synonymous ($d_S$) substitution rates, denoted as $\\omega$. You will calculate $\\omega$ for each paralog immediately following a duplication event and use an asymmetry metric to interpret the results, providing a first quantitative glimpse into potential neofunctionalization or subfunctionalization [@problem_id:2613574].", "problem": "A duplication of a nuclear-encoded, organelle-targeted enzyme occurred in the ancestor of a clade sampled across both flowering plants and ray-finned fishes. Two paralogs, labeled copy A and copy B, were retained. From codon alignments of orthologous sets for each copy and a reconciled species–gene tree with a mapped duplication node, maximum likelihood ancestral state reconstruction identifies substitutions along the two stem branches immediately following the duplication (the branch leading to copy A and the branch leading to copy B). For both branches, the coding sequence length is $900$ nucleotides ($300$ codons), and the Nei–Gojobori–type tally of site opportunities yields $L_{N} = 750$ nonsynonymous sites and $L_{S} = 150$ synonymous sites. The observed counts of changes along the two branches are:\n- For the branch leading to copy A: $n_{N,A} = 22$ nonsynonymous changes and $n_{S,A} = 4$ synonymous changes.\n- For the branch leading to copy B: $n_{N,B} = 5$ nonsynonymous changes and $n_{S,B} = 12$ synonymous changes.\n\nUsing the standard definition that the nonsynonymous substitution rate per nonsynonymous site is $d_{N} = n_{N}/L_{N}$ and the synonymous substitution rate per synonymous site is $d_{S} = n_{S}/L_{S}$, compute for each branch the nonsynonymous-to-synonymous rate ratio $\\omega = d_{N}/d_{S}$. Then compute the asymmetry metric $R = \\omega_{A} / \\omega_{B}$, where $\\omega_{A}$ refers to the branch to copy A and $\\omega_{B}$ to the branch to copy B. Report $R$ as a single number rounded to four significant figures. No units are required.", "solution": "The problem statement has been validated and is deemed valid. It is scientifically grounded in the principles of molecular evolution, well-posed with all necessary data and definitions, and presented objectively. It represents a standard quantitative exercise in phylogenetics, directly relevant to the study of gene duplication fates such as subfunctionalization and neofunctionalization.\n\nThe objective is to compute the asymmetry metric $R$, defined as the ratio of the nonsynonymous-to-synonymous rate ratios for two paralogous gene copies, A and B.\n\nThe fundamental quantities are the nonsynonymous substitution rate per nonsynonymous site, $d_{N}$, and the synonymous substitution rate per synonymous site, $d_{S}$. These are defined according to the problem statement as:\n$$d_{N} = \\frac{n_{N}}{L_{N}}$$\n$$d_{S} = \\frac{n_{S}}{L_{S}}$$\nwhere $n_{N}$ is the number of observed nonsynonymous changes, $n_{S}$ is the number of observed synonymous changes, $L_{N}$ is the number of available nonsynonymous sites, and $L_{S}$ is the number of available synonymous sites.\n\nThe nonsynonymous-to-synonymous rate ratio, $\\omega$, is defined as:\n$$\\omega = \\frac{d_{N}}{d_{S}} = \\frac{n_{N}/L_{N}}{n_{S}/L_{S}}$$\n\nWe are given the following data for both branches:\nThe number of nonsynonymous sites, $L_{N} = 750$.\nThe number of synonymous sites, $L_{S} = 150$.\n\nFirst, we compute the $\\omega$ ratio for the branch leading to copy A, denoted as $\\omega_{A}$.\nThe observed changes for this branch are:\nNumber of nonsynonymous changes, $n_{N,A} = 22$.\nNumber of synonymous changes, $n_{S,A} = 4$.\n\nSubstituting these values into the formula for $\\omega$:\n$$d_{N,A} = \\frac{n_{N,A}}{L_{N}} = \\frac{22}{750}$$\n$$d_{S,A} = \\frac{n_{S,A}}{L_{S}} = \\frac{4}{150}$$\n$$\\omega_{A} = \\frac{d_{N,A}}{d_{S,A}} = \\frac{22/750}{4/150} = \\frac{22}{750} \\times \\frac{150}{4}$$\nSince $750 = 5 \\times 150$, we can simplify the expression:\n$$\\omega_{A} = \\frac{22}{5 \\times 150} \\times \\frac{150}{4} = \\frac{22}{5 \\times 4} = \\frac{22}{20} = \\frac{11}{10} = 1.1$$\n\nNext, we compute the $\\omega$ ratio for the branch leading to copy B, denoted as $\\omega_{B}$.\nThe observed changes for this branch are:\nNumber of nonsynonymous changes, $n_{N,B} = 5$.\nNumber of synonymous changes, $n_{S,B} = 12$.\n\nSubstituting these values into the formula for $\\omega$:\n$$d_{N,B} = \\frac{n_{N,B}}{L_{N}} = \\frac{5}{750}$$\n$$d_{S,B} = \\frac{n_{S,B}}{L_{S}} = \\frac{12}{150}$$\n$$\\omega_{B} = \\frac{d_{N,B}}{d_{S,B}} = \\frac{5/750}{12/150} = \\frac{5}{750} \\times \\frac{150}{12}$$\nAgain, using the relation $750 = 5 \\times 150$:\n$$\\omega_{B} = \\frac{5}{5 \\times 150} \\times \\frac{150}{12} = \\frac{5}{5 \\times 12} = \\frac{1}{12}$$\n\nFinally, we compute the asymmetry metric $R$, which is the ratio of $\\omega_{A}$ to $\\omega_{B}$:\n$$R = \\frac{\\omega_{A}}{\\omega_{B}} = \\frac{1.1}{1/12} = 1.1 \\times 12 = 13.2$$\n\nThe problem requires the result to be reported to four significant figures. To express $13.2$ with four significant figures, we add a trailing zero.\n$$R = 13.20$$\nThis value indicates a significant asymmetry in the evolutionary rates of the two paralogs following the duplication event. Copy A appears to be evolving under positive or relaxed selection ($\\omega_{A} > 1$), while copy B is under strong purifying selection ($\\omega_{B} \\ll 1$), a pattern consistent with neofunctionalization.", "answer": "$$\\boxed{13.20}$$", "id": "2613574"}, {"introduction": "Beyond changes in the protein code, the partitioning of ancestral gene expression patterns is a primary route to subfunctionalization. This practice delves into the analysis of modern transcriptomic data from RNA-sequencing, which presents unique challenges due to its compositional nature. You will implement a robust normalization method, the centered log-ratio transform, to handle this challenge and then apply a rigorous, multi-part decision rule to test for the tell-tale signature of regulatory subfunctionalization: reciprocal, non-overlapping expression peaks across different tissues [@problem_id:2613588].", "problem": "You are given a set of independent RNA-sequencing (RNA-seq) scenarios, each represented by a gene-by-tissue count matrix. Your task is to implement a compositional data normalization based on centered log-ratio concepts and to test, for a specified duplicate gene pair in each scenario, whether the normalized expression profiles exhibit reciprocal, non-overlapping peak tissues in a way that supports subfunctionalization.\n\nFoundational base and assumptions: The Central Dogma of Molecular Biology states that deoxyribonucleic acid (DNA) is transcribed into ribonucleic acid (RNA), which is translated into protein. RNA-seq measures transcript abundance by counting sequencing reads, which are constrained by total library size in each sample and therefore are compositional. A robust way to remove the compositional effect is to apply a centered log-ratio transform using a small pseudocount to handle zeros. In this problem, you must implement a normalization that, for each tissue (treated as a sample), converts raw counts into centered log-ratio values using the natural logarithm ($\\ln$) and a pseudocount $\\epsilon$.\n\nNormalization requirement (derivation required in your solution; do not import any external data): For each tissue, transform the vector of counts across genes using a centered log-ratio with pseudocount $\\epsilon$; use the natural logarithm ($\\ln$). Use $\\epsilon = 0.5$.\n\nDecision rule for subfunctionalization: Let $g_1$ and $g_2$ denote the indices (zero-based) of a duplicate gene pair. For each gene $g \\in \\{g_1,g_2\\}$, define its argmax set $P_g$ as the set of tissue indices at which its normalized value attains its maximum (use a floating-point comparison tolerance $\\tau = 10^{-12}$ to determine set membership). Define the top-minus-second-top margin $m_g$ as the difference between the largest and the second-largest normalized value across tissues for gene $g$ (if the largest value is tied across at least two tissues, then by definition $m_g = 0$). Define $\\gamma = 0.5$. Conclude that the pair supports subfunctionalization if and only if all of the following hold:\n- The argmax sets are disjoint, that is, $P_{g_1} \\cap P_{g_2} = \\varnothing$.\n- Let $t_1$ be the smallest index in $P_{g_1}$ and $t_2$ be the smallest index in $P_{g_2}$. Reciprocal dominance holds:\n  - The within-gene cross-tissue contrast for $g_1$ satisfies $y_{g_1,t_1} - y_{g_1,t_2} \\ge \\gamma$.\n  - The within-gene cross-tissue contrast for $g_2$ satisfies $y_{g_2,t_2} - y_{g_2,t_1} \\ge \\gamma$.\n- Peak sharpness holds: $m_{g_1} \\ge \\gamma$ and $m_{g_2} \\ge \\gamma$.\n\nYour program must:\n- Implement the above normalization using $\\epsilon = 0.5$ and natural logarithms ($\\ln$).\n- Implement the decision rule with zero-based indexing, tolerance $\\tau = 10^{-12}$, and $\\gamma = 0.5$.\n- Evaluate each of the following test cases and output a boolean for each case according to the decision rule.\n\nTest suite (each case specifies the matrix $C \\in \\mathbb{N}_0^{G \\times T}$ with genes as rows and tissues as columns, the duplicate indices $(g_1,g_2)$, and uses the shared parameters $\\epsilon = 0.5$, $\\gamma = 0.5$, and $\\tau = 10^{-12}$):\n\n- Case $1$: $G=4$, $T=3$, duplicates $(g_1,g_2)=(0,1)$, with\n$$\nC^{(1)} =\n\\begin{bmatrix}\n1000  60  50 \\\\\n50  900  55 \\\\\n300  300  300 \\\\\n400  400  400\n\\end{bmatrix}.\n$$\n\n- Case $2$: $G=4$, $T=3$, duplicates $(g_1,g_2)=(0,1)$, with\n$$\nC^{(2)} =\n\\begin{bmatrix}\n600  500  400 \\\\\n600  500  400 \\\\\n300  300  300 \\\\\n400  400  400\n\\end{bmatrix}.\n$$\n\n- Case $3$: $G=4$, $T=3$, duplicates $(g_1,g_2)=(0,1)$, with\n$$\nC^{(3)} =\n\\begin{bmatrix}\n200  200  50 \\\\\n80  300  290 \\\\\n100  100  100 \\\\\n110  110  110\n\\end{bmatrix}.\n$$\n\n- Case $4$: $G=4$, $T=3$, duplicates $(g_1,g_2)=(0,1)$, with\n$$\nC^{(4)} =\n\\begin{bmatrix}\n120  110  100 \\\\\n130  140  135 \\\\\n100  100  100 \\\\\n100  100  100\n\\end{bmatrix}.\n$$\n\n- Case $5$: $G=4$, $T=3$, duplicates $(g_1,g_2)=(0,1)$, with\n$$\nC^{(5)} =\n\\begin{bmatrix}\n0  600  0 \\\\\n700  0  0 \\\\\n300  300  300 \\\\\n400  400  400\n\\end{bmatrix}.\n$$\n\nFinal output specification:\n- Your program must produce a single line of output containing the results for the five cases as a comma-separated list of Python boolean literals enclosed in square brackets. For example, a valid format is like \"[res1,res2,res3,res4,res5]\" where each \"res$k$\" is either True or False.\n- No additional text or whitespace should be printed beyond this single line.\n- The program must be self-contained and must not read any input.", "solution": "The problem requires an evaluation of duplicate gene pairs for evidence of subfunctionalization based on their expression profiles across multiple tissues. This evaluation entails two main components: first, a specific normalization of raw RNA-sequencing count data, and second, the application of a multi-part decision rule to the normalized data. The problem is scientifically grounded, well-posed, and all parameters are specified. A solution is therefore possible and will be constructed forthwith.\n\nFirst, we address the normalization requirement. The problem specifies a centered log-ratio (CLR) transform to be applied to the count data for each tissue. Let $C$ be a matrix of raw counts with $G$ genes (rows) and $T$ tissues (columns), where $C_{g,t}$ is the count for gene $g$ in tissue $t$. The normalization is performed independently for each tissue, i.e., for each column of the matrix $C$.\n\nLet $c_t$ be the vector of counts for tissue $t$, given by the $t$-th column of $C$, $c_t = [C_{0,t}, C_{1,t}, \\dots, C_{G-1,t}]^T$. The transformation proceeds as follows:\n\n1.  **Pseudocount Addition**: To handle potential zero counts, which are mathematically problematic for logarithms, a pseudocount $\\epsilon$ is added to each count. The problem specifies $\\epsilon = 0.5$. Let the new vector be $x_t$:\n    $$x_{g,t} = C_{g,t} + \\epsilon$$\n\n2.  **Logarithmic Transformation**: Each element of the resulting vector is transformed using the natural logarithm ($\\ln$):\n    $$\\ln(x_{g,t}) = \\ln(C_{g,t} + \\epsilon)$$\n\n3.  **Centering**: The vector of log-transformed values is then centered by subtracting the arithmetic mean of its components. This is equivalent to dividing each component by the geometric mean in the original space, which is the definition of the centered log-ratio transform. The normalized expression value, $y_{g,t}$, for gene $g$ in tissue $t$ is:\n    $$y_{g,t} = \\ln(x_{g,t}) - \\frac{1}{G} \\sum_{i=0}^{G-1} \\ln(x_{i,t})$$\n    Substituting the previous expressions, we obtain the complete formula for the normalization:\n    $$y_{g,t} = \\ln(C_{g,t} + \\epsilon) - \\frac{1}{G} \\sum_{i=0}^{G-1} \\ln(C_{i,t} + \\epsilon)$$\n    This operation is applied for each tissue $t \\in \\{0, 1, \\dots, T-1\\}$, producing a normalized matrix $Y$ of dimensions $G \\times T$.\n\nSecond, we delineate the decision rule for subfunctionalization for a given duplicate gene pair $(g_1, g_2)$. The rule is based on the normalized expression matrix $Y$ and consists of three mandatory conditions. Let $\\gamma = 0.5$ and the floating-point tolerance be $\\tau = 10^{-12}$.\n\nFor each gene $g \\in \\{g_1, g_2\\}$, we must first identify its set of peak expression tissues, or its argmax set $P_g$. This is the set of all tissue indices where the gene's normalized expression value is maximal, within the tolerance $\\tau$.\nLet $y_{g,max} = \\max_t(y_{g,t})$. Then the argmax set is:\n$$P_g = \\{t \\mid y_{g,max} - y_{g,t} \\le \\tau\\}$$\n\nThe three conditions for subfunctionalization are as follows:\n\n1.  **Disjoint Argmax Sets**: The tissues of peak expression for the two duplicate genes must be completely distinct.\n    $$P_{g_1} \\cap P_{g_2} = \\varnothing$$\n\n2.  **Reciprocal Dominance**: Each duplicate gene must be substantially more highly expressed in its own peak tissue compared to the peak tissue of its counterpart. Let $t_1 = \\min(P_{g_1})$ and $t_2 = \\min(P_{g_2})$. The minimum index is taken to ensure a unique choice if a gene's expression peaks in multiple tissues. The following inequalities must hold:\n    $$y_{g_1, t_1} - y_{g_1, t_2} \\ge \\gamma$$\n    $$y_{g_2, t_2} - y_{g_2, t_1} \\ge \\gamma$$\n\n3.  **Peak Sharpness**: The expression peak for each gene must be sufficiently sharp, meaning its maximal expression value is significantly greater than its next-highest expression value. We define the peak sharpness margin $m_g$ as the difference between the largest and second-largest normalized values. If the maximum is a tie across multiple tissues (i.e., $|P_g|  1$), then $m_g = 0$ by definition. The condition is:\n    $$m_{g_1} \\ge \\gamma \\quad \\text{and} \\quad m_{g_2} \\ge \\gamma$$\n\nA gene pair $(g_1, g_2)$ is concluded to support subfunctionalization if and only if all three of these conditions are satisfied.\n\nWe demonstrate this procedure on **Case 1**:\n$G=4$, $T=3$, $(g_1,g_2)=(0,1)$, $\\epsilon = 0.5$, $\\gamma = 0.5$.\n$C^{(1)} = \\begin{bmatrix} 1000  60  50 \\\\ 50  900  55 \\\\ 300  300  300 \\\\ 400  400  400 \\end{bmatrix}$.\n\nFirst, normalization: $Y^{(1)}_{g,t} = \\ln(C^{(1)}_{g,t} + 0.5) - \\frac{1}{4} \\sum_{i=0}^{3} \\ln(C^{(1)}_{i,t} + 0.5)$.\nThis yields the normalized matrix:\n$Y^{(1)} \\approx \\begin{bmatrix} 1.27615  -1.54829  -0.98712 \\\\ -1.71008  1.15201  -0.89276 \\\\ 0.07333  0.05450  0.79629 \\\\ 0.36061  0.34178  1.08357 \\end{bmatrix}$.\n\nThe rows for the duplicate genes are $y_{0} = Y^{(1)}_{0,:}$ and $y_{1} = Y^{(1)}_{1,:}$.\n\n1.  **Disjoint Argmax Sets**:\n    - For $g_1=0$, $y_{0} \\approx [1.27615, -1.54829, -0.98712]$. The maximum is at $t=0$. $P_{g_1} = \\{0\\}$.\n    - For $g_2=1$, $y_{1} \\approx [-1.71008, 1.15201, -0.89276]$. The maximum is at $t=1$. $P_{g_2} = \\{1\\}$.\n    - $P_{g_1} \\cap P_{g_2} = \\{0\\} \\cap \\{1\\} = \\varnothing$. The condition is met.\n\n2.  **Reciprocal Dominance**:\n    - $t_1 = 0$, $t_2 = 1$.\n    - For $g_1$: $y_{0,0} - y_{0,1} \\approx 1.27615 - (-1.54829) = 2.82444 \\ge 0.5$. The condition is met.\n    - For $g_2$: $y_{1,1} - y_{1,0} \\approx 1.15201 - (-1.71008) = 2.86209 \\ge 0.5$. The condition is met.\n\n3.  **Peak Sharpness**:\n    - For $g_1$: The values are $[1.27615, -1.54829, -0.98712]$. $|P_{g_1}|=1$. The sorted values are $[1.27615, -0.98712, -1.54829]$. The margin is $m_{g_1} \\approx 1.27615 - (-0.98712) = 2.26327 \\ge 0.5$. The condition is met.\n    - For $g_2$: The values are $[-1.71008, 1.15201, -0.89276]$. $|P_{g_2}|=1$. The sorted values are $[1.15201, -0.89276, -1.71008]$. The margin is $m_{g_2} \\approx 1.15201 - (-0.89276) = 2.04477 \\ge 0.5$. The condition is met.\n\nAll three conditions are satisfied for Case 1. The result is **True**. Applying this same rigorous procedure to all five cases yields the following results:\n- Case 1: True\n- Case 2: False (violates Condition 1: $P_{g_1} \\cap P_{g_2} \\ne \\varnothing$)\n- Case 3: False (violates Condition 3: $m_{g_1}  \\gamma$)\n- Case 4: False (violates Condition 2: $y_{g_1,t_1} - y_{g_1,t_2}  \\gamma$)\n- Case 5: True", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the subfunctionalization problem for a suite of test cases.\n    The solution involves CLR normalization and a three-part decision rule.\n    \"\"\"\n\n    epsilon = 0.5\n    gamma = 0.5\n    tau = 1e-12\n\n    def check_subfunctionalization(C, g1, g2):\n        \"\"\"\n        Applies the full decision logic for a single test case.\n\n        Args:\n            C (np.ndarray): The GxT gene-by-tissue count matrix.\n            g1 (int): Zero-based index of the first duplicate gene.\n            g2 (int): Zero-based index of the second duplicate gene.\n\n        Returns:\n            bool: True if the gene pair supports subfunctionalization, False otherwise.\n        \"\"\"\n        # Step 1: Normalization\n        # Add pseudocount\n        X = C + epsilon\n        # Take natural logarithm\n        log_X = np.log(X)\n        # Center by subtracting the column-wise (per-tissue) mean of log values\n        Y = log_X - np.mean(log_X, axis=0, keepdims=True)\n\n        y_g1 = Y[g1, :]\n        y_g2 = Y[g2, :]\n        \n        # --- Decision Rule ---\n\n        # Condition 1: Disjoint Argmax Sets\n        max_y1 = np.max(y_g1)\n        P_g1 = np.where(np.abs(y_g1 - max_y1) = tau)[0]\n\n        max_y2 = np.max(y_g2)\n        P_g2 = np.where(np.abs(y_g2 - max_y2) = tau)[0]\n\n        if np.intersect1d(P_g1, P_g2).size  0:\n            return False\n\n        # Condition 2: Reciprocal Dominance\n        t1 = np.min(P_g1)\n        t2 = np.min(P_g2)\n        \n        contrast_g1 = y_g1[t1] - y_g1[t2]\n        contrast_g2 = y_g2[t2] - y_g2[t1]\n\n        if not (contrast_g1 = gamma and contrast_g2 = gamma):\n            return False\n\n        # Condition 3: Peak Sharpness\n        # Calculate margin for g1\n        sorted_y_g1 = np.sort(y_g1)[::-1]\n        m_g1 = sorted_y_g1[0] - sorted_y_g1[1]\n\n        # Calculate margin for g2\n        sorted_y_g2 = np.sort(y_g2)[::-1]\n        m_g2 = sorted_y_g2[0] - sorted_y_g2[1]\n        \n        # The provided rule states that if the max is tied, margin is 0.\n        # This is equivalent to checking if sorted_y[0] - sorted_y[1] = tau.\n        # My m_g calculation already includes this logic effectively.\n        # If len(P_g1)  1, m_g1 will be near zero (within tau), failing the test if gammatau.\n        # If m_g1 calculated as diff is less than gamma, the test fails.\n        # This implementation is correct according to the definition.\n        \n        if not (m_g1 = gamma and m_g2 = gamma):\n            return False\n\n        # All conditions passed\n        return True\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        {\n            \"C\": np.array([\n                [1000, 60, 50],\n                [50, 900, 55],\n                [300, 300, 300],\n                [400, 400, 400]\n            ]),\n            \"g1\": 0, \"g2\": 1\n        },\n        {\n            \"C\": np.array([\n                [600, 500, 400],\n                [600, 500, 400],\n                [300, 300, 300],\n                [400, 400, 400]\n            ]),\n            \"g1\": 0, \"g2\": 1\n        },\n        {\n            \"C\": np.array([\n                [200, 200, 50],\n                [80, 300, 290],\n                [100, 100, 100],\n                [110, 110, 110]\n            ]),\n            \"g1\": 0, \"g2\": 1\n        },\n        {\n            \"C\": np.array([\n                [120, 110, 100],\n                [130, 140, 135],\n                [100, 100, 100],\n                [100, 100, 100]\n            ]),\n            \"g1\": 0, \"g2\": 1\n        },\n        {\n            \"C\": np.array([\n                [0, 600, 0],\n                [700, 0, 0],\n                [300, 300, 300],\n                [400, 400, 400]\n            ]),\n            \"g1\": 0, \"g2\": 1\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        result = check_subfunctionalization(case[\"C\"], case[\"g1\"], case[\"g2\"])\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2613588"}, {"introduction": "While sequence and expression analyses provide powerful correlational evidence, establishing the true functional fate of duplicate genes requires direct experimental validation. This final practice challenges you to think like a geneticist, designing definitive experiments to test for subfunctionalization. Using the modern toolkit of CRISPR-based knockouts and reciprocal complementation assays, you will devise a strategy to not only confirm the partitioning of ancestral functions but also to dissect the underlying mechanism—distinguishing whether divergence occurred at the level of gene regulation or protein structure [@problem_id:2613551].", "problem": "A conserved developmental regulator in vertebrates and a conserved stress-response regulator in angiosperms each exist as a single-copy ortholog in a reference species and as a pair of duplicates in a derived species. In vertebrates, the mouse carries a single-copy gene with coding sequence denoted $A$ that performs two separable ancestral subfunctions $F_1$ (required in tissue $T_1$) and $F_2$ (required in tissue $T_2$). In zebrafish, a lineage-specific duplication produced duplicates $D_1$ and $D_2$. In plants, the moss Physcomitrium patens carries a single-copy ortholog with coding sequence denoted $M$ that performs two separable ancestral subfunctions $F_1$ (required under condition $C_1$) and $F_2$ (required under condition $C_2$), while Arabidopsis thaliana carries duplicates $P_1$ and $P_2$. You are to design a Clustered Regularly Interspaced Short Palindromic Repeats (CRISPR) knockout and reciprocal complementation strategy to test whether the duplicates in each derived lineage together reconstitute the full ancestral function while individually rescuing partitioned subfunctions.\n\nFoundational principles available for reasoning include: the Central Dogma of Molecular Biology (deoxyribonucleic acid to ribonucleic acid to protein), the concept that loss-of-function mutations that disrupt protein-coding sequence or essential cis-regulatory elements eliminate specific gene activities, and the genetic complementation test, which infers functional equivalence when an exogenous coding sequence expressed under an appropriate promoter restores a lost phenotype.\n\nYour experimental toolkit allows you to: generate $d_1^{-/-}$, $d_2^{-/-}$, and $d_1^{-/-}d_2^{-/-}$ zebrafish; generate $p_1^{-/-}$, $p_2^{-/-}$, and $p_1^{-/-}p_2^{-/-}$ Arabidopsis; generate $a^{-/-}$ mouse and $m^{-/-}$ moss; build expression constructs that place any coding sequence ($A$, $D_1$, $D_2$, $M$, $P_1$, $P_2$) under any of the following promoters: the ancestral promoter $P_A$ (drives expression across $T_1$ and $T_2$ in mouse), the duplicate promoters $P_{D_1}$ or $P_{D_2}$ (native zebrafish expression patterns), the ancestral plant promoter $P_M$ (drives expression across $C_1$ and $C_2$ in moss), and the duplicate plant promoters $P_{P_1}$ or $P_{P_2}$ (native Arabidopsis expression patterns). Assume constructs use complementary deoxyribonucleic acid (cDNA) coding sequences and are expressed at physiological levels.\n\nWhich outcome pattern(s), observed in both vertebrate and plant systems using the above knockouts and complementation tests, would most strongly support the hypothesis that the duplicates are subfunctionalized such that together they reconstitute the full ancestral function while individually rescuing partitioned subfunctions? Choose all that apply.\n\nA. In zebrafish, $d_1^{-/-}$ selectively loses $F_1$ in $T_1$ while retaining $F_2$ in $T_2$; $d_2^{-/-}$ selectively loses $F_2$ in $T_2$ while retaining $F_1$ in $T_1$; $d_1^{-/-}d_2^{-/-}$ loses both $F_1$ and $F_2$. In mouse, $a^{-/-}$ loses both $F_1$ and $F_2$. Complementation: $P_{D_1}\\!:\\!D_1$ restores only $F_1$ and $P_{D_2}\\!:\\!D_2$ restores only $F_2$ in $a^{-/-}$; co-introduction of $P_{D_1}\\!:\\!D_1$ plus $P_{D_2}\\!:\\!D_2$ restores both $F_1$ and $F_2$ in $a^{-/-}$. However, placing either duplicate coding sequence under the ancestral promoter ($P_A\\!:\\!D_1$ or $P_A\\!:\\!D_2$) restores both $F_1$ and $F_2$ in $a^{-/-}$. Reciprocally, $P_A\\!:\\!A$ restores both $F_1$ and $F_2$ in $d_1^{-/-}d_2^{-/-}$. Analogous tissue- and condition-specific results are observed with $P_{P_1}\\!:\\!P_1$, $P_{P_2}\\!:\\!P_2$, $P_M\\!:\\!P_1$, $P_M\\!:\\!P_2$, and $P_M\\!:\\!M$ in Arabidopsis and moss. \n\nB. In zebrafish, $d_1^{-/-}$ and $d_2^{-/-}$ are phenotypically normal across $T_1$ and $T_2$, but $d_1^{-/-}d_2^{-/-}$ loses both $F_1$ and $F_2$. In mouse, $a^{-/-}$ loses both $F_1$ and $F_2$. Complementation: $P_A\\!:\\!D_1$ alone restores both $F_1$ and $F_2$ in $a^{-/-}$, whereas $P_A\\!:\\!D_2$ restores neither ancestral function but confers a novel trait not seen in $a^{+/+}$. Parallel outcomes occur in plants with $P_M\\!:\\!P_1$ rescuing both $F_1$ and $F_2$, and $P_M\\!:\\!P_2$ conferring a novel phenotype unrelated to $M$.\n\nC. In zebrafish, both $d_1^{-/-}$ and $d_2^{-/-}$ exhibit similar partial reductions of $F_1$ in $T_1$ and $F_2$ in $T_2$, and the double mutant $d_1^{-/-}d_2^{-/-}$ shows a more severe reduction in both; in mouse, $a^{-/-}$ loses both $F_1$ and $F_2$. Complementation: either $P_A\\!:\\!D_1$ or $P_A\\!:\\!D_2$ fully restores both $F_1$ and $F_2$ in $a^{-/-}$, and co-expression provides no additional benefit. Parallel dosage-like effects are observed in the plant system.\n\nD. In zebrafish, $d_1^{-/-}$ selectively loses $F_1$ and $d_2^{-/-}$ selectively loses $F_2$, and $d_1^{-/-}d_2^{-/-}$ loses both; in mouse, $a^{-/-}$ loses both. Complementation under ancestral promoters reveals coding partition: $P_A\\!:\\!D_1$ restores only $F_1$ and $P_A\\!:\\!D_2$ restores only $F_2$ in $a^{-/-}$; only co-expression of $P_A\\!:\\!D_1$ plus $P_A\\!:\\!D_2$ restores both $F_1$ and $F_2$. Reciprocally, $P_{D_1}\\!:\\!A$ restores only $F_1$ in $d_1^{-/-}d_2^{-/-}$ and $P_{D_2}\\!:\\!A$ restores only $F_2$; co-expression of $P_{D_1}\\!:\\!A$ plus $P_{D_2}\\!:\\!A$ restores both. Analogous coding-partition complementation is observed in Arabidopsis and moss under $P_M$ and $P_{P_1}/P_{P_2}$.\n\nE. In zebrafish and Arabidopsis, $d_1^{-/-}$, $d_2^{-/-}$, $p_1^{-/-}$, and $p_2^{-/-}$ have no detectable phenotypes, but overexpressing $D_1$ or $D_2$ (or $P_1$ or $P_2$) in the corresponding double mutants exacerbates loss of $F_1$ and $F_2$. In mouse and moss, $P_A\\!:\\!D_1$ or $P_M\\!:\\!P_1$ fail to rescue and instead worsen the $a^{-/-}$ or $m^{-/-}$ phenotypes, respectively.", "solution": "The problem statement will first be subjected to rigorous validation.\n\n### Step 1: Extract Givens\n\n- **Problem Domain**: Comparative zoology and botany, specifically the evolution of duplicate genes.\n- **Core Hypothesis to Test**: \"the duplicates in each derived lineage together reconstitute the full ancestral function while individually rescuing partitioned subfunctions.\" This is the definition of subfunctionalization.\n- **Model Systems**:\n    - **Vertebrates**:\n        - Reference species: mouse. Single-copy gene with coding sequence $A$.\n        - Derived species: zebrafish. Duplicate genes with coding sequences $D_1$ and $D_2$.\n        - Ancestral function of $A$: Two separable subfunctions, $F_1$ in tissue $T_1$ and $F_2$ in tissue $T_2$.\n    - **Angiosperms**:\n        - Reference species: moss (*Physcomitrium patens*). Single-copy gene with coding sequence $M$.\n        - Derived species: *Arabidopsis thaliana*. Duplicate genes with coding sequences $P_1$ and $P_2$.\n        - Ancestral function of $M$: Two separable subfunctions, $F_1$ under condition $C_1$ and $F_2$ under condition $C_2$.\n- **Experimental Tools**:\n    - **Gene Knockouts**: Can generate null mutants in all genes: $a^{-/-}$, $m^{-/-}$, $d_1^{-/-}$, $d_2^{-/-}$, $d_1^{-/-}d_2^{-/-}$, $p_1^{-/-}$, $p_2^{-/-}$, and $p_1^{-/-}p_2^{-/-}$.\n    - **Expression Constructs**: Can express any coding sequence ($A$, $D_1$, $D_2$, $M$, $P_1$, $P_2$) using any of the specified promoters. Constructs use complementary deoxyribonucleic acid (cDNA) and are expressed at physiological levels.\n    - **Promoters**:\n        - Ancestral: $P_A$ (expression in $T_1$ and $T_2$), $P_M$ (expression under $C_1$ and $C_2$).\n        - Duplicate: $P_{D_1}$, $P_{D_2}$ (native zebrafish expression patterns), $P_{P_1}$, $P_{P_2}$ (native Arabidopsis expression patterns).\n- **Foundational Principles**: Central Dogma, loss-of-function mutagenesis, and genetic complementation.\n\n### Step 2: Validate Using Extracted Givens\n\n- **Scientifically Grounded**: The problem describes the Duplication-Degeneration-Complementation (DDC) model, a cornerstone of evolutionary developmental biology used to explain the retention of duplicate genes via subfunctionalization. The proposed experimental strategy—using CRISPR-based knockouts and reciprocal complementation tests in model organisms (mouse, zebrafish, Arabidopsis, moss)—is the standard, state-of-the-art methodology for investigating gene function and evolution. The principles are sound.\n- **Well-Posed**: The problem provides a clear hypothesis and a specific set of experimental tools and asks for the interpretation of potential outcomes. The question is structured to elicit a unique set of correct answers based on the provided definitions.\n- **Objective**: The language is technical and free of subjective or ambiguous terminology. All elements ($A$, $F_1$, $T_1$, $P_A$, etc.) are precisely defined for the purpose of the problem.\n- **Flaw Analysis**:\n    1.  **Scientific/Factual Unsoundness**: None. The scenario is a canonical model in molecular evolution.\n    2.  **Non-Formalizable/Irrelevant**: None. The problem is directly and formalizably about subfunctionalization.\n    3.  **Incomplete/Contradictory Setup**: None. The problem supplies all necessary information about genes, functions, and available experimental techniques.\n    4.  **Unrealistic/Infeasible**: None. The described genetic manipulations are feasible with current technology.\n    5.  **Ill-Posed/Poorly Structured**: None. The question is unambiguous.\n    6.  **Pseudo-Profound/Trivial**: None. Discriminating between the options requires careful application of the principles of genetics and molecular biology to distinguish subfunctionalization from other outcomes like neofunctionalization, redundancy, or dosage effects.\n    7.  **Outside Scientific Verifiability**: None. The outcomes are experimentally verifiable phenotypes.\n\n### Step 3: Verdict and Action\n\nThe problem statement is scientifically valid, well-posed, and objective. I will proceed with the derivation of the solution.\n\n### Solution Derivation\n\nThe hypothesis to be tested is **subfunctionalization**, which posits that after gene duplication, the two resulting paralogs partition the ancestral functions between them. This partitioning can occur at the level of gene regulation (different expression patterns) or protein structure (different functional capabilities of the protein products). A robust experimental test must be able to identify this partitioning and, ideally, distinguish its mechanism.\n\nWe must evaluate each option against the predicted experimental outcomes of a subfunctionalization scenario.\n\n**Analysis of Predicted Outcomes for Subfunctionalization:**\n1.  **Knockout Phenotypes**: If each duplicate is responsible for a distinct subset of the ancestral functions, then knocking out a single duplicate should result in a partial loss of function. For example, $d_1^{-/-}$ should lose function $F_1$ but retain $F_2$, while $d_2^{-/-}$ should lose $F_2$ but retain $F_1$. The double knockout, $d_1^{-/-}d_2^{-/-}$, should lose both functions, phenocopying the ancestral null mutant, $a^{-/-}$.\n2.  **Complementation Tests**: These are critical for dissecting the mechanism.\n    - **Reciprocal Complementation**: The ancestral gene ($A$ or $M$) should rescue the double-mutant phenotype of the derived species ($d_1^{-/-}d_2^{-/-}$ or $p_1^{-/-}p_2^{-/-}$). Conversely, the full set of duplicate genes should rescue the ancestral mutant phenotype ($a^{-/-}$ or $m^{-/-}$).\n    - **Promoter/Coding Sequence Swaps**: By placing duplicate coding sequences under the ancestral promoter ($P_A$ or $P_M$), one tests if the protein products have diverged. By placing the ancestral coding sequence under the duplicate promoters ($P_{D_1}$, $P_{D_2}$, etc.), one tests the specialization of the regulatory elements.\n\n### Option-by-Option Analysis\n\n**Option A:**\n- **Knockouts**: $d_1^{-/-}$ loses $F_1$, $d_2^{-/-}$ loses $F_2$, and $d_1^{-/-}d_2^{-/-}$ loses both. This is the classic signature of functional partitioning.\n- **Complementation**:\n    - The combination of $P_{D_1}\\!:\\!D_1$ and $P_{D_2}\\!:\\!D_2$ restores full function in $a^{-/-}$, showing the duplicates together reconstitute the ancestral state.\n    - Critically, either $P_A\\!:\\!D_1$ or $P_A\\!:\\!D_2$ alone fully restores both $F_1$ and $F_2$ in the $a^{-/-}$ background. This demonstrates that the coding sequences of $D_1$ and $D_2$ are each still fully competent to perform both ancestral subfunctions. The partitioning of function observed in the native zebrafish is therefore due to changes in their regulatory elements (promoters/enhancers), not their protein products.\n    - Reciprocally, $P_A\\!:\\!A$ rescues the $d_1^{-/-}d_2^{-/-}$ double mutant, confirming functional equivalence.\n- **Verdict**: This set of outcomes is a perfect and complete demonstration of **regulatory subfunctionalization**. It provides very strong support for the hypothesis. **Correct**.\n\n**Option B:**\n- **Knockouts**: Single knockouts ($d_1^{-/-}$ and $d_2^{-/-}$) are normal, while the double knockout ($d_1^{-/-}d_2^{-/-}$) loses both functions. This describes **genetic redundancy**, where either gene is sufficient to perform the full function. This is the opposite of subfunctionalization, where each gene is uniquely required for a part of the function.\n- **Complementation**: $P_A\\!:\\!D_1$ rescues both functions, consistent with redundancy. However, $P_A\\!:\\!D_2$ confers a novel trait. This indicates that duplicate $D_2$ has not partitioned the ancestral function but has evolved a new one, a process known as **neofunctionalization**.\n- **Verdict**: This outcome describes redundancy and neofunctionalization, which are alternative evolutionary fates to subfunctionalization. It refutes the hypothesis. **Incorrect**.\n\n**Option C:**\n- **Knockouts**: Single knockouts show partial reduction of *both* functions, and the double knockout is more severe. This suggests a quantitative, or **dosage**, effect. The total level of protein product from both genes is required for full activity in both tissues/conditions, and loss of one gene reduces the total amount of protein below a critical threshold for both functions.\n- **Complementation**: Either $P_A\\!:\\!D_1$ or $P_A\\!:\\!D_2$ fully restores both functions, indicating the proteins are functionally identical and fully potent when expressed from a strong, broad promoter. This supports a dosage model. While sometimes considered a type of subfunctionalization, it does not represent the partitioning of qualitatively distinct, separable subfunctions ($F_1$ in $T_1$, $F_2$ in $T_2$) as implied by the problem statement.\n- **Verdict**: This describes a dosage-sharing model, which is a different mechanism from the clean partitioning of distinct subfunctions described in options A and D, and thus offers weaker support for the specific hypothesis posed. **Incorrect**.\n\n**Option D:**\n- **Knockouts**: $d_1^{-/-}$ loses $F_1$, $d_2^{-/-}$ loses $F_2$, and $d_1^{-/-}d_2^{-/-}$ loses both. As in option A, this is the classic signature of functional partitioning.\n- **Complementation**:\n    - The key result is that, under the broad ancestral promoter $P_A$, $P_A\\!:\\!D_1$ restores *only* $F_1$ and $P_A\\!:\\!D_2$ restores *only* $F_2$. This demonstrates that the protein products themselves have specialized: the $D_1$ protein can only perform subfunction $F_1$, and the $D_2$ protein can only perform subfunction $F_2$, regardless of where they are expressed.\n    - The reciprocal tests ($P_{D_1}\\!:\\!A$ rescuing $F_1$ and $P_{D_2}\\!:\\!A$ rescuing $F_2$) further confirm that the ancestral protein is bifunctional and that the duplicate promoters have partitioned the ancestral expression domain.\n- **Verdict**: This set of outcomes is a perfect and complete demonstration of **structural (or coding) subfunctionalization**, where degenerative mutations have occurred in the protein-coding regions of the duplicates. It provides very strong support for the hypothesis. **Correct**.\n\n**Option E:**\n- **Knockouts**: Single knockouts have no phenotype, suggesting redundancy.\n- **Complementation**: Expressing a duplicate gene in a mutant background *worsens* the phenotype. This suggests a **dominant-negative** effect or some other form of functional interference, where the introduced protein interferes with the remaining functional complexes in the cell. This is a pathological outcome, not a constructive evolutionary process like subfunctionalization.\n- **Verdict**: This outcome is inconsistent with subfunctionalization and points toward a detrimental interaction. **Incorrect**.\n\nIn conclusion, both options A and D describe clear, distinct, and well-supported mechanisms of subfunctionalization that fully align with the hypothesis. Option A represents regulatory subfunctionalization, and Option D represents structural subfunctionalization. Both are valid and strong lines of evidence.", "answer": "$$\\boxed{AD}$$", "id": "2613551"}]}