{"hands_on_practices": [{"introduction": "The journey from raw sequence data to a divergence time estimate begins with a fundamental transformation. This exercise guides you through the essential first steps: correcting observed sequence differences for unobserved multiple substitutions using a standard model, and then converting this corrected genetic distance into an absolute time using the strict molecular clock equation. Mastering this core calculation ([@problem_id:2590767]) is the foundation for all more complex dating analyses that follow.", "id": "2590767", "problem": "You are studying a pair of orthologous nuclear genes sampled from two independently evolving lineages, one plant and one animal, to compare divergence patterns in comparative botany and zoology. From a high-quality alignment of very large length, the observed proportion of nucleotide differences is $p = 0.12$. Assume that nucleotide base frequencies are equal and that substitutions follow the Kimura two-parameter (K80) model, in which transitions and transversions occur at different instantaneous rates but bases are otherwise treated symmetrically. The transition-to-transversion rate ratio is given as $\\kappa = 2$, and the alignment is long enough that the realized transition-to-transversion ratio among observed differences approximates the underlying rate ratio. \n\nUnder a strict molecular clock, the per-lineage substitution rate is $r = 0.004$ substitutions per site per million years (Myr), constant through time in each lineage and independent between the two lineages.\n\nUsing only fundamental definitions and well-tested formulas, proceed as follows:\n- Partition the observed proportion of differences $p$ into the estimated proportions of transitions $P$ and transversions $Q$ by invoking the assumption that the realized transition-to-transversion ratio among observed differences is $\\kappa:1$.\n- Apply the Kimura two-parameter correction to obtain the expected number of substitutions per site $D_{K80}$ from $P$ and $Q$ while ensuring the parameter domain is satisfied so that the correction is defined.\n- Use the strict molecular clock relation between pairwise corrected distance and time to convert $D_{K80}$ to a divergence time $T$.\n\nCompute the divergence time $T$ and report your final answer rounded to four significant figures. Express $T$ in Myr.", "solution": "The problem presented is a standard exercise in molecular phylogenetics, requiring the application of established models to estimate divergence time. I shall first validate its premises before proceeding to a systematic solution.\n\nThe givens are as follows:\n- The observed proportion of nucleotide differences between two sequences is $p = 0.12$.\n- The model for nucleotide substitution is the Kimura two-parameter (K80) model.\n- Base frequencies are assumed to be equal, i.e., $0.25$ for each nucleotide.\n- The transition-to-transversion rate ratio is $\\kappa = 2$.\n- The realized ratio of observed transitions ($P$) to observed transversions ($Q$) is assumed to be equal to the rate ratio, so $P/Q = \\kappa = 2$.\n- The per-lineage substitution rate, assumed constant under a strict molecular clock, is $r = 0.004$ substitutions per site per million years (Myr).\n- The two lineages are evolving independently.\n- The final answer for divergence time, $T$, must be in Myr and rounded to four significant figures.\n\nThe problem is scientifically grounded, using the well-established K80 model and the concept of a molecular clock. It is well-posed, providing all necessary parameters and a clear, logical path to a unique solution. The language is objective and the values provided ($p=0.12$, $\\kappa=2$, $r=0.004$) are within plausible ranges for biological data. There are no logical contradictions, missing data, or scientifically unsound premises. I therefore judge the problem to be valid and will proceed with the derivation.\n\nThe procedure is executed in three stages as directed.\n\nFirst, we partition the total proportion of observed differences, $p$, into the proportion of transitional differences, $P$, and the proportion of transversional differences, $Q$. We are given two conditions:\n1. The sum of the proportions equals the total observed difference: $p = P + Q$.\n2. The ratio of observed transitions to transversions is given by $\\kappa$: $\\frac{P}{Q} = \\kappa$.\n\nSubstituting the given values, $p = 0.12$ and $\\kappa = 2$:\n$$\nP + Q = 0.12\n$$\n$$\n\\frac{P}{Q} = 2 \\implies P = 2Q\n$$\nWe substitute the second equation into the first:\n$$\n2Q + Q = 0.12 \\implies 3Q = 0.12\n$$\nSolving for $Q$ yields:\n$$\nQ = \\frac{0.12}{3} = 0.04\n$$\nWith $Q$ determined, we find $P$:\n$$\nP = 2Q = 2(0.04) = 0.08\n$$\nThus, the observed proportion of differences is partitioned into $P = 0.08$ (transitions) and $Q = 0.04$ (transversions). A simple check confirms $P + Q = 0.08 + 0.04 = 0.12$, which is correct.\n\nSecond, we apply the Kimura two-parameter (K80) correction to estimate the number of substitutions per site, $D_{K80}$. The formula for the K80 distance is:\n$$\nD_{K80} = -\\frac{1}{2}\\ln(1 - 2P - Q) - \\frac{1}{4}\\ln(1 - 2Q)\n$$\nThis correction accounts for multiple substitutions occurring at the same site, which cause the observed difference $p$ to underestimate the true evolutionary distance. Before applying this formula, we must verify that its arguments are well-defined, specifically that the arguments of the natural logarithm are positive.\nCondition 1: $1 - 2P - Q > 0$\n$$\n1 - 2(0.08) - 0.04 = 1 - 0.16 - 0.04 = 1 - 0.20 = 0.80\n$$\nSince $0.80 > 0$, this condition is satisfied.\nCondition 2: $1 - 2Q > 0$\n$$\n1 - 2(0.04) = 1 - 0.08 = 0.92\n$$\nSince $0.92 > 0$, this condition is also satisfied. The K80 correction is therefore applicable.\n\nWe now substitute the values of $P$ and $Q$ into the K80 formula:\n$$\nD_{K80} = -\\frac{1}{2}\\ln(0.80) - \\frac{1}{4}\\ln(0.92)\n$$\nWe compute the numerical value for $D_{K80}$:\n$$\nD_{K80} \\approx -\\frac{1}{2}(-0.22314355) - \\frac{1}{4}(-0.08338161)\n$$\n$$\nD_{K80} \\approx 0.111571775 + 0.0208454025\n$$\n$$\nD_{K80} \\approx 0.1324171775\n$$\nThis value $D_{K80}$ represents the total estimated number of substitutions per site that have accumulated between the two sequences since their last common ancestor.\n\nThird, we use the strict molecular clock hypothesis to convert this genetic distance into a divergence time, $T$. The total distance $D$ between two sequences is the sum of the substitutions accumulated along each of the two lineages from their common ancestor. If $r$ is the substitution rate per lineage per unit time, and $T$ is the time since divergence, the distance accumulated in each lineage is $r \\times T$. Since there are two such lineages, the total distance is:\n$$\nD = 2rT\n$$\nWe solve for the divergence time $T$:\n$$\nT = \\frac{D}{2r}\n$$\nUsing our calculated distance $D_{K80}$ and the given rate $r = 0.004$ substitutions per site per Myr:\n$$\nT = \\frac{0.1324171775}{2 \\times 0.004} = \\frac{0.1324171775}{0.008}\n$$\n$$\nT \\approx 16.5521471875 \\text{ Myr}\n$$\nThe problem requires the final answer to be rounded to four significant figures.\n$$\nT \\approx 16.55 \\text{ Myr}\n$$\nThis is the estimated time since the plant and animal lineages diverged from their last common ancestor, based on the provided data and model.", "answer": "$$\n\\boxed{16.55}\n$$"}, {"introduction": "While pairwise comparisons are foundational, evolutionary history unfolds on a tree connecting multiple lineages. This practice elevates the analysis from a single pair of taxa to a small phylogeny, demonstrating how a matrix of genetic distances can be used to simultaneously infer both the branching pattern (topology) and the ages of the nodes. By applying the principle of least squares, you will learn how to select the best-fitting ultrametric tree and its corresponding divergence times under a strict clock model ([@problem_id:2590673]).", "id": "2590673", "problem": "A comparative dataset of four closely related taxa in a zoological clade is analyzed using a corrected sequence divergence under the Jukes–Cantor (JC69) model (Jukes–Cantor 1969 (JC69)). The corrected pairwise distances $D_{ij}$ are measured in substitutions per site. Assume a strict molecular clock with a known substitution rate $r$ (substitutions per site per million years) that is constant along all lineages.\n\nFundamental facts to use:\n- Under a strict molecular clock, each branch accumulates substitutions at a constant rate $r$ per lineage per unit time.\n- The corrected distance $D_{ij}$ approximates the expected total number of substitutions per site along the unique path connecting taxa $i$ and $j$ on the tree, which is the sum of branch lengths on that path.\n- An ultrametric tree is one in which the total time from the root to each tip is equal.\n\nYou are given the following data and assumptions:\n- The known strict clock rate is $r = 0.005$.\n- The observed symmetric distance matrix entries are:\n  - $D_{AB} = 0.0618$, $D_{AC} = 0.1420$, $D_{AD} = 0.1450$,\n  - $D_{BC} = 0.1400$, $D_{BD} = 0.1440$, $D_{CD} = 0.0552$.\n- Consider only fully resolved rooted binary trees on taxa $\\{A,B,C,D\\}$ having two sister-pairs (cherries). For each candidate rooted topology, the three node ages are the two internal clade ages (the ages of the two sister-pair most recent common ancestors) and the root age.\n\nTasks:\n1. Using the fundamental facts above and without invoking any pre-derived “shortcut” formulas, write the model-predicted pairwise distances for a given candidate topology as linear functions of the unknown node ages and the known rate $r$. Carefully justify why these predictions hold from first principles.\n2. For each of the three possible rooted topologies with two cherries, construct the unweighted least-squares criterion that compares the observed distances $D_{ij}$ to the model-predicted distances. Derive the closed-form least-squares estimators of the node ages under the strict clock for a fixed topology, and write the resulting minimized sum of squared residuals as a function of the observed distances for that topology.\n3. Evaluate the minimized sum of squared residuals for each of the three topologies, select the topology with the smallest value, and report its least-squares node-age estimates.\n4. From the selected topology, extract the estimated root age (in millions of years).\n\nExpress the final answer as the estimated root age in $\\text{Myr}$ (millions of years) and round to four significant figures. Provide only the single numerical value asked for as your final answer.", "solution": "The problem statement is first subjected to validation.\n\nStep 1: Extracted Givens\n- Taxa: A set of four taxa $\\{A, B, C, D\\}$.\n- Model: Jukes–Cantor (JC69) corrected sequence divergence.\n- Distances: Pairwise distances $D_{ij}$ are measured in substitutions per site.\n- Clock: A strict molecular clock with a constant rate $r$ along all lineages.\n- Clock Rate: $r = 0.005$ substitutions per site per million years.\n- Distance Matrix entries:\n  - $D_{AB} = 0.0618$\n  - $D_{AC} = 0.1420$\n  - $D_{AD} = 0.1450$\n  - $D_{BC} = 0.1400$\n  - $D_{BD} = 0.1440$\n  - $D_{CD} = 0.0552$\n- Topology Constraint: The analysis is restricted to fully resolved rooted binary trees on $\\{A,B,C,D\\}$ with two sister-pairs (cherries).\n- Definitions:\n  - The corrected distance $D_{ij}$ is the sum of branch lengths (in substitutions per site) on the path connecting taxa $i$ and $j$.\n  - A strict clock implies an ultrametric tree where branch length is the product of time and rate.\n  - Node ages are defined as the ages of the two internal clades and the root age.\n\nStep 2: Validation Using Extracted Givens\nThe problem is scientifically grounded, employing standard principles of molecular phylogenetics such as the strict molecular clock model, distance-based methods, and least-squares estimation for tree parameterization. It is well-posed, providing a complete set of data and a clear objective, allowing for a unique solution via the specified procedure. The problem is objective, framed in precise, formal language without subjective or speculative content. It is a textbook exercise in computational biology, free of scientific unsoundness, ambiguity, or missing information. The number of data points (six distances) is greater than the number of free parameters for a given topology under a strict clock (three node ages), making the use of a least-squares criterion appropriate and necessary.\n\nStep 3: Verdict and Action\nThe problem is valid. A complete solution will be provided.\n\nThe solution proceeds by executing the four tasks outlined in the problem statement.\n\nTask 1: Model-Predicted Distances\nFor a set of four taxa $\\{A, B, C, D\\}$, there are three possible fully resolved rooted binary topologies containing two sister-pairs:\n1. Topology 1: $((A,B),(C,D))$\n2. Topology 2: $((A,C),(B,D))$\n3. Topology 3: $((A,D),(B,C))$\n\nLet us consider a general topology of this form, denoted $((i,j),(k,l))$. Let $t_{ij}$ be the age (in millions of years, Myr) of the most recent common ancestor (MRCA) of taxa $i$ and $j$. Let $t_{kl}$ be the age of the MRCA of taxa $k$ and $l$. Let $t_{root}$ be the age of the root of the tree, which is the MRCA of all four taxa. By definition, $t_{root} > t_{ij}$ and $t_{root} > t_{kl}$. Time is measured backwards from the present (time $t=0$).\n\nUnder a strict molecular clock, the evolutionary distance (number of substitutions per site) between any two nodes on the tree is the product of the time separating them and the substitution rate $r$. The total distance $D_{ij}$ between two terminal taxa $i$ and $j$ is the sum of the lengths of the branches on the unique path connecting them.\n\nFor the topology $((i,j),(k,l))$, the path between taxon $i$ and taxon $j$ goes from the present ($t=0$) up to their MRCA at time $t_{ij}$ and back to the present. The total time duration of this path is $t_{ij} + t_{ij} = 2t_{ij}$. Therefore, the model-predicted distance is $\\hat{D}_{ij} = r \\times (2t_{ij}) = 2rt_{ij}$. Similarly, for the other sister-pair, $\\hat{D}_{kl} = 2rt_{kl}$.\n\nThe path between a taxon from the first pair (e.g., $i$) and a taxon from the second pair (e.g., $k$) goes from the present up to the root at time $t_{root}$ and back to the present. The total time duration of this path is $t_{root} + t_{root} = 2t_{root}$. Thus, for any cross-pair comparison, the predicted distance is the same: $\\hat{D}_{ik} = \\hat{D}_{il} = \\hat{D}_{jk} = \\hat{D}_{jl} = 2rt_{root}$.\n\nThese equations provide the model-predicted pairwise distances as linear functions of the unknown node ages for any given candidate topology.\n\nTask 2: Least-Squares Criterion and Estimators\nThe unweighted least-squares criterion, $S$, is the sum of the squared differences between the observed distances $D_{ij}$ and the model-predicted distances $\\hat{D}_{ij}$. For the general topology $((i,j),(k,l))$, this is:\n$$S = (D_{ij} - 2rt_{ij})^2 + (D_{kl} - 2rt_{kl})^2 + (D_{ik} - 2rt_{root})^2 + (D_{il} - 2rt_{root})^2 + (D_{jk} - 2rt_{root})^2 + (D_{jl} - 2rt_{root})^2$$\nTo find the least-squares estimators for the node ages, we must minimize $S$ with respect to $t_{ij}$, $t_{kl}$, and $t_{root}$ by setting the partial derivatives to zero.\n\nThe parameters are decoupled.\n$\\frac{\\partial S}{\\partial t_{ij}} = 2(D_{ij} - 2rt_{ij})(-2r) = 0 \\implies \\hat{t}_{ij} = \\frac{D_{ij}}{2r}$\n$\\frac{\\partial S}{\\partial t_{kl}} = 2(D_{kl} - 2rt_{kl})(-2r) = 0 \\implies \\hat{t}_{kl} = \\frac{D_{kl}}{2r}$\n\nFor the root age:\n$\\frac{\\partial S}{\\partial t_{root}} = 2(D_{ik} - 2rt_{root})(-2r) + 2(D_{il} - 2rt_{root})(-2r) + 2(D_{jk} - 2rt_{root})(-2r) + 2(D_{jl} - 2rt_{root})(-2r) = 0$\nThis simplifies to:\n$(D_{ik} - 2rt_{root}) + (D_{il} - 2rt_{root}) + (D_{jk} - 2rt_{root}) + (D_{jl} - 2rt_{root}) = 0$\n$D_{ik} + D_{il} + D_{jk} + D_{jl} = 4 \\times (2rt_{root}) = 8rt_{root}$\n$\\hat{t}_{root} = \\frac{D_{ik} + D_{il} + D_{jk} + D_{jl}}{8r}$\n\nThe minimized sum of squared residuals, $S^*$, is found by substituting these estimators back into the expression for $S$. The first two terms, $(D_{ij} - 2r\\hat{t}_{ij})^2$ and $(D_{kl} - 2r\\hat{t}_{kl})^2$, become zero. The remaining sum is:\n$S^* = (D_{ik} - \\bar{D}_{cross})^2 + (D_{il} - \\bar{D}_{cross})^2 + (D_{jk} - \\bar{D}_{cross})^2 + (D_{jl} - \\bar{D}_{cross})^2$\nwhere $\\bar{D}_{cross} = 2r\\hat{t}_{root} = \\frac{D_{ik} + D_{il} + D_{jk} + D_{jl}}{4}$ is the arithmetic mean of the four \"across-pairs\" distances. Thus, $S^*$ is the sum of squared deviations of the across-pairs distances from their mean.\n\nTask 3: Evaluation and Selection\nWe now calculate $S^*$ for each of the three possible topologies using the provided distance data.\n\nTopology 1: $((A,B),(C,D))$\nThe across-pairs distances are $\\{D_{AC}, D_{AD}, D_{BC}, D_{BD}\\}$.\n$D_{AC} = 0.1420$, $D_{AD} = 0.1450$, $D_{BC} = 0.1400$, $D_{BD} = 0.1440$.\nThe mean of these distances is:\n$\\bar{D}_{cross,1} = \\frac{0.1420 + 0.1450 + 0.1400 + 0.1440}{4} = \\frac{0.5710}{4} = 0.14275$.\nThe minimized sum of squares is:\n$S_1^* = (0.1420 - 0.14275)^2 + (0.1450 - 0.14275)^2 + (0.1400 - 0.14275)^2 + (0.1440 - 0.14275)^2$\n$S_1^* = (-0.00075)^2 + (0.00225)^2 + (-0.00275)^2 + (0.00125)^2$\n$S_1^* = 0.0000005625 + 0.0000050625 + 0.0000075625 + 0.0000015625 = 0.00001475 = 1.475 \\times 10^{-5}$.\n\nTopology 2: $((A,C),(B,D))$\nThe across-pairs distances are $\\{D_{AB}, D_{AD}, D_{CB}, D_{CD}\\}$. Note that $D_{CB} = D_{BC}$.\n$D_{AB} = 0.0618$, $D_{AD} = 0.1450$, $D_{BC} = 0.1400$, $D_{CD} = 0.0552$.\nThe mean is:\n$\\bar{D}_{cross,2} = \\frac{0.0618 + 0.1450 + 0.1400 + 0.0552}{4} = \\frac{0.4020}{4} = 0.1005$.\n$S_2^* = (0.0618 - 0.1005)^2 + (0.1450 - 0.1005)^2 + (0.1400 - 0.1005)^2 + (0.0552 - 0.1005)^2$\n$S_2^* = (-0.0387)^2 + (0.0445)^2 + (0.0395)^2 + (-0.0453)^2$\n$S_2^* = 0.00149769 + 0.00198025 + 0.00156025 + 0.00205209 = 0.00709028$.\n\nTopology 3: $((A,D),(B,C))$\nThe across-pairs distances are $\\{D_{AB}, D_{AC}, D_{DB}, D_{DC}\\}$. Note that $D_{DB}=D_{BD}$ and $D_{DC}=D_{CD}$.\n$D_{AB} = 0.0618$, $D_{AC} = 0.1420$, $D_{BD} = 0.1440$, $D_{CD} = 0.0552$.\nThe mean is:\n$\\bar{D}_{cross,3} = \\frac{0.0618 + 0.1420 + 0.1440 + 0.0552}{4} = \\frac{0.4030}{4} = 0.10075$.\n$S_3^* = (0.0618 - 0.10075)^2 + (0.1420 - 0.10075)^2 + (0.1440 - 0.10075)^2 + (0.0552 - 0.10075)^2$\n$S_3^* = (-0.03895)^2 + (0.04125)^2 + (0.04325)^2 + (-0.04555)^2$\n$S_3^* = 0.0015171025 + 0.0017015625 + 0.0018705625 + 0.0020748025 = 0.00716403$.\n\nComparing the minimized sums of squares:\n$S_1^* = 1.475 \\times 10^{-5}$\n$S_2^* \\approx 7.09 \\times 10^{-3}$\n$S_3^* \\approx 7.16 \\times 10^{-3}$\nSince $S_1^*$ is dramatically smaller than $S_2^*$ and $S_3^*$, the topology $((A,B),(C,D))$ provides the best fit to the data under the strict clock model.\n\nThe least-squares node-age estimates for this topology are:\n$\\hat{t}_{AB} = \\frac{D_{AB}}{2r} = \\frac{0.0618}{2 \\times 0.005} = \\frac{0.0618}{0.01} = 6.18 \\, \\text{Myr}$\n$\\hat{t}_{CD} = \\frac{D_{CD}}{2r} = \\frac{0.0552}{2 \\times 0.005} = \\frac{0.0552}{0.01} = 5.52 \\, \\text{Myr}$\n$\\hat{t}_{root} = \\hat{t}_{ABCD} = \\frac{D_{AC} + D_{AD} + D_{BC} + D_{BD}}{8r} = \\frac{0.5710}{8 \\times 0.005} = \\frac{0.5710}{0.04} = 14.275 \\, \\text{Myr}$\n\nTask 4: Extract Estimated Root Age\nThe estimated root age for the selected topology $((A,B),(C,D))$ is $\\hat{t}_{ABCD}$.\n$\\hat{t}_{ABCD} = 14.275 \\, \\text{Myr}$.\nThe problem requires this value to be rounded to four significant figures.\n$14.275 \\approx 14.28$.", "answer": "$$\\boxed{14.28}$$"}, {"introduction": "Modern divergence dating is overwhelmingly performed within a Bayesian statistical framework, where fossil evidence is incorporated as probabilistic priors on node ages. This hands-on coding exercise provides a practical introduction to this paradigm, where you will implement Bayes' theorem to compute a posterior age estimate from a likelihood and a prior. Crucially, this practice ([@problem_id:2590692]) explores how different choices of calibration priors can influence results, guiding you through a sensitivity analysis—a critical skill for any robust divergence dating study.", "id": "2590692", "problem": "You are modeling divergence times for a single internal node in a comparative dataset spanning zoological and botanical lineages using a strict molecular clock. Fossil evidence provides a hard minimum age of $52$ million years (million years, Ma) and a plausible soft maximum of $70$ Ma. You will compare two alternative node-age calibration priors and quantify their influence on the posterior node age under a simple likelihood derived from a Poisson process of substitutions.\n\nFundamental base and likelihood: Under a strict molecular clock with per-site substitution rate $u$ in substitutions per site per Ma and alignment length $L$ in sites, the expected number of substitutions accrued on both daughter lineages after a split at time $T$ (in Ma) is $2 u L T$. Approximating the total number of observed substitutions $K$ across the alignment as a realization from a Poisson process with mean $\\Lambda(T) = 2 u L T$, the likelihood of $T$ given $(u,L,K)$ is proportional to the Poisson probability mass function in $K$ parameterized by $\\Lambda(T)$. That is, the likelihood is $L(T \\mid u, L, K) \\propto \\exp(-\\Lambda(T)) \\Lambda(T)^K$.\n\nCalibration priors to compare:\n- Uniform prior: $T \\sim \\mathrm{Uniform}(a,b)$ with $a=52$ Ma and $b=70$ Ma.\n- Offset lognormal prior: $T - m \\sim \\mathrm{Lognormal}(\\mu,\\sigma^2)$ with offset $m=52$ Ma, so that $T \\ge m$. The lognormal is parameterized on the natural logarithm scale for $T-m$, with mean parameter $\\mu$ and standard deviation parameter $\\sigma$ on the log scale.\n\nTask: Using Bayes’ theorem and the likelihood specified above as the only source of data information, implement a numerical procedure to compute the posterior mean age $E[T \\mid \\text{data}]$ under each prior. To maintain scientific realism and numerical stability, you must:\n- Operate strictly on the domain allowed by each prior. For the uniform prior, this is $[a,b]$. For the offset lognormal prior, this is $[m,\\infty)$.\n- Use a numerically stable computation of the unnormalized log posterior (e.g., using a stable transformation to avoid overflow), evaluate it on a dense, equally spaced grid over the support, and approximate the posterior mean by a normalized Riemann sum.\n- Choose a finite integration upper bound $T_{\\max}$ for the offset lognormal case that safely captures essentially all posterior mass. The choice must be data-adaptive and justified by the interaction between the likelihood and the prior tail behavior. For example, let $T_{\\max}$ be the maximum of a large prior quantile and a multiple of the maximum-likelihood estimate $\\hat{T}=K/(2uL)$ when defined, and ensure $T_{\\max} > m$.\n- Report all ages in Ma.\n\nSensitivity analysis: For each test case, compute the posterior mean age under the lognormal prior, $E_{\\mathrm{LN}}[T \\mid \\text{data}]$, and under the uniform prior, $E_{\\mathrm{U}}[T \\mid \\text{data}]$. Then compute the scalar sensitivity summary $\\Delta = E_{\\mathrm{U}}[T \\mid \\text{data}] - E_{\\mathrm{LN}}[T \\mid \\text{data}]$ in Ma. Negative $\\Delta$ indicates that the uniform prior yields a smaller posterior mean than the lognormal prior.\n\nTest suite: Implement your program so that it computes $\\Delta$ for each of the following four parameter settings, which together probe a typical use case, a data-dominated regime, a boundary-constrained regime, and a prior-dominated regime. All ages must be handled and reported in Ma, and all rates are in substitutions per site per Ma.\n\n- Case $1$ (typical): $u = 10^{-3}$, $L = 5000$, $K = 600$, uniform prior with $a = 52$, $b = 70$, offset lognormal prior with $m = 52$, $\\mu = \\ln(8)$, $\\sigma = 0.3$.\n- Case $2$ (data-dominated): $u = 10^{-3}$, $L = 20000$, $K = 2320$, uniform prior with $a = 52$, $b = 70$, offset lognormal prior with $m = 52$, $\\mu = \\ln(8)$, $\\sigma = 0.8$.\n- Case $3$ (boundary pressure): $u = 5 \\times 10^{-4}$, $L = 4000$, $K = 360$, uniform prior with $a = 52$, $b = 70$, offset lognormal prior with $m = 52$, $\\mu = \\ln(8)$, $\\sigma = 0.5$.\n- Case $4$ (prior-dominated): $u = 5 \\times 10^{-4}$, $L = 100$, $K = 3$, uniform prior with $a = 52$, $b = 70$, offset lognormal prior with $m = 52$, $\\mu = \\ln(8)$, $\\sigma = 0.4$.\n\nAnswer specification and output format:\n- For each case, compute $\\Delta$ in Ma and round to three decimal places.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, ordered as $[\\Delta_1,\\Delta_2,\\Delta_3,\\Delta_4]$ with each $\\Delta_i$ rounded to three decimal places and expressed in Ma.", "solution": "The problem requires a Bayesian analysis to quantify the influence of two different prior distributions on the posterior mean age of a phylogenetic node. The analysis is based on a specified likelihood function derived from a Poisson model of molecular evolution under a strict clock. The solution involves numerical computation of posterior expectations.\n\nThe core of the analysis rests on Bayes' theorem, which states that the posterior probability density function (PDF) $p(T|\\text{data})$ for a parameter $T$ (here, the divergence time) is proportional to the product of the likelihood of the data given the parameter, $L(\\text{data}|T)$, and the prior probability density of the parameter, $\\pi(T)$. The data consists of the number of observed substitutions $K$, the substitution rate $u$, and the alignment length $L$. Thus, we have:\n$$p(T | u, L, K) \\propto L(T | u, L, K) \\cdot \\pi(T)$$\n\nThe likelihood function is given as being proportional to a Poisson probability mass function for $K$ with mean $\\Lambda(T) = 2uLT$.\n$$L(T | u, L, K) \\propto \\exp(-\\Lambda(T)) \\Lambda(T)^K = \\exp(-2uLT) (2uLT)^K$$\nFor this to be a valid likelihood for $T$, $T$ must be greater than $0$, which is biologically necessary.\n\nTo perform numerical calculations without encountering floating-point underflow or overflow, it is standard practice to work with the logarithm of the unnormalized posterior density, $\\log P^*(T)$:\n$$\\log P^*(T) = \\log L(T | u, L, K) + \\log \\pi(T)$$\nIgnoring any terms that are constant with respect to $T$, the log-likelihood is:\n$$\\log L(T | u, L, K) = K \\log(2uLT) - 2uLT$$\n\nThe posterior mean age, $E[T | \\text{data}]$, is defined by the integral:\n$$E[T | \\text{data}] = \\frac{\\int T \\cdot p(T | \\text{data}) \\,dT}{\\int p(T | \\text{data}) \\,dT} = \\frac{\\int T \\cdot \\exp(\\log P^*(T)) \\,dT}{\\int \\exp(\\log P^*(T)) \\,dT}$$\nwhere the integration is performed over the support of the prior $\\pi(T)$. We will approximate these integrals using a Riemann sum over a dense, equally spaced grid of $N$ points $\\{T_i\\}$. The approximation is:\n$$E[T | \\text{data}] \\approx \\frac{\\sum_{i=1}^N T_i \\cdot \\exp(\\log P^*(T_i))}{\\sum_{i=1}^N \\exp(\\log P^*(T_i))}$$\nFor numerical stability, we subtract the maximum value of the log-posterior, $M = \\max_i(\\log P^*(T_i))$, before exponentiation. This yields the stable computational formula:\n$$E[T | \\text{data}] \\approx \\frac{\\sum_{i=1}^N T_i \\cdot \\exp(\\log P^*(T_i) - M)}{\\sum_{i=1}^N \\exp(\\log P^*(T_i) - M)}$$\n\nWe now specify the procedure for each of the two priors.\n\n**1. Uniform Prior**\nThe prior on $T$ is given by $T \\sim \\mathrm{Uniform}(a,b)$, with $a=52$ Ma and $b=70$ Ma.\nThe PDF is $\\pi_U(T) = \\frac{1}{b-a}$ for $T \\in [a, b]$ and $0$ otherwise.\nThe log-prior, $\\log \\pi_U(T) = -\\log(b-a)$, is a constant on the support $[a, b]$. Since constant terms in the log-posterior cancel out during normalization, we can effectively set $\\log \\pi_U(T) = 0$ on the support.\nThe unnormalized log-posterior is therefore:\n$$\\log P^*_U(T) = K \\log(2uLT) - 2uLT, \\quad \\text{for } T \\in [a, b]$$\nThe numerical integration grid $\\{T_i\\}$ is constructed over the interval $[a, b]=[52, 70]$.\n\n**2. Offset Lognormal Prior**\nThe prior is $T - m \\sim \\mathrm{Lognormal}(\\mu, \\sigma^2)$, with offset $m=52$ Ma. The support is $T \\in [m, \\infty)$.\nThe PDF for $T$ is:\n$$\\pi_{LN}(T) = \\frac{1}{(T-m)\\sigma\\sqrt{2\\pi}} \\exp\\left( - \\frac{(\\ln(T-m)-\\mu)^2}{2\\sigma^2} \\right), \\quad \\text{for } T > m$$\nThe log-prior, dropping constant terms, is:\n$$\\log \\pi_{LN}(T) \\propto -\\ln(T-m) - \\frac{(\\ln(T-m)-\\mu)^2}{2\\sigma^2}$$\nThe unnormalized log-posterior for $T > m$ is:\n$$\\log P^*_{LN}(T) = K \\log(2uLT) - 2uLT - \\ln(T-m) - \\frac{(\\ln(T-m)-\\mu)^2}{2\\sigma^2}$$\nNumerical integration requires a finite upper bound, $T_{\\max}$. This bound must be chosen to be large enough to contain essentially all of the posterior probability mass. A data-adaptive approach is employed as specified. We define $T_{\\max}$ as the maximum of two quantities:\n1.  A high quantile of the prior distribution, to ensure its tail is adequately sampled. We use the $99.9$-th percentile of the offset lognormal prior: $T_{0.999} = m + \\exp(\\mu + \\sigma \\Phi^{-1}(0.999))$, where $\\Phi^{-1}$ is the quantile function (inverse CDF) of the standard normal distribution.\n2.  A value based on the maximum-likelihood estimate (MLE) of the age, $\\hat{T} = K / (2uL)$, which identifies the peak of the likelihood function. We use a multiple of this value, $3\\hat{T}$, to ensure the region of high likelihood is included.\nThe final integration limit is $T_{\\max} = \\max(T_{0.999}, 3\\hat{T})$, with the constraint that $T_{\\max} > m$. The grid $\\{T_i\\}$ is constructed over $[m+\\epsilon, T_{\\max}]$, where $\\epsilon$ is a small positive number to avoid the singularity at $T=m$.\n\nFor each test case, we compute the posterior mean age under the uniform prior, $E_U[T | \\text{data}]$, and the lognormal prior, $E_{LN}[T | \\text{data}]$. The final sensitivity measure is $\\Delta = E_U[T | \\text{data}] - E_{LN}[T | \\text{data}]$. The procedures outlined above are applied to each of the four specified parameter sets.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef compute_posterior_mean(u, L, K, prior_spec):\n    \"\"\"\n    Computes the posterior mean age using numerical integration.\n\n    Args:\n        u (float): Per-site substitution rate.\n        L (int): Alignment length.\n        K (int): Number of observed substitutions.\n        prior_spec (dict): Dictionary specifying the prior.\n                           For 'uniform': {'type': 'uniform', 'a': a, 'b': b}\n                           For 'lognormal': {'type': 'lognormal', 'm': m, 'mu': mu, 'sigma': sigma}\n    Returns:\n        float: The posterior mean age.\n    \"\"\"\n    NUM_POINTS = 20000\n    \n    # Pre-calculate constant term from likelihood\n    lambda_const = 2.0 * u * L\n    if lambda_const <= 0:\n        # This case should not happen with valid inputs but is a safeguard.\n        return np.nan\n\n    def log_likelihood(T):\n        # Vectorized log-likelihood function (up to a constant)\n        # We need to handle T=0 case, though our grids will avoid it.\n        arg = lambda_const * T\n        return K * np.log(arg) - arg\n\n    if prior_spec['type'] == 'uniform':\n        a = prior_spec['a']\n        b = prior_spec['b']\n        \n        T_grid = np.linspace(a, b, NUM_POINTS)\n        \n        # For uniform prior, log-prior is constant and cancels out.\n        log_post = log_likelihood(T_grid)\n\n    elif prior_spec['type'] == 'lognormal':\n        m = prior_spec['m']\n        mu = prior_spec['mu']\n        sigma = prior_spec['sigma']\n\n        # Determine T_max for integration\n        # 1. High prior quantile\n        # Quantile function for standard normal distribution\n        norm_quantile = norm.ppf(0.999)\n        T_prior_q = m + np.exp(mu + sigma * norm_quantile)\n\n        # 2. Guide from maximum likelihood estimate\n        T_mle = K / lambda_const if lambda_const > 0 else m + 1.0\n        T_lik_guide = 3.0 * T_mle\n        \n        T_max = max(T_prior_q, T_lik_guide)\n        if T_max <= m: # Ensure T_max is strictly greater than m\n            T_max = m + 100 # A reasonable fallback\n\n        # Grid starts slightly after m to avoid log(0)\n        epsilon = 1e-9\n        T_grid = np.linspace(m + epsilon, T_max, NUM_POINTS)\n\n        # Log prior (up to a constant)\n        T_minus_m = T_grid - m\n        log_prior = -np.log(T_minus_m) - (np.log(T_minus_m) - mu)**2 / (2 * sigma**2)\n        \n        log_post = log_likelihood(T_grid) + log_prior\n        \n    else:\n        raise ValueError(\"Unknown prior type specified.\")\n\n    # Numerically stable computation of the mean\n    log_post_stable = log_post - np.max(log_post)\n    weights = np.exp(log_post_stable)\n    \n    posterior_mean = np.sum(T_grid * weights) / np.sum(weights)\n\n    return posterior_mean\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for all test cases.\n    \"\"\"\n    test_cases = [\n        # Case 1 (typical)\n        {'u': 1e-3, 'L': 5000, 'K': 600, 'uniform_params': {'a': 52, 'b': 70}, 'lognormal_params': {'m': 52, 'mu': np.log(8), 'sigma': 0.3}},\n        # Case 2 (data-dominated)\n        {'u': 1e-3, 'L': 20000, 'K': 2320, 'uniform_params': {'a': 52, 'b': 70}, 'lognormal_params': {'m': 52, 'mu': np.log(8), 'sigma': 0.8}},\n        # Case 3 (boundary pressure)\n        {'u': 5e-4, 'L': 4000, 'K': 360, 'uniform_params': {'a': 52, 'b': 70}, 'lognormal_params': {'m': 52, 'mu': np.log(8), 'sigma': 0.5}},\n        # Case 4 (prior-dominated)\n        {'u': 5e-4, 'L': 100, 'K': 3, 'uniform_params': {'a': 52, 'b': 70}, 'lognormal_params': {'m': 52, 'mu': np.log(8), 'sigma': 0.4}},\n    ]\n\n    delta_results = []\n    \n    for case in test_cases:\n        u, L, K = case['u'], case['L'], case['K']\n        \n        uniform_prior_spec = {'type': 'uniform', **case['uniform_params']}\n        E_U = compute_posterior_mean(u, L, K, uniform_prior_spec)\n        \n        lognormal_prior_spec = {'type': 'lognormal', **case['lognormal_params']}\n        E_LN = compute_posterior_mean(u, L, K, lognormal_prior_spec)\n        \n        delta = E_U - E_LN\n        delta_results.append(delta)\n\n    # Format the output as specified: a list of numbers rounded to three decimal places.\n    formatted_results = [f\"{r:.3f}\" for r in delta_results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n\n```"}]}