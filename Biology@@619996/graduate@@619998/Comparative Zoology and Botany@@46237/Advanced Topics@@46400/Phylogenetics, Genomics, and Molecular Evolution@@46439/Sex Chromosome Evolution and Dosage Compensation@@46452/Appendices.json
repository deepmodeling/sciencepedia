{"hands_on_practices": [{"introduction": "This exercise will build your foundational understanding by deriving the expected quantitative signatures of different dosage compensation mechanisms. Before analyzing complex genomic data, it is crucial to establish clear, testable predictions from first principles. Here, you will translate biological models of gene regulation—such as X-inactivation or transcriptional upregulation—into precise mathematical expectations for male-female gene expression ratios, a critical skill for interpreting real-world results. [@problem_id:2609734]", "problem": "In many animals and plants, the evolution of sex chromosomes has led to distinct mechanisms of dosage compensation that alter the effective gene dose between males and females. Consider X-linked genes in a species where males are XY (one X chromosome) and females are XX (two X chromosomes). Let the baseline, per-active-copy expression of an X-linked gene be $e_X$, defined as the expected expression output per active X-linked gene copy in the absence of dosage regulation. The male–female log base 2 fold-change (log2 fold-change (LFC)) for a given gene is defined as $Y = \\log_{2}\\!\\left(M/F\\right)$, where $M$ and $F$ are the expected expression levels of that gene in males and females, respectively.\n\nUse the following well-tested starting points:\n- Gene expression output is proportional to the number of active gene copies times the per-copy transcriptional output.\n- Under independence, the expectation of a mixture equals the mixture of expectations (law of total expectation).\n- The log base 2 fold-change is $Y = \\log_{2}\\!\\left(M\\right) - \\log_{2}\\!\\left(F\\right)$.\n\nThree classic dosage regimes are considered:\n1) Complete upregulation: the male’s single X chromosome is upregulated two-fold to match the output from two active X copies in females; females do not inactivate an X chromosome and do not upregulate X expression.\n2) X-inactivation: females inactivate one X chromosome so that one active X remains, with no upregulation in either sex.\n3) No compensation: females retain two active X copies, and neither sex upregulates or downregulates X expression.\n\na) From first principles and the definitions above, derive the expected male–female log2 fold-change $Y$ for an X-linked gene under each regime (1–3) in terms of $e_X$ and numerical constants only.\n\nb) In an empirical dataset of $n$ X-linked genes from a closely related clade, the across-gene distribution of observed $Y$ values is approximately normal with sample mean $\\bar{Y} = -0.1$ and sample variance $s^{2} = 0.25$. Suppose that each gene belongs to one of two latent classes: “compensated” (meaning its expected $Y$ equals the value you derived for regimes 1 or 2) with probability $1-p$, or “no compensation” (meaning its expected $Y$ equals the value you derived for regime 3) with probability $p$. Assume an additive, zero-mean, gene-specific noise term with common variance $\\sigma^{2}$ across all genes, independent of class, with $\\sigma^{2} = 0.16$. Using the law of total expectation, express the mixture expectation $\\mathbb{E}[Y]$ in terms of $p$ and the regime-specific expectations from part (a). Then, using the empirical mean $\\bar{Y}$ as an estimate of $\\mathbb{E}[Y]$, compute the estimate $\\hat{p}$.\n\nExpress the final numerical estimate of $\\hat{p}$ as a decimal, rounded to four significant figures.", "solution": "The problem is scientifically grounded, well-posed, and objective. All parameters and conditions are sufficiently defined to permit a unique solution. The potential ambiguity in the term \"compensated\" is resolved upon calculation, as both specified regimes yield the same expected log-fold change. The problem is declared valid.\n\nPart (a): Derivation of Expected Log2 Fold-Change ($Y$)\n\nThe male-female log base $2$ fold-change is defined as $Y = \\log_{2}(M/F)$, where $M$ and $F$ are the expected gene expression levels in males and females, respectively. Gene expression is proportional to the number of active gene copies multiplied by the per-copy transcriptional output, $e_X$. We analyze each dosage compensation regime as follows.\n\n1) Regime 1: Complete upregulation.\nIn this regime, the male possesses one X chromosome, which is upregulated two-fold. The per-copy expression is thus $2e_X$. The total male expression is:\n$$M = 1 \\times (2e_X) = 2e_X$$\nFemales have two X chromosomes, with no inactivation and no upregulation. The per-copy expression is the baseline $e_X$. The total female expression is:\n$$F = 2 \\times e_X = 2e_X$$\nThe expected log2 fold-change $Y_1$ is therefore:\n$$Y_1 = \\log_{2}\\left(\\frac{M}{F}\\right) = \\log_{2}\\left(\\frac{2e_X}{2e_X}\\right) = \\log_{2}(1) = 0$$\n\n2) Regime 2: X-inactivation.\nIn this regime, there is no expression upregulation in either sex. The per-copy expression is $e_X$ for all active copies. Males have one active X chromosome:\n$$M = 1 \\times e_X = e_X$$\nFemales inactivate one of their two X chromosomes, leaving one active copy:\n$$F = 1 \\times e_X = e_X$$\nThe expected log2 fold-change $Y_2$ is:\n$$Y_2 = \\log_{2}\\left(\\frac{M}{F}\\right) = \\log_{2}\\left(\\frac{e_X}{e_X}\\right) = \\log_{2}(1) = 0$$\n\n3) Regime 3: No compensation.\nIn this regime, there is no regulation of expression in either sex. The per-copy expression is $e_X$. Males have one active X chromosome:\n$$M = 1 \\times e_X = e_X$$\nFemales have two active X chromosomes:\n$$F = 2 \\times e_X = 2e_X$$\nThe expected log2 fold-change $Y_3$ is:\n$$Y_3 = \\log_{2}\\left(\\frac{M}{F}\\right) = \\log_{2}\\left(\\frac{e_X}{2e_X}\\right) = \\log_{2}\\left(\\frac{1}{2}\\right) = -1$$\n\nIn summary, the expected log2 fold-changes are $Y=0$ for the compensated regimes (1 and 2) and $Y=-1$ for the uncompensated regime (3).\n\nPart (b): Estimation of the proportion of uncompensated genes ($p$)\n\nWe are given a mixture model where each gene belongs to one of two latent classes. Let $C$ be a random variable representing the class of a gene.\n- Class \"compensated\" ($C_{\\text{comp}}$): The expected log2 fold-change is $\\mathbb{E}[Y | C=C_{\\text{comp}}] = 0$. This occurs with probability $P(C=C_{\\text{comp}}) = 1-p$.\n- Class \"no compensation\" ($C_{\\text{no-comp}}$): The expected log2 fold-change is $\\mathbb{E}[Y | C=C_{\\text{no-comp}}] = -1$. This occurs with probability $P(C=C_{\\text{no-comp}}) = p$.\n\nThe observed value of $Y$ for any gene is the sum of its class-conditional expectation and a zero-mean noise term. According to the law of total expectation, the unconditional expectation of $Y$, denoted $\\mathbb{E}[Y]$, is the weighted average of the conditional expectations:\n$$\\mathbb{E}[Y] = \\mathbb{E}[Y | C=C_{\\text{comp}}] \\cdot P(C=C_{\\text{comp}}) + \\mathbb{E}[Y | C=C_{\\text{no-comp}}] \\cdot P(C=C_{\\text{no-comp}})$$\nSubstituting the values derived in part (a) and the given probabilities:\n$$\\mathbb{E}[Y] = (0) \\cdot (1-p) + (-1) \\cdot p = -p$$\nThe problem states that the empirical sample mean, $\\bar{Y} = -0.1$, is to be used as an estimate for the true mixture expectation, $\\mathbb{E}[Y]$. We can therefore write:\n$$\\hat{\\mathbb{E}}[Y] = \\bar{Y} = -0.1$$\nBy equating the theoretical expectation to its empirical estimate, we can solve for the estimate of $p$, denoted $\\hat{p}$:\n$$- \\hat{p} = -0.1$$\n$$\\hat{p} = 0.1$$\nThe problem requires the answer to be rounded to four significant figures. Therefore, the estimate is $\\hat{p} = 0.1000$. The additional information about sample variance ($s^2=0.25$) and noise variance ($\\sigma^2=0.16$) was not required for this calculation as per the problem's explicit instructions, which directed the use of the law of total expectation and the sample mean only.", "answer": "$$\\boxed{0.1000}$$", "id": "2609734"}, {"introduction": "Building on the theoretical expectations derived previously, this practice immerses you in a real-world bioinformatics scenario where you will implement a computational pipeline to test for dosage compensation. This exercise guides you through essential steps like data normalization using autosomal genes as a baseline and statistical testing of expression differences. This provides direct, hands-on experience in the analysis of transcriptomic data to uncover regulatory evolution. [@problem_id:2609729]", "problem": "You are given a computational task grounded in comparative zoology and botany, focusing on the evolution of sex chromosomes and the mechanism of dosage compensation in arthropods, specifically fruit flies (Drosophila). Use the following fundamental bases: (i) ribonucleic acid sequencing (RNA-seq) read counts for a gene are proportional to its transcript abundance multiplied by library size; (ii) X chromosome dosage imbalance in male heterogamety can be offset by regulatory mechanisms that raise male X-linked expression; and (iii) normalization across samples is required to compare expression between sexes, which can be addressed via autosomal baselining to control for global library-size and sex-specific shifts not attributable to dosage compensation.\n\nTask. Given a list of genes each labeled as X-linked or autosomal and associated male and female read counts, compute a per-gene male-to-female expression contrast, normalize this contrast by the autosomal baseline, and test for male X upregulation using a parametric test.\n\nDefinitions and required procedure:\n- For each gene index $i$, let $M_i$ and $F_i$ denote the observed male and female read counts, respectively. To handle zeros and avoid division by zero, use a pseudocount $c = 0.5$ added to both $M_i$ and $F_i$ before ratio computation.\n- Define the per-gene log contrast as $L_i = \\log_2\\left(\\dfrac{M_i + c}{F_i + c}\\right)$.\n- Let $\\mathcal{A}$ be the set of autosomal genes and $\\mathcal{X}$ be the set of X-linked genes. Compute the autosomal baseline $b$ as the median of $\\{L_i: i \\in \\mathcal{A}\\}$.\n- Define the corrected contrast $C_i = L_i - b$ for each gene $i$. This sets the autosomal center near zero under the assumption that autosomal expression is not systematically dosage compensated by sex.\n- Compute the X-linked summary statistic $\\mu_X = \\dfrac{1}{|\\mathcal{X}|} \\sum_{i \\in \\mathcal{X}} C_i$.\n- Perform a one-sample Student’s $t$-test on $\\{C_i: i \\in \\mathcal{X}\\}$ for the null hypothesis $H_0: \\mathbb{E}[C_i] = 0$ versus the one-sided alternative $H_1: \\mathbb{E}[C_i] > 0$. Let the one-sided $p$-value be denoted $p_+$, computed with degrees of freedom $|\\mathcal{X}| - 1$. Use a significance threshold $\\alpha = 0.05$.\n- Report both $\\mu_X$ and $p_+$ and a decision $D$ defined as $D = \\text{True}$ if $p_+ < \\alpha$ and $D = \\text{False}$ otherwise.\n\nAngle units are not applicable. No physical units apply to counts. All reported real-valued outputs must be rounded to exactly $6$ decimal places.\n\nTest suite:\nImplement your program to process the following three test cases. Each test case is a list of genes; for each gene provide its chromosome label and male and female counts as $(\\text{chromosome}, M, F)$ where chromosome is either $\\text{\"X\"}$ or $\\text{\"A\"}$ (for autosome). All numeric values below are counts and must be used exactly as provided.\n\n- Test case $1$ (a typical case with strong male X upregulation):\n  - Autosomes: $\\{(\\text{\"A\"}, 100, 102), (\\text{\"A\"}, 210, 205), (\\text{\"A\"}, 90, 95), (\\text{\"A\"}, 400, 410), (\\text{\"A\"}, 150, 148), (\\text{\"A\"}, 80, 79)\\}$.\n  - X: $\\{(\\text{\"X\"}, 200, 100), (\\text{\"X\"}, 300, 150), (\\text{\"X\"}, 120, 60), (\\text{\"X\"}, 500, 250)\\}$.\n\n- Test case $2$ (a case with no male X upregulation):\n  - Autosomes: $\\{(\\text{\"A\"}, 100, 100), (\\text{\"A\"}, 200, 210), (\\text{\"A\"}, 160, 155), (\\text{\"A\"}, 300, 295), (\\text{\"A\"}, 90, 94)\\}$.\n  - X: $\\{(\\text{\"X\"}, 110, 112), (\\text{\"X\"}, 220, 215), (\\text{\"X\"}, 140, 138)\\}$.\n\n- Test case $3$ (an edge case with sparse counts and zeros, with slight to moderate male X upregulation):\n  - Autosomes: $\\{(\\text{\"A\"}, 0, 0), (\\text{\"A\"}, 5, 5), (\\text{\"A\"}, 1, 2), (\\text{\"A\"}, 0, 3), (\\text{\"A\"}, 10, 8)\\}$.\n  - X: $\\{(\\text{\"X\"}, 3, 1), (\\text{\"X\"}, 0, 0), (\\text{\"X\"}, 4, 2), (\\text{\"X\"}, 1, 0)\\}$.\n\nOutput specification:\n- For each test case, produce a list of three elements $[\\mu_X, p_+, D]$ where $\\mu_X$ and $p_+$ are floats rounded to exactly $6$ decimal places and $D$ is a boolean.\n- Your program should produce a single line of output containing a comma-separated list of these per-test-case lists, enclosed in square brackets, with no spaces. For example, the format is $[[\\mu_X^{(1)},p_+^{(1)},D^{(1)}],[\\mu_X^{(2)},p_+^{(2)},D^{(2)}],[\\mu_X^{(3)},p_+^{(3)},D^{(3)}]]$ where superscripts denote the test case index.\n- No other text should be printed.\n\nAssumptions and constraints:\n- Assume independence across genes for the purpose of the $t$-test.\n- The use of a pseudocount $c = 0.5$ is mandatory and must be applied uniformly to male and female counts prior to computing any ratios.\n- The base for the logarithm must be $2$ to interpret dosage compensation as a doubling when $\\mu_X \\approx 1$.", "solution": "The problem presented is a well-defined computational exercise in bioinformatics, specifically in the domain of differential gene expression analysis. It requires the implementation of a standard statistical pipeline to test for dosage compensation on the X chromosome in a heterogametic system. The problem is scientifically grounded, logically consistent, and provides all necessary information for a unique solution. Therefore, it is valid, and we shall proceed with its resolution.\n\nThe core principle of this analysis is to compare gene expression levels between two conditions, in this case, male and female organisms. Raw read counts from RNA-sequencing ($M_i$ and $F_i$ for gene $i$) are not directly comparable due to variations in sequencing depth (library size) and other systemic biases. To address this, we compute a log-ratio for each gene, which transforms multiplicative effects into additive ones. The use of a logarithm to base $2$ is standard, as it provides an intuitive interpretation: a value of $1$ corresponds to a two-fold change.\n\nThe procedure is as follows:\n\nFirst, for each gene $i$, we are given male read counts $M_i$ and female read counts $F_i$. To mitigate issues with zero counts, which would make ratios undefined or infinite, we add a small pseudocount, $c = 0.5$, to all read counts. This is a common regularization technique. The per-gene male-to-female log-contrast, $L_i$, is then defined as:\n$$L_i = \\log_2\\left(\\frac{M_i + c}{F_i + c}\\right)$$\n\nSecond, we must normalize these contrasts. The problem assumes that, on average, autosomal genes are not subject to sex-specific dosage compensation. Therefore, any systematic deviation from zero in the log-contrasts of autosomal genes is likely due to technical biases (e.g., library size differences) rather than biological regulation of interest. We quantify this systemic bias by calculating the autosomal baseline, $b$, as the median of the log-contrasts for all autosomal genes. The median is a robust estimator, meaning it is not heavily influenced by outlier genes.\n$$b = \\text{median}\\{L_i : i \\in \\mathcal{A}\\}$$\nwhere $\\mathcal{A}$ is the set of indices for autosomal genes.\n\nThird, we correct all log-contrasts by subtracting this baseline. This normalization step centers the distribution of autosomal contrasts around zero, effectively calibrating the expression measurements across the two sexes. The corrected contrast for any gene $i$ is:\n$$C_i = L_i - b$$\nAfter this correction, for an X-linked gene, a value of $C_i \\approx 1$ suggests a two-fold upregulation in males relative to females, which is the expectation for complete dosage compensation in an XY system where the X chromosome is present in one copy in males and two in females.\n\nFourth, to summarize the overall trend for X-linked genes, we compute the mean of their corrected contrasts. This summary statistic, $\\mu_X$, represents the average log-fold change of X-linked genes after normalization.\n$$\\mu_X = \\frac{1}{|\\mathcal{X}|} \\sum_{i \\in \\mathcal{X}} C_i$$\nwhere $\\mathcal{X}$ is the set of indices for X-linked genes and $|\\mathcal{X}|$ is its cardinality.\n\nFinally, to determine if the observed upregulation of X-linked genes in males is statistically significant, we perform a one-sample Student's $t$-test. We test the null hypothesis, $H_0$, that the true mean of corrected contrasts for X-linked genes is zero ($H_0: \\mathbb{E}[C_i] = 0$), against the one-sided alternative hypothesis, $H_1$, that the true mean is greater than zero ($H_1: \\mathbb{E}[C_i] > 0$). The $t$-statistic is calculated as:\n$$t = \\frac{\\mu_X - 0}{s_X / \\sqrt{|\\mathcal{X}|}}$$\nwhere $s_X$ is the sample standard deviation of the corrected contrasts $\\{C_i : i \\in \\mathcal{X}\\}$ calculated with $|\\mathcal{X}| - 1$ degrees of freedom. The resulting $t$-statistic is compared to a $t$-distribution with $df = |\\mathcal{X}| - 1$ degrees of freedom to obtain the one-sided $p$-value, $p_+$.\n\nA decision, $D$, is made based on a pre-defined significance level, $\\alpha = 0.05$. If $p_+ < \\alpha$, we reject the null hypothesis and conclude that there is significant evidence for male X-upregulation ($D = \\text{True}$). Otherwise, we fail to reject the null hypothesis ($D = \\text{False}$).\n\nWe now apply this rigorous procedure to each test case.\n\n**Test Case 1:**\n1.  Autosomal log-contrasts $\\{L_i\\}_{i \\in \\mathcal{A}}$: $[\\log_2(\\frac{100.5}{102.5}), \\log_2(\\frac{210.5}{205.5}), \\dots] \\approx [-0.02846, 0.03450, -0.07725, -0.03541, 0.01931, 0.01809]$.\n2.  Autosomal baseline $b$: $\\text{median}(\\{-0.07725, -0.03541, -0.02846, 0.01809, 0.01931, 0.03450\\}) = \\frac{-0.02846 + 0.01809}{2} \\approx -0.005185$.\n3.  X-linked corrected contrasts $\\{C_i\\}_{i \\in \\mathcal{X}}$: $[\\log_2(\\frac{200.5}{100.5}) - b, \\dots] \\approx [0.998015, 0.999785, 0.996365, 1.000675]$.\n4.  Summary statistic $\\mu_X$: $\\text{mean}(\\{C_i\\}) \\approx 0.998710$.\n5.  $t$-test: $s_X \\approx 0.001946$, $n=4$, $df=3$. $t = \\frac{0.998710}{0.001946 / \\sqrt{4}} \\approx 1026.4$. The resulting $p_+$ is extremely small, effectively $0$.\n6.  Decision: $p_+ < 0.05$, so $D = \\text{True}$.\n7.  Result: $[\\text{0.998710, 0.000000, True}]$.\n\n**Test Case 2:**\n1.  Autosomal log-contrasts $\\{L_i\\}_{i \\in \\mathcal{A}}$: $[\\log_2(\\frac{100.5}{100.5}), \\dots] \\approx [0.0, -0.06995, 0.04543, 0.02417, -0.06109]$.\n2.  Autosomal baseline $b$: $\\text{median}(\\{-0.06995, -0.06109, 0.0, 0.02417, 0.04543\\}) = 0.0$.\n3.  X-linked corrected contrasts $\\{C_i\\}_{i \\in \\mathcal{X}}$ (since $b=0$, $C_i = L_i$): $[\\log_2(\\frac{110.5}{112.5}), \\dots] \\approx [-0.02562, 0.03310, 0.02073]$.\n4.  Summary statistic $\\mu_X$: $\\text{mean}(\\{C_i\\}) \\approx 0.009403$.\n5.  $t$-test: $s_X \\approx 0.030578$, $n=3$, $df=2$. $t = \\frac{0.009403}{0.030578 / \\sqrt{3}} \\approx 0.5327$. The resulting $p_+ \\approx 0.327499$.\n6.  Decision: $p_+ \\ge 0.05$, so $D = \\text{False}$.\n7.  Result: $[\\text{0.009403, 0.327499, False}]$.\n\n**Test Case 3:**\n1.  Autosomal log-contrasts $\\{L_i\\}_{i \\in \\mathcal{A}}$: $[\\log_2(\\frac{0.5}{0.5}), \\dots] \\approx [0.0, 0.0, -0.73697, -2.80735, 0.29887]$.\n2.  Autosomal baseline $b$: $\\text{median}(\\{-2.80735, -0.73697, 0.0, 0.0, 0.29887\\}) = 0.0$.\n3.  X-linked corrected contrasts $\\{C_i\\}_{i \\in \\mathcal{X}}$: $[\\log_2(\\frac{3.5}{1.5}), \\dots] \\approx [1.22239, 0.0, 0.84799, 1.58496]$.\n4.  Summary statistic $\\mu_X$: $\\text{mean}(\\{C_i\\}) \\approx 0.913835$.\n5.  $t$-test: $s_X \\approx 0.692340$, $n=4$, $df=3$. $t = \\frac{0.913835}{0.692340 / \\sqrt{4}} \\approx 2.6399$. The resulting $p_+ \\approx 0.039230$.\n6.  Decision: $p_+ < 0.05$, so $D = \\text{True}$.\n7.  Result: $[\\text{0.913835, 0.039230, True}]$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy import stats\n\ndef solve():\n    \"\"\"\n    Solves the computational biology problem for the given test cases.\n\n    The function processes gene expression data to test for male X chromosome\n    upregulation in Drosophila, following a specified statistical pipeline.\n    \"\"\"\n\n    test_cases = [\n        # Test case 1\n        [\n            (\"A\", 100, 102), (\"A\", 210, 205), (\"A\", 90, 95), (\"A\", 400, 410),\n            (\"A\", 150, 148), (\"A\", 80, 79),\n            (\"X\", 200, 100), (\"X\", 300, 150), (\"X\", 120, 60), (\"X\", 500, 250)\n        ],\n        # Test case 2\n        [\n            (\"A\", 100, 100), (\"A\", 200, 210), (\"A\", 160, 155), (\"A\", 300, 295),\n            (\"A\", 90, 94),\n            (\"X\", 110, 112), (\"X\", 220, 215), (\"X\", 140, 138)\n        ],\n        # Test case 3\n        [\n            (\"A\", 0, 0), (\"A\", 5, 5), (\"A\", 1, 2), (\"A\", 0, 3), (\"A\", 10, 8),\n            (\"X\", 3, 1), (\"X\", 0, 0), (\"X\", 4, 2), (\"X\", 1, 0)\n        ]\n    ]\n\n    results = []\n    \n    # Constants defined in the problem\n    c = 0.5  # Pseudocount\n    alpha = 0.05  # Significance threshold\n\n    for case in test_cases:\n        autosomal_genes = [g for g in case if g[0] == \"A\"]\n        x_linked_genes = [g for g in case if g[0] == \"X\"]\n\n        # Extract male (M) and female (F) counts\n        m_autosomal = np.array([g[1] for g in autosomal_genes])\n        f_autosomal = np.array([g[2] for g in autosomal_genes])\n        \n        m_x_linked = np.array([g[1] for g in x_linked_genes])\n        f_x_linked = np.array([g[2] for g in x_linked_genes])\n        \n        # Step 1: Compute per-gene log contrast (L_i)\n        # Using a small epsilon to avoid log2(0) in case M_i+c or F_i+c is 0,\n        # although with c=0.5 this won't happen for non-negative counts.\n        # This is a stability measure.\n        epsilon = 1e-9\n        L_autosomal = np.log2((m_autosomal + c) / (f_autosomal + c + epsilon))\n\n        # Step 2: Compute autosomal baseline (b)\n        b = np.median(L_autosomal)\n\n        # Step 3: Compute corrected contrast (C_i) for X-linked genes\n        L_x_linked = np.log2((m_x_linked + c) / (f_x_linked + c + epsilon))\n        C_x_linked = L_x_linked - b\n\n        # Step 4: Compute X-linked summary statistic (mu_X)\n        mu_X = np.mean(C_x_linked)\n\n        # Step 5: Perform one-sample Student's t-test\n        n = len(C_x_linked)\n        if n  2:\n            # Cannot perform t-test with less than 2 samples\n            # This case is not in the test suite, but is good practice to handle.\n            p_plus = np.nan\n        else:\n            sample_std = np.std(C_x_linked, ddof=1)\n            # If standard deviation is zero (all C_i are identical)\n            if sample_std == 0:\n                t_stat = np.inf if mu_X > 0 else -np.inf\n            else:\n                t_stat = mu_X / (sample_std / np.sqrt(n))\n            \n            df = n - 1\n            # One-sided p-value for H1: mean > 0\n            p_plus = stats.t.sf(t_stat, df)\n\n        # Step 6: Determine decision (D)\n        D = p_plus  alpha\n\n        results.append([mu_X, p_plus, D])\n\n    # Final print statement in the exact required format.\n    # We construct the string manually to avoid spaces introduced by str(list).\n    formatted_results = []\n    for res in results:\n        mu_str = f\"{res[0]:.6f}\"\n        p_str = f\"{res[1]:.6f}\"\n        d_str = str(res[2])\n        formatted_results.append(f\"[{mu_str},{p_str},{d_str}]\")\n    \n    final_output_string = f\"[{','.join(formatted_results)}]\"\n    print(final_output_string)\n\nsolve()\n```", "id": "2609729"}, {"introduction": "This final practice zooms out from the functional consequences of dosage compensation to the long-term evolutionary dynamics that drive its origin. The degeneration of a non-recombining Y chromosome is the fundamental evolutionary pressure leading to dosage compensation, and this exercise lets you model that process directly. By implementing a population genetics model, you will calculate the expected rate of gene loss over evolutionary time, connecting molecular mechanisms to the grand sweep of genome evolution. [@problem_id:2750911]", "problem": "You are asked to implement a program that computes the expected number of fixed functional gene losses on a nonrecombining Y chromosome over a specified time horizon, under a mechanistic population-genetic model that incorporates purifying selection against gene loss and a dosage compensation factor. The model and task are defined in purely mathematical terms as follows.\n\nBiological and mathematical base:\n- Consider a nonrecombining Y chromosome with an initial number of functional genes $G$. Each functional gene can be pseudogenized by new mutations at a per-gene rate $\\mu_p$ per generation.\n- For a gene with a selection coefficient against loss $s_l \\ge 0$ (so that a loss mutation has a relative fitness decrease $s_l$ when uncompensated), let the effective selection against loss be $s_l^{\\mathrm{eff}} = (1 - d) s_l$, where $d \\in [0,1]$ is a dosage compensation factor. Here $d = 0$ denotes no compensation and $d = 1$ denotes full compensation.\n- Assume a haploid Wright–Fisher diffusion approximation for the Y, with effective population size $N_e$. The fixation probability of a new mutation with genic selection coefficient $s$ arising as a single copy is, for a haploid, given by the classical diffusion solution\n$$\nu(x) \\;=\\; \\frac{1 - e^{-2 N_e s x}}{1 - e^{-2 N_e s}} \\, ,\n$$\nand for a single-copy mutant $x = \\frac{1}{N_e}$, this becomes\n$$\nu(s) \\;=\\; \\frac{1 - e^{-2 s}}{1 - e^{-2 N_e s}} \\, .\n$$\nA pseudogenizing mutation is deleterious when $s_l^{\\mathrm{eff}}  0$, i.e., it has selection coefficient $s = - s_l^{\\mathrm{eff}}  0$. Therefore, its fixation probability is\n$$\nu_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) \\;=\\; \\frac{e^{2 s_l^{\\mathrm{eff}}} - 1}{e^{2 N_e s_l^{\\mathrm{eff}}} - 1} \\quad \\text{for} \\quad s_l^{\\mathrm{eff}}  0 \\, ,\n$$\nand by continuity using L’Hôpital’s rule, in the neutral limit $s_l^{\\mathrm{eff}} \\to 0$, we have\n$$\nu_{\\mathrm{loss}}(N_e, 0) \\;=\\; \\frac{1}{N_e} \\, .\n$$\n- In continuous time, for rare fixations and independence across genes, the hazard of a fixed loss for a remaining functional gene is\n$$\n\\lambda \\;=\\; \\mu_p \\, u_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) \\, .\n$$\nLet $E(t)$ denote the expected number of fixed losses by time $t$. Because only remaining functional genes can be lost, a mass-action argument yields the ordinary differential equation\n$$\n\\frac{dE}{dt} \\;=\\; \\bigl( G - E(t) \\bigr) \\, \\lambda \\, , \\quad E(0) \\;=\\; 0 \\, ,\n$$\nwhose solution is\n$$\nE(T) \\;=\\; G \\left( 1 - e^{ - \\lambda T } \\right) \\;=\\; G \\left( 1 - e^{ - \\mu_p \\, u_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) \\, T } \\right) \\, .\n$$\n\nYour task:\n- Implement a program that, for each test case, computes $E(T)$ using the above equations with numerically stable evaluation. Use $s_l^{\\mathrm{eff}} = (1 - d) s_l$. For $s_l^{\\mathrm{eff}} = 0$, use the neutral fixation probability $u_{\\mathrm{loss}} = 1/N_e$. For $s_l^{\\mathrm{eff}}  0$, use\n$$\nu_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) \\;=\\; \\frac{e^{2 s_l^{\\mathrm{eff}}} - 1}{e^{2 N_e s_l^{\\mathrm{eff}}} - 1} \\, .\n$$\n- Ensure numerical stability by evaluating differences of exponentials with functions that avoid catastrophic cancellation when arguments are small, and by guarding against overflow when arguments are very large. You must handle the boundary conditions $G = 0$, $\\mu_p = 0$, or $T = 0$, which imply $E(T) = 0$.\n\nInput is fixed via the following test suite. For each tuple, the parameters are ordered as $(G, N_e, \\mu_p, s_l, d, T)$:\n- Test $1$: $(100, 1000, 10^{-6}, 10^{-3}, 0, 5 \\times 10^{6})$\n- Test $2$: $(50, 10000, 10^{-5}, 10^{-2}, 1, 5 \\times 10^{8})$\n- Test $3$: $(200, 100, 10^{-5}, 5 \\times 10^{-2}, 0, 2 \\times 10^{9})$\n- Test $4$: $(80, 5000, 0, 2 \\times 10^{-2}, 0.5, 10^{7})$\n- Test $5$: $(10, 1000, 10^{-3}, 5 \\times 10^{-3}, 1, 10^{8})$\n- Test $6$: $(0, 1000, 10^{-6}, 10^{-2}, 0.3, 10^{7})$\n\nOutput specification:\n- Your program should compute $E(T)$ for each test case as a floating-point number and output a single line containing a comma-separated list enclosed in square brackets, in the same order as the test cases. Each value must be rounded to exactly six decimal places. For example, an output should look like\n$[x_1,x_2,x_3,x_4,x_5,x_6]$\nwith each $x_i$ a decimal with exactly six digits after the decimal point.", "solution": "The problem statement is subjected to validation and is found to be scientifically grounded, well-posed, and free from contradiction or ambiguity. It presents a standard model from population genetics concerning gene loss on a non-recombining chromosome, commonly known as Y-chromosome degeneration. The provided equations are classical results from diffusion theory and mass-action kinetics. Therefore, a solution can be derived.\n\nThe task is to compute the expected number of fixed gene losses, $E(T)$, over a time period $T$. The calculation proceeds through a sequence of logical steps derived from the provided model.\n\nFirst, we determine the effective selection coefficient against a gene loss event, $s_l^{\\mathrm{eff}}$. This coefficient models the net selective disadvantage of losing a gene, accounting for a potential dosage compensation mechanism. It is defined as:\n$$\ns_l^{\\mathrm{eff}} = (1 - d) s_l\n$$\nwhere $s_l \\ge 0$ is the baseline selection coefficient against loss and $d \\in [0,1]$ is the dosage compensation factor. If $d=1$ (full compensation) or $s_l=0$ (the gene loss is intrinsically neutral), then $s_l^{\\mathrm{eff}}=0$, and the gene loss mutation is selectively neutral. Otherwise, for $d  1$ and $s_l  0$, the mutation is deleterious, with $s_l^{\\mathrm{eff}}  0$.\n\nSecond, we calculate the probability of fixation for a single new gene-loss mutation, $u_{\\mathrm{loss}}$. This probability depends on the effective selection $s_l^{\\mathrm{eff}}$ and the effective population size $N_e$.\n\nCase 1: Neutral G-loss ($s_l^{\\mathrm{eff}} = 0$).\nIn this case, the fixation probability is simply the inverse of the population size, as is standard for any neutral mutation in a haploid population:\n$$\nu_{\\mathrm{loss}}(N_e, 0) = \\frac{1}{N_e}\n$$\n\nCase 2: Deleterious Gene Loss ($s_l^{\\mathrm{eff}}  0$).\nFor a deleterious mutation with an effective selective disadvantage of $s_l^{\\mathrm{eff}}$, the fixation probability is given by the classical diffusion formula:\n$$\nu_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) = \\frac{e^{2 s_l^{\\mathrm{eff}}} - 1}{e^{2 N_e s_l^{\\mathrm{eff}}} - 1}\n$$\nFor numerical stability, especially when the arguments of the exponentials are small, this expression must be evaluated carefully. Direct computation of $e^x - 1$ for small $x$ leads to catastrophic cancellation. A standard, numerically stable function, often denoted `expm1(x)`, computes $e^x - 1$ accurately for all $x$. Using this function, the formula becomes:\n$$\nu_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}}) = \\frac{\\text{expm1}(2 s_l^{\\mathrm{eff}})}{\\text{expm1}(2 N_e s_l^{\\mathrm{eff}})}\n$$\nThis formulation correctly transitions to the neutral limit. Using L'Hôpital's rule, as $s_l^{\\mathrm{eff}} \\to 0$, we have $\\text{expm1}(2 s_l^{\\mathrm{eff}}) \\approx 2 s_l^{\\mathrm{eff}}$ and $\\text{expm1}(2 N_e s_l^{\\mathrm{eff}}) \\approx 2 N_e s_l^{\\mathrm{eff}}$, so their ratio approaches $1/N_e$. Furthermore, if the argument $2 N_e s_l^{\\mathrm{eff}}$ is very large, `expm1` will evaluate to infinity, correctly driving $u_{\\mathrm{loss}}$ towards zero, which is the expected behavior under strong purifying selection.\n\nThird, we compute the hazard rate, $\\lambda$, which represents the rate of fixed gene loss per functional gene remaining on the chromosome. Assuming fixations are rare events, this rate is the product of the rate at which new loss-of-function mutations arise ($\\mu_p$) and their probability of fixation ($u_{\\mathrm{loss}}$):\n$$\n\\lambda = \\mu_p \\, u_{\\mathrm{loss}}(N_e, s_l^{\\mathrm{eff}})\n$$\n\nFourth, we calculate the expected number of losses $E(T)$ after time $T$. The rate of loss is proportional to the number of genes available to be lost, which is $G - E(t)$. This leads to the differential equation $\\frac{dE}{dt} = (G - E(t))\\lambda$ with initial condition $E(0) = 0$. The solution is an exponential decay model for the remaining functional genes:\n$$\nE(T) = G \\left( 1 - e^{ - \\lambda T } \\right)\n$$\nThis expression describes the accumulation of losses, approaching a maximum of $G$ as $T \\to \\infty$. Similar to the calculation for $u_{\\mathrm{loss}}$, numerical stability is a concern if the exponent $-\\lambda T$ is close to zero. The expression $1 - e^{-x}$ for small $x$ can be computed more accurately as $-(\\text{expm1}(-x))$. Hence, the stable evaluation is:\n$$\nE(T) = -G \\cdot \\text{expm1}(-\\lambda T)\n$$\nFinally, we must consider the trivial boundary conditions. If the initial number of genes $G=0$, the mutation rate $\\mu_p=0$, or the time horizon $T=0$, no losses can accumulate. In all these cases, the formula correctly yields $E(T)=0$. If $\\mu_p=0$, then $\\lambda=0$, and $E(T)=G(1-e^0)=0$. If $T=0$, $E(T)=G(1-e^0)=0$. If $G=0$, $E(T)=0$.\n\nThe implementation will follow these four steps for each test case, employing numerically robust functions to ensure accuracy across the full range of parameters.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the expected number of fixed functional gene losses on a \n    nonrecombining Y chromosome for a set of test cases.\n    \"\"\"\n    # Test cases: tuples of (G, Ne, mu_p, s_l, d, T)\n    test_cases = [\n        # G, Ne, mu_p, s_l, d, T\n        (100, 1000, 1e-6, 1e-3, 0, 5e6),\n        (50, 10000, 1e-5, 1e-2, 1, 5e8),\n        (200, 100, 1e-5, 5e-2, 0, 2e9),\n        (80, 5000, 0, 2e-2, 0.5, 1e7),\n        (10, 1000, 1e-3, 5e-3, 1, 1e8),\n        (0, 1000, 1e-6, 1e-2, 0.3, 1e7)\n    ]\n\n    results = []\n    for case in test_cases:\n        G, Ne, mu_p, s_l, d, T = case\n\n        # Trivial cases where no losses can accumulate\n        if G == 0 or mu_p == 0 or T == 0:\n            E_T = 0.0\n            results.append(E_T)\n            continue\n\n        # Step 1: Calculate effective selection coefficient\n        s_eff = (1 - d) * s_l\n\n        # Step 2: Calculate fixation probability u_loss\n        if s_eff = 0:  # Neutral or advantageous gene loss (s_l >= 0, so unlikely)\n            # Handle the neutral case s_eff = 0\n            u_loss = 1.0 / Ne\n        else: # Deleterious gene loss (s_eff > 0)\n            # Use np.expm1 for numerical stability, which computes exp(x) - 1.\n            # This avoids catastrophic cancellation when the argument is small\n            # and gracefully handles overflow by returning inf.\n            # u_loss = (exp(2*s_eff) - 1) / (exp(2*Ne*s_eff) - 1)\n            numerator = np.expm1(2 * s_eff)\n            denominator = np.expm1(2 * Ne * s_eff)\n            \n            # If denominator is zero (can happen if 2*Ne*s_eff is extremely small),\n            # it might lead to division by zero. However, in that regime,\n            # the fraction is well-approximated by the L'Hopital rule limit 1/Ne.\n            # if s_eff is small, we should be in neutral case.\n            # Here, since s_eff > 0, denominator will be > 0.\n            # If denominator is inf (overflow), u_loss becomes 0, which is correct.\n            if denominator == 0:\n                # This case is practically unreachable given s_eff > 0, but as a safeguard:\n                u_loss = 1.0 / Ne\n            else:\n                u_loss = numerator / denominator\n\n        # Step 3: Calculate the hazard rate lambda\n        lambda_rate = mu_p * u_loss\n\n        # Step 4: Calculate the expected number of losses E(T)\n        # Use E(T) = G * (1 - exp(-lambda*T))\n        # For numerical stability, 1 - exp(-x) is better computed as -expm1(-x)\n        exponent_term = -lambda_rate * T\n        E_T = G * (-np.expm1(exponent_term))\n        \n        results.append(E_T)\n\n    # Format output to exactly six decimal places per value.\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2750911"}]}