{"hands_on_practices": [{"introduction": "The concept of reciprocal monophyly is a theoretical cornerstone for diagnosing species under the Phylogenetic Species Concept. This exercise grounds this concept in quantitative prediction by using the Multi-Species Coalescent model to connect the probability of observing reciprocal monophyly to fundamental evolutionary parameters like divergence time, $T$, and effective population size, $N_e$. By working through this calculation, you will develop an intuition for how lineage sorting processes at the population level produce the species-level patterns we seek to identify [@problem_id:2611208].", "id": "2611208", "problem": "In the phylogenetic species concept, reciprocal monophyly of gene lineages is often used to diagnose species boundaries. Consider two candidate species, A and B, that split $T$ generations ago and have experienced no gene flow since divergence. From each species, you sample $n_{A} = 2$ and $n_{B} = 2$ gene copies at a single neutral autosomal locus in diploid organisms. Assume constant descendant effective population sizes $N_{e,A} = N_{e,B} = N_{e}$ and a constant ancestral effective population size larger than zero. Let the time window of interest be the post-split interval $[0, T]$ in each descendant population. Define a deep coalescence as any failure of sampled lineages from a given species to coalesce within that species during $[0, T]$ (thus carrying more than one lineage into the ancestral population at time $T$). Use the standard neutral coalescent for diploids, in which the pairwise coalescence time in a constant-size population has an exponential distribution with mean $2 N_{e}$ generations.\n\nGiven $T = 4.0 \\times 10^{5}$ generations and $N_{e} = 1.0 \\times 10^{5}$ for both descendant species, do the following:\n\n1. Compute the expected number of deep coalescences across the split at time $T$ for this sample configuration.\n2. Using your result, compute the probability that the two sampled clades (one per species) are reciprocally monophyletic within the time window $[0, T]$ (that is, both within-species most recent common ancestors form before time $T$).\n\nExpress the final probability as a decimal rounded to four significant figures. No units are required for the final probability.", "solution": "The problem statement is subjected to validation before any solution is attempted.\n\n**Step 1: Extract Givens**\n- Species: Two candidate species, A and B.\n- Divergence Time: $T$ generations ago.\n- Gene Flow: None since divergence.\n- Sample Size: $n_{A} = 2$ and $n_{B} = 2$ gene copies.\n- Locus: Single neutral autosomal locus in diploid organisms.\n- Effective Population Sizes: Constant descendant sizes $N_{e,A} = N_{e,B} = N_{e}$. Ancestral size is constant and positive.\n- Time Window: Post-split interval $[0, T]$.\n- Definition of Deep Coalescence: Failure of sampled lineages from a species to coalesce within the time window $[0, T]$.\n- Coalescent Model: Standard neutral coalescent for diploids.\n- Pairwise Coalescence Time Distribution: Exponential distribution with mean $2 N_{e}$ generations.\n- Numerical Values: $T = 4.0 \\times 10^{5}$ generations, $N_{e} = 1.0 \\times 10^{5}$.\n- Tasks:\n    1. Compute the expected number of deep coalescences across the split at time $T$.\n    2. Compute the probability of reciprocal monophyly within the time window $[0, T]$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded, relying on the standard neutral coalescent theory, which is a fundamental model in population genetics. All concepts, such as effective population size, deep coalescence, and reciprocal monophyly, are standard and well-defined within the field. The problem is well-posed; it provides all necessary parameters ($T$, $N_{e}$, $n_{A}$, $n_{B}$) and clear definitions required to derive a unique solution. The language is objective and technical. The given values are physically plausible within a theoretical context. The problem is a standard application of coalescent theory and is neither trivial nor self-contradictory.\n\n**Step 3: Verdict and Action**\nThe problem is valid. I will proceed with the solution.\n\nThe solution is developed in two parts as requested by the problem statement.\n\n**Part 1: Expected Number of Deep Coalescences**\n\nWe are considering a single neutral locus in a diploid population. According to the standard neutral coalescent model, the time to coalescence for a pair of lineages ($k=2$) follows an exponential distribution. The rate of coalescence for $k$ lineages is $\\lambda_k = \\frac{\\binom{k}{2}}{2N_e}$. For $k=2$ lineages, this rate is $\\lambda_2 = \\frac{\\binom{2}{2}}{2N_e} = \\frac{1}{2N_e}$. The time to coalescence, $t_{coal}$, is therefore a random variable with distribution $t_{coal} \\sim \\text{Exp}(\\frac{1}{2N_e})$.\n\nA \"deep coalescence\" for a given species is defined as the event that the sampled lineages fail to coalesce within the time interval $[0, T]$, which means the coalescence time $t_{coal}$ is greater than $T$.\n\nConsider species A, from which $n_{A}=2$ lineages are sampled. The population size is $N_e$. The probability of a deep coalescence in species A, denoted $P(D_{A})$, is the probability that the two lineages do not coalesce by time $T$:\n$$ P(D_{A}) = P(t_{coal, A} > T) $$\nFor an exponentially distributed random variable with rate $\\lambda$, the survival function is $P(X > x) = \\exp(-\\lambda x)$. Here, $\\lambda = \\frac{1}{2N_e}$ and $x = T$.\n$$ P(D_{A}) = \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nLet $D_A$ be an indicator random variable that is $1$ if a deep coalescence occurs in species A and $0$ otherwise. The expected value of this indicator variable is simply the probability of the event:\n$$ E[D_A] = 1 \\cdot P(D_A=1) + 0 \\cdot P(D_A=0) = P(D_A=1) = \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nThe situation for species B is identical, with $n_B=2$ and population size $N_e$. Therefore, the expected number of deep coalescences for species B is:\n$$ E[D_B] = \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nThe total number of deep coalescences is the sum of the deep coalescences in each species, $D_{total} = D_A + D_B$. By the linearity of expectation, the expected total number of deep coalescences is:\n$$ E[D_{total}] = E[D_A + D_B] = E[D_A] + E[D_B] = 2 \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nThis completes the first part of the problem.\n\n**Part 2: Probability of Reciprocal Monophyly**\n\nReciprocal monophyly within the time window $[0, T]$ is the event where the lineages within species A coalesce before time $T$, AND the lineages within species B coalesce before time $T$. This is equivalent to the event of having zero deep coalescences.\n\nLet $M_A$ be the event that the lineages in species A are monophyletic within $[0, T]$. This occurs if their coalescence time $t_{coal, A}$ is less than or equal to $T$. This is the complement of a deep coalescence event.\n$$ P(M_A) = P(t_{coal, A} \\le T) = 1 - P(t_{coal, A} > T) = 1 - \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nSimilarly, for species B, the probability of monophyly within $[0, T]$ is:\n$$ P(M_B) = P(t_{coal, B} \\le T) = 1 - \\exp\\left(-\\frac{T}{2N_e}\\right) $$\nThe problem states there has been no gene flow since divergence. This means the coalescent processes in the two descendant populations are independent events. The probability of reciprocal monophyly, $P(RM)$, is the probability that both events $M_A$ and $M_B$ occur.\n$$ P(RM) = P(M_A \\text{ and } M_B) = P(M_A) \\times P(M_B) $$\n$$ P(RM) = \\left(1 - \\exp\\left(-\\frac{T}{2N_e}\\right)\\right) \\times \\left(1 - \\exp\\left(-\\frac{T}{2N_e}\\right)\\right) = \\left(1 - \\exp\\left(-\\frac{T}{2N_e}\\right)\\right)^2 $$\nNow we substitute the given numerical values: $T = 4.0 \\times 10^5$ and $N_e = 1.0 \\times 10^5$. The time is measured in coalescent units, which is generations divided by $2N_e$.\n$$ \\frac{T}{2N_e} = \\frac{4.0 \\times 10^5}{2 \\times (1.0 \\times 10^5)} = \\frac{4.0 \\times 10^5}{2.0 \\times 10^5} = 2 $$\nThe dimensionless time is $2$. We substitute this into our expression for the probability of reciprocal monophyly.\n$$ P(RM) = \\left(1 - \\exp(-2)\\right)^2 $$\nWe compute the numerical value:\n$$ \\exp(-2) \\approx 0.13533528... $$\n$$ 1 - \\exp(-2) \\approx 1 - 0.13533528 = 0.86466471... $$\n$$ P(RM) \\approx (0.86466471...)^2 \\approx 0.747643... $$\nRounding to four significant figures, the final probability is $0.7476$.", "answer": "$$\\boxed{0.7476}$$"}, {"introduction": "While perfect reciprocal monophyly is a clear theoretical benchmark, empirical data often present a more complex picture due to incomplete lineage sorting. The genealogical sorting index, $gsi$, offers a powerful way to quantify the degree of genealogical exclusivity on a per-locus basis. This practice challenges you to first derive the formula for the $gsi$ from its defining principles, and then apply it to a hypothetical multilocus dataset to calculate an average measure of support for a candidate species' lineage integrity [@problem_id:2611143].", "id": "2611143", "problem": "A research team is evaluating the Phylogenetic Species Concept (PSC) for a putative species cluster using multilocus data under the Multi-Species Coalescent (MSC). The focal candidate cluster, denoted $X$, consists of $n=5$ sampled individuals embedded in a broader sample of $N=20$ individuals on each rooted gene tree. The species tree is consistent across loci and has branch lengths in coalescent units: the stem branch subtending $X$ from its sister lineage $Y$ is $t_{XY}=1.1$, and the ancestral branch from the $X\\!+\\!Y$ ancestor to the next outgroup $Z$ is $t_{(XY)Z}=0.3$. These values are provided as biological context for incomplete lineage sorting expectations but are not to be directly substituted into any calculation.\n\nYou are to quantify the degree of genealogical exclusivity of $X$ on each rooted gene tree using the Genealogical Sorting Index (gsi). For a given gene tree, let $s$ denote the number of tips in the smallest clade that contains all $n$ members of $X$ (the minimum enclosing clade size). The gsi for $X$ must satisfy the following conceptual constraints derived from core definitions of monophyly and exclusivity:\n- If $X$ is strictly monophyletic on a gene tree, then $s=n$ and the index must attain its maximum value.\n- If $X$ is completely nonexclusive such that the entire tree is required to enclose all members, then $s=N$ and the index must attain its minimum value.\n- The index should vary linearly with exclusivity as $s$ ranges between $n$ and $N$ so that equal increments in loss of exclusivity produce equal decrements in the index.\n\nUsing only these constraints, first derive an explicit expression for the gsi as a function of $s$, $n$, and $N$.\n\nAcross $5$ independent gene trees (loci), the observed minimum enclosing clade sizes for $X$ are:\n- Locus $1$: $s_{1}=5$\n- Locus $2$: $s_{2}=6$\n- Locus $3$: $s_{3}=7$\n- Locus $4$: $s_{4}=20$\n- Locus $5$: $s_{5}=5$\n\nCompute the across-locus mean gsi for $X$ by averaging the per-locus gsi values you derive. Then, briefly interpret whether the magnitude you obtain is consistent with PSC recognition of $X$ as a distinct lineage given the provided coalescent branch lengths, invoking the expectations of the Multi-Species Coalescent.\n\nProvide only the numerical value of the across-locus mean gsi as your final answer. Express the final value as a unitless number and round your answer to $4$ significant figures.", "solution": "The problem statement has been evaluated and is determined to be valid. It is scientifically grounded in the principles of phylogenetic and population genetic theory, specifically the Multi-Species Coalescent model and the Genealogical Sorting Index ($gsi$). The problem is well-posed, with sufficient constraints to derive the required function and complete data for the subsequent calculation. The language is objective and precise. Therefore, I will proceed with the solution.\n\nThe primary task is to derive an expression for the Genealogical Sorting Index, $gsi$, as a function of the minimum enclosing clade size $s$, the number of individuals in the focal group $n$, and the total number of individuals in the sample $N$. The problem specifies three constraints:\n1. The index must be at a maximum value when the focal group $X$ is strictly monophyletic, which corresponds to $s=n$.\n2. The index must be at a minimum value when the group is completely nonexclusive, meaning the smallest enclosing clade is the entire tree, corresponding to $s=N$.\n3. The index must vary linearly as $s$ ranges from $n$ to $N$.\n\nA linear relationship between $gsi$ and $s$ can be expressed as $gsi(s) = as + b$, where $a$ and $b$ are constants. By convention, indices of this nature are normalized to the interval $[0, 1]$. We will set the maximum value for perfect exclusivity to $1$ and the minimum value for complete lack of exclusivity to $0$.\n\nThis establishes a system of two linear equations based on the boundary conditions:\n1. For $s=n$ (monophyly): $gsi(n) = an + b = 1$\n2. For $s=N$ (complete non-exclusivity): $gsi(N) = aN + b = 0$\n\nWe can solve this system for the constants $a$ and $b$. From the second equation, we find $b = -aN$. Substituting this expression for $b$ into the first equation yields:\n$an - aN = 1$\n$a(n - N) = 1$\n$a = \\frac{1}{n-N}$\n\nNow, we solve for $b$:\n$b = -aN = -N \\left( \\frac{1}{n-N} \\right) = \\frac{-N}{n-N} = \\frac{N}{N-n}$\n\nSubstituting the expressions for $a$ and $b$ back into the linear function $gsi(s) = as + b$, we obtain the general formula for the index:\n$gsi(s) = \\left( \\frac{1}{n-N} \\right) s + \\frac{N}{N-n} = \\frac{s - N}{n-N}$\nThis is more conventionally written as:\n$$gsi(s, n, N) = \\frac{N-s}{N-n}$$\nThis derived expression correctly satisfies all three initial constraints.\n\nNext, we apply this formula to the provided data. The parameters are $n=5$ and $N=20$. The specific formula for this study is:\n$$gsi(s) = \\frac{20-s}{20-5} = \\frac{20-s}{15}$$\n\nWe now compute the $gsi$ value for each of the $5$ loci using their observed minimum enclosing clade sizes ($s_i$):\n- Locus $1$ ($s_1=5$): $gsi_1 = \\frac{20-5}{15} = \\frac{15}{15} = 1$\n- Locus $2$ ($s_2=6$): $gsi_2 = \\frac{20-6}{15} = \\frac{14}{15}$\n- Locus $3$ ($s_3=7$): $gsi_3 = \\frac{20-7}{15} = \\frac{13}{15}$\n- Locus $4$ ($s_4=20$): $gsi_4 = \\frac{20-20}{15} = \\frac{0}{15} = 0$\n- Locus $5$ ($s_5=5$): $gsi_5 = \\frac{20-5}{15} = \\frac{15}{15} = 1$\n\nThe across-locus mean $gsi$, denoted $\\overline{gsi}$, is the arithmetic average of these individual values:\n$$\\overline{gsi} = \\frac{1}{5} \\sum_{i=1}^{5} gsi_i = \\frac{1}{5} \\left( 1 + \\frac{14}{15} + \\frac{13}{15} + 0 + 1 \\right)$$\nTo compute this, we convert all terms to a common denominator of $15$:\n$$\\overline{gsi} = \\frac{1}{5} \\left( \\frac{15}{15} + \\frac{14}{15} + \\frac{13}{15} + \\frac{0}{15} + \\frac{15}{15} \\right) = \\frac{1}{5} \\left( \\frac{15+14+13+0+15}{15} \\right)$$\n$$\\overline{gsi} = \\frac{1}{5} \\left( \\frac{57}{15} \\right) = \\frac{57}{75}$$\nDividing both numerator and denominator by their greatest common divisor, $3$, we simplify the fraction:\n$$\\overline{gsi} = \\frac{19}{25} = 0.76$$\n\nFinally, we must interpret this result. A mean $gsi$ of $0.76$ indicates a strong, but not absolute, signal of genealogical exclusivity for the candidate species $X$. The Phylogenetic Species Concept (PSC) emphasizes diagnosable exclusivity. The observed pattern of two loci showing perfect monophyly ($gsi=1$), two showing near-monophyly, and one showing complete non-exclusivity ($gsi=0$) is informative.\nUnder the Multi-Species Coalescent (MSC) model, the probability of obtaining a monophyletic gene tree for a species is a function of the length of its stem branch in coalescent units. Incomplete lineage sorting (ILS) is expected to prevent monophyly on some proportion of gene trees, and this proportion decreases as the stem branch length increases. The probability for two lineages to fail to coalesce in a branch of length $t$ (in coalescent units) is $\\exp(-t)$. For the given stem branch length $t_{XY}=1.1$, the probability of ILS between groups $X$ and $Y$ is $\\exp(-1.1) \\approx 0.33$. This suggests that roughly one-third of gene trees are expected to show non-monophyly. Our empirical result of observing non-monophyly in $3$ out of $5$ loci (with varying degrees) is consistent with this theoretical expectation. The complete failure of sorting at Locus $4$ ($s=20$, $gsi=0$) indicates deep ILS, where lineages from $X$ fail to coalesce even on the ancestral branch of length $t_{(XY)Z}=0.3$. The probability of such deep coalescence is $\\exp(-(t_{XY}+t_{(XY)Z})) = \\exp(-1.4) \\approx 0.25$. Observing one such event in five trials is not improbable.\nIn summary, the high mean $gsi$ of $0.76$, along with the specific pattern of sorting across loci, is fully consistent with the predictions of the MSC for a recently diverged lineage with a stem branch length of $t_{XY}=1.1$. This provides strong quantitative support for recognizing $X$ as a distinct species under the PSC.\n\nThe final numerical answer required is the across-locus mean $gsi$, rounded to $4$ significant figures.\n$\\overline{gsi} = 0.7600$.", "answer": "$$\n\\boxed{0.7600}\n$$"}, {"introduction": "Ultimately, modern species delimitation relies on robust statistical analysis of large genomic datasets. This hands-on programming exercise guides you through a complete and practical workflow using genome-wide allele frequency data, moving from raw allele counts to a statistically-supported conclusion. You will implement the calculation of the fixation index, $F_{ST}$, a classic measure of population differentiation, and then use non-parametric bootstrapping to generate confidence intervals, providing a rigorous framework for testing species hypotheses [@problem_id:2611128].", "id": "2611128", "problem": "You are given allele count data for two populations across multiple independent, biallelic loci. Your task is to write a program that, for each dataset, computes a genome-wide fixation index (denoted $F_{ST}$), derives a bootstrap confidence interval for $F_{ST}$, and then makes a binary decision about whether the two populations have sufficient genetic differentiation to support recognition as distinct species under operational interpretations of the Biological Species Concept (BSC) and the Phylogenetic Species Concept (PSC). Use only information contained in the allele counts.\n\nFundamental base and modeling assumptions:\n- At each locus, in each population, assume a randomly mating diploid population in Hardy–Weinberg proportions at the time of sampling, and that alleles are sampled independently across loci. Let $p$ denote the reference allele frequency at a locus, and let the expected heterozygosity (gene diversity) be defined as $H = 2 p (1 - p)$, the probability that two gene copies drawn at random from the same population are of different allelic state.\n- For two populations, define the within-population component of diversity at a locus as $H_S$, computed as a sample-size-weighted average of within-population gene diversities, and the total (pooled) diversity at that locus as $H_T$, computed from the pooled allele frequency across the two populations. The among-population component of diversity is $H_T - H_S$.\n- The genome-wide fixation index $F_{ST}$ is defined as the proportion of total gene diversity attributable to differentiation among populations, aggregated across loci. Aggregate across loci by summing the between-population and total components over loci and then taking their ratio. Loci with $H_T = 0$ contribute neither to the numerator nor denominator. If, during bootstrapping, a replicate has a total denominator of $0$ (that is, $H_T = 0$ for all resampled loci), define its $F_{ST}$ value to be $0$ by convention.\n\nBootstrapping:\n- Implement a nonparametric bootstrap over loci with $B$ resamples. Each bootstrap replicate resamples $L$ loci with replacement from the $L$ observed loci, recomputes the aggregated $F_{ST}$ as above, and stores the value.\n- Use the percentile method to compute a two-sided confidence interval at confidence level $0.95$, that is, the interval between the empirical quantiles at $0.025$ and $0.975$ of the bootstrap distribution.\n\nSpecies-support decision rule:\n- Given a species-differentiation threshold $\\tau$ (expressed as a decimal, without a percent sign), set the decision to true if the lower bound of the $0.95$ bootstrap confidence interval exceeds $\\tau$, and false otherwise.\n\nNumerical details and constraints:\n- Use $B = 5000$ bootstrap replicates and set the pseudorandom number generator seed to $1729$ for reproducibility.\n- Use $\\tau = 0.25$ as the species-differentiation threshold.\n- All reported $F_{ST}$ and confidence bound values must be printed as decimal fractions rounded to exactly $6$ digits after the decimal point.\n\nInput specification for each dataset:\n- For population $i \\in \\{1,2\\}$ and locus $\\ell \\in \\{1,\\dots,L\\}$, you are given ordered pairs of nonnegative integers $(A_{i\\ell}, a_{i\\ell})$ representing the counts of the reference allele and the alternative allele, respectively, among sampled gene copies at locus $\\ell$ in population $i$. Let $n_{i\\ell} = A_{i\\ell} + a_{i\\ell}$ denote the total number of gene copies observed in population $i$ at locus $\\ell$, and assume $n_{i\\ell} \\ge 1$.\n\nComputation at a single locus $\\ell$:\n- Compute $p_{1\\ell} = A_{1\\ell} / n_{1\\ell}$ and $p_{2\\ell} = A_{2\\ell} / n_{2\\ell}$.\n- Compute $H_{1\\ell} = 2 p_{1\\ell} (1 - p_{1\\ell})$ and $H_{2\\ell} = 2 p_{2\\ell} (1 - p_{2\\ell})$.\n- Let $w_{1\\ell} = n_{1\\ell}/(n_{1\\ell} + n_{2\\ell})$ and $w_{2\\ell} = 1 - w_{1\\ell}$.\n- Compute $H_{S\\ell} = w_{1\\ell} H_{1\\ell} + w_{2\\ell} H_{2\\ell}$.\n- Compute the pooled allele frequency $p_{T\\ell} = (A_{1\\ell} + A_{2\\ell})/(n_{1\\ell} + n_{2\\ell})$ and $H_{T\\ell} = 2 p_{T\\ell} (1 - p_{T\\ell})$.\n\nGenome-wide aggregation:\n- Let $\\mathcal{I} = \\{\\ell : H_{T\\ell} > 0\\}$ be the set of informative loci. Compute\n$$\n\\widehat{F}_{ST} \\;=\\; \\frac{\\sum_{\\ell \\in \\mathcal{I}} \\left( H_{T\\ell} - H_{S\\ell} \\right)}{\\sum_{\\ell \\in \\mathcal{I}} H_{T\\ell}}.\n$$\nIf $\\mathcal{I}$ is empty, define $\\widehat{F}_{ST} = 0$.\n\nTest suite:\nProvide results for the following four datasets. Each dataset is a list of loci, each locus given as two ordered pairs $(A,a)$ for population $1$ and population $2$:\n\n- Dataset $1$ (moderate divergence, $6$ loci):\n  - Locus $1$: Pop $1$ $(30,10)$, Pop $2$ $(10,30)$.\n  - Locus $2$: Pop $1$ $(18,22)$, Pop $2$ $(12,28)$.\n  - Locus $3$: Pop $1$ $(40,0)$, Pop $2$ $(38,2)$.\n  - Locus $4$: Pop $1$ $(25,15)$, Pop $2$ $(15,25)$.\n  - Locus $5$: Pop $1$ $(35,5)$, Pop $2$ $(20,20)$.\n  - Locus $6$: Pop $1$ $(28,12)$, Pop $2$ $(12,28)$.\n- Dataset $2$ (includes monomorphic edge cases, $5$ loci):\n  - Locus $1$: Pop $1$ $(40,0)$, Pop $2$ $(0,40)$.\n  - Locus $2$: Pop $1$ $(40,0)$, Pop $2$ $(40,0)$.\n  - Locus $3$: Pop $1$ $(20,20)$, Pop $2$ $(10,30)$.\n  - Locus $4$: Pop $1$ $(5,35)$, Pop $2$ $(35,5)$.\n  - Locus $5$: Pop $1$ $(18,22)$, Pop $2$ $(18,22)$.\n- Dataset $3$ (near identity across populations, $5$ loci):\n  - Locus $1$: Pop $1$ $(24,16)$, Pop $2$ $(24,16)$.\n  - Locus $2$: Pop $1$ $(30,10)$, Pop $2$ $(30,10)$.\n  - Locus $3$: Pop $1$ $(10,30)$, Pop $2$ $(10,30)$.\n  - Locus $4$: Pop $1$ $(35,5)$, Pop $2$ $(35,5)$.\n  - Locus $5$: Pop $1$ $(20,20)$, Pop $2$ $(20,20)$.\n- Dataset $4$ (high divergence, small samples, $6$ loci; here each population has $20$ gene copies per locus):\n  - Locus $1$: Pop $1$ $(20,0)$, Pop $2$ $(0,20)$.\n  - Locus $2$: Pop $1$ $(18,2)$, Pop $2$ $(1,19)$.\n  - Locus $3$: Pop $1$ $(20,0)$, Pop $2$ $(2,18)$.\n  - Locus $4$: Pop $1$ $(17,3)$, Pop $2$ $(0,20)$.\n  - Locus $5$: Pop $1$ $(19,1)$, Pop $2$ $(0,20)$.\n  - Locus $6$: Pop $1$ $(16,4)$, Pop $2$ $(0,20)$.\n\nFinal output format:\n- Your program should produce a single line of output containing a Python-style list of results, one per dataset, in the same order as above. Each result must itself be a list of four elements: $[\\widehat{F}_{ST}, \\text{CI\\_low}, \\text{CI\\_high}, \\text{decision}]$, where the three real numbers are rounded to exactly $6$ digits after the decimal point and the decision is either True or False. For example, a valid single result could be $[0.271234,0.198765,0.345678,True]$. The entire output must be a single line such as $[[...],[...],[...],[...]]$ with no additional text.", "solution": "The problem is valid as it is scientifically grounded in population genetics, well-posed with clear definitions and constraints, and objective in its formulation. The task is to compute the fixation index, $F_{ST}$, and its bootstrap confidence interval from allele count data, and then apply a decision rule for species differentiation. The methodology is implemented as follows.\n\nThe core of the analysis is the calculation of Wright's fixation index, $\\widehat{F}_{ST}$, which quantifies population differentiation. It is defined as the proportion of the total gene diversity ($H_T$) that is due to allele frequency differences among populations ($H_T - H_S$).\n\nFor each biallelic locus $\\ell$ from a total of $L$ loci, we are given the allele counts $(A_{i\\ell}, a_{i\\ell})$ for two populations, indexed by $i \\in \\{1, 2\\}$.\n\nFirst, for each locus $\\ell$, we compute the per-population and pooled genetic diversity statistics.\n1.  The number of gene copies sampled from population $i$ is $n_{i\\ell} = A_{i\\ell} + a_{i\\ell}$. The problem guarantees $n_{i\\ell} \\ge 1$.\n2.  The frequency of the reference allele in population $i$ is $p_{i\\ell} = A_{i\\ell} / n_{i\\ell}$.\n3.  The expected heterozygosity, or gene diversity, within population $i$ is $H_{i\\ell} = 2 p_{i\\ell} (1 - p_{i\\ell})$. This represents the probability that two randomly chosen gene copies from population $i$ are of different allelic types.\n4.  The average within-population gene diversity, $H_{S\\ell}$, is the weighted average of the individual population diversities, where the weights are the relative sample sizes of the populations:\n    $$ H_{S\\ell} = w_{1\\ell} H_{1\\ell} + w_{2\\ell} H_{2\\ell} $$\n    where $w_{i\\ell} = n_{i\\ell} / (n_{1\\ell} + n_{2\\ell})$.\n5.  To calculate the total gene diversity, $H_{T\\ell}$, we first compute the pooled allele frequency, $p_{T\\ell}$, across both populations:\n    $$ p_{T\\ell} = \\frac{A_{1\\ell} + A_{2\\ell}}{n_{1\\ell} + n_{2\\ell}} $$\n    The total gene diversity is then the expected heterozygosity in the pooled population:\n    $$ H_{T\\ell} = 2 p_{T\\ell} (1 - p_{T\\ell}) $$\n\nNext, we aggregate these statistics across all loci to obtain the genome-wide estimate $\\widehat{F}_{ST}$. The estimator is a ratio of sums, not a sum of ratios. We only consider informative loci, defined as those where $H_{T\\ell} > 0$. Let $\\mathcal{I}$ be the set of indices for these informative loci. The point estimate is:\n$$ \\widehat{F}_{ST} = \\frac{\\sum_{\\ell \\in \\mathcal{I}} (H_{T\\ell} - H_{S\\ell})}{\\sum_{\\ell \\in \\mathcal{I}} H_{T\\ell}} $$\nIf the denominator is zero (i.e., no loci are polymorphic in the pooled sample), $\\widehat{F}_{ST}$ is defined as $0$.\n\nTo assess the statistical uncertainty of $\\widehat{F}_{ST}$, we employ a non-parametric bootstrap procedure.\n1.  A pseudorandom number generator is seeded with $1729$ for reproducibility.\n2.  We perform $B = 5000$ bootstrap replicates. In each replicate, we create a new dataset of $L$ loci by sampling with replacement from the original set of $L$ loci.\n3.  For each bootstrap dataset, we recalculate the genome-wide $F_{ST}$ value using the pre-computed per-locus components $(H_{T\\ell} - H_{S\\ell})$ and $H_{T\\ell}$. If the denominator of the $F_{ST}$ calculation for a bootstrap replicate is zero, its value is set to $0$.\n4.  This process yields a distribution of $5000$ bootstrap estimates of $F_{ST}$.\n\nFrom this bootstrap distribution, we construct a $95\\%$ confidence interval using the percentile method. The lower bound, $\\text{CI\\_low}$, is the $2.5$-th percentile (the empirical quantile at $0.025$), and the upper bound, $\\text{CI\\_high}$, is the $97.5$-th percentile (the empirical quantile at $0.975$) of the sorted bootstrap values.\n\nFinally, a decision is made regarding whether the observed genetic differentiation supports recognizing the populations as distinct species. This decision is based on a pre-defined threshold, $\\tau = 0.25$.\n-   The decision is `True` if the lower bound of the confidence interval is strictly greater than the threshold: $\\text{CI\\_low} > \\tau$.\n-   Otherwise, the decision is `False`.\n\nThis procedure is applied independently to each of the four provided datasets. The final numerical results ($\\widehat{F}_{ST}$, $\\text{CI\\_low}$, $\\text{CI\\_high}$) are rounded to six decimal places for reporting.", "answer": "```python\nimport numpy as np\n\ndef process_dataset(locus_data, B, tau, seed):\n    \"\"\"\n    Computes F_ST, bootstrap CI, and species differentiation decision for a single dataset.\n    \n    Args:\n        locus_data (list): A list of tuples, where each tuple represents a locus and\n                           contains two sub-tuples with allele counts for pop1 and pop2.\n                           Format: [((A1, a1), (A2, a2)), ...].\n        B (int): The number of bootstrap replicates.\n        tau (float): The species-differentiation threshold.\n        seed (int): The seed for the random number generator.\n    \n    Returns:\n        list: A list containing [F_ST_hat, CI_low, CI_high, decision].\n    \"\"\"\n    \n    # 1. Pre-calculate per-locus components for F_ST\n    num_components = []\n    den_components = []\n\n    for pop1_counts, pop2_counts in locus_data:\n        A1, a1 = pop1_counts\n        A2, a2 = pop2_counts\n\n        n1 = A1 + a1\n        n2 = A2 + a2\n        \n        # Allele frequencies for each population\n        p1 = A1 / n1\n        p2 = A2 / n2\n        \n        # Gene diversity (expected heterozygosity) within each population\n        H1 = 2.0 * p1 * (1.0 - p1)\n        H2 = 2.0 * p2 * (1.0 - p2)\n        \n        # Total sample size for the locus\n        n_total = n1 + n2\n        \n        # Average within-population gene diversity\n        w1 = n1 / n_total\n        H_S = w1 * H1 + (1.0 - w1) * H2\n        \n        # Total gene diversity from pooled allele frequencies\n        p_T = (A1 + A2) / n_total\n        H_T = 2.0 * p_T * (1.0 - p_T)\n\n        num_components.append(H_T - H_S)\n        den_components.append(H_T)\n        \n    num_components = np.array(num_components)\n    den_components = np.array(den_components)\n    \n    # 2. Calculate the point estimate of F_ST\n    informative_loci_mask = den_components > 0\n    \n    numerator_sum = np.sum(num_components[informative_loci_mask])\n    denominator_sum = np.sum(den_components[informative_loci_mask])\n    \n    f_st_hat = 0.0\n    if denominator_sum > 0:\n        f_st_hat = numerator_sum / denominator_sum\n        \n    # 3. Perform non-parametric bootstrap over loci\n    L = len(locus_data)\n    rng = np.random.default_rng(seed)\n    \n    bootstrap_indices = rng.choice(L, size=(B, L), replace=True)\n    \n    # Sum components for each bootstrap replicate\n    bootstrap_num_sum = np.sum(num_components[bootstrap_indices], axis=1)\n    bootstrap_den_sum = np.sum(den_components[bootstrap_indices], axis=1)\n    \n    # Calculate F_ST for each bootstrap replicate\n    bootstrap_f_st = np.zeros(B, dtype=np.float64)\n    den_not_zero_mask = bootstrap_den_sum != 0\n    bootstrap_f_st[den_not_zero_mask] = bootstrap_num_sum[den_not_zero_mask] / bootstrap_den_sum[den_not_zero_mask]\n    \n    # 4. Calculate the 95% percentile confidence interval\n    ci_low = np.quantile(bootstrap_f_st, 0.025)\n    ci_high = np.quantile(bootstrap_f_st, 0.975)\n    \n    # 5. Apply the decision rule\n    decision = ci_low > tau\n    \n    # 6. Return the collected results\n    return [f_st_hat, ci_low, ci_high, decision]\n\ndef solve():\n    \"\"\"\n    Main function to process all datasets and print the final results.\n    \"\"\"\n    # Define the test cases from the problem statement\n    datasets = [\n        # Dataset 1\n        [((30, 10), (10, 30)), ((18, 22), (12, 28)), ((40, 0), (38, 2)), \n         ((25, 15), (15, 25)), ((35, 5), (20, 20)), ((28, 12), (12, 28))],\n        # Dataset 2\n        [((40, 0), (0, 40)), ((40, 0), (40, 0)), ((20, 20), (10, 30)), \n         ((5, 35), (35, 5)), ((18, 22), (18, 22))],\n        # Dataset 3\n        [((24, 16), (24, 16)), ((30, 10), (30, 10)), ((10, 30), (10, 30)), \n         ((35, 5), (35, 5)), ((20, 20), (20, 20))],\n        # Dataset 4\n        [((20, 0), (0, 20)), ((18, 2), (1, 19)), ((20, 0), (2, 18)), \n         ((17, 3), (0, 20)), ((19, 1), (0, 20)), ((16, 4), (0, 20))]\n    ]\n\n    B = 5000\n    tau = 0.25\n    seed = 1729\n    \n    all_results_formatted = []\n    \n    for data in datasets:\n        result = process_dataset(data, B, tau, seed)\n        f_st, ci_low, ci_high, decision = result\n        \n        # Format the result list as a string, with numbers rounded to 6 decimal places.\n        result_str = (\n            f\"[{f_st:.6f},\"\n            f\"{ci_low:.6f},\"\n            f\"{ci_high:.6f},\"\n            f\"{'True' if decision else 'False'}]\"\n        )\n        all_results_formatted.append(result_str)\n\n    # Print the final output in the required single-line format\n    print(f\"[{','.join(all_results_formatted)}]\")\n\nsolve()\n```"}]}