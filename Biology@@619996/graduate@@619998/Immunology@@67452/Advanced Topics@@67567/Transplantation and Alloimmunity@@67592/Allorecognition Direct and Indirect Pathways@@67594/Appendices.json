{"hands_on_practices": [{"introduction": "This first exercise utilizes a thought experiment, a powerful pedagogical tool for illuminating the core mechanics of complex biological systems. By analyzing the theoretical impact of a drug with a highly specific molecular target, you can sharply distinguish the unique cellular machinery that underpins the direct and indirect allorecognition pathways [@problem_id:2215665]. This practice is designed to strengthen your ability to connect molecular mechanisms to systemic immunological outcomes, a foundational skill for both research and clinical applications.", "problem": "In the context of solid organ transplantation, the recipient's immune system can recognize and attack the donor graft through a process known as allorecognition. This process is primarily mediated by T lymphocytes and occurs via two distinct mechanisms: the direct and indirect pathways.\n\nA pharmaceutical company has developed a new experimental drug, \"Allostatin-X,\" designed to prevent transplant rejection. The drug's mechanism of action is highly specific: it selectively inhibits the endo-lysosomal pathway of antigen processing and presentation within the recipient's own Antigen-Presenting Cells (APCs), such as dendritic cells and macrophages. This inhibition prevents the recipient's APCs from breaking down phagocytosed proteins into peptide fragments and loading them onto Major Histocompatibility Complex (MHC) Class II molecules. The drug has no effect on the function of donor cells, nor does it directly alter the function or viability of recipient T cells.\n\nGiven this specific mechanism of action, which of the following statements most accurately describes the predicted immunological effect of Allostatin-X?\n\nA. The drug will effectively inhibit the direct pathway of allorecognition while having a negligible effect on the indirect pathway.\n\nB. The drug will effectively inhibit the indirect pathway of allorecognition while having a negligible effect on the direct pathway.\n\nC. The drug will inhibit both the direct and indirect pathways of allorecognition with approximately equal efficacy.\n\nD. The drug will enhance the indirect pathway by causing an accumulation of unprocessed donor antigens, leading to a stronger T cell response.\n\nE. The drug will have no significant effect on either pathway, as T cell activation is independent of antigen processing in the recipient.", "solution": "1. State the relevant mechanisms of allorecognition:\n- Direct pathway: Recipient T cells recognize intact allogeneic MHC-peptide complexes presented by donor-derived APCs. This does not require antigen processing within recipient APCs; it depends on functional donor APCs carrying donor MHC.\n- Indirect pathway: Recipient APCs phagocytose donor-derived proteins, process them in the endo-lysosomal compartment into peptides, and load these peptides onto self MHC Class II molecules for presentation to recipient $CD4^+$ T cells. Some donor antigens can also be cross-presented on MHC Class I via cytosolic processing, but the classical indirect pathway is characterized by endo-lysosomal processing and MHC Class II loading.\n\n2. Identify the drug’s mechanism:\n- Allostatin-X selectively inhibits the endo-lysosomal pathway of antigen processing and presentation in recipient APCs and prevents loading of processed peptides onto MHC Class II.\n- It does not affect donor cells (including donor APCs) and does not directly alter recipient T cells.\n\n3. Map mechanism to pathway effects:\n- Because the indirect pathway requires recipient APC endo-lysosomal processing and MHC Class II loading, inhibiting this pathway directly impairs indirect allorecognition, particularly $CD4^+$ T cell activation via self MHC Class II.\n- The direct pathway relies on donor APCs presenting intact donor MHC-peptide complexes; since donor cells are unaffected, the direct pathway remains largely intact.\n- The drug’s specificity for endo-lysosomal processing implies no direct inhibition of cytosolic proteasomal processing and TAP-dependent loading onto MHC Class I; thus any cross-presentation components of indirect responses are not the primary target.\n\n4. Evaluate options:\n- A is incorrect: the direct pathway depends on donor APCs, which are unaffected.\n- B is correct: the indirect pathway is specifically inhibited, with negligible effect on the direct pathway.\n- C is incorrect: effects are not equal; direct is spared, indirect is inhibited.\n- D is incorrect: accumulation of unprocessed antigen does not enhance T cell responses because peptides are not generated or loaded onto MHC Class II.\n- E is incorrect: indirect allorecognition critically depends on antigen processing in recipient APCs.\n\nTherefore, the predicted immunological effect is selective inhibition of the indirect pathway with negligible effect on the direct pathway.", "answer": "$$\\boxed{B}$$", "id": "2215665"}, {"introduction": "Moving from conceptual models to experimental validation, this problem challenges you to think like a research immunologist. The focus narrows to a critical step within the indirect pathway: the cross-presentation of donor Major Histocompatibility Complex (MHC) class I molecules to recipient cytotoxic $CD8^+$ T-cells [@problem_id:2215678]. Your task is to critically evaluate several experimental designs and select the most rigorous approach for testing a hypothesis about a rate-limiting step, thereby honing your skills in scientific reasoning and experimental design.", "problem": "A researcher is investigating the immunological mechanisms underlying transplant rejection, focusing on the indirect pathway of allorecognition. In this pathway, Antigen-Presenting Cells (APCs) of the recipient internalize cellular material from the donor graft, process donor antigens, and present them on their own Major Histocompatibility Complex (MHC) molecules. For the activation of recipient cytotoxic $CD8^+$ T-cells, which are critical for killing graft cells, this process requires that intact donor MHC class I molecules are first transported from the phagosome into the cytosol of the recipient APC. There, they are degraded by the proteasome, and the resulting peptides are loaded onto the recipient's MHC class I molecules for presentation to $CD8^+$ T-cells (a process known as cross-presentation).\n\nThe central hypothesis is that this specific trafficking step—the escape of intact donor MHC class I proteins from the phagosome into the cytosol—is the primary rate-limiting step governing the kinetics of $CD8^+$ T-cell activation via the indirect pathway.\n\nYou are provided with the following biological resources:\n- **Donor Mice:** Inbred strain BALB/c, expressing the MHC haplotype $H-2^d$. Let's denote their MHC class I molecule of interest as $K^d$.\n- **Recipient Mice:** Inbred strain C57BL/6, expressing the MHC haplotype $H-2^b$. Their relevant MHC class I molecule is $K^b$.\n- **Specialized T-cells:** A clone of $CD8^+$ T-cells, isolated from a C57BL/6 mouse, which specifically recognizes a known peptide derived from the $K^d$ molecule, but only when this peptide is presented by the $K^b$ molecule. These T-cells will not activate if they encounter intact $K^d$ on donor cells.\n- **Assay Method:** An assay that can quantitatively measure the production of Interferon-gamma (IFN-$\\gamma$) by activated T-cells over time.\n\nWhich of the following experimental designs is the most specific and rigorous for testing the hypothesis that phagosomal escape is the rate-limiting step for the indirect activation of these specialized $CD8^+$ T-cells?\n\nA. Engineer two versions of donor BALB/c cells. Group 1 expresses the normal $K^d$ molecule. Group 2 expresses a genetically engineered fusion protein consisting of the $K^d$ molecule linked to listeriolysin O (LLO), a pore-forming toxin known to disrupt phagosomal membranes. Culture C57BL/6 dendritic cells (as the recipient APCs) with irradiated, non-proliferating cells from either Group 1 or Group 2. After a short incubation, add the specialized $CD8^+$ T-cells and measure the rate of IFN-$\\gamma$ production over a 48-hour period.\n\nB. Culture C57BL/6 dendritic cells with irradiated BALB/c splenocytes. Divide these co-cultures into two sets. Treat one set with chloroquine, a drug that raises the pH of endocytic vesicles and inhibits the function of lysosomal proteases. Treat the other set with a vehicle control. After a short pre-treatment, add the specialized $CD8^+$ T-cells and measure total IFN-$\\gamma$ production after 48 hours.\n\nC. Culture C57BL/6 dendritic cells with irradiated BALB/c splenocytes. Divide these co-cultures into two sets. Treat one set with the proteasome inhibitor MG-132. Treat the other set with a vehicle control. After a short pre-treatment, add the specialized $CD8^+$ T-cells and measure total IFN-$\\gamma$ production after 48 hours.\n\nD. Culture the specialized $CD8^+$ T-cells directly with irradiated BALB/c splenocytes without any C57BL/6 dendritic cells. In parallel, culture the same T-cells with C57BL/6 dendritic cells that have been pulsed with the specific synthetic peptide derived from $K^d$. Compare the rate of IFN-$\\gamma$ production between the two cultures.\n\nE. Perform the experiment exactly as described in option A. However, instead of using the specialized $CD8^+$ T-cells, use a polyclonal population of $CD4^+$ T-cells isolated from a C57BL/6 mouse that was previously immunized with BALB/c cells. Measure the rate of T-cell proliferation over a 72-hour period.\n\nF. Culture C57BL/6 dendritic cells with irradiated BALB/c splenocytes. Divide these co-cultures into two sets. Treat one set with cytochalasin D, a potent inhibitor of actin polymerization which blocks phagocytosis. Treat the other set with a vehicle control. After a short pre-treatment, add the specialized $CD8^+$ T-cells and measure total IFN-$\\gamma$ production after 48 hours.", "solution": "We formalize the indirect pathway of cross-presentation leading to $CD8^+$ T-cell activation as a sequence of necessary steps within a recipient dendritic cell (DC):\n1) uptake of donor material by phagocytosis,\n2) phagosomal escape of intact donor MHC class I proteins into the cytosol,\n3) proteasomal degradation to generate peptides,\n4) peptide transport into the endoplasmic reticulum via TAP,\n5) loading of peptide onto recipient MHC class I ($K^{b}$),\n6) surface presentation and T-cell activation culminating in IFN-$\\gamma$ secretion.\n\nLet the steps be sequential with effective first-order rate constants $\\{k_{\\mathrm{upt}},k_{\\mathrm{esc}},k_{\\mathrm{prot}},k_{\\mathrm{TAP}},k_{\\mathrm{load}},k_{\\mathrm{act}}\\}$. For series processes, the steady flux $J$ toward peptide-MHC presentation is constrained by the smallest effective rate constant. If $k_{\\mathrm{esc}}$ is the smallest, then increasing $k_{\\mathrm{esc}}$ should increase the kinetic rate of presentation and thus the rate of IFN-$\\gamma$ production $r_{\\gamma}(t)$, with $r_{\\gamma}(t)\\propto J(t)$. A rigorous and specific test of the hypothesis that phagosomal escape is rate-limiting must selectively increase $k_{\\mathrm{esc}}$ while keeping other steps unchanged and measure kinetics (rate) rather than only endpoints.\n\nWe assess each option relative to selective modulation of $k_{\\mathrm{esc}}$ and appropriate readout:\n- Option A directly targets the phagosomal escape step by expressing a $K^{d}$-LLO fusion in donor cells. Listeriolysin O promotes phagosomal membrane permeabilization; when donor material is phagocytosed by C57BL/6 DCs, increased phagosomal escape elevates $k_{\\mathrm{esc}}$. The specialized $CD8^+$ T cells recognize a $K^{d}$-derived peptide presented on $K^{b}$, ensuring the readout reports cross-presentation and not direct allorecognition. Measuring the rate of IFN-$\\gamma$ production over time specifically tests whether increasing $k_{\\mathrm{esc}}$ accelerates the kinetics, as predicted if $k_{\\mathrm{esc}}$ is rate-limiting.\n- Option B modulates endosomal pH and lysosomal proteases with chloroquine, altering endosomal processing rather than the cytosolic escape step. This does not directly test whether $k_{\\mathrm{esc}}$ is limiting and uses an endpoint measurement at a single time point.\n- Option C inhibits the proteasome (reducing $k_{\\mathrm{prot}}$), which will suppress $CD8^+$ cross-presentation and confirm proteasome dependence but provides no specific information on whether $k_{\\mathrm{esc}}$ was rate-limiting before inhibition; it also employs an endpoint measurement.\n- Option D compares direct allorecognition versus peptide-pulsed DC activation, serving as a control to validate T-cell specificity, but it does not manipulate or test the phagosomal escape step.\n- Option E substitutes $CD8^+$ T cells with polyclonal $CD4^+$ T cells and measures proliferation via MHC class II presentation; this addresses a different pathway and cannot test the $CD8^+$ cross-presentation escape step.\n- Option F blocks phagocytosis with cytochalasin D (reducing $k_{\\mathrm{upt}}$), thereby reducing antigen input. While this shows uptake is required, it cannot identify whether the downstream escape step is rate-limiting; it also uses an endpoint measurement.\n\nTherefore, only Option A specifically increases $k_{\\mathrm{esc}}$ and measures kinetic consequences on IFN-$\\gamma$ production by the precisely relevant $CD8^+$ T cells, making it the most specific and rigorous test of the stated hypothesis.", "answer": "$$\\boxed{A}$$", "id": "2215678"}, {"introduction": "This final practice propels us into the cutting-edge field of computational immunology, where bioinformatics provides predictive power. You are tasked with implementing an algorithm to prioritize donor-derived peptides based on their predicted immunogenicity in the context of the indirect pathway [@problem_id:2831566]. By integrating key principles—such as MHC binding affinity, proteolytic processing, and T-cell tolerance—into a quantitative score, you will gain hands-on experience with the types of models that are transforming our approach to personalized transplant medicine and alloantigen discovery.", "problem": "You are designing a computational prioritization pipeline for indirect allorecognition, in which recipient Antigen Presenting Cells (APCs) process donor Major Histocompatibility Complex (MHC) proteins into peptides that are then presented on recipient Human Leukocyte Antigen-DR (HLA-DR). The pipeline must rank donor MHC-derived peptides by an immunogenic priority score grounded in the following accepted principles: peptides of length approximately $15$ amino acids bound by MHC class II typically contain a $9$-mer binding core; the probability of peptide generation depends on proteolytic cleavage at the peptide termini; and T cell tolerance reduces responses to peptides that are highly similar to self. Your task is to formalize and implement a complete, testable algorithm that operationalizes these principles without using any external predictor, by constructing a transparent surrogate binding model and integrating processing and tolerance.\n\nFoundational base to use:\n- Antigen processing and presentation by MHC class II: recipient APCs take up donor proteins, generate peptides of length approximately $15$ via endo-lysosomal proteases, and present them on HLA-DR, with binding determined primarily by a $9$-mer core and anchor residue preferences.\n- T cell recognition depends on the presence of non-self determinants; high similarity of donor peptides to self reduces immunogenic potential.\n- Binding affinity contributes positively to immunogenicity; generation probability contributes positively; high similarity to self contributes negatively; source protein abundance contributes positively.\n\nMathematical formalization requirements:\n- Generate all overlapping peptides of length $l = 15$ from a donor MHC protein sequence of length $L$ (if $L < l$, consider that no peptide is produced and return $0$ for that case).\n- For each $15$-mer peptide $p$, define the $9$-mer binding core score as\n$$\nB(p) = \\max_{k \\in \\{0,\\dots,l-9\\}} \\sum_{j=0}^{8} W\\big(p[k+j], j\\big),\n$$\nwhere $W(a,j)$ is a position-specific weight matrix (Position-Specific Scoring Matrix, PSSM) parameterized by the recipient HLA-DR allele for amino acid $a$ at core position $j$.\n- Transform the unbounded core score to a binding propensity $b(p)$ via a logistic function\n$$\nb(p) = \\sigma\\!\\left(\\alpha\\,[B(p)-\\tau]\\right) = \\frac{1}{1 + e^{-\\alpha\\,[B(p)-\\tau]}}.\n$$\n- Define a processing probability $P(p)$ as the product of proteolytic cleavage probabilities at the N- and C- terminal boundaries of $p$ in the donor protein:\n$$\nP(p) = c[i]\\cdot c[i+l],\n$$\nwhere $i$ is the start index of $p$ in the donor sequence (zero-based), $c[t] \\in [0,1]$ is the probability of a cleavage between residues at boundary index $t$ (with $c$ provided as a list of length $L+1$).\n- Define a tolerance penalty using self-similarity of the optimal $9$-mer binding core. Let $k^\\star$ be the offset that maximizes $B(p)$. For a set $\\mathcal{S}$ of self $15$-mer peptides, compute\n$$\nf(p) = \\max_{q \\in \\mathcal{S}} \\max_{s \\in \\{0,\\dots,l-9\\}} \\frac{1}{9}\\sum_{j=0}^{8} \\mathbf{1}\\{\\,p[k^\\star + j] = q[s + j]\\,\\},\n$$\nand set a penalty\n$$\n\\pi(p) = \\big(f(p)\\big)^{\\beta}.\n$$\n- Let $A \\in [0,1]$ be a donor protein abundance weight reflecting the likelihood the donor MHC protein is available for processing.\n- Define the final immunogenic priority score\n$$\nI(p) = \\lambda_b\\, b(p) + \\lambda_p\\, P(p) + \\lambda_a\\, A - \\lambda_s\\, \\pi(p),\n$$\nclamped to $[0,1]$ after computation.\n\nParameters to use for all computations:\n- Logistic transform parameters: $\\alpha = 1.0$, $\\tau = 1.5$.\n- Tolerance exponent: $\\beta = 2$.\n- Weights: $\\lambda_b = 0.5$, $\\lambda_p = 0.2$, $\\lambda_a = 0.2$, $\\lambda_s = 0.3$.\n- Peptide length: $l = 15$.\n\nRecipient allele-specific PSSM definitions (values in arbitrary additive units):\n- Allele DR401: nonzero weights only at positions $j \\in \\{0,3,5,8\\}$ in the $9$-mer core; zeros elsewhere.\n    - At $j=0$ (P1): $+1.5$ for hydrophobic residues $\\{ \\mathrm{F}, \\mathrm{W}, \\mathrm{Y}, \\mathrm{L}, \\mathrm{I}, \\mathrm{V}, \\mathrm{M}, \\mathrm{A} \\}$; $-1.0$ for $\\{ \\mathrm{P}, \\mathrm{D}, \\mathrm{E}, \\mathrm{K}, \\mathrm{R} \\}$; $0$ otherwise.\n    - At $j=3$ (P4): $+0.8$ for $\\{ \\mathrm{S}, \\mathrm{T}, \\mathrm{N}, \\mathrm{Q}, \\mathrm{G} \\}$; $-0.5$ for $\\{ \\mathrm{F}, \\mathrm{W}, \\mathrm{Y}, \\mathrm{L}, \\mathrm{I}, \\mathrm{V}, \\mathrm{M}, \\mathrm{P} \\}$; $0$ otherwise.\n    - At $j=5$ (P6): $+1.0$ for $\\{ \\mathrm{K}, \\mathrm{R}, \\mathrm{H} \\}$; $-0.5$ for $\\{ \\mathrm{D}, \\mathrm{E} \\}$; $0$ otherwise.\n    - At $j=8$ (P9): $+1.2$ for $\\{ \\mathrm{F}, \\mathrm{W}, \\mathrm{Y}, \\mathrm{L}, \\mathrm{I}, \\mathrm{V}, \\mathrm{M}, \\mathrm{A} \\}$; $-0.8$ for $\\{ \\mathrm{P}, \\mathrm{D}, \\mathrm{E}, \\mathrm{K}, \\mathrm{R} \\}$; $0$ otherwise.\n- Allele DR1501: nonzero weights only at positions $j \\in \\{0,3,5,8\\}$ in the $9$-mer core; zeros elsewhere.\n    - At $j=0$ (P1): $+2.0$ for $\\{ \\mathrm{F}, \\mathrm{W}, \\mathrm{Y} \\}$; $+1.0$ for $\\{ \\mathrm{L}, \\mathrm{I}, \\mathrm{V}, \\mathrm{M} \\}$; $-1.2$ for $\\{ \\mathrm{P}, \\mathrm{D}, \\mathrm{E} \\}$; $0$ otherwise.\n    - At $j=3$ (P4): $+0.6$ for $\\{ \\mathrm{D}, \\mathrm{E} \\}$; $-0.6$ for $\\{ \\mathrm{P}, \\mathrm{F}, \\mathrm{W} \\}$; $0$ otherwise.\n    - At $j=5$ (P6): $+0.7$ for $\\{ \\mathrm{N}, \\mathrm{Q}, \\mathrm{S}, \\mathrm{T} \\}$; $-0.5$ for $\\{ \\mathrm{K}, \\mathrm{R} \\}$; $0$ otherwise.\n    - At $j=8$ (P9): $+0.8$ for $\\{ \\mathrm{S}, \\mathrm{T}, \\mathrm{Y}, \\mathrm{N}, \\mathrm{Q} \\}$; $-1.0$ for $\\{ \\mathrm{P}, \\mathrm{D}, \\mathrm{E} \\}$; $0$ otherwise.\n\nAlgorithmic task:\n- For each test case below, compute $I(p)$ for every overlapping $15$-mer in the donor sequence and report the maximum value across all $p$ in that donor sequence. If no $15$-mer exists, report $0$.\n\nTest suite:\n- Case $1$ (recipient allele DR401):\n    - Donor MHC sequence $S_1$: \"GSHSMRYFYTAMSRPGRGEPRFIAV\" (length $25$).\n    - Cleavage probabilities $c_1$ (length $26$): [ $0.55$, $0.60$, $0.45$, $0.50$, $0.70$, $0.65$, $0.55$, $0.50$, $0.60$, $0.45$, $0.50$, $0.60$, $0.70$, $0.55$, $0.40$, $0.50$, $0.60$, $0.70$, $0.55$, $0.45$, $0.50$, $0.60$, $0.55$, $0.45$, $0.60$, $0.55$ ].\n    - Self peptides $\\mathcal{S}_1$: [ \"TTTSRPGRGEPRFIA\", \"ALVSRPGRGEPRFIQ\" ].\n    - Abundance weight $A_1 = 0.70$.\n- Case $2$ (recipient allele DR1501):\n    - Donor MHC sequence $S_2$: \"LYLWNPDTDFRKFGLYQEFK\" (length $20$).\n    - Cleavage probabilities $c_2$ (length $21$): [ $0.60$, $0.50$, $0.50$, $0.40$, $0.60$, $0.50$, $0.60$, $0.50$, $0.60$, $0.40$, $0.50$, $0.50$, $0.60$, $0.50$, $0.60$, $0.40$, $0.50$, $0.60$, $0.50$, $0.60$, $0.50$ ].\n    - Self peptides $\\mathcal{S}_2$: [ \"AAAKFGLYQEFKTTT\", \"QQQWNPDTDFRQQQQ\" ].\n    - Abundance weight $A_2 = 0.60$.\n- Case $3$ (recipient allele DR401; boundary and disfavored composition):\n    - Donor MHC sequence $S_3$: \"PPPPPPPPPPPPPPP\" (length $15$).\n    - Cleavage probabilities $c_3$ (length $16$): [ $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$, $0.05$ ].\n    - Self peptides $\\mathcal{S}_3$: [ ] (empty set).\n    - Abundance weight $A_3 = 0.80$.\n\nOutput specification:\n- Your program should produce a single line of output containing the maximum immunogenic priority scores for the three cases as a comma-separated list of floats, each rounded to exactly $6$ decimal places, enclosed in square brackets, in the order of cases $1$, $2$, $3$. For example: \"[0.123456,0.654321,0.000000]\".\n- Angles do not apply. No physical units are required. Do not include any additional text in the output.", "solution": "The problem presented is a well-posed computational task in the field of immunology, grounded in scientifically accepted principles of indirect allorecognition. It is self-contained, with all necessary parameters, data, and mathematical formulations explicitly defined. There are no contradictions, scientific unsoundness, or fatal ambiguities. The task is to implement a specified algorithm for calculating an immunogenic priority score for donor-derived peptides and to apply this algorithm to three distinct test cases. I will proceed with a solution.\n\nThe core of the problem is to compute the maximum immunogenic priority score, $I(p)$, over all possible overlapping peptides, $p$, of length $l=15$ derived from a given donor Major Histocompatibility Complex (MHC) protein sequence of length $L$. If $L<l$, no such peptides exist, and the score is defined as $0$. For each valid peptide $p$, the score $I(p)$ is a weighted sum of four components: a binding propensity term, a processing probability, a protein abundance term, and a tolerance penalty.\n\nThe overall algorithm proceeds as follows for each test case:\n1.  Generate all overlapping peptides of length $l=15$ from the donor sequence. If no such peptides exist, the final score for the case is $0$.\n2.  For each peptide $p$, calculate its immunogenic priority score $I(p)$.\n3.  The result for the test case is the maximum score found among all peptides.\n\nThe calculation of the score $I(p)$ for a single peptide requires several intermediate steps, which are detailed below.\n\nFirst, the Position-Specific Scoring Matrix (PSSM) for each recipient Human Leukocyte Antigen-DR (HLA-DR) allele must be constructed. The problem provides definitions for alleles `DR401` and `DR1501`. These matrices, denoted by $W(a, j)$, provide a score for each amino acid $a$ at each position $j$ (from $0$ to $8$) of a $9$-mer binding core. For positions and amino acids not explicitly mentioned, the score is $0$.\n\nLet a donor protein sequence be $S$ of length $L$, and a derived peptide be $p$ starting at index $i$ in $S$. The calculation for $p$ is as follows:\n\nStep 1: Compute the Binding Core Score $B(p)$.\nA $15$-mer peptide $p$ can be anchored in the MHC binding groove via a $9$-mer core. There are $l-9+1 = 15-9+1 = 7$ possible core alignments, indexed by an offset $k \\in \\{0, \\dots, 6\\}$. The score for each potential core is the sum of PSSM weights for its constituent amino acids. The optimal binding core score $B(p)$ is the maximum score over all possible offsets $k$:\n$$\nB(p) = \\max_{k \\in \\{0, \\dots, 6\\}} \\sum_{j=0}^{8} W\\big(p[k+j], j\\big)\n$$\nWe must also record the offset $k^\\star$ that yields this maximum score, as it is required for the tolerance calculation. If multiple offsets yield the same maximum score, we adopt the convention of selecting the smallest such offset.\n\nStep 2: Transform the Score to a Binding Propensity $b(p)$.\nThe raw score $B(p)$ is unbounded. It is transformed into a probabilistic propensity $b(p) \\in [0, 1]$ using a logistic function $\\sigma$:\n$$\nb(p) = \\sigma\\!\\left(\\alpha\\,[B(p)-\\tau]\\right) = \\frac{1}{1 + e^{-\\alpha\\,[B(p)-\\tau]}}\n$$\nThe parameters are given as $\\alpha = 1.0$ and $\\tau = 1.5$.\n\nStep 3: Calculate the Processing Probability $P(p)$.\nThe generation of peptide $p$ is modeled as a product of cleavage probabilities at its N- and C-terminal boundaries within the source protein. For a peptide $p$ starting at index $i$ of length $l=15$, the relevant cleavage sites are at boundary index $i$ (before the peptide) and boundary index $i+l$ (after the peptide). The processing probability $P(p)$ is:\n$$\nP(p) = c[i] \\cdot c[i+15]\n$$\nwhere $c$ is the provided vector of cleavage probabilities of length $L+1$.\n\nStep 4: Determine the Tolerance Penalty $\\pi(p)$.\nT-cell tolerance reduces the immunogenicity of peptides that are similar to the host's own (self) peptides. This is modeled as a penalty. First, we compute a self-similarity fraction, $f(p)$. This is the maximum sequence identity between the peptide's optimal $9$-mer binding core (at offset $k^\\star$) and any $9$-mer segment from any peptide in the set of self-peptides, $\\mathcal{S}$.\n$$\nf(p) = \\max_{q \\in \\mathcal{S}} \\max_{s \\in \\{0,\\dots,6\\}} \\frac{1}{9}\\sum_{j=0}^{8} \\mathbf{1}\\{\\,p[k^\\star + j] = q[s + j]\\,\\}\n$$\nwhere $\\mathbf{1}\\{\\cdot\\}$ is the indicator function, which is $1$ if the condition is true and $0$ otherwise. If the set $\\mathcal{S}$ is empty, there is no self-similarity, so we define $f(p) = 0$.\nThe tolerance penalty $\\pi(p)$ is then calculated as:\n$$\n\\pi(p) = \\big(f(p)\\big)^{\\beta}\n$$\nwith the exponent $\\beta = 2.0$.\n\nStep 5: Compute the Final Immunogenic Priority Score $I(p)$.\nThe final score is a linear combination of the preceding components, plus a term for the donor protein abundance weight $A$:\n$$\nI(p)_{\\text{raw}} = \\lambda_b\\, b(p) + \\lambda_p\\, P(p) + \\lambda_a\\, A - \\lambda_s\\, \\pi(p)\n$$\nThe weights are given as $\\lambda_b = 0.5$, $\\lambda_p = 0.2$, $\\lambda_a = 0.2$, and $\\lambda_s = 0.3$.\nFinally, this raw score is clamped to the interval $[0,1]$:\n$$\nI(p) = \\max(0, \\min(1, I(p)_{\\text{raw}}))\n$$\n\nThis procedure is repeated for all $L-15+1$ peptides from the donor sequence. The maximum value of $I(p)$ among all peptides is the final answer for the given test case. This entire protocol is implemented in the provided Python code, which systematically processes each case according to these formal specifications.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the computational immunology problem for the given test cases.\n    \"\"\"\n\n    # ------------------\n    # Constants and Parameters\n    # ------------------\n    ALPHA = 1.0\n    TAU = 1.5\n    BETA = 2.0\n    LAMBDA_B = 0.5\n    LAMBDA_P = 0.2\n    LAMBDA_A = 0.2\n    LAMBDA_S = 0.3\n    PEPTIDE_LENGTH = 15\n    CORE_LENGTH = 9\n    AMINO_ACIDS = \"ACDEFGHIKLMNPQRSTVWY\"\n\n    # ------------------\n    # PSSM Construction\n    # ------------------\n    pssm_tables = {}\n\n    # Allele DR401 PSSM\n    dr401_pssm = {j: {aa: 0.0 for aa in AMINO_ACIDS} for j in range(CORE_LENGTH)}\n    # Position 0 (P1)\n    for aa in \"FWYLVIMA\": dr401_pssm[0][aa] = 1.5\n    for aa in \"PDEKR\": dr401_pssm[0][aa] = -1.0\n    # Position 3 (P4)\n    for aa in \"STNQG\": dr401_pssm[3][aa] = 0.8\n    for aa in \"FWYLVIMP\": dr401_pssm[3][aa] = -0.5\n    # Position 5 (P6)\n    for aa in \"KRH\": dr401_pssm[5][aa] = 1.0\n    for aa in \"DE\": dr401_pssm[5][aa] = -0.5\n    # Position 8 (P9)\n    for aa in \"FWYLVIMA\": dr401_pssm[8][aa] = 1.2\n    for aa in \"PDEKR\": dr401_pssm[8][aa] = -0.8\n    pssm_tables['DR401'] = dr401_pssm\n\n    # Allele DR1501 PSSM\n    dr1501_pssm = {j: {aa: 0.0 for aa in AMINO_ACIDS} for j in range(CORE_LENGTH)}\n    # Position 0 (P1)\n    for aa in \"FWY\": dr1501_pssm[0][aa] = 2.0\n    for aa in \"LVIM\": dr1501_pssm[0][aa] = 1.0\n    for aa in \"PDE\": dr1501_pssm[0][aa] = -1.2\n    # Position 3 (P4)\n    for aa in \"DE\": dr1501_pssm[3][aa] = 0.6\n    for aa in \"PFW\": dr1501_pssm[3][aa] = -0.6\n    # Position 5 (P6)\n    for aa in \"NQST\": dr1501_pssm[5][aa] = 0.7\n    for aa in \"KR\": dr1501_pssm[5][aa] = -0.5\n    # Position 8 (P9)\n    for aa in \"STYNQ\": dr1501_pssm[8][aa] = 0.8\n    for aa in \"PDE\": dr1501_pssm[8][aa] = -1.0\n    pssm_tables['DR1501'] = dr1501_pssm\n\n    # ------------------\n    # Test Cases\n    # ------------------\n    test_cases = [\n        {\n            \"allele\": \"DR401\",\n            \"donor_seq\": \"GSHSMRYFYTAMSRPGRGEPRFIAV\",\n            \"cleavage_probs\": [0.55, 0.60, 0.45, 0.50, 0.70, 0.65, 0.55, 0.50, 0.60, 0.45, 0.50, 0.60, 0.70, 0.55, 0.40, 0.50, 0.60, 0.70, 0.55, 0.45, 0.50, 0.60, 0.55, 0.45, 0.60, 0.55],\n            \"self_peptides\": [\"TTTSRPGRGEPRFIA\", \"ALVSRPGRGEPRFIQ\"],\n            \"abundance\": 0.70,\n        },\n        {\n            \"allele\": \"DR1501\",\n            \"donor_seq\": \"LYLWNPDTDFRKFGLYQEFK\",\n            \"cleavage_probs\": [0.60, 0.50, 0.50, 0.40, 0.60, 0.50, 0.60, 0.50, 0.60, 0.40, 0.50, 0.50, 0.60, 0.50, 0.60, 0.40, 0.50, 0.60, 0.50, 0.60, 0.50],\n            \"self_peptides\": [\"AAAKFGLYQEFKTTT\", \"QQQWNPDTDFRQQQQ\"],\n            \"abundance\": 0.60,\n        },\n        {\n            \"allele\": \"DR401\",\n            \"donor_seq\": \"PPPPPPPPPPPPPPP\",\n            \"cleavage_probs\": [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05],\n            \"self_peptides\": [],\n            \"abundance\": 0.80,\n        },\n    ]\n\n    # ------------------\n    # Main Calculation Logic\n    # ------------------\n    def calculate_max_score(case_data):\n        donor_seq = case_data[\"donor_seq\"]\n        cleavage_probs = case_data[\"cleavage_probs\"]\n        self_peptides = case_data[\"self_peptides\"]\n        abundance = case_data[\"abundance\"]\n        allele = case_data[\"allele\"]\n        pssm = pssm_tables[allele]\n        \n        seq_len = len(donor_seq)\n        if seq_len < PEPTIDE_LENGTH:\n            return 0.0\n\n        max_immunogenicity_score = 0.0\n        num_peptides = seq_len - PEPTIDE_LENGTH + 1\n\n        for i in range(num_peptides):\n            peptide = donor_seq[i : i + PEPTIDE_LENGTH]\n\n            # 1. Binding Score B(p) and optimal core offset k_star\n            max_core_score = -np.inf\n            k_star = -1\n            num_cores = PEPTIDE_LENGTH - CORE_LENGTH + 1\n            for k in range(num_cores):\n                core = peptide[k : k + CORE_LENGTH]\n                current_core_score = sum(pssm[j][core[j]] for j in range(CORE_LENGTH))\n                if current_core_score > max_core_score:\n                    max_core_score = current_core_score\n                    k_star = k\n            \n            B_p = max_core_score\n\n            # 2. Binding Propensity b(p)\n            b_p = 1.0 / (1.0 + np.exp(-ALPHA * (B_p - TAU)))\n\n            # 3. Processing Probability P(p)\n            P_p = cleavage_probs[i] * cleavage_probs[i + PEPTIDE_LENGTH]\n\n            # 4. Tolerance Penalty pi(p)\n            max_similarity_fraction = 0.0\n            if self_peptides:\n                optimal_core = peptide[k_star : k_star + CORE_LENGTH]\n                for self_pep in self_peptides:\n                    num_self_cores = len(self_pep) - CORE_LENGTH + 1\n                    for s in range(num_self_cores):\n                        self_core = self_pep[s : s + CORE_LENGTH]\n                        identity = sum(1 for aa1, aa2 in zip(optimal_core, self_core) if aa1 == aa2)\n                        similarity_fraction = identity / CORE_LENGTH\n                        if similarity_fraction > max_similarity_fraction:\n                            max_similarity_fraction = similarity_fraction\n\n            f_p = max_similarity_fraction\n            pi_p = f_p ** BETA\n            \n            # 5. Final Score I(p)\n            I_p_raw = LAMBDA_B * b_p + LAMBDA_P * P_p + LAMBDA_A * abundance - LAMBDA_S * pi_p\n            I_p = max(0.0, min(1.0, I_p_raw))\n\n            if I_p > max_immunogenicity_score:\n                max_immunogenicity_score = I_p\n        \n        return max_immunogenicity_score\n\n    results = [calculate_max_score(case) for case in test_cases]\n    \n    # ------------------\n    # Output Formatting\n    # ------------------\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2831566"}]}