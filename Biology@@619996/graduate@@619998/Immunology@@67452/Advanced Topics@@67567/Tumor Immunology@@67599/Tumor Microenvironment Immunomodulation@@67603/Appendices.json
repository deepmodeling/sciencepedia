{"hands_on_practices": [{"introduction": "The interaction between Programmed cell death protein 1 (PD-1) and its ligand PD-L1 is a cornerstone of modern cancer immunotherapy, representing a critical \"brake\" on T cell function. This exercise grounds this immunological concept in fundamental biophysical principles by asking you to quantify the extent of this interaction. By deriving the receptor occupancy equation from first principles, you will develop a quantitative feel for how ligand concentration and binding affinity, represented by the dissociation constant $K_D$, dictate the saturation of PD-1 receptors, providing a crucial link between the molecular environment and cellular response [@problem_id:2903028].", "problem": "A solid tumor mass expresses Programmed death-ligand 1 (PD-L1) abundantly on cancer and stromal cells, establishing an effective local free ligand concentration in the pericellular space of cluster of differentiation 8 (CD8) T cells of $[L]=10\\,\\mathrm{nM}$ at steady state. The Programmed cell death protein 1 (PD-1) receptor on these T cells binds PD-L1 with an equilibrium dissociation constant $K_{D}=1\\,\\mathrm{nM}$ at physiological temperature. Assume a single-site, reversible $1:1$ ligand–receptor interaction between free ligand $L$, free receptor $R$, and complex $LR$, with rapid equilibration and homogeneous conditions. Use only the law of mass action and the definition of the equilibrium dissociation constant to derive, from first principles, the equilibrium fraction of PD-1 receptors occupied by PD-L1, defined as $f=\\frac{[LR]}{[R]_{T}}$, where $[R]_{T}$ is the total PD-1 receptor concentration on the T cell. State clearly any standard approximations you invoke.\n\nCompute the numerical value of $f$ for $[L]=10\\,\\mathrm{nM}$ and $K_{D}=1\\,\\mathrm{nM}$. Express the final result as a dimensionless decimal fraction and round your answer to four significant figures.\n\nBriefly, in one or two sentences, interpret what this receptor occupancy implies for downstream inhibitory signaling via the immunoreceptor tyrosine-based inhibitory motif (ITIM) and immunoreceptor tyrosine-based switch motif (ITSM) of PD-1, including recruitment of Src homology region 2 domain-containing phosphatase-2 (SHP-2) and effects on T cell receptor (TCR) and CD28 signaling. Your interpretation does not need to be quantitative.", "solution": "The problem statement will first be subjected to a rigorous validation process.\n\n### Step 1: Extract Givens\nThe explicit information provided in the problem statement is as follows:\n- Local free ligand concentration at steady state: $[L] = 10\\,\\mathrm{nM}$\n- Equilibrium dissociation constant: $K_{D} = 1\\,\\mathrm{nM}$\n- Interaction model: Single-site, reversible $1:1$ ligand–receptor interaction ($L + R \\rightleftharpoons LR$)\n- Assumptions: Rapid equilibration, homogeneous conditions\n- Definition of fractional occupancy: $f = \\frac{[LR]}{[R]_{T}}$, where $[R]_{T}$ is the total receptor concentration.\n- Task 1: Derive the expression for $f$ from first principles.\n- Task 2: Compute the numerical value of $f$.\n- Task 3: Provide a brief qualitative interpretation of the result in the context of T cell signaling.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is evaluated against the required criteria.\n- **Scientifically Grounded**: The problem is firmly based on fundamental principles of physical chemistry (law of mass action, chemical equilibrium) and immunology (receptor-ligand interactions, specifically the PD-1/PD-L1 checkpoint pathway). The given values for $K_{D}$ and $[L]$ are biologically plausible for this system. The problem is scientifically sound.\n- **Well-Posed**: The problem is well-posed. It describes a standard model of receptor-ligand binding and asks for a derivation and calculation for which a unique, stable, and meaningful solution exists. All necessary parameters are provided.\n- **Objective**: The problem is stated in precise, objective, and quantitative terms. It is free from subjective or ambiguous language.\n- **Completeness**: The problem is self-contained. It provides all necessary data ($[L]$, $K_D$) and definitions to derive the formula and compute the numerical result.\n- **Other Flaws**: The problem does not exhibit any other flaws. It is not trivial, as it requires a derivation from first principles. It is not metaphorical, contradictory, or unverifiable.\n\n### Step 3: Verdict and Action\nThe problem is deemed **valid**. A solution will be provided.\n\nThe problem requires a derivation of the fractional occupancy of Programmed cell death protein 1 (PD-1) receptors from first principles.\n\nThe system describes a reversible, single-site binding equilibrium between a free ligand $L$ (PD-L1), a free receptor $R$ (PD-1), and the ligand-receptor complex $LR$:\n$$\nR + L \\rightleftharpoons LR\n$$\nThe law of mass action applied to this system at equilibrium gives the definition of the equilibrium dissociation constant, $K_D$:\n$$\nK_D = \\frac{[R][L]}{[LR]}\n$$\nHere, $[R]$ and $[L]$ are the concentrations of the free receptor and free ligand at equilibrium, respectively, and $[LR]$ is the concentration of the bound complex.\n\nThe total concentration of receptors, $[R]_T$, is the sum of the concentrations of free receptors and bound receptors:\n$$\n[R]_T = [R] + [LR]\n$$\nThe objective is to find the fractional occupancy, $f$, defined as:\n$$\nf = \\frac{[LR]}{[R]_T}\n$$\nTo derive an expression for $f$ in terms of $[L]$ and $K_D$, we must eliminate $[R]$ and $[LR]$ from the equations. First, we rearrange the definition of $K_D$ to express the free receptor concentration $[R]$ in terms of other quantities:\n$$\n[R] = \\frac{K_D [LR]}{[L]}\n$$\nNext, we substitute this expression for $[R]$ into the equation for the total receptor concentration:\n$$\n[R]_T = \\frac{K_D [LR]}{[L]} + [LR]\n$$\nFactoring out the term $[LR]$ on the right-hand side gives:\n$$\n[R]_T = [LR] \\left( \\frac{K_D}{[L]} + 1 \\right)\n$$\nTo find the fractional occupancy $f$, we rearrange this equation to form the ratio $\\frac{[LR]}{[R]_T}$:\n$$\nf = \\frac{[LR]}{[R]_T} = \\frac{1}{\\frac{K_D}{[L]} + 1}\n$$\nThis expression can be algebraically simplified by multiplying the numerator and denominator by $[L]$:\n$$\nf = \\frac{[L]}{K_D + [L]}\n$$\nThis is the required expression for the fractional occupancy derived from first principles. This is a specific form of the Hill-Langmuir equation for a single binding site ($n=1$). It is important to note that the problem gives the *free* ligand concentration at equilibrium, $[L]$. A common scenario involves knowing the total ligand concentration, $[L]_T$. In such cases, one must typically invoke the approximation $[L] \\approx [L]_T$, which is valid if the total receptor concentration is much smaller than the total ligand concentration ($[R]_T \\ll [L]_T$), preventing significant ligand depletion. However, the problem statement provides $[L]$ directly, rendering this approximation unnecessary for the calculation phase.\n\nNow, we compute the numerical value of $f$ using the provided data:\n- $[L] = 10\\,\\mathrm{nM}$\n- $K_D = 1\\,\\mathrm{nM}$\n\nSubstituting these values into the derived formula:\n$$\nf = \\frac{10\\,\\mathrm{nM}}{1\\,\\mathrm{nM} + 10\\,\\mathrm{nM}} = \\frac{10}{11}\n$$\nConverting this fraction to a decimal and rounding to four significant figures as requested:\n$$\nf \\approx 0.909090... \\approx 0.9091\n$$\nThus, approximately $90.91\\%$ of the PD-1 receptors on the T cells are occupied by PD-L1 at steady state.\n\nFinally, a brief interpretation is required. A high receptor occupancy of approximately $91\\%$ ensures potent recruitment of the phosphatase SHP-2 to the phosphorylated ITIM and ITSM domains of PD-1. This recruitment leads to strong dephosphorylation and attenuation of key signaling molecules in the T cell receptor (TCR) and CD28 pathways, thereby inhibiting T cell activation and promoting an exhausted phenotype.", "answer": "$$\n\\boxed{0.9091}\n$$", "id": "2903028"}, {"introduction": "While understanding single-cell interactions is essential, the tumor microenvironment is a complex ecosystem defined by cellular heterogeneity. This practice explores a common mechanism of immune escape: the loss of antigen presentation machinery in tumor subclones. Using a simplified model based on Beta-2 microglobulin (B2M) levels, you will calculate how intratumoral heterogeneity impacts the overall visibility of the tumor to the immune system, demonstrating a key challenge for cytotoxic T cell therapies that rely on Human Leukocyte Antigen class I (HLA-I) recognition [@problem_id:2902952].", "problem": "A solid tumor lesion is infiltrated by cytotoxic cluster of differentiation 8 (CD8) T cells in an interferon gamma (IFN-$\\gamma$) rich niche. In this niche, a fully Human Leukocyte Antigen class I (HLA-I)-competent clone displays a steady-state surface density of $D_{0} = 1.5 \\times 10^{5}$ peptide–major histocompatibility complex class I (major histocompatibility complex (MHC) class I) complexes per cell. Beta-2 microglobulin (B2M) is required for proper assembly and stable surface expression of HLA-I. Consider an intratumoral mixture of three subclones distinguished only by their B2M status: a fraction $0.25$ of cells is B2M-wildtype, a fraction $0.50$ carries monoallelic loss or transcriptional downregulation leading to a residual B2M level of $0.40$ relative to wildtype, and a fraction $0.25$ has biallelic B2M loss with effectively $0$ functional B2M. Assume a simple proportional assembly model in which the HLA-I surface density per cell, $D(f)$, scales linearly with the fractional B2M level $f$ relative to the fully competent reference, so that $D(f) \\propto f$. Assume further that, in this cytokine milieu, the instantaneous CD8 T-cell recognition efficacy $E$ is directly proportional to the tumor-wide mean HLA-I density per cell, and that the proportionality constant cancels when computing the fold-change relative to a uniformly B2M-sufficient tumor.\n\nUsing only these assumptions and the stated fractions, compute the predicted fold-change in CD8 T-cell recognition efficacy, $E/E_{0}$, relative to a uniformly B2M-sufficient tumor. Express your final result as a single decimal number (dimensionless). Do not use a percent sign. No rounding is required.", "solution": "The problem statement has been rigorously validated and is deemed scientifically grounded, well-posed, and objective. It is based on established principles of tumor immunology, specifically the role of Beta-2 microglobulin (B2M) in Human Leukocyte Antigen class I (HLA-I) surface presentation and subsequent recognition by cytotoxic CD8 T cells. The simplifying assumptions of linear scaling are acceptable for a theoretical model problem. We will therefore proceed with a complete solution.\n\nThe objective is to compute the fold-change in CD8 T-cell recognition efficacy, denoted $E/E_{0}$, for a tumor with intratumoral heterogeneity in B2M expression, relative to a reference tumor that is uniformly B2M-sufficient.\n\nFirst, we formalize the relationship between the HLA-I surface density, $D(f)$, and the fractional B2M level, $f$. The problem states a linear proportionality:\n$$D(f) \\propto f$$\nThis can be expressed as an equation, $D(f) = k f$, where $k$ is a constant of proportionality. We are given that a fully competent clone, for which $f=1$, has an HLA-I density of $D_0$. We use this to determine the constant $k$:\n$$D(f=1) = D_0 = k \\cdot 1 \\implies k = D_0$$\nTherefore, the model for HLA-I density on a cell with a fractional B2M level $f$ is:\n$$D(f) = D_0 f$$\n\nNext, we must determine the tumor-wide mean HLA-I density per cell, which we shall denote as $\\bar{D}$. The tumor consists of three distinct subclones. The mean density is the weighted average of the densities of each subclone, where the weights are their respective population fractions.\nLet $x_i$ be the fraction of subclone $i$ and $f_i$ be its corresponding fractional B2M level. The mean density is given by:\n$$\\bar{D} = \\sum_{i} x_i D(f_i) = \\sum_{i} x_i (D_0 f_i) = D_0 \\sum_{i} x_i f_i$$\n\nThe problem provides the following data for the three subclones:\n1.  Subclone 1 (B2M-wildtype): fraction $x_1 = 0.25$, fractional B2M level $f_1 = 1.0$.\n2.  Subclone 2 (monoallelic loss/downregulation): fraction $x_2 = 0.50$, fractional B2M level $f_2 = 0.40$.\n3.  Subclone 3 (biallelic loss): fraction $x_3 = 0.25$, fractional B2M level $f_3 = 0$.\n\nWe substitute these values into the expression for $\\bar{D}$:\n$$\\bar{D} = D_0 \\left( (0.25 \\cdot 1.0) + (0.50 \\cdot 0.40) + (0.25 \\cdot 0) \\right)$$\n$$\\bar{D} = D_0 (0.25 + 0.20 + 0)$$\n$$\\bar{D} = 0.45 D_0$$\n\nThe problem states that the CD8 T-cell recognition efficacy, $E$, is directly proportional to this mean HLA-I density, $\\bar{D}$. So, for the heterogeneous tumor:\n$$E \\propto \\bar{D} \\implies E = C \\cdot \\bar{D} = C (0.45 D_0)$$\nwhere $C$ is a proportionality constant.\n\nFor the reference case of a uniformly B2M-sufficient tumor, all cells are of the wildtype ($f=1.0$). Therefore, the mean HLA-I density for this reference tumor, $\\bar{D}_0$, is simply $D_0$:\n$$\\bar{D}_0 = D(f=1) = D_0$$\nThe efficacy for this reference tumor, $E_0$, is:\n$$E_0 = C \\cdot \\bar{D}_0 = C D_0$$\n\nFinally, we compute the fold-change $E/E_0$ by taking the ratio of the two efficacies:\n$$\\frac{E}{E_0} = \\frac{C (0.45 D_0)}{C D_0}$$\nThe proportionality constant $C$ and the reference density $D_0$ cancel, yielding the final result. The explicit value $D_0 = 1.5 \\times 10^5$ complexes per cell is not needed for the relative calculation, but its existence provides the basis for the model.\n$$\\frac{E}{E_0} = 0.45$$\nThe predicted fold-change in CD8 T-cell recognition efficacy is $0.45$.", "answer": "$$\\boxed{0.45}$$", "id": "2902952"}, {"introduction": "The fate of an immune response is often dictated not by a single signal, but by the collective behavior of a complex cytokine network rich with feedback loops. This computational practice challenges you to model such a network, involving key players like Interleukin-12 (IL-12), Interferon-gamma (IFN-$\\gamma$), and Interleukin-10 (IL-10), as a dynamical system. By simulating the system's behavior, you will gain hands-on experience with how feedback can generate emergent properties like bistability, where the microenvironment can switch between stable \"inflamed\" and \"suppressed\" states, offering profound insights into the dichotomous outcomes of cancer immunotherapy [@problem_id:2902946].", "problem": "You are asked to formalize and analyze a minimal, dimensionless cytokine interaction network representing Interleukin-12 (IL-12), Interferon-gamma (IFN-$\\gamma$), and Interleukin-10 (IL-10) within a tumor microenvironment, with biologically motivated feedback loops. Model the cytokine concentrations as three nonnegative, dimensionless, time-dependent variables: $x(t)$ for IL-12, $y(t)$ for IFN-$\\gamma$, and $z(t)$ for IL-10. You must start from core immunological and biochemical modeling principles and translate them into a dynamical system. Then, for each provided parameter set, compute the asymptotically stable steady states by numerical simulation from multiple initial conditions, cluster distinct endpoints, and classify the qualitative tumor microenvironment regime represented by the set of observed stable states.\n\nFundamental base and modeling constraints:\n- Production-minus-decay dynamics: for each cytokine, the net rate of change is production minus first-order removal with rate constant $d \\gt 0$, reflecting processes such as decay and dilution in a well-mixed microenvironment.\n- Receptor-mediated regulation: use sigmoidal Hill-type regulation for activation and inhibition. Let the positive Hill function be $H_{+}(u;k,n) = \\dfrac{u^{n}}{k^{n} + u^{n}}$ and the negative Hill function be $H_{-}(u;k,m) = \\dfrac{1}{1 + \\left(\\dfrac{u}{k}\\right)^{m}}$, with $k \\gt 0$ and Hill exponents $n, m \\ge 1$.\n- Feedback structure: IL-12 induces IFN-$\\gamma$; IFN-$\\gamma$ induces IL-12 (mutual positive feedback). IL-10 inhibits production of both IL-12 and IFN-$\\gamma$ (negative feedback), and IL-10 is induced by IFN-$\\gamma$ in addition to a basal source.\n\nUnder these constraints, construct the following minimal system of ordinary differential equations in dimensionless form:\n$$\n\\begin{aligned}\n\\frac{dx}{dt} &= \\left(b_{x} + v_{xy}\\, H_{+}\\!\\left(y; k_{xy}, n_{xy}\\right)\\right)\\, H_{-}\\!\\left(z; k_{xz}, m_{xz}\\right) - d_{x}\\, x,\\\\\n\\frac{dy}{dt} &= \\left(b_{y} + v_{yx}\\, H_{+}\\!\\left(x; k_{yx}, n_{yx}\\right)\\right)\\, H_{-}\\!\\left(z; k_{yz}, m_{yz}\\right) - d_{y}\\, y,\\\\\n\\frac{dz}{dt} &= b_{z} + v_{zy}\\, H_{+}\\!\\left(y; k_{zy}, n_{zy}\\right) - d_{z}\\, z,\n\\end{aligned}\n$$\nwhere $b_{\\cdot} \\ge 0$ are basal production terms, $v_{\\cdot} \\ge 0$ are maximal regulated production strengths, $k_{\\cdot} \\gt 0$ are activation or inhibition half-saturation constants, $n_{\\cdot}, m_{\\cdot} \\ge 1$ are Hill exponents, and $d_{\\cdot} \\gt 0$ are first-order removal rates. All variables and parameters are dimensionless. No physical units are required.\n\nYour program must, for each parameter set below, approximate the set of asymptotically stable steady states by integrating the system from a small grid of initial conditions and identifying distinct endpoints that meet a steady-state criterion. Then classify the qualitative tumor microenvironment regime for that parameter set using the following thresholds:\n- Define an inflamed state if $x \\ge 0.6$, $y \\ge 0.6$, and $z \\le 0.4$.\n- Define a suppressed state if $z \\ge 0.6$, $x \\le 0.4$, and $y \\le 0.4$.\n- Any other steady state is mixed.\n\nFor each parameter set, compute an integer code summarizing the collection of stable steady states found:\n- Output $1$ if only inflamed states are found.\n- Output $0$ if only suppressed states are found.\n- Output $2$ if at least one inflamed and at least one suppressed state are both found (bistability).\n- Output $3$ otherwise (for example, only mixed, or a mixture that does not include both inflamed and suppressed).\n\nNumerical requirements and algorithmic guidance:\n- Use an initial condition grid that covers low, intermediate, and high values in $[0, 1.2]$ for each variable (for example, the Cartesian product of $\\{0.01, 0.5, 1.2\\}$ for $x$, $y$, and $z$), integrate forward in time from each grid point, and treat the long-time limit as a candidate steady state.\n- Integrate until a sufficiently large final time $T$ (for example, $T = 200$) with an adaptive time-step method. A candidate endpoint $(x^{\\ast}, y^{\\ast}, z^{\\ast})$ is accepted as steady if the norm of the right-hand side vector field at the endpoint is less than a small tolerance (for example, $10^{-6}$) or if the state change over the final time window is negligible. Cluster endpoints that are within a small Euclidean distance tolerance (for example, $10^{-3}$) to define distinct steady states.\n- All computations are dimensionless; no physical units are to be reported.\n\nTest suite of parameter sets:\n- Case A (inflamed-dominant target):\n  - $b_{x} = 0.02$, $b_{y} = 0.02$, $b_{z} = 0.01$.\n  - $v_{xy} = 1.20$, $k_{xy} = 0.30$, $n_{xy} = 2$.\n  - $v_{yx} = 1.20$, $k_{yx} = 0.30$, $n_{yx} = 2$.\n  - $v_{zy} = 0.30$, $k_{zy} = 0.50$, $n_{zy} = 2$.\n  - $k_{xz} = 0.50$, $m_{xz} = 2$; $k_{yz} = 0.50$, $m_{yz} = 2$.\n  - $d_{x} = 1.00$, $d_{y} = 1.00$, $d_{z} = 1.00$.\n- Case B (suppressed-dominant target):\n  - $b_{x} = 0.01$, $b_{y} = 0.01$, $b_{z} = 0.60$.\n  - $v_{xy} = 0.40$, $k_{xy} = 0.40$, $n_{xy} = 2$.\n  - $v_{yx} = 0.40$, $k_{yx} = 0.40$, $n_{yx} = 2$.\n  - $v_{zy} = 0.20$, $k_{zy} = 0.30$, $n_{zy} = 2$.\n  - $k_{xz} = 0.20$, $m_{xz} = 2$; $k_{yz} = 0.20$, $m_{yz} = 2$.\n  - $d_{x} = 1.00$, $d_{y} = 1.00$, $d_{z} = 1.00$.\n- Case C (bistability target):\n  - $b_{x} = 0.02$, $b_{y} = 0.02$, $b_{z} = 0.10$.\n  - $v_{xy} = 1.30$, $k_{xy} = 0.30$, $n_{xy} = 2$.\n  - $v_{yx} = 1.30$, $k_{yx} = 0.30$, $n_{yx} = 2$.\n  - $v_{zy} = 0.50$, $k_{zy} = 0.40$, $n_{zy} = 2$.\n  - $k_{xz} = 0.30$, $m_{xz} = 2$; $k_{yz} = 0.30$, $m_{yz} = 2$.\n  - $d_{x} = 1.00$, $d_{y} = 1.00$, $d_{z} = 1.00$.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order Case A, Case B, Case C, for example, $[r_{A}, r_{B}, r_{C}]$, where each $r_\\cdot$ is an integer code defined above.", "solution": "The problem statement presented is valid. It is a well-posed, scientifically grounded problem in the field of computational systems biology. It outlines a clear, quantitative task: to analyze a minimal dynamical system representing cytokine interactions in a tumor microenvironment. The model is based on established principles of biochemical kinetics, including production-minus-decay dynamics and sigmoidal Hill-type regulation. The parameters, equations, numerical procedure, and classification criteria are all specified with sufficient precision to permit a unique and verifiable solution.\n\nThe objective is to determine the qualitative behavior of the provided cytokine network model under three different parameter regimes. This behavior is characterized by the set of asymptotically stable steady states (attractors) of the system. The model is described by a system of three coupled, nonlinear ordinary differential equations (ODEs) for the dimensionless concentrations of IL-12 ($x(t)$), IFN-$\\gamma$ ($y(t)$), and IL-10 ($z(t)$):\n\n$$\n\\begin{aligned}\n\\frac{dx}{dt} &= \\left(b_{x} + v_{xy}\\, H_{+}\\!\\left(y; k_{xy}, n_{xy}\\right)\\right)\\, H_{-}\\!\\left(z; k_{xz}, m_{xz}\\right) - d_{x}\\, x \\\\\n\\frac{dy}{dt} &= \\left(b_{y} + v_{yx}\\, H_{+}\\!\\left(x; k_{yx}, n_{yx}\\right)\\right)\\, H_{-}\\!\\left(z; k_{yz}, m_{yz}\\right) - d_{y}\\, y \\\\\n\\frac{dz}{dt} &= b_{z} + v_{zy}\\, H_{+}\\!\\left(y; k_{zy}, n_{zy}\\right) - d_{z}\\, z\n\\end{aligned}\n$$\n\nThe functions $H_{+}(u;k,n) = \\frac{u^{n}}{k^{n} + u^{n}}$ and $H_{-}(u;k,m) = \\frac{1}{1 + (u/k)^{m}}$ model the stimulatory and inhibitory regulatory interactions, respectively.\n\nDue to the nonlinear nature of the system, an analytical solution for the steady states (where $\\frac{dx}{dt} = \\frac{dy}{dt} = \\frac{dz}{dt} = 0$) is generally not feasible. Therefore, a numerical approach is employed as specified in the problem statement. The methodology is as follows:\n\n1.  **Numerical Integration**: For each given parameter set, the system of ODEs is numerically integrated forward in time. An adaptive-step solver is appropriate for this task. The integration is performed from a representative grid of initial conditions to a final time $T=200$. This time horizon is sufficiently long relative to the system's characteristic timescale (which is on the order of $1/d_{\\cdot} = 1/1.00 = 1$) to allow trajectories to converge to their eventual attractors. The chosen initial condition grid, the Cartesian product of $\\{0.01, 0.5, 1.2\\}$ for $x, y, z$, provides a coarse but effective sampling of the state space to identify different basins of attraction.\n\n2.  **Steady-State Identification and Clustering**: The state vector $(x(T), y(T), z(T))$ at the final integration time $T=200$ is considered a candidate for a stable steady state. Its validity as a steady state is confirmed by verifying that the Euclidean norm of the rate vector $(\\frac{dx}{dt}, \\frac{dy}{dt}, \\frac{dz}{dt})$ at that point is below a small tolerance, $\\epsilon_{ss} = 10^{-6}$. To identify the set of unique attractors, the resulting endpoints from all initial simulations are clustered. Any two endpoints with a Euclidean distance less than a tolerance $\\epsilon_{cluster} = 10^{-3}$ are considered to belong to the same attractor. This process yields a list of distinct stable steady states for the given parameter set.\n\n3.  **State Classification**: Each unique stable steady state $(x^{\\ast}, y^{\\ast}, z^{\\ast})$ is classified into one of three regimes based on the specified thresholds:\n    *   **Inflamed**: if $x^{\\ast} \\ge 0.6$, $y^{\\ast} \\ge 0.6$, and $z^{\\ast} \\le 0.4$.\n    *   **Suppressed**: if $z^{\\ast} \\ge 0.6$, $x^{\\ast} \\le 0.4$, and $y^{\\ast} \\le 0.4$.\n    *   **Mixed**: any state not meeting the criteria for Inflamed or Suppressed.\n\n4.  **Regime Coding**: Based on the collection of state types found for a parameter set, a final integer code is assigned:\n    *   Code $1$: Only Inflamed states are found.\n    *   Code $0$: Only Suppressed states are found.\n    *   Code $2$: At least one Inflamed and at least one Suppressed state are found (indicating bistability between these two key regimes).\n    *   Code $3$: Any other combination of states (e.g., only Mixed states; a mix of Inflamed and Mixed; a mix of Suppressed and Mixed).\n\nThis entire procedure is implemented and applied sequentially to each of the three parameter sets (Case A, Case B, and Case C) to generate the final output vector. The implementation will utilize routines from the `scipy` and `numpy` libraries for numerical integration and vector operations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\nimport itertools\n\ndef solve():\n    \"\"\"\n    Solves the cytokine network problem by simulating the ODE system for three\n    parameter sets, identifying stable steady states, classifying them, and\n    generating a summary code for each case.\n    \"\"\"\n\n    # Define the helper Hill functions as per the problem statement.\n    def h_plus(u, k, n):\n        # Handles u < 0 by treating it as 0 to ensure non-negativity.\n        u_safe = np.maximum(u, 0)\n        # Avoid division by zero if k=0, though problem statement says k > 0.\n        k_n = k**n\n        return (u_safe**n) / (k_n + u_safe**n)\n\n    def h_minus(u, k, m):\n        # Handles u < 0 by treating it as 0.\n        u_safe = np.maximum(u, 0)\n        # Avoid division by zero if k=0.\n        if k == 0:\n            return 0.0 # Strict inhibition\n        return 1.0 / (1.0 + (u_safe / k)**m)\n\n    # Define the system of ordinary differential equations.\n    def ode_system(t, state, params):\n        x, y, z = state\n        \n        # dxdt\n        prod_x_term1 = params['b_x'] + params['v_xy'] * h_plus(y, params['k_xy'], params['n_xy'])\n        prod_x_term2 = h_minus(z, params['k_xz'], params['m_xz'])\n        decay_x = params['d_x'] * x\n        dxdt = prod_x_term1 * prod_x_term2 - decay_x\n\n        # dydt\n        prod_y_term1 = params['b_y'] + params['v_yx'] * h_plus(x, params['k_yx'], params['n_yx'])\n        prod_y_term2 = h_minus(z, params['k_yz'], params['m_yz'])\n        decay_y = params['d_y'] * y\n        dydt = prod_y_term1 * prod_y_term2 - decay_y\n\n        # dzdt\n        prod_z = params['b_z'] + params['v_zy'] * h_plus(y, params['k_zy'], params['n_zy'])\n        decay_z = params['d_z'] * z\n        dzdt = prod_z - decay_z\n        \n        return [dxdt, dydt, dzdt]\n\n    # Test suite of parameter sets.\n    test_cases = [\n        { # Case A (inflamed-dominant target)\n            'b_x': 0.02, 'b_y': 0.02, 'b_z': 0.01,\n            'v_xy': 1.20, 'k_xy': 0.30, 'n_xy': 2,\n            'v_yx': 1.20, 'k_yx': 0.30, 'n_yx': 2,\n            'v_zy': 0.30, 'k_zy': 0.50, 'n_zy': 2,\n            'k_xz': 0.50, 'm_xz': 2, 'k_yz': 0.50, 'm_yz': 2,\n            'd_x': 1.00, 'd_y': 1.00, 'd_z': 1.00,\n        },\n        { # Case B (suppressed-dominant target)\n            'b_x': 0.01, 'b_y': 0.01, 'b_z': 0.60,\n            'v_xy': 0.40, 'k_xy': 0.40, 'n_xy': 2,\n            'v_yx': 0.40, 'k_yx': 0.40, 'n_yx': 2,\n            'v_zy': 0.20, 'k_zy': 0.30, 'n_zy': 2,\n            'k_xz': 0.20, 'm_xz': 2, 'k_yz': 0.20, 'm_yz': 2,\n            'd_x': 1.00, 'd_y': 1.00, 'd_z': 1.00,\n        },\n        { # Case C (bistability target)\n            'b_x': 0.02, 'b_y': 0.02, 'b_z': 0.10,\n            'v_xy': 1.30, 'k_xy': 0.30, 'n_xy': 2,\n            'v_yx': 1.30, 'k_yx': 0.30, 'n_yx': 2,\n            'v_zy': 0.50, 'k_zy': 0.40, 'n_zy': 2,\n            'k_xz': 0.30, 'm_xz': 2, 'k_yz': 0.30, 'm_yz': 2,\n            'd_x': 1.00, 'd_y': 1.00, 'd_z': 1.00,\n        }\n    ]\n    \n    # Numerical and classification parameters.\n    t_final = 200.0\n    ic_grid_points = [0.01, 0.5, 1.2]\n    initial_conditions = list(itertools.product(ic_grid_points, repeat=3))\n    ss_tol = 1e-6\n    cluster_tol = 1e-3\n\n    results = []\n    \n    for params in test_cases:\n        unique_steady_states = []\n        \n        for y0 in initial_conditions:\n            sol = solve_ivp(\n                ode_system, \n                (0, t_final), \n                y0, \n                args=(params,), \n                method='LSODA', \n                dense_output=True,\n                rtol=1e-8,\n                atol=1e-8\n            )\n            \n            endpoint = sol.y[:, -1]\n            \n            # Ensure non-negative state due to potential small numerical errors\n            endpoint[endpoint < 0] = 0\n            \n            # Check steady-state criterion\n            rhs_norm = np.linalg.norm(ode_system(t_final, endpoint, params))\n            if rhs_norm >= ss_tol:\n                # This may happen if the system is oscillatory or chaotic.\n                # For this problem, we assume convergence to a fixed point.\n                # Silently ignore endpoints not meeting the criterion.\n                continue\n\n            # Cluster the endpoint\n            is_new = True\n            for state in unique_steady_states:\n                dist = np.linalg.norm(endpoint - state)\n                if dist < cluster_tol:\n                    is_new = False\n                    break\n            \n            if is_new:\n                unique_steady_states.append(endpoint)\n\n        # Classify the unique steady states\n        state_types_found = set()\n        for state in unique_steady_states:\n            x, y, z = state\n            if x >= 0.6 and y >= 0.6 and z <= 0.4:\n                state_types_found.add(\"inflamed\")\n            elif z >= 0.6 and x <= 0.4 and y <= 0.4:\n                state_types_found.add(\"suppressed\")\n            else:\n                state_types_found.add(\"mixed\")\n\n        # Determine the integer code for the case\n        has_inflamed = \"inflamed\" in state_types_found\n        has_suppressed = \"suppressed\" in state_types_found\n        \n        if has_inflamed and has_suppressed:\n            results.append(2)\n        elif has_inflamed and len(state_types_found) == 1:\n            results.append(1)\n        elif has_suppressed and len(state_types_found) == 1:\n            results.append(0)\n        else:\n            results.append(3)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2902946"}]}