{"hands_on_practices": [{"introduction": "Understanding how epigenetic marks regulate gene expression requires moving beyond simple on/off switches to quantitative, dynamic models. This exercise explores the widely-used 'two-state model' of transcriptional bursting, where a gene promoter stochastically switches between active and inactive states. By deriving the key statistical properties of gene expression and examining how an activating mark like H3K27ac influences them, you will develop a mechanistic intuition for how epigenetics controls not just the average expression level, but also its inherent noise or variability. [@problem_id:2847319]", "problem": "In an epigenetically regulated immune differentiation context, consider a cytokine gene in a differentiating T helper cell whose promoter is marked by histone H3 lysine 27 acetylation (H3K27ac). The promoter exhibits classical two-state stochastic switching between an inactive state and an active state. The system is modeled as a continuous-time Markov process with the following ingredients, grounded in the Central Dogma and standard stochastic chemical kinetics: when the promoter is inactive, no transcription occurs; when the promoter is active, transcription initiates messenger RNA (mRNA) at rate $r$ (events per unit time). The promoter switches from inactive to active at rate $k_{on}$ and from active to inactive at rate $k_{off}$. Each mRNA degrades independently at rate $\\gamma$ (per molecule per unit time). Let $N$ denote the steady-state random variable for the mRNA copy number.\n\nStarting from first principles of stochastic birth-death processes and promoter-state switching (without invoking pre-derived formulas for the two-state model), derive the steady-state mean $\\mathbb{E}[N]$ and variance $\\mathrm{Var}(N)$ in closed form in terms of $r$, $k_{on}$, $k_{off}$, and $\\gamma$. Define the Fano factor as $F \\equiv \\mathrm{Var}(N)/\\mathbb{E}[N]$.\n\nEpigenetically, increased H3K27ac at a promoter is associated with enhanced chromatin accessibility and transcriptional competence. Model this as a multiplicative increase in the promoter activation rate: $k_{on} \\mapsto \\alpha\\,k_{on}$ with $\\alpha>1$, while $k_{off}$, $r$, and $\\gamma$ remain unchanged. Derive an exact, closed-form expression for the ratio $F(\\alpha)/F(1)$ as a function of $\\alpha$, $r$, $k_{on}$, $k_{off}$, and $\\gamma$.\n\nProvide your final answer as a single row matrix containing, in order, the expressions for $\\mathbb{E}[N]$, $\\mathrm{Var}(N)$, and $F(\\alpha)/F(1)$. Do not include units. No numerical approximation is required.", "solution": "We model the promoter state by a binary random process $S(t)\\in\\{0,1\\}$, where $S(t)=1$ denotes the active state and $S(t)=0$ the inactive state. The promoter switches as a continuous-time Markov chain with transition rates $k_{on}$ (inactive to active) and $k_{off}$ (active to inactive). When $S(t)=1$, mRNA are produced at rate $r$; each mRNA degrades at rate $\\gamma$ independently of promoter state. Let $N(t)$ be the mRNA count. The reactions are:\n- Promoter switching: $S=0 \\xrightleftharpoons[k_{off}]{k_{on}} S=1$.\n- Transcription: when $S=1$, $N\\to N+1$ at rate $r$.\n- Degradation: $N\\to N-1$ at rate $\\gamma N$.\n\nSteady-state occupancy of the active promoter is given by the stationary distribution of a two-state Markov chain:\n$$\np_{on} \\equiv \\mathbb{E}[S] = \\frac{k_{on}}{k_{on}+k_{off}}.\n$$\nThe mean mRNA follows from the mean-field balance for a linear birth-death process driven by $S(t)$:\n$$\n\\frac{d}{dt}\\mathbb{E}[N] = r\\,\\mathbb{E}[S] - \\gamma\\,\\mathbb{E}[N].\n$$\nAt steady state, $\\frac{d}{dt}\\mathbb{E}[N]=0$, hence\n$$\n\\mathbb{E}[N] = \\frac{r\\,\\mathbb{E}[S]}{\\gamma} = \\frac{r\\,k_{on}}{\\gamma\\,(k_{on}+k_{off})}.\n$$\n\nTo obtain the variance, we derive moment equations. First, for the second moment, using standard jump-moment updates for $N$,\n$$\n\\frac{d}{dt}\\mathbb{E}[N^{2}] = \\mathbb{E}\\big[(2N+1)\\,rS\\big] + \\mathbb{E}\\big[(-2N+1)\\,\\gamma N\\big]\n= 2r\\,\\mathbb{E}[NS] + r\\,\\mathbb{E}[S] - 2\\gamma\\,\\mathbb{E}[N^{2}] + \\gamma\\,\\mathbb{E}[N].\n$$\nThis introduces the mixed moment $\\mathbb{E}[NS]$, for which we write a balance equation by considering all reactions that change $NS$:\n- Promoter switching contributes $k_{on}\\big(\\mathbb{E}[N]-\\mathbb{E}[NS]\\big) - k_{off}\\,\\mathbb{E}[NS]$.\n- Transcription (only when $S=1$) increases $N$ by $1$ without changing $S$, contributing $r\\,\\mathbb{E}[S]$.\n- Degradation decreases $N$ by $1$ with rate $\\gamma N$, contributing $-\\gamma\\,\\mathbb{E}[NS]$.\nThus,\n$$\n\\frac{d}{dt}\\mathbb{E}[NS] = k_{on}\\,\\mathbb{E}[N] - (k_{on}+k_{off}+\\gamma)\\,\\mathbb{E}[NS] + r\\,\\mathbb{E}[S].\n$$\nAt steady state, $\\frac{d}{dt}\\mathbb{E}[NS]=0$, and with $\\mathbb{E}[N]=\\frac{r p_{on}}{\\gamma}$ and $\\mathbb{E}[S]=p_{on}$, we obtain\n$$\n\\mathbb{E}[NS] = \\frac{k_{on}\\,\\mathbb{E}[N] + r\\,\\mathbb{E}[S]}{k_{on}+k_{off}+\\gamma}\n= \\frac{k_{on}\\,\\frac{r p_{on}}{\\gamma} + r p_{on}}{k_{on}+k_{off}+\\gamma}\n= \\frac{r\\,p_{on}\\,(k_{on}+\\gamma)}{\\gamma\\,(k_{on}+k_{off}+\\gamma)}.\n$$\nReturning to the second-moment equation and imposing steady state,\n$$\n0 = 2r\\,\\mathbb{E}[NS] + r\\,p_{on} - 2\\gamma\\,\\mathbb{E}[N^{2}] + \\gamma\\,\\mathbb{E}[N],\n$$\nwhich yields\n$$\n\\mathbb{E}[N^{2}] = \\frac{1}{2\\gamma}\\Big(2r\\,\\mathbb{E}[NS] + r\\,p_{on} + \\gamma\\,\\mathbb{E}[N]\\Big)\n= \\frac{r^{2} p_{on} (k_{on}+\\gamma)}{\\gamma^{2}\\,(k_{on}+k_{off}+\\gamma)} + \\frac{r\\,p_{on}}{\\gamma}.\n$$\nTherefore, the variance is\n$$\n\\mathrm{Var}(N) = \\mathbb{E}[N^{2}] - \\big(\\mathbb{E}[N]\\big)^{2}\n= \\frac{r\\,p_{on}}{\\gamma} + \\frac{r^{2} p_{on} (k_{on}+\\gamma)}{\\gamma^{2}\\,(k_{on}+k_{off}+\\gamma)} - \\left(\\frac{r\\,p_{on}}{\\gamma}\\right)^{2}.\n$$\nSubstituting $p_{on}=\\frac{k_{on}}{k_{on}+k_{off}}$ and simplifying the excess term,\n$$\n\\mathrm{Var}(N) = \\mathbb{E}[N] + \\frac{r^{2}\\,k_{on}\\,k_{off}}{\\gamma\\,(k_{on}+k_{off})^{2}\\,(k_{on}+k_{off}+\\gamma)}.\n$$\nConsequently, the Fano factor $F\\equiv \\mathrm{Var}(N)/\\mathbb{E}[N]$ is\n$$\nF = 1 + \\frac{r^{2}\\,k_{on}\\,k_{off}}{\\gamma\\,(k_{on}+k_{off})^{2}\\,(k_{on}+k_{off}+\\gamma)}\\cdot \\frac{1}{\\mathbb{E}[N]}\n= 1 + \\frac{r\\,k_{off}}{(k_{on}+k_{off})\\,(k_{on}+k_{off}+\\gamma)}.\n$$\n\nTo model an epigenetic increase in promoter activity due to histone H3 lysine 27 acetylation (H3K27ac), we set $k_{on}\\mapsto \\alpha\\,k_{on}$ with $\\alpha>1$ and hold $r$, $k_{off}$, and $\\gamma$ fixed. The post-modification Fano factor is\n$$\nF(\\alpha) = 1 + \\frac{r\\,k_{off}}{(\\alpha k_{on}+k_{off})\\,(\\alpha k_{on}+k_{off}+\\gamma)}.\n$$\nThe baseline (pre-modification) Fano factor is\n$$\nF(1) = 1 + \\frac{r\\,k_{off}}{(k_{on}+k_{off})\\,(k_{on}+k_{off}+\\gamma)}.\n$$\nTherefore, the exact closed-form ratio is\n$\n\\displaystyle\n\\frac{F(\\alpha)}{F(1)} = \\frac{1 + \\frac{r\\,k_{off}}{(\\alpha k_{on}+k_{off})\\,(\\alpha k_{on}+k_{off}+\\gamma)}}{1 + \\frac{r\\,k_{off}}{(k_{on}+k_{off})\\,(k_{on}+k_{off}+\\gamma)}}.\n$\nThis expression shows that increasing $\\alpha$ (i.e., increasing $k_{on}$) decreases the second term in the numerator, thereby decreasing $F(\\alpha)$ and thus the ratio, consistent with the biological expectation that enhanced H3K27ac reduces transcriptional bursting noise while increasing the mean.", "answer": "$$\\boxed{\\begin{pmatrix}\\dfrac{r\\,k_{on}}{\\gamma\\,(k_{on}+k_{off})} & \\dfrac{r\\,k_{on}}{\\gamma\\,(k_{on}+k_{off})} + \\dfrac{r^{2}\\,k_{on}\\,k_{off}}{\\gamma\\,(k_{on}+k_{off})^{2}\\,(k_{on}+k_{off}+\\gamma)} & \\dfrac{1 + \\dfrac{r\\,k_{off}}{(\\alpha k_{on}+k_{off})\\,(\\alpha k_{on}+k_{off}+\\gamma)}}{1 + \\dfrac{r\\,k_{off}}{(k_{on}+k_{off})\\,(k_{on}+k_{off}+\\gamma)}}\\end{pmatrix}}$$", "id": "2847319"}, {"introduction": "During immune differentiation, genes are not just activated or repressed; many exist in a 'poised' state, ready for rapid induction. This exercise challenges you to translate the biological principles of key histone marks—H3K4me1 for poising, H3K27ac for activation, and H3K27me3 for repression—into a predictive algorithm. You will design a 'poising score' from hypothetical ChIP-seq data to identify genes poised for imminent activation, a core task in computational genomics that bridges epigenetic patterns with functional outcomes. [@problem_id:2847287]", "problem": "You are given histone modification signals from Chromatin Immunoprecipitation followed by sequencing (ChIP-seq) at a current differentiation stage and messenger ribonucleic acid (mRNA) expression at the current and next stage for a set of genes. The three histone marks are Histone H3 Lysine 4 monomethylation (H3K4me1), Histone H3 Lysine 27 acetylation (H3K27ac), and Histone H3 Lysine 27 trimethylation (H3K27me3). From first principles in immunology and gene regulation, assume the following well-tested qualitative facts: (i) open chromatin marks that prime enhancers such as H3K4me1 are positively associated with future gene activation, (ii) activation-associated marks such as H3K27ac indicate current activation and reduce the concept of being merely poised, and (iii) Polycomb-mediated repression such as H3K27me3 is negatively associated with activation. Starting from these monotonic influences and the Central Dogma of Molecular Biology, design a mathematically principled procedure to compute a scalar poising score for each gene at the current time and evaluate its ability to predict imminent activation at the next time.\n\nYour program must implement the following specification:\n\n- Let there be $G$ genes indexed by $i \\in \\{1,\\dots,G\\}$. For each gene, you are given three ChIP-seq signal vectors at the current time $t$: $x^{(1)} \\in \\mathbb{R}^G$ for H3K4me1, $x^{(2)} \\in \\mathbb{R}^G$ for H3K27ac, and $x^{(3)} \\in \\mathbb{R}^G$ for H3K27me3. You are also given expression vectors $e_t \\in \\mathbb{R}^G$ and $e_{t+1} \\in \\mathbb{R}^G$.\n- Define imminent activation labels by a threshold on expression change: for a fixed $\\Delta > 0$, set $y_i = 1$ if $e_{t+1,i} - e_{t,i} \\ge \\Delta$, else $y_i = 0$.\n- Construct a poising score $s_i$ for each gene $i$ using only $x^{(1)}$, $x^{(2)}$, and $x^{(3)}$ at time $t$, respecting the monotonic influences above and combining features on a commensurate scale. Your design must be purely a function of the provided vectors (no external training) and must be invariant to affine rescaling of any single mark across genes.\n- Use the poising scores $\\{s_i\\}_{i=1}^G$ to predict labels $\\{y_i\\}_{i=1}^G$ by ranking. Quantify predictive power using the area under the receiver operating characteristic curve (ROC-AUC), defined as the probability that a randomly chosen positive is ranked above a randomly chosen negative, with ties counting as one-half. If all labels are identical (no positives or no negatives), define the ROC-AUC to be $0.5$ by convention.\n- Angles and physical units are not applicable. All inputs are in arbitrary normalized units; you must treat them as unitless scalars.\n\nTest suite:\n\nImplement and evaluate your method on the following four independent test cases. In each case, take $\\Delta = 0.5$.\n\n- Case A (balanced, clear signal):\n  - `x^{(1)} = [1.0, 0.8, 1.2, -0.5, -0.2, 0.6, -1.0, 0.9]`\n  - `x^{(2)} = [0.1, 0.3, 0.0, 0.8, 0.5, 0.2, 0.7, 0.1]`\n  - `x^{(3)} = [0.2, 0.1, 0.0, 1.0, 0.8, 0.3, 1.2, 0.1]`\n  - `e_t = [1.0, 0.5, 0.7, 0.2, 0.3, 0.6, 0.1, 0.4]`\n  - `e_{t+1} = [1.8, 1.2, 1.6, 0.1, 0.2, 1.3, 0.0, 1.1]`\n- Case B (edge case: no positives at $t+1$):\n  - `x^{(1)} = [0.2, -0.1, 0.0, -0.2, 0.1, -0.3]`\n  - `x^{(2)} = [0.5, 0.4, 0.6, 0.3, 0.5, 0.6]`\n  - `x^{(3)} = [0.7, 0.8, 0.6, 0.9, 0.7, 0.8]`\n  - `e_t = [0.5, 0.4, 0.6, 0.3, 0.7, 0.5]`\n  - `e_{t+1} = [0.6, 0.5, 0.7, 0.4, 0.8, 0.6]`\n- Case C (inverted association: strong anti-predictive marks):\n  - `x^{(1)} = [1.5, 1.2, 1.0, -0.5, -0.8, -1.0]`\n  - `x^{(2)} = [0.1, 0.2, 0.3, 0.6, 0.5, 0.4]`\n  - `x^{(3)} = [0.2, 0.3, 0.2, 0.8, 0.9, 0.7]`\n  - `e_t = [0.2, 0.3, 0.4, 0.1, 0.2, 0.2]`\n  - `e_{t+1} = [0.4, 0.3, 0.5, 0.9, 0.8, 0.7]`\n- Case D (ties within marks, separable by one feature):\n  - `x^{(1)} = [0.5, 0.5, 0.0, 0.0]`\n  - `x^{(2)} = [0.2, 0.2, 0.2, 0.2]`\n  - `x^{(3)} = [0.2, 0.2, 0.2, 0.2]`\n  - `e_t = [0.2, 0.2, 0.2, 0.2]`\n  - `e_{t+1} = [0.8, 0.7, 0.3, 0.1]`\n\nProgram requirements:\n\n- Implement your poising score and ROC-AUC computation as described using only the provided data.\n- For each case (A–D), compute the ROC-AUC as a float.\n- Output a single line containing a comma-separated list of the four ROC-AUC values in the order [A,B,C,D], each rounded to four decimal places, enclosed in square brackets. For example, output in the form \"[a,b,c,d]\" where $a$, $b$, $c$, and $d$ are the rounded values.", "solution": "The problem is subjected to validation before a solution is attempted.\n\n**Step 1: Extracted Givens**\n- **Data per gene set**: Three vectors of histone modification signals $x^{(1)}$ (H3K4me1), $x^{(2)}$ (H3K27ac), and $x^{(3)}$ (H3K27me3) at time $t$, and two vectors of gene expression $e_t$ and $e_{t+1}$. All vectors are in $\\mathbb{R}^G$ for $G$ genes.\n- **Biological principles**:\n    - (i) H3K4me1 has a positive monotonic influence on future gene activation.\n    - (ii) H3K27ac indicates current activation and negates the concept of poising.\n    - (iii) H3K27me3 has a negative monotonic influence on activation.\n- **Definitions**:\n    - Imminent activation label $y_i$: For a threshold $\\Delta > 0$, $y_i=1$ if $e_{t+1,i} - e_{t,i} \\ge \\Delta$, and $y_i=0$ otherwise.\n    - Poising score $s_i$: A scalar score for each gene $i$, constructed from $x^{(1)}$, $x^{(2)}$, and $x^{(3)}$, that is invariant to affine rescaling of any input mark.\n- **Evaluation metric**: Area under the receiver operating characteristic curve (ROC-AUC). If all labels are identical, ROC-AUC is defined as $0.5$.\n- **Test parameters**: Four test cases (A, B, C, D) are provided. For all cases, $\\Delta = 0.5$.\n\n**Step 2: Validation Verdict**\nThe problem statement is **valid**.\n1.  **Scientifically Grounded**: The problem is based on established principles of epigenetic gene regulation, specifically the roles of H3K4me1, H3K27ac, and H3K27me3 in defining chromatin states such as poised, active, and repressed. These concepts are fundamental in molecular biology.\n2.  **Well-Posed**: The task is to design a principled procedure. While the design space is large, the constraints—monotonicity, affine invariance, and use of only provided data—are clear and restrictive enough to guide the construction of a non-arbitrary, meaningful scoring function. The evaluation metric is unambiguously defined.\n3.  **Objective**: The problem is stated using precise mathematical and biological terminology, free of subjective or ambiguous language.\n\nThe problem is a well-formulated quantitative biology task that requires the synthesis of biological first principles into a mathematical model. There are no logical contradictions, scientific inaccuracies, or missing information that would prevent a rigorous solution.\n\n**Derivation of the Solution**\n\nWe will construct the solution in three stages: first, design the poising score; second, define the ground-truth labels; third, specify the evaluation procedure.\n\n**1. Design of the Poising Score ($s_i$)**\n\nThe design must satisfy three primary constraints: affine invariance, combination of features on a commensurate scale, and adherence to specified monotonic influences.\n\n**A. Affine Invariance and Feature Scaling**\nThe requirement that the score remains unchanged under an affine transformation of any feature vector $x^{(j)} \\to a \\cdot x^{(j)} + b$ (for $a>0$) is a powerful constraint. This property is naturally achieved by standardizing each feature vector. We will use Z-score standardization. For each feature vector $x^{(j)} \\in \\mathbb{R}^G$, we compute a standardized vector $z^{(j)}$ where the $i$-th component is given by:\n$$ z_i^{(j)} = \\frac{x_i^{(j)} - \\mu_j}{\\sigma_j} $$\nHere, $\\mu_j$ and $\\sigma_j$ are the mean and standard deviation of the vector $x^{(j)}$, respectively. This transformation rescales each feature vector to have a mean of $0$ and a standard deviation of $1$, placing all features on a common, dimensionless scale. If $\\sigma_j=0$ (i.e., all elements of $x^{(j)}$ are identical), the feature provides no information for ranking genes relative to each other. In this case, we define $z_i^{(j)} = 0$ for all $i$.\n\n**B. Integration of Biological Principles**\nThe poising score for a gene must reflect its readiness for future activation. The problem provides the following qualitative relationships:\n-   **H3K4me1 ($x^{(1)}$)**: A mark of poised enhancers, its presence is positively associated with future activation. Thus, a higher $z^{(1)}$ value should increase the poising score.\n-   **H3K27ac ($x^{(2)}$)**: A mark of active promoters and enhancers, its presence indicates current, not future, activation, thus reducing the \"poised\" state. A higher $z^{(2)}$ value should decrease the poising score.\n-   **H3K27me3 ($x^{(3)}$)**: A repressive mark, its presence is negatively associated with activation. A higher $z^{(3)}$ value should decrease the poising score.\n\nThe most direct and principled way to combine these influences, without introducing additional parameters or assumptions, is a linear model. The poising score $s_i$ for gene $i$ is formulated as a weighted sum of the standardized feature values:\n$$ s_i = w_1 z_i^{(1)} + w_2 z_i^{(2)} + w_3 z_i^{(3)} $$\nBased on the biological principles, the signs of the weights must be $w_1 > 0$, $w_2 < 0$, and $w_3 < 0$. In the absence of any information to justify differential weighting, we apply the principle of parsimony and assign weights of equal magnitude. The simplest choice that respects the signs is $w_1=1$, $w_2=-1$, and $w_3=-1$.\n\n**C. Final Poising Score Formula**\nThis leads to the final definition of the poising score for gene $i$:\n$$ s_i = z_i^{(1)} - z_i^{(2)} - z_i^{(3)} $$\nThis score is high for genes with strong priming marks and low levels of active and repressive marks, which is the canonical signature of a gene poised for activation.\n\n**2. Definition of Imminent Activation Labels ($y_i$)**\n\nThe ground truth for evaluating the predictive power of the poising score is derived from the change in gene expression. As specified, imminent activation for gene $i$ is determined by comparing the change in expression, $\\Delta e_i = e_{t+1,i} - e_{t,i}$, to a fixed threshold $\\Delta = 0.5$. The binary label $y_i$ is defined as:\n$$ y_i = \\begin{cases} 1 & \\text{if } e_{t+1,i} - e_{t,i} \\ge 0.5 \\\\ 0 & \\text{if } e_{t+1,i} - e_{t,i} < 0.5 \\end{cases} $$\nA label of $y_i=1$ indicates that the gene is activated, while $y_i=0$ indicates it is not.\n\n**3. Evaluation via ROC-AUC**\n\nThe predictive performance of the poising score $s$ is quantified by the Area Under the Receiver Operating Characteristic Curve (ROC-AUC). The ROC-AUC is equivalent to the probability that a randomly selected positive sample (a gene with $y_i=1$) has a higher score $s_i$ than a randomly selected negative sample (a gene with $y_j=0$).\n\nLet $P = \\{i \\mid y_i=1\\}$ be the set of indices for positive instances and $N = \\{j \\mid y_j=0\\}$ be the set for negative instances. Let their respective sizes be $N_P = |P|$ and $N_N = |N|$. The ROC-AUC is calculated as:\n$$ \\text{ROC-AUC} = \\frac{1}{N_P N_N} \\sum_{i \\in P} \\sum_{j \\in N} \\mathbb{I}(s_i, s_j) $$\nwhere the comparison function $\\mathbb{I}(s_i, s_j)$ accounts for ties:\n$$ \\mathbb{I}(s_i, s_j) = \\begin{cases} 1 & \\text{if } s_i > s_j \\\\ 0.5 & \\text{if } s_i = s_j \\\\ 0 & \\text{if } s_i < s_j \\end{cases} $$\nIf either $N_P=0$ or $N_N=0$, there are no pairs to compare, and the ROC-AUC is conventionally defined as $0.5$. The procedure will be implemented computationally and applied to the four test cases provided.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by defining a poising score, calculating it for four test cases,\n    and evaluating its predictive power using ROC-AUC.\n    \"\"\"\n\n    test_cases = {\n        'A': {\n            'x1': np.array([1.0, 0.8, 1.2, -0.5, -0.2, 0.6, -1.0, 0.9]),\n            'x2': np.array([0.1, 0.3, 0.0, 0.8, 0.5, 0.2, 0.7, 0.1]),\n            'x3': np.array([0.2, 0.1, 0.0, 1.0, 0.8, 0.3, 1.2, 0.1]),\n            'et': np.array([1.0, 0.5, 0.7, 0.2, 0.3, 0.6, 0.1, 0.4]),\n            'et1': np.array([1.8, 1.2, 1.6, 0.1, 0.2, 1.3, 0.0, 1.1]),\n        },\n        'B': {\n            'x1': np.array([0.2, -0.1, 0.0, -0.2, 0.1, -0.3]),\n            'x2': np.array([0.5, 0.4, 0.6, 0.3, 0.5, 0.6]),\n            'x3': np.array([0.7, 0.8, 0.6, 0.9, 0.7, 0.8]),\n            'et': np.array([0.5, 0.4, 0.6, 0.3, 0.7, 0.5]),\n            'et1': np.array([0.6, 0.5, 0.7, 0.4, 0.8, 0.6]),\n        },\n        'C': {\n            'x1': np.array([1.5, 1.2, 1.0, -0.5, -0.8, -1.0]),\n            'x2': np.array([0.1, 0.2, 0.3, 0.6, 0.5, 0.4]),\n            'x3': np.array([0.2, 0.3, 0.2, 0.8, 0.9, 0.7]),\n            'et': np.array([0.2, 0.3, 0.4, 0.1, 0.2, 0.2]),\n            'et1': np.array([0.4, 0.3, 0.5, 0.9, 0.8, 0.7]),\n        },\n        'D': {\n            'x1': np.array([0.5, 0.5, 0.0, 0.0]),\n            'x2': np.array([0.2, 0.2, 0.2, 0.2]),\n            'x3': np.array([0.2, 0.2, 0.2, 0.2]),\n            'et': np.array([0.2, 0.2, 0.2, 0.2]),\n            'et1': np.array([0.8, 0.7, 0.3, 0.1]),\n        }\n    }\n\n    DELTA_THRESHOLD = 0.5\n\n    def compute_roc_auc(x1, x2, x3, et, et1, delta):\n        \"\"\"\n        Computes the poising score and evaluates its predictive power using ROC-AUC.\n        \n        Args:\n            x1, x2, x3: Histone mark signal vectors.\n            et, et1: Gene expression vectors at time t and t+1.\n            delta: Threshold for defining imminent activation.\n            \n        Returns:\n            The ROC-AUC score as a float.\n        \"\"\"\n        \n        # 1. Define imminent activation labels\n        delta_e = et1 - et\n        y = (delta_e >= delta).astype(int)\n        \n        # Get indices for positive and negative classes\n        pos_indices = np.where(y == 1)[0]\n        neg_indices = np.where(y == 0)[0]\n        \n        # 2. Handle edge case where all labels are the same\n        if len(pos_indices) == 0 or len(neg_indices) == 0:\n            return 0.5\n\n        # 3. Standardize feature vectors (Z-score)\n        def standardize(v):\n            std = np.std(v)\n            if std == 0:\n                return np.zeros_like(v)\n            return (v - np.mean(v)) / std\n        \n        z1 = standardize(x1)\n        z2 = standardize(x2)\n        z3 = standardize(x3)\n        \n        # 4. Compute the poising score\n        s = z1 - z2 - z3\n        \n        # 5. Calculate ROC-AUC\n        scores_pos = s[pos_indices]\n        scores_neg = s[neg_indices]\n        \n        n_pos = len(scores_pos)\n        n_neg = len(scores_neg)\n        \n        comparison_sum = 0.0\n        for sp in scores_pos:\n            for sn in scores_neg:\n                if sp > sn:\n                    comparison_sum += 1.0\n                elif sp == sn:\n                    comparison_sum += 0.5\n        \n        roc_auc = comparison_sum / (n_pos * n_neg)\n        return roc_auc\n\n    results = []\n    case_order = ['A', 'B', 'C', 'D']\n    for case_id in case_order:\n        case_data = test_cases[case_id]\n        roc_auc = compute_roc_auc(\n            case_data['x1'],\n            case_data['x2'],\n            case_data['x3'],\n            case_data['et'],\n            case_data['et1'],\n            DELTA_THRESHOLD\n        )\n        results.append(roc_auc)\n        \n    # Format output as a comma-separated list of rounded values in brackets\n    formatted_results = [f\"{r:.4f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2847287"}, {"introduction": "Computational and theoretical models generate powerful hypotheses, but these must ultimately be tested with rigorous experiments. This practice grounds your understanding in the practicalities of experimental design by focusing on a key epigenetic regulator, EZH2, and its role in T-cell differentiation. You will perform a power analysis to determine the minimum sample size needed to statistically validate a hypothesis, a crucial step that ensures an experiment is sensitive enough to draw reliable conclusions. [@problem_id:2847314]", "problem": "You are evaluating how the histone methyltransferase Enhancer of Zeste Homolog 2 (EZH2), a core component of Polycomb Repressive Complex 2, epigenetically regulates T helper 17 (Th17) lineage differentiation. In a flow cytometry assay, each individual cell measured is classified as Th17-positive if it expresses interleukin-17A. Let each cell in a given condition be modeled as an independent Bernoulli trial with success probability equal to the Th17 differentiation frequency in that condition, so that the total number of Th17-positive cells in a sample of size $n$ follows a binomial distribution. Prior measurements in control small interfering RNA (siRNA) conditions give a baseline Th17 frequency of $p_{0} = 0.12$. Based on prior mechanistic data on EZH2-mediated repression, you plan for a two-arm experiment with equal numbers of cells per arm to detect a $20\\%$ relative increase in Th17 frequency after EZH2 knockdown, that is, an alternative $p_{1} = 1.2\\,p_{0}$. Assume a two-sided hypothesis test at significance level $\\alpha = 0.05$ and target power at least $0.8$. Use the large-sample normal approximation to the binomial model for the test of equality of two independent proportions with equal per-arm sample size.\n\nStarting from the definitions of the binomial model and the Central Limit Theorem, and without invoking any unmotivated shortcut formulas, derive an analytical expression for the minimal per-arm sample size $n$ that achieves the design criteria. Then evaluate it numerically for the values above, and report the smallest integer $n$ that satisfies the requirements. Express the final answer as the minimal integer number of cells per arm.", "solution": "The problem as stated is well-posed and internally consistent. It presents a standard task in experimental design—a power calculation for a two-sample test of proportions. All necessary parameters are provided, and the scenario is scientifically sound within the context of immunology and molecular biology. We may therefore proceed directly to the derivation.\n\nLet $n$ be the sample size for each of the two experimental arms. Let $X_0$ and $X_1$ denote the number of Th17-positive cells in the control arm (siRNA control) and the treatment arm (EZH2 knockdown), respectively. According to the problem statement, the number of positive cells in each sample follows a binomial distribution.\n$$\nX_0 \\sim \\text{Binomial}(n, p_0)\n$$\n$$\nX_1 \\sim \\text{Binomial}(n, p_1)\n$$\nHere, $p_0$ is the baseline Th17 frequency, and $p_1$ is the frequency after EZH2 knockdown. The corresponding sample proportions are $\\hat{p}_0 = X_0/n$ and $\\hat{p}_1 = X_1/n$.\n\nFor a sufficiently large sample size $n$, the Central Limit Theorem permits the approximation of the binomial distribution by a normal distribution. The distributions of the sample proportions are approximated as:\n$$\n\\hat{p}_0 \\approx \\mathcal{N}\\left(p_0, \\frac{p_0(1-p_0)}{n}\\right)\n$$\n$$\n\\hat{p}_1 \\approx \\mathcal{N}\\left(p_1, \\frac{p_1(1-p_1)}{n}\\right)\n$$\nSince the two samples are independent, the distribution of the difference in sample proportions, $\\hat{p}_1 - \\hat{p}_0$, is also approximately normal, with mean $p_1 - p_0$ and variance equal to the sum of the individual variances:\n$$\n\\hat{p}_1 - \\hat{p}_0 \\approx \\mathcal{N}\\left(p_1 - p_0, \\frac{p_0(1-p_0)}{n} + \\frac{p_1(1-p_1)}{n}\\right)\n$$\nWe are performing a two-sided hypothesis test to assess the equality of the two proportions. The null and alternative hypotheses are:\n$$\nH_0: p_1 = p_0\n$$\n$$\nH_1: p_1 \\neq p_0\n$$\nUnder the null hypothesis $H_0$, the two proportions are equal to some common value $p$. The variance of the difference simplifies to $\\frac{2p(1-p)}{n}$. A test statistic is constructed by standardizing the observed difference $\\hat{p}_1 - \\hat{p}_0$. For the standard error, we use a pooled estimate of the common proportion $p$, which is $\\hat{p}_{\\text{pool}} = \\frac{X_0 + X_1}{2n} = \\frac{\\hat{p}_0 + \\hat{p}_1}{2}$. The test statistic is:\n$$\nZ = \\frac{\\hat{p}_1 - \\hat{p}_0}{\\sqrt{\\hat{p}_{\\text{pool}}(1-\\hat{p}_{\\text{pool}})\\left(\\frac{1}{n} + \\frac{1}{n}\\right)}} = \\frac{\\hat{p}_1 - \\hat{p}_0}{\\sqrt{\\frac{2\\hat{p}_{\\text{pool}}(1-\\hat{p}_{\\text{pool}})}{n}}}\n$$\nUnder $H_0$, this statistic $Z$ follows a standard normal distribution, $\\mathcal{N}(0, 1)$.\n\nThe test is conducted at a significance level of $\\alpha$. For a two-sided test, we reject $H_0$ if the absolute value of the test statistic exceeds the critical value $z_{\\alpha/2}$, where $z_{\\alpha/2}$ is the upper $\\alpha/2$ quantile of the standard normal distribution. That is, we reject $H_0$ if $|Z| > z_{\\alpha/2}$.\n\nPower is the probability of correctly rejecting $H_0$ when $H_1$ is true. It is denoted by $1-\\beta$, where $\\beta$ is the probability of a Type II error. The power is given by:\n$$\n\\text{Power} = P(\\text{Reject } H_0 \\mid H_1 \\text{ is true}) = P(|Z| > z_{\\alpha/2} \\mid H_1)\n$$\nFor a power calculation, which is performed before the experiment, we do not have sample data to compute $\\hat{p}_{\\text{pool}}$. We therefore replace it with its expected value. Under $H_1$, the expected value of $\\hat{p}_{\\text{pool}}$ is $\\frac{p_0+p_1}{2}$, which we denote as $\\bar{p}$. The rejection criterion is thus approximated as $|\\hat{p}_1 - \\hat{p}_0| > z_{\\alpha/2}\\sqrt{\\frac{2\\bar{p}(1-\\bar{p})}{n}}$.\n\nThe specific alternative for which we are designing the experiment is $p_1 = 1.2 p_0 > p_0$. In this case, the distribution of $\\hat{p}_1 - \\hat{p}_0$ is centered at a positive value, $p_1 - p_0 > 0$. The probability of rejecting $H_0$ by observing a large negative value for $\\hat{p}_1 - \\hat{p}_0$ (i.e., in the lower tail) is negligible. Thus, the power is dominated by the upper tail of the rejection region:\n$$\n1-\\beta \\approx P\\left(\\hat{p}_1 - \\hat{p}_0 > z_{\\alpha/2}\\sqrt{\\frac{2\\bar{p}(1-\\bar{p})}{n}} \\mid H_1\\right)\n$$\nTo evaluate this probability, we must standardize the term $\\hat{p}_1 - \\hat{p}_0$ using its distribution under $H_1$. Under $H_1$, the mean is $p_1 - p_0$ and the variance is $\\sigma^2_{H_1} = \\frac{p_0(1-p_0) + p_1(1-p_1)}{n}$.\n$$\n1-\\beta \\approx P\\left(\\frac{(\\hat{p}_1 - \\hat{p}_0) - (p_1 - p_0)}{\\sqrt{\\frac{p_0(1-p_0) + p_1(1-p_1)}{n}}} > \\frac{z_{\\alpha/2}\\sqrt{\\frac{2\\bar{p}(1-\\bar{p})}{n}} - (p_1-p_0)}{\\sqrt{\\frac{p_0(1-p_0) + p_1(1-p_1)}{n}}}\\right)\n$$\nThe expression on the left inside the probability is a standard normal variable. Let's call it $Z'$. For $P(Z' > k) = 1-\\beta$, the argument $k$ must be equal to $z_{1-\\beta} = -z_{\\beta}$. Therefore:\n$$\n\\frac{z_{\\alpha/2}\\sqrt{\\frac{2\\bar{p}(1-\\bar{p})}{n}} - (p_1-p_0)}{\\sqrt{\\frac{p_0(1-p_0) + p_1(1-p_1)}{n}}} = -z_{\\beta}\n$$\nWe now solve for the per-arm sample size $n$.\n$$\nz_{\\alpha/2}\\frac{\\sqrt{2\\bar{p}(1-\\bar{p})}}{\\sqrt{n}} - (p_1-p_0) = -z_{\\beta}\\frac{\\sqrt{p_0(1-p_0) + p_1(1-p_1)}}{\\sqrt{n}}\n$$\n$$\np_1-p_0 = \\frac{1}{\\sqrt{n}} \\left( z_{\\alpha/2}\\sqrt{2\\bar{p}(1-\\bar{p})} + z_{\\beta}\\sqrt{p_0(1-p_0) + p_1(1-p_1)} \\right)\n$$\nSquaring both sides and isolating $n$ yields the analytical expression for the minimum sample size per arm:\n$$\nn = \\frac{\\left( z_{\\alpha/2}\\sqrt{2\\bar{p}(1-\\bar{p})} + z_{\\beta}\\sqrt{p_0(1-p_0) + p_1(1-p_1)} \\right)^2}{(p_1-p_0)^2}\n$$\nNow, we substitute the specified numerical values into this expression.\nThe given values are:\n- Baseline frequency: $p_0 = 0.12$\n- Alternative frequency: $p_1 = 1.2 \\times p_0 = 1.2 \\times 0.12 = 0.144$\n- Significance level: $\\alpha = 0.05$\n- Power: $1-\\beta = 0.8$, so $\\beta = 0.2$\n\nFrom these, we find the corresponding quantiles of the standard normal distribution:\n- For a two-sided test, $z_{\\alpha/2} = z_{0.05/2} = z_{0.025} \\approx 1.95996$.\n- For power, $z_{\\beta} = z_{0.2} \\approx 0.84162$.\n\nWe calculate the necessary components for the formula:\n- Difference in proportions: $p_1 - p_0 = 0.144 - 0.12 = 0.024$\n- Pooled proportion for the test statistic variance: $\\bar{p} = \\frac{p_0 + p_1}{2} = \\frac{0.12 + 0.144}{2} = 0.132$\n- Variance term for the test statistic: $2\\bar{p}(1-\\bar{p}) = 2 \\times 0.132 \\times (1 - 0.132) = 0.229152$\n- Variance term for the alternative distribution: $p_0(1-p_0) + p_1(1-p_1) = 0.12(0.88) + 0.144(0.856) = 0.1056 + 0.123264 = 0.228864$\n\nSubstituting these into the expression for $n$:\n$$\nn = \\frac{\\left( 1.95996 \\sqrt{0.229152} + 0.84162 \\sqrt{0.228864} \\right)^2}{(0.024)^2}\n$$\n$$\nn = \\frac{\\left( 1.95996 \\times 0.478698 + 0.84162 \\times 0.478397 \\right)^2}{0.000576}\n$$\n$$\nn = \\frac{\\left( 0.93823 + 0.40263 \\right)^2}{0.000576}\n$$\n$$\nn = \\frac{(1.34086)^2}{0.000576} = \\frac{1.79791}{0.000576} \\approx 3121.37\n$$\nSince the number of cells must be an integer, we must take the ceiling of this value to ensure the power is at least $0.8$.\n$$\nn = \\lceil 3121.37 \\rceil = 3122\n$$\nThus, the minimal number of cells required per arm to achieve the specified design criteria is $3122$.", "answer": "$$\n\\boxed{3122}\n$$", "id": "2847314"}]}