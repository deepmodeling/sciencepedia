{"hands_on_practices": [{"introduction": "The discovery of neoantigens from tumor sequencing data yields a large pool of candidates, necessitating a robust method for prioritization. This exercise simulates this critical step by introducing a scoring model that quantitatively integrates key determinants of immunogenicity: MHC binding affinity, antigen abundance via gene expression, and the mutation's clonal status. By applying this model, you will gain hands-on experience in ranking neoantigen candidates, a foundational task in the design of personalized cancer vaccines. [@problem_id:2875760]", "problem": "A tumor exome and transcriptome analysis yields five candidate neoepitope peptides predicted to bind a given Major Histocompatibility Complex (MHC) class I allele. For each peptide, you are given the half-maximal inhibitory concentration (IC50) in nanomolar, the messenger RNA expression in Transcripts Per Million (TPM), and a clonality flag where clonal status is encoded as $c = 1$ (clonal) or $c = 0$ (subclonal). \n\nConsider the following scoring model $S$ motivated by fundamental immunological principles: the probability that a peptide is presented increases as binding affinity (inverse of IC50) improves, antigen abundance scales with expression, and clonal mutations are prioritized because they are present in all tumor cells. To capture these effects, define for each peptide $i$ the score\n$$\nS_i \\;=\\; P_{\\text{bind}}(x_i)\\;\\times\\;A(e_i)\\;\\times\\;\\bigl(1 + \\beta\\,c_i\\bigr),\n$$\nwhere $x_i$ is the IC50 (in $\\text{nM}$), $e_i$ is the TPM, $c_i \\in \\{0,1\\}$ is the clonality flag, and\n$$\nP_{\\text{bind}}(x) \\;=\\; \\frac{1}{\\,1 + \\bigl(\\frac{x}{K}\\bigr)^{h}\\,}, \n\\qquad\nA(e) \\;=\\; \\ln\\!\\bigl(1 + e\\bigr).\n$$\nUse the parameters $K = 500$ $\\text{nM}$, $h = 1$, and $\\beta = 0.3$. The natural logarithm must be used in $A(e)$. The score $S_i$ is dimensionless; report all scores as unitless values.\n\nData for the five peptides:\n- Peptide $\\mathrm{P1}$: $\\mathrm{IC50} = 50$ $\\text{nM}$, $\\mathrm{TPM} = 10$, $c = 1$.\n- Peptide $\\mathrm{P2}$: $\\mathrm{IC50} = 200$ $\\text{nM}$, $\\mathrm{TPM} = 80$, $c = 0$.\n- Peptide $\\mathrm{P3}$: $\\mathrm{IC50} = 800$ $\\text{nM}$, $\\mathrm{TPM} = 120$, $c = 1$.\n- Peptide $\\mathrm{P4}$: $\\mathrm{IC50} = 30$ $\\text{nM}$, $\\mathrm{TPM} = 2$, $c = 0$.\n- Peptide $\\mathrm{P5}$: $\\mathrm{IC50} = 1500$ $\\text{nM}$, $\\mathrm{TPM} = 50$, $c = 1$.\n\nTasks:\n- Compute $S_i$ for each peptide using the model above and produce the descending ranking by $S_i$.\n- What is the score $S$ of the top-ranked peptide? Round your answer to four significant figures. Express the final result as a unitless value.", "solution": "We begin from three core, well-tested immunological considerations: \n(1) Peptide–MHC binding is necessary for presentation, and stronger binding (lower half-maximal inhibitory concentration (IC50)) increases the probability of presentation. A standard saturating transform consistent with ligand–receptor binding is a Hill-type function $P_{\\text{bind}}(x) = 1/\\bigl(1 + (x/K)^{h}\\bigr)$ with $h \\ge 1$, which decreases with increasing $x$. \n(2) Antigen availability scales with expression; a monotonic, diminishing-returns transform often used for transcript counts is the natural logarithm $A(e) = \\ln(1+e)$, which is increasing in $e$ but compresses large values. \n(3) Clonality increases population-level target coverage; a simple multiplicative boost $(1 + \\beta c)$ with $\\beta > 0$ models the increased priority for clonal variants ($c=1$) versus subclonal ($c=0$).\n\nGiven $K = 500$ $\\text{nM}$, $h = 1$, and $\\beta = 0.3$, the score for peptide $i$ is\n$$\nS_i \\;=\\; \\frac{1}{1 + \\frac{x_i}{500}}\\;\\times\\;\\ln(1 + e_i)\\;\\times\\;(1 + 0.3\\,c_i).\n$$\nAll $S_i$ are dimensionless since $P_{\\text{bind}}$ and $(1+\\beta c)$ are unitless and $\\ln(\\cdot)$ is unitless.\n\nCompute each component for the five peptides.\n\nFor $\\mathrm{P1}$ with $x_1 = 50$, $e_1 = 10$, $c_1 = 1$:\n$$\nP_{\\text{bind}}(50) = \\frac{1}{1 + \\frac{50}{500}} = \\frac{1}{1.1}, \\qquad A(10) = \\ln(11), \\qquad (1 + 0.3 c_1) = 1.3.\n$$\nThus\n$$\nS_1 = \\frac{1}{1.1}\\,\\ln(11)\\,\\times 1.3 \\approx 0.9090909 \\times 2.397895273 \\times 1.3 \\approx 2.833876231.\n$$\n\nFor $\\mathrm{P2}$ with $x_2 = 200$, $e_2 = 80$, $c_2 = 0$:\n$$\nP_{\\text{bind}}(200) = \\frac{1}{1 + \\frac{200}{500}} = \\frac{1}{1.4}, \\qquad A(80) = \\ln(81), \\qquad (1 + 0.3 c_2) = 1.\n$$\nThus\n$$\nS_2 = \\frac{1}{1.4}\\,\\ln(81) \\approx 0.714285714 \\times 4.394449155 \\approx 3.138892253.\n$$\n\nFor $\\mathrm{P3}$ with $x_3 = 800$, $e_3 = 120$, $c_3 = 1$:\n$$\nP_{\\text{bind}}(800) = \\frac{1}{1 + \\frac{800}{500}} = \\frac{1}{2.6}, \\qquad A(120) = \\ln(121), \\qquad (1 + 0.3 c_3) = 1.3.\n$$\nThus\n$$\nS_3 = \\frac{1}{2.6}\\,\\ln(121)\\,\\times 1.3 = \\left(\\frac{1.3}{2.6}\\right)\\ln(121) = \\frac{1}{2}\\,\\ln(121) \\approx 0.5 \\times 4.795790546 \\approx 2.397895273.\n$$\n\nFor $\\mathrm{P4}$ with $x_4 = 30$, $e_4 = 2$, $c_4 = 0$:\n$$\nP_{\\text{bind}}(30) = \\frac{1}{1 + \\frac{30}{500}} = \\frac{1}{1.06}, \\qquad A(2) = \\ln(3), \\qquad (1 + 0.3 c_4) = 1.\n$$\nThus\n$$\nS_4 = \\frac{1}{1.06}\\,\\ln(3) \\approx 0.943396226 \\times 1.098612289 \\approx 1.036424794.\n$$\n\nFor $\\mathrm{P5}$ with $x_5 = 1500$, $e_5 = 50$, $c_5 = 1$:\n$$\nP_{\\text{bind}}(1500) = \\frac{1}{1 + \\frac{1500}{500}} = \\frac{1}{4}, \\qquad A(50) = \\ln(51), \\qquad (1 + 0.3 c_5) = 1.3.\n$$\nThus\n$$\nS_5 = \\frac{1}{4}\\,\\ln(51)\\,\\times 1.3 \\approx 0.25 \\times 3.931825633 \\times 1.3 \\approx 1.277843331.\n$$\n\nRanking the peptides by descending $S_i$:\n$$\nS_2 \\approx 3.138892253 \\;>\\; S_1 \\approx 2.833876231 \\;>\\; S_3 \\approx 2.397895273 \\;>\\; S_5 \\approx 1.277843331 \\;>\\; S_4 \\approx 1.036424794.\n$$\nTherefore, the top-ranked peptide is $\\mathrm{P2}$ with score $S_2 \\approx 3.138892253$. Rounding to four significant figures gives\n$$\nS_{\\text{top}} \\approx 3.139.\n$$\nThe score is unitless as required.", "answer": "$$\\boxed{3.139}$$", "id": "2875760"}, {"introduction": "Selecting the final payload for a personalized cancer vaccine is not simply a matter of picking the highest-scoring individual candidates. To maximize efficacy and mitigate immune escape, the chosen set must guarantee a broad and multifaceted attack, covering multiple HLA class I alleles for CD8$^{+}$ T cell responses and including HLA class II epitopes to recruit CD4$^{+}$ T cell help. This exercise formalizes this multi-objective challenge as a constraint optimization problem, providing practice in a sophisticated computational approach to assemble an optimal neoantigen cocktail. [@problem_id:2875592]", "problem": "A patient-specific cancer vaccine aims to include neoantigen constructs such that cytotoxic T lymphocytes (CD8$^{+}$ T cells) and helper T lymphocytes (CD4$^{+}$ T cells) are both recruited. Well-tested immunological principles establish that CD8$^{+}$ T cells are primed by peptides presented on Human Leukocyte Antigen (HLA) class I, while CD4$^{+}$ T cells are primed by peptides presented on HLA class II. For a given patient, coverage across multiple HLA class I alleles increases the breadth of CD8$^{+}$ responses, and coverage of at least one HLA class II allele supports CD4$^{+}$ help and vaccine immunogenicity. Assume each candidate neoantigen is a long peptide (for example, a $25$-mer) from a tumor-specific mutation that may generate both HLA class I and HLA class II epitopes. For each candidate and each patient HLA allele, a validated predictor provides a binary indicator of potential presentation.\n\nYou are given the following patient HLA genotype and $7$ candidate neoantigen constructs. Let the set of HLA class I alleles be $\\mathcal{A}_{I} = \\{\\text{A*02:01}, \\text{B*07:02}, \\text{C*07:02}\\}$ and the set of HLA class II alleles be $\\mathcal{A}_{II} = \\{\\text{DRB1*04:01}, \\text{DPB1*04:01}\\}$. For each candidate $i \\in \\{1,\\dots,7\\}$, an aggregate neoantigen score $s_i$ is provided, and for each allele $a \\in \\mathcal{A}_{I} \\cup \\mathcal{A}_{II}$, a binary binding indicator $b_{i,a} \\in \\{0,1\\}$ indicates whether candidate $i$ is predicted to be presented by allele $a$.\n\n- Candidate $n_1$: score $s_1 = 9$; binds class I alleles $\\{\\text{A*02:01}, \\text{B*07:02}\\}$; binds no class II allele.\n- Candidate $n_2$: score $s_2 = 8$; binds class I alleles $\\{\\text{A*02:01}, \\text{C*07:02}\\}$; binds class II allele $\\{\\text{DRB1*04:01}\\}$.\n- Candidate $n_3$: score $s_3 = 7$; binds class I allele $\\{\\text{B*07:02}\\}$; binds class II allele $\\{\\text{DPB1*04:01}\\}$.\n- Candidate $n_4$: score $s_4 = 6$; binds class I allele $\\{\\text{C*07:02}\\}$; binds no class II allele.\n- Candidate $n_5$: score $s_5 = 5$; binds class I allele $\\{\\text{A*02:01}\\}$; binds class II alleles $\\{\\text{DRB1*04:01}, \\text{DPB1*04:01}\\}$.\n- Candidate $n_6$: score $s_6 = 4$; binds class I alleles $\\{\\text{B*07:02}, \\text{C*07:02}\\}$; binds no class II allele.\n- Candidate $n_7$: score $s_7 = 3$; binds no class I allele; binds class II allele $\\{\\text{DPB1*04:01}\\}$.\n\nYou must formulate a constraint optimization problem from first principles to select exactly $k$ neoantigen constructs, where $k = 3$, to maximize the total score, while ensuring coverage across at least $2$ distinct HLA class I alleles and at least $1$ HLA class II allele in the patient. Use binary decision variables and linear constraints only.\n\nTasks:\n- Define decision variables, parameters, objective function, and constraints as a binary integer linear program that captures the selection objective and the class I/class II coverage requirements based on the binding indicators.\n- Solve your formulation on the given data to compute the maximum achievable total score with $k=3$. Report only the optimal objective value as your final answer. Do not round; provide the exact value with no units.", "solution": "The problem requires the formulation and solution of a binary integer linear program (BILP).\n\n**1. Formulation of the Binary Integer Linear Program**\n\nLet the set of neoantigen candidates be $\\mathcal{N} = \\{1, 2, 3, 4, 5, 6, 7\\}$.\nLet the patient's HLA class I alleles be indexed by $j \\in \\{1, 2, 3\\}$, corresponding to $\\{\\text{A*02:01}, \\text{B*07:02}, \\text{C*07:02}\\}$.\nLet the patient's HLA class II alleles be indexed by $k \\in \\{1, 2\\}$, corresponding to $\\{\\text{DRB1*04:01}, \\text{DPB1*04:01}\\}$.\n\n**Parameters:**\n- $s_i$: The score of candidate $i \\in \\mathcal{N}$.\n- $b_{i,j}^{I} \\in \\{0,1\\}$: Binary indicator which is $1$ if candidate $i$ binds to class I allele $j$, and $0$ otherwise.\n- $b_{i,k}^{II} \\in \\{0,1\\}$: Binary indicator which is $1$ if candidate $i$ binds to class II allele $k$, and $0$ otherwise.\n- $K=3$: The number of candidates to select.\n- $C_I=2$: The minimum number of class I alleles to cover.\n- $C_{II}=1$: The minimum number of class II alleles to cover.\n\n**Decision Variables:**\n- $x_i \\in \\{0, 1\\}$ for each candidate $i \\in \\mathcal{N}$: $x_i=1$ if candidate $i$ is selected, $0$ otherwise.\n- $y_j \\in \\{0, 1\\}$ for each class I allele $j \\in \\{1, 2, 3\\}$: $y_j=1$ if class I allele $j$ is covered by at least one selected candidate, $0$ otherwise.\n- $z_k \\in \\{0, 1\\}$ for each class II allele $k \\in \\{1, 2\\}$: $z_k=1$ if class II allele $k$ is covered by at least one selected candidate, $0$ otherwise.\n\n**Objective Function:**\nThe objective is to maximize the sum of scores of the selected candidates.\n$$ \\text{Maximize} \\sum_{i=1}^{7} s_i x_i $$\n\n**Constraints:**\n1.  Select exactly $K$ candidates:\n    $$ \\sum_{i=1}^{7} x_i = 3 $$\n2.  Ensure minimum coverage of class I alleles:\n    $$ \\sum_{j=1}^{3} y_j \\ge 2 $$\n3.  Ensure minimum coverage of class II alleles:\n    $$ \\sum_{k=1}^{2} z_k \\ge 1 $$\n4.  Link candidate selection to class I allele coverage. For each class I allele $j \\in \\{1, 2, 3\\}$:\n    $$ \\sum_{i=1}^{7} b_{i,j}^{I} x_i \\ge y_j $$\n    This set of constraints enforces that $y_j$ can only be $1$ if the sum on the left is at least $1$, which means at least one selected candidate binds to allele $j$.\n5.  Link candidate selection to class II allele coverage. For each class II allele $k \\in \\{1, 2\\}$:\n    $$ \\sum_{i=1}^{7} b_{i,k}^{II} x_i \\ge z_k $$\n6.  The variables must be binary:\n    $$ x_i \\in \\{0, 1\\} \\quad \\forall i \\in \\{1, \\dots, 7\\} $$\n    $$ y_j \\in \\{0, 1\\} \\quad \\forall j \\in \\{1, 2, 3\\} $$\n    $$ z_k \\in \\{0, 1\\} \\quad \\forall k \\in \\{1, 2\\} $$\n\n**2. Solving the Optimization Problem**\n\nThe number of ways to choose $3$ candidates from $7$ is $\\binom{7}{3} = \\frac{7 \\cdot 6 \\cdot 5}{3 \\cdot 2 \\cdot 1} = 35$, a number small enough for systematic evaluation. We seek the feasible combination with the highest total score. We can test combinations in descending order of their total score.\n\nThe candidates sorted by score are: $n_1 (s_1=9), n_2 (s_2=8), n_3 (s_3=7), n_4 (s_4=6), n_5 (s_5=5), n_6 (s_6=4), n_7 (s_7=3)$.\n\nLet us first summarize the binding data:\n- $n_1 (9)$: Class I: $\\{\\text{A*02:01}, \\text{B*07:02}\\}$, Class II: $\\emptyset$\n- $n_2 (8)$: Class I: $\\{\\text{A*02:01}, \\text{C*07:02}\\}$, Class II: $\\{\\text{DRB1*04:01}\\}$\n- $n_3 (7)$: Class I: $\\{\\text{B*07:02}\\}$, Class II: $\\{\\text{DPB1*04:01}\\}$\n- $n_4 (6)$: Class I: $\\{\\text{C*07:02}\\}$, Class II: $\\emptyset$\n- $n_5 (5)$: Class I: $\\{\\text{A*02:01}\\}$, Class II: $\\{\\text{DRB1*04:01}, \\text{DPB1*04:01}\\}$\n- $n_6 (4)$: Class I: $\\{\\text{B*07:02}, \\text{C*07:02}\\}$, Class II: $\\emptyset$\n- $n_7 (3)$: Class I: $\\emptyset$, Class II: $\\{\\text{DPB1*04:01}\\}$\n\nThe highest possible score is from the combination of the top three candidates: $\\{n_1, n_2, n_3\\}$.\n- **Combination:** $\\{n_1, n_2, n_3\\}$\n- **Total Score:** $s_1 + s_2 + s_3 = 9 + 8 + 7 = 24$.\n- **Check Feasibility:**\n  - **Class I Allele Coverage**:\n    - $n_1$ covers $\\{\\text{A*02:01}, \\text{B*07:02}\\}$.\n    - $n_2$ covers $\\{\\text{A*02:01}, \\text{C*07:02}\\}$.\n    - $n_3$ covers $\\{\\text{B*07:02}\\}$.\n    - The union of covered Class I alleles is $\\{\\text{A*02:01}, \\text{B*07:02}, \\text{C*07:02}\\}$.\n    - The number of distinct covered Class I alleles is $3$. Since $3 \\ge 2$, this constraint is satisfied.\n  - **Class II Allele Coverage**:\n    - $n_1$ covers $\\emptyset$.\n    - $n_2$ covers $\\{\\text{DRB1*04:01}\\}$.\n    - $n_3$ covers $\\{\\text{DPB1*04:01}\\}$.\n    - The union of covered Class II alleles is $\\{\\text{DRB1*04:01}, \\text{DPB1*04:01}\\}$.\n    - The number of distinct covered Class II alleles is $2$. Since $2 \\ge 1$, this constraint is satisfied.\n\nThe combination $\\{n_1, n_2, n_3\\}$ is feasible and yields a total score of $24$. Any other combination of $3$ candidates must involve substituting at least one of $\\{n_1, n_2, n_3\\}$ with a candidate of a lower score. This would necessarily result in a total score strictly less than $24$. For example, the next highest-scoring combination, $\\{n_1, n_2, n_4\\}$, has a score of $9+8+6 = 23$. Since we have found a feasible solution with a score of $24$, this must be the maximum possible score.\n\nTherefore, the optimal objective value is $24$.", "answer": "$$\n\\boxed{24}\n$$", "id": "2875592"}, {"introduction": "Bridging the gap from vaccine design to predicted clinical effect requires a systems-level understanding of tumor-immune dynamics. This practice guides you in constructing and simulating a mathematical model that captures the essential interactions between a growing tumor, vaccine-primed T cells, and the immunosuppressive PD-1/PD-L1 checkpoint axis. By numerically solving this system of ordinary differential equations, you will gain insight into how vaccine quality and combination therapy with checkpoint blockade dynamically influence tumor control, a key goal of translational immuno-oncology. [@problem_id:2875666]", "problem": "Construct, justify, and implement a minimal but mechanistically faithful ordinary differential equation (ODE) model for tumor control by vaccine-primed cytotoxic T lymphocytes in the presence of Programmed cell death protein 1 (PD-1) inhibitory signaling and its blockade. Your model must start from the following fundamental bases and core definitions without invoking any shortcut formulas beyond these:\n\n- Population dynamics for target and effector cells based on mass balance: net tumor growth as a baseline proliferation term minus an immune-mediated loss term, and effector T cell population as a source minus a decay term.\n- Mass-action killing: the rate at which effector T cells eliminate tumor cells is proportional to the product of tumor and effector populations with a per-capita killing coefficient.\n- Receptor–ligand equilibrium occupancy: the fraction of receptor molecules engaged by ligand at quasi-steady state follows a saturation curve consistent with elementary binding equilibrium.\n- Mechanistic checkpoint inhibition: PD-1 signaling reduces the effective per-capita killing coefficient, and antibody checkpoint blockade reduces the effective signaling by competitively blocking receptor–ligand engagement.\n\nFrom these bases, derive a self-consistent two-compartment ODE system for tumor cells $N(t)$ (in cells) and effector T cells $E(t)$ (in cells) with the following structure and parameter meanings:\n\n1) Tumor dynamics combine logistic growth and T cell-mediated killing:\n$$\n\\frac{dN}{dt} = r\\,N\\left(1 - \\frac{N}{K}\\right) - k_{\\mathrm{eff}}\\,E\\,N,\n$$\nwhere $r$ is the tumor net proliferation rate (in $\\mathrm{day}^{-1}$), $K$ is the tumor carrying capacity (in cells), and $k_{\\mathrm{eff}}$ is the effective per-capita killing coefficient (in $\\mathrm{cell}^{-1}\\,\\mathrm{day}^{-1}$) after PD-1 modulation.\n\n2) Effector T cell dynamics combine a baseline source, vaccine-driven priming, and natural decay:\n$$\n\\frac{dE}{dt} = s_{\\mathrm{base}} + p_{\\mathrm{vac}}\\,Q\\,g(t) - d_E\\,E,\n$$\nwhere $s_{\\mathrm{base}}$ is a baseline influx (in cells/day), $p_{\\mathrm{vac}}$ is a vaccine priming amplitude (in cells/day), $Q \\in [0,1]$ is a scalar quality of the personalized neoantigen vaccine, $d_E$ is the effector decay rate (in $\\mathrm{day}^{-1}$), and $g(t)$ is a unimodal pulse centered at time $t_0$ with width $\\sigma$, for which you must use\n$$\ng(t) = \\exp\\!\\left(-\\frac{(t - t_0)^2}{2\\,\\sigma^2}\\right).\n$$\n\n3) PD-1 signaling reduces the intrinsic killing coefficient $k_0$ to an effective value $k_{\\mathrm{eff}}$ via the scaled signaling activity $S$:\n$$\nk_{\\mathrm{eff}} = \\frac{k_0}{1 + \\alpha\\,S},\n$$\nwhere $\\alpha$ is a dimensionless potency of inhibition and $S$ depends on receptor occupancy. Let the fraction of PD-1 receptors engaged by Programmed death-ligand 1 (PD-L1) be\n$$\n\\theta = \\frac{L}{L + K_d},\n$$\nwhere $L$ is the ligand level in units normalized to the dissociation constant $K_d$ (so $K_d$ is a positive scalar with the same units as $L$). An antibody with concentration $A$ (in the same arbitrary units as an inhibitory concentration parameter) blocks a fraction\n$$\nB = \\frac{A}{A + IC_{50}},\n$$\nof PD-1:PD-L1 engagements. The net signaling activity is then\n$$\nS = \\theta\\,(1 - B).\n$$\n\nUse the following parameter values and initial conditions, which are scientifically plausible and self-consistent for a mesoscale tumor–immune interaction over weeks:\n- $r = 0.02$ (in $\\mathrm{day}^{-1}$),\n- $K = 10^9$ (in cells),\n- $k_0 = 10^{-9}$ (in $\\mathrm{cell}^{-1}\\,\\mathrm{day}^{-1}$),\n- $\\alpha = 9$ (dimensionless),\n- $K_d = 1$ (arbitrary concentration units),\n- $IC_{50} = 1$ (same arbitrary concentration units),\n- $s_{\\mathrm{base}} = 10^4$ (in cells/day),\n- $p_{\\mathrm{vac}} = 5\\times 10^5$ (in cells/day),\n- $d_E = 0.05$ (in $\\mathrm{day}^{-1}$),\n- $t_0 = 7$ (in days),\n- $\\sigma = 3$ (in days),\n- $N(0) = 10^8$ (in cells),\n- $E(0) = 10^5$ (in cells).\n\nSimulate the system on the time interval $t \\in [0, T]$ with $T = 60$ (in days). You may assume $L$, $A$, and $Q$ are constant in time for each scenario, which makes $k_{\\mathrm{eff}}$ constant within a scenario via the above relations. Use a fixed-step explicit numerical integrator with time step $\\Delta t = 0.1$ (in days) that is at least fourth-order accurate in time for smooth right-hand sides. Ensure numerical non-negativity by preventing $N(t)$ or $E(t)$ from becoming negative during integration.\n\nYour program must compute, for each test case, the dimensionless tumor control ratio\n$$\nR = \\frac{N(T)}{N(0)}.\n$$\nNo physical unit is required for $R$ because it is a ratio. Report each $R$ rounded to exactly four digits after the decimal point.\n\nTest suite. For the five scenarios below, compute and return $R$ for each:\n\n- Case $1$ (no blockade, moderate vaccine, typical ligand): $(A, Q, L) = (0, 0.5, 1)$.\n- Case $2$ (strong blockade, moderate vaccine, typical ligand): $(A, Q, L) = (10, 0.5, 1)$.\n- Case $3$ (strong blockade, no vaccine, typical ligand): $(A, Q, L) = (10, 0, 1)$.\n- Case $4$ (no blockade, strong vaccine, typical ligand): $(A, Q, L) = (0, 1, 1)$.\n- Case $5$ (ligand absent boundary case, strong blockade): $(A, Q, L) = (10, 0.5, 0)$.\n\nFinal output format. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the cases above, for example, $\"[r_1,r_2,r_3,r_4,r_5]\"$, where each $r_i$ is the rounded value of $R$ for case $i$ with exactly four digits after the decimal point. The program must be self-contained, require no user input, and perform all computations internally.", "solution": "The model is a two-compartment system describing the temporal evolution of the tumor cell population, $N(t)$, and the effector T cell population, $E(t)$.\n\nThe first equation governs the tumor cell population:\n$$\n\\frac{dN}{dt} = r\\,N\\left(1 - \\frac{N}{K}\\right) - k_{\\mathrm{eff}}\\,E\\,N\n$$\nThis equation represents a mass balance for tumor cells. The first term, $r\\,N(1 - N/K)$, is the logistic growth model. It describes intrinsic tumor proliferation at a low-density rate $r$, which is tempered by resource limitation or overcrowding as the population $N$ approaches the carrying capacity $K$. The second term, $-k_{\\mathrm{eff}}\\,E\\,N$, models the elimination of tumor cells by effector T cells. This is a mass-action term, stating that the rate of killing is proportional to the frequency of encounters between predator (T cells, $E$) and prey (tumor cells, $N$), with a specific killing coefficient $k_{\\mathrm{eff}}$.\n\nThe second equation governs the effector T cell population:\n$$\n\\frac{dE}{dt} = s_{\\mathrm{base}} + p_{\\mathrm{vac}}\\,Q\\,g(t) - d_E\\,E\n$$\nThis is a source-sink model for effector T cells. The term $s_{\\mathrm{base}}$ represents a constant, baseline influx of effector cells from sources such as the thymus or homeostatic proliferation. The term $p_{\\mathrm{vac}}\\,Q\\,g(t)$ models the priming of a new wave of T cells by a personalized vaccine. Here, $p_{\\mathrm{vac}}$ is the maximum priming rate, $Q \\in [0, 1]$ is the quality of the vaccine (reflecting the immunogenicity of the targeted neoantigens), and $g(t)$ is a temporal profile of the priming effect. The specified function\n$$\ng(t) = \\exp\\!\\left(-\\frac{(t - t_0)^2}{2\\,\\sigma^2}\\right)\n$$\nis a Gaussian pulse, representing a transient response that peaks at time $t_0$ and has a characteristic duration related to $\\sigma$. Finally, the term $-d_E\\,E$ represents the natural first-order decay or death of effector T cells at a rate $d_E$.\n\nThe crucial link between the immune checkpoint mechanism and population dynamics is the effective killing rate, $k_{\\mathrm{eff}}$. It is not a constant but is modulated by signaling through the PD-1 receptor. The intrinsic killing rate is $k_0$. This is downregulated by PD-1 signaling activity, $S$, according to the formula:\n$$\nk_{\\mathrm{eff}} = \\frac{k_0}{1 + \\alpha\\,S}\n$$\nThis is a standard inhibitory function, where $\\alpha$ represents the potency of the signaling pathway. The signal $S$ itself is proportional to the fraction of PD-1 receptors engaged by their ligand, PD-L1, but this engagement can be blocked by a therapeutic antibody.\n\nThe fraction of PD-1 receptors bound by the ligand PD-L1, denoted $L$, is given by the law of mass action at equilibrium:\n$$\n\\theta = \\frac{L}{L + K_d}\n$$\nThis is the standard Hill-Langmuir equation for single-site binding, where $K_d$ is the dissociation constant. The ligand level $L$ is normalized such that $L=K_d$ corresponds to $50\\%$ receptor occupancy.\n\nA checkpoint inhibitor antibody, with concentration $A$, competes with PD-L1 for PD-1. The problem simplifies this by stating that the antibody blocks a fraction $B$ of potential engagements, where $B$ also follows a saturation curve:\n$$\nB = \\frac{A}{A + IC_{50}}\n$$\nHere, $IC_{50}$ is the concentration of antibody required to achieve $50\\%$ of its maximal blocking effect.\n\nThe net signaling activity $S$ is thus the fraction of receptors that would be engaged, $\\theta$, multiplied by the fraction of those engagements that are *not* blocked by the antibody, $(1-B)$:\n$$\nS = \\theta\\,(1 - B)\n$$\nBy substituting the expressions for $\\theta$ and $B$, we obtain a complete formula for $k_{\\mathrm{eff}}$ that depends on the scenario parameters $L$ and $A$:\n$$\nk_{\\mathrm{eff}}(L, A) = \\frac{k_0}{1 + \\alpha \\left( \\frac{L}{L + K_d} \\right) \\left( 1 - \\frac{A}{A + IC_{50}} \\right)}\n$$\nSince $L$ and $A$ are constant for each simulation scenario, $k_{\\mathrm{eff}}$ is also a constant within each run.\n\nTo solve the system of ODEs, we must employ a numerical integration scheme. The problem requires a fixed-step, explicit method of at least fourth-order accuracy. The classical fourth-order Runge-Kutta (RK4) method is the canonical choice for this task. For a system of ODEs $\\frac{d\\vec{y}}{dt} = \\vec{f}(t, \\vec{y})$, where $\\vec{y}(t) = [N(t), E(t)]^T$, one step of size $\\Delta t$ from time $t_n$ to $t_{n+1}$ is computed as:\n$$\n\\begin{align*}\n\\vec{k}_1 &= \\vec{f}(t_n, \\vec{y}_n) \\\\\n\\vec{k}_2 &= \\vec{f}(t_n + \\frac{\\Delta t}{2}, \\vec{y}_n + \\frac{\\Delta t}{2} \\vec{k}_1) \\\\\n\\vec{k}_3 &= \\vec{f}(t_n + \\frac{\\Delta t}{2}, \\vec{y}_n + \\frac{\\Delta t}{2} \\vec{k}_2) \\\\\n\\vec{k}_4 &= \\vec{f}(t_n + \\Delta t, \\vec{y}_n + \\Delta t \\vec{k}_3) \\\\\n\\vec{y}_{n+1} &= \\vec{y}_n + \\frac{\\Delta t}{6} (\\vec{k}_1 + 2\\vec{k}_2 + 2\\vec{k}_3 + \\vec{k}_4)\n\\end{align*}\n$$\nWe will apply this scheme at each time step from $t=0$ to $t=T=60$ with $\\Delta t = 0.1$. To ensure physical realism, the populations $N(t)$ and $E(t)$ must remain non-negative. This will be enforced at each step by setting $N_{n+1} = \\max(0, N_{n+1})$ and $E_{n+1} = \\max(0, E_{n+1})$.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the tumor-immune ODE model for five different therapeutic scenarios.\n    \"\"\"\n\n    # --- Model Parameters ---\n    r = 0.02         # Tumor net proliferation rate (day^-1)\n    K = 1e9          # Tumor carrying capacity (cells)\n    k0 = 1e-9        # Intrinsic per-capita killing coefficient (cell^-1 day^-1)\n    alpha = 9.0      # PD-1 inhibition potency (dimensionless)\n    Kd = 1.0         # PD-L1 dissociation constant (arbitrary units)\n    IC50 = 1.0       # Antibody IC50 (arbitrary units)\n    s_base = 1e4     # Baseline T cell influx (cells/day)\n    p_vac = 5e5      # Vaccine priming amplitude (cells/day)\n    d_E = 0.05       # Effector T cell decay rate (day^-1)\n    t0 = 7.0         # Vaccine pulse center time (days)\n    sigma = 3.0      # Vaccine pulse width (days)\n\n    # --- Initial Conditions ---\n    N0 = 1e8         # Initial tumor cells\n    E0 = 1e5         # Initial effector T cells\n\n    # --- Simulation Settings ---\n    T_final = 60.0   # End time (days)\n    dt = 0.1         # Time step (days)\n\n    # --- Test Cases ---\n    test_cases = [\n        # (A, Q, L)\n        (0.0, 0.5, 1.0),   # Case 1: no blockade, moderate vaccine, typical ligand\n        (10.0, 0.5, 1.0),  # Case 2: strong blockade, moderate vaccine, typical ligand\n        (10.0, 0.0, 1.0),  # Case 3: strong blockade, no vaccine, typical ligand\n        (0.0, 1.0, 1.0),   # Case 4: no blockade, strong vaccine, typical ligand\n        (10.0, 0.5, 0.0),  # Case 5: ligand absent, strong blockade\n    ]\n\n    results = []\n\n    def g(t):\n        \"\"\"Vaccine pulse function.\"\"\"\n        return np.exp(-((t - t0)**2) / (2 * sigma**2))\n\n    def get_ode_system(k_eff, Q):\n        \"\"\"Returns the RHS function for the ODE system.\"\"\"\n        def system(t, y):\n            N, E = y[0], y[1]\n            dN_dt = r * N * (1 - N / K) - k_eff * E * N\n            dE_dt = s_base + p_vac * Q * g(t) - d_E * E\n            return np.array([dN_dt, dE_dt])\n        return system\n\n    for case in test_cases:\n        A, Q, L = case\n\n        # 1. Calculate scenario-specific effective killing rate k_eff\n        theta = L / (L + Kd)\n        B = A / (A + IC50)\n        S = theta * (1 - B)\n        k_eff = k0 / (1 + alpha * S)\n\n        # 2. Get the specific ODE system for this scenario\n        f = get_ode_system(k_eff, Q)\n\n        # 3. Initialize state and time\n        y = np.array([N0, E0])\n        t = 0.0\n        num_steps = int(T_final / dt)\n\n        # 4. Run RK4 integration\n        for _ in range(num_steps):\n            k1 = f(t, y)\n            k2 = f(t + dt / 2.0, y + dt / 2.0 * k1)\n            k3 = f(t + dt / 2.0, y + dt / 2.0 * k2)\n            k4 = f(t + dt, y + dt * k3)\n            \n            y = y + (dt / 6.0) * (k1 + 2.0 * k2 + 2.0 * k3 + k4)\n            \n            # Enforce non-negativity\n            y[0] = max(0.0, y[0])\n            y[1] = max(0.0, y[1])\n            \n            t += dt\n        \n        N_T = y[0]\n\n        # 5. Compute and store the tumor control ratio R\n        R = N_T / N0\n        results.append(f\"{R:.4f}\")\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2875666"}]}