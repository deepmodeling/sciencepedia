{"hands_on_practices": [{"introduction": "The specificity of intracellular signaling pathways is paramount for generating appropriate cellular responses. This exercise explores how the Toll-like receptor 4 (TLR4) can selectively engage different downstream adaptors, TIRAP and TRAM, by leveraging the specific biophysical properties of its Toll/Interleukin-1 receptor (TIR) domain. By analyzing a hypothetical structural model, this practice hones your ability to translate fundamental principles of protein-protein interactions—such as electrostatics and the hydrophobic effect—into concrete predictions about pathway activation, a crucial skill for dissecting molecular mechanisms in immunology [@problem_id:2873685].", "problem": "A Toll-like receptor 4 (TLR4) receptor engages two signaling branches upon lipopolysaccharide (LPS) stimulation: a Myeloid differentiation primary response protein 88 (MyD88)-dependent branch from the plasma membrane and a TIR domain-containing adaptor inducing interferon-β (TRIF)-dependent branch from endosomes. Sorting adaptors specify these branches by docking their Toll/Interleukin-1 receptor (TIR) domains onto the cytosolic TIR domain of TLR4: TIR domain-containing adaptor protein (TIRAP) for the MyD88-dependent branch and TRIF-related adaptor molecule (TRAM) for the TRIF-dependent branch. A well-supported structural base for TIR–TIR recognition is that the conserved TIR “BB loop” forms a protruding interaction hot spot whose local chemistry and shape strongly influence adaptor binding; protein–protein affinity arises from shape complementarity, electrostatic interactions (e.g., salt bridges), and hydrophobic contacts, with favorable contacts lowering the binding free energy $\\Delta G$.\n\nA computational docking and molecular dynamics analysis of the TLR4–adaptor interfaces proposes the following: in the wild-type receptor, a glutamate ($\\mathrm{Glu}$) side chain within the TLR4 BB loop forms a persistent salt bridge with a lysine ($\\mathrm{Lys}$) in the TIRAP TIR domain, and an adjacent hydrophobic patch on the BB loop packs against a leucine-rich surface of the TRAM TIR domain. You engineer a TLR4 BB-loop point mutation that reverses the charge at this glutamate position, substituting it with lysine (an $\\mathrm{Glu}\\to\\mathrm{Lys}$ change). Assume no changes in receptor trafficking or membrane localization of adaptors (e.g., phosphatidylinositol-4,5-bisphosphate, $\\text{PIP}_2$, binding by TIRAP and myristoylation by TRAM remain intact); only the TIR–TIR interface is altered by the mutation.\n\nBased solely on the structural interaction model above and first principles of protein–protein recognition (electrostatics, hydrophobic effect, and shape complementarity), which outcome is the most plausible for adaptor recruitment and downstream signaling upon LPS stimulation?\n\nA. The mutation will preferentially impair TIRAP recruitment at the plasma membrane by eliminating the favorable salt bridge and introducing electrostatic repulsion, markedly attenuating MyD88-dependent nuclear factor κB (NF-κB) activation, while TRAM recruitment and TRIF-dependent interferon regulatory factor 3 (IRF3) activation are relatively preserved.\n\nB. The mutation will preferentially impair TRAM recruitment from endosomes because TRAM depends on a positively charged patch in the TLR4 BB loop; TIRAP recruitment is preserved due to redundancy in salt bridge partners.\n\nC. The mutation will equally abolish recruitment of both TIRAP and TRAM because any BB-loop charge change disrupts the universal BB-loop “kink” necessary for all TIR–TIR interactions.\n\nD. The mutation will suppress TIRAP recruitment but enhance TRAM recruitment because the added positive charge on the BB loop strengthens TRAM binding, yielding reduced NF-κB but superinduced IRF3-dependent gene expression.", "solution": "We begin from the structural principles and core definitions relevant to TIR–TIR interactions.\n\nFundamental base:\n- Toll-like receptor (TLR) cytosolic Toll/Interleukin-1 receptor (TIR) domains recruit adaptor TIR domains via interfaces in which the conserved “BB loop” acts as a protruding element that makes key contacts.\n- Protein–protein affinity is governed by shape complementarity, electrostatics (e.g., salt bridges between oppositely charged groups contributing favorably to binding free energy $\\Delta G  0$), and hydrophobic interactions (burying nonpolar surface area, also decreasing $\\Delta G$).\n- Eliminating a salt bridge removes a favorable electrostatic term; introducing a like-charge at the same site creates electrostatic repulsion, both increasing $\\Delta G$ (weakened binding). Altering a residue in or near a hydrophobic patch can weaken packing, but the effect depends on whether the mutated position is directly within the hydrophobic contact surface.\n\nScenario-specific structural model:\n- In wild-type TLR4, the BB loop presents a glutamate ($\\mathrm{Glu}$) that forms a salt bridge with a lysine ($\\mathrm{Lys}$) in TIRAP. This is a direct, specific electrostatic stabilizer of TLR4–TIRAP binding.\n- TRAM binds to a leucine-rich hydrophobic surface that packs against a hydrophobic patch adjacent to the same BB loop. The docking model indicates TRAM’s key stabilization arises from hydrophobic packing rather than the specific glutamate–lysine salt bridge.\n\nEngineered mutation:\n- $\\mathrm{Glu}\\to\\mathrm{Lys}$ at the BB loop reverses the local charge: a negatively charged side chain is replaced by a positively charged one. Consequences:\n  - For TIRAP: the original favorable salt bridge (negative on TLR4 to positive on TIRAP) is lost. Moreover, replacing $\\mathrm{Glu}$ with $\\mathrm{Lys}$ creates a positive group facing the $\\mathrm{Lys}$ on TIRAP, introducing like-charge repulsion. Both removal of a favorable interaction and addition of a repulsive one raises $\\Delta G$ and reduces affinity, possibly substantially.\n  - For TRAM: the principal stabilization is hydrophobic packing against an adjacent patch. Introducing $\\mathrm{Lys}$ at the position formerly occupied by $\\mathrm{Glu}$ changes local polarity and charge. If this side chain is not a dominant contributor to the hydrophobic contact, the effect on TRAM binding is secondary compared to the salt bridge disruption in TIRAP. The hydrophobic patch may remain largely intact; however, the local increase in polarity could slightly reduce packing efficiency or desolvation, moderately weakening TRAM binding at most. Critically, there is no clear mechanism by which a BB-loop positive charge would strengthen the TRAM interface if it is hydrophobically driven.\n\nGiven these principles, a preferential loss of TIRAP recruitment is predicted, with relatively preserved TRAM recruitment, translating into reduced MyD88-dependent NF-κB activation and comparatively intact TRIF-dependent IRF3 signaling after endocytosis.\n\nOption-by-option analysis:\n\nA. States that TIRAP recruitment is preferentially impaired due to loss of the salt bridge and addition of repulsion, blunting MyD88 signaling, while TRAM/TRIF is relatively preserved. This matches the direct application of the structural model and interaction energetics: the TIRAP interface directly depends on the glutamate–lysine salt bridge, whereas TRAM relies on hydrophobic packing adjacent to, but not dominated by, that acidic side chain. Verdict — Correct.\n\nB. Claims preferential impairment of TRAM because TRAM depends on a positively charged BB loop; this contradicts the given model, which specifies TRAM’s reliance on hydrophobic complementarity, not on a positive charge at that location. It also asserts TIRAP recruitment is preserved by “redundancy in salt bridge partners,” which is speculative and conflicts with the model that emphasizes a specific, persistent salt bridge to TIRAP’s lysine. Verdict — Incorrect.\n\nC. Asserts equal abolition of both pathways because any BB-loop charge change disrupts a universal “kink.” The mutation described is a charge reversal ($\\mathrm{Glu}\\to\\mathrm{Lys}$), not a proline substitution that would flatten the BB-loop kink. While the BB loop is structurally important, the specific predicted effect depends on the nature and role of the residue. The model points to a selective electrostatic dependency for TIRAP, not an indiscriminate structural collapse affecting both adaptors equally. Verdict — Incorrect.\n\nD. Proposes suppression of TIRAP but enhancement of TRAM via the added positive charge, leading to superinduced TRIF signaling. There is no mechanistic basis in the model for a positive charge to strengthen a hydrophobic, leucine-mediated interface; indeed, adding a polar, charged side chain where hydrophobic packing is beneficial tends to weaken, not strengthen, such interactions. Thus, while the TIRAP suppression component is plausible, the TRAM enhancement is not. Verdict — Incorrect.", "answer": "$$\\boxed{A}$$", "id": "2873685"}, {"introduction": "Beyond the specificity of molecular interactions, the timing or dynamics of a signaling cascade is a critical determinant of its biological outcome. This problem provides a framework for quantitatively modeling signal propagation as a sequence of stochastic events, where each step has an associated rate. By calculating the expected time for a signal to travel from the TLR4 receptor to the nucleus to activate NF-κB, you will practice applying principles from chemical kinetics and probability theory to understand how a cell processes information over time [@problem_id:2873590].", "problem": "A Toll-like receptor 4 (TLR4)-expressing macrophage is stimulated with lipopolysaccharide such that both the myeloid differentiation primary response 88 (MyD88)-dependent pathway at the plasma membrane and the TIR-domain-containing adapter-inducing interferon-β (TRIF)-dependent pathway from the endosome can drive activation of the IκB kinase (IKK). Assume the following mechanistic basis drawn from standard chemical kinetics and cell signaling principles:\n\n- Each signaling step that is controlled by a single rate-limiting molecular event follows first-order kinetics, so that the waiting time to that event is exponentially distributed with a rate equal to its rate constant.\n- IKK activation occurs by whichever adaptor-driven route completes first, i.e., it is triggered by the earliest completion among two independent, concurrent first-order processes: the MyD88-dependent process with rate constant $k_{M}$ and the TRIF-dependent process with rate constant $k_{T}$.\n- After IKK activation, inhibitor of κB (IκB) phosphorylation occurs as a single first-order step with rate constant $k_{p}$, followed by proteasomal degradation of phosphorylated IκB as a single first-order step with rate constant $k_{d}$. Nuclear Factor kappa-light-chain-enhancer of activated B cells (NF-κB) is assumed to translocate to the nucleus immediately upon completion of IκB degradation.\n\nIgnore feedback, synthesis, or recycling during the time window considered, and assume independence of the stochastic waiting times for all steps. Given the parameter values\n$$k_{M} = 0.30\\ \\mathrm{min}^{-1},\\quad k_{T} = 0.10\\ \\mathrm{min}^{-1},\\quad k_{p} = 0.70\\ \\mathrm{min}^{-1},\\quad k_{d} = 0.30\\ \\mathrm{min}^{-1},$$\ncompute the expected time to NF-κB nuclear translocation from stimulus onset. Express your final result in minutes and round to $4$ significant figures.", "solution": "The total time to NF-κB nuclear translocation, $T_{\\text{total}}$, is the sum of the durations of the sequential signaling events. By the linearity of expectation, the expected total time is the sum of the expected times for each independent step:\n$$E[T_{\\text{total}}] = E[T_{\\text{IKK}}] + E[T_p] + E[T_d]$$\nwhere $T_{\\text{IKK}}$, $T_p$, and $T_d$ are the waiting times for IKK activation, IκB phosphorylation, and IκB degradation, respectively.\n\n1.  **Expected time for IκB phosphorylation ($E[T_p]$) and degradation ($E[T_d]$):**\n    These are single first-order processes. The expected waiting time for an exponential process with rate constant $k$ is $1/k$.\n    $$E[T_p] = \\frac{1}{k_p}$$\n    $$E[T_d] = \\frac{1}{k_d}$$\n\n2.  **Expected time for IKK activation ($E[T_{\\text{IKK}}]$):**\n    IKK is activated by the first of two independent, parallel pathways (MyD88 and TRIF), with rates $k_M$ and $k_T$. The time to activation is $T_{\\text{IKK}} = \\min(T_M, T_T)$, where $T_M \\sim \\text{Exp}(k_M)$ and $T_T \\sim \\text{Exp}(k_T)$. The minimum of two independent exponential random variables is also exponentially distributed with a rate equal to the sum of the individual rates.\n    $$k_{\\text{IKK}} = k_M + k_T$$\n    Therefore, the expected time for IKK activation is:\n    $$E[T_{\\text{IKK}}] = \\frac{1}{k_M + k_T}$$\n\n3.  **Total Expected Time:**\n    Combining these results, the total expected time is:\n    $$E[T_{\\text{total}}] = \\frac{1}{k_M + k_T} + \\frac{1}{k_p} + \\frac{1}{k_d}$$\n    Substituting the given values: $k_M = 0.30\\ \\text{min}^{-1}$, $k_T = 0.10\\ \\text{min}^{-1}$, $k_p = 0.70\\ \\text{min}^{-1}$, and $k_d = 0.30\\ \\text{min}^{-1}$.\n    $$E[T_{\\text{total}}] = \\frac{1}{0.30 + 0.10} + \\frac{1}{0.70} + \\frac{1}{0.30} = \\frac{1}{0.40} + \\frac{1}{0.70} + \\frac{1}{0.30}$$\n    $$E[T_{\\text{total}}] = 2.5 + \\frac{10}{7} + \\frac{10}{3} \\approx 2.5 + 1.42857 + 3.33333$$\n    $$E[T_{\\text{total}}] \\approx 7.26190\\ \\text{min}$$\n    Rounding the result to 4 significant figures, we get $7.262\\ \\text{min}$.", "answer": "$$\n\\boxed{7.262}\n$$", "id": "2873590"}, {"introduction": "Ultimately, the MyD88- and TRIF-dependent pathways do not operate in isolation; they are integrated into a network that produces a coordinated transcriptional response. This computational exercise challenges you to build an ordinary differential equation (ODE) model that captures the dynamics of both pathways and their cooperative logic, such as the \"AND-gate\" control required for *Ifnb1* gene expression. By simulating the system and perturbing key parameters like the timing of receptor endocytosis, you will gain hands-on experience with a powerful systems biology approach for analyzing how a cell integrates multiple signals to make a complex decision [@problem_id:2873583].", "problem": "You are tasked with writing a complete, runnable program that formalizes a minimal, mechanistically faithful ordinary differential equation (ODE) model of Toll-like receptor 4 (TLR4) signaling that captures Myeloid differentiation primary response 88 (MyD88)-dependent activation of Nuclear Factor kappa-light-chain-enhancer of activated B cells (NF-κB) at the plasma membrane and TIR-domain-containing adapter-inducing interferon-β (TRIF)-dependent activation of Interferon Regulatory Factor 3 (IRF3) from endosomes. The biological premise, grounded in well-tested observations, is that TLR4 signals via MyD88 at the plasma membrane and switches to TRIF after endocytosis; Interferon beta 1 (Ifnb1) transcription requires coincident NF-κB and IRF3 activity. Your program must implement a minimal piecewise-linear ODE system based on first-order activation/inactivation consistent with these principles and quantify how delaying endocytosis alters the timing of Ifnb1 transcription.\n\nModel specification and required definitions:\n- Let $N(t)$ denote the nuclear activity of NF-κB and $I(t)$ denote the nuclear activity of IRF3 at time $t$ (in minutes). Let $t_e$ denote the time of TLR4 endocytosis (in minutes), at which signaling switches from MyD88 to TRIF. Use initial conditions $N(0)=0$ and $I(0)=0$.\n- For $0 \\le t  t_e$ (plasma membrane, MyD88-dominant):\n  $$\\frac{dN}{dt} = k_N^{\\mathrm{on}} - k_N^{\\mathrm{off}}\\,N(t), \\quad \\frac{dI}{dt} = -\\,k_I^{\\mathrm{off}}\\,I(t).$$\n- For $t \\ge t_e$ (endosome, TRIF-dominant):\n  $$\\frac{dN}{dt} = -\\,k_N^{\\mathrm{off}}\\,N(t), \\quad \\frac{dI}{dt} = k_I^{\\mathrm{on}} - k_I^{\\mathrm{off}}\\,I(t).$$\n- Ifnb1 transcriptional drive is modeled as an AND-like product of Hill functions:\n  $$T(t) = k_{\\mathrm{tx}} \\cdot \\frac{N(t)^h}{K_N^h + N(t)^h} \\cdot \\frac{I(t)^h}{K_I^h + I(t)^h}.$$\n- Define the half-activation time $t_{1/2}(t_e)$ as the smallest $t$ within the simulated window for which $T(t) \\ge 0.5 \\cdot k_{\\mathrm{tx}}$.\n- Use the following parameter values, chosen for scientific plausibility and to reflect first-order activation/inactivation:\n  - $k_N^{\\mathrm{on}} = 0.15\\,\\mathrm{min}^{-1}$, $k_N^{\\mathrm{off}} = 0.10\\,\\mathrm{min}^{-1}$,\n  - $k_I^{\\mathrm{on}} = 0.12\\,\\mathrm{min}^{-1}$, $k_I^{\\mathrm{off}} = 0.05\\,\\mathrm{min}^{-1}$,\n  - $K_N = 0.3$ (dimensionless), $K_I = 0.5$ (dimensionless), $h=3$ (dimensionless), $k_{\\mathrm{tx}}=1$ (dimensionless).\n- Simulate on a uniform time grid from $t=0$ to $t=t_{\\max}$ with $t_{\\max}=240\\,\\mathrm{min}$ using a fixed time step $\\Delta t = 0.1\\,\\mathrm{min}$. All time quantities and outputs must be expressed in minutes.\n\nComputational task:\n- Fix a baseline endocytosis time $t_{e,0} = 20\\,\\mathrm{min}$.\n- For a given delay $d$ (in minutes), define $t_e = t_{e,0} + d$ and compute $t_{1/2}(t_e)$.\n- Let $b = t_{1/2}(t_{e,0})$ be the baseline half-activation time. For each tested delay $d$, report\n  $$x_d = \\begin{cases}\n  t_{1/2}(t_{e,0}+d) - b,  \\text{if both } t_{1/2}(t_{e,0}+d) \\text{ and } b \\text{ exist within } [0,t_{\\max}],\\\\\n  -1.0,  \\text{otherwise.}\n  \\end{cases}$$\n\nTest suite:\n- Use the set of delays (in minutes) $D = [0, 30, 60, 120]$.\n- For each $d \\in D$, compute $x_d$ as defined above.\n\nFinal output format:\n- Your program must produce a single line of output containing a comma-separated Python-style list of the four values $[x_0, x_{30}, x_{60}, x_{120}]$, with each value rounded to three decimals, enclosed in square brackets, and expressed in minutes. For example, an acceptable format is $[0.000,30.000,60.000,120.000]$ (numbers shown here are illustrative; your program must compute the actual values).", "solution": "The problem is scientifically grounded in established principles of immunology, mathematically well-posed as a system of ordinary differential equations, and objectively formulated without ambiguity. All necessary parameters and conditions are provided, rendering the problem self-contained and solvable.\n\nThe problem requires the simulation of a piecewise-linear ordinary differential equation (ODE) model for Toll-like receptor 4 (TLR4) signaling. The model captures the sequential activation of two distinct pathways: an early, plasma membrane-localized MyD88-dependent pathway activating NF-κB, and a delayed, endosome-localized TRIF-dependent pathway activating IRF3.\n\nThe state variables are the nuclear activities of NF-κB, denoted by $N(t)$, and IRF3, denoted by $I(t)$. The system dynamics switch at the time of endocytosis, $t_e$.\n\nThe governing equations are:\n1.  For the time interval $0 \\le t  t_e$ (MyD88 signaling):\n    $$\n    \\frac{dN}{dt} = k_N^{\\mathrm{on}} - k_N^{\\mathrm{off}}\\,N(t) \\\\\n    $$\n    $$\n    \\frac{dI}{dt} = -\\,k_I^{\\mathrm{off}}\\,I(t)\n    $$\n2.  For the time interval $t \\ge t_e$ (TRIF signaling):\n    $$\n    \\frac{dN}{dt} = -\\,k_N^{\\mathrm{off}}\\,N(t) \\\\\n    $$\n    $$\n    \\frac{dI}{dt} = k_I^{\\mathrm{on}} - k_I^{\\mathrm{off}}\\,I(t)\n    $$\nThe initial conditions are $N(0)=0$ and $I(0)=0$.\n\nThese are first-order linear ODEs. Analytically, for $0 \\le t  t_e$:\n$$\nN(t) = \\frac{k_N^{\\mathrm{on}}}{k_N^{\\mathrm{off}}} \\left(1 - e^{-k_N^{\\mathrm{off}} t}\\right)\n$$\n$$\nI(t) = 0\n$$\nAnd for $t \\ge t_e$:\n$$\nN(t) = N(t_e) \\, e^{-k_N^{\\mathrm{off}} (t - t_e)}\n$$\n$$\nI(t) = \\frac{k_I^{\\mathrm{on}}}{k_I^{\\mathrm{off}}} \\left(1 - e^{-k_I^{\\mathrm{off}} (t - t_e)}\\right)\n$$\nwhere $N(t_e)$ and $I(t_e)$ are the values at the switch time.\n\nThe problem specifies a numerical simulation using the Forward Euler method. For a differential equation $\\frac{dy}{dt} = f(y, t)$, the update rule is $y_{k+1} = y_k + \\Delta t \\cdot f(y_k, t_k)$.\n\nApplying this to our system:\nLet $N_k \\approx N(t_k)$ and $I_k \\approx I(t_k)$ where $t_k = k \\Delta t$.\nFor $t_k  t_e$:\n$$\nN_{k+1} = N_k + \\Delta t \\left( k_N^{\\mathrm{on}} - k_N^{\\mathrm{off}} N_k \\right) \\\\\n$$\n$$\nI_{k+1} = I_k + \\Delta t \\left( -k_I^{\\mathrm{off}} I_k \\right)\n$$\nFor $t_k \\ge t_e$:\n$$\nN_{k+1} = N_k + \\Delta t \\left( -k_N^{\\mathrm{off}} N_k \\right) \\\\\n$$\n$$\nI_{k+1} = I_k + \\Delta t \\left( k_I^{\\mathrm{on}} - k_I^{\\mathrm{off}} I_k \\right)\n$$\n\nThe transcriptional drive for Ifnb1, $T(t)$, is modeled as a cooperative AND-gate:\n$$\nT(t) = k_{\\mathrm{tx}} \\cdot \\frac{N(t)^h}{K_N^h + N(t)^h} \\cdot \\frac{I(t)^h}{K_I^h + I(t)^h}\n$$\nThe half-activation time, $t_{1/2}(t_e)$, is the first time point $t$ where $T(t)$ reaches or exceeds half its maximal possible value, i.e., $T(t) \\ge 0.5 \\cdot k_{\\mathrm{tx}}$.\n\nThe computational procedure involves implementing a simulation function, determining a baseline half-activation time for $t_{e,0} = 20\\,\\mathrm{min}$, and then calculating the shift in this time for a series of delayed endocytosis times. This structured approach ensures a correct and robust implementation that directly follows the problem's specifications. The use of a numerical solver is consistent with the provided simulation parameters.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the delay in Ifnb1 transcriptional activation\n    due to delayed TLR4 endocytosis.\n    \"\"\"\n\n    # Model parameters as specified in the problem\n    params = {\n        \"k_N_on\": 0.15,   # min^-1\n        \"k_N_off\": 0.10,  # min^-1\n        \"k_I_on\": 0.12,   # min^-1\n        \"k_I_off\": 0.05,  # min^-1\n        \"K_N\": 0.3,       # dimensionless\n        \"K_I\": 0.5,       # dimensionless\n        \"h\": 3,           # dimensionless\n        \"k_tx\": 1.0,      # dimensionless\n    }\n\n    # Simulation parameters\n    t_max = 240.0  # min\n    dt = 0.1       # min\n\n    # Test suite\n    t_e_baseline = 20.0  # min\n    delays = [0.0, 30.0, 60.0, 120.0]  # min\n\n    def compute_t_half(t_e, params, t_max, dt):\n        \"\"\"\n        Simulates the ODE system for a given endocytosis time t_e and finds\n        the half-activation time for Ifnb1 transcription.\n        \"\"\"\n        # Time grid\n        times = np.arange(0, t_max + dt, dt)\n        num_steps = len(times)\n\n        # State variable arrays\n        N = np.zeros(num_steps)\n        I = np.zeros(num_steps)\n\n        # Initial conditions are N[0] = 0, I[0] = 0, already set by np.zeros\n\n        # Simulation loop using Forward Euler method\n        for k in range(num_steps - 1):\n            t_current = times[k]\n\n            # Apply piecewise ODEs\n            if t_current  t_e:\n                # MyD88-dependent phase (plasma membrane)\n                dN_dt = params[\"k_N_on\"] - params[\"k_N_off\"] * N[k]\n                dI_dt = -params[\"k_I_off\"] * I[k]\n            else:\n                # TRIF-dependent phase (endosome)\n                dN_dt = -params[\"k_N_off\"] * N[k]\n                dI_dt = params[\"k_I_on\"] - params[\"k_I_off\"] * I[k]\n\n            # Update state variables\n            N[k+1] = N[k] + dN_dt * dt\n            I[k+1] = I[k] + dI_dt * dt\n\n            # Calculate transcriptional drive T(t)\n            N_h = N[k+1]**params[\"h\"]\n            I_h = I[k+1]**params[\"h\"]\n            KN_h = params[\"K_N\"]**params[\"h\"]\n            KI_h = params[\"K_I\"]**params[\"h\"]\n            \n            # Avoid division by zero if N or I are zero.\n            # In that case, the Hill term is zero.\n            if KN_h + N_h == 0 or KI_h + I_h == 0:\n                T_k1 = 0.0\n            else:\n                hill_N = N_h / (KN_h + N_h)\n                hill_I = I_h / (KI_h + I_h)\n                T_k1 = params[\"k_tx\"] * hill_N * hill_I\n\n            # Check for crossing the half-activation threshold\n            if T_k1 = 0.5 * params[\"k_tx\"]:\n                return times[k+1]\n\n        # If threshold is not reached within t_max\n        return -1.0\n\n    # Calculate baseline half-activation time\n    baseline_t_half = compute_t_half(t_e_baseline, params, t_max, dt)\n\n    results = []\n    for d in delays:\n        current_t_e = t_e_baseline + d\n        current_t_half = compute_t_half(current_t_e, params, t_max, dt)\n\n        # Check if both baseline and current t_half were found\n        if baseline_t_half != -1.0 and current_t_half != -1.0:\n            x_d = current_t_half - baseline_t_half\n        else:\n            x_d = -1.0\n        \n        results.append(x_d)\n\n    # Format the final output string\n    output_str = f\"[{','.join(f'{val:.3f}' for val in results)}]\"\n    print(output_str)\n\nsolve()\n```", "id": "2873583"}]}