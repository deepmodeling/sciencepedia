{"hands_on_practices": [{"introduction": "A central paradox in T cell activation is how the immune system achieves high specificity and sensitivity despite the often weak and transient nature of individual T cell receptor (TCR) to peptide-MHC (pMHC) interactions. This exercise delves into the concept of avidity, explaining how the multivalent nature of cell-cell interactions can dramatically enhance the stability of receptor-ligand engagement. By modeling the difference between a monomeric and a bivalent ligand, you will quantitatively explore how avidity affects the effective bond lifetime and, consequently, the ability of the T cell to meet the demands of kinetic proofreading for activation [@problem_id:2898328]. This practice provides a crucial biophysical foundation for understanding the very first step of T cell recognition.", "problem": "A T cell receptor (TCR) engages a peptide–Major Histocompatibility Complex (pMHC) ligand at the immunological synapse. In a minimal physical-chemistry representation, model the TCR–pMHC encounter as mass-action binding with association rate constant $k_{\\mathrm{on}}$ and dissociation rate constant $k_{\\mathrm{off}}$, and assume low fractional occupancy so that receptors do not compete for ligands. Consider two ligand formats presented at the same total per-arm concentration $L$: (i) monomeric pMHC and (ii) a bivalent pMHC dimer with two identical arms tethered so that once one arm is bound to a TCR, the second arm can bind a nearby TCR on the same cell with an intramolecular (local) effective second-order rate $k_{\\mathrm{on}} c_{\\mathrm{eff}}$, where $c_{\\mathrm{eff}}$ is an effective molarity reflecting the local receptor availability within the tether’s reach.\n\nYou will compute how bivalency changes the effective dissociation rate of the cell-associated complex, the steady-state receptor occupancy, and the ligand requirement to meet a kinetic proofreading activation criterion.\n\nUse the following parameter values and assumptions, which are scientifically typical for T cell receptor–ligand interactions at low occupancy:\n\n- Association rate constant: $k_{\\mathrm{on}} = 1.0 \\times 10^{5}\\ \\mathrm{M}^{-1}\\ \\mathrm{s}^{-1}$.\n- Monomeric dissociation rate constant: $k_{\\mathrm{off}} = 0.5\\ \\mathrm{s}^{-1}$.\n- Per-arm ligand concentration (identical in the two formats): $L = 1.0 \\times 10^{-8}\\ \\mathrm{M}$.\n- Effective molarity for the tethered arm: $c_{\\mathrm{eff}} = 1.0 \\times 10^{-4}\\ \\mathrm{M}$, so the intramolecular second binding step occurs with rate $k_{\\mathrm{re}} = k_{\\mathrm{on}} c_{\\mathrm{eff}}$.\n- Kinetic proofreading with a single time checkpoint: a binding event is productive only if it persists beyond time $\\tau_{c} = 2.5\\ \\mathrm{s}$.\n\nFoundational base you may use without derivation:\n- Mass-action kinetics and the equilibrium occupancy formula for a two-state receptor–ligand system: the steady-state fractional occupancy is $\\theta = \\dfrac{L}{L + K_{d}}$ with $K_{d} = \\dfrac{k_{\\mathrm{off}}}{k_{\\mathrm{on}}}$.\n- For an exponentially distributed bond lifetime with rate $k$, the probability to survive past time $t$ is $\\exp(-k t)$.\n\nTasks:\n1) Model the bivalent dimer’s cell-associated lifetime using a continuous-time Markov description with the following coarse-grained states: $B_{1}$ (one arm of the dimer bound to a TCR), $B_{2}$ (both arms bound to TCRs on the same cell), and $U$ (unbound). Transitions are $B_{1} \\to U$ at rate $k_{\\mathrm{off}}$, $B_{1} \\to B_{2}$ at rate $k_{\\mathrm{re}} = k_{\\mathrm{on}} c_{\\mathrm{eff}}$, and $B_{2} \\to B_{1}$ at total rate $2 k_{\\mathrm{off}}$ (breaking either bond). Starting from state $B_{1}$, derive from first principles the mean time to absorption in $U$ and thereby an effective single-exponential dissociation rate $k_{\\mathrm{off,eff}}$ for the bivalent dimer’s cell association macrostate “at least one arm bound.”\n\n2) Using the equilibrium occupancy formula and treating the macrostate “at least one arm bound” as the bound state for the dimer, compute the steady-state fractional occupancy $\\theta_{\\mathrm{mono}}$ for monomeric pMHC and $\\theta_{\\mathrm{bi}}$ for the bivalent pMHC at the given $L$. Express both as decimals.\n\n3) Under a one-step kinetic proofreading model in the low-occupancy limit, the per-receptor rate of productive signaling events is proportional to $k_{\\mathrm{on}} L \\exp(-k \\tau_{c})$, where $k$ is the dissociation rate governing the bond lifetime distribution. Let $L_{\\min}$ denote the minimal per-arm ligand concentration required to achieve a fixed target productive rate. Compute the fold-reduction factor $F$ in $L_{\\min}$ when switching from monomer to bivalent, i.e., $F = \\dfrac{L_{\\min,\\mathrm{mono}}}{L_{\\min,\\mathrm{bi}}}$.\n\nNumerical instructions:\n- Round all numerical results to three significant figures.\n- Report $k_{\\mathrm{off,eff}}$ in $\\mathrm{s}^{-1}$ and $\\theta_{\\mathrm{mono}}$, $\\theta_{\\mathrm{bi}}$, and $F$ as dimensionless decimals.\n- Provide your final answer as a row matrix in the order $[\\,k_{\\mathrm{off,eff}},\\ \\theta_{\\mathrm{mono}},\\ \\theta_{\\mathrm{bi}},\\ F\\,]$.", "solution": "The problem statement must first be subjected to rigorous validation before any attempt at a solution is made.\n\nFirst, we extract the given information verbatim.\nGivens:\n- Model: Mass-action binding, low fractional occupancy.\n- Ligand formats: (i) monomeric pMHC, (ii) bivalent pMHC dimer.\n- Per-arm ligand concentration, identical for both formats: $L = 1.0 \\times 10^{-8}\\ \\mathrm{M}$.\n- Association rate constant: $k_{\\mathrm{on}} = 1.0 \\times 10^{5}\\ \\mathrm{M}^{-1}\\ \\mathrm{s}^{-1}$.\n- Monomeric dissociation rate constant: $k_{\\mathrm{off}} = 0.5\\ \\mathrm{s}^{-1}$.\n- Effective molarity for bivalent rebinding: $c_{\\mathrm{eff}} = 1.0 \\times 10^{-4}\\ \\mathrm{M}$.\n- Intramolecular rebinding rate: $k_{\\mathrm{re}} = k_{\\mathrm{on}} c_{\\mathrm{eff}}$.\n- Kinetic proofreading time checkpoint: $\\tau_{c} = 2.5\\ \\mathrm{s}$.\n- Foundational formula for steady-state fractional occupancy: $\\theta = \\dfrac{L}{L + K_{d}}$ with $K_{d} = \\dfrac{k_{\\mathrm{off}}}{k_{\\mathrm{on}}}$.\n- Foundational formula for survival probability: $\\exp(-k t)$.\n- Bivalent model states: $B_{1}$ (singly bound), $B_{2}$ (doubly bound), $U$ (unbound).\n- Bivalent model transitions and rates: $B_{1} \\to U$ at rate $k_{\\mathrm{off}}$; $B_{1} \\to B_{2}$ at rate $k_{\\mathrm{re}}$; $B_{2} \\to B_{1}$ at rate $2 k_{\\mathrm{off}}$.\n\nThe problem is evaluated against the validation criteria.\n- **Scientifically Grounded**: The problem is based on standard, well-established principles of physical chemistry and immunology, namely mass-action kinetics, continuous-time Markov models for state transitions, and the kinetic proofreading model of T cell activation. The parameter values are representative of real biological systems.\n- **Well-Posed**: The problem is clearly structured with defined tasks, all necessary parameters, and foundational formulas. Each task has a unique and meaningful solution that can be derived from the provided information.\n- **Objective**: The problem is stated in precise, quantitative, and unbiased technical language.\n- **Complete and Consistent**: The problem provides a self-contained set of data and constraints with no apparent contradictions. The assumptions, such as low occupancy and the use of an effective single-exponential rate for the bivalent case, are explicitly stated or strongly implied to guide the solution process.\n\nVerdict: The problem is valid. We proceed to the solution.\n\nThe solution is organized according to the three tasks presented.\n\n**Task 1: Derivation of the effective dissociation rate $k_{\\mathrm{off,eff}}$ for the bivalent dimer.**\nWe are asked to find the mean time to absorption into the unbound state $U$, starting from the singly-bound state $B_{1}$. This requires solving for the mean first passage time in a continuous-time Markov chain. Let $T_{B_1}$ and $T_{B_2}$ be the mean times to reach state $U$ starting from states $B_{1}$ and $B_{2}$, respectively. By definition, the time to absorption from state $U$ is $0$.\n\nWe can formulate a system of linear equations for these mean times by considering the evolution of the system over an infinitesimal time interval $dt$.\nFor state $B_1$, the expected time to absorption is given by:\n$$T_{B_1} = dt + P(B_1 \\to B_1)T_{B_1} + P(B_1 \\to B_2)T_{B_2} + P(B_1 \\to U) \\cdot 0$$\nThe transition probabilities are $P(B_1 \\to B_2) = k_{\\mathrm{re}} dt$, $P(B_1 \\to U) = k_{\\mathrm{off}} dt$, and $P(B_1 \\to B_1) = 1 - (k_{\\mathrm{re}} + k_{\\mathrm{off}})dt$. Substituting these into the equation:\n$$T_{B_1} = dt + (1 - (k_{\\mathrm{re}} + k_{\\mathrm{off}})dt)T_{B_1} + (k_{\\mathrm{re}} dt)T_{B_2}$$\n$$0 = dt - (k_{\\mathrm{re}} + k_{\\mathrm{off}})T_{B_1}dt + k_{\\mathrm{re}}T_{B_2}dt$$\nDividing by $dt$ and rearranging yields the first equation:\n$$(k_{\\mathrm{re}} + k_{\\mathrm{off}})T_{B_1} - k_{\\mathrm{re}}T_{B_2} = 1$$\n\nFor state $B_2$, the only possible transition is to state $B_1$ with rate $2k_{\\mathrm{off}}$. Thus:\n$$T_{B_2} = dt + P(B_2 \\to B_1)T_{B_1} + P(B_2 \\to B_2)T_{B_2}$$\n$$T_{B_2} = dt + (2k_{\\mathrm{off}}dt)T_{B_1} + (1 - 2k_{\\mathrm{off}}dt)T_{B_2}$$\n$$0 = dt + 2k_{\\mathrm{off}}T_{B_1}dt - 2k_{\\mathrm{off}}T_{B_2}dt$$\nDividing by $dt$ and rearranging yields the second equation:\n$$-2k_{\\mathrm{off}}T_{B_1} + 2k_{\\mathrm{off}}T_{B_2} = 1$$\n\nWe now solve this system of two linear equations for $T_{B_1}$:\nFrom the second equation, we express $T_{B_2}$ in terms of $T_{B_1}$:\n$$T_{B_2} = T_{B_1} + \\frac{1}{2k_{\\mathrm{off}}}$$\nSubstitute this expression into the first equation:\n$$(k_{\\mathrm{re}} + k_{\\mathrm{off}})T_{B_1} - k_{\\mathrm{re}}\\left(T_{B_1} + \\frac{1}{2k_{\\mathrm{off}}}\\right) = 1$$\n$$k_{\\mathrm{off}}T_{B_1} - \\frac{k_{\\mathrm{re}}}{2k_{\\mathrm{off}}} = 1$$\n$$k_{\\mathrm{off}}T_{B_1} = 1 + \\frac{k_{\\mathrm{re}}}{2k_{\\mathrm{off}}}$$\n$$T_{B_1} = \\frac{1}{k_{\\mathrm{off}}} + \\frac{k_{\\mathrm{re}}}{2k_{\\mathrm{off}}^2} = \\frac{2k_{\\mathrm{off}} + k_{\\mathrm{re}}}{2k_{\\mathrm{off}}^2}$$\nThe effective dissociation rate, $k_{\\mathrm{off,eff}}$, is the reciprocal of this mean lifetime of the cell-associated complex, $T_{B_1}$.\n$$k_{\\mathrm{off,eff}} = \\frac{1}{T_{B_1}} = \\frac{2k_{\\mathrm{off}}^2}{2k_{\\mathrm{off}} + k_{\\mathrm{re}}}$$\nWe now substitute the numerical values. First, calculate $k_{\\mathrm{re}}$:\n$$k_{\\mathrm{re}} = k_{\\mathrm{on}} c_{\\mathrm{eff}} = (1.0 \\times 10^{5}\\ \\mathrm{M}^{-1}\\ \\mathrm{s}^{-1})(1.0 \\times 10^{-4}\\ \\mathrm{M}) = 10\\ \\mathrm{s}^{-1}$$\nNow compute $k_{\\mathrm{off,eff}}$:\n$$k_{\\mathrm{off,eff}} = \\frac{2 \\times (0.5\\ \\mathrm{s}^{-1})^2}{2 \\times (0.5\\ \\mathrm{s}^{-1}) + 10\\ \\mathrm{s}^{-1}} = \\frac{2 \\times 0.25}{1 + 10} \\frac{(\\mathrm{s}^{-1})^2}{\\mathrm{s}^{-1}} = \\frac{0.5}{11}\\ \\mathrm{s}^{-1} \\approx 0.04545\\ \\mathrm{s}^{-1}$$\nRounding to three significant figures, $k_{\\mathrm{off,eff}} = 0.0455\\ \\mathrm{s}^{-1}$.\n\n**Task 2: Calculation of steady-state fractional occupancies, $\\theta_{\\mathrm{mono}}$ and $\\theta_{\\mathrm{bi}}$.**\nWe use the provided formula $\\theta = \\frac{L}{L + K_{d}}$, where $K_{d} = \\frac{k_{\\mathrm{off}}}{k_{\\mathrm{on}}}$. The per-arm ligand concentration is given as $L = 1.0 \\times 10^{-8}\\ \\mathrm{M}$.\n\nFor the monomeric ligand:\nThe dissociation constant is $K_{d, \\mathrm{mono}} = \\frac{k_{\\mathrm{off}}}{k_{\\mathrm{on}}}$.\n$$K_{d, \\mathrm{mono}} = \\frac{0.5\\ \\mathrm{s}^{-1}}{1.0 \\times 10^{5}\\ \\mathrm{M}^{-1}\\ \\mathrm{s}^{-1}} = 5.0 \\times 10^{-6}\\ \\mathrm{M}$$\nThe fractional occupancy is:\n$$\\theta_{\\mathrm{mono}} = \\frac{L}{L + K_{d, \\mathrm{mono}}} = \\frac{1.0 \\times 10^{-8}\\ \\mathrm{M}}{1.0 \\times 10^{-8}\\ \\mathrm{M} + 5.0 \\times 10^{-6}\\ \\mathrm{M}} = \\frac{1.0 \\times 10^{-8}}{5.01 \\times 10^{-6}} \\approx 0.001996$$\nRounding to three significant figures, $\\theta_{\\mathrm{mono}} = 0.00200$.\n\nFor the bivalent ligand:\nWe use the effective dissociation rate $k_{\\mathrm{off,eff}}$ calculated in Task 1. The association rate constant remains $k_{\\mathrm{on}}$. The effective dissociation constant is $K_{d, \\mathrm{eff}} = \\frac{k_{\\mathrm{off,eff}}}{k_{\\mathrm{on}}}$.\n$$K_{d, \\mathrm{eff}} = \\frac{0.04545...\\ \\mathrm{s}^{-1}}{1.0 \\times 10^{5}\\ \\mathrm{M}^{-1}\\ \\mathrm{s}^{-1}} \\approx 4.545 \\times 10^{-7}\\ \\mathrm{M}$$\nThe fractional occupancy is:\n$$\\theta_{\\mathrm{bi}} = \\frac{L}{L + K_{d, \\mathrm{eff}}} = \\frac{1.0 \\times 10^{-8}\\ \\mathrm{M}}{1.0 \\times 10^{-8}\\ \\mathrm{M} + 4.545 \\times 10^{-7}\\ \\mathrm{M}} = \\frac{1.0 \\times 10^{-8}}{4.645 \\times 10^{-7}} \\approx 0.0215285$$\nRounding to three significant figures, $\\theta_{\\mathrm{bi}} = 0.0215$.\n\n**Task 3: Calculation of the fold-reduction factor $F$.**\nThe per-receptor rate of productive signaling is given as proportional to $k_{\\mathrm{on}} L \\exp(-k \\tau_{c})$. Let this rate be $R_{prod}$.\n$$R_{prod} = C \\cdot k_{\\mathrm{on}} L \\exp(-k \\tau_{c})$$\nwhere $C$ is a constant of proportionality.\nTo achieve a fixed target productive rate, $R_{target}$, the required ligand concentration $L_{\\min}$ is:\n$$L_{\\min} = \\frac{R_{target}}{C \\cdot k_{\\mathrm{on}}} \\exp(k \\tau_{c})$$\nThe factor $\\frac{R_{target}}{C \\cdot k_{\\mathrm{on}}}$ is constant for the comparison.\n\nFor the monomeric ligand, the dissociation rate is $k = k_{\\mathrm{off}}$.\n$$L_{\\min, \\mathrm{mono}} = \\frac{R_{target}}{C \\cdot k_{\\mathrm{on}}} \\exp(k_{\\mathrm{off}} \\tau_{c})$$\n\nFor the bivalent ligand, we use the effective single-exponential dissociation rate $k = k_{\\mathrm{off,eff}}$.\n$$L_{\\min, \\mathrm{bi}} = \\frac{R_{target}}{C \\cdot k_{\\mathrm{on}}} \\exp(k_{\\mathrm{off,eff}} \\tau_{c})$$\n\nThe fold-reduction factor $F$ is the ratio of these minimal concentrations:\n$$F = \\frac{L_{\\min, \\mathrm{mono}}}{L_{\\min, \\mathrm{bi}}} = \\frac{\\exp(k_{\\mathrm{off}} \\tau_{c})}{\\exp(k_{\\mathrm{off,eff}} \\tau_{c})} = \\exp((k_{\\mathrm{off}} - k_{\\mathrm{off,eff}}) \\tau_{c})$$\nWe substitute the values: $k_{\\mathrm{off}} = 0.5\\ \\mathrm{s}^{-1}$, $k_{\\mathrm{off,eff}} = \\frac{0.5}{11}\\ \\mathrm{s}^{-1}$, and $\\tau_{c} = 2.5\\ \\mathrm{s}$.\n$$k_{\\mathrm{off}} - k_{\\mathrm{off,eff}} = 0.5 - \\frac{0.5}{11} = 0.5 \\left(1 - \\frac{1}{11}\\right) = 0.5 \\left(\\frac{10}{11}\\right) = \\frac{5}{11}\\ \\mathrm{s}^{-1}$$\nNow compute the exponent:\n$$(k_{\\mathrm{off}} - k_{\\mathrm{off,eff}}) \\tau_{c} = \\left(\\frac{5}{11}\\ \\mathrm{s}^{-1}\\right) (2.5\\ \\mathrm{s}) = \\frac{12.5}{11} = \\frac{25}{22}$$\nFinally, we calculate $F$:\n$$F = \\exp\\left(\\frac{25}{22}\\right) \\approx 3.1154$$\nRounding to three significant figures, $F = 3.12$.", "answer": "$$\\boxed{\\begin{pmatrix} 0.0455 & 0.00200 & 0.0215 & 3.12 \\end{pmatrix}}$$", "id": "2898328"}, {"introduction": "Following stable receptor engagement, the signal must be transduced into a biochemical currency within the cell. The phosphorylation of Immunoreceptor Tyrosine-based Activation Motifs (ITAMs) on the TCR complex is the canonical initiating event, but this is not a simple on/off switch. This practice models the phosphorylation level of ITAMs as a dynamic equilibrium, governed by the competing activities of the kinase Lck and the phosphatase CD45. By applying the principles of Michaelis-Menten enzyme kinetics, you will derive a differential equation that describes this balance and calculate the resulting steady-state phosphorylation fraction [@problem_id:2898334]. This exercise is fundamental to understanding how the intensity of an input signal is quantitatively encoded by the state of a signaling network.", "problem": "Within the immunological synapse, the immunoreceptor tyrosine-based activation motif (ITAM) tyrosines on the T cell receptor complex are phosphorylated by lymphocyte-specific protein tyrosine kinase (Lck) and dephosphorylated by protein tyrosine phosphatase receptor type C (CD45). Consider a membrane patch in which the total number of ITAM tyrosine sites is conserved and define the state variable $x(t)$ as the fraction of ITAM tyrosines that are phosphorylated at time $t$, so that the unphosphorylated fraction is $1 - x(t)$. Assume the following fundamental bases: (i) conservation of total sites, (ii) enzyme–substrate complex quasi-steady-state leading to Michaelis–Menten kinetics for each opposing reaction, and (iii) well-mixed conditions over the patch on the timescale of interest. Under these assumptions, the Lck-catalyzed phosphorylation velocity depends on the unphosphorylated substrate fraction and the CD45-catalyzed dephosphorylation velocity depends on the phosphorylated fraction.\n\n(a) Starting from these bases and without invoking any additional phenomenological laws, derive the ordinary differential equation for $x(t)$ as a balance between Lck-driven phosphorylation and CD45-driven dephosphorylation. Express the phosphorylation rate as $v_{\\mathrm{phos}}(x) = \\dfrac{V_{\\mathrm{p}} \\left(1 - x\\right)}{K_{\\mathrm{p}} + \\left(1 - x\\right)}$ and the dephosphorylation rate as $v_{\\mathrm{dephos}}(x) = \\dfrac{V_{\\mathrm{d}} x}{K_{\\mathrm{d}} + x}$, where $V_{\\mathrm{p}}$ and $V_{\\mathrm{d}}$ are maximal velocities (per ITAM site) and $K_{\\mathrm{p}}$ and $K_{\\mathrm{d}}$ are Michaelis constants expressed in units of fraction of sites.\n\n(b) Using the dynamical equation from part (a), determine the steady-state phospho-ITAM fraction $x^{\\ast}$ by imposing the steady-state condition. Evaluate $x^{\\ast}$ for the parameter values $V_{\\mathrm{p}} = 0.80\\,\\mathrm{s}^{-1}$, $K_{\\mathrm{p}} = 0.20$, $V_{\\mathrm{d}} = 0.50\\,\\mathrm{s}^{-1}$, and $K_{\\mathrm{d}} = 0.10$. Report $x^{\\ast}$ as a unitless decimal fraction and round your answer to four significant figures.", "solution": "The problem requires the derivation of a kinetic model for ITAM phosphorylation and the subsequent calculation of its steady-state solution. The problem statement is validated as scientifically grounded, well-posed, and objective. It is based on standard principles of enzyme kinetics (Michaelis-Menten model) applied to a known biological system. All necessary definitions and parameters are provided, and no inconsistencies are present.\n\nPart (a): Derivation of the governing ordinary differential equation (ODE).\n\nThe state variable $x(t)$ is defined as the fraction of ITAM tyrosines that are phosphorylated at time $t$. The total fraction of sites is conserved and normalized to $1$. Therefore, the fraction of unphosphorylated sites is $1 - x(t)$. The rate of change of the phosphorylated fraction, $\\frac{dx}{dt}$, is given by the balance between the rate of phosphorylation, $v_{\\mathrm{phos}}$, which creates phosphorylated sites, and the rate of dephosphorylation, $v_{\\mathrm{dephos}}$, which removes them.\n\nThe rate of change is thus:\n$$\n\\frac{dx}{dt} = v_{\\mathrm{phos}}(x) - v_{\\mathrm{dephos}}(x)\n$$\n\nThe problem states that both processes follow Michaelis-Menten kinetics. The substrate for the phosphorylation reaction, catalyzed by Lck, is the unphosphorylated ITAM fraction, $1 - x$. The rate of this reaction is given as:\n$$\nv_{\\mathrm{phos}}(x) = \\frac{V_{\\mathrm{p}} (1 - x)}{K_{\\mathrm{p}} + (1 - x)}\n$$\nwhere $V_{\\mathrm{p}}$ is the maximal velocity and $K_{\\mathrm{p}}$ is the Michaelis constant for phosphorylation.\n\nThe substrate for the dephosphorylation reaction, catalyzed by CD45, is the phosphorylated ITAM fraction, $x$. The rate of this reaction is given as:\n$$\nv_{\\mathrm{dephos}}(x) = \\frac{V_{\\mathrm{d}} x}{K_{\\mathrm{d}} + x}\n$$\nwhere $V_{\\mathrm{d}}$ is the maximal velocity and $K_{\\mathrm{d}}$ is the Michaelis constant for dephosphorylation.\n\nBy substituting these two rate expressions into the balance equation, we obtain the ordinary differential equation governing the dynamics of the phosphorylated ITAM fraction $x(t)$:\n$$\n\\frac{dx}{dt} = \\frac{V_{\\mathrm{p}} (1 - x)}{K_{\\mathrm{p}} + (1 - x)} - \\frac{V_{\\mathrm{d}} x}{K_{\\mathrm{d}} + x}\n$$\nThis is the required dynamical equation.\n\nPart (b): Determination of the steady-state phosphorylation fraction.\n\nThe steady state is the condition where the system's state variable no longer changes with time. This is found by setting the time derivative to zero, $\\frac{dx}{dt} = 0$. Let $x^{\\ast}$ denote the steady-state fraction. The steady-state condition is:\n$$\n\\frac{V_{\\mathrm{p}} (1 - x^{\\ast})}{K_{\\mathrm{p}} + (1 - x^{\\ast})} - \\frac{V_{\\mathrm{d}} x^{\\ast}}{K_{\\mathrm{d}} + x^{\\ast}} = 0\n$$\nThis implies that at steady state, the rate of phosphorylation equals the rate of dephosphorylation:\n$$\n\\frac{V_{\\mathrm{p}} (1 - x^{\\ast})}{K_{\\mathrm{p}} + 1 - x^{\\ast}} = \\frac{V_{\\mathrm{d}} x^{\\ast}}{K_{\\mathrm{d}} + x^{\\ast}}\n$$\nTo solve for $x^{\\ast}$, we cross-multiply to clear the denominators:\n$$\nV_{\\mathrm{p}} (1 - x^{\\ast})(K_{\\mathrm{d}} + x^{\\ast}) = V_{\\mathrm{d}} x^{\\ast}(K_{\\mathrm{p}} + 1 - x^{\\ast})\n$$\nExpanding both sides of the equation gives:\n$$\nV_{\\mathrm{p}} (K_{\\mathrm{d}} + x^{\\ast} - K_{\\mathrm{d}}x^{\\ast} - (x^{\\ast})^{2}) = V_{\\mathrm{d}} ( (K_{\\mathrm{p}} + 1)x^{\\ast} - (x^{\\ast})^{2} )\n$$\n$$\nV_{\\mathrm{p}}K_{\\mathrm{d}} + V_{\\mathrm{p}}(1 - K_{\\mathrm{d}})x^{\\ast} - V_{\\mathrm{p}}(x^{\\ast})^{2} = V_{\\mathrm{d}}(K_{\\mathrm{p}} + 1)x^{\\ast} - V_{\\mathrm{d}}(x^{\\ast})^{2}\n$$\nRearranging the terms to form a standard quadratic equation of the form $Ax^2 + Bx + C = 0$:\n$$\n(V_{\\mathrm{d}} - V_{\\mathrm{p}})(x^{\\ast})^{2} + [V_{\\mathrm{p}}(1 - K_{\\mathrm{d}}) - V_{\\mathrm{d}}(K_{\\mathrm{p}} + 1)]x^{\\ast} + V_{\\mathrm{p}}K_{\\mathrm{d}} = 0\n$$\nNow, we substitute the given parameter values: $V_{\\mathrm{p}} = 0.80$, $K_{\\mathrm{p}} = 0.20$, $V_{\\mathrm{d}} = 0.50$, and $K_{\\mathrm{d}} = 0.10$.\n\nThe coefficients of the quadratic equation are:\n$$\nA = V_{\\mathrm{d}} - V_{\\mathrm{p}} = 0.50 - 0.80 = -0.30\n$$\n$$\nB = V_{\\mathrm{p}}(1 - K_{\\mathrm{d}}) - V_{\\mathrm{d}}(K_{\\mathrm{p}} + 1) = 0.80(1 - 0.10) - 0.50(0.20 + 1) = 0.80(0.90) - 0.50(1.20) = 0.72 - 0.60 = 0.12\n$$\n$$\nC = V_{\\mathrm{p}}K_{\\mathrm{d}} = 0.80(0.10) = 0.080\n$$\nThe resulting quadratic equation for $x^{\\ast}$ is:\n$$\n-0.30(x^{\\ast})^{2} + 0.12x^{\\ast} + 0.080 = 0\n$$\nWe solve this equation using the quadratic formula, $x^{\\ast} = \\frac{-B \\pm \\sqrt{B^2 - 4AC}}{2A}$:\n$$\nx^{\\ast} = \\frac{-0.12 \\pm \\sqrt{(0.12)^{2} - 4(-0.30)(0.080)}}{2(-0.30)}\n$$\n$$\nx^{\\ast} = \\frac{-0.12 \\pm \\sqrt{0.0144 + 0.096}}{-0.60}\n$$\n$$\nx^{\\ast} = \\frac{-0.12 \\pm \\sqrt{0.1104}}{-0.60}\n$$\nThe square root of $0.1104$ is approximately $0.332265$.\n$$\nx^{\\ast} = \\frac{-0.12 \\pm 0.332265}{-0.60}\n$$\nThis gives two possible mathematical solutions:\n$$\nx^{\\ast}_{1} = \\frac{-0.12 + 0.332265}{-0.60} = \\frac{0.212265}{-0.60} \\approx -0.353775\n$$\n$$\nx^{\\ast}_{2} = \\frac{-0.12 - 0.332265}{-0.60} = \\frac{-0.452265}{-0.60} \\approx 0.753775\n$$\nSince $x^{\\ast}$ represents a physical fraction of phosphorylated sites, its value must be constrained to the interval $[0, 1]$. The first root, $x^{\\ast}_{1}$, is negative and therefore physically meaningless. The second root, $x^{\\ast}_{2}$, is within the valid physical range.\n\nThus, the physically valid steady-state fraction is $x^{\\ast} \\approx 0.753775$.\nRounding this result to four significant figures, as requested, yields:\n$$\nx^{\\ast} = 0.7538\n$$", "answer": "$$\n\\boxed{0.7538}\n$$", "id": "2898334"}, {"introduction": "Ultimately, the signals initiated at the immunological synapse must be relayed to the nucleus to orchestrate changes in gene expression, leading to T cell proliferation and differentiation. This advanced practice bridges the gap between membrane-proximal events and downstream cellular responses by modeling the nuclear translocation of the key transcription factor NFAT. Instead of just solving the system, you will engage in a computational systems biology approach to perform a local sensitivity analysis. This powerful technique will allow you to determine which parameter—be it the strength of the calcium signal, the kinetics of a phosphatase, or the activity of a kinase—exerts the most control over the integrated NFAT response [@problem_id:2898329]. This exercise provides hands-on experience with modern quantitative methods for dissecting the logic and control points of complex biological pathways.", "problem": "You are to implement a complete, runnable program that performs a local sensitivity analysis of Nuclear Factor of Activated T cells (NFAT) nuclear translocation in response to a calcium-dependent signal initiated at the immunological synapse, in order to identify which model parameter contributes the most to the output variance under small, independent parameter uncertainties. The analysis must be conducted on a reduced, mechanistically grounded model that captures the coupling between calcium-dependent calcineurin activation and nuclear transport of NFAT. Your solution must adhere to the following mathematical definitions, modeling assumptions, and computational tasks.\n\nModeling assumptions and core definitions:\n- Let $x(t)$ denote the nuclear fraction of NFAT as a function of time $t$, with total NFAT normalized to $1$ so that $x(t) \\in [0,1]$.\n- Nuclear transport is modeled as a two-state linear process with calcium-modulated import and kinase-driven export:\n  $$\\frac{dx}{dt} = k_{\\mathrm{in}}(t)\\,(1 - x) - k_{\\mathrm{out}}\\,x.$$\n- The calcium-dependent import rate is\n  $$k_{\\mathrm{in}}(t) = k_{\\mathrm{in},0} + k_{\\mathrm{in},\\max}\\,f_{\\mathrm{CN}}(C(t)),$$\n  where calcineurin (a calcium-dependent phosphatase) activation is modeled by a Hill function\n  $$f_{\\mathrm{CN}}(C) = \\frac{C^{n}}{K_{\\mathrm{Ca}}^{n} + C^{n}},$$\n  with Hill coefficient $n$ and half-activation concentration $K_{\\mathrm{Ca}}$.\n- The export rate is\n  $$k_{\\mathrm{out}} = k_{\\mathrm{out},0} + k_{\\mathrm{out},\\mathrm{kin}} \\cdot K_{\\mathrm{act}},$$\n  where $K_{\\mathrm{act}}$ is an effective kinase activity opposing NFAT nuclear retention.\n- The cytosolic free calcium concentration is modeled as a baseline plus a decaying pulse:\n  $$C(t) = C_{\\mathrm{base}} + A \\, e^{-t/\\tau_{\\mathrm{Ca}}},$$\n  where $A$ is the pulse amplitude and $\\tau_{\\mathrm{Ca}}$ is the decay time constant.\n- The initial condition at $t=0$ represents the pre-stimulation steady state under baseline calcium $C_{\\mathrm{base}}$:\n  $$x(0) = \\frac{k_{\\mathrm{in}}(C_{\\mathrm{base}})}{k_{\\mathrm{in}}(C_{\\mathrm{base}}) + k_{\\mathrm{out}}}.$$\n- The scalar output of interest is the time-averaged nuclear NFAT over a fixed window $[0,T]$:\n  $$y(\\boldsymbol{p}) = \\frac{1}{T} \\int_{0}^{T} x(t;\\boldsymbol{p})\\,dt,$$\n  where $\\boldsymbol{p}$ collects all parameters.\n\nSensitivity analysis tasks:\n- Parameters: Define the parameter vector\n  $$\\boldsymbol{p} = \\big(A,\\ \\tau_{\\mathrm{Ca}},\\ K_{\\mathrm{Ca}},\\ n,\\ k_{\\mathrm{in},0},\\ k_{\\mathrm{in},\\max},\\ k_{\\mathrm{out},0},\\ k_{\\mathrm{out},\\mathrm{kin}},\\ K_{\\mathrm{act}}\\big).$$\n- Consider small, independent uncertainties with known standard deviations $\\boldsymbol{\\sigma} = (\\sigma_0,\\ldots,\\sigma_8)$ for each component of $\\boldsymbol{p}$.\n- Compute local (first-order) sensitivity contributions to the output variance using the delta method:\n  $$\\mathrm{Var}[y] \\approx \\sum_{i=0}^{8} \\left(\\frac{\\partial y}{\\partial p_i}\\right)^{2} \\sigma_i^{2}.$$\n- Approximate each partial derivative by a symmetric finite difference with a relative perturbation $r$:\n  $$\\frac{\\partial y}{\\partial p_i} \\approx \\frac{y(\\boldsymbol{p} + \\delta_i \\mathbf{e}_i) - y(\\boldsymbol{p} - \\delta_i \\mathbf{e}_i)}{2\\,\\delta_i}, \\quad \\delta_i = r\\,p_i,$$\n  where $\\mathbf{e}_i$ is the $i$-th standard basis vector and $r = 10^{-4}$. All parameters must remain strictly positive during perturbation.\n- For each parameter $p_i$, compute its variance contribution\n  $$C_i = \\left(\\frac{\\partial y}{\\partial p_i}\\right)^{2} \\sigma_i^{2}.$$\n- Identify the index $i^\\star$ of the parameter with the largest contribution $C_i$.\n\nConstants and units:\n- Use $C_{\\mathrm{base}} = 0.1$ in micromolar.\n- Use $T = 600$ in seconds.\n- All rate constants are in inverse seconds; calcium concentrations are in micromolar; $n$ and $K_{\\mathrm{act}}$ are dimensionless.\n- Angles are not used.\n- The program’s outputs are indices and therefore unitless.\n\nNumerical requirements:\n- Integrate the ordinary differential equation for $x(t)$ numerically over $[0,T]$ with sufficient accuracy to ensure stable and convergent estimates of $y(\\boldsymbol{p})$ and its finite-difference derivatives.\n- Ensure all intermediate computations maintain parameter positivity. If a perturbation would yield a non-positive parameter, adjust the perturbation magnitude to the largest symmetric value that preserves positivity while remaining proportional to $r$.\n\nTest suite:\nYour program must evaluate the following five independent test cases. Each case specifies the nominal parameter vector $\\boldsymbol{p}$ and the standard deviations $\\boldsymbol{\\sigma}$.\n\n- Case $1$ (moderate calcium, balanced export):\n  - $\\boldsymbol{p} = (A=\\;0.3,\\ \\tau_{\\mathrm{Ca}}=\\;120,\\ K_{\\mathrm{Ca}}=\\;0.2,\\ n=\\;4,\\ k_{\\mathrm{in},0}=\\;0.001,\\ k_{\\mathrm{in},\\max}=\\;0.02,\\ k_{\\mathrm{out},0}=\\;0.002,\\ k_{\\mathrm{out},\\mathrm{kin}}=\\;0.01,\\ K_{\\mathrm{act}}=\\;1.0)$\n  - $\\boldsymbol{\\sigma} = (0.03,\\ 12,\\ 0.02,\\ 0.2,\\ 0.0001,\\ 0.002,\\ 0.0002,\\ 0.001,\\ 0.1)$\n- Case $2$ (weak calcium pulse):\n  - $\\boldsymbol{p} = (A=\\;0.01,\\ \\tau_{\\mathrm{Ca}}=\\;120,\\ K_{\\mathrm{Ca}}=\\;0.2,\\ n=\\;4,\\ k_{\\mathrm{in},0}=\\;0.001,\\ k_{\\mathrm{in},\\max}=\\;0.02,\\ k_{\\mathrm{out},0}=\\;0.002,\\ k_{\\mathrm{out},\\mathrm{kin}}=\\;0.01,\\ K_{\\mathrm{act}}=\\;1.0)$\n  - $\\boldsymbol{\\sigma} = (0.001,\\ 12,\\ 0.02,\\ 0.2,\\ 0.0001,\\ 0.002,\\ 0.0002,\\ 0.001,\\ 0.1)$\n- Case $3$ (strong kinase activity):\n  - $\\boldsymbol{p} = (A=\\;0.3,\\ \\tau_{\\mathrm{Ca}}=\\;120,\\ K_{\\mathrm{Ca}}=\\;0.2,\\ n=\\;4,\\ k_{\\mathrm{in},0}=\\;0.001,\\ k_{\\mathrm{in},\\max}=\\;0.02,\\ k_{\\mathrm{out},0}=\\;0.002,\\ k_{\\mathrm{out},\\mathrm{kin}}=\\;0.01,\\ K_{\\mathrm{act}}=\\;5.0)$\n  - $\\boldsymbol{\\sigma} = (0.03,\\ 12,\\ 0.02,\\ 0.2,\\ 0.0001,\\ 0.002,\\ 0.0002,\\ 0.001,\\ 0.5)$\n- Case $4$ (sustained calcium elevation):\n  - $\\boldsymbol{p} = (A=\\;0.3,\\ \\tau_{\\mathrm{Ca}}=\\;1000,\\ K_{\\mathrm{Ca}}=\\;0.2,\\ n=\\;4,\\ k_{\\mathrm{in},0}=\\;0.001,\\ k_{\\mathrm{in},\\max}=\\;0.02,\\ k_{\\mathrm{out},0}=\\;0.002,\\ k_{\\mathrm{out},\\mathrm{kin}}=\\;0.01,\\ K_{\\mathrm{act}}=\\;1.0)$\n  - $\\boldsymbol{\\sigma} = (0.03,\\ 100,\\ 0.02,\\ 0.2,\\ 0.0001,\\ 0.002,\\ 0.0002,\\ 0.001,\\ 0.1)$\n- Case $5$ (import threshold near operating point):\n  - $\\boldsymbol{p} = (A=\\;0.2,\\ \\tau_{\\mathrm{Ca}}=\\;200,\\ K_{\\mathrm{Ca}}=\\;0.15,\\ n=\\;3.5,\\ k_{\\mathrm{in},0}=\\;0.001,\\ k_{\\mathrm{in},\\max}=\\;0.015,\\ k_{\\mathrm{out},0}=\\;0.002,\\ k_{\\mathrm{out},\\mathrm{kin}}=\\;0.008,\\ K_{\\mathrm{act}}=\\;1.2)$\n  - $\\boldsymbol{\\sigma} = (0.02,\\ 20,\\ 0.015,\\ 0.175,\\ 0.0001,\\ 0.0015,\\ 0.0002,\\ 0.0008,\\ 0.12)$\n\nFinal output format:\n- For each test case, compute the index $i^\\star \\in \\{0,1,\\ldots,8\\}$ of the parameter with the largest variance contribution $C_i$.\n- Your program should produce a single line of output containing the results for the five cases as a comma-separated list of integers enclosed in square brackets, with no spaces. For example: \"[2,7,7,1,3]\".", "solution": "The problem presented is a well-posed and scientifically grounded exercise in computational systems biology. It postulates a simplified, yet mechanistically coherent, mathematical model for a critical signaling event in T-lymphocyte activation: the nuclear translocation of the transcription factor NFAT (Nuclear Factor of Activated T-cells). The task is to perform a local sensitivity analysis to determine which of the model's parameters most significantly influences the time-integrated nuclear NFAT fraction, given specified uncertainties for each parameter. The problem is valid, as it is self-contained, logically consistent, and based on established principles of chemical kinetics and cell signaling. It does not violate any fundamental laws and is computationally tractable. We will proceed with its solution.\n\nThe core of the model is a first-order, linear ordinary differential equation (ODE) that describes the dynamics of the nuclear fraction of NFAT, denoted $x(t)$, where the total cellular NFAT is normalized to $1$:\n$$\n\\frac{dx}{dt} = k_{\\mathrm{in}}(t)\\,(1 - x) - k_{\\mathrm{out}}\\,x\n$$\nHere, the term $k_{\\mathrm{in}}(t)\\,(1-x)$ represents the import of the cytoplasmic fraction of NFAT, $(1-x)$, into the nucleus, while $k_{\\mathrm{out}}\\,x$ represents the export of the nuclear fraction $x$ back to the cytoplasm.\n\nThe nuclear import rate, $k_{\\mathrm{in}}(t)$, is dependent on the intracellular calcium concentration, $C(t)$. This dependence is mediated by the phosphatase calcineurin (CN), whose activity is captured by a Hill function. The functional form is given by:\n$$\nk_{\\mathrm{in}}(t) = k_{\\mathrm{in},0} + k_{\\mathrm{in},\\max}\\,f_{\\mathrm{CN}}(C(t))\n$$\nwhere $k_{\\mathrm{in},0}$ is a basal, calcium-independent import rate, and $k_{\\mathrm{in},\\max}$ is the maximal calcium-dependent rate. The calcineurin activation function $f_{\\mathrm{CN}}(C)$ is:\n$$\nf_{\\mathrm{CN}}(C) = \\frac{C^{n}}{K_{\\mathrm{Ca}}^{n} + C^{n}}\n$$\nThis function describes a cooperative, sigmoidal switch, characterized by the half-activation concentration $K_{\\mathrm{Ca}}$ and the Hill coefficient $n$, which dictates the steepness of the response. The cytosolic calcium signal $C(t)$ that drives this process is modeled as an exponentially decaying pulse on top of a baseline concentration $C_{\\mathrm{base}}$:\n$$\nC(t) = C_{\\mathrm{base}} + A \\, e^{-t/\\tau_{\\mathrm{Ca}}}\n$$\nwhere $A$ is the pulse amplitude and $\\tau_{\\mathrm{Ca}}$ is its decay time constant.\n\nThe nuclear export rate, $k_{\\mathrm{out}}$, is assumed to be constant for a given cellular state, reflecting the activity of opposing kinases. It is defined as:\n$$\nk_{\\mathrm{out}} = k_{\\mathrm{out},0} + k_{\\mathrm{out},\\mathrm{kin}} \\cdot K_{\\mathrm{act}}\n$$\nwhere $k_{\\mathrm{out},0}$ is a basal export rate and $k_{\\mathrm{out},\\mathrm{kin}} \\cdot K_{\\mathrm{act}}$ represents the contribution from a kinase with effective activity $K_{\\mathrm{act}}$.\n\nThe system is assumed to be at steady state before stimulation (at $t < 0$), under the baseline calcium concentration $C_{\\mathrm{base}}$. The initial condition $x(0)$ is therefore derived by setting $\\frac{dx}{dt} = 0$ with $C(t) = C_{\\mathrm{base}}$:\n$$\nx(0) = \\frac{k_{\\mathrm{in}}(C_{\\mathrm{base}})}{k_{\\mathrm{in}}(C_{\\mathrm{base}}) + k_{\\mathrm{out}}} = \\frac{k_{\\mathrm{in},0} + k_{\\mathrm{in},\\max} f_{\\mathrm{CN}}(C_{\\mathrm{base}})}{k_{\\mathrm{in},0} + k_{\\mathrm{in},\\max} f_{\\mathrm{CN}}(C_{\\mathrm{base}}) + k_{\\mathrm{out}}}\n$$\n\nThe scalar output of interest, $y(\\boldsymbol{p})$, is the time-averaged nuclear NFAT fraction over the interval $[0, T]$, where $\\boldsymbol{p}$ is the vector of model parameters:\n$$\n\\boldsymbol{p} = \\big(A,\\ \\tau_{\\mathrm{Ca}},\\ K_{\\mathrm{Ca}},\\ n,\\ k_{\\mathrm{in},0},\\ k_{\\mathrm{in},\\max},\\ k_{\\mathrm{out},0},\\ k_{\\mathrm{out},\\mathrm{kin}},\\ K_{\\mathrm{act}}\\big)\n$$\nThe output is thus:\n$$\ny(\\boldsymbol{p}) = \\frac{1}{T} \\int_{0}^{T} x(t;\\boldsymbol{p})\\,dt\n$$\n\nThe objective is to perform a local sensitivity analysis using the delta method. Assuming small, independent parameter uncertainties with known standard deviations $\\sigma_i$, the variance of the output $y$ can be approximated by a first-order Taylor expansion:\n$$\n\\mathrm{Var}[y] \\approx \\sum_{i=0}^{8} \\left(\\frac{\\partial y}{\\partial p_i}\\right)^{2} \\sigma_i^{2}\n$$\nThe term $C_i = (\\frac{\\partial y}{\\partial p_i})^{2} \\sigma_i^{2}$ represents the contribution of parameter $p_i$ to the total output variance. We are tasked with finding the index $i^\\star$ corresponding to the largest contribution, $C_{i^\\star} = \\max_i C_i$.\n\nThe partial derivatives $\\frac{\\partial y}{\\partial p_i}$ are computed numerically using a symmetric finite difference approximation:\n$$\n\\frac{\\partial y}{\\partial p_i} \\approx \\frac{y(\\boldsymbol{p} + \\delta_i \\mathbf{e}_i) - y(\\boldsymbol{p} - \\delta_i \\mathbf{e}_i)}{2\\,\\delta_i}\n$$\nwhere $\\mathbf{e}_i$ is the $i$-th standard basis vector and the perturbation $\\delta_i$ is a small fraction of the nominal parameter value, $\\delta_i = r \\cdot p_i$, with $r = 10^{-4}$.\n\nTo implement this, a robust numerical procedure is required.\n1.  **ODE Integration**: The evaluation of $y(\\boldsymbol{p})$ for any given parameter vector $\\boldsymbol{p}$ necessitates the numerical solution of the initial value problem for $x(t)$. To compute the integral efficiently, we augment the system of ODEs. Let $I(t) = \\int_{0}^{t} x(\\tau) d\\tau$. Then $\\frac{dI}{dt} = x(t)$. We solve the $2$-dimensional system:\n    $$\n    \\frac{d}{dt} \\begin{pmatrix} x \\\\ I \\end{pmatrix} = \\begin{pmatrix} k_{\\mathrm{in}}(t)(1 - x) - k_{\\mathrm{out}}x \\\\ x \\end{pmatrix}\n    $$\n    with the initial condition $[x(0), I(0)=0]$ over the time interval $[0, T]$. The value of the integral is then simply $I(T)$, and the output is $y(\\boldsymbol{p}) = I(T)/T$. We will use the `scipy.integrate.solve_ivp` function for this purpose, which provides an accurate and adaptive solver.\n\n2.  **Sensitivity Calculation**: A main function will iterate through each of the $5$ test cases. For each case, it will loop through the $9$ parameters. In each iteration of the inner loop (for parameter $p_i$), it perturbs $p_i$ by $\\pm \\delta_i$, calls the ODE solver routine to compute $y(\\boldsymbol{p}+\\delta_i\\mathbf{e}_i)$ and $y(\\boldsymbol{p}-\\delta_i\\mathbf{e}_i)$, calculates the derivative approximation, and then computes the variance contribution $C_i$. After evaluating all $9$ contributions, the index of the maximum contribution is identified and stored.\n\nThe final program will assemble the results from all test cases into the specified output format.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Main function to run the sensitivity analysis for all test cases.\n    \"\"\"\n    # Define constants as specified in the problem statement.\n    C_BASE = 0.1  # micromolar\n    T_INTEGRATE = 600.0  # seconds\n    R_PERTURB = 1e-4  # relative perturbation factor\n\n    def compute_y(p, c_base_val, t_integrate_val):\n        \"\"\"\n        Computes the time-averaged nuclear NFAT for a given parameter vector.\n\n        Args:\n            p (np.ndarray): The parameter vector.\n            c_base_val (float): Baseline calcium concentration.\n            t_integrate_val (float): Total integration time.\n\n        Returns:\n            float: The scalar output y(p).\n        \"\"\"\n        # Unpack the parameter vector\n        # p = (A, tau_Ca, K_Ca, n, k_in0, k_in_max, k_out0, k_out_kin, K_act)\n        A, tau_Ca, K_Ca, n, k_in0, k_in_max, k_out0, k_out_kin, K_act = p\n        \n        # All parameters must be positive for physical meaning. A perturbation with r=1e-4\n        # on positive nominal values will not violate this.\n        if not all(val > 0 for val in [tau_Ca, K_Ca, n, k_in_max, k_out_kin]):\n            # This check is for robustness against invalid parameter sets.\n            # Amplitude A and basal rates can be zero in principle, but not negative.\n            if A < 0 or k_in0 < 0 or k_out0 < 0:\n                return np.nan\n\n        # Calculate the constant export rate\n        k_out = k_out0 + k_out_kin * K_act\n\n        def f_cn_func(c_val):\n            \"\"\"Hill function for calcineurin activation.\"\"\"\n            if c_val <= 0: return 0.0\n            # Numerically stable formulation\n            ratio_c_k = c_val / K_Ca\n            try:\n                # Use np.power for careful handling of potential overflows\n                ratio_pow_n = np.power(ratio_c_k, n)\n            except OverflowError:\n                # If (C/K_Ca)^n overflows, the function is saturated at 1\n                return 1.0\n            return ratio_pow_n / (1.0 + ratio_pow_n)\n\n        def k_in_func(t):\n            \"\"\"Time-dependent import rate.\"\"\"\n            c_val = c_base_val + A * np.exp(-t / tau_Ca)\n            return k_in0 + k_in_max * f_cn_func(c_val)\n\n        # Calculate the initial condition x(0) at pre-stimulation steady-state\n        k_in_base = k_in0 + k_in_max * f_cn_func(c_base_val)\n        if (k_in_base + k_out) == 0:\n            x0 = 0.0\n        else:\n            x0 = k_in_base / (k_in_base + k_out)\n\n        # Define the augmented ODE system: [dx/dt, dI/dt]\n        def ode_system(t, y_vec):\n            x, _ = y_vec\n            dxdt = k_in_func(t) * (1.0 - x) - k_out * x\n            dIdt = x\n            return [dxdt, dIdt]\n\n        # Set initial state vector [x(0), I(0)]\n        y0 = [x0, 0.0]\n        \n        # Numerically solve the ODE system\n        sol = solve_ivp(\n            ode_system, \n            (0, t_integrate_val), \n            y0, \n            method='RK45', \n            atol=1e-9,  # Stricter tolerances for accuracy in finite differences\n            rtol=1e-6\n        )\n\n        # The total integral is the final value of the second state variable\n        integral_x = sol.y[1, -1]\n        \n        # The output y is the time-averaged integral\n        return integral_x / t_integrate_val\n\n    # Define the test cases from the problem statement.\n    # Each case is a tuple of (parameter_vector, std_deviation_vector).\n    test_cases = [\n        # Case 1 (moderate calcium, balanced export)\n        (\n            (0.3, 120, 0.2, 4, 0.001, 0.02, 0.002, 0.01, 1.0),\n            (0.03, 12, 0.02, 0.2, 0.0001, 0.002, 0.0002, 0.001, 0.1)\n        ),\n        # Case 2 (weak calcium pulse)\n        (\n            (0.01, 120, 0.2, 4, 0.001, 0.02, 0.002, 0.01, 1.0),\n            (0.001, 12, 0.02, 0.2, 0.0001, 0.002, 0.0002, 0.001, 0.1)\n        ),\n        # Case 3 (strong kinase activity)\n        (\n            (0.3, 120, 0.2, 4, 0.001, 0.02, 0.002, 0.01, 5.0),\n            (0.03, 12, 0.02, 0.2, 0.0001, 0.002, 0.0002, 0.001, 0.5)\n        ),\n        # Case 4 (sustained calcium elevation)\n        (\n            (0.3, 1000, 0.2, 4, 0.001, 0.02, 0.002, 0.01, 1.0),\n            (0.03, 100, 0.02, 0.2, 0.0001, 0.002, 0.0002, 0.001, 0.1)\n        ),\n        # Case 5 (import threshold near operating point)\n        (\n            (0.2, 200, 0.15, 3.5, 0.001, 0.015, 0.002, 0.008, 1.2),\n            (0.02, 20, 0.015, 0.175, 0.0001, 0.0015, 0.0002, 0.0008, 0.12)\n        )\n    ]\n    \n    results = []\n    for p_nominal, sigma_vec in test_cases:\n        p_nominal = np.array(p_nominal)\n        sigma_vec = np.array(sigma_vec)\n        \n        num_params = len(p_nominal)\n        contributions = np.zeros(num_params)\n\n        for i in range(num_params):\n            p_i = p_nominal[i]\n            \n            if p_i == 0:\n                # If a nominal parameter is zero, relative perturbation is not possible.\n                # Its derivative is taken as 0. None of the test cases have this.\n                deriv = 0.0\n            else:\n                delta_i = R_PERTURB * p_i\n                \n                # Perturb parameter p_i up\n                p_plus = p_nominal.copy()\n                p_plus[i] += delta_i\n                y_plus = compute_y(p_plus, C_BASE, T_INTEGRATE)\n                \n                # Perturb parameter p_i down\n                p_minus = p_nominal.copy()\n                p_minus[i] -= delta_i\n                y_minus = compute_y(p_minus, C_BASE, T_INTEGRATE)\n                \n                # Symmetric finite difference approximation of the derivative\n                deriv = (y_plus - y_minus) / (2 * delta_i)\n\n            # Calculate the variance contribution for parameter p_i\n            contributions[i] = (deriv ** 2) * (sigma_vec[i] ** 2)\n            \n        # Find the index of the parameter with the largest contribution\n        i_star = np.argmax(contributions)\n        results.append(i_star)\n\n    # Print the final result in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2898329"}]}