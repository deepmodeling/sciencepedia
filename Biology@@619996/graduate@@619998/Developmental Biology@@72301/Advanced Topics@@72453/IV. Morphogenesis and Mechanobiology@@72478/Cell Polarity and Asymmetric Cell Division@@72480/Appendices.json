{"hands_on_practices": [{"introduction": "The essence of asymmetric cell division is the unequal segregation of fate determinants. This exercise provides a simplified geometric model to quantify how the precise orientation of the mitotic spindle can affect the partitioning of a cortically localized protein. By calculating the overlap between the protein's domain and the daughter cell's inheritance zone, you will build a foundational, quantitative intuition for how cellular geometry and machinery alignment work together to control cell fate [@problem_id:2623997].", "problem": "A polarized Drosophila neuroblast undergoes asymmetric cell division in which the fate determinant Numb is partitioned to the differentiating daughter that inherits the basal cortex. In many systems, Numb localizes uniformly within a cortical crescent that spans a finite angular region of the cell cortex. The mitotic spindle defines a cleavage plane that partitions the cortex into two hemispheres separated by an angular distance of $180^{\\circ}$; the hemisphere oriented toward the basal side defines the differentiating daughter’s cortical inheritance domain. \n\nAssume the following, all of which are standard and well-supported simplifying assumptions for modeling cortical inheritance:\n- The cell is approximately spherical so that the cortex can be represented by a circle parameterized by angle in degrees.\n- Numb is restricted to a cortical crescent of uniform surface density across its angular extent, with total angular width $\\alpha$.\n- The total amount of Numb inherited by a daughter is proportional to the arc length (equivalently, angular measure) of the overlap between the Numb crescent and that daughter’s cortical hemisphere.\n- The spindle misalignment by an angle $\\theta$ rotates the hemisphere assigned to the differentiating daughter by $\\theta$ relative to the ideal alignment in which the hemisphere is centered on the Numb crescent.\n\nLet the Numb crescent be centered at $0^{\\circ}$ and span the angular interval from $-\\alpha/2$ to $+\\alpha/2$. The differentiating daughter’s hemisphere spans the interval from $\\theta - 90^{\\circ}$ to $\\theta + 90^{\\circ}$. \n\nGiven $\\alpha = 90^{\\circ}$ and $\\theta = 15^{\\circ}$, compute the fraction (dimensionless) of the total Numb inherited by the differentiating daughter. Express your final answer as a single real number with no units. Angles are in degrees. No rounding is required.", "solution": "The problem posed is a well-defined exercise in quantitative biology, specifically modeling the segregation of a cell fate determinant during asymmetric cell division. The model is based on standard simplifying assumptions and the parameters are within a biologically plausible range. The problem is scientifically grounded, internally consistent, and complete. Therefore, it is valid, and a solution will be derived.\n\nThe objective is to compute the fraction of the total Numb protein that is inherited by the differentiating daughter cell. According to the problem statement, this fraction is equivalent to the ratio of the angular measure of the overlap between the Numb crescent and the daughter's cortical hemisphere to the total angular measure of the Numb crescent.\n\nLet $F$ represent the fraction of Numb inherited.\nLet $I_{Numb}$ be the angular interval of the Numb crescent and $I_{Daughter}$ be the angular interval of the daughter cell's cortical inheritance domain.\nThe total angular width of the Numb crescent is $\\alpha$. The length (angular measure) of the Numb interval is therefore $L(I_{Numb}) = \\alpha$.\nThe fraction $F$ is defined as:\n$$F = \\frac{L(I_{Numb} \\cap I_{Daughter})}{L(I_{Numb})} = \\frac{L(I_{Numb} \\cap I_{Daughter})}{\\alpha}$$\n\nThe problem specifies the intervals based on the parameters $\\alpha$ and $\\theta$.\nThe Numb crescent is centered at $0^{\\circ}$ with total width $\\alpha$, so its interval is:\n$$I_{Numb} = \\left[ -\\frac{\\alpha}{2}, \\frac{\\alpha}{2} \\right]$$\nThe daughter's hemisphere has a width of $180^{\\circ}$ and is rotated by an angle $\\theta$ from the ideal orientation. Its interval is:\n$$I_{Daughter} = \\left[ \\theta - 90^{\\circ}, \\theta + 90^{\\circ} \\right]$$\n\nThe given values are $\\alpha = 90^{\\circ}$ and $\\theta = 15^{\\circ}$. We substitute these values into the interval definitions.\nFor the Numb crescent:\n$$I_{Numb} = \\left[ -\\frac{90^{\\circ}}{2}, \\frac{90^{\\circ}}{2} \\right] = \\left[ -45^{\\circ}, 45^{\\circ} \\right]$$\nThe total angular measure of the Numb crescent is $L(I_{Numb}) = 45^{\\circ} - (-45^{\\circ}) = 90^{\\circ}$, which is consistent with the given $\\alpha$.\n\nFor the daughter's cortical hemisphere:\n$$I_{Daughter} = \\left[ 15^{\\circ} - 90^{\\circ}, 15^{\\circ} + 90^{\\circ} \\right] = \\left[ -75^{\\circ}, 105^{\\circ} \\right]$$\n\nTo find the inherited portion of Numb, we must determine the intersection of these two intervals, $I_{overlap} = I_{Numb} \\cap I_{Daughter}$. The intersection of two intervals $[a, b]$ and $[c, d]$ is $[\\max(a, c), \\min(b, d)]$.\nIn this case, $a = -45^{\\circ}$, $b = 45^{\\circ}$, $c = -75^{\\circ}$, and $d = 105^{\\circ}$.\n\nThe lower bound of the overlap interval is:\n$$\\max\\left(-45^{\\circ}, -75^{\\circ}\\right) = -45^{\\circ}$$\nThe upper bound of the overlap interval is:\n$$\\min\\left(45^{\\circ}, 105^{\\circ}\\right) = 45^{\\circ}$$\n\nTherefore, the interval of overlap is:\n$$I_{overlap} = \\left[ -45^{\\circ}, 45^{\\circ} \\right]$$\nThis demonstrates that the Numb crescent is entirely contained within the daughter's inheritance domain, as $I_{overlap} = I_{Numb}$.\n\nThe angular measure of this overlap is:\n$$L(I_{overlap}) = 45^{\\circ} - (-45^{\\circ}) = 90^{\\circ}$$\n\nFinally, we compute the fraction $F$ by taking the ratio of the overlap length to the total Numb crescent length:\n$$F = \\frac{L(I_{overlap})}{L(I_{Numb})} = \\frac{90^{\\circ}}{90^{\\circ}} = 1$$\nThe result is a dimensionless quantity, as required. The differentiating daughter cell inherits the entire Numb crescent.", "answer": "$$\\boxed{1}$$", "id": "2623997"}, {"introduction": "Establishing a polarized state is a dynamic process that precedes the physical act of division. This practice moves beyond static geometry to explore the competition between directed transport, or advection, and random molecular motion, or diffusion. By deriving and applying the Péclet number—a key dimensionless group in transport phenomena—you will learn to predict which physical force dominates the segregation of polarity proteins in a classic developmental system [@problem_id:2624020].", "problem": "A central feature of anterior–posterior polarity establishment in the one-cell Caenorhabditis elegans embryo is the segregation of Partitioning defective protein $6$ (PAR-$6$) on the cell cortex by advection due to actomyosin-driven cortical flows and by lateral diffusion. Consider a one-dimensional cortical segment of length $L$ with a uniform, steady cortical flow of speed $v$ directed toward one end. Let $c(x,t)$ denote the surface concentration of PAR-$6$ along this cortex. The standard conservation-law-based advection–diffusion equation for this setting is\n$$\n\\frac{\\partial c}{\\partial t} + v\\,\\frac{\\partial c}{\\partial x} \\;=\\; D\\,\\frac{\\partial^{2} c}{\\partial x^{2}},\n$$\nwhere $D$ is the effective cortical diffusion coefficient of PAR-$6$. Using characteristic scales $x \\sim L$ and a consistent transport time scale obtained from these dynamics, non-dimensionalize the equation to identify the single dimensionless group that quantifies the relative strength of advection to diffusion for PAR-$6$ transport along the cortex. Then, compute its numerical value for measured parameters $v = 0.3\\,\\mu\\mathrm{m}/\\mathrm{s}$, $D = 0.05\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}$, and $L = 50\\,\\mu\\mathrm{m}$. Finally, based on the magnitude of this dimensionless group, interpret whether advection or diffusion is expected to dominate PAR-$6$ domain formation in this regime, using first-principles reasoning from the non-dimensionalized equation.\n\nReport the final dimensionless number only; do not include units. Do not round if an exact value is obtained; otherwise, round to four significant figures.", "solution": "The problem statement is first subjected to validation.\n\nGivens are extracted verbatim as follows:\n1.  Governing equation: $\\frac{\\partial c}{\\partial t} + v\\,\\frac{\\partial c}{\\partial x} \\;=\\; D\\,\\frac{\\partial^{2} c}{\\partial x^{2}}$\n2.  $c(x,t)$: surface concentration of PAR-$6$.\n3.  $L$: length of the one-dimensional cortical segment.\n4.  $v$: uniform, steady cortical flow speed.\n5.  $D$: effective cortical diffusion coefficient of PAR-$6$.\n6.  Characteristic length scale: $x \\sim L$.\n7.  Task: Non-dimensionalize the equation using a consistent transport time scale.\n8.  Task: Identify the dimensionless group quantifying the relative strength of advection to diffusion.\n9.  Parameter values: $v = 0.3\\,\\mu\\mathrm{m}/\\mathrm{s}$, $D = 0.05\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}$, and $L = 50\\,\\mu\\mathrm{m}$.\n10. Task: Compute the numerical value of the dimensionless group.\n11. Task: Interpret the result based on first-principles reasoning from the non-dimensionalized equation.\n\nThe problem is deemed valid. It is scientifically grounded in the established principles of transport phenomena (the advection-diffusion equation) and its application to a well-studied problem in developmental biology. The problem is well-posed, providing all necessary information for a unique solution. The parameters are physically realistic. The task is objective and requires standard mathematical procedures. There are no logical inconsistencies or factual unsoundness.\n\nWe proceed to the solution. The governing partial differential equation for the concentration $c(x,t)$ is given as:\n$$\n\\frac{\\partial c}{\\partial t} + v\\,\\frac{\\partial c}{\\partial x} = D\\,\\frac{\\partial^{2} c}{\\partial x^{2}}\n$$\nTo non-dimensionalize this equation, we introduce dimensionless variables. The characteristic length scale is given as the system size $L$. Therefore, we define a dimensionless spatial coordinate $\\tilde{x}$:\n$$\n\\tilde{x} = \\frac{x}{L}\n$$\nThe problem requires using a \"consistent transport time scale\". There are two fundamental time scales in this system: the advective time scale, $\\tau_{\\text{adv}} = \\frac{L}{v}$, and the diffusive time scale, $\\tau_{\\text{diff}} = \\frac{L^{2}}{D}$. We will select the diffusive time scale for non-dimensionalization, as is conventional to normalize the highest-order derivative term. Let the characteristic time scale be $\\tau = \\tau_{\\text{diff}} = \\frac{L^{2}}{D}$. The dimensionless time $\\tilde{t}$ is then:\n$$\n\\tilde{t} = \\frac{t}{\\tau} = \\frac{tD}{L^{2}}\n$$\nFinally, we define a dimensionless concentration $\\tilde{c}$ by scaling $c(x,t)$ with a characteristic concentration $c_{0}$ (which will cancel out of the equation):\n$$\n\\tilde{c} = \\frac{c}{c_{0}}\n$$\nWe now express the derivatives in the original equation in terms of these new dimensionless variables using the chain rule:\n$$\n\\frac{\\partial c}{\\partial t} = \\frac{\\partial (c_{0}\\tilde{c})}{\\partial \\tilde{t}} \\frac{\\partial \\tilde{t}}{\\partial t} = c_{0} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{t}} \\left(\\frac{D}{L^{2}}\\right)\n$$\n$$\n\\frac{\\partial c}{\\partial x} = \\frac{\\partial (c_{0}\\tilde{c})}{\\partial \\tilde{x}} \\frac{\\partial \\tilde{x}}{\\partial x} = c_{0} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}} \\left(\\frac{1}{L}\\right)\n$$\n$$\n\\frac{\\partial^{2} c}{\\partial x^{2}} = \\frac{\\partial}{\\partial x} \\left(\\frac{c_{0}}{L} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}}\\right) = \\frac{c_{0}}{L} \\frac{\\partial}{\\partial \\tilde{x}} \\left(\\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}}\\right) \\frac{\\partial \\tilde{x}}{\\partial x} = \\frac{c_{0}}{L} \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}} \\left(\\frac{1}{L}\\right) = \\frac{c_{0}}{L^{2}} \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}}\n$$\nSubstituting these expressions back into the original advection-diffusion equation yields:\n$$\nc_{0} \\frac{D}{L^{2}} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{t}} + v \\left(\\frac{c_{0}}{L} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}}\\right) = D \\left(\\frac{c_{0}}{L^{2}} \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}}\\right)\n$$\nTo obtain the final dimensionless form, we divide the entire equation by the coefficient of the diffusion term, $\\frac{Dc_{0}}{L^{2}}$:\n$$\n\\frac{c_{0} \\frac{D}{L^{2}}}{\\frac{Dc_{0}}{L^{2}}} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{t}} + \\frac{v \\frac{c_{0}}{L}}{\\frac{Dc_{0}}{L^{2}}} \\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}} = \\frac{D \\frac{c_{0}}{L^{2}}}{\\frac{Dc_{0}}{L^{2}}} \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}}\n$$\nThis simplifies to:\n$$\n\\frac{\\partial \\tilde{c}}{\\partial \\tilde{t}} + \\left(\\frac{vL}{D}\\right) \\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}} = \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}}\n$$\nThe single dimensionless group that appears is the coefficient of the advective term. This is the Péclet number, denoted as $Pe$:\n$$\nPe = \\frac{vL}{D}\n$$\nThis number quantifies the relative strength of advection to diffusion. A large Péclet number implies that advection dominates transport, while a small Péclet number implies that diffusion dominates.\n\nNext, we compute the numerical value of this dimensionless group using the provided parameters:\n$v = 0.3\\,\\mu\\mathrm{m}/\\mathrm{s}$\n$D = 0.05\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}$\n$L = 50\\,\\mu\\mathrm{m}$\n\nSubstituting these values into the expression for the Péclet number:\n$$\nPe = \\frac{(0.3\\,\\mu\\mathrm{m}/\\mathrm{s}) \\times (50\\,\\mu\\mathrm{m})}{0.05\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}} = \\frac{15\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}}{0.05\\,\\mu\\mathrm{m}^{2}/\\mathrm{s}} = \\frac{15}{0.05} = 300\n$$\nThe numerical value of the Péclet number is exactly $300$.\n\nFinally, we interpret this result. The non-dimensionalized equation is:\n$$\n\\frac{\\partial \\tilde{c}}{\\partial \\tilde{t}} + 300\\,\\frac{\\partial \\tilde{c}}{\\partial \\tilde{x}} = \\frac{\\partial^{2} \\tilde{c}}{\\partial \\tilde{x}^{2}}\n$$\nFrom first principles, the terms in this equation represent the rate of change of concentration in a dimensionless control volume. The advective flux term, with coefficient $300$, is three hundred times larger than the diffusive flux term, with coefficient $1$. Since $Pe = 300 \\gg 1$, advection is overwhelmingly the dominant transport mechanism for PAR-$6$ under these conditions. Diffusion, which acts to smooth out concentration gradients, is a comparatively weak effect. This strong advective transport by cortical flows is therefore expected to be the primary driver for the segregation of PAR-$6$ into a distinct domain within the *C. elegans* embryo, a conclusion consistent with experimental observations.", "answer": "$$\\boxed{300}$$", "id": "2624020"}, {"introduction": "Modern developmental biology often seeks to infer hidden mechanisms from observable dynamics. This advanced practice bridges the gap between theoretical models and experimental data by introducing a powerful Bayesian inference framework. You will use a biophysical model of spindle rotation and noisy trajectory data to work backwards and estimate the unobservable spatial distribution of cortical pulling forces, showcasing a key skill in quantitative, data-driven cell biology [@problem_id:2623956].", "problem": "You are given a mechanistic and statistical framework to infer the spatial distribution of cortical pulling forces that drive mitotic spindle rotation in asymmetric cell division from tracked spindle trajectories. The developmental biology context motivates a forward model: in an overdamped regime, the instantaneous angular velocity of the spindle orientation, denoted by $\\theta(t)$, is proportional to the net torque generated by astral microtubules pulling from the cortex. The cortex is modeled as a one-dimensional closed ring parameterized by angle $\\phi \\in [0, 2\\pi)$ with a force density $f(\\phi) \\ge 0$. The torque contribution from a cortical location at angle $\\phi$ is proportional to the sine of the lever arm relative orientation, producing a kernel $K(\\phi, \\theta) \\propto \\sin(\\phi - \\theta)$ that maps cortical force to torque. This yields an overdamped rotational dynamics model $d\\theta/dt = \\mu \\int_0^{2\\pi} \\sin(\\phi - \\theta) f(\\phi) \\, d\\phi + \\eta(t)$ with mobility coefficient $\\mu$ and a stochastic term $\\eta(t)$ that reflects unmodeled fluctuations and measurement noise. Angles must be expressed in radians and time in seconds. Angular velocity is therefore in radians per second.\n\nFor computation, discretize the cortex into $N$ bins with centers $\\{\\phi_j\\}_{j=1}^N$, where $\\phi_j = 2\\pi (j-1)/N$, and approximate the integral with a uniform Riemann sum with bin width $w = 2\\pi/N$. Given tracked spindle orientations at discrete times $\\{\\theta_t\\}_{t=0}^{T-1}$ with a fixed time step $\\Delta t$, define observed angular velocities $y_t = (\\theta_{t+1} - \\theta_t)/\\Delta t$ for $t \\in \\{0,\\dots,T-2\\}$. The discrete forward model is\n$$\ny_t = \\mu \\sum_{j=1}^N w \\sin(\\phi_j - \\theta_t) f_j + \\varepsilon_t,\n$$\nwhere $f_j \\approx f(\\phi_j)$ are the unknown cortical pulling force densities and $\\varepsilon_t \\sim \\mathcal{N}(0, \\sigma^2)$ are independent Gaussian noise terms with known standard deviation $\\sigma$.\n\nWe adopt a Bayesian linear Gaussian model. The likelihood is\n$$\n\\mathbf{y} \\mid \\mathbf{f} \\sim \\mathcal{N}(\\mathbf{H}\\mathbf{f}, \\sigma^2 \\mathbf{I}),\n$$\nwhere $\\mathbf{y} \\in \\mathbb{R}^{T-1}$ collects $y_t$ and $\\mathbf{H} \\in \\mathbb{R}^{(T-1)\\times N}$ has entries $H_{t,j} = \\mu w \\sin(\\phi_j - \\theta_t)$.\n\nThe prior encodes biological knowledge: cortical dynein-recruiting molecules (for example, in mammalian cells, Nuclear Mitotic Apparatus protein (NuMA) with Leucine-Glycine-Asparagine repeat protein (LGN), or in Caenorhabditis elegans, Guanine nucleotide-binding protein alpha subunits (Gα) with G protein regulator 1/2 (GPR-1/2)) are enriched at specific poles and correlate with larger pulling forces there. We thus set a Gaussian prior on $\\mathbf{f}$ with mean proportional to an observed or hypothesized molecular concentration profile $\\mathbf{c} = (c_1,\\dots,c_N)$,\n$$\n\\mathbf{f} \\sim \\mathcal{N}(\\mathbf{m}, \\boldsymbol{\\Sigma}_{\\text{prior}}), \\quad \\mathbf{m} = \\kappa \\frac{\\mathbf{c}}{\\bar{c}},\n$$\nwhere $\\bar{c} = \\frac{1}{N}\\sum_{j=1}^N c_j$ and $\\kappa$ is a scale constant. Smoothness of $\\mathbf{f}$ along the cortex is encouraged by a Gaussian Markov Random Field (GMRF) prior with precision\n$$\n\\boldsymbol{\\Sigma}_{\\text{prior}}^{-1} = \\alpha \\mathbf{I} + \\beta \\mathbf{L},\n$$\nwhere $\\alpha > 0$ is a ridge parameter, $\\beta \\ge 0$ sets smoothness strength, and $\\mathbf{L}$ is the circulant graph Laplacian on the ring cortex defined by $(\\mathbf{L}\\mathbf{f})_j = 2 f_j - f_{j-1} - f_{j+1}$ with periodic wrap-around indexing.\n\nUnder this linear Gaussian model, the posterior is Gaussian with mean\n$$\n\\hat{\\mathbf{f}} = \\left(\\mathbf{H}^\\top \\sigma^{-2} \\mathbf{I}\\, \\mathbf{H} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}\\right)^{-1}\\left(\\mathbf{H}^\\top \\sigma^{-2} \\mathbf{I} \\,\\mathbf{y} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}\\mathbf{m}\\right).\n$$\n\nDefine the anterior hemisphere $\\mathcal{A} = \\{\\phi:\\cos\\phi>0\\}$ and the posterior hemisphere $\\mathcal{P} = \\{\\phi:\\cos\\phi<0\\}$. From the posterior mean, compute the posterior posterior-to-anterior force ratio\n$$\nR = \\frac{\\sum_{j:\\cos\\phi_j<0} \\hat{f}_j}{\\sum_{j:\\cos\\phi_j>0} \\hat{f}_j}.\n$$\nThis $R$ is dimensionless. All angular quantities must be in radians and time in seconds. The final numeric outputs must be decimal numbers rounded to three decimal places and require no physical units.\n\nImplement a program that performs the above inference and computes $R$ for each test case in the test suite below. Your program must not require any input; it must internally define the test suite, perform the calculations, and print a single line of output containing the results as a comma-separated list enclosed in square brackets, for example, $[r_1,r_2,r_3]$.\n\nUse the following test suite, which varies the molecular prior mean and the tracked spindle trajectory:\n\n- Test case $1$ (asymmetric posterior-enriched prior, positive rotation):\n  - $N = 16$, $\\Delta t = 1.0\\,\\text{s}$, $\\mu = 1.0$, $\\sigma = 0.2\\,\\text{rad}/\\text{s}$, $\\alpha = 1.0$, $\\beta = 2.0$, $\\kappa = 1.0$.\n  - $\\phi_j = 2\\pi (j-1)/N$ for $j \\in \\{1,\\dots,N\\}$.\n  - Molecular distribution: $c_j = 1 + 2 \\exp\\left(-\\frac{d(\\phi_j,\\pi)^2}{2\\times 0.6^2}\\right)$, where $d(\\phi,\\phi_0)$ is the wrapped angular distance on the circle.\n  - Tracked spindle angles (radians): $\\{\\theta_t\\}_{t=0}^{5} = \\{0.00, 0.06, 0.13, 0.21, 0.30, 0.40\\}$.\n\n- Test case $2$ (uniform prior, near-stationary spindle):\n  - $N = 16$, $\\Delta t = 1.0\\,\\text{s}$, $\\mu = 1.0$, $\\sigma = 0.2\\,\\text{rad}/\\text{s}$, $\\alpha = 1.0$, $\\beta = 2.0$, $\\kappa = 1.0$.\n  - $\\phi_j$ as above.\n  - Molecular distribution: $c_j = 1$ for all $j$.\n  - Tracked spindle angles (radians): $\\{\\theta_t\\}_{t=0}^{4} = \\{0.00, 0.01, 0.00, -0.01, 0.00\\}$.\n\n- Test case $3$ (asymmetric anterior-enriched prior, negative rotation):\n  - $N = 16$, $\\Delta t = 1.0\\,\\text{s}$, $\\mu = 1.0$, $\\sigma = 0.2\\,\\text{rad}/\\text{s}$, $\\alpha = 1.0$, $\\beta = 2.0$, $\\kappa = 1.0$.\n  - $\\phi_j$ as above.\n  - Molecular distribution: $c_j = 1 + 2 \\exp\\left(-\\frac{d(\\phi_j,0)^2}{2\\times 0.6^2}\\right)$.\n  - Tracked spindle angles (radians): $\\{\\theta_t\\}_{t=0}^{4} = \\{0.00, -0.05, -0.11, -0.18, -0.26\\}$.\n\nYour program must return a single line containing a list $[R_1,R_2,R_3]$ corresponding to the three test cases above, each rounded to three decimal places. The answer is dimensionless. The angle unit must be radians and the time unit must be seconds. No other outputs are permitted beyond this single line.", "solution": "The problem statement has been critically examined and is determined to be valid. It is a well-posed computational problem grounded in an established biophysical and statistical framework for inferring parameters of a mechanical system from noisy data, a common task in quantitative biology. The model of spindle rotation in an overdamped regime driven by cortical pulling forces is a standard paradigm in the study of asymmetric cell division. The use of a Bayesian linear model with a Gaussian Markov Random Field prior is a rigorous and appropriate statistical method for this inference problem. All required parameters, data, and mathematical formulations are provided and are self-consistent.\n\nThe objective is to compute the posterior mean of the cortical pulling force distribution, $\\hat{\\mathbf{f}}$, and from it, the ratio $R$ of total force in the posterior hemisphere to that in the anterior hemisphere. This is achieved by implementing the provided Bayesian inference framework. The procedure is as follows for each test case.\n\nFirst, we establish the discrete representation of the system. The one-dimensional cortex is discretized into $N$ bins with bin centers $\\phi_j = 2\\pi (j-1)/N$ for $j \\in \\{1, \\dots, N\\}$. The bin width is $w = 2\\pi/N$.\n\nSecond, we process the time-series data of spindle orientation, $\\{\\theta_t\\}_{t=0}^{T-1}$. The observed angular velocities, which constitute our data vector $\\mathbf{y} \\in \\mathbb{R}^{T-1}$, are computed via finite differencing:\n$$\ny_t = \\frac{\\theta_{t+1} - \\theta_t}{\\Delta t} \\quad \\text{for } t \\in \\{0, \\dots, T-2\\}\n$$\n\nThird, we construct the components of the linear model $\\mathbf{y} = \\mathbf{H}\\mathbf{f} + \\boldsymbol{\\varepsilon}$. The design matrix $\\mathbf{H} \\in \\mathbb{R}^{(T-1) \\times N}$ maps the force vector $\\mathbf{f} \\in \\mathbb{R}^N$ to the noiseless velocities. Its entries are given by:\n$$\nH_{t,j} = \\mu w \\sin(\\phi_j - \\theta_t)\n$$\nwhere the row index corresponds to time $t \\in \\{0, \\dots, T-2\\}$ and the column index corresponds to cortical bin $j \\in \\{1, \\dots, N\\}$.\n\nFourth, we specify the Gaussian prior on the force vector $\\mathbf{f}$, which is defined by a mean vector $\\mathbf{m}$ and a precision matrix $\\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}$. The prior mean $\\mathbf{m}$ is derived from a molecular concentration profile $\\mathbf{c} = (c_1, \\dots, c_N)$:\n$$\n\\mathbf{m} = \\kappa \\frac{\\mathbf{c}}{\\bar{c}}, \\quad \\text{where} \\quad \\bar{c} = \\frac{1}{N}\\sum_{j=1}^N c_j\n$$\nThe concentration profiles $c_j$ are given for each test case and require the computation of the wrapped angular distance $d(\\phi, \\phi_0)$ on a circle, defined as $d(\\phi, \\phi_0) = \\min(|\\phi - \\phi_0|, 2\\pi - |\\phi - \\phi_0|)$.\n\nThe prior precision matrix $\\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}$ encodes assumptions about the magnitude and smoothness of the force profile:\n$$\n\\boldsymbol{\\Sigma}_{\\text{prior}}^{-1} = \\alpha \\mathbf{I} + \\beta \\mathbf{L}\n$$\nHere, $\\mathbf{I}$ is the $N \\times N$ identity matrix, and $\\mathbf{L}$ is the circulant graph Laplacian matrix. For an $N$-node ring graph, the first row of $\\mathbf{L}$ is $[2, -1, 0, \\dots, 0, -1]$. The parameters $\\alpha$ and $\\beta$ control the strength of the ridge regression and smoothness regularizations, respectively.\n\nFifth, we compute the posterior mean of the force distribution, $\\hat{\\mathbf{f}}$. For a Bayesian linear model with Gaussian likelihood and prior, the posterior is also Gaussian. Its mean is given by:\n$$\n\\hat{\\mathbf{f}} = \\left(\\frac{1}{\\sigma^2}\\mathbf{H}^\\top \\mathbf{H} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}\\right)^{-1}\\left(\\frac{1}{\\sigma^2}\\mathbf{H}^\\top \\mathbf{y} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}\\mathbf{m}\\right)\n$$\nwhere $\\sigma^2$ is the variance of the observational noise. This calculation is performed by first constructing the matrix $\\mathbf{A} = \\frac{1}{\\sigma^2}\\mathbf{H}^\\top \\mathbf{H} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}$ and the vector $\\mathbf{b} = \\frac{1}{\\sigma^2}\\mathbf{H}^\\top \\mathbf{y} + \\boldsymbol{\\Sigma}_{\\text{prior}}^{-1}\\mathbf{m}$, and then solving the linear system $\\mathbf{A}\\hat{\\mathbf{f}}=\\mathbf{b}$ for $\\hat{\\mathbf{f}}$. This approach is numerically superior to direct matrix inversion.\n\nFinally, we compute the posterior-to-anterior force ratio, $R$. Using the inferred mean force vector $\\hat{\\mathbf{f}} = (\\hat{f}_1, \\dots, \\hat{f}_N)$, we sum the forces in the designated hemispheres. The anterior hemisphere corresponds to bins where $\\cos(\\phi_j) > 0$, and the posterior hemisphere corresponds to bins where $\\cos(\\phi_j) < 0$. Bins where $\\cos(\\phi_j)=0$ are excluded from both sums.\n$$\nR = \\frac{\\sum_{j:\\cos\\phi_j<0} \\hat{f}_j}{\\sum_{j:\\cos\\phi_j>0} \\hat{f}_j}\n$$\nThis dimensionless ratio quantifies the asymmetry of the inferred cortical pulling forces. The procedure is repeated for each of the three supplied test cases, and the resulting values of $R$ are reported.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import circulant\n\ndef solve():\n    \"\"\"\n    Solves the problem for all test cases and prints the final result.\n    \"\"\"\n\n    def wrapped_angular_distance(phi, phi0):\n        \"\"\"Computes the shortest distance between two angles on a circle.\"\"\"\n        delta = phi - phi0\n        return np.abs((delta + np.pi) % (2 * np.pi) - np.pi)\n\n    # Define test cases\n    test_cases = [\n        # Test case 1\n        {\n            \"N\": 16, \"delta_t\": 1.0, \"mu\": 1.0, \"sigma\": 0.2,\n            \"alpha\": 1.0, \"beta\": 2.0, \"kappa\": 1.0,\n            \"c_func\": lambda phi_j: 1 + 2 * np.exp(-wrapped_angular_distance(phi_j, np.pi)**2 / (2 * 0.6**2)),\n            \"theta_t\": np.array([0.00, 0.06, 0.13, 0.21, 0.30, 0.40]),\n        },\n        # Test case 2\n        {\n            \"N\": 16, \"delta_t\": 1.0, \"mu\": 1.0, \"sigma\": 0.2,\n            \"alpha\": 1.0, \"beta\": 2.0, \"kappa\": 1.0,\n            \"c_func\": lambda phi_j: np.ones_like(phi_j),\n            \"theta_t\": np.array([0.00, 0.01, 0.00, -0.01, 0.00]),\n        },\n        # Test case 3\n        {\n            \"N\": 16, \"delta_t\": 1.0, \"mu\": 1.0, \"sigma\": 0.2,\n            \"alpha\": 1.0, \"beta\": 2.0, \"kappa\": 1.0,\n            \"c_func\": lambda phi_j: 1 + 2 * np.exp(-wrapped_angular_distance(phi_j, 0)**2 / (2 * 0.6**2)),\n            \"theta_t\": np.array([0.00, -0.05, -0.11, -0.18, -0.26]),\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        # Unpack parameters\n        N, delta_t, mu, sigma = case[\"N\"], case[\"delta_t\"], case[\"mu\"], case[\"sigma\"]\n        alpha, beta, kappa = case[\"alpha\"], case[\"beta\"], case[\"kappa\"]\n        c_func, theta_t = case[\"c_func\"], case[\"theta_t\"]\n        \n        # 1. Discretization\n        phi_j = 2 * np.pi * np.arange(N) / N\n        w = 2 * np.pi / N\n        \n        # 2. Observed angular velocities y\n        y = (theta_t[1:] - theta_t[:-1]) / delta_t\n        T_minus_1 = len(y)\n\n        # 3. Design matrix H\n        theta_t_obs = theta_t[:-1]\n        # Using broadcasting to create a (T-1, N) matrix\n        angle_diffs = phi_j[None, :] - theta_t_obs[:, None]\n        H = mu * w * np.sin(angle_diffs)\n        \n        # 4. Prior mean m\n        c = c_func(phi_j)\n        c_bar = np.mean(c)\n        m = kappa * c / c_bar\n        \n        # 5. Prior precision matrix Sigma_prior_inv\n        # Construct Laplacian L\n        L_first_row = np.zeros(N)\n        L_first_row[0] = 2\n        L_first_row[1] = -1\n        L_first_row[-1] = -1\n        L = circulant(L_first_row)\n        \n        Sigma_prior_inv = alpha * np.eye(N) + beta * L\n        \n        # 6. Posterior mean f_hat\n        sigma_sq_inv = 1 / sigma**2\n        \n        A = sigma_sq_inv * (H.T @ H) + Sigma_prior_inv\n        b = sigma_sq_inv * (H.T @ y) + Sigma_prior_inv @ m\n        \n        f_hat = np.linalg.solve(A, b)\n\n        # 7. Compute force ratio R\n        cos_phi = np.cos(phi_j)\n        \n        posterior_indices = np.where(cos_phi < 0)[0]\n        anterior_indices = np.where(cos_phi > 0)[0]\n        \n        sum_posterior = np.sum(f_hat[posterior_indices])\n        sum_anterior = np.sum(f_hat[anterior_indices])\n        \n        # Avoid division by zero, although biologically unlikely given f_j >= 0 prior\n        if sum_anterior == 0:\n            R = np.inf if sum_posterior > 0 else 0\n        else:\n            R = sum_posterior / sum_anterior\n\n        results.append(f\"{R:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2623956"}]}