{"hands_on_practices": [{"introduction": "A cornerstone of developmental biology is the concept of the morphogen gradient, where a secreted signaling molecule patterns surrounding tissues in a concentration-dependent manner. This exercise provides a quantitative framework for understanding this process by modeling the steady-state gradient of Sonic Hedgehog (SHH) and calculating its effective range of action. By working through this problem, you will connect measurable biophysical parameters, such as diffusion coefficients and protein half-life, to a crucial functional outcome: the spatial domain of gene repression, which is essential for defining where new branches can form [@problem_id:2648829].", "id": "2648829", "problem": "Consider a simplified one-dimensional mesenchymal domain anterior to an epithelial bud tip in an embryonic lung. Sonic Hedgehog (SHH) is secreted at the epithelial surface and represses the expression of Fibroblast Growth Factor 10 (FGF10) in the surrounding mesenchyme. Assume the following biophysical picture, grounded in standard transport and biochemical clearance principles:\n\n- SHH behaves as a diffusing molecule in tissue governed by Fick’s second law and is removed by first-order processes (e.g., receptor-mediated internalization, proteolysis) with a spatially uniform, linear rate.\n- The system is at steady state and can be treated as semi-infinite, with position coordinate $x \\ge 0$ measured outward from the epithelial surface at $x=0$.\n- The epithelial surface at $x=0$ maintains a fixed SHH concentration $C(0)=C_{0}$, and the far field satisfies $C(x)\\to 0$ as $x\\to\\infty$.\n- FGF10 transcription is effectively suppressed wherever the local SHH concentration exceeds a fixed threshold $C_{\\mathrm{thr}}=\\alpha\\,C_{0}$, with $0<\\alpha<1$.\n\nUse the following measured or empirically supported parameter values:\n- SHH diffusion coefficient in mesenchyme: $D=2.5\\,\\mu\\mathrm{m}^{2}\\,\\mathrm{s}^{-1}$.\n- Effective SHH half-life due to clearance: $t_{1/2}=1500\\,\\mathrm{s}$.\n- FGF10 suppression threshold fraction: $\\alpha=0.15$.\n- Typical inter-bud center-to-center distance along the branching axis: $L_{\\mathrm{bud}}=130\\,\\mu\\mathrm{m}$.\n\nStarting from Fick’s second law with a linear first-order clearance term and the stated boundary conditions, derive the steady-state SHH concentration profile $C(x)$, determine the distance $x_{\\mathrm{thr}}$ at which $C(x_{\\mathrm{thr}})=C_{\\mathrm{thr}}$, and compute the dimensionless ratio $r=x_{\\mathrm{thr}}/L_{\\mathrm{bud}}$. Report the final numerical value of $r$ rounded to four significant figures. Express the answer as a pure number (dimensionless).", "solution": "The problem presented is a standard exercise in mathematical biology, specifically concerning the formation of a morphogen gradient. We begin by formally establishing the governing equation. The spatiotemporal evolution of the Sonic Hedgehog (SHH) concentration, $C(x, t)$, in a one-dimensional domain is described by Fick's second law modified to include a first-order clearance term:\n$$\n\\frac{\\partial C}{\\partial t} = D \\frac{\\partial^2 C}{\\partial x^2} - kC\n$$\nHere, $D$ is the diffusion coefficient, and $k$ is the first-order clearance rate constant. The problem states that the system is at steady state, which implies that the concentration no longer changes with time, i.e., $\\frac{\\partial C}{\\partial t} = 0$. The governing partial differential equation thus reduces to an ordinary differential equation (ODE):\n$$\nD \\frac{d^2 C}{d x^2} - kC = 0\n$$\nThis can be rearranged into a more standard form:\n$$\n\\frac{d^2 C}{d x^2} - \\frac{k}{D} C = 0\n$$\nThe clearance rate $k$ is related to the half-life, $t_{1/2}$, by the definition of first-order decay kinetics. After one half-life, the concentration is reduced by a factor of $1/2$, so $C(t_{1/2}) = C(0) \\exp(-k t_{1/2}) = \\frac{1}{2} C(0)$. From this, it follows directly that $-k t_{1/2} = \\ln(\\frac{1}{2}) = -\\ln(2)$, and therefore:\n$$\nk = \\frac{\\ln(2)}{t_{1/2}}\n$$\nWe define a characteristic length scale, $\\lambda$, which represents the typical distance over which the concentration decays. Let $\\lambda^2 = \\frac{D}{k}$. The ODE becomes:\n$$\n\\frac{d^2 C}{d x^2} - \\frac{1}{\\lambda^2} C = 0\n$$\nThis is a second-order, linear, homogeneous ODE with constant coefficients. The general solution is of the form:\n$$\nC(x) = A \\exp\\left(\\frac{x}{\\lambda}\\right) + B \\exp\\left(-\\frac{x}{\\lambda}\\right)\n$$\nwhere $A$ and $B$ are constants to be determined by the boundary conditions. The problem specifies two boundary conditions for the semi-infinite domain $x \\ge 0$:\n$1$. A fixed concentration at the epithelial source: $C(0) = C_0$.\n$2$. The concentration vanishes in the far field: $C(x) \\to 0$ as $x \\to \\infty$.\n\nApplying the second boundary condition, we observe that for the solution to remain bounded as $x \\to \\infty$, the coefficient of the exponentially growing term, $A$, must be zero. If $A \\neq 0$, the term $A \\exp\\left(\\frac{x}{\\lambda}\\right)$ would diverge, which is physically unrealistic. Therefore, $A = 0$. The solution simplifies to:\n$$\nC(x) = B \\exp\\left(-\\frac{x}{\\lambda}\\right)\n$$\nApplying the first boundary condition at $x=0$:\n$$\nC(0) = B \\exp(0) = B = C_0\n$$\nThus, the specific solution for the steady-state SHH concentration profile is:\n$$\nC(x) = C_0 \\exp\\left(-\\frac{x}{\\lambda}\\right)\n$$\nThe characteristic length $\\lambda$ is given by:\n$$\n\\lambda = \\sqrt{\\frac{D}{k}} = \\sqrt{\\frac{D \\cdot t_{1/2}}{\\ln(2)}}\n$$\nNext, we must determine the distance $x_{\\mathrm{thr}}$ at which the SHH concentration drops to the threshold value $C_{\\mathrm{thr}} = \\alpha C_0$. We set $C(x_{\\mathrm{thr}}) = C_{\\mathrm{thr}}$:\n$$\nC_0 \\exp\\left(-\\frac{x_{\\mathrm{thr}}}{\\lambda}\\right) = \\alpha C_0\n$$\nDividing by $C_0$ (which is non-zero) yields:\n$$\n\\exp\\left(-\\frac{x_{\\mathrm{thr}}}{\\lambda}\\right) = \\alpha\n$$\nTaking the natural logarithm of both sides:\n$$\n-\\frac{x_{\\mathrm{thr}}}{\\lambda} = \\ln(\\alpha)\n$$\nSolving for $x_{\\mathrm{thr}}$ gives:\n$$\nx_{\\mathrm{thr}} = -\\lambda \\ln(\\alpha) = \\lambda \\ln\\left(\\frac{1}{\\alpha}\\right)\n$$\nThe problem requires the calculation of the dimensionless ratio $r = x_{\\mathrm{thr}} / L_{\\mathrm{bud}}$. Substituting the expression for $x_{\\mathrm{thr}}$:\n$$\nr = \\frac{\\lambda \\ln(1/\\alpha)}{L_{\\mathrm{bud}}} = \\frac{\\ln(1/\\alpha)}{L_{\\mathrm{bud}}} \\sqrt{\\frac{D \\cdot t_{1/2}}{\\ln(2)}}\n$$\nNow, we substitute the provided numerical values into this expression. The parameters are:\n$D = 2.5\\,\\mu\\mathrm{m}^{2}\\,\\mathrm{s}^{-1}$\n$t_{1/2} = 1500\\,\\mathrm{s}$\n$\\alpha = 0.15$\n$L_{\\mathrm{bud}} = 130\\,\\mu\\mathrm{m}$\n\nFirst, we compute the argument of the square root:\n$$\nD \\cdot t_{1/2} = (2.5\\,\\mu\\mathrm{m}^{2}\\,\\mathrm{s}^{-1}) \\cdot (1500\\,\\mathrm{s}) = 3750\\,\\mu\\mathrm{m}^{2}\n$$\nNow, substitute this into the expression for $r$:\n$$\nr = \\frac{\\ln(1/0.15)}{130} \\sqrt{\\frac{3750}{\\ln(2)}}\n$$\nLet us evaluate the dimensionless quantities:\n$$\n\\ln(2) \\approx 0.693147\n$$\n$$\n\\ln\\left(\\frac{1}{0.15}\\right) = \\ln\\left(\\frac{100}{15}\\right) = \\ln\\left(\\frac{20}{3}\\right) \\approx 1.89712\n$$\nNow, we compute the value of $r$:\n$$\nr \\approx \\frac{1.89712}{130} \\sqrt{\\frac{3750}{0.693147}} \\approx \\frac{1.89712}{130} \\sqrt{5410.15} \\approx \\frac{1.89712}{130} \\cdot 73.5537 \\approx 0.014593 \\cdot 73.5537 \\approx 1.073415\n$$\nRounding the final answer to four significant figures as requested, we obtain $r = 1.073$. This result indicates that the zone of FGF10 suppression extends a distance roughly equivalent to one inter-bud spacing, a finding with significant implications for the spatial patterning of lung branching.", "answer": "$$\n\\boxed{1.073}\n$$"}, {"introduction": "While signaling gradients establish the chemical pre-pattern for branching, physical forces are responsible for sculpting the tissue into its final three-dimensional form. This practice delves into the biomechanics of tube morphogenesis, exploring how lumenal fluid pressure generates mechanical stress within the wall of a developing lung bud. Applying principles from fluid dynamics and solid mechanics, such as Laplace's law, you will calculate these stresses and predict whether the bud is predisposed to dilate or to extend, providing a clear link between cellular physiology and tissue-level architecture [@problem_id:2648874].", "id": "2648874", "problem": "In an embryonic lung bud, lumenal fluid secretion generates a pressure that deforms the epithelial tube and the surrounding mesenchyme. Consider a single, approximately cylindrical tip branch with thin epithelial wall. Use the following modeling bases:\n\n- Conservation of fluid volume in a compliant compartment: the lumenal pressure $P(t)$ obeys $C\\,\\frac{dP}{dt} = Q_{s} - Q_{\\text{out}}(P)$, where $C$ is the compliance of the bud, $Q_{s}$ is the constant secretion inflow, and $Q_{\\text{out}}(P)$ is the pressure-driven outflow.\n- Linear hydraulic leakage through the surrounding tissue: $Q_{\\text{out}}(P) = G\\,P$, where $G$ is the effective hydraulic conductance.\n- Thin-walled cylindrical stress (Laplace law) for a closed-ended tube: the circumferential (hoop) stress is $\\sigma_{\\theta} = \\dfrac{P\\,r}{h}$ and the axial stress is $\\sigma_{z} = \\dfrac{P\\,r}{2h}$, where $r$ is the lumenal radius and $h$ is the wall thickness.\n- Growth is activated only by tensile stresses exceeding direction-specific thresholds. Define an anisotropy index\n$$\nR = \\frac{\\sigma_{\\theta} - \\sigma_{\\theta}^{\\ast}}{\\sigma_{z} + \\sigma_{a} - \\sigma_{z}^{\\ast}},\n$$\nwhere $\\sigma_{\\theta}^{\\ast}$ and $\\sigma_{z}^{\\ast}$ are the circumferential and axial stress thresholds, respectively, and $\\sigma_{a}$ is an active axial pre-stress contributed by mesenchymal tethers and cytoskeletal tone. Interpret $R > 1$ as dilation-dominated growth and $R < 1$ as extension-dominated growth.\n\nYou measure the following for a developing bud:\n- Lumenal secretion rate $Q_{s} = 2.0 \\times 10^{-3}\\ \\text{mm}^{3}/\\text{min}$.\n- Compliance $C = 5.0 \\times 10^{-5}\\ \\text{mm}^{3}/\\text{Pa}$.\n- Hydraulic conductance $G = 2.0 \\times 10^{-5}\\ \\text{mm}^{3}/(\\text{min}\\cdot\\text{Pa})$.\n- Geometry: $r = 0.050\\ \\text{mm}$, $h = 0.0050\\ \\text{mm}$.\n- Stress thresholds and active stress: $\\sigma_{\\theta}^{\\ast} = 400\\ \\text{Pa}$, $\\sigma_{z}^{\\ast} = 300\\ \\text{Pa}$, and $\\sigma_{a} = 200\\ \\text{Pa}$.\n\nStarting from the modeling bases above, (i) derive the steady-state lumenal pressure $P_{\\infty}$, and (ii) evaluate the anisotropy index $R$ at steady state. Report only the value of $R$ as your final answer. Round your final answer to three significant figures. Express your final answer as a pure number (dimensionless).", "solution": "The problem posed is a well-defined exercise in biophysical modeling, combining principles of fluid dynamics and solid mechanics to analyze tissue growth. It is scientifically grounded, self-contained, and all data provided are consistent. Therefore, a solution can be derived.\n\nThe analysis begins with the conservation of fluid volume in the lumen, governed by the differential equation:\n$$\nC\\,\\frac{dP}{dt} = Q_{s} - Q_{\\text{out}}(P)\n$$\nHere, $P(t)$ is the lumenal pressure, $C$ is the compliance, $Q_{s}$ is the constant fluid secretion rate, and $Q_{\\text{out}}(P)$ is the pressure-dependent outflow. The outflow is given as a linear hydraulic leakage:\n$$\nQ_{\\text{out}}(P) = G\\,P\n$$\nwhere $G$ is the hydraulic conductance. Substituting this into the conservation equation yields:\n$$\nC\\,\\frac{dP}{dt} = Q_{s} - G\\,P\n$$\nThe problem requires an analysis at steady state. At steady state, the system variables do not change with time. Thus, the pressure becomes constant, $P(t) = P_{\\infty}$, which implies that its time derivative is zero:\n$$\n\\frac{dP}{dt} = 0\n$$\nApplying this condition to the governing equation gives:\n$$\n0 = Q_{s} - G\\,P_{\\infty}\n$$\nFrom this, we derive the expression for the steady-state lumenal pressure, $P_{\\infty}$:\n$$\nP_{\\infty} = \\frac{Q_{s}}{G}\n$$\nUsing the provided numerical values, $Q_{s} = 2.0 \\times 10^{-3}\\ \\text{mm}^{3}/\\text{min}$ and $G = 2.0 \\times 10^{-5}\\ \\text{mm}^{3}/(\\text{min}\\cdot\\text{Pa})$:\n$$\nP_{\\infty} = \\frac{2.0 \\times 10^{-3}}{2.0 \\times 10^{-5}} \\text{ Pa} = 100 \\text{ Pa}\n$$\nNext, we determine the stresses in the epithelial wall at this steady-state pressure. The problem provides the thin-walled cylindrical stress formulas (Laplace's law):\nThe circumferential (hoop) stress, $\\sigma_{\\theta}$, is given by:\n$$\n\\sigma_{\\theta} = \\frac{P_{\\infty}\\,r}{h}\n$$\nThe axial stress, $\\sigma_{z}$, is given by:\n$$\n\\sigma_{z} = \\frac{P_{\\infty}\\,r}{2h}\n$$\nWe are given the lumenal radius $r = 0.050\\ \\text{mm}$ and wall thickness $h = 0.0050\\ \\text{mm}$. The ratio of these dimensions is:\n$$\n\\frac{r}{h} = \\frac{0.050}{0.0050} = 10\n$$\nSubstituting the value of $P_{\\infty}$ and the ratio $r/h$ into the stress equations:\n$$\n\\sigma_{\\theta} = (100 \\text{ Pa}) \\times 10 = 1000 \\text{ Pa}\n$$\n$$\n\\sigma_{z} = \\frac{(100 \\text{ Pa}) \\times 10}{2} = 500 \\text{ Pa}\n$$\nThe final step is to calculate the anisotropy index, $R$, which is defined as:\n$$\nR = \\frac{\\sigma_{\\theta} - \\sigma_{\\theta}^{\\ast}}{\\sigma_{z} + \\sigma_{a} - \\sigma_{z}^{\\ast}}\n$$\nWe substitute the calculated steady-state stresses and the given parameter values: $\\sigma_{\\theta}^{\\ast} = 400\\ \\text{Pa}$, $\\sigma_{z}^{\\ast} = 300\\ \\text{Pa}$, and $\\sigma_{a} = 200\\ \\text{Pa}$.\nThe numerator is:\n$$\n\\sigma_{\\theta} - \\sigma_{\\theta}^{\\ast} = 1000\\ \\text{Pa} - 400\\ \\text{Pa} = 600\\ \\text{Pa}\n$$\nThe denominator is:\n$$\n\\sigma_{z} + \\sigma_{a} - \\sigma_{z}^{\\ast} = 500\\ \\text{Pa} + 200\\ \\text{Pa} - 300\\ \\text{Pa} = 400\\ \\text{Pa}\n$$\nThus, the anisotropy index $R$ is:\n$$\nR = \\frac{600}{400} = 1.5\n$$\nThe problem requests the answer rounded to three significant figures. The calculated value $1.5$ can be written as $1.50$. As $R > 1$, the model predicts dilation-dominated growth under these conditions.", "answer": "$$\n\\boxed{1.50}\n$$"}, {"introduction": "The remarkable regularity of branching patterns in the lung suggests the operation of a self-organizing system. This advanced practice invites you to explore one of the most powerful theories for biological pattern formation: the Turing mechanism, or diffusion-driven instability. You will implement and analyze a coupled activator-inhibitor model representing the feedback between FGF10 and SHH to determine the specific conditions under which these interactions can spontaneously give rise to stable, periodic patterns. This exercise provides direct experience with linear stability analysis, a fundamental tool in theoretical biology for understanding how complex structures can emerge from simple local rules [@problem_id:2648843].", "id": "2648843", "problem": "Consider a one-dimensional mesenchymal field adjacent to an epithelial source in which Sonic hedgehog (SHH) produced by the epithelium represses mesenchymal Fibroblast Growth Factor 10 (FGF10). Let $F(x,t)$ denote the concentration of FGF10 and $S(x,t)$ denote the concentration of SHH along a one-dimensional spatial coordinate $x$ and time $t$. Assume nondimensional units for concentration, space, and time. The following coupled reaction-diffusion system embodies a minimal activator-inhibitor feedback consistent with classical observations in lung branching morphogenesis:\n$$\n\\frac{\\partial F}{\\partial t} \\;=\\; D_F \\frac{\\partial^2 F}{\\partial x^2} \\;+\\; \\alpha_F \\left(1 + \\beta \\frac{F^p}{K_F^p + F^p}\\right)\\cdot \\frac{1}{1 + \\left(\\frac{S}{K_S}\\right)^n} \\;-\\; \\mu_F F,\n$$\n$$\n\\frac{\\partial S}{\\partial t} \\;=\\; D_S \\frac{\\partial^2 S}{\\partial x^2} \\;+\\; \\alpha_S \\frac{F^q}{K_{FS}^q + F^q} \\;-\\; \\mu_S S,\n$$\nwhere $D_F$ and $D_S$ are diffusion coefficients; $\\alpha_F$, $\\alpha_S$ are maximal production rates; $\\beta$ is the strength of FGF10 autoactivation; $\\mu_F$, $\\mu_S$ are decay rates; $K_F$, $K_S$, $K_{FS}$ are dissociation-like constants; and $p$, $n$, $q$ are Hill exponents. Assume $D_S \\gg D_F$ captures the faster mesenchymal spread of SHH relative to FGF10, consistent with empirical observations, and that all parameters are strictly positive real numbers.\n\nYour task is to implement a principled linear stability analysis from first principles to determine whether diffusion-driven pattern formation (that is, a Turing-type instability) occurs, and, if so, to compute the predicted dominant spacing of FGF10 domains. Follow the steps below, each grounded in fundamental laws and well-tested formulas:\n\n1) Base the diffusion terms on Fick’s law of diffusion, namely that flux is proportional to the negative gradient, yielding the Laplacian $D \\frac{\\partial^2}{\\partial x^2}$ in one spatial dimension.\n\n2) Base the reaction terms on standard Hill-function representations of transcriptional activation and repression derived from mass-action binding equilibria: an increasing Hill function for activation, $\\frac{F^q}{K^q + F^q}$, and a decreasing Hill function for repression, $\\frac{1}{1 + (S/K)^n}$.\n\n3) Determine the homogeneous steady state $(F^\\ast, S^\\ast)$ by solving the spatially uniform stationary conditions obtained by setting time derivatives to zero and removing diffusion:\n$$\n0 \\;=\\; \\alpha_F \\left(1 + \\beta \\frac{(F^\\ast)^p}{K_F^p + (F^\\ast)^p}\\right)\\cdot \\frac{1}{1 + \\left(\\frac{S^\\ast}{K_S}\\right)^n} \\;-\\; \\mu_F F^\\ast,\n$$\n$$\n0 \\;=\\; \\alpha_S \\frac{(F^\\ast)^q}{K_{FS}^q + (F^\\ast)^q} \\;-\\; \\mu_S S^\\ast.\n$$\n\n4) Linearize the reaction dynamics around $(F^\\ast, S^\\ast)$ by computing the Jacobian matrix $J$ of the reaction terms, i.e., the matrix of partial derivatives of the right-hand sides with respect to $F$ and $S$ evaluated at $(F^\\ast, S^\\ast)$. Denote $J = \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}$.\n\n5) Consider spatial Fourier modes of the form $e^{\\sigma t} \\cos(kx)$ and derive the dispersion relation by replacing the Laplacian with $-k^2$ on each mode and analyzing the eigenvalues of the matrix $J - k^2 D$, where $D = \\mathrm{diag}(D_F, D_S)$ and $k \\ge 0$ is the spatial wavenumber. Evaluate whether the spatially homogeneous steady state is:\n- Reaction-stable (no diffusion): the real parts of the eigenvalues of $J$ are strictly negative.\n- Diffusion-driven unstable (Turing instability): there exists some $k^\\ast > 0$ such that the largest real part of the eigenvalues of $J - k^{\\ast 2} D$ is strictly positive.\n\n6) If a diffusion-driven instability exists, compute the dominant spacing (wavelength) predicted by linear theory as $\\lambda^\\ast = \\frac{2\\pi}{k^\\ast}$, where $k^\\ast$ maximizes the growth rate $\\Re(\\sigma(k))$. If no Turing instability exists under the above definition, report that no stable spacing arises from linear instability analysis.\n\nNumerical and algorithmic requirements:\n- Work in nondimensional units. All reported spacings must be given in nondimensional length units as a floating-point number.\n- Determine $(F^\\ast, S^\\ast)$ by numerical root finding constrained to nonnegative concentrations.\n- Assess reaction stability by computing the eigenvalues of $J$.\n- Assess diffusion-driven instability by scanning $k$ over a sufficiently fine range of nonnegative wavenumbers and computing the eigenvalues of $J - k^2 D$ at each $k$; identify the maximum growth rate and its argmax $k^\\ast$.\n- If the homogeneous steady state is not reaction-stable, conclude that no diffusion-driven patterning is admissible under the Turing mechanism.\n- If reaction-stable and the maximum growth rate over $k > 0$ is nonpositive, conclude that no diffusion-driven patterning is present.\n- If reaction-stable and the maximum growth rate over some $k^\\ast > 0$ is positive, report $\\lambda^\\ast = \\frac{2\\pi}{k^\\ast}$ as the dominant spacing in nondimensional units.\n\nTest suite:\nUse the following four parameter sets (each a complete set for one run). All numbers are nondimensional and must be used exactly as provided.\n\n- Case A (fast inhibitor diffusion, strong coupling; expected to admit spacing): $D_F = 10^{-3}$, $D_S = 1$, $\\alpha_F = 2$, $\\beta = 8$, $\\mu_F = 1$, $\\alpha_S = 4$, $\\mu_S = 1$, $K_F = 1$, $K_S = 1$, $K_{FS} = 1$, $p = 2$, $n = 2$, $q = 2$.\n\n- Case B (equal diffusion; expected to suppress spacing): $D_F = 1$, $D_S = 1$, $\\alpha_F = 2$, $\\beta = 8$, $\\mu_F = 1$, $\\alpha_S = 4$, $\\mu_S = 1$, $K_F = 1$, $K_S = 1$, $K_{FS} = 1$, $p = 2$, $n = 2$, $q = 2$.\n\n- Case C (weak activator autoactivation; expected to suppress spacing): $D_F = 10^{-3}$, $D_S = 1$, $\\alpha_F = 2$, $\\beta = 0$, $\\mu_F = 1$, $\\alpha_S = 4$, $\\mu_S = 1$, $K_F = 1$, $K_S = 1$, $K_{FS} = 1$, $p = 2$, $n = 2$, $q = 2$.\n\n- Case D (near-threshold regime; marginal coupling): $D_F = 2 \\times 10^{-2}$, $D_S = 1$, $\\alpha_F = 2$, $\\beta = 4$, $\\mu_F = 1$, $\\alpha_S = 3$, $\\mu_S = 1$, $K_F = 1$, $K_S = 1$, $K_{FS} = 1$, $p = 2$, $n = 2$, $q = 2$.\n\nProgram input-output specification:\n- Your program must contain the above four cases as an internal list; it must not read any external input.\n- For each case, compute the dominant spacing $\\lambda^\\ast$ in nondimensional length units if a diffusion-driven instability is present; otherwise return $-1.0$.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[0.7853981633974483,-1.0,-1.0,1.2566370614359172]\").\n- Each list entry must be a floating-point number.\n\nThe objective is to make a principled determination, grounded in Fick’s law and Hill-function biochemistry, of when SHH-mediated repression of mesenchymal FGF10 can generate stable spacing of FGF10 domains via a Turing-type mechanism, and to report the predicted spacing in nondimensional length units for each parameter set in the test suite.", "solution": "The problem requires a linear stability analysis of a one-dimensional reaction-diffusion system describing the interaction between Fibroblast Growth Factor 10 ($F$) and Sonic hedgehog ($S$), putative morphogens in lung branching morphogenesis. The analysis will determine the conditions under which diffusion-driven (Turing) instability can arise and compute the predicted spatial wavelength of the resulting pattern. The validation of the problem statement is the first critical step.\n\nThe givens are the coupled partial differential equations:\n$$\n\\frac{\\partial F}{\\partial t} \\;=\\; D_F \\frac{\\partial^2 F}{\\partial x^2} \\;+\\; \\alpha_F \\left(1 + \\beta \\frac{F^p}{K_F^p + F^p}\\right)\\cdot \\frac{1}{1 + \\left(\\frac{S}{K_S}\\right)^n} \\;-\\; \\mu_F F\n$$\n$$\n\\frac{\\partial S}{\\partial t} \\;=\\; D_S \\frac{\\partial^2 S}{\\partial x^2} \\;+\\; \\alpha_S \\frac{F^q}{K_{FS}^q + F^q} \\;-\\; \\mu_S S\n$$\nThe parameters ($D_F, D_S, \\alpha_F, \\alpha_S, \\beta, \\mu_F, \\mu_S, K_F, K_S, K_{FS}, p, n, q$) are defined as positive real numbers. Four specific parameter sets (Case A, B, C, D) are provided for analysis.\n\nThe problem formulation is scientifically valid.\n1.  **Scientific Grounding**: The model is based on Fick's law of diffusion and uses Michaelis-Menten / Hill function kinetics for reaction terms, which are standard and well-established formalisms in chemical kinetics and systems biology to describe enzyme catalysis and transcriptional regulation. The activator-inhibitor structure ($F$ activates itself and $S$; $S$ inhibits $F$) is a classic motif for biological pattern formation. The entire framework of Turing instability is a cornerstone of theoretical developmental biology.\n2.  **Well-Posedness**: The problem is well-posed. It provides all necessary equations, parameters, and a clear, algorithmically defined objective. A unique and stable steady state is expected for the given kinetics, and the subsequent linear stability analysis is a standard mathematical procedure.\n3.  **Objectivity**: The problem is stated in precise, quantitative, and unbiased mathematical language.\n\nThe problem is valid and I will proceed with the solution, following the prescribed sequence of steps.\n\n**Step 1: Homogeneous Steady State Analysis**\n\nThe spatially homogeneous steady state $(F^\\ast, S^\\ast)$ is found by setting the time derivatives and diffusion terms to zero. This leads to a system of two algebraic equations:\n$$\n(1) \\quad 0 \\;=\\; f(F^\\ast, S^\\ast) = \\alpha_F \\left(1 + \\beta \\frac{(F^\\ast)^p}{K_F^p + (F^\\ast)^p}\\right)\\cdot \\frac{1}{1 + \\left(\\frac{S^\\ast}{K_S}\\right)^n} \\;-\\; \\mu_F F^\\ast\n$$\n$$\n(2) \\quad 0 \\;=\\; g(F^\\ast, S^\\ast) = \\alpha_S \\frac{(F^\\ast)^q}{K_{FS}^q + (F^\\ast)^q} \\;-\\; \\mu_S S^\\ast\n$$\nFrom equation $(2)$, we can express $S^\\ast$ as a function of $F^\\ast$:\n$$\nS^\\ast(F^\\ast) = \\frac{\\alpha_S}{\\mu_S} \\frac{(F^\\ast)^q}{K_{FS}^q + (F^\\ast)^q}\n$$\nSubstituting this into equation $(1)$ yields a single nonlinear equation for $F^\\ast$. Due to its complexity, this equation must be solved numerically. We use a root-finding algorithm to find $F^\\ast \\ge 0$, and subsequently compute the corresponding $S^\\ast$.\n\n**Step 2: Linearization and Jacobian Matrix**\n\nTo analyze the stability of the steady state $(F^\\ast, S^\\ast)$, we linearize the reaction kinetics. This involves computing the Jacobian matrix $J$ of the reaction system, evaluated at the steady state:\n$$\nJ = \\begin{pmatrix} \\frac{\\partial f}{\\partial F} & \\frac{\\partial f}{\\partial S} \\\\ \\frac{\\partial g}{\\partial F} & \\frac{\\partial g}{\\partial S} \\end{pmatrix}_{(F^\\ast, S^\\ast)} = \\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}\n$$\nThe partial derivatives are calculated as follows:\n$a = \\frac{\\partial f}{\\partial F} \\bigg|_{(F^\\ast, S^\\ast)} = \\frac{\\alpha_F \\beta p K_F^p (F^\\ast)^{p-1}}{(K_F^p + (F^\\ast)^p)^2} \\cdot \\frac{1}{1 + \\left(\\frac{S^\\ast}{K_S}\\right)^n} - \\mu_F$\n$b = \\frac{\\partial f}{\\partial S} \\bigg|_{(F^\\ast, S^\\ast)} = -\\alpha_F \\left(1 + \\beta \\frac{(F^\\ast)^p}{K_F^p + (F^\\ast)^p}\\right) \\frac{n (S^\\ast)^{n-1}/K_S^n}{\\left(1 + \\left(\\frac{S^\\ast}{K_S}\\right)^n\\right)^2}$\n$c = \\frac{\\partial g}{\\partial F} \\bigg|_{(F^\\ast, S^\\ast)} = \\frac{\\alpha_S q K_{FS}^q (F^\\ast)^{q-1}}{(K_{FS}^q + (F^\\ast)^q)^2}$\n$d = \\frac{\\partial g}{\\partial S} \\bigg|_{(F^\\ast, S^\\ast)} = -\\mu_S$\nFor computational efficiency, the term for $b$ can be simplified using equation $(1)$:\n$b = -\\mu_F F^\\ast \\frac{n (S^\\ast)^{n-1}/K_S^n}{1 + \\left(\\frac{S^\\ast}{K_S}\\right)^n}$\n\n**Step 3: Stability of the Homogeneous State (Reaction Stability)**\n\nThe stability of the steady state in the absence of diffusion ($k=0$) is determined by the eigenvalues of the Jacobian matrix $J$. The system is stable if and only if the real parts of all eigenvalues are negative. For a $2 \\times 2$ matrix, this corresponds to two conditions:\n1.  $\\text{Tr}(J) = a + d < 0$\n2.  $\\text{Det}(J) = ad - bc > 0$\nIf these conditions are not met, the steady state is unstable even without diffusion, and a Turing-type instability is not possible.\n\n**Step 4: Diffusion-Driven Instability Analysis**\n\nWe now consider spatial perturbations of the form $e^{\\sigma t} e^{ikx}$. In the linearized system, the Laplacian operator $\\frac{\\partial^2}{\\partial x^2}$ becomes multiplication by $-k^2$, where $k$ is the spatial wavenumber. The evolution of small perturbations is then governed by the matrix $M(k)$:\n$$\nM(k) = J - k^2 D = \\begin{pmatrix} a - D_F k^2 & b \\\\ c & d - D_S k^2 \\end{pmatrix}\n$$\nwhere $D = \\text{diag}(D_F, D_S)$ is the diagonal matrix of diffusion coefficients. The eigenvalues of $M(k)$, denoted $\\sigma(k)$, determine the growth rate of perturbations with wavenumber $k$. A diffusion-driven (Turing) instability occurs if the homogeneous steady state is stable (Step 3 holds), but there exists a wavenumber $k^\\ast > 0$ for which the largest real part of the eigenvalues of $M(k^\\ast)$ is positive. That is, $\\max(\\Re(\\sigma(k^\\ast))) > 0$.\n\nTo find this, we must find the maximum of the growth rate function $\\Lambda(k) = \\max(\\Re(\\sigma(k)))$ for $k \\ge 0$. The eigenvalues $\\sigma(k)$ are the roots of the characteristic polynomial $\\det(M(k) - \\sigma I) = 0$, given by:\n$$\n\\sigma(k) = \\frac{\\text{Tr}(M(k)) \\pm \\sqrt{\\text{Tr}(M(k))^2 - 4\\det(M(k))}}{2}\n$$\nWe numerically find the wavenumber $k^\\ast$ that maximizes $\\Lambda(k)$ by searching over a range of non-negative $k$ values.\n\n**Step 5: Determining the Dominant Spacing**\n\nIf a Turing instability exists (i.e., the system is reaction-stable and $\\max_{k>0} \\Lambda(k) > 0$), the dominant pattern spacing (wavelength) $\\lambda^\\ast$ is given by the wavenumber $k^\\ast$ that corresponds to the maximal growth rate.\n$$\n\\lambda^\\ast = \\frac{2\\pi}{k^\\ast}\n$$\nIf no such instability is found (either because the reaction system is unstable or the maximal growth rate for $k>0$ is non-positive), we report that no stable spacing arises, represented by the value $-1.0$.\n\nThis full procedure is implemented numerically for each of the four provided parameter cases.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import root_scalar, minimize_scalar\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test cases.\n    \"\"\"\n    # Define test cases as a list of dictionaries.\n    test_cases = [\n        # Case A: fast inhibitor diffusion, strong coupling\n        {'D_F': 1e-3, 'D_S': 1, 'alpha_F': 2, 'beta': 8, 'mu_F': 1, \n         'alpha_S': 4, 'mu_S': 1, 'K_F': 1, 'K_S': 1, 'K_FS': 1, \n         'p': 2, 'n': 2, 'q': 2},\n        # Case B: equal diffusion\n        {'D_F': 1, 'D_S': 1, 'alpha_F': 2, 'beta': 8, 'mu_F': 1, \n         'alpha_S': 4, 'mu_S': 1, 'K_F': 1, 'K_S': 1, 'K_FS': 1, \n         'p': 2, 'n': 2, 'q': 2},\n        # Case C: weak activator autoactivation\n        {'D_F': 1e-3, 'D_S': 1, 'alpha_F': 2, 'beta': 0, 'mu_F': 1, \n         'alpha_S': 4, 'mu_S': 1, 'K_F': 1, 'K_S': 1, 'K_FS': 1, \n         'p': 2, 'n': 2, 'q': 2},\n        # Case D: near-threshold regime\n        {'D_F': 2e-2, 'D_S': 1, 'alpha_F': 2, 'beta': 4, 'mu_F': 1, \n         'alpha_S': 3, 'mu_S': 1, 'K_F': 1, 'K_S': 1, 'K_FS': 1, \n         'p': 2, 'n': 2, 'q': 2},\n    ]\n\n    results = []\n    for params in test_cases:\n        result = analyze_case(params)\n        results.append(result)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef analyze_case(params):\n    \"\"\"\n    Performs the full linear stability analysis for a single parameter set.\n    \"\"\"\n    # Step 1: Find the homogeneous steady state (F*, S*)\n    try:\n        F_star, S_star = find_steady_state(params)\n        if F_star is None:\n            return -1.0\n    except (ValueError, RuntimeError):\n        # If root finding fails, no stable steady state can be determined\n        return -1.0\n\n    # Step 2: Compute the Jacobian matrix J at (F*, S*)\n    J = compute_jacobian(F_star, S_star, params)\n\n    # Step 3: Check for reaction stability (stability at k=0)\n    eigvals_J = np.linalg.eigvals(J)\n    if not np.all(np.real(eigvals_J) < 0):\n        # Homogeneous state is not stable, Turing mechanism not applicable\n        return -1.0\n        \n    # Helper function to calculate the max growth rate for a given k\n    def get_max_growth_rate(k, jacobian, p):\n        k2 = k**2\n        D_matrix = np.diag([p['D_F'], p['D_S']])\n        M_k = jacobian - k2 * D_matrix\n        eigvals = np.linalg.eigvals(M_k)\n        return np.max(np.real(eigvals))\n\n    # Step 4 & 5: Find k* that maximizes growth rate and check for instability\n    # We minimize the negative of the growth rate function to find its maximum.\n    # Set a plausible bound for k.\n    res = minimize_scalar(lambda k: -get_max_growth_rate(k, J, params), \n                          bounds=(0, 50), method='bounded')\n\n    k_star = res.x\n    max_growth_rate = -res.fun\n\n    # Step 6: Compute dominant spacing if instability exists\n    # Check if max growth is positive and occurs at a non-zero wavenumber\n    # A small tolerance is used for floating point comparisons\n    if max_growth_rate > 1e-9 and k_star > 1e-9:\n        lambda_star = 2 * np.pi / k_star\n        return lambda_star\n    else:\n        # No diffusion-driven instability found\n        return -1.0\n\ndef find_steady_state(params):\n    \"\"\"\n    Numerically solves for the homogeneous steady state concentrations (F*, S*).\n    \"\"\"\n    # Unpack parameters for convenience\n    p = params\n\n    def S_func(F):\n        F_q = F**p['q']\n        return (p['alpha_S'] / p['mu_S']) * \\\n               (F_q / (p['K_FS']**p['q'] + F_q))\n\n    def F_root_func(F):\n        if F < 0: return 1e12 # Penalize negative concentrations\n        S = S_func(F)\n        F_p = F**p['p']\n        S_n = (S / p['K_S'])**p['n']\n        \n        prod_term = p['alpha_F'] * (1 + p['beta'] * F_p / (p['K_F']**p['p'] + F_p))\n        repress_term = 1 / (1 + S_n)\n        decay_term = p['mu_F'] * F\n        \n        return prod_term * repress_term - decay_term\n\n    # Define a search bracket for the root finder\n    # Upper bound from max possible production rate\n    f_max_bound = (p['alpha_F'] * (1 + p['beta'])) / p['mu_F']\n    bracket = [1e-9, f_max_bound * 1.5] # Add margin to upper bound\n\n    sol = root_scalar(F_root_func, bracket=bracket, method='brentq')\n\n    if sol.converged:\n        F_star = sol.root\n        S_star = S_func(F_star)\n        return F_star, S_star\n    else:\n        return None, None\n\ndef compute_jacobian(F_star, S_star, params):\n    \"\"\"\n    Computes the 2x2 Jacobian matrix of the reaction terms at the steady state.\n    \"\"\"\n    p = params\n    F, S = F_star, S_star\n\n    F_p = F**p['p']\n    K_F_p = p['K_F']**p['p']\n    \n    S_n_over_K_S_n = (S / p['K_S'])**p['n']\n\n    # Element a = df/dF\n    a = (p['alpha_F'] * p['beta'] * p['p'] * K_F_p * F**(p['p'] - 1) / (K_F_p + F_p)**2) \\\n        * (1 / (1 + S_n_over_K_S_n)) - p['mu_F']\n    \n    # Element b = df/dS (simplified form)\n    # The term n * S**(n-1) / K_S**n can be written as (n/S) * (S/K_S)**n\n    if abs(S) < 1e-12: # Avoid division by zero if S is very small\n        b = 0.0\n    else:\n        num = p['n'] * (S / p['K_S'])**(p['n']-1) * (1/p['K_S'])\n        den = (1 + S_n_over_K_S_n)**2\n        # Use steady state equation to simplify the first part of the derivative\n        b_mult = p['mu_F'] * F * (1 + S_n_over_K_S_n)\n        b = -b_mult * (num/den)\n    \n    # Element c = dg/dF\n    F_q = F**p['q']\n    K_FS_q = p['K_FS']**p['q']\n    c = (p['alpha_S'] * p['q'] * K_FS_q * F**(p['q'] - 1) / (K_FS_q + F_q)**2)\n\n    # Element d = dg/dS\n    d = -p['mu_S']\n\n    return np.array([[a, b], [c, d]])\n\nsolve()\n\n```"}]}