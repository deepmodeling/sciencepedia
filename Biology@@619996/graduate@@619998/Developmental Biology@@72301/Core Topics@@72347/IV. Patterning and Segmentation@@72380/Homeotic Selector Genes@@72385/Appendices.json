{"hands_on_practices": [{"introduction": "The classic homeotic transformations resulting from complete loss-of-function mutations in Hox genes provide a stark illustration of their role in specifying segmental identity. However, developmental systems are often sensitive to the precise concentration of regulatory proteins. This problem [@problem_id:1693298] moves beyond the all-or-nothing framework to explore the concept of gene dosage and haploinsufficiency, asking you to predict the more subtle phenotype in a heterozygous mutant. This exercise is valuable for appreciating how quantitative variations in transcription factor levels can lead to intermediate or partial transformations, reflecting the analog nature of the underlying molecular processes.", "problem": "In mammals, the axial skeleton is patterned during embryogenesis by the combinatorial expression of Homeotic selector (Hox) genes. The identity of each vertebra (cervical, thoracic, lumbar, etc.) is specified by a unique \"Hox code.\" The principle of posterior prevalence states that Hox genes expressed in more posterior regions of the embryo generally override the function of those expressed more anteriorly.\n\nA wild-type mouse has a vertebral formula of 7 cervical, 13 thoracic (T), and 6 lumbar (L) vertebrae. Thoracic vertebrae are defined by the presence of ribs. The gene *Hoxc8* has its anterior boundary of expression at the level of the presumptive eighth thoracic vertebra (T8) and is essential for specifying the identity of vertebrae at the thoraco-lumbar transition.\n\nIn mice that are homozygous for a null mutation in *Hoxc8* (genotype: $-/-$), there is a complete loss of Hoxc8 function. This results in a classic homeotic transformation where the first lumbar vertebra (L1) is transformed into the likeness of a thoracic vertebra, developing a full pair of ribs. The vertebral column thus appears to have 14 thoracic and 5 lumbar vertebrae.\n\nBased on these principles, what is the most likely skeletal phenotype observed in a mouse that is heterozygous for this same null mutation (genotype: $+/-$), which produces approximately half the normal amount of Hoxc8 protein?\n\nA. The heterozygous mouse is indistinguishable from the wild-type; the vertebral column is completely normal.\n\nB. The first lumbar vertebra (L1) undergoes a complete homeotic transformation, developing a full pair of ribs, identical to the homozygous null mutant.\n\nC. The first lumbar vertebra (L1) displays a partial homeotic transformation, characterized by the growth of small, rudimentary ribs.\n\nD. The last thoracic vertebra (T13) is transformed into a lumbar-like vertebra, losing its ribs.\n\nE. The second lumbar vertebra (L2) is transformed into the likeness of a thoracic vertebra, developing a pair of ribs.", "solution": "The problem asks us to predict the phenotype of a mouse heterozygous for a null mutation in the *Hoxc8* gene, given the phenotypes of the wild-type and homozygous null mice.\n\nStep 1: Understand the wild-type function of *Hoxc8*.\nIn a wild-type mouse, the expression of *Hoxc8* (along with other Hox genes) at the level of the first lumbar vertebra (L1) is critical for specifying its \"lumbar\" identity. A key part of this identity is the *suppression* of rib development. The thoracic developmental program, which includes rib formation, is the \"default\" state in this region of the axis, and it is actively repressed by the Hox code specific to the lumbar region.\n\nStep 2: Analyze the homozygous null phenotype.\nIn the *Hoxc8* homozygous null mutant ($-/-$), there is no functional Hoxc8 protein. Due to this absence, the Hox code at the presumptive L1 vertebra is altered. Following the principle of posterior prevalence, the repressive function of *Hoxc8* is lost. This allows the underlying, more anterior (thoracic) developmental program to be expressed. As a result, L1 is \"anteriorized\" and transforms into a thoracic-like vertebra, complete with a full set of ribs. This changes the count from T13/L6 to T14/L5.\n\nStep 3: Consider the heterozygous case and the concept of gene dosage.\nThe heterozygous mouse ($+/-$) has one functional copy of the *Hoxc8* gene and one null copy. This means it will produce Hoxc8 protein, but only at about 50% of the level of a wild-type mouse. This situation, where a single functional gene copy is not sufficient to produce a fully wild-type phenotype, is known as haploinsufficiency. The question becomes: is 50% of the protein sufficient to fully carry out its function?\n\nStep 4: Predict the effect of reduced *Hoxc8* dosage.\nThe function of Hoxc8 at L1 is to suppress rib formation. In the homozygote, 0% of the protein leads to a complete failure of suppression (full ribs). In the wild-type, 100% of the protein leads to complete suppression (no ribs). It is logical to conclude that an intermediate amount of protein (50%) would lead to an intermediate phenotype. The reduced concentration of the Hoxc8 repressor protein would likely be insufficient to *completely* shut down the rib-forming genetic pathway. However, since the protein is present (unlike in the null mutant), some degree of repression will still occur.\n\nStep 5: Evaluate the options based on the prediction.\nThis leads to the prediction of a partial or incomplete suppression of the thoracic fate at L1. The manifestation of this would be the development of partial thoracic features, such as small, malformed, or rudimentary ribs on the L1 vertebra.\n\nLet's evaluate the given choices:\n- A. The heterozygous mouse is indistinguishable from the wild-type. This would imply the mutation is fully recessive and that 50% of the protein is sufficient for normal function (i.e., no haploinsufficiency). While possible for some genes, it is a common finding in developmental genetics that dosage matters. Given the strong phenotype of the homozygote, a dosage effect in the heterozygote is highly likely.\n- B. L1 undergoes a complete homeotic transformation, identical to the homozygous null mutant. This would imply the mutation is fully dominant, meaning a 50% reduction in protein has the same effect as a 100% reduction. This is generally not the case for loss-of-function alleles.\n- C. L1 displays a partial homeotic transformation, characterized by the growth of small, rudimentary ribs. This aligns perfectly with our reasoning based on gene dosage and haploinsufficiency. A reduced amount of the repressor protein leads to incomplete repression, resulting in an intermediate phenotype between wild-type (no ribs) and homozygous null (full ribs).\n- D. The last thoracic vertebra (T13) is transformed into a lumbar-like vertebra. This describes a posteriorization (an anterior structure taking on a more posterior fate), which is the opposite of the expected anteriorization (a posterior structure taking on a more anterior fate) seen in Hox loss-of-function mutants in the trunk.\n- E. The second lumbar vertebra (L2) is transformed. The primary effects of a mutation in a Hox gene are typically seen at the most anterior boundary of its expression domain where its function is most critical in establishing a change in vertebral identity. In this context, that is the T/L transition at L1, not L2.\n\nTherefore, the most logical and biologically consistent prediction is a partial homeotic transformation at L1, resulting in rudimentary ribs.", "answer": "$$\\boxed{C}$$", "id": "1693298"}, {"introduction": "To formalize the dose-dependent effects of transcription factors, we can turn to biophysical models of gene regulation. This problem [@problem_id:2643483] challenges you to apply a thermodynamic framework where gene expression is quantitatively linked to the binding affinity of a Hox protein to its target DNA motifs. By calculating the change in expression resulting from mutations that alter Position Weight Matrix (PWM) scores, you will directly connect DNA sequence information to a predicted developmental output. This practice grounds the abstract concept of regulatory strength in a concrete mathematical model based on statistical mechanics, a crucial skill in modern quantitative biology.", "problem": "A homeotic selector (Hox) transcription factor binds to an enhancer via two independent DNA motifs whose strengths are summarized by their Position Weight Matrix (PWM) scores. Assume a thermodynamic occupancy framework grounded in statistical mechanics: at equilibrium, each binding microstate has a statistical weight proportional to a Boltzmann factor. For a single site with PWM score $S$ (in bits), the statistical weight is proportional to $\\exp(\\lambda S)$, where the conversion constant between bits and natural units is $\\lambda = \\ln(2)$. In the low-occupancy regime, the probability of being bound is small and gene expression is proportional to the total statistical weight of bound configurations. Consider an enhancer with $2$ independent Hox sites with wild-type scores $S_1$ and $S_2$. Let the wild-type expression be $E_{\\mathrm{wt}} = 180$ arbitrary units (a.u.). In the wild-type, the fractional contribution of site $1$ to the total bound weight is $r = 0.60$, that is, $r = \\frac{2^{S_1}}{2^{S_1} + 2^{S_2}}$. A mutation changes the PWM scores by $\\Delta S_1 = -1.2$ bits at site $1$ and $\\Delta S_2 = +0.5$ bits at site $2$. All other molecular parameters (including transcription factor concentration and any prefactors common to bound states) remain unchanged, and the low-occupancy approximation continues to hold after mutation.\n\nStarting from the Boltzmann weighting of microstates and the low-occupancy proportionality between expression and total bound statistical weight, derive the predicted mutant expression $E_{\\mathrm{mut}}$ in terms of $E_{\\mathrm{wt}}$, $r$, $\\Delta S_1$, and $\\Delta S_2$, and then compute its numerical value. Round your final numerical answer to four significant figures and express it in arbitrary units (a.u.).", "solution": "The problem presents a valid and well-posed question grounded in the principles of statistical mechanics as applied to gene regulation. I shall proceed with the derivation.\n\nThe fundamental premise is that in the low-occupancy regime, the level of gene expression, $E$, is directly proportional to the total statistical weight of singly-bound configurations, $W_{\\mathrm{total}}$. For an enhancer with two independent binding sites, this total weight is the sum of the weights for each site being occupied individually.\n$$E = A \\cdot W_{\\mathrm{total}} = A (W_1 + W_2)$$\nHere, $A$ is a global proportionality constant that incorporates system-specific parameters such as transcription factor concentration, which are assumed to be invariant between the wild-type and mutant scenarios.\n\nThe statistical weight $W_i$ for a site $i$ with a Position Weight Matrix (PWM) score of $S_i$ bits is proportional to $\\exp(\\lambda S_i)$. Given the conversion constant $\\lambda = \\ln(2)$, this simplifies:\n$$W_i \\propto \\exp(\\ln(2) \\cdot S_i) = (\\exp(\\ln(2)))^{S_i} = 2^{S_i}$$\nThus, we can write the expression for the wild-type (${\\mathrm{wt}}$) system, with scores $S_1$ and $S_2$, as:\n$$E_{\\mathrm{wt}} = A (2^{S_1} + 2^{S_2})$$\nWe are given that the fractional contribution of site $1$ to the total wild-type bound statistical weight is $r$:\n$$r = \\frac{A \\cdot 2^{S_1}}{A (2^{S_1} + 2^{S_2})} = \\frac{2^{S_1}}{2^{S_1} + 2^{S_2}} = 0.60$$\nConsequently, the fractional contribution of site $2$ is:\n$$1-r = \\frac{2^{S_2}}{2^{S_1} + 2^{S_2}} = 1 - 0.60 = 0.40$$\nThese relationships allow us to express the individual statistical weight terms, $2^{S_1}$ and $2^{S_2}$, in terms of the total weight and the parameter $r$:\n$$2^{S_1} = r (2^{S_1} + 2^{S_2})$$\n$$2^{S_2} = (1-r) (2^{S_1} + 2^{S_2})$$\n\nFor the mutant (${\\mathrm{mut}}$) system, the PWM scores are altered by $\\Delta S_1$ and $\\Delta S_2$, resulting in new scores $S'_1 = S_1 + \\Delta S_1$ and $S'_2 = S_2 + \\Delta S_2$. The mutant expression level, $E_{\\mathrm{mut}}$, is given by:\n$$E_{\\mathrm{mut}} = A (2^{S'_1} + 2^{S'_2}) = A (2^{S_1 + \\Delta S_1} + 2^{S_2 + \\Delta S_2})$$\nApplying the property of exponents, $x^{a+b} = x^a x^b$, we expand this expression:\n$$E_{\\mathrm{mut}} = A (2^{S_1} 2^{\\Delta S_1} + 2^{S_2} 2^{\\Delta S_2})$$\nTo derive $E_{\\mathrm{mut}}$ in terms of $E_{\\mathrm{wt}}$ and $r$, we substitute the expressions for $2^{S_1}$ and $2^{S_2}$:\n$$E_{\\mathrm{mut}} = A \\left[ \\left( r (2^{S_1} + 2^{S_2}) \\right) 2^{\\Delta S_1} + \\left( (1-r) (2^{S_1} + 2^{S_2}) \\right) 2^{\\Delta S_2} \\right]$$\nFactoring out the common term $A (2^{S_1} + 2^{S_2})$:\n$$E_{\\mathrm{mut}} = A (2^{S_1} + 2^{S_2}) \\left[ r \\cdot 2^{\\Delta S_1} + (1-r) \\cdot 2^{\\Delta S_2} \\right]$$\nRecognizing that $E_{\\mathrm{wt}} = A (2^{S_1} + 2^{S_2})$, we arrive at the final symbolic relationship:\n$$E_{\\mathrm{mut}} = E_{\\mathrm{wt}} \\left( r \\cdot 2^{\\Delta S_1} + (1-r) \\cdot 2^{\\Delta S_2} \\right)$$\nThis derived formula shows that the mutant expression is a weighted sum of the fold-changes in binding strength for each site, where the weights are the original fractional contributions of the sites to the total expression.\n\nThe final step is to compute the numerical value for $E_{\\mathrm{mut}}$ using the provided data: $E_{\\mathrm{wt}} = 180$ a.u., $r = 0.60$, $\\Delta S_1 = -1.2$ bits, and $\\Delta S_2 = +0.5$ bits.\n$$E_{\\mathrm{mut}} = 180 \\left( 0.60 \\cdot 2^{-1.2} + (1 - 0.60) \\cdot 2^{0.5} \\right)$$\n$$E_{\\mathrm{mut}} = 180 \\left( 0.60 \\cdot 2^{-1.2} + 0.40 \\cdot 2^{0.5} \\right)$$\nWe calculate the numerical values of the exponential terms:\n$$2^{-1.2} \\approx 0.435275$$\n$$2^{0.5} = \\sqrt{2} \\approx 1.414214$$\nSubstituting these into the equation for $E_{\\mathrm{mut}}$:\n$$E_{\\mathrm{mut}} \\approx 180 \\left( 0.60 \\cdot 0.435275 + 0.40 \\cdot 1.414214 \\right)$$\n$$E_{\\mathrm{mut}} \\approx 180 \\left( 0.261165 + 0.5656856 \\right)$$\n$$E_{\\mathrm{mut}} \\approx 180 \\left( 0.8268506 \\right)$$\n$$E_{\\mathrm{mut}} \\approx 148.833108$$\nThe problem requires the final answer to be rounded to four significant figures. Therefore, the predicted mutant expression is $148.8$ arbitrary units.", "answer": "$$\\boxed{148.8}$$", "id": "2643483"}, {"introduction": "Developmental patterning emerges not from single gene actions but from the collective dynamics of complex Gene Regulatory Networks (GRNs). This advanced computational problem [@problem_id:2643475] requires you to build and simulate a GRN that governs hindbrain segmentation, using a system of coupled ordinary differential equations. By modeling the interactions between key Hox genes and other transcription factors, you will see how stable gene expression patterns, or attractors, can emerge, corresponding to discrete rhombomere identities. This exercise provides hands-on experience with the systems biology approach, demonstrating how complex, spatially organized phenotypes can be understood as emergent properties of an underlying molecular network.", "problem": "You are asked to formalize a minimal, mechanistically grounded Gene Regulatory Network (GRN) for hindbrain patterning that integrates homeotic selector (Hox) paralogs, Retinoic Acid (RA) inputs, and segmental transcription factors to derive stable attractors corresponding to rhombomere identities. The objective is to compute steady-state attractors under specified input conditions and classify each attractor into a rhombomere identity.\n\nFoundational starting points you must use:\n- Central Dogma of Molecular Biology, implying transcription factor concentrations change due to production and degradation.\n- Gene regulation by activators and repressors modeled with cooperative Hill functions.\n- Stable cell identities correspond to dynamical systems attractors of the underlying GRN.\n\nModel specification to implement:\n1. Variables and inputs. There are four dynamical variables representing normalized concentrations in the interval $[0,1]$:\n   - $x_1$: $\\mathrm{Hoxb1}$ (denoted $B1$),\n   - $x_2$: $\\mathrm{Hoxa2}$ (denoted $A2$),\n   - $x_3$: $\\mathrm{Krox20}$ (also known as early growth response $2$, denoted $K20$),\n   - $x_4$: $\\mathrm{MafB}$ (also known as Kreisler, denoted $Maf$).\n   There are three external, constant inputs per test case:\n   - $R \\in [0,1]$: Retinoic Acid (RA) level,\n   - $u_K \\in \\{0,1\\}$: a prepattern seed favoring $\\mathrm{Krox20}$,\n   - $u_M \\in \\{0,1\\}$: a prepattern seed favoring $\\mathrm{MafB}$.\n\n2. Ordinary differential equation (ODE) form. For each gene $x_i$, use the standard mass-balance form\n   $$\\frac{dx_i}{dt} \\;=\\; g_i \\, F_i(\\text{activators}, \\text{repressors}) \\;-\\; k_i \\, x_i,$$\n   where $g_i$ is a maximal synthesis rate, $k_i$ is a first-order degradation rate, and $F_i$ is a regulatory logic function.\n\n3. Regulatory logic with Hill functions. Use cooperative Hill functions with Hill coefficient $n=3$ and half-activation constants $K_{1/2}=0.5$ for both activation and repression:\n   - For an activator $a$, define\n     $$H_{\\mathrm{act}}(a) \\;=\\; \\frac{a^n}{K_{1/2}^n + a^n}.$$\n   - For a repressor $r$, define\n     $$H_{\\mathrm{rep}}(r) \\;=\\; \\frac{K_{1/2}^n}{K_{1/2}^n + r^n}.$$\n   - Combine multiple inputs by multiplication of the corresponding Hill terms. Combine multiple additive sources of production within a bracket as a sum of a basal term and weighted activator terms, as specified below.\n\n4. Node-specific regulation. Let all $g_i = 1$ and all $k_i = 1$. For each node, define $F_i$ as:\n   - $B1$ ($x_1$):\n     $$F_1 \\;=\\; \\Big(b_1 + w_{R1}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_2)\\cdot H_{\\mathrm{rep}}(x_3)\\cdot H_{\\mathrm{rep}}(x_4),$$\n     with $b_1 = 0.02$ and $w_{R1} = 0.98$.\n   - $A2$ ($x_2$):\n     $$F_2 \\;=\\; \\Big(b_2 + w_{R2}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_1)\\cdot H_{\\mathrm{rep}}(x_4),$$\n     with $b_2 = 0.05$ and $w_{R2} = 0.95$.\n   - $K20$ ($x_3$):\n     $$F_3 \\;=\\; \\Big(b_3 + w_{K}\\,H_{\\mathrm{act}}(u_K) + w_{\\mathrm{self3}}\\,H_{\\mathrm{act}}(x_3) + w_{R3}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_1)\\cdot H_{\\mathrm{rep}}(x_4),$$\n     with $b_3 = 0.02$, $w_{K} = 0.5$, $w_{\\mathrm{self3}} = 0.3$, and $w_{R3} = 0.2$.\n   - $Maf$ ($x_4$):\n     $$F_4 \\;=\\; \\Big(b_4 + w_{M}\\,H_{\\mathrm{act}}(u_M) + w_{\\mathrm{self4}}\\,H_{\\mathrm{act}}(x_4) + w_{R4}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_2)\\cdot H_{\\mathrm{rep}}(x_1),$$\n     with $b_4 = 0.02$, $w_{M} = 0.5$, $w_{\\mathrm{self4}} = 0.3$, and $w_{R4} = 0.2$.\n\n5. Numerical integration. Implement an explicit Euler time discretization with time step $\\Delta t = 0.05$, initial condition $x_i(0) = 0$ for all $i \\in \\{1,2,3,4\\}$, maximum iterations $N_{\\max} = 200000$, and convergence tolerance $\\epsilon = 10^{-9}$ on the Euclidean norm of the state update. After each update, clip each $x_i$ to $[0,1]$.\n\n6. Attractor classification. After convergence, classify the steady state into a rhombomere identity using a high-expression threshold $T_{\\mathrm{high}} = 0.6$. Define Boolean flags\n   $$\\text{hiB1} := (x_1 \\ge T_{\\mathrm{high}}),\\;\\; \\text{hiA2} := (x_2 \\ge T_{\\mathrm{high}}),\\;\\; \\text{hiK20} := (x_3 \\ge T_{\\mathrm{high}}),\\;\\; \\text{hiMaf} := (x_4 \\ge T_{\\mathrm{high}}).$$\n   Apply the following decision logic in the listed order (first matching rule applies):\n   - If $\\text{hiK20}$ and $\\text{hiMaf}$ and not $\\text{hiB1}$, return $5$ (identity $r_5$).\n   - Else if $\\text{hiA2}$ and $\\text{hiK20}$ and not $\\text{hiB1}$ and not $\\text{hiMaf}$, return $3$ (identity $r_3$).\n   - Else if $\\text{hiB1}$ and not $\\text{hiK20}$ and not $\\text{hiMaf}$, return $4$ (identity $r_4$).\n   - Else if $\\text{hiMaf}$ and not $\\text{hiK20}$ and not $\\text{hiB1}$, return $6$ (identity $r_6$).\n   - Else if $\\text{hiA2}$ and not $\\text{hiK20}$ and not $\\text{hiB1}$ and not $\\text{hiMaf}$, return $2$ (identity $r_2$).\n   - Else return $0$ to indicate no unique match within $\\{r_2,r_3,r_4,r_5,r_6\\}$.\n\nTest suite:\nProvide the following seven input triplets $(R,u_K,u_M)$:\n- Case $1$: $(0.55, 0, 0)$\n- Case $2$: $(0.55, 1, 0)$\n- Case $3$: $(0.65, 0, 0)$\n- Case $4$: $(0.70, 1, 1)$\n- Case $5$: $(0.75, 0, 1)$\n- Case $6$: $(0.00, 0, 0)$\n- Case $7$: $(0.60, 1, 1)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[result1,result2,result3,...]\"), where each result is the integer class for the corresponding test case in order.", "solution": "The problem statement has been evaluated and is determined to be valid. It is scientifically grounded in the principles of developmental and systems biology, well-posed with a complete set of mathematical definitions and computational instructions, and objective in its formulation. The problem is a non-trivial, well-defined task in computational modeling.\n\nThe problem requires the formalization and simulation of a Gene Regulatory Network (GRN) model for hindbrain patterning. The identity of developing cells, represented as rhombomeres, is proposed to correspond to stable attractors of a dynamical system. The system's state is defined by the concentrations of four key transcription factors: $x_1$ ($\\mathrm{Hoxb1}$), $x_2$ ($\\mathrm{Hoxa2}$), $x_3$ ($\\mathrm{Krox20}$), and $x_4$ ($\\mathrm{MafB}$). The concentrations are normalized to the interval $[0,1]$. The dynamics are governed by a system of four coupled ordinary differential equations (ODEs).\n\nFor each gene product concentration $x_i$, where $i \\in \\{1, 2, 3, 4\\}$, the temporal evolution is given by the equation:\n$$\n\\frac{dx_i}{dt} \\;=\\; g_i \\, F_i(\\mathbf{x}, \\mathbf{u}) \\;-\\; k_i \\, x_i\n$$\nHere, $\\mathbf{x} = [x_1, x_2, x_3, x_4]^T$ is the state vector of concentrations, and $\\mathbf{u} = [R, u_K, u_M]^T$ is the vector of constant external inputs. The parameter $g_i$ represents the maximal synthesis rate and $k_i$ is the first-order degradation rate constant. The function $F_i$ is the regulatory logic function, which models the combined effect of activating and repressing factors on the transcription of gene $i$. The problem specifies that all synthesis and degradation rates are unitary, i.e., $g_i=1$ and $k_i=1$ for all $i$.\n\nThe regulatory interactions are modeled using cooperative Hill functions. For an activator with concentration $a$, the activation function is:\n$$\nH_{\\mathrm{act}}(a) \\;=\\; \\frac{a^n}{K_{1/2}^n + a^n}\n$$\nFor a repressor with concentration $r$, the repression function is:\n$$\nH_{\\mathrm{rep}}(r) \\;=\\; \\frac{K_{1/2}^n}{K_{1/2}^n + r^n}\n$$\nThe problem specifies a Hill coefficient of $n=3$ and a half-activation constant of $K_{1/2}=0.5$.\n\nThe specific regulatory functions $F_i$ for each node are defined as follows:\n\nFor $x_1$ ($\\mathrm{Hoxb1}$):\n$$\nF_1(\\mathbf{x}, R) \\;=\\; \\Big(b_1 + w_{R1}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_2)\\cdot H_{\\mathrm{rep}}(x_3)\\cdot H_{\\mathrm{rep}}(x_4)\n$$\nwith basal rate $b_1 = 0.02$ and weight $w_{R1} = 0.98$.\n\nFor $x_2$ ($\\mathrm{Hoxa2}$):\n$$\nF_2(\\mathbf{x}, R) \\;=\\; \\Big(b_2 + w_{R2}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_1)\\cdot H_{\\mathrm{rep}}(x_4)\n$$\nwith basal rate $b_2 = 0.05$ and weight $w_{R2} = 0.95$.\n\nFor $x_3$ ($\\mathrm{Krox20}$):\n$$\nF_3(\\mathbf{x}, R, u_K) \\;=\\; \\Big(b_3 + w_{K}\\,H_{\\mathrm{act}}(u_K) + w_{\\mathrm{self3}}\\,H_{\\mathrm{act}}(x_3) + w_{R3}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_1)\\cdot H_{\\mathrm{rep}}(x_4)\n$$\nwith basal rate $b_3 = 0.02$ and weights $w_{K} = 0.5$, $w_{\\mathrm{self3}} = 0.3$, and $w_{R3} = 0.2$.\n\nFor $x_4$ ($\\mathrm{MafB}$):\n$$\nF_4(\\mathbf{x}, R, u_M) \\;=\\; \\Big(b_4 + w_{M}\\,H_{\\mathrm{act}}(u_M) + w_{\\mathrm{self4}}\\,H_{\\mathrm{act}}(x_4) + w_{R4}\\,H_{\\mathrm{act}}(R)\\Big)\\cdot H_{\\mathrm{rep}}(x_2)\\cdot H_{\\mathrm{rep}}(x_1)\n$$\nwith basal rate $b_4 = 0.02$ and weights $w_{M} = 0.5$, $w_{\\mathrm{self4}} = 0.3$, and $w_{R4} = 0.2$.\n\nThe system of ODEs must be solved numerically to find the steady-state attractors. An explicit Euler time discretization scheme is employed. The update rule for the state vector $\\mathbf{x}$ from time step $k$ to $k+1$ is given by:\n$$\n\\mathbf{x}_{k+1} = \\mathbf{x}_k + \\Delta t \\cdot \\left( \\mathbf{F}(\\mathbf{x}_k, \\mathbf{u}) - \\mathbf{x}_k \\right)\n$$\nwhere $\\mathbf{F} = [F_1, F_2, F_3, F_4]^T$. The simulation parameters are: time step $\\Delta t = 0.05$, initial condition $\\mathbf{x}_0 = [0, 0, 0, 0]^T$, and a maximum of $N_{\\max} = 200000$ iterations. A crucial step is to constrain the concentrations to their physical domain by clipping each $x_i$ to the interval $[0,1]$ after every update. The simulation terminates either by reaching $N_{\\max}$ or when the system converges to a steady state. Convergence is achieved when the Euclidean norm of the state change per step, $\\|\\mathbf{x}_{k+1} - \\mathbf{x}_k\\|_2$, falls below a tolerance $\\epsilon = 10^{-9}$.\n\nUpon convergence to a steady-state vector $\\mathbf{x}^* = [x_1^*, x_2^*, x_3^*, x_4^*]^T$, the attractor is classified into a rhombomere identity. This classification is based on which gene products are highly expressed, defined by their concentration exceeding a threshold $T_{\\mathrm{high}} = 0.6$. Boolean flags are defined for each component:\n$\\text{hiB1} := (x_1^* \\ge T_{\\mathrm{high}})$, $\\text{hiA2} := (x_2^* \\ge T_{\\mathrm{high}})$, $\\text{hiK20} := (x_3^* \\ge T_{\\mathrm{high}})$, $\\text{hiMaf} := (x_4^* \\ge T_{\\mathrm{high}})$.\nThe classification follows a specific logic tree, evaluated in order:\n1. If $\\text{hiK20} \\land \\text{hiMaf} \\land \\neg\\text{hiB1}$, the identity is $r_5$ (output $5$).\n2. Else if $\\text{hiA2} \\land \\text{hiK20} \\land \\neg\\text{hiB1} \\land \\neg\\text{hiMaf}$, the identity is $r_3$ (output $3$).\n3. Else if $\\text{hiB1} \\land \\neg\\text{hiK20} \\land \\neg\\text{hiMaf}$, the identity is $r_4$ (output $4$).\n4. Else if $\\text{hiMaf} \\land \\neg\\text{hiK20} \\land \\neg\\text{hiB1}$, the identity is $r_6$ (output $6$).\n5. Else if $\\text{hiA2} \\land \\neg\\text{hiK20} \\land \\neg\\text{hiB1} \\land \\neg\\text{hiMaf}$, the identity is $r_2$ (output $2$).\n6. Otherwise, the state is unclassified (output $0$).\n\nThe procedure will be applied to each of the seven test cases specified in the problem statement, and the resulting sequence of integer classifications will be formatted as the final output.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the steady-state attractors of a Gene Regulatory Network for hindbrain patterning\n    and classifies them into rhombomere identities for a given set of test cases.\n    \"\"\"\n    # Test cases: triplets of (R, u_K, u_M)\n    test_cases = [\n        (0.55, 0, 0),  # Case 1\n        (0.55, 1, 0),  # Case 2\n        (0.65, 0, 0),  # Case 3\n        (0.70, 1, 1),  # Case 4\n        (0.75, 0, 1),  # Case 5\n        (0.00, 0, 0),  # Case 6\n        (0.60, 1, 1),  # Case 7\n    ]\n\n    # Model and simulation parameters\n    N = 3.0\n    K_HALF = 0.5\n    K_HALF_N = K_HALF**N\n    \n    # ODE parameters\n    g = np.array([1.0, 1.0, 1.0, 1.0])\n    k = np.array([1.0, 1.0, 1.0, 1.0])\n    \n    # Regulatory function parameters\n    b1, w_R1 = 0.02, 0.98\n    b2, w_R2 = 0.05, 0.95\n    b3, w_K, w_self3, w_R3 = 0.02, 0.5, 0.3, 0.2\n    b4, w_M, w_self4, w_R4 = 0.02, 0.5, 0.3, 0.2\n\n    # Numerical integration parameters\n    DT = 0.05\n    N_MAX = 200000\n    EPSILON = 1e-9\n\n    # Classification threshold\n    T_HIGH = 0.6\n\n    results = []\n\n    def h_act(a):\n        a_n = a**N\n        return a_n / (K_HALF_N + a_n)\n\n    def h_rep(r):\n        r_n = r**N\n        return K_HALF_N / (K_HALF_N + r_n)\n\n    for case in test_cases:\n        R_input, u_K_input, u_M_input = case\n        \n        # Initial state\n        x = np.zeros(4)\n\n        # Pre-compute constant Hill terms\n        h_act_R = h_act(R_input)\n        h_act_u_K = h_act(float(u_K_input))\n        h_act_u_M = h_act(float(u_M_input))\n\n        for _ in range(N_MAX):\n            x_old = x.copy()\n            x1, x2, x3, x4 = x\n\n            # Regulatory logic functions F_i\n            F = np.zeros(4)\n            \n            # F1 for B1 (x1)\n            F[0] = (b1 + w_R1 * h_act_R) * h_rep(x2) * h_rep(x3) * h_rep(x4)\n            \n            # F2 for A2 (x2)\n            F[1] = (b2 + w_R2 * h_act_R) * h_rep(x1) * h_rep(x4)\n            \n            # F3 for K20 (x3)\n            F[2] = (b3 + w_K * h_act_u_K + w_self3 * h_act(x3) + w_R3 * h_act_R) * h_rep(x1) * h_rep(x4)\n\n            # F4 for Maf (x4)\n            F[3] = (b4 + w_M * h_act_u_M + w_self4 * h_act(x4) + w_R4 * h_act_R) * h_rep(x2) * h_rep(x1)\n            \n            # Euler integration step\n            dxdt = g * F - k * x\n            x = x_old + DT * dxdt\n            \n            # Clipping to maintain concentrations in [0, 1]\n            x = np.clip(x, 0, 1)\n\n            # Check for convergence\n            update_norm = np.linalg.norm(x - x_old)\n            if update_norm < EPSILON:\n                break\n        \n        # Attractor classification\n        x1_ss, x2_ss, x3_ss, x4_ss = x\n        \n        hiB1 = x1_ss >= T_HIGH\n        hiA2 = x2_ss >= T_HIGH\n        hiK20 = x3_ss >= T_HIGH\n        hiMaf = x4_ss >= T_HIGH\n        \n        rhombomere_id = 0\n        if hiK20 and hiMaf and not hiB1:\n            rhombomere_id = 5\n        elif hiA2 and hiK20 and not hiB1 and not hiMaf:\n            rhombomere_id = 3\n        elif hiB1 and not hiK20 and not hiMaf:\n            rhombomere_id = 4\n        elif hiMaf and not hiK20 and not hiB1:\n            rhombomere_id = 6\n        elif hiA2 and not hiK20 and not hiB1 and not hiMaf:\n            rhombomere_id = 2\n        else:\n            rhombomere_id = 0\n            \n        results.append(rhombomere_id)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "2643475"}]}