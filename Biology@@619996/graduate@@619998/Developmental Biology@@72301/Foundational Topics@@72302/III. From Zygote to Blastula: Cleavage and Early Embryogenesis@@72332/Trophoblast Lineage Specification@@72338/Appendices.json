{"hands_on_practices": [{"introduction": "Before a cell commits to a fate, its physical position within the embryo must be translated into a biochemical signal. This exercise [@problem_id:2686350] models this foundational step by examining how the Hippo pathway controls the nuclear concentration of Yes-associated protein ($\\mathrm{YAP}$), denoted $Y_n$. By applying a simple yet powerful ordinary differential equation (ODE) modeling protein shuttling, you will calculate the steady-state nuclear $\\mathrm{YAP}$ levels that distinguish \"inside\" from \"outside\" cells, providing a quantitative basis for the first lineage decision.", "problem": "In preimplantation mouse embryos, cells on the outside retain an apical domain and exhibit low Hippo pathway activity, while inner cells lose the apical domain and exhibit high Hippo pathway activity. Nuclear localization of Yes-associated protein (YAP) is promoted when the Hippo pathway is inactive and suppressed when the Hippo pathway is active. Consider an ordinary differential equation (ODE) describing the nuclear concentration of YAP, denoted by $Y_{n}$ (in arbitrary units), in terms of a Hippo activity variable $H \\in \\{0,1\\}$:\n$$\n\\frac{dY_{n}}{dt} = k_{\\mathrm{in}} \\left(1 - H \\right) - k_{\\mathrm{out}} Y_{n}.\n$$\nHere, $k_{\\mathrm{in}}$ (arbitrary units per minute) is a Hippo-suppressed nuclear import term and $k_{\\mathrm{out}}$ (per minute) is a first-order nuclear export term. Biologically, $H=1$ corresponds to inside cells (high Hippo activity due to apical domain loss), and $H=0$ corresponds to outside cells (low Hippo activity with an intact apical domain). Assume that steady state is reached, defined by $\\frac{dY_{n}}{dt} = 0$, and use the parameter values $k_{\\mathrm{in}} = 1.2$ (arbitrary units per minute) and $k_{\\mathrm{out}} = 0.3$ (per minute). \n\nDerive the steady-state nuclear YAP level $Y_{n}^{\\ast}$ as a function of $H$ from the governing ODE by applying the steady-state condition, then evaluate $Y_{n}^{\\ast}$ for the two cell states: inside ($H=1$) and outside ($H=0$). Express your final numerical answers in arbitrary units. Report your answers as a pair in the order (inside, outside).", "solution": "The problem statement is subjected to validation before any attempt at a solution.\n\n**Step 1: Extract Givens**\n- Governing ordinary differential equation (ODE): $\\frac{dY_{n}}{dt} = k_{\\mathrm{in}} \\left(1 - H \\right) - k_{\\mathrm{out}} Y_{n}$\n- $Y_{n}$: nuclear concentration of YAP (arbitrary units)\n- $H$: Hippo activity variable, $H \\in \\{0,1\\}$\n- $k_{\\mathrm{in}}$: Hippo-suppressed nuclear import rate constant, $k_{\\mathrm{in}} = 1.2$ (arbitrary units per minute)\n- $k_{\\mathrm{out}}$: first-order nuclear export rate constant, $k_{\\mathrm{out}} = 0.3$ (per minute)\n- Biological correspondence for $H$: $H=1$ for inside cells, $H=0$ for outside cells.\n- Condition for steady state: $\\frac{dY_{n}}{dt} = 0$.\n- Objective: Derive the steady-state nuclear YAP level $Y_{n}^{\\ast}$ as a function of $H$, then evaluate $Y_{n}^{\\ast}$ for $H=1$ and $H=0$.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientifically Grounded:** The problem presents a simplified but standard mathematical model of protein nuclear-cytoplasmic shuttling regulated by an upstream signaling pathway (Hippo). This is a common approach in quantitative biology and systems biology. The biological premise is correct.\n- **Well-Posed:** The problem provides a clear ODE, all necessary parameters, and a specific condition (steady state) from which a unique solution can be derived. The question is unambiguous.\n- **Objective:** The language is formal and quantitative, free of subjective content.\n- **Flaw Analysis:**\n  - The problem is scientifically sound and formalizable.\n  - It is complete and internally consistent. The units are coherent: $k_{\\mathrm{in}}$ has units of concentration per time, while $k_{\\mathrm{out}} Y_{n}$ also has units of concentration per time, as $k_{\\mathrm{out}}$ is in inverse time and $Y_{n}$ is in concentration.\n  - The setup is physically plausible within the context of a simplified model.\n  - A unique, stable solution exists for each specified value of $H$.\n\n**Step 3: Verdict and Action**\nThe problem is deemed **valid**. A solution will be provided.\n\nThe analysis begins with the provided ordinary differential equation describing the rate of change of nuclear YAP concentration, $Y_n$:\n$$\n\\frac{dY_{n}}{dt} = k_{\\mathrm{in}} \\left(1 - H \\right) - k_{\\mathrm{out}} Y_{n}\n$$\nThe problem requires finding the steady-state concentration, denoted as $Y_{n}^{\\ast}$. By definition, a system is at steady state when there is no net change in its state variables over time. For the variable $Y_{n}$, this condition is expressed as:\n$$\n\\frac{dY_{n}}{dt} = 0\n$$\nApplying this condition to the governing ODE, we replace $Y_{n}$ with its steady-state value $Y_{n}^{\\ast}$:\n$$\n0 = k_{\\mathrm{in}} \\left(1 - H \\right) - k_{\\mathrm{out}} Y_{n}^{\\ast}\n$$\nThis is an algebraic equation for $Y_{n}^{\\ast}$. To derive the expression for $Y_{n}^{\\ast}$ as a function of the Hippo activity variable $H$, we rearrange the equation:\n$$\nk_{\\mathrm{out}} Y_{n}^{\\ast} = k_{\\mathrm{in}} \\left(1 - H \\right)\n$$\nSolving for $Y_{n}^{\\ast}$ by dividing by $k_{\\mathrm{out}}$ (which is non-zero) yields the general steady-state solution:\n$$\nY_{n}^{\\ast}(H) = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} \\left(1 - H \\right)\n$$\nThis expression gives the steady-state nuclear YAP concentration for any given value of $H$. We are now tasked with evaluating this expression for the two specified cell states.\n\nCase 1: Inside cells\nFor inside cells, the Hippo pathway is highly active, which corresponds to $H=1$. Substituting $H=1$ into the general steady-state solution:\n$$\nY_{n, \\text{inside}}^{\\ast} = Y_{n}^{\\ast}(1) = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} \\left(1 - 1 \\right) = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} \\left(0 \\right) = 0\n$$\nThus, the steady-state nuclear YAP concentration in inside cells is $0$ arbitrary units.\n\nCase 2: Outside cells\nFor outside cells, the Hippo pathway has low activity, which corresponds to $H=0$. Substituting $H=0$ into the general steady-state solution:\n$$\nY_{n, \\text{outside}}^{\\ast} = Y_{n}^{\\ast}(0) = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} \\left(1 - 0 \\right) = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}}\n$$\nNow, we substitute the provided numerical values for the parameters $k_{\\mathrm{in}} = 1.2$ arbitrary units per minute and $k_{\\mathrm{out}} = 0.3$ per minute:\n$$\nY_{n, \\text{outside}}^{\\ast} = \\frac{1.2}{0.3} = 4\n$$\nThus, the steady-state nuclear YAP concentration in outside cells is $4$ arbitrary units.\n\nThe final answer is to be reported as a pair in the order (inside, outside).\n- Inside cell steady-state YAP ($Y_{n, \\text{inside}}^{\\ast}$): $0$\n- Outside cell steady-state YAP ($Y_{n, \\text{outside}}^{\\ast}$): $4$\n\nThe ordered pair is ($0$, $4$).", "answer": "$$\n\\boxed{\\begin{pmatrix} 0 & 4 \\end{pmatrix}}\n$$", "id": "2686350"}, {"introduction": "A high level of nuclear $\\mathrm{YAP}$ is a necessary upstream signal, but it is the downstream gene regulatory network (GRN) that ultimately locks in the trophectoderm (TE) fate. This practice [@problem_id:2686330] invites you to a hands-on computational exploration of this core GRN, featuring key factors like $\\mathrm{CDX2}$ and $\\mathrm{OCT4}$. Using a Boolean network model, you will identify the stable attractor states that represent the distinct TE and Inner Cell Mass (ICM) fates and simulate *in silico* gene knockouts to understand the network's logic and robustness.", "problem": "You are given a synchronous Boolean gene regulatory network modeling trophoblast lineage specification with the node set $\\{\\mathrm{CDX2},\\mathrm{ELF5},\\mathrm{EOMES},\\mathrm{OCT4}\\}$. Each node has a Boolean state $x \\in \\{0,1\\}$ that represents its transcriptional status at a discrete time step $t \\in \\mathbb{Z}_{\\ge 0}$. A global network state is a vector $\\mathbf{x}(t) = \\big(x_{\\mathrm{CDX2}}(t), x_{\\mathrm{ELF5}}(t), x_{\\mathrm{EOMES}}(t), x_{\\mathrm{OCT4}}(t)\\big) \\in \\{0,1\\}^{4}$. The synchronous update map $\\mathbf{F}:\\{0,1\\}^{4}\\to \\{0,1\\}^{4}$ is defined by Boolean functions derived from core principles of gene regulation: mutual repression between pluripotency and trophoblast programs, and cooperative self-sustenance among trophoblast transcription factors. Using the standard logical connectives $\\lor$ (OR), $\\land$ (AND), and $\\neg$ (NOT), the update functions are:\n$$\n\\begin{aligned}\nf_{\\mathrm{CDX2}}(\\mathbf{x}) &= \\big(x_{\\mathrm{ELF5}} \\lor x_{\\mathrm{EOMES}} \\lor x_{\\mathrm{CDX2}}\\big) \\land \\neg x_{\\mathrm{OCT4}},\\\\\nf_{\\mathrm{ELF5}}(\\mathbf{x}) &= \\big(x_{\\mathrm{CDX2}} \\lor x_{\\mathrm{EOMES}} \\lor x_{\\mathrm{ELF5}}\\big) \\land \\neg x_{\\mathrm{OCT4}},\\\\\nf_{\\mathrm{EOMES}}(\\mathbf{x}) &= \\big(x_{\\mathrm{CDX2}} \\lor x_{\\mathrm{ELF5}} \\lor x_{\\mathrm{EOMES}}\\big) \\land \\neg x_{\\mathrm{OCT4}},\\\\\nf_{\\mathrm{OCT4}}(\\mathbf{x}) &= \\neg \\big(x_{\\mathrm{CDX2}} \\lor x_{\\mathrm{ELF5}} \\lor x_{\\mathrm{EOMES}}\\big).\n\\end{aligned}\n$$\nThe synchronous update is $\\mathbf{x}(t+1) = \\mathbf{F}\\big(\\mathbf{x}(t)\\big)$. A stable attractor (fixed point) is any state $\\mathbf{x}^{\\ast} \\in \\{0,1\\}^{4}$ satisfying $\\mathbf{F}(\\mathbf{x}^{\\ast}) = \\mathbf{x}^{\\ast}$. In some scenarios, certain nodes are clamped (externally forced) to a fixed value at all times; mathematically, clamping a subset $\\mathcal{C} \\subseteq \\{\\mathrm{CDX2},\\mathrm{ELF5},\\mathrm{EOMES},\\mathrm{OCT4}}\\}$ to prescribed values defines a constrained update $\\tilde{\\mathbf{F}}$ that first computes $\\mathbf{F}$ and then overwrites $x_i$ to its clamped value for all $i \\in \\mathcal{C}$. A clamped stable attractor is a fixed point of $\\tilde{\\mathbf{F}}$.\n\nDefine a phenotype classification for any state $\\mathbf{x}$ as follows:\n- Trophoblast-like (TE-like): if $\\big(x_{\\mathrm{CDX2}} + x_{\\mathrm{ELF5}} + x_{\\mathrm{EOMES}}\\big) \\ge 2$ and $x_{\\mathrm{OCT4}} = 0$.\n- Inner Cell Mass-like (ICM-like): if $x_{\\mathrm{CDX2}} = x_{\\mathrm{ELF5}} = x_{\\mathrm{EOMES}} = 0$ and $x_{\\mathrm{OCT4}} = 1$.\n- Otherwise, classify as other.\n\nFor any state $\\mathbf{x} = \\big(x_{\\mathrm{CDX2}}, x_{\\mathrm{ELF5}}, x_{\\mathrm{EOMES}}, x_{\\mathrm{OCT4}}\\big)$, define an integer encoding\n$$\nv(\\mathbf{x}) \\;=\\; 8\\,x_{\\mathrm{CDX2}} \\;+\\; 4\\,x_{\\mathrm{ELF5}} \\;+\\; 2\\,x_{\\mathrm{EOMES}} \\;+\\; 1\\,x_{\\mathrm{OCT4}}.\n$$\nThis maps each Boolean state to a unique integer in $\\{0,1,\\dots,15\\}$.\n\nTask: Write a program that enumerates all stable attractors (fixed points) under the specified synchronous dynamics for each of the following clamping test cases, classifies each attractor, and outputs the results in the requested format.\n\nTest suite (each case specifies a clamp set $\\mathcal{C}$ and its forced values):\n- Case A (wild-type): no clamping, $\\mathcal{C} = \\varnothing$.\n- Case B (OCT4 forced ON): clamp $x_{\\mathrm{OCT4}} \\equiv 1$.\n- Case C (OCT4 knockout): clamp $x_{\\mathrm{OCT4}} \\equiv 0$.\n- Case D (ELF5 knockout): clamp $x_{\\mathrm{ELF5}} \\equiv 0$.\n\nFor each case, the program must:\n- Enumerate all $\\mathbf{x} \\in \\{0,1\\}^{4}$, apply the appropriate constrained update $\\tilde{\\mathbf{F}}$, and collect all fixed points.\n- For each fixed point, compute $v(\\mathbf{x})$ and assign a class code $c(\\mathbf{x}) \\in \\{-1,0,1\\}$ where $1$ denotes TE-like, $0$ denotes ICM-like, and $-1$ denotes other.\n- Sort the attractors by ascending $v(\\mathbf{x})$.\n\nFinal output format:\n- The program should produce a single line of output containing a comma-separated list enclosed in square brackets. There should be one element per test case in the order A, B, C, D. Each element must itself be a list of pairs $[v(\\mathbf{x}), c(\\mathbf{x})]$ for that case, sorted by $v(\\mathbf{x})$. For example, a valid overall output has the shape\n$[[[v_1,c_1],[v_2,c_2]],[[v_3,c_3]],[[v_4,c_4]],[[v_5,c_5],[v_6,c_6]]].$\nThe outputs are dimensionless integers; no physical units are involved. Angles are not present. Percentages are not used.\n\nYour program must be a complete, runnable script that produces exactly one line in the format described above, with no additional text.", "solution": "The problem statement has been subjected to rigorous validation and is found to be scientifically sound, well-posed, and objective. It describes a classical problem in systems biology: the analysis of fixed points in a synchronous Boolean network, a standard formalism for modeling gene regulatory networks. The network dynamics, clamping conditions, state classification, and computational task are all defined with mathematical precision and are free of contradiction or ambiguity. The biological premises, concerning the mutual antagonism between pluripotency factors (like $\\mathrm{OCT4}$) and trophectoderm factors (like $\\mathrm{CDX2}$, $\\mathrm{ELF5}$, $\\mathrm{EOMES}$), are a valid, albeit simplified, representation of established principles in developmental biology. Therefore, a complete solution is warranted.\n\nThe core of the problem is to identify all stable attractors, specifically fixed points, of a discrete dynamical system under several external clamping conditions. A fixed point $\\mathbf{x}^{\\ast}$ of a system with an update map $\\tilde{\\mathbf{F}}$ is a state that satisfies the condition $\\mathbf{x}^{\\ast} = \\tilde{\\mathbf{F}}(\\mathbf{x}^{\\ast})$. The state space is finite, containing $2^4 = 16$ possible states, which permits a complete solution by exhaustive enumeration.\n\nThe state vector is $\\mathbf{x} = (x_{\\mathrm{CDX2}}, x_{\\mathrm{ELF5}}, x_{\\mathrm{EOMES}}, x_{\\mathrm{OCT4}})$, where each component $x_i \\in \\{0, 1\\}$. The synchronous update map $\\mathbf{F}(\\mathbf{x}) = (f_{\\mathrm{CDX2}}(\\mathbf{x}), f_{\\mathrm{ELF5}}(\\mathbf{x}), f_{\\mathrm{EOMES}}(\\mathbf{x}), f_{\\mathrm{OCT4}}(\\mathbf{x}))$ is defined by the Boolean functions:\n$$\n\\begin{aligned}\nf_{\\mathrm{CDX2}}(\\mathbf{x}) &= T(\\mathbf{x}) \\land \\neg x_{\\mathrm{OCT4}} \\\\\nf_{\\mathrm{ELF5}}(\\mathbf{x}) &= T(\\mathbf{x}) \\land \\neg x_{\\mathrm{OCT4}} \\\\\nf_{\\mathrm{EOMES}}(\\mathbf{x}) &= T(\\mathbf{x}) \\land \\neg x_{\\mathrm{OCT4}} \\\\\nf_{\\mathrm{OCT4}}(\\mathbf{x}) &= \\neg T(\\mathbf{x})\n\\end{aligned}\n$$\nwhere $T(\\mathbf{x}) = x_{\\mathrm{CDX2}} \\lor x_{\\mathrm{ELF5}} \\lor x_{\\mathrm{EOMES}}$ is an auxiliary function representing the collective activity of the trophoblast-specifying transcription factors.\n\nThe computational strategy is as follows:\n1. Iterate through every possible state $\\mathbf{x} \\in \\{0, 1\\}^4$.\n2. For each state and for each clamping scenario, calculate the next state $\\mathbf{y} = \\mathbf{F}(\\mathbf{x})$.\n3. Apply the appropriate clamping condition to $\\mathbf{y}$ to obtain the constrained next state $\\mathbf{x}' = \\tilde{\\mathbf{F}}(\\mathbf{x})$.\n4. If $\\mathbf{x}' = \\mathbf{x}$, then $\\mathbf{x}$ is a fixed point for that scenario.\n5. For each identified fixed point, compute its integer encoding $v(\\mathbf{x}) = 8x_{\\mathrm{CDX2}} + 4x_{\\mathrm{ELF5}} + 2x_{\\mathrm{EOMES}} + 1x_{\\mathrm{OCT4}}$ and its phenotype classification code $c(\\mathbf{x})$.\n6. Collect and sort the results as specified for each case.\n\nThe phenotype classification function $c(\\mathbf{x})$ is defined as:\n$$\nc(\\mathbf{x}) = \\begin{cases} \n1 & \\text{if } (x_{\\mathrm{CDX2}} + x_{\\mathrm{ELF5}} + x_{\\mathrm{EOMES}}) \\ge 2 \\text{ and } x_{\\mathrm{OCT4}} = 0 \\quad (\\text{TE-like}) \\\\\n0 & \\text{if } x_{\\mathrm{CDX2}} = x_{\\mathrm{ELF5}} = x_{\\mathrm{EOMES}} = 0 \\text{ and } x_{\\mathrm{OCT4}} = 1 \\quad (\\text{ICM-like}) \\\\\n-1 & \\text{otherwise} \\end{cases}\n$$\n\nWe now analyze each test case systematically.\n\n**Case A: Wild-type (no clamping)**\nHere, the constrained update map $\\tilde{\\mathbf{F}}$ is identical to the unconstrained map $\\mathbf{F}$. We seek states $\\mathbf{x}^{\\ast}$ such that $\\mathbf{x}^{\\ast} = \\mathbf{F}(\\mathbf{x}^{\\ast})$.\nBy iterating through all $16$ states, we find two fixed points:\n1. $\\mathbf{x}^{\\ast}_1 = (0, 0, 0, 1)$. Here, $T=0$. $\\mathbf{F}(\\mathbf{x}^{\\ast}_1) = (0 \\land \\neg 1, 0 \\land \\neg 1, 0 \\land \\neg 1, \\neg 0) = (0, 0, 0, 1)$. This is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}_1) = 1$.\n   - Classification: $x_{\\mathrm{CDX2}} + x_{\\mathrm{ELF5}} + x_{\\mathrm{EOMES}} = 0$ and $x_{\\mathrm{OCT4}}=1$. This is ICM-like, so $c(\\mathbf{x}^{\\ast}_1)=0$.\n2. $\\mathbf{x}^{\\ast}_2 = (1, 1, 1, 0)$. Here, $T=1$. $\\mathbf{F}(\\mathbf{x}^{\\ast}_2) = (1 \\land \\neg 0, 1 \\land \\neg 0, 1 \\land \\neg 0, \\neg 1) = (1, 1, 1, 0)$. This is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}_2) = 8+4+2 = 14$.\n   - Classification: $x_{\\mathrm{CDX2}} + x_{\\mathrm{ELF5}} + x_{\\mathrm{EOMES}} = 3 \\ge 2$ and $x_{\\mathrm{OCT4}}=0$. This is TE-like, so $c(\\mathbf{x}^{\\ast}_2)=1$.\nSorted result for Case A: $[[1, 0], [14, 1]]$.\n\n**Case B: OCT4 forced ON (clamp $x_{\\mathrm{OCT4}} \\equiv 1$)**\nA state $\\mathbf{x}^{\\ast}$ is a fixed point if it equals the result of computing $\\mathbf{F}(\\mathbf{x}^{\\ast})$ and then forcing the $\\mathrm{OCT4}$ component to $1$. The state itself must have $x_{\\mathrm{OCT4}} = 1$ to be a fixed point.\nLet $\\mathbf{x}^{\\ast} = (x_{\\mathrm{CDX2}}, x_{\\mathrm{ELF5}}, x_{\\mathrm{EOMES}}, 1)$. $\\mathbf{y} = \\mathbf{F}(\\mathbf{x}^{\\ast})$, and $\\mathbf{x}'$ is $\\mathbf{y}$ with $y_4$ set to $1$. We need $\\mathbf{x}^{\\ast} = \\mathbf{x}'$.\nFor any $\\mathbf{x}$ with $x_{\\mathrm{OCT4}} = 1$, the update functions for the first three components are $f(\\mathbf{x}) = T(\\mathbf{x}) \\land \\neg 1 = 0$. Thus, for any such state, $\\mathbf{F}(\\mathbf{x})$ will have its first three components as $0$. The only possible fixed point must therefore be of the form $(0, 0, 0, 1)$. We check this state:\n1. $\\mathbf{x}^{\\ast} = (0, 0, 0, 1)$. As in Case A, $\\mathbf{F}(0, 0, 0, 1) = (0, 0, 0, 1)$. Overwriting the fourth component with $1$ does not change the result. Thus, $\\tilde{\\mathbf{F}}(0, 0, 0, 1) = (0, 0, 0, 1)$. It is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}) = 1$.\n   - Classification is ICM-like, $c(\\mathbf{x}^{\\ast})=0$.\nResult for Case B: $[[1, 0]]$.\n\n**Case C: OCT4 knockout (clamp $x_{\\mathrm{OCT4}} \\equiv 0$)**\nHere, we clamp $x_{\\mathrm{OCT4}}$ to $0$ after each update. A fixed point $\\mathbf{x}^{\\ast}$ must have $x_{\\mathrm{OCT4}} = 0$.\n1. Check $\\mathbf{x}^{\\ast} = (0, 0, 0, 0)$. Here $T=0$. $\\mathbf{F}(0, 0, 0, 0) = (0 \\land \\neg 0, ..., \\neg 0) = (0, 0, 0, 1)$. Clamping $x_{\\mathrm{OCT4}}$ to $0$ gives $(0, 0, 0, 0)$, which is the original state. It is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}) = 0$.\n   - Classification: Sum of trophoblast factors is $0$, and $x_{\\mathrm{OCT4}}=0$. This matches neither TE-like nor ICM-like criteria. It is 'other', so $c(\\mathbf{x}^{\\ast})=-1$.\n2. Check $\\mathbf{x}^{\\ast} = (1, 1, 1, 0)$. Here $T=1$. $\\mathbf{F}(1, 1, 1, 0) = (1 \\land \\neg 0, ..., \\neg 1) = (1, 1, 1, 0)$. Clamping $x_{\\mathrm{OCT4}}$ to $0$ does not change the result. It is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}) = 14$.\n   - Classification is TE-like, $c(\\mathbf{x}^{\\ast})=1$.\nSorted result for Case C: $[[0, -1], [14, 1]]$.\n\n**Case D: ELF5 knockout (clamp $x_{\\mathrm{ELF5}} \\equiv 0$)**\nWe clamp $x_{\\mathrm{ELF5}}$ to $0$ after each update. A fixed point $\\mathbf{x}^{\\ast}$ must have $x_{\\mathrm{ELF5}} = 0$.\n1. Check $\\mathbf{x}^{\\ast} = (0, 0, 0, 1)$. Here $T=0$. $\\mathbf{F}(0, 0, 0, 1) = (0, 0, 0, 1)$. Clamping $x_{\\mathrm{ELF5}}$ to $0$ does not change the result. It is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}) = 1$.\n   - Classification is ICM-like, $c(\\mathbf{x}^{\\ast})=0$.\n2. Check other states with $x_{\\mathrm{ELF5}}=0$. Consider $\\mathbf{x}^{\\ast} = (1, 0, 1, 0)$. Here $T = 1 \\lor 0 \\lor 1 = 1$. $\\mathbf{F}(\\mathbf{x}^{\\ast}) = (1 \\land \\neg 0, 1 \\land \\neg 0, 1 \\land \\neg 0, \\neg 1) = (1, 1, 1, 0)$. Clamping $x_{\\mathrm{ELF5}}$ to $0$ gives $(1, 0, 1, 0)$, which is the original state. It is a fixed point.\n   - $v(\\mathbf{x}^{\\ast}) = 8(1) + 4(0) + 2(1) + 1(0) = 10$.\n   - Classification: $x_{\\mathrm{CDX2}} + x_{\\mathrm{ELF5}} + x_{\\mathrm{EOMES}} = 1+0+1 = 2$. Since $2 \\ge 2$ and $x_{\\mathrm{OCT4}}=0$, this is TE-like. So $c(\\mathbf{x}^{\\ast})=1$.\nSorted result for Case D: $[[1, 0], [10, 1]]$.\n\nThe program below will implement this exhaustive search and reproduce these findings.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the Boolean network problem by enumerating all states and finding\n    fixed points under different clamping conditions.\n    \"\"\"\n\n    # Test cases: (clamp_idx, clamp_val) or None for wild-type\n    # Node order: CDX2, ELF5, EOMES, OCT4\n    # Indices:    0,    1,    2,     3\n    test_cases = {\n        'A': None,                     # Case A: wild-type\n        'B': {'idx': 3, 'val': 1},     # Case B: OCT4 forced ON\n        'C': {'idx': 3, 'val': 0},     # Case C: OCT4 knockout\n        'D': {'idx': 1, 'val': 0},     # Case D: ELF5 knockout\n    }\n\n    # The order of execution must be A, B, C, D\n    case_order = ['A', 'B', 'C', 'D']\n    \n    all_results = []\n\n    # Number of nodes\n    n_nodes = 4\n    # Total number of states = 2^n_nodes\n    n_states = 1 << n_nodes\n\n    for case_key in case_order:\n        clamp_info = test_cases[case_key]\n        fixed_points = []\n        \n        # Iterate through all 2^4 = 16 possible states\n        for i in range(n_states):\n            # The state vector x is represented as a list of integers (0 or 1)\n            # The order is [x_CDX2, x_ELF5, x_EOMES, x_OCT4]\n            # This corresponds to binary representation of i, padded with zeros\n            state_bin = format(i, f'0{n_nodes}b')\n            x = [int(bit) for bit in state_bin]\n            \n            # Unpack state variables for clarity\n            x_cdx2, x_elf5, x_eomes, x_oct4 = x\n            \n            # --- 1. Compute the next state using the unconstrained update map F ---\n            # T = x_CDX2 OR x_ELF5 OR x_EOMES\n            T = bool(x_cdx2 or x_elf5 or x_eomes)\n            \n            # not_oct4 = NOT x_OCT4\n            not_oct4 = not bool(x_oct4)\n            \n            # Update functions\n            f_cdx2 = T and not_oct4\n            f_elf5 = T and not_oct4\n            f_eomes = T and not_oct4\n            f_oct4 = not T\n            \n            next_x_unclamped = [int(f_cdx2), int(f_elf5), int(f_eomes), int(f_oct4)]\n            \n            # --- 2. Apply clamping to get the constrained next state ---\n            next_x_clamped = list(next_x_unclamped)\n            if clamp_info is not None:\n                clamp_idx = clamp_info['idx']\n                clamp_val = clamp_info['val']\n                next_x_clamped[clamp_idx] = clamp_val\n            \n            # --- 3. Check for fixed point condition ---\n            if next_x_clamped == x:\n                # This state x is a fixed point for the current case.\n                \n                # --- 4. Compute integer encoding v(x) ---\n                v_x = 8 * x_cdx2 + 4 * x_elf5 + 2 * x_eomes + 1 * x_oct4\n                \n                # --- 5. Compute phenotype classification c(x) ---\n                troph_sum = x_cdx2 + x_elf5 + x_eomes\n                c_x = -1 # Default to 'other'\n                if troph_sum >= 2 and x_oct4 == 0:\n                    c_x = 1  # TE-like\n                elif troph_sum == 0 and x_oct4 == 1:\n                    c_x = 0  # ICM-like\n\n                fixed_points.append([v_x, c_x])\n\n        # Sort the collected fixed points by their integer encoding v(x)\n        fixed_points.sort(key=lambda p: p[0])\n        all_results.append(fixed_points)\n\n    # Format the final output string as specified\n    # The map(str, ...) converts each inner list to its string representation\n    # e.g., [[1, 0], [14, 1]] becomes \"[[1, 0], [14, 1]]\"\n    output_str = f\"[{','.join(map(str, all_results))}]\"\n    \n    # Python's default str() adds spaces. The required format has none.\n    # A simple replace ensures strict formatting.\n    output_str = output_str.replace(\" \", \"\")\n\n    print(output_str)\n\nsolve()\n```", "id": "2686330"}, {"introduction": "Our computational models generate precise hypotheses about the roles of specific genes, but these predictions require validation through rigorous experimentation. A crucial distinction in developmental dynamics is whether a gene is required to *initiate* a cellular program or to *maintain* it over time. This exercise [@problem_id:2686307] challenges you to apply causal reasoning to an experimental design problem, evaluating strategies to dissect the distinct temporal roles of the master regulatory transcription factor $\\mathrm{CDX2}$.", "problem": "In early mammalian development, outer blastomeres adopt the trophoblast lineage (trophectoderm; TE) while inner cells form the inner cell mass (ICM). The transcription factor Caudal Type Homeobox $2$ (CDX$2$) is implicated in TE specification. Consider the following minimal causal-dynamical abstraction that aligns with the Central Dogma of Molecular Biology (DNA to RNA to protein) and standard gene regulatory network principles: let $x(t)$ denote the concentration of CDX$2$ protein in an outer blastomere over developmental time $t$, and let $F(t) \\in \\{0,1\\}$ denote whether the TE gene regulatory program has been irreversibly initiated ($F(t)=1$) or not ($F(t)=0$). There exists an initiation window $[t_0,t_1]$ over which the probability rate of switching from $F(t)=0$ to $F(t)=1$ depends monotonically on $x(t)$ (for instance, via a threshold process), and a post-initiation phase $t>t_1$ during which $F(t)=1$ may be maintained either by CDX$2$-dependent feed-forward loops or by CDX$2$-independent feedback stabilization.\n\nUsing counterfactual reasoning grounded in causality, one formalizes necessity at initiation as the following statement: if one constructs a treatment schedule $a(t)$ that removes CDX$2$ only during $t \\in [t_0,t_1]$ while keeping it present otherwise, then for embryos with $F(t_1)=0$ under this schedule, the outcome $Y^{(a)}(t^\\ast)$ at a later readout time $t^\\ast>t_1$ (e.g., fraction of TE marker-positive cells) differs from the outcome $Y^{(\\tilde{a})}(t^\\ast)$ under the counterfactual schedule $\\tilde{a}(t)$ that preserves CDX$2$ throughout. By contrast, a maintenance role implies that removing CDX$2$ only after $t_1$ (with $F(t_1)=1$ held constant at the start of the post-initiation phase) alters $Y^{(a)}(t^\\ast)$ relative to the counterfactual $\\tilde{a}(t)$.\n\nYou are tasked with selecting the single most appropriate experimental strategy that, in practice, can separate initiation from maintenance roles of CDX$2$ in TE lineage specification by implementing the counterfactual contrasts above, while respecting biological realism of mouse preimplantation development (outer cell polarization by approximately the $8$-cell stage and blastocyst formation thereafter). Which option below best satisfies these requirements?\n\nA. Engineer an inducible, rapid, and reversible CDX$2$ perturbation (for example, a small-molecule–controlled degron) to impose two complementary schedules: remove CDX$2$ only during $t \\in [t_0,t_1]$ and restore thereafter, and, in a separate cohort, preserve CDX$2$ during $[t_0,t_1]$ but remove it only for $t>t_1$. Quantify both early initiation readouts (e.g., apical polarity and early TE target activation) and later maintenance readouts (e.g., sustained ELF$5$ and EOMES expression and epithelial integrity) at matched readout time $t^\\ast$. Include the reciprocal rescue in a constitutive-null background by providing a pulse of CDX$2$ restricted to $[t_0,t_1]$.\n\nB. Use a constitutive Cdx$2$ knockout and attempt a “late rescue” by injecting maternal Cdx$2$ messenger RNA into zygotes, then measure TE markers at the blastocyst stage without additional temporal control.\n\nC. Overexpress CDX$2$ specifically in inner cells after blastocyst formation to test whether ICM cells can be reprogrammed to TE; use the result to infer whether CDX$2$ was needed to initiate TE in outer cells earlier.\n\nD. Create a mosaic CRISPR–Cas$9$ mutagenesis of Cdx$2$ in preimplantation embryos without temporal control; analyze lineage outcomes at the expanded blastocyst stage and infer initiation versus maintenance from the severity of phenotypes.\n\nE. Perform high-temporal-resolution single-cell RNA sequencing from the $8$-cell stage to blastocyst without perturbation; infer initiation versus maintenance roles of CDX$2$ from transcriptome trajectories by correlating Cdx$2$ expression with TE marker dynamics.\n\nChoose the best answer and justify your choice by reference to the causal-counterfactual logic articulated above (presence versus absence of CDX$2$ restricted to $[t_0,t_1]$ versus $t>t_1$) and to the biological processes of TE initiation and maintenance.", "solution": "We begin from the Central Dogma of Molecular Biology (DNA to RNA to protein) and standard causal reasoning: proteins such as CDX$2$ implement regulatory control by binding DNA and altering transcription of target genes, which affects cell states over time. The TE lineage decision can be conceptualized as a transition in a dynamical gene regulatory network from a pre-TE state to a TE state. In a minimal abstraction, CDX$2$ protein concentration $x(t)$ influences the hazard of switching from $F(t)=0$ to $F(t)=1$ during an initiation window $[t_0,t_1]$ when apical polarity, Hippo pathway status, and TEAD$4$ activity converge in outer cells. After this, for $t>t_1$, maintenance of $F(t)=1$ reflects continued enforcement of the TE attractor, possibly via CDX$2$-dependent feed-forward regulation of genes such as ELF$5$ and EOMES, epithelial integrity, and self-reinforcing chromatin states.\n\nCounterfactual reasoning requires comparing outcomes under different treatment schedules $a(t)$ that differ only in the timing of CDX$2$ presence. Define $Y^{(a)}(t^\\ast)$ as a measurable readout at time $t^\\ast>t_1$ (for example, fraction of TE-marker-positive cells, TE epithelium integrity, or expression levels of maintenance factors). To test initiation necessity, one must remove CDX$2$ specifically during $[t_0,t_1]$ but restore it afterwards, and compare $Y^{(a)}(t^\\ast)$ with $Y^{(\\tilde{a})}(t^\\ast)$ under a schedule $\\tilde{a}(t)$ that keeps CDX$2$ present throughout. If CDX$2$ is initiation-essential, then removal restricted to $[t_0,t_1]$ will reduce the fraction reaching $F(t_1)=1$ and thus lower $Y^{(a)}(t^\\ast)$ even though CDX$2$ is restored later. To test maintenance necessity, one must leave initiation intact (CDX$2$ present during $[t_0,t_1]$ so that $F(t_1)=1$ is established) and then remove CDX$2$ only for $t>t_1$. If CDX$2$ is maintenance-essential, then this will destabilize TE markers and epithelium for $t>t_1$, lowering $Y^{(a)}(t^\\ast)$ relative to the continuous-presence schedule.\n\nWe now analyze each option:\n\nA. Engineer an inducible, rapid, and reversible perturbation and impose two complementary schedules: removal strictly during $[t_0,t_1]$ (initiation test) versus removal strictly after $t_1$ (maintenance test), with matched readouts at $t^\\ast$. This design directly implements the counterfactual contrasts required by causality: $a(t)$ differs from $\\tilde{a}(t)$ only in a defined temporal window. Rapid control (for example, a small-molecule degron such as an auxin-inducible or dTAG system) ensures that $x(t)$ is sharply modulated relative to the biological decision window, satisfying the assumption that $F(t)$ responds to the temporal profile of $x(t)$. Inclusion of a time-restricted rescue pulse in a constitutive-null background operationalizes the converse counterfactual: sufficiency to initiate when present only in $[t_0,t_1]$ and dispensability for maintenance if removal after $t_1$ does not erode TE markers. This is scientifically realistic for preimplantation embryos and uses readouts spanning early initiation (e.g., apical polarity and early TE target activation) and later maintenance (e.g., ELF$5$/EOMES and epithelial integrity). This option correctly distinguishes initiation versus maintenance. Verdict — Correct.\n\nB. A constitutive knockout removes CDX$2$ across all times $t$, confounding initiation and maintenance because the absence spans both $[t_0,t_1]$ and $t>t_1]$. Injecting maternal messenger RNA at the zygote stage does not provide late rescue but rather very early expression; furthermore, without precise control of $x(t)$ relative to $[t_0,t_1]$, one cannot construct the counterfactual “present-only-after-$t_1$” or “absent-only-during-$[t_0,t_1]$” schedules. Thus, this design cannot cleanly separate initiation from maintenance roles. Verdict — Incorrect.\n\nC. Overexpressing CDX$2$ in inner cells after blastocyst formation tests sufficiency for reprogramming ICM to TE, which is a different question. It does not implement the necessary counterfactual schedules about CDX$2$ presence during $[t_0,t_1]$ versus $t>t_1]$ in outer cells undergoing TE fate. Any outcomes here primarily inform potency or reprogramming and do not resolve necessity at initiation versus maintenance in the normal spatiotemporal context. Verdict — Incorrect.\n\nD. Mosaic CRISPR–Cas$9$ mutagenesis without temporal control introduces spatial heterogeneity but removes CDX$2$ across both initiation and maintenance phases in targeted clones. Phenotype severity cannot be unambiguously attributed to failure at initiation versus failure at maintenance because the treatment schedule $a(t)$ is constant (CDX$2$ absent at all $t$) in mutated cells. Without timing control, the counterfactual comparisons are not implementable. Verdict — Incorrect.\n\nE. High-temporal-resolution single-cell transcriptomics yields correlations between Cdx$2$ expression and TE markers, but it lacks intervention. Correlation over $t$ does not establish necessity at a given phase and cannot approximate the required counterfactuals (what would happen if CDX$2$ were absent only during $[t_0,t_1]$ or only for $t>t_1]$). Without perturbation, causal attribution to initiation versus maintenance is not justified. Verdict — Incorrect.\n\nTherefore, only option A satisfies the causal-counterfactual design criteria and the biological constraints needed to distinguish initiation from maintenance roles of CDX$2$ in trophoblast lineage specification.", "answer": "$$\\boxed{A}$$", "id": "2686307"}]}