{"hands_on_practices": [{"introduction": "The first major morphological event in mammalian embryogenesis is compaction, where loosely aggregated blastomeres tighten their connections, a crucial step for forming the sealed trophectoderm. This exercise [@problem_id:2622182] bridges biology and physics, guiding you to derive how fundamental principles of interfacial energy minimization can explain this complex biological process. By modeling cells as droplets with specific adhesive properties ($W$) and cortical tension ($\\tau$), you will develop a quantitative intuition for how differential adhesion drives tissue morphogenesis.", "problem": "Consider a compaction event in the preimplantation mammalian embryo modeled as two identical blastomeres in an extracellular medium. Each blastomere is initially a sphere of radius $R$ with a homogeneous cortical contractility that can be represented by an effective cell–medium interfacial tension $\\tau$ (force per unit length). Cadherin-mediated adhesion between the two blastomeres contributes an adhesion work per unit area $W$ when the cell–cell interface is formed. The interfacial energy of the system is given by $E=\\sum \\gamma_{ij} A_{ij}$, where $\\gamma_{ij}$ is the interfacial tension between phases $i$ and $j$, and $A_{ij}$ is the corresponding interfacial area. Assume:\n- The two blastomeres are identical and form a symmetric contact with a circular contact line.\n- The geometry near the contact is characterized by a contact angle $\\theta$ defined inside a blastomere between the free cell–medium surface and the plane of the cell–cell interface (so that increasing $\\theta$ corresponds to increasing contact area up to the hemispherical limit).\n- Volumes are conserved, and interfaces rearrange quasistatically to minimize total interfacial energy.\n- The work of adhesion per unit area obeys the Dupré relation for identical interfaces, $W = 2\\,\\gamma_{cm} - \\gamma_{cc}$, where $\\gamma_{cm}=\\tau$ is the cell–medium interfacial tension and $\\gamma_{cc}$ is the effective cell–cell interfacial tension.\n\nStarting from the fundamental variational principle that equilibria of capillary systems minimize $E$ subject to volume constraints, and using the standard force-balance (Neumann) condition at a three-phase contact line implied by this minimization, derive the equilibrium contact angle $\\theta$ that minimizes $E$ for the two-blastomere system. Express $\\theta$ as a single closed-form analytic function of $\\tau$ and $W$. Your answer must be an explicit expression for $\\theta$ in radians.\n\nFinally, by interpreting the expression physically, infer (qualitatively, no calculation required in the final answer) the threshold condition on $W/\\tau$ under which the energy is minimized by maximizing the cell–cell contact area (i.e., up to the geometric limit of two hemispherical caps).", "solution": "The problem requires the derivation of the equilibrium contact angle for a symmetric two-blastomere system by minimizing the total interfacial energy. The problem is well-posed and scientifically grounded in the principles of capillarity and surface thermodynamics as applied to cell aggregates.\n\nThe fundamental principle for determining the equilibrium configuration of a capillary system is the minimization of the total interfacial free energy, $E$, subject to any constraints, such as constant volume. For a system with multiple interfaces, this energy is given by the sum over all interfaces of the product of the interfacial tension $\\gamma_{ij}$ and the interfacial area $A_{ij}$:\n$$E = \\sum_{i,j} \\gamma_{ij} A_{ij}$$\nIn our system, we have two phases: the cell ($c$) and the medium ($m$). This results in two types of interfaces: the cell-cell interface ($cc$) and the cell-medium interface ($cm$). Due to the symmetry of the two identical blastomeres, the total energy is:\n$$E = \\gamma_{cc} A_{cc} + 2 \\gamma_{cm} A_{cm}$$\nwhere $A_{cc}$ is the area of the single cell-cell interface and $A_{cm}$ is the area of one cell-medium interface.\n\nThe problem states that the minimization of this energy functional, subject to the volume constraint, implies a local force-balance condition at the three-phase contact line. This is the Young-Dupré or Neumann condition. We will use this condition directly, as suggested.\n\nThe three-phase contact line is the circular boundary where the cell-cell interface meets the two cell-medium interfaces. At any point along this line, three tensions are acting: $\\gamma_{cc}$ along the plane of the cell-cell interface, and two $\\gamma_{cm}$ tensions, one for each cell, acting tangentially to the respective cell surfaces.\n\nLet us consider the projection of these tensional forces onto the plane of the cell-cell interface. For the system to be in mechanical equilibrium, the net force in this plane must be zero. The tension $\\gamma_{cc}$ acts to shrink the contact area. This force is balanced by the components of the two $\\gamma_{cm}$ tensions that lie in the contact plane.\n\nThe problem defines the contact angle $\\theta$ as the angle *inside* the blastomere, between the free cell-medium surface and the plane of the cell-cell interface. Therefore, the component of each $\\gamma_{cm}$ tension that acts in the contact plane is $\\gamma_{cm} \\cos(\\theta)$. Since there are two such forces pulling the contact line outward, the total outward force component per unit length of the contact line is $2\\gamma_{cm} \\cos(\\theta)$.\n\nThe equilibrium condition is thus the balance of these forces:\n$$\\gamma_{cc} = 2 \\gamma_{cm} \\cos(\\theta)$$\n\nNow, we must express the interfacial tensions $\\gamma_{cm}$ and $\\gamma_{cc}$ in terms of the given parameters, the cell-medium interfacial tension $\\tau$ and the work of adhesion per unit area $W$.\nThe problem provides the direct identification:\n$$\\gamma_{cm} = \\tau$$\nFurthermore, the Dupré relation for the work of adhesion is given as:\n$$W = 2 \\gamma_{cm} - \\gamma_{cc}$$\nWe can rearrange this to solve for the cell-cell interfacial tension $\\gamma_{cc}$:\n$$\\gamma_{cc} = 2 \\gamma_{cm} - W$$\nSubstituting $\\gamma_{cm} = \\tau$, we get:\n$$\\gamma_{cc} = 2\\tau - W$$\n\nNow we substitute the expressions for $\\gamma_{cm}$ and $\\gamma_{cc}$ into our force balance equation:\n$$2\\tau - W = 2 \\tau \\cos(\\theta)$$\nOur goal is to solve this equation for the equilibrium contact angle $\\theta$. We rearrange the terms:\n$$2 \\tau \\cos(\\theta) = 2\\tau - W$$\nDividing by $2\\tau$ (assuming $\\tau \\neq 0$, which is physically necessary):\n$$\\cos(\\theta) = \\frac{2\\tau - W}{2\\tau} = 1 - \\frac{W}{2\\tau}$$\nFinally, we take the inverse cosine to find the angle $\\theta$ in radians:\n$$\\theta = \\arccos\\left(1 - \\frac{W}{2\\tau}\\right)$$\nThis is the required closed-form analytic expression for the equilibrium contact angle.\n\nFor the second part of the problem, we must interpret this result physically to find the condition under which the cell-cell contact area is maximized. The problem states that increasing $\\theta$ corresponds to increasing contact area. The geometric limit is reached when the two blastomeres become hemispheres, at which point their free surfaces are perpendicular to the contact plane. In this configuration, the contact angle reaches its maximum possible value, $\\theta = \\frac{\\pi}{2}$. Further increase in contact area is not possible without violating the volume constraint and spherical-cap geometry.\n\nThe energy is minimized by maximizing the contact area when the adhesive forces ($W$) are very strong compared to the cortical tension ($\\tau$). Our derived expression for $\\theta$ is valid as long as the argument of the $\\arccos$ function is within its domain, $[-1, 1]$. Since $W$ and $\\tau$ are positive, $1 - \\frac{W}{2\\tau} \\le 1$ is always satisfied. For a physically meaningful contact angle between two convex bodies, we must have $\\theta \\ge 0$, which means $\\cos(\\theta) \\le 1$. The critical condition is on the lower bound. For the contact angle to be a real number, we must have:\n$$\\cos(\\theta) = 1 - \\frac{W}{2\\tau} \\ge -1$$\nHowever, the physical configuration of two adhering spheres limits $\\theta$ to the range $[0, \\frac{\\pi}{2}]$, so we are interested in the range where $\\cos(\\theta) \\ge 0$.\nThis leads to the condition:\n$$1 - \\frac{W}{2\\tau} \\ge 0 \\implies 1 \\ge \\frac{W}{2\\tau} \\implies W \\le 2\\tau$$\nWhen $W = 2\\tau$, we find $\\cos(\\theta) = 0$, which gives $\\theta = \\frac{\\pi}{2}$. This corresponds to the maximal contact area configuration (two hemispheres).\n\nIf the adhesion work $W$ exceeds this threshold, i.e., $W > 2\\tau$, the term $1 - \\frac{W}{2\\tau}$ becomes negative. This indicates that there is no equilibrium angle in the interior of the domain $(0, \\frac{\\pi}{2})$ that satisfies the force-balance condition. The energetic drive to form the cell-cell contact ($W$) is so strong that it overwhelms the resistance from surface tension ($\\tau$). In this regime, the system's energy decreases monotonically as the contact area increases. Therefore, the energy will be minimized at the boundary of the physically accessible configurations, which is the configuration of maximum possible contact area. This corresponds to the angle $\\theta = \\frac{\\pi}{2}$.\n\nThus, the threshold condition under which the energy is minimized by maximizing the cell-cell contact area is $W \\ge 2\\tau$, or, in terms of the requested ratio, $\\frac{W}{\\tau} \\ge 2$.", "answer": "$$\\boxed{\\arccos\\left(1 - \\frac{W}{2\\tau}\\right)}$$", "id": "2622182"}, {"introduction": "Underlying the physical separation of cells into an outer trophectoderm (TE) and an inner cell mass (ICM) is a robust gene regulatory network (GRN). At the heart of this network lies a bistable switch, driven by mutual repression between master regulators like $CDX2$ and $OCT4$. This computational practice [@problem_id:2622167] invites you to analyze a simplified Boolean model of this GRN, discovering how its structure naturally gives rise to two stable, mutually exclusive cell fates. By finding the network's fixed-point attractors, you gain a powerful framework for understanding how cells make binary lineage decisions.", "problem": "You are asked to formalize a minimal gene regulatory network for early mammalian blastocyst lineage specification with explicit Boolean dynamics and to analyze its attractors. The biological context is that mutual repression between Caudal-type homeobox 2 (CDX2) and Octamer-binding transcription factor 4 (OCT4) partitions cells into either trophectoderm (TE) or inner cell mass (ICM), while the Hippo pathway controls the nuclear localization of Yes-associated protein (YAP), which co-activates TEA Domain Transcription Factor 4 (TEAD4) to promote TE fate. Your program must implement and analyze a Boolean network derived from fundamental rules of transcriptional regulation and signaling.\n\nFundamental basis to use:\n- The Central Dogma implies that transcription factor activity regulates gene expression through activator and repressor logic. At a coarse-grained level, such regulation can be abstracted with Boolean functions that use monotonic activator (logical OR) and repressor (logical NOT) inputs.\n- In early mammalian embryos, CDX2 and OCT4 mutually repress. Hippo pathway activity excludes YAP from the nucleus, such that high Hippo activity reduces YAP–TEAD4 co-activation. In Boolean abstraction, this corresponds to an input where Hippo activity, denoted by $H \\in \\{0,1\\}$, drives nuclear YAP as $\\neg H$, and TEAD4 activation requires both nuclear YAP and TEAD4 presence.\n\nNetwork specification:\n- State variables at discrete time $t$: $C_t \\in \\{0,1\\}$ for CDX2, $O_t \\in \\{0,1\\}$ for OCT4.\n- Inputs: $H \\in \\{0,1\\}$ represents Hippo pathway activity (high Hippo is $H=1$), and $E \\in \\{0,1\\}$ represents TEAD4 protein presence (present is $E=1$).\n- Intermediate node: TEAD4 activity $T_t \\in \\{0,1\\}$ is given by\n$$\nT_t \\;=\\; (\\neg H) \\land E.\n$$\n- Boolean update rules (synchronous update):\n$$\nC_{t+1} \\;=\\; T_t \\;\\lor\\; \\big(C_t \\land \\neg O_t\\big),\n$$\n$$\nO_{t+1} \\;=\\; (\\neg C_t) \\;\\lor\\; \\big(O_t \\land \\neg T_t\\big) \\;\\lor\\; H.\n$$\n\nInterpretation:\n- $C_{t+1}$ requires TEAD4 activity or self-maintenance in the absence of OCT4.\n- $O_{t+1}$ is maintained when CDX2 is absent, can self-maintain when TEAD4 is inactive, and is additionally biased toward ICM by Hippo activity (the $H$ term).\n- Trophectoderm (TE) state corresponds to $C=1$ and $O=0$. Inner cell mass (ICM) state corresponds to $C=0$ and $O=1$.\n\nTask:\n- For each test case $(H,E)$ provided below, treat $(H,E)$ as constant inputs. Enumerate all initial conditions $(C_0,O_0) \\in \\{0,1\\}^2$. Under synchronous update using the rules above, iterate until a fixed point is reached (a state $(C_\\ast,O_\\ast)$ such that $C_{t+1}=C_t=C_\\ast$ and $O_{t+1}=O_t=O_\\ast$). Record all distinct fixed points reachable from the four initial conditions. A cycle of period greater than one must be treated as “no fixed point.”\n- Classify the set of fixed points as follows:\n  - If there is exactly one fixed point and it is TE ($C=1$, $O=0$), return the integer $1$.\n  - If there is exactly one fixed point and it is ICM ($C=0$, $O=1$), return the integer $0$.\n  - If there are at least two distinct fixed points including one TE and one ICM, return the integer $2$.\n  - In any other case (including any fixed point that is neither TE nor ICM, or a limit cycle with no fixed points), return the integer $3$.\n\nAngle or physical units do not apply.\n\nTest suite:\n- Use the following five test cases, each a pair $(H,E)$ with $H,E \\in \\{0,1\\}$:\n  1. $(H,E)=(0,1)$\n  2. $(H,E)=(1,1)$\n  3. $(H,E)=(0,0)$\n  4. $(H,E)=(1,0)$\n  5. $(H,E)=(0,1)$ with the same inputs as the first case but included to confirm determinism across all initial conditions.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list of integers enclosed in square brackets, in the same order as the test suite above, for example, $[r_1,r_2,r_3,r_4,r_5]$. No additional text should be printed.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\nThe provided information for the Boolean network model is as follows:\n- State variables: $C_t \\in \\{0,1\\}$ (CDX2), $O_t \\in \\{0,1\\}$ (OCT4) at discrete time $t$.\n- Constant inputs: $H \\in \\{0,1\\}$ (Hippo pathway activity), $E \\in \\{0,1\\}$ (TEAD4 protein presence).\n- Intermediate node for TEAD4 activity: $T_t = (\\neg H) \\land E$. Since inputs are constant, we denote $T = (\\neg H) \\land E$.\n- Synchronous update rules:\n$$\nC_{t+1} = T \\lor (C_t \\land \\neg O_t)\n$$\n$$\nO_{t+1} = (\\neg C_t) \\lor (O_t \\land \\neg T) \\lor H\n$$\n- State interpretations:\n  - Trophectoderm (TE): $(C, O) = (1, 0)$.\n  - Inner cell mass (ICM): $(C, O) = (0, 1)$.\n- Task: For each pair of inputs $(H, E)$, find all fixed-point attractors by exploring all four initial states $(C_0, O_0) \\in \\{ (0,0), (0,1), (1,0), (1,1) \\}$.\n- Classification rules for the set of reachable fixed points:\n  1. Return $1$: If the only fixed point is TE, $(1,0)$.\n  2. Return $0$: If the only fixed point is ICM, $(0,1)$.\n  3. Return $2$: If there are at least two fixed points, including both TE and ICM.\n  4. Return $3$: For all other outcomes, including limit cycles or fixed points that are not TE or ICM.\n- Test suite: $(H,E) \\in \\{ (0,1), (1,1), (0,0), (1,0), (0,1) \\}$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is evaluated against the required criteria.\n- **Scientifically Grounded**: The problem describes a simplified Boolean network model of early embryonic lineage specification. The key molecular players (CDX2, OCT4, YAP/TEAD4, Hippo pathway) and their interactions (mutual repression, co-activation) are based on established principles of developmental biology. Boolean modeling is a standard, valid abstraction technique in systems biology. The model is a coarse-grained but scientifically sound representation.\n- **Well-Posed**: The problem is mathematically unambiguous. The state space is finite, containing only four states: $\\{(0,0), (0,1), (1,0), (1,1)\\}$. The update rules are deterministic Boolean functions. For any given initial state and constant inputs, the trajectory of the system is uniquely determined. Since the state space is finite, any trajectory must eventually converge to a fixed point or a limit cycle. The task of finding and classifying these attractors is therefore well-defined.\n- **Objective**: All terms, rules, and conditions are specified with mathematical precision, using Boolean logic. The classification criteria are objective and exhaustive.\n\n**Step 3: Verdict and Action**\nThe problem is valid. It is a well-posed, scientifically grounded problem in computational systems biology. A solution will be provided.\n\n**Methodology**\nThe solution requires analyzing a discrete-time dynamical system for five different parameter sets $(H, E)$. The system has a state vector $(C_t, O_t)$ and evolves according to synchronous update rules. For each parameter set, the analysis proceeds as follows:\n1.  The value of the intermediate variable $T = (\\neg H) \\land E$ is calculated. This value is constant for the duration of the simulation for a given $(H,E)$ pair.\n2.  The specific update rules for $C_{t+1}$ and $O_{t+1}$ are determined by substituting the values of $H$, $E$, and $T$.\n3.  The system's trajectory is simulated starting from each of the four possible initial states: $(0,0), (0,1), (1,0), (1,1)$.\n4.  For each trajectory, we iterate until a state repeats. If a state $(C_*, O_*)$ is its own successor, it is a fixed point. The set of all unique fixed points reachable from any initial state is collected. Due to the small state space, limit cycles of length greater than $1$ can also be detected, though none occur in this specific system.\n5.  The resulting set of fixed points is classified according to the provided rules to determine the integer output.\n\n**Analysis of Test Cases**\n\n**1. Test Case $(H,E) = (0,1)$**\n- Inputs: $H=0$, $E=1$.\n- Intermediate variable: $T = (\\neg 0) \\land 1 = 1 \\land 1 = 1$.\n- Update rules:\n  $C_{t+1} = 1 \\lor (C_t \\land \\neg O_t) = 1$.\n  $O_{t+1} = (\\neg C_t) \\lor (O_t \\land \\neg 1) \\lor 0 = \\neg C_t$.\n- State transitions:\n  - $(0,0) \\to (1, \\neg 0) = (1,1)$.\n  - $(0,1) \\to (1, \\neg 0) = (1,1)$.\n  - $(1,0) \\to (1, \\neg 1) = (1,0)$. This is a fixed point.\n  - $(1,1) \\to (1, \\neg 1) = (1,0)$.\n- The sole reachable fixed point is $(1,0)$, the TE state.\n- Classification: Exactly one fixed point, which is TE. Result: $1$.\n\n**2. Test Case $(H,E) = (1,1)$**\n- Inputs: $H=1$, $E=1$.\n- Intermediate variable: $T = (\\neg 1) \\land 1 = 0 \\land 1 = 0$.\n- Update rules:\n  $C_{t+1} = 0 \\lor (C_t \\land \\neg O_t) = C_t \\land \\neg O_t$.\n  $O_{t+1} = (\\neg C_t) \\lor (O_t \\land \\neg 0) \\lor 1 = (\\neg C_t) \\lor O_t \\lor 1 = 1$.\n- State transitions:\n  - $(0,0) \\to (0 \\land \\neg 0, 1) = (0,1)$.\n  - $(0,1) \\to (0 \\land \\neg 1, 1) = (0,1)$. This is a fixed point.\n  - $(1,0) \\to (1 \\land \\neg 0, 1) = (1,1)$.\n  - $(1,1) \\to (1 \\land \\neg 1, 1) = (0,1)$.\n- The sole reachable fixed point is $(0,1)$, the ICM state.\n- Classification: Exactly one fixed point, which is ICM. Result: $0$.\n\n**3. Test Case $(H,E) = (0,0)$**\n- Inputs: $H=0$, $E=0$.\n- Intermediate variable: $T = (\\neg 0) \\land 0 = 1 \\land 0 = 0$.\n- Update rules:\n  $C_{t+1} = 0 \\lor (C_t \\land \\neg O_t) = C_t \\land \\neg O_t$.\n  $O_{t+1} = (\\neg C_t) \\lor (O_t \\land \\neg 0) \\lor 0 = (\\neg C_t) \\lor O_t$.\n- State transitions:\n  - $(0,0) \\to (0 \\land \\neg 0, \\neg 0 \\lor 0) = (0,1)$.\n  - $(0,1) \\to (0 \\land \\neg 1, \\neg 0 \\lor 1) = (0,1)$. This is a fixed point.\n  - $(1,0) \\to (1 \\land \\neg 0, \\neg 1 \\lor 0) = (1,0)$. This is a fixed point.\n  - $(1,1) \\to (1 \\land \\neg 1, \\neg 1 \\lor 1) = (0,1)$.\n- Two distinct fixed points are reachable: $(1,0)$ (TE) and $(0,1)$ (ICM).\n- Classification: At least two distinct fixed points including one TE and one ICM. Result: $2$.\n\n**4. Test Case $(H,E) = (1,0)$**\n- Inputs: $H=1$, $E=0$.\n- Intermediate variable: $T = (\\neg 1) \\land 0 = 0 \\land 0 = 0$.\n- Update rules are identical to case $2$:\n  $C_{t+1} = C_t \\land \\neg O_t$.\n  $O_{t+1} = 1$.\n- The analysis is identical to case $2$. The sole reachable fixed point is $(0,1)$, the ICM state.\n- Classification: Exactly one fixed point, which is ICM. Result: $0$.\n\n**5. Test Case $(H,E) = (0,1)$**\n- This case is identical to the first test case. The analysis is deterministic and therefore the result must be identical.\n- The sole reachable fixed point is $(1,0)$, the TE state.\n- Classification: Exactly one fixed point, which is TE. Result: $1$.\n\n**Summary of Results**\nThe calculated results for the five test cases are $[1, 0, 2, 0, 1]$. The final program will implement this logic to compute the results systematically.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Analyzes a Boolean network model for blastocyst lineage specification.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (0, 1), # Case 1\n        (1, 1), # Case 2\n        (0, 0), # Case 3\n        (1, 0), # Case 4\n        (0, 1), # Case 5\n    ]\n\n    results = []\n    for H_in, E_in in test_cases:\n        # Convert to boolean for clarity if desired, but 0/1 works directly.\n        H, E = int(H_in), int(E_in)\n\n        # Calculate the intermediate node T based on constant inputs H and E.\n        # T = (NOT H) AND E\n        T = (1 - H) & E\n        \n        # Define the synchronous update function for a single state (C, O).\n        def update(C, O):\n            \"\"\"\n            Applies the Boolean update rules.\n            C_next = T OR (C AND NOT O)\n            O_next = (NOT C) OR (O AND NOT T) OR H\n            \"\"\"\n            C_next = T | (C & (1 - O))\n            O_next = (1 - C) | (O & (1 - T)) | H\n            return C_next, O_next\n\n        fixed_points = set()\n        has_long_cycle = False\n\n        # Enumerate all 4 initial conditions.\n        initial_conditions = [(0, 0), (0, 1), (1, 0), (1, 1)]\n        for c0, o0 in initial_conditions:\n            c, o = c0, o0\n            \n            # Keep track of states visited from this initial condition\n            # to detect fixed points and cycles.\n            path = [(c, o)]\n\n            # A 4-state system must enter an attractor in at most 4 steps.\n            # We iterate a few more times to be safe.\n            for _ in range(5):\n                c_next, o_next = update(c, o)\n                \n                # Check for fixed point\n                if (c_next, o_next) == (c, o):\n                    fixed_points.add((c, o))\n                    break\n                \n                # Check for cycle of length > 1\n                if (c_next, o_next) in path:\n                    # This problem's dynamics do not produce long cycles,\n                    # but this logic handles the general case.\n                    has_long_cycle = True\n                    break\n\n                path.append((c_next, o_next))\n                c, o = c_next, o_next\n            \n            if has_long_cycle:\n                break # A long cycle from one IC means classification is 3.\n\n        # Classify the outcome based on the set of reachable fixed points.\n        te_state = (1, 0)\n        icm_state = (0, 1)\n\n        # Rule for case 3: Any other case\n        # This includes limit cycles with no fixed points, or any fixed point\n        # that is not TE or ICM, etc.\n        classification = 3\n\n        if not has_long_cycle:\n            # Rule for case 2: at least two distinct fixed points including one TE and one ICM\n            if len(fixed_points) >= 2 and te_state in fixed_points and icm_state in fixed_points:\n                classification = 2\n            # Rule for case 1: exactly one fixed point and it is TE\n            elif len(fixed_points) == 1 and te_state in fixed_points:\n                classification = 1\n            # Rule for case 0: exactly one fixed point and it is ICM\n            elif len(fixed_points) == 1 and icm_state in fixed_points:\n                classification = 0\n            # Check if any fixed point is non-biological (not TE or ICM)\n            elif any(fp not in [te_state, icm_state] for fp in fixed_points):\n                classification = 3\n        \n        results.append(classification)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2622167"}, {"introduction": "A key outcome of the trophectoderm fate decision is the establishment of apical-basal polarity, marked by the asymmetric localization of proteins like atypical Protein Kinase C ($\\text{aPKC}$) and E-cadherin. This advanced practice [@problem_id:2622190] challenges you to formalize the concept of polarity, first by deriving a scale-invariant metric from fundamental axioms and then by using it to statistically test a hypothesis on synthetic data. This exercise connects abstract genetic programs to their measurable cellular phenotypes and develops critical skills in quantitative data analysis.", "problem": "You are given the task of formalizing and testing polarity changes in the outer cells of a mammalian blastocyst using fluorescence intensity profiles of atypical Protein Kinase C (aPKC) and E-cadherin. The biological priors are: atypical Protein Kinase C (aPKC) is a core apical polarity determinant enriched at the apical cortex of trophectodermal outer cells, while E-cadherin is enriched more basally/laterally; Rho-associated coiled-coil containing protein kinase (ROCK) activity supports apical-basal polarity via actomyosin regulation. The computational objective is to derive from first principles a polarity index from intensity profiles and to test whether ROCK inhibition reduces polarity by comparing index distributions.\n\nYou must proceed from the following fundamentals and design constraints:\n\n- Biological measurement principle: fluorescence intensity at a position is proportional to local concentration of the labeled protein, up to an arbitrary positive multiplicative factor due to acquisition settings and probe labeling efficiencies.\n- Outer cell cortex is parameterized by a one-dimensional coordinate $t \\in [0,1]$ where $t=0$ is apical and $t=1$ is basal.\n- For each marker and each cell, you receive an intensity profile sampled uniformly at $M$ positions, encoded as an array of length $M$ indexed by $x \\in \\{0,1,\\dots,M-1\\}$ corresponding to $t = x/(M-1)$.\n- To summarize apical versus basal abundance for a given marker in a given cell, define two statistics from the profile: an apical window mean $A$ computed as the arithmetic mean of intensities over the first $w_a$ samples ($x \\in \\{0,\\dots,w_a-1\\}$) and a basal window mean $B$ computed as the arithmetic mean over the last $w_b$ samples ($x \\in \\{M-w_b,\\dots,M-1\\}$). Assume $w_a \\ge 1$, $w_b \\ge 1$, and $w_a + w_b \\le M$.\n- You must derive a scalar apical/basal enrichment score $f(A,B)$ for a marker subject to the following axioms:\n  - Scale invariance: $f(kA,kB) = f(A,B)$ for all $k > 0$ (imaging gains must not affect the score).\n  - Antisymmetry under apical-basal exchange: $f(A,B) = -f(B,A)$.\n  - Monotonicity: if $A$ increases with $B$ fixed, then $f(A,B)$ increases; if $B$ increases with $A$ fixed, then $f(A,B)$ decreases.\n  - Additivity over multiplicative contrasts: for any $c > 0$, the increment $f(cA,B) - f(A,B)$ depends only on $c$ and not on $A$ or $B$.\n  - Continuity on $(0,\\infty)^2$.\n- Using the above and only well-tested facts about outer-cell polarity (apical enrichment of atypical Protein Kinase C (aPKC), and basal/lateral enrichment of E-cadherin), define a composite polarity index $P$ for a single cell that increases when atypical Protein Kinase C (aPKC) is more apically enriched and E-cadherin is more basally enriched. Your derivation must justify the orientation (sign) for each marker within $P$.\n\nYou must then design a one-sided statistical test to evaluate whether the distribution of the composite polarity index in ROCK-inhibited cells is shifted downward relative to control cells. The test must be robust to non-Gaussian distributions and unequal variances, and it must report a boolean decision for a specified significance level $\\alpha$.\n\nImplementation and data generation details to ensure reproducibility and scientific realism:\n\n- Synthetic data generation: For each test case, you must generate per-cell intensity profiles for control and ROCK-inhibited conditions using the following generative model. Let $t_x = x/(M-1)$ for $x \\in \\{0,\\dots,M-1\\}$. For a given marker, with parameters $(\\text{base}, \\text{amp}, \\text{scale})$ and Gaussian noise with standard deviation $\\sigma$, define:\n  - For atypical Protein Kinase C (aPKC): intensity at position $x$ equals $\\text{base} + \\text{amp} \\cdot \\exp(-t_x/\\text{scale}) + \\eta$, where $\\eta \\sim \\mathcal{N}(0,\\sigma^2)$.\n  - For E-cadherin: intensity at position $x$ equals $\\text{base} + \\text{amp} \\cdot \\exp(-(1-t_x)/\\text{scale}) + \\eta$, where $\\eta \\sim \\mathcal{N}(0,\\sigma^2)$.\n- Use an independent random number generator with a specified integer seed per test case to ensure determinism. Within a test case, you must generate independent noise for each cell, condition, and marker. The program must not require any user input and must not access external files or networks.\n- For numerical stability in computing any function that divides by $A$ or $B$ or takes logarithms, use a small constant $\\epsilon = 10^{-9}$ as needed.\n\nStatistical decision:\n\n- Adopt a one-sided Mann–Whitney $U$ test comparing ROCK-inhibited versus control composite polarity indices with alternative hypothesis \"ROCK-inhibited less than control,\" and significance threshold $\\alpha = 0.05$. The decision must be reported as $1$ (true) if the $p$-value is less than $\\alpha$ and the sample median in ROCK-inhibited is strictly less than the sample median in control; otherwise report $0$ (false).\n\nYour program must implement the derivation, generate the synthetic datasets, compute per-cell composite indices, carry out the statistical test, and aggregate the boolean results for the following test suite of parameter sets. Each test case is specified as a tuple:\n$(\\text{seed}, N, M, w_a, w_b, \\sigma, (\\text{aPKC}_{\\text{ctrl}}), (\\text{aPKC}_{\\text{rock}}), (\\text{Ecad}_{\\text{ctrl}}), (\\text{Ecad}_{\\text{rock}}))$, where each marker parameter triple is $(\\text{base}, \\text{amp}, \\text{scale})$.\n\nUse the following five test cases designed for coverage:\n\n- Case 1 (clear reduction; \"happy path\"): $(123, 40, 100, 10, 10, 4.0, (50.0, 40.0, 0.15), (50.0, 18.0, 0.20), (40.0, 32.0, 0.20), (40.0, 12.0, 0.20))$.\n- Case 2 (no change; null condition): $(321, 40, 100, 10, 10, 4.0, (48.0, 36.0, 0.18), (48.0, 36.0, 0.18), (42.0, 28.0, 0.22), (42.0, 28.0, 0.22))$.\n- Case 3 (small sample, subtle effect; potential non-detection): $(999, 8, 120, 12, 12, 6.0, (55.0, 22.0, 0.16), (55.0, 16.0, 0.18), (38.0, 20.0, 0.24), (38.0, 15.0, 0.24))$.\n- Case 4 (polarity increased under ROCK inhibition; directionality control): $(2024, 30, 100, 10, 10, 5.0, (50.0, 20.0, 0.20), (50.0, 30.0, 0.18), (45.0, 18.0, 0.22), (45.0, 26.0, 0.20))$.\n- Case 5 (boundary windows; $w_a = w_b = 1$): $(777, 35, 60, 1, 1, 4.5, (52.0, 34.0, 0.14), (52.0, 14.0, 0.22), (39.0, 26.0, 0.18), (39.0, 10.0, 0.24))$.\n\nRequired final output format:\n\n- Your program should produce a single line of output containing the decision results as a comma-separated list of integers enclosed in square brackets, in the order of the test cases above. For example, a valid output looks like: \"[1,0,0,0,1]\".", "solution": "We begin from core biological and measurement principles. In the mammalian blastocyst, the outer cells that will contribute to the trophectoderm display apical-basal polarity: atypical Protein Kinase C (aPKC) is enriched apically and E-cadherin is higher basally/laterally. Fluorescence intensity at a position along the cortex is proportional to the local concentration up to a positive multiplicative factor due to imaging conditions. Therefore, any polarity score that compares apical to basal levels should be invariant to uniform scaling.\n\nDefine a sampling coordinate $t \\in [0,1]$ from apical ($t=0$) to basal ($t=1$), and a discrete profile of length $M$ at points $t_x = x/(M-1)$ for $x \\in \\{0,\\dots,M-1\\}$. Given a profile, compute apical and basal window means $A$ and $B$ using window sizes $w_a$ and $w_b$ as arithmetic means over the first $w_a$ and last $w_b$ samples, respectively. Because intensities are positive-valued in expectation and subject to multiplicative scaling, we seek a function $f(A,B)$ satisfying:\n\n- Scale invariance: $f(kA,kB)=f(A,B)$ for all $k>0$.\n- Antisymmetry: $f(A,B)=-f(B,A)$ (swapping apical and basal flips the sign).\n- Monotonicity: increasing $A$ with $B$ fixed increases $f$, and increasing $B$ with $A$ fixed decreases $f$.\n- Additivity over multiplicative contrasts: for any $c>0$, $f(cA,B)-f(A,B)$ depends only on $c$, not on $A$ or $B$.\n- Continuity.\n\nLet $g(A,B)=f(A,B)$. From scale invariance, $g(A,B)=g\\!\\left(\\frac{A}{B},1\\right) \\equiv h\\!\\left(\\frac{A}{B}\\right)$ for some univariate function $h$ on $(0,\\infty)$. Antisymmetry implies $h(r)=-h(1/r)$. The additivity over multiplicative contrasts yields, for any $c>0$ and $r>0$,\n$$\nh(cr)-h(r) = \\phi(c),\n$$\nfor some function $\\phi$ depending only on $c$. Fix $r=1$ to obtain $h(c)-h(1)=\\phi(c)$. Hence $h(cr)-h(r)=h(c)-h(1)$, which is the Cauchy-type functional equation on $(0,\\infty)$ under multiplication. The continuous solutions on the positive reals are logarithmic: there exists a constant $K \\in \\mathbb{R}$ and a logarithm base such that\n$$\nh(r) = K \\log(r).\n$$\nMonotonicity with respect to $A$ and $B$ requires $K>0$. Choosing base-$2$ logarithms provides fold-change interpretability in bits. Therefore, up to a positive constant factor, the unique index satisfying the axioms is\n$$\nf(A,B) = \\log_{2}\\!\\left(\\frac{A}{B}\\right).\n$$\nTo ensure numerical stability when $A$ or $B$ is close to zero due to noise, we compute\n$$\nf_{\\epsilon}(A,B) = \\log_{2}\\!\\left(\\frac{A+\\epsilon}{B+\\epsilon}\\right),\n$$\nwith a small constant $\\epsilon=10^{-9}$.\n\nMarker orientation in the composite polarity index follows directly from the known polarity pattern. For atypical Protein Kinase C (aPKC), elevated apical relative to basal corresponds to higher polarity; thus we define $E_{\\text{aPKC}} = f_{\\epsilon}(A_{\\text{aPKC}},B_{\\text{aPKC}})$. For E-cadherin, elevated basal relative to apical corresponds to higher polarity; thus we invert the ratio to maintain the same directionality of increased polarity:\n$$\nE_{\\text{Ecad}} = f_{\\epsilon}(B_{\\text{Ecad}},A_{\\text{Ecad}}) = \\log_{2}\\!\\left(\\frac{B_{\\text{Ecad}}+\\epsilon}{A_{\\text{Ecad}}+\\epsilon}\\right).\n$$\nA simple, interpretable composite index that weights both markers equally is the arithmetic mean\n$$\nP = \\frac{1}{2}\\left(E_{\\text{aPKC}} + E_{\\text{Ecad}}\\right).\n$$\nBecause each $E$ has the same units (bits of fold-enrichment) and aligned directionality, this average preserves the axiomatic properties while integrating complementary information.\n\nData generation uses physically plausible gradients with noise. For each cell and marker, we generate a profile using:\n- Atypical Protein Kinase C (aPKC): $I(x) = \\text{base} + \\text{amp}\\cdot \\exp(-t_x/\\text{scale}) + \\eta$, $\\eta \\sim \\mathcal{N}(0,\\sigma^2)$.\n- E-cadherin: $J(x) = \\text{base} + \\text{amp}\\cdot \\exp(-(1-t_x)/\\text{scale}) + \\eta$, $\\eta \\sim \\mathcal{N}(0,\\sigma^2)$.\n\nStatistical testing. To evaluate whether ROCK inhibition reduces polarity, we compare the distributions of $P$ between ROCK-inhibited and control groups using a one-sided Mann–Whitney $U$ test with alternative hypothesis that the ROCK-inhibited distribution is stochastically smaller (i.e., shifted downward). This nonparametric test is robust to non-Gaussianity and unequal variances. We set the significance threshold $\\alpha=0.05$ and additionally require the sample median in ROCK-inhibited to be strictly less than that in control to guard against pathological small $p$-values in the wrong direction. Report $1$ if both conditions hold; else report $0$.\n\nAlgorithmic steps for each test case:\n1. Initialize a random number generator with the specified seed.\n2. For each condition (control and ROCK-inhibited) and each marker, generate $N$ independent cell profiles of length $M$ with the specified $(\\text{base},\\text{amp},\\text{scale})$ and noise standard deviation $\\sigma$.\n3. For each cell, compute $A$ and $B$ using window sizes $w_a$ and $w_b$.\n4. Compute $E_{\\text{aPKC}}$ and $E_{\\text{Ecad}}$ with $\\epsilon=10^{-9}$ and then compute $P$.\n5. Compare the distributions of $P$ between conditions using the one-sided Mann–Whitney $U$ test (alternative \"less\") and decide based on $p<\\alpha$ and median direction.\n6. Append the decision as an integer $1$ or $0$ to the results list.\n\nEdge cases considered in the test suite:\n- Clear effect with ample sample size (Case $1$) should yield detection ($1$).\n- Null effect with identical parameters (Case $2$) should not yield detection ($0$).\n- Small sample with subtle effect (Case $3$) may not cross the significance threshold ($0$).\n- Effect in the opposite direction (Case $4$) should not be flagged as a reduction ($0$).\n- Boundary window sizes $w_a=w_b=1$ (Case $5$) with a strong effect should still be detectable ($1$).\n\nThe final program implements the above derivation and prints a single line with a list of five integers in the required format, corresponding to the five test cases in order.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import mannwhitneyu\n\nEPSILON = 1e-9\n\ndef generate_profiles(seed, N, M, sigma, params_apkc, params_ecad):\n    \"\"\"\n    Generate synthetic intensity profiles for aPKC (apical gradient) and E-cad (basal gradient).\n    Returns:\n        apkc_profiles: shape (N, M)\n        ecad_profiles: shape (N, M)\n    \"\"\"\n    rng_apkc = np.random.default_rng(seed + 101)  # separate streams for determinism\n    rng_ecad = np.random.default_rng(seed + 202)\n\n    x = np.arange(M, dtype=float)\n    t = x / (M - 1.0)\n\n    base_a, amp_a, scale_a = params_apkc\n    base_e, amp_e, scale_e = params_ecad\n\n    # aPKC: apical-high decaying towards basal\n    apkc_mean = base_a + amp_a * np.exp(-t / scale_a)\n    # E-cad: basal-high decaying towards apical\n    ecad_mean = base_e + amp_e * np.exp(-(1.0 - t) / scale_e)\n\n    # Tile means for N cells and add Gaussian noise\n    apkc_profiles = np.tile(apkc_mean, (N, 1)) + rng_apkc.normal(0.0, sigma, size=(N, M))\n    ecad_profiles = np.tile(ecad_mean, (N, 1)) + rng_ecad.normal(0.0, sigma, size=(N, M))\n\n    return apkc_profiles, ecad_profiles\n\ndef window_means(profiles, wa, wb):\n    \"\"\"\n    Compute apical and basal window means for each profile.\n    profiles: shape (N, M)\n    Returns:\n        A: shape (N,)\n        B: shape (N,)\n    \"\"\"\n    N, M = profiles.shape\n    # Apical window: first wa samples\n    A = profiles[:, :wa].mean(axis=1)\n    # Basal window: last wb samples\n    B = profiles[:, M - wb :].mean(axis=1)\n    return A, B\n\ndef composite_polarity_index(A_apkc, B_apkc, A_ecad, B_ecad, eps=EPSILON):\n    \"\"\"\n    Compute composite index P per cell:\n    E_apkc = log2((A_apkc+eps)/(B_apkc+eps))\n    E_ecad = log2((B_ecad+eps)/(A_ecad+eps))\n    P = 0.5 * (E_apkc + E_ecad)\n    \"\"\"\n    E_apkc = np.log2((A_apkc + eps) / (B_apkc + eps))\n    E_ecad = np.log2((B_ecad + eps) / (A_ecad + eps))\n    P = 0.5 * (E_apkc + E_ecad)\n    return P\n\ndef evaluate_case(case):\n    \"\"\"\n    case: (seed, N, M, wa, wb, sigma, apkc_ctrl, apkc_rock, ecad_ctrl, ecad_rock)\n    Returns int 1 if reduction detected, else 0.\n    \"\"\"\n    seed, N, M, wa, wb, sigma, apkc_ctrl, apkc_rock, ecad_ctrl, ecad_rock = case\n\n    # Control group data\n    apkc_ctrl_profiles, ecad_ctrl_profiles = generate_profiles(\n        seed=seed + 1000, N=N, M=M, sigma=sigma,\n        params_apkc=apkc_ctrl, params_ecad=ecad_ctrl\n    )\n    A_apkc_c, B_apkc_c = window_means(apkc_ctrl_profiles, wa, wb)\n    A_ecad_c, B_ecad_c = window_means(ecad_ctrl_profiles, wa, wb)\n    P_ctrl = composite_polarity_index(A_apkc_c, B_apkc_c, A_ecad_c, B_ecad_c)\n\n    # ROCK-inhibited group data\n    apkc_rock_profiles, ecad_rock_profiles = generate_profiles(\n        seed=seed + 2000, N=N, M=M, sigma=sigma,\n        params_apkc=apkc_rock, params_ecad=ecad_rock\n    )\n    A_apkc_r, B_apkc_r = window_means(apkc_rock_profiles, wa, wb)\n    A_ecad_r, B_ecad_r = window_means(ecad_rock_profiles, wa, wb)\n    P_rock = composite_polarity_index(A_apkc_r, B_apkc_r, A_ecad_r, B_ecad_r)\n\n    # One-sided Mann-Whitney U test: alternative=\"less\" (ROCK-inhibited less than control)\n    u_stat, p_value = mannwhitneyu(P_rock, P_ctrl, alternative=\"less\")\n\n    median_ctrl = float(np.median(P_ctrl))\n    median_rock = float(np.median(P_rock))\n\n    # Decision rule\n    alpha = 0.05\n    decision = int((p_value < alpha) and (median_rock < median_ctrl))\n    return decision\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: clear reduction\n        (123, 40, 100, 10, 10, 4.0, (50.0, 40.0, 0.15), (50.0, 18.0, 0.20), (40.0, 32.0, 0.20), (40.0, 12.0, 0.20)),\n        # Case 2: no change\n        (321, 40, 100, 10, 10, 4.0, (48.0, 36.0, 0.18), (48.0, 36.0, 0.18), (42.0, 28.0, 0.22), (42.0, 28.0, 0.22)),\n        # Case 3: small sample, subtle effect\n        (999, 8, 120, 12, 12, 6.0, (55.0, 22.0, 0.16), (55.0, 16.0, 0.18), (38.0, 20.0, 0.24), (38.0, 15.0, 0.24)),\n        # Case 4: polarity increased under ROCK inhibition\n        (2024, 30, 100, 10, 10, 5.0, (50.0, 20.0, 0.20), (50.0, 30.0, 0.18), (45.0, 18.0, 0.22), (45.0, 26.0, 0.20)),\n        # Case 5: boundary windows wa=wb=1\n        (777, 35, 60, 1, 1, 4.5, (52.0, 34.0, 0.14), (52.0, 14.0, 0.22), (39.0, 26.0, 0.18), (39.0, 10.0, 0.24)),\n    ]\n\n    results = []\n    for case in test_cases:\n        result = evaluate_case(case)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2622190"}]}