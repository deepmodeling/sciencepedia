{"hands_on_practices": [{"introduction": "Gene regulatory networks often function as molecular switches, enabling cells to make decisive, all-or-none responses to graded inputs, a behavior essential for developmental patterning. A common network motif for generating such behavior is positive autoregulation, where a gene product enhances its own transcription. This exercise provides a hands-on exploration of the deterministic dynamics of a positive-feedback loop, where you will use the principles of dynamical systems to calculate the precise threshold at which the system gains its switch-like, bistable character through a saddle-node bifurcation [@problem_id:2665261].", "problem": "A single-gene positive-feedback module is embedded in a gene regulatory network (GRN) and driven by a spatially uniform morphogen input that raises the geneâ€™s basal transcription rate. Let $x(t)$ denote the gene product concentration, and assume the following minimal, biophysically standard ingredients: (i) transcription-translation yields production, (ii) degradation/dilution is first order, and (iii) transcriptional auto-activation arises from cooperative promoter occupancy. After nondimensionalization by the protein decay rate and the dissociation constant of the auto-activator, the dynamics reduce to the one-dimensional ordinary differential equation\n$$\n\\frac{dx}{dt} \\;=\\; s \\;+\\; a\\,\\frac{x^{2}}{1 + x^{2}} \\;-\\; x,\n$$\nwhere $x \\ge 0$ is dimensionless concentration, $a>0$ is the dimensionless maximal auto-activation strength relative to degradation, and $s \\ge 0$ is the dimensionless morphogen-controlled basal production input.\n\nFrom fundamental definitions in one-dimensional dynamical systems, a fixed point is a value $x^{\\ast}$ such that $\\frac{dx}{dt}=0$, and a saddle-node (fold) bifurcation occurs at parameter values where two fixed points coalesce and annihilate, which geometrically corresponds to a loss of transversality of the nullcline with respect to the flow.\n\nAssume $a$ is held fixed at $a=2.5$ while $s$ is varied. Using only the definitions above and standard calculus, determine the smallest nonnegative value $s_{c}$ at which a saddle-node bifurcation occurs as $s$ is increased from $0$. Your computation must start from the steady-state condition and the geometric coalescence criterion for fixed points in one dimension, and proceed by eliminating $x$ to obtain $s_{c}$. Round your final numerical answer to four significant figures. Express your final answer as a pure dimensionless number (no units).", "solution": "The problem as stated is scientifically grounded, well-posed, objective, and self-contained. It describes a standard model from systems biology and asks a mathematically precise question about its dynamics. Therefore, the problem is valid, and a solution will be presented.\n\nThe dynamics of the gene product concentration $x(t)$ are given by the ordinary differential equation:\n$$\n\\frac{dx}{dt} = f(x, s) = s + a\\,\\frac{x^{2}}{1 + x^{2}} - x\n$$\nwhere $x \\ge 0$, $a > 0$, and $s \\ge 0$. The value of the maximal auto-activation strength is fixed at $a=2.5$.\n\nA fixed point, denoted $x^{\\ast}$, is a concentration at which the system is at steady state, meaning $\\frac{dx}{dt} = 0$. The condition for a fixed point is:\n$$\nf(x^{\\ast}, s) = s + a\\,\\frac{(x^{\\ast})^{2}}{1 + (x^{\\ast})^{2}} - x^{\\ast} = 0\n$$\nA saddle-node bifurcation occurs at parameter values $(x_c, s_c)$ where two fixed points coalesce. This corresponds to the point where the function $f(x, s)$ is tangent to the $x$-axis. Mathematically, this requires that both the function and its first derivative with respect to the state variable $x$ are zero. The two conditions that must be simultaneously satisfied at the bifurcation point $(x_c, s_c)$ are:\n$$\n(1) \\quad f(x_c, s_c) = s_c + a\\,\\frac{x_c^2}{1 + x_c^2} - x_c = 0\n$$\n$$\n(2) \\quad \\left.\\frac{\\partial f(x,s)}{\\partial x}\\right|_{(x_c,s_c)} = 0\n$$\nFirst, we compute the derivative $\\frac{\\partial f}{\\partial x}$:\n$$\n\\frac{\\partial f}{\\partial x} = \\frac{d}{dx} \\left( s + a\\,\\frac{x^{2}}{1 + x^{2}} - x \\right) = a \\left( \\frac{2x(1+x^2) - x^2(2x)}{(1+x^2)^2} \\right) - 1 = a\\,\\frac{2x}{(1+x^2)^2} - 1\n$$\nApplying condition $(2)$ at the bifurcation point $x_c$:\n$$\na\\,\\frac{2x_c}{(1+x_c^2)^2} - 1 = 0 \\quad \\implies \\quad a = \\frac{(1+x_c^2)^2}{2x_c}\n$$\nThe problem specifies $a=2.5$. Substituting this value gives a polynomial equation for $x_c$:\n$$\n2.5 = \\frac{(1+x_c^2)^2}{2x_c} \\quad \\implies \\quad 5x_c = (1+x_c^2)^2 = 1 + 2x_c^2 + x_c^4\n$$\nRearranging this yields a quartic equation for the critical concentration $x_c$:\n$$\nx_c^4 + 2x_c^2 - 5x_c + 1 = 0\n$$\nNow, we find an expression for the critical parameter $s_c$ in terms of $x_c$. From condition $(1)$, we have $s_c = x_c - a\\,\\frac{x_c^2}{1 + x_c^2}$. We can substitute the expression for $a$ from the bifurcation condition:\n$$\ns_c = x_c - \\left( \\frac{(1+x_c^2)^2}{2x_c} \\right) \\frac{x_c^2}{1+x_c^2} = x_c - \\frac{x_c(1+x_c^2)}{2}\n$$\nSimplifying this expression, we obtain a direct relationship between $s_c$ and $x_c$:\n$$\ns_c = \\frac{2x_c - x_c - x_c^3}{2} = \\frac{x_c - x_c^3}{2}\n$$\nThe problem is now reduced to finding the positive real roots of the quartic equation $x_c^4 + 2x_c^2 - 5x_c + 1 = 0$, and then calculating the corresponding $s_c$ values. Let $h(x) = x^4 + 2x^2 - 5x + 1$. Analysis shows two positive real roots for $h(x)=0$: one root $x_{c1} \\in (0, 1)$ and another root $x_{c2} > 1$.\nFor the first root, $x_{c1} < 1$, the value of $s_c$ will be positive since $s_c = \\frac{x_{c1}(1-x_{c1}^2)}{2} > 0$.\nFor the second root, $x_{c2} > 1$, the value of $s_c$ will be negative since $s_c = \\frac{x_{c2}(1-x_{c2}^2)}{2} < 0$.\nThe problem asks for the smallest non-negative value $s_c$, as the input $s$ is physically constrained to be $s \\ge 0$. Thus, the negative value of $s_c$ is not physically relevant. We must find the positive value of $s_c$ which corresponds to the root $x_{c1}$.\n\nWe can use a numerical method such as Newton-Raphson to find $x_{c1}$. Let $x_0 = 0.2$ be an initial guess.\n$h(x) = x^4 + 2x^2 - 5x + 1$\n$h'(x) = 4x^3 + 4x - 5$\nIteration 1: $h(0.2) = 0.0816$, $h'(0.2) = -4.168$. $x_1 = 0.2 - \\frac{0.0816}{-4.168} \\approx 0.21958$.\nIteration 2: Using $x_1 = 0.2198$: $h(0.2198) \\approx -0.000049$, $h'(0.2198) \\approx -4.078$. $x_2 = 0.2198 - \\frac{-0.000049}{-4.078} \\approx 0.219788$.\nThis value is sufficiently accurate. Let $x_{c1} \\approx 0.21979$.\n\nNow, we compute the corresponding critical value $s_c$:\n$$\ns_c = \\frac{x_{c1} - x_{c1}^3}{2} = \\frac{0.21979 - (0.21979)^3}{2} = \\frac{0.21979 - 0.010620}{2} = \\frac{0.20917}{2} = 0.104585\n$$\nRounding the result to four significant figures as required gives $s_c = 0.1046$. This is the smallest non-negative value of $s$ at which a saddle-node bifurcation occurs. This bifurcation corresponds to the annihilation of the low-concentration stable fixed point and the intermediate unstable fixed point as $s$ is increased.", "answer": "$$\n\\boxed{0.1046}\n$$", "id": "2665261"}, {"introduction": "While deterministic models reveal the potential for switching, real biological decisions occur amidst inherent stochastic fluctuations. This practice advances to the realm of noisy dynamics by modeling the genetic toggle switch, a canonical circuit for cell fate determination in bipotent progenitors. You will apply the principles of stochastic processes to understand how intrinsic noise interacts with small, deterministic asymmetries in the network to govern the final commitment to one of two distinct lineages in a probabilistic, rather than predetermined, manner [@problem_id:2665202].", "problem": "A canonical developmental decision in a bipotent progenitor can be controlled by a genetic toggle switch in which two transcription factors, $A$ and $B$, mutually repress each other. Consider the deterministic mean-field dynamics\n$$\n\\frac{dA}{dt} = \\frac{\\alpha_A}{1 + \\left(\\frac{B}{K}\\right)^{n}} - \\beta A,\\qquad\n\\frac{dB}{dt} = \\frac{\\alpha_B}{1 + \\left(\\frac{A}{K}\\right)^{n}} - \\beta B,\n$$\nwith Hill coefficient $n \\ge 2$, dissociation constant $K>0$, and protein degradation rate $\\beta>0$. The maximal production rates are slightly asymmetric,\n$$\n\\alpha_A = \\alpha(1+\\delta),\\qquad \\alpha_B = \\alpha(1-\\delta),\n$$\nwith $0<|\\delta|\\ll 1$ and baseline $\\alpha>0$. In the symmetric limit $\\delta=0$, the system admits a symmetry point $A=B=A^{*}$ defined implicitly by\n$$\n\\frac{\\alpha}{1 + \\left(\\frac{A^{*}}{K}\\right)^{n}} = \\beta A^{*}.\n$$\nIntrinsic gene-expression noise arising from finite protein copy numbers can be modeled, along the unstable decision coordinate $x \\equiv \\frac{A-B}{2}$ in a neighborhood of the symmetry point, by a one-dimensional Stochastic Differential Equation (SDE)\n$$\ndx = \\varepsilon\\, dt + \\sqrt{2D}\\, dW_t,\n$$\nwhere $D>0$ is an effective diffusion coefficient capturing intrinsic fluctuations and $W_t$ is a standard Wiener process. The small asymmetry in production generates a constant drift bias $\\varepsilon$ along $x$ that scales linearly with $\\delta$ to leading order, $\\varepsilon = \\kappa\\, \\delta$, where $\\kappa>0$ depends on the projection of the deterministic vector field onto $x$ near $A^{*}$. The cell is considered committed to lineage $A$ when $x$ first reaches $+L$ and to lineage $B$ when $x$ first reaches $-L$, with $L>0$ the commitment threshold along $x$. Assume the progenitor starts undecided at $x(0)=0$.\n\nUsing only fundamental principles of stochastic processes applied to gene regulatory networks, derive a closed-form expression for the commitment probabilities to the two lineages, $p_A$ and $p_B$, as functions of $\\delta$, $D$, $L$, and $\\kappa$, valid to leading order in $|\\delta|$ but nonperturbative in $D$ and $L$. You may express your final result in terms of $\\kappa$ treated as a constant. If you choose to connect $\\kappa$ to the biochemical parameters of the toggle, you may use the leading-order relation $\\kappa=\\beta A^{*}$ that follows from linearization about $A^{*}$, where $A^{*}$ is defined above. Provide the two probabilities as a single analytic expression. No rounding is required, and no units should be reported for probabilities.", "solution": "The problem statement presents a valid and well-posed question grounded in the principles of theoretical systems biology and stochastic processes. It asks for the commitment probabilities of a bipotent progenitor cell whose fate is governed by a genetic toggle switch. The dynamics of the decision variable, $x \\equiv \\frac{A-B}{2}$, are approximated by a one-dimensional ItÃ´ stochastic differential equation (SDE) describing a biased Wiener process.\n\nThe SDE is given as:\n$$ dx = \\varepsilon\\, dt + \\sqrt{2D}\\, dW_t $$\nwhere $x(t)$ represents the state of the cell along the decision coordinate at time $t$. The progenitor cell starts at an undecided state $x(0) = 0$. The small, constant drift term $\\varepsilon = \\kappa \\delta$ represents the bias towards one lineage due to an asymmetry in production rates, with $|\\delta| \\ll 1$. The term $\\sqrt{2D}\\, dW_t$ models intrinsic noise, with $D > 0$ being the effective diffusion coefficient and $W_t$ a standard Wiener process.\n\nCommitment to lineage $A$ occurs when the process $x(t)$ first reaches the absorbing boundary at $x = +L$. Commitment to lineage $B$ occurs when it first reaches the absorbing boundary at $x = -L$. The problem is thus to find the probabilities of a particle starting at $x_0=0$ exiting the interval $[-L, L]$ through the boundary at $+L$ or $-L$. This is a classic first-passage problem.\n\nLet $p_A(x)$ be the probability that the process, starting at $x$, reaches $+L$ before reaching $-L$. This probability, known as the splitting probability or committor function, satisfies the stationary backward Kolmogorov equation. For a general time-homogeneous ItÃ´ process $dX_t = \\mu(X_t) dt + \\sigma(X_t) dW_t$, the committor function $p(x)$ for exit at the right boundary of an interval $[a, b]$ satisfies the second-order ordinary differential equation (ODE):\n$$ \\mu(x) \\frac{dp}{dx} + \\frac{1}{2}\\sigma(x)^2 \\frac{d^2p}{dx^2} = 0 $$\nThe boundary conditions are determined by the nature of the boundaries: starting at the target boundary guarantees success, so $p(b)=1$, while starting at the other boundary guarantees failure, so $p(a)=0$.\n\nFor the specific problem at hand, the drift is constant, $\\mu(x) = \\varepsilon$, and the diffusion term is also constant, $\\sigma(x) = \\sqrt{2D}$, which implies $\\sigma(x)^2 = 2D$. The interval is $[-L, L]$. Thus, the governing ODE for $p_A(x)$ is:\n$$ \\varepsilon \\frac{dp_A}{dx} + D \\frac{d^2p_A}{dx^2} = 0 $$\nwith boundary conditions $p_A(L) = 1$ and $p_A(-L) = 0$.\n\nThis is a linear, second-order, homogeneous ODE with constant coefficients. Its general solution is of the form:\n$$ p_A(x) = C_1 + C_2 \\exp\\left(-\\frac{\\varepsilon}{D}x\\right) $$\nwhere $C_1$ and $C_2$ are constants to be determined by the boundary conditions.\n\nApplying the boundary condition at $x=-L$:\n$$ p_A(-L) = 0 \\implies C_1 + C_2 \\exp\\left(-\\frac{\\varepsilon}{D}(-L)\\right) = C_1 + C_2 \\exp\\left(\\frac{\\varepsilon L}{D}\\right) = 0 $$\nApplying the boundary condition at $x=L$:\n$$ p_A(L) = 1 \\implies C_1 + C_2 \\exp\\left(-\\frac{\\varepsilon}{D}L\\right) = 1 $$\n\nWe have a system of two linear equations for $C_1$ and $C_2$. From the first equation, we find $C_1 = -C_2 \\exp\\left(\\frac{\\varepsilon L}{D}\\right)$. Substituting this into the second equation gives:\n$$ -C_2 \\exp\\left(\\frac{\\varepsilon L}{D}\\right) + C_2 \\exp\\left(-\\frac{\\varepsilon L}{D}\\right) = 1 $$\n$$ C_2 \\left(\\exp\\left(-\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(\\frac{\\varepsilon L}{D}\\right)\\right) = 1 $$\nThis yields:\n$$ C_2 = \\frac{1}{\\exp\\left(-\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(\\frac{\\varepsilon L}{D}\\right)} $$\nAnd for $C_1$:\n$$ C_1 = -\\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right)}{\\exp\\left(-\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(\\frac{\\varepsilon L}{D}\\right)} = \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} $$\nSubstituting these constants back into the general solution for $p_A(x)$:\n$$ p_A(x) = \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} + \\frac{\\exp\\left(-\\frac{\\varepsilon x}{D}\\right)}{\\exp\\left(-\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(\\frac{\\varepsilon L}{D}\\right)} $$\n$$ p_A(x) = \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon x}{D}\\right)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} $$\nThe problem states that the progenitor starts at $x(0)=0$. Therefore, the probability of commitment to lineage $A$, which we denote simply as $p_A$, is $p_A(0)$:\n$$ p_A = p_A(0) = \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp(0)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} = \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - 1}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} $$\nSince commitment is a binary choice between lineage $A$ and lineage $B$, the sum of their probabilities must be unity: $p_A + p_B = 1$. The probability of commitment to lineage $B$, $p_B$, is therefore:\n$$ p_B = 1 - p_A = 1 - \\frac{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - 1}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} = \\frac{\\left(\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)\\right) - \\left(\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - 1\\right)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} $$\n$$ p_B = \\frac{1 - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)}{\\exp\\left(\\frac{\\varepsilon L}{D}\\right) - \\exp\\left(-\\frac{\\varepsilon L}{D}\\right)} $$\nThe problem specifies that the drift $\\varepsilon$ arises from the asymmetry $\\delta$ to leading order as $\\varepsilon = \\kappa \\delta$. Substituting this into the expressions for $p_A$ and $p_B$ yields the final result as a function of the given parameters $\\delta$, $D$, $L$, and $\\kappa$. The problem states that the desired expression should be \"valid to leading order in $|\\delta|$ but nonperturbative in $D$ and $L$\". This implies we should use the SDE which is already a leading-order approximation in $\\delta$, but we should not perform a subsequent Taylor expansion of the resulting probabilities in the parameter group $\\frac{\\kappa \\delta L}{D}$, as this would implicitly assume $\\frac{\\kappa L}{D}$ is of order $1$, negating the nonperturbative requirement on $L$ and $D$. The expressions derived are exact solutions to the specified SDE model. The optional connection to biochemical parameters $\\kappa = \\beta A^*$ simply provides a microscopic interpretation of $\\kappa$ but does not alter the mathematical form of the probabilities.\n\nThe two probabilities are:\n$$ p_A = \\frac{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - 1}{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)} $$\n$$ p_B = \\frac{1 - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)}{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)} $$\nThese are the requested closed-form expressions for the commitment probabilities.", "answer": "$$ \\boxed{\n\\begin{pmatrix}\n\\frac{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - 1}{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)} & \\frac{1 - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)}{\\exp\\left(\\frac{\\kappa \\delta L}{D}\\right) - \\exp\\left(-\\frac{\\kappa \\delta L}{D}\\right)}\n\\end{pmatrix}\n} $$", "id": "2665202"}, {"introduction": "The ultimate goal of modeling is to interpret experimental data and infer underlying mechanisms. This final practice is a computational exercise that bridges the gap between the theory of transcriptional bursting and the practical analysis of modern single-cell genomics data. By simulating and analyzing synthetic single-cell datasets, you will learn how the statistical relationship between a gene's mean expression and its cell-to-cell variability (noise) can be used to distinguish between different regulatory strategies, such as modulating the frequency versus the size of transcriptional bursts [@problem_id:2665250].", "problem": "You are given a mechanistic and statistical framework for gene expression at the single-cell level based on the two-state (telegraph) model of transcriptional bursting, which is widely accepted in developmental biology and systems biology. In this model, a promoter alternates between an inactive state and an active state. When active, transcripts are produced at a constant rate and degrade with a first-order rate constant. Under a separation-of-time-scales regime consistent with bursty transcription, the steady-state distribution of messenger ribonucleic acid (mRNA) copy numbers per cell can be represented as a Poisson random variable whose rate parameter is itself Gamma-distributed (a Gamma-Poisson mixture), equivalently a Negative Binomial (NB) distribution. Denote the burst frequency by $f$ (bursts per mRNA lifetime), the mean burst size by $b$ (mRNAs produced per promoter activation), and the mRNA degradation rate by $\\gamma$. In this representation, the Gamma distribution has shape parameter $\\alpha = f/\\gamma$ and scale parameter $\\beta = b$, and the steady-state mean mRNA is $\\mu = \\alpha \\beta$. You may assume the Central Dogma of molecular biology and mass-action kinetics for transcription and degradation. You may also assume the Negative Binomial representation of the steady-state mRNA distribution under the bursty regime and the validity of the Gamma-Poisson mixture construction.\n\nYour task is to write a complete, runnable program that, for each of several synthetic experiments, uses single-cell data to fit a scaling exponent that relates the extra-Poisson noise term to the mean across experimental conditions, and then uses this exponent to test whether changes in the mean across conditions are predominantly driven by burst frequency or burst size modulation. The program must simulate single-cell mRNA counts using the Gamma-Poisson mixture with a fixed random seed, compute the per-condition sample mean and variance, estimate the scaling exponent by linear regression on logarithms, and classify the driver mechanism based on the exponent.\n\nFundamental base:\n- Central Dogma: deoxyribonucleic acid (DNA) is transcribed to mRNA, which is translated to protein; here we focus on mRNA.\n- Two-state promoter model (telegraph model) with burst frequency $f$, burst size $b$, and mRNA degradation rate $\\gamma$.\n- Under bursty conditions, the steady-state cell-to-cell mRNA counts follow a Negative Binomial distribution obtained as a Gamma-Poisson mixture with shape $\\alpha = f/\\gamma$ and scale $\\beta = b$; the mean is $\\mu = \\alpha \\beta$ and the variance is the sum of the Poisson variance and an extra-Poisson term.\n\nComputation to perform:\n1. For each test case, simulate single-cell counts for several conditions using a Gamma-Poisson mixture:\n   - For each condition $j$, draw $N$ independent and identically distributed Gamma random variables $\\lambda_{j,i} \\sim \\mathrm{Gamma}(\\text{shape}=\\alpha_j, \\text{scale}=\\beta_j)$ with $\\alpha_j = f_j/\\gamma$ and $\\beta_j = b_j$.\n   - Then, for each $\\lambda_{j,i}$, draw $X_{j,i} \\sim \\mathrm{Poisson}(\\lambda_{j,i})$ to obtain single-cell mRNA counts.\n2. For each condition, compute the sample mean $\\hat{\\mu}_j$ and sample variance $\\widehat{\\mathrm{Var}}_j$ (use the population variance with divisor $N$, not the unbiased estimator).\n3. Across conditions in a test case, estimate a scaling exponent $\\hat{\\beta}$ such that the extra-Poisson noise term $E_j = \\widehat{\\mathrm{Var}}_j - \\hat{\\mu}_j$ scales with $\\hat{\\mu}_j$ approximately as $E_j \\propto \\hat{\\mu}_j^{\\hat{\\beta}}$. Estimate $\\hat{\\beta}$ as the slope of the least-squares linear fit to the points $\\left(\\log \\hat{\\mu}_j, \\log E_j\\right)$ using the natural logarithm. Exclude any condition where $E_j \\le 0$ or $\\hat{\\mu}_j \\le 0$ from the fit; ensure at least $3$ points remain for a reliable fit.\n4. Classify the predominant driver of mean changes using the estimated exponent:\n   - Return integer $1$ if $|\\hat{\\beta} - 1| \\le 0.25$ (consistent with frequency modulation dominating).\n   - Return integer $2$ if $|\\hat{\\beta} - 2| \\le 0.25$ (consistent with size modulation dominating).\n   - Otherwise return integer $0$ (mixed or inconclusive).\n\nAngle units are not applicable. No physical units are required because counts are dimensionless.\n\nTest suite to implement within your program, using a fixed random seed of $12345$ for reproducibility. In all cases, use $N = 20000$ cells per condition and $\\gamma = 1$.\n- Case A (frequency-modulated): constant burst size $b = 3$, burst frequency vector $f \\in \\{0.5, 1.0, 2.0, 4.0\\}$.\n- Case B (size-modulated): constant burst frequency $f = 1.5$, burst size vector $b \\in \\{1, 2, 4, 8\\}$.\n- Case C (mixed): burst frequency vector $f \\in \\{0.5, 1.0, 2.0, 4.0\\}$, burst size vector $b \\in \\{1.0, 1.5, 2.3, 3.5\\}$.\n- Case D (Poisson-like boundary with very small bursts, frequency-modulated): constant burst size $b = 0.2$, burst frequency vector $f \\in \\{0.5, 1.0, 2.0, 4.0\\}$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of Cases A, B, C, D. Each element must be the integer classification for that case as specified above. For example, the output must look like \"[1,2,0,1]\" but with the actual computed integers for the four cases.", "solution": "The problem statement is subjected to validation and is found to be scientifically grounded, well-posed, objective, and internally consistent. It is based on the established two-state (telegraph) model of gene transcription, a fundamental concept in quantitative biology. The statistical representation of this model as a Gamma-Poisson mixture, which simplifies to a Negative Binomial distribution under the specified assumptions, is a standard and well-accepted result in the field. The provided parameters and computational tasks are clearly defined and directly test the theoretical predictions of the model. Therefore, a solution can be derived.\n\nThe problem requires the development of a computational procedure to classify the primary mechanism of gene expression modulationâ€”either burst frequency or burst sizeâ€”based on simulated single-cell mRNA count data. The classification relies on estimating a scaling exponent that relates the mean expression level to the magnitude of transcriptional noise.\n\n**Theoretical Framework**\n\nThe foundation of the model is the Gamma-Poisson mixture for steady-state mRNA counts, $X$. The number of mRNA molecules in a single cell is a Poisson-distributed random variable, $X \\sim \\mathrm{Poisson}(\\lambda)$, where the rate parameter $\\lambda$ is not constant across a cell population but is itself a random variable. In the bursty transcription regime, $\\lambda$ follows a Gamma distribution, $\\lambda \\sim \\mathrm{Gamma}(\\text{shape}=\\alpha, \\text{scale}=\\beta)$.\n\nThe parameters of the Gamma distribution are determined by the biophysical parameters of transcription:\n- The shape parameter $\\alpha$ is given by $\\alpha = f/\\gamma$, where $f$ is the burst frequency and $\\gamma$ is the mRNA degradation rate.\n- The scale parameter $\\beta$ is the mean burst size, $\\beta = b$.\n\nThe resulting marginal distribution of $X$ is a Negative Binomial distribution. The key statistical moments of this distribution are the mean $\\mu$ and the variance $\\mathrm{Var}(X)$.\nThe mean expression is the expectation of the Poisson rate over the Gamma distribution:\n$$ \\mu = \\mathbb{E}[X] = \\mathbb{E}[\\lambda] = \\alpha\\beta $$\nThe variance is derived using the law of total variance, $\\mathrm{Var}(X) = \\mathbb{E}[\\mathrm{Var}(X|\\lambda)] + \\mathrm{Var}(\\mathbb{E}[X|\\lambda])$. Since for a Poisson distribution the mean and variance are equal, $\\mathbb{E}[X|\\lambda] = \\mathrm{Var}(X|\\lambda) = \\lambda$.\n$$ \\mathrm{Var}(X) = \\mathbb{E}[\\lambda] + \\mathrm{Var}(\\lambda) $$\nThe mean and variance of the Gamma$(\\alpha, \\beta)$ distribution are $\\mathbb{E}[\\lambda] = \\alpha\\beta$ and $\\mathrm{Var}(\\lambda) = \\alpha\\beta^2$. Substituting these yields:\n$$ \\mathrm{Var}(X) = \\alpha\\beta + \\alpha\\beta^2 = \\mu + \\alpha\\beta^2 $$\nThe variance can be decomposed into a term equal to the mean (Poissonian noise) and an \"extra-Poissonian\" noise term, $E$, which captures the overdispersion due to transcriptional bursting:\n$$ E = \\mathrm{Var}(X) - \\mu = \\alpha\\beta^2 $$\n\n**Derivation of the Scaling Exponent**\n\nThe core of the classification task is to determine how the extra-Poissonian noise $E$ scales with the mean expression $\\mu$ under different regulatory scenarios. We assume a power-law relationship $E \\propto \\mu^{\\hat{\\beta}}$, where $\\hat{\\beta}$ is the scaling exponent to be estimated. Taking the natural logarithm gives a linear relationship: $\\log E = \\hat{\\beta} \\log \\mu + \\text{constant}$. The exponent $\\hat{\\beta}$ is the slope of this line.\n\nWe analyze the two pure regulatory strategies:\n\n1.  **Frequency Modulation:** The burst size $b$ is held constant, while the burst frequency $f$ is varied across conditions. With constant degradation rate $\\gamma$, this means the scale parameter $\\beta = b$ is constant, and the shape parameter $\\alpha = f/\\gamma$ varies.\n    - Mean: $\\mu = \\alpha\\beta$\n    - Extra-Poisson noise: $E = \\alpha\\beta^2$\n    We can express $E$ in terms of $\\mu$ by substituting $\\alpha = \\mu/\\beta$:\n    $$ E = \\left(\\frac{\\mu}{\\beta}\\right)\\beta^2 = \\mu\\beta $$\n    Since $\\beta$ is constant, $E$ is directly proportional to $\\mu$. The scaling relationship is $E \\propto \\mu^1$, and the theoretical exponent is $\\hat{\\beta} = 1$.\n\n2.  **Size Modulation:** The burst frequency $f$ is held constant, while the burst size $b$ is varied. This means the shape parameter $\\alpha = f/\\gamma$ is constant, while the scale parameter $\\beta = b$ varies.\n    - Mean: $\\mu = \\alpha\\beta$\n    - Extra-Poisson noise: $E = \\alpha\\beta^2$\n    We express $E$ in terms of $\\mu$ by substituting $\\beta = \\mu/\\alpha$:\n    $$ E = \\alpha\\left(\\frac{\\mu}{\\alpha}\\right)^2 = \\frac{\\mu^2}{\\alpha} $$\n    Since $\\alpha$ is constant, $E$ is proportional to the square of $\\mu$. The scaling relationship is $E \\propto \\mu^2$, and the theoretical exponent is $\\hat{\\beta} = 2$.\n\n**Computational Algorithm Design**\n\nThe program will implement the following steps for each test case, adhering to the provided parameters ($N=20000$ cells, $\\gamma=1$, and a random seed of $12345$ for reproducibility).\n\n1.  **Data Simulation:** For each experimental condition $j$ within a test case (defined by a pair of parameters $f_j$ and $b_j$):\n    - Calculate the Gamma distribution parameters: shape $\\alpha_j = f_j / \\gamma$ and scale $\\beta_j = b_j$.\n    - Generate $N$ random rate parameters $\\lambda_{j,i}$ by drawing from a Gamma distribution: $\\lambda_{j,i} \\sim \\mathrm{Gamma}(\\alpha_j, \\beta_j)$.\n    - For each $\\lambda_{j,i}$, generate a single-cell mRNA count $X_{j,i}$ by drawing from a Poisson distribution: $X_{j,i} \\sim \\mathrm{Poisson}(\\lambda_{j,i})$.\n\n2.  **Statistical Estimation:** For each condition $j$, compute the sample mean $\\hat{\\mu}_j$ and the sample population variance $\\widehat{\\mathrm{Var}}_j$ from the simulated counts $\\{X_{j,i}\\}_{i=1}^N$. The variance is computed with a divisor of $N$.\n\n3.  **Scaling Exponent Estimation:**\n    - For each condition $j$, calculate the estimated extra-Poisson noise $E_j = \\widehat{\\mathrm{Var}}_j - \\hat{\\mu}_j$.\n    - Create a set of data points $(\\log \\hat{\\mu}_j, \\log E_j)$. Any point where $\\hat{\\mu}_j \\le 0$ or $E_j \\le 0$ is excluded. The problem guarantees that at least $3$ valid points will remain for fitting.\n    - Perform a simple linear regression on these log-transformed points to find the slope, which is the estimated scaling exponent $\\hat{\\beta}$. This is achieved by finding the best-fit line for the model $\\log E = \\hat{\\beta} \\log \\mu + c$.\n\n4.  **Classification:** The regulatory mechanism is classified based on the value of the estimated exponent $\\hat{\\beta}$:\n    - If $|\\hat{\\beta} - 1| \\le 0.25$, classify as frequency-modulated (return $1$).\n    - If $|\\hat{\\beta} - 2| \\le 0.25$, classify as size-modulated (return $2$).\n    - Otherwise, the result is mixed or inconclusive (return $0$).\n\nThis procedure will be applied to the four test cases specified: Case A (frequency-modulated), Case B (size-modulated), Case C (mixed modulation), and Case D (a frequency-modulated case near the Poisson limit). The final output will be a list of the integer classifications for these four cases.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Simulates single-cell mRNA counts, fits a noise-mean scaling exponent,\n    and classifies the transcriptional regulatory strategy.\n    \"\"\"\n    # Define global parameters as specified in the problem statement.\n    SEED = 12345\n    N_CELLS = 20000\n    GAMMA = 1.0\n\n    # Define the test cases, each with a set of conditions.\n    # Each condition is defined by a burst frequency (f) and burst size (b).\n    # Using full arrays for f and b in each case for uniform processing.\n    test_cases = [\n        # Case A: Frequency-modulated, constant burst size b = 3.\n        # Expected exponent: 1\n        {'f_params': np.array([0.5, 1.0, 2.0, 4.0]),\n         'b_params': np.array([3.0, 3.0, 3.0, 3.0])},\n\n        # Case B: Size-modulated, constant burst frequency f = 1.5.\n        # Expected exponent: 2\n        {'f_params': np.array([1.5, 1.5, 1.5, 1.5]),\n         'b_params': np.array([1.0, 2.0, 4.0, 8.0])},\n\n        # Case C: Mixed modulation.\n        # Expected exponent: between 1 and 2, classification 0\n        {'f_params': np.array([0.5, 1.0, 2.0, 4.0]),\n         'b_params': np.array([1.0, 1.5, 2.3, 3.5])},\n\n        # Case D: Frequency-modulated, small constant burst size b = 0.2.\n        # Expected exponent: 1\n        {'f_params': np.array([0.5, 1.0, 2.0, 4.0]),\n         'b_params': np.array([0.2, 0.2, 0.2, 0.2])}\n    ]\n\n    results = []\n    # Initialize the random number generator for reproducibility.\n    rng = np.random.default_rng(SEED)\n\n    for case in test_cases:\n        means = []\n        variances = []\n\n        # Iterate through each condition within the test case.\n        for f, b in zip(case['f_params'], case['b_params']):\n            # Calculate Gamma distribution parameters from biophysical parameters.\n            # Shape alpha = f / gamma\n            # Scale beta = b\n            alpha = f / GAMMA\n            beta_param = b\n\n            # Simulate single-cell data using the Gamma-Poisson mixture model.\n            # 1. Draw transcription rates from a Gamma distribution.\n            rates = rng.gamma(shape=alpha, scale=beta_param, size=N_CELLS)\n            # 2. Draw mRNA counts from a Poisson distribution for each rate.\n            counts = rng.poisson(lam=rates)\n\n            # Compute sample mean and population variance for the condition.\n            # np.var by default uses ddof=0, which is the population variance.\n            mu_hat = np.mean(counts)\n            var_hat = np.var(counts)\n            \n            means.append(mu_hat)\n            variances.append(var_hat)\n\n        # Prepare data for linear regression on log-transformed values.\n        log_means = []\n        log_noises = []\n        \n        for mu, var in zip(means, variances):\n            extra_noise = var - mu\n            # Filter out conditions where log is not defined or data is unreliable.\n            if mu > 0 and extra_noise > 0:\n                log_means.append(np.log(mu))\n                log_noises.append(np.log(extra_noise))\n        \n        # Check if enough data points remain for a reliable fit.\n        if len(log_means)  3:\n            # If not, classify as inconclusive.\n            classification = 0\n        else:\n            # Perform linear regression to find the scaling exponent.\n            # The model is: log(noise) = beta_hat * log(mean) + intercept.\n            # np.polyfit(x, y, 1) returns [slope, intercept].\n            slope, _ = np.polyfit(log_means, log_noises, 1)\n            beta_hat = slope\n            \n            # Classify the regulatory mechanism based on the estimated exponent.\n            if abs(beta_hat - 1.0) = 0.25:\n                classification = 1  # Frequency modulation\n            elif abs(beta_hat - 2.0) = 0.25:\n                classification = 2  # Size modulation\n            else:\n                classification = 0  # Mixed or inconclusive\n        \n        results.append(classification)\n\n    # Format and print the final output as a single comma-separated list.\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2665250"}]}