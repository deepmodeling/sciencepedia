{"hands_on_practices": [{"introduction": "Before an antibiotic can exert its effect, it must first cross the bacterial cell envelope and accumulate to a sufficient concentration inside the cell. This first practice explores this fundamental process by building a simple kinetic model. By applying the principle of mass conservation, you will derive the steady-state intracellular concentration of a drug governed by first-order influx and efflux rates, a common scenario in pharmacokinetics [@problem_id:2505021]. This exercise is crucial for understanding how the physical properties of a drug and the physiology of the bacterium (e.g., the activity of efflux pumps) collectively determine the drug concentration available to engage its target.", "problem": "A bacterium is exposed to a constant extracellular concentration of a ribosome-targeting antibiotic that binds the bacterial $30\\mathrm{S}$ ribosomal subunit to inhibit translation. Assume the following mechanistic features rooted in conservation of mass and elementary kinetic descriptions for transport across the cell envelope: (i) the cytosol is well-mixed and cell volume is constant, (ii) antibiotic influx across the envelope is first-order with respect to the extracellular concentration with rate constant $k_{\\mathrm{in}}$ (units of $\\mathrm{time}^{-1}$), (iii) antibiotic efflux is first-order with respect to the intracellular free concentration with rate constant $k_{\\mathrm{out}}$ (units of $\\mathrm{time}^{-1}$), (iv) extracellular concentration $C_{\\mathrm{out}}$ is constant, and (v) intracellular binding to the target is negligible relative to the free antibiotic pool on the timescale of transport so that the intracellular concentration $C_{\\mathrm{in}}$ refers to the free concentration.\n\nUsing only conservation of mass for the intracellular antibiotic amount and the stated first-order transport assumptions, derive an expression for the steady-state intracellular concentration $C_{\\mathrm{in}}$ in terms of $k_{\\mathrm{in}}$, $k_{\\mathrm{out}}$, and $C_{\\mathrm{out}}$. Then, evaluate $C_{\\mathrm{in}}$ for $k_{\\mathrm{in}} = 0.120\\,\\mathrm{min}^{-1}$, $k_{\\mathrm{out}} = 0.0300\\,\\mathrm{min}^{-1}$, and $C_{\\mathrm{out}} = 7.50\\,\\mu\\mathrm{M}$.\n\nExpress the final concentration in $\\mu\\mathrm{M}$ and round your answer to three significant figures.", "solution": "The problem statement is first subjected to critical validation.\n\nThe givens are extracted verbatim:\n- System: A bacterium exposed to a ribosome-targeting antibiotic.\n- Assumption (i): The cytosol is well-mixed and cell volume is constant.\n- Assumption (ii): Antibiotic influx across the envelope is first-order with respect to the extracellular concentration with rate constant $k_{\\mathrm{in}}$ (units of $\\mathrm{time}^{-1}$).\n- Assumption (iii): Antibiotic efflux is first-order with respect to the intracellular free concentration with rate constant $k_{\\mathrm{out}}$ (units of $\\mathrm{time}^{-1}$).\n- Assumption (iv): Extracellular concentration $C_{\\mathrm{out}}$ is constant.\n- Assumption (v): Intracellular binding to the target is negligible relative to the free antibiotic pool, and $C_{\\mathrm{in}}$ refers to the free concentration.\n- Task 1: Derive an expression for the steady-state intracellular concentration $C_{\\mathrm{in}}$ in terms of $k_{\\mathrm{in}}$, $k_{\\mathrm{out}}$, and $C_{\\mathrm{out}}$.\n- Task 2: Evaluate $C_{\\mathrm{in}}$ for $k_{\\mathrm{in}} = 0.120\\,\\mathrm{min}^{-1}$, $k_{\\mathrm{out}} = 0.0300\\,\\mathrm{min}^{-1}$, and $C_{\\mathrm{out}} = 7.50\\,\\mu\\mathrm{M}$.\n- Task 3: Express the final concentration in $\\mu\\mathrm{M}$ and round to three significant figures.\n\nValidation indicates the problem is scientifically grounded, well-posed, and objective. The assumptions form a standard, simplified kinetic model for substance transport across a cell membrane, commonly represented by ordinary differential equations. The phrasing \"influx... is first-order with respect to the extracellular concentration with rate constant $k_{\\mathrm{in}}$ (units of $\\mathrm{time}^{-1}$)\" implies that the rate of change of *concentration* due to influx is given by the product $k_{\\mathrm{in}} C_{\\mathrm{out}}$. This interpretation creates a dimensionally consistent model, where the rate of change of concentration ($\\mathrm{concentration} \\cdot \\mathrm{time}^{-1}$) is equated to terms with the same units ($k_{\\mathrm{in}} C_{\\mathrm{out}}$ has units of $\\mathrm{time}^{-1} \\cdot \\mathrm{concentration}$). All necessary information is provided, and there are no contradictions. The problem is valid and can be solved.\n\nThe solution proceeds from the principle of conservation of mass applied to the intracellular antibiotic concentration, denoted by $C_{\\mathrm{in}}(t)$. The rate of change of this concentration, $\\frac{dC_{\\mathrm{in}}}{dt}$, is the net result of the influx and efflux rates.\n\nAccording to assumption (ii), the rate of influx, which increases $C_{\\mathrm{in}}$, is first-order with respect to the constant extracellular concentration $C_{\\mathrm{out}}$. The contribution to the rate of change is thus $+k_{\\mathrm{in}} C_{\\mathrm{out}}$.\n\nAccording to assumption (iii), the rate of efflux, which decreases $C_{\\mathrm{in}}$, is first-order with respect to the intracellular concentration $C_{\\mathrm{in}}$. The contribution to the rate of change is thus $-k_{\\mathrm{out}} C_{\\mathrm{in}}$.\n\nCombining these terms yields the governing ordinary differential equation for the intracellular antibiotic concentration:\n$$\n\\frac{dC_{\\mathrm{in}}}{dt} = k_{\\mathrm{in}} C_{\\mathrm{out}} - k_{\\mathrm{out}} C_{\\mathrm{in}}\n$$\n\nThe problem requires the steady-state concentration. At steady state, the system variables no longer change with time. Therefore, the time derivative of the concentration must be zero. Let $C_{\\mathrm{in,ss}}$ denote the steady-state intracellular concentration. Setting the derivative to zero provides the condition for steady state:\n$$\n\\frac{dC_{\\mathrm{in}}}{dt} = 0\n$$\nSubstituting this into the differential equation gives:\n$$\n0 = k_{\\mathrm{in}} C_{\\mathrm{out}} - k_{\\mathrm{out}} C_{\\mathrm{in,ss}}\n$$\nThis is an algebraic equation for $C_{\\mathrm{in,ss}}$. To find the expression requested, we solve for $C_{\\mathrm{in,ss}}$:\n$$\nk_{\\mathrm{out}} C_{\\mathrm{in,ss}} = k_{\\mathrm{in}} C_{\\mathrm{out}}\n$$\n$$\nC_{\\mathrm{in,ss}} = \\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} C_{\\mathrm{out}}\n$$\nThis is the analytical expression for the steady-state intracellular antibiotic concentration. It shows that the steady-state accumulation is determined by the ratio of the influx to efflux rate constants, scaled by the external concentration.\n\nNext, we evaluate this expression using the provided numerical values:\n$k_{\\mathrm{in}} = 0.120\\,\\mathrm{min}^{-1}$\n$k_{\\mathrm{out}} = 0.0300\\,\\mathrm{min}^{-1}$\n$C_{\\mathrm{out}} = 7.50\\,\\mu\\mathrm{M}$\n\nSubstituting these values into the derived expression:\n$$\nC_{\\mathrm{in,ss}} = \\frac{0.120\\,\\mathrm{min}^{-1}}{0.0300\\,\\mathrm{min}^{-1}} \\times 7.50\\,\\mu\\mathrm{M}\n$$\nThe ratio of the rate constants is a dimensionless quantity:\n$$\n\\frac{k_{\\mathrm{in}}}{k_{\\mathrm{out}}} = \\frac{0.120}{0.0300} = 4.00\n$$\nThe calculation maintains three significant figures, as both input values have three.\nNow, we calculate the final concentration:\n$$\nC_{\\mathrm{in,ss}} = 4.00 \\times 7.50\\,\\mu\\mathrm{M} = 30.0\\,\\mu\\mathrm{M}\n$$\nThe product of two numbers with three significant figures ($4.00$ and $7.50$) results in an answer that should also be reported to three significant figures. The calculated value is $30.0$.\nThe final numerical answer, expressed in $\\mu\\mathrm{M}$ and rounded to three significant figures, is $30.0$.", "answer": "$$\n\\boxed{30.0}\n$$", "id": "2505021"}, {"introduction": "Once an antibiotic has accumulated within the bacterium, the next critical question is how effectively it inactivates its molecular target. This practice zooms in on the interaction between a $\\beta$-lactam antibiotic and its target, a penicillin-binding protein (PBP), using a classic steady-state kinetic model [@problem_id:2504971]. By analyzing the rates of enzyme acylation (inactivation) and deacylation (spontaneous reactivation), you will determine the fraction of the target that is inhibited at a given antibiotic concentration. This hands-on calculation provides direct insight into the dose-response relationship at the molecular level, a cornerstone of pharmacology and antibiotic development.", "problem": "A clinically relevant mechanism for the action of $\\beta$-lactam antibiotics is covalent acylation of the active-site serine of penicillin-binding proteins (PBP), which inhibits peptidoglycan cross-linking. Consider a simplified two-state kinetic scheme for a single PBP species in which the active site toggles between a free form $E$ and an acylated (inhibited) form $E^{\\ast}$. The antibiotic $A$ is in large excess so that its concentration remains effectively constant over the time course of interest. The kinetic steps are: acylation $E + A \\xrightarrow{k_{2}} E^{\\ast}$ (a second-order reaction) and deacylation $E^{\\ast} \\xrightarrow{k_{3}} E$ (first order in $E^{\\ast}$). Let $E_{\\text{tot}}$ denote the conserved total concentration of PBP active sites, $E_{\\text{tot}} = [E] + [E^{\\ast}]$.\n\nStarting from mass-action kinetics and the steady-state condition for $[E^{\\ast}]$, derive an expression for the steady-state fraction of acylated active sites $f = [E^{\\ast}]/E_{\\text{tot}}$ in terms of $k_{2}$, $k_{3}$, and $[A]$. Then, using your expression, compute $f$ for $k_{2}/k_{3} = 5.0 \\times 10^{7}\\ \\text{M}^{-1}$ and antibiotic concentration $[A] = 0.20\\ \\mu\\text{M}$.\n\nRound your final numerical answer to four significant figures. Express the final fraction as a unitless decimal number.", "solution": "We begin from the law of mass action for the specified scheme. The acylated state $E^{\\ast}$ is produced at rate $k_{2}[A][E]$ and lost at rate $k_{3}[E^{\\ast}]$. The time evolution of $[E^{\\ast}]$ is therefore\n$$\n\\frac{d[E^{\\ast}]}{dt} = k_{2}[A][E] - k_{3}[E^{\\ast}].\n$$\nBecause the total PBP concentration is conserved, we have $E_{\\text{tot}} = [E] + [E^{\\ast}]$, so $[E] = E_{\\text{tot}} - [E^{\\ast}]$.\n\nAt steady state, the acylated pool does not change in time, so $\\frac{d[E^{\\ast}]}{dt} = 0$, which yields\n$$\n0 = k_{2}[A](E_{\\text{tot}} - [E^{\\ast}]) - k_{3}[E^{\\ast}].\n$$\nRearranging terms,\n$$\nk_{2}[A]E_{\\text{tot}} = (k_{2}[A] + k_{3})[E^{\\ast}],\n$$\nand thus\n$$\n[E^{\\ast}] = \\frac{k_{2}[A]}{k_{2}[A] + k_{3}}\\,E_{\\text{tot}}.\n$$\nThe steady-state fraction of acylated sites is then\n$$\nf \\equiv \\frac{[E^{\\ast}]}{E_{\\text{tot}}} = \\frac{k_{2}[A]}{k_{2}[A] + k_{3}}.\n$$\nIt is convenient to express this in terms of the ratio $k_{2}/k_{3}$. Define the dimensionless parameter\n$$\n\\phi \\equiv \\left(\\frac{k_{2}}{k_{3}}\\right)[A],\n$$\nso that\n$$\nf = \\frac{\\phi}{1 + \\phi}.\n$$\n\nNow substitute the given values. First, convert the antibiotic concentration to molar units. The given concentration is $[A] = 0.20\\ \\mu\\text{M} = 0.20 \\times 10^{-6}\\ \\text{M} = 2.0 \\times 10^{-7}\\ \\text{M}$. With $k_{2}/k_{3} = 5.0 \\times 10^{7}\\ \\text{M}^{-1}$,\n$$\n\\phi = \\left(5.0 \\times 10^{7}\\ \\text{M}^{-1}\\right)\\left(2.0 \\times 10^{-7}\\ \\text{M}\\right) = 10.\n$$\nTherefore,\n$$\nf = \\frac{10}{1 + 10} = \\frac{10}{11} \\approx 0.909090\\ldots\n$$\nRounding to four significant figures gives $0.9091$ as a unitless decimal fraction.", "answer": "$$\\boxed{0.9091}$$", "id": "2504971"}, {"introduction": "Building on the principles of transport and target binding, this advanced practice integrates these concepts into a more realistic, spatially resolved computational model. Here, you will simulate the journey of a polymyxin antibiotic across the Gram-negative outer membrane, a formidable barrier rich in lipopolysaccharide (LPS) binding sites [@problem_id:2504924]. Using a reaction-diffusion framework, you will explore how the density of these binding sites can act as a \"sink,\" trapping the drug and delaying its arrival at the inner membrane. This exercise introduces the power of computational modeling in biophysics to dissect complex transport problems and predict how factors like membrane composition influence antibiotic efficacy.", "problem": "You are asked to construct and simulate a minimal one-dimensional reaction-diffusion model for polymyxin penetration across the Gram-negative outer membrane with reversible binding to lipopolysaccharide (LPS). Start from the following foundational principles: Fick’s first and second laws of diffusion, and the law of mass action for reversible binding. The goal is to quantify how the density of LPS binding sites modulates the time required for polymyxin to achieve a specified entry flux at the inner boundary of the outer membrane.\n\nModel assumptions and definitions:\n- Let the outer membrane be modeled as a planar slab of thickness $L$, with spatial coordinate $x\\in[0,L]$, where $x=0$ is the extracellular face and $x=L$ is the periplasm-facing inner boundary of the outer membrane.\n- Let $C(x,t)$ denote the mobile polymyxin concentration (in $\\mathrm{mol}\\,\\mathrm{m}^{-3}$), and $B(x,t)$ the immobile, reversibly bound polymyxin concentration (in $\\mathrm{mol}\\,\\mathrm{m}^{-3}$). The total LPS binding site density is $S_{\\mathrm{tot}}$ (in $\\mathrm{mol}\\,\\mathrm{m}^{-3}$), so the free site concentration is $S_{\\mathrm{free}}(x,t)=S_{\\mathrm{tot}}-B(x,t)$.\n- Fick’s second law gives $\\partial C/\\partial t = D\\,\\partial^2 C/\\partial x^2 + R(C,B)$ with diffusion coefficient $D$ (in $\\mathrm{m}^2\\,\\mathrm{s}^{-1}$). Reaction kinetics follow the law of mass action with on-rate $k_{\\mathrm{on}}$ (in $\\mathrm{m}^3\\,\\mathrm{mol}^{-1}\\,\\mathrm{s}^{-1}$) and off-rate $k_{\\mathrm{off}}$ (in $\\mathrm{s}^{-1}$), so $R(C,B)=-k_{\\mathrm{on}}\\,C\\,(S_{\\mathrm{tot}}-B)+k_{\\mathrm{off}}\\,B$. The bound species does not diffuse: $\\partial B/\\partial t = k_{\\mathrm{on}}\\,C\\,(S_{\\mathrm{tot}}-B)-k_{\\mathrm{off}}\\,B$.\n- Boundary and initial conditions: clamp $C(0,t)=C_0$ to a constant bathing concentration and impose an absorbing inner boundary $C(L,t)=0$ to represent rapid removal into the periplasm and inner membrane. Initially, $C(x,0)=0$ and $B(x,0)=0$ for all $x\\in(0,L)$.\n- The instantaneous diffusive flux at the inner boundary is given by Fick’s first law $J(L,t)=-D\\,\\partial C/\\partial x\\,\\big|_{x=L}$, which is positive when directed into the cell envelope. In the no-binding limit ($S_{\\mathrm{tot}}=0$), the steady-state flux across the slab is $J_{\\mathrm{ss,0}}=D\\,C_0/L$.\n\nDefine the inner-membrane access time $T_{\\mathrm{access}}$ as the earliest time $t$ such that $J(L,t)\\ge f\\,J_{\\mathrm{ss,0}}$, where $f$ is a prescribed fraction. Use $f=\\tfrac{1}{2}$.\n\nParameter values to use:\n- Thickness $L=8\\times 10^{-9}\\ \\mathrm{m}$.\n- Diffusion coefficient $D=1\\times 10^{-12}\\ \\mathrm{m}^2\\,\\mathrm{s}^{-1}$.\n- Bathing concentration $C_0=1.0\\times 10^{-2}\\ \\mathrm{mol}\\,\\mathrm{m}^{-3}$.\n- On-rate $k_{\\mathrm{on}}=1.0\\times 10^{3}\\ \\mathrm{m}^{3}\\,\\mathrm{mol}^{-1}\\,\\mathrm{s}^{-1}$.\n- Off-rate $k_{\\mathrm{off}}=1.0\\ \\mathrm{s}^{-1}$.\n\nTest suite:\n- Evaluate $T_{\\mathrm{access}}$ for the following total LPS site densities (units $\\mathrm{mol}\\,\\mathrm{m}^{-3}$): $S_{\\mathrm{tot}}\\in\\{0,\\ 1,\\ 5,\\ 20\\}$.\n\nTask:\n- Discretize the spatial domain $[0,L]$ into a uniform grid and implement a method-of-lines solver for the coupled reaction-diffusion system, honoring the boundary conditions $C(0,t)=C_0$ and $C(L,t)=0$. Detect the first time the flux criterion $J(L,t)\\ge f\\,J_{\\mathrm{ss,0}}$ is satisfied for each $S_{\\mathrm{tot}}$.\n- Express each $T_{\\mathrm{access}}$ in seconds, rounded to six decimal places.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the order of the test suite values for $S_{\\mathrm{tot}}$ given above, for example, $\\left[\\text{result}_1,\\text{result}_2,\\text{result}_3,\\text{result}_4\\right]$, where each $\\text{result}_i$ is a float in seconds rounded to six decimal places.", "solution": "The problem statement is validated and found to be a well-posed problem in biophysical transport phenomena, grounded in established physical laws. It is self-contained, scientifically sound, and objective. A numerical solution is therefore warranted. The solution proceeds by applying the method of lines to the system of coupled partial differential equations (PDEs).\n\nThe governing equations for the mobile polymyxin concentration, $C(x,t)$, and the immobile bound concentration, $B(x,t)$, within the outer membrane of thickness $L$ are given as:\n$$ \\frac{\\partial C}{\\partial t} = D \\frac{\\partial^2 C}{\\partial x^2} - k_{\\mathrm{on}} C (S_{\\mathrm{tot}} - B) + k_{\\mathrm{off}} B $$\n$$ \\frac{\\partial B}{\\partial t} = k_{\\mathrm{on}} C (S_{\\mathrm{tot}} - B) - k_{\\mathrm{off}} B $$\nwhere $D$ is the diffusion coefficient, $k_{\\mathrm{on}}$ and $k_{\\mathrm{off}}$ are the kinetic rate constants for binding, and $S_{\\mathrm{tot}}$ is the total density of lipopolysaccharide (LPS) binding sites.\n\nThe boundary conditions are $C(0,t) = C_0$ and $C(L,t) = 0$. The initial conditions are $C(x,0) = 0$ for $x > 0$ and $B(x,0) = 0$ for all $x \\in [0,L]$.\n\nTo solve this system numerically, the method of lines is employed. The spatial domain $x \\in [0, L]$ is discretized into a uniform grid of $N+1$ points, $x_i = i \\Delta x$ for $i = 0, \\ldots, N$, where $\\Delta x = L/N$. The continuous functions $C(x,t)$ and $B(x,t)$ are approximated by time-dependent vectors $\\mathbf{C}(t) = [C_0(t), C_1(t), \\ldots, C_N(t)]^T$ and $\\mathbf{B}(t) = [B_0(t), B_1(t), \\ldots, B_N(t)]^T$, where $C_i(t) \\approx C(x_i,t)$ and $B_i(t) \\approx B(x_i,t)$.\n\nThe second spatial derivative in the PDE for $C$ is approximated using a second-order central difference formula for the interior grid points $i=1, \\ldots, N-1$:\n$$ \\frac{\\partial^2 C}{\\partial x^2}\\bigg|_{x_i} \\approx \\frac{C_{i-1}(t) - 2C_i(t) + C_{i+1}(t)}{(\\Delta x)^2} $$\n\nThis discretization transforms the system of PDEs into a large system of coupled ordinary differential equations (ODEs). The state of the system at any time $t$ is described by a state vector $\\mathbf{y}(t)$ containing the values of $C_i(t)$ at the interior points (since $C_0$ and $C_N$ are fixed by the boundary conditions) and the values of $B_i(t)$ at all points. We define the state vector as:\n$$ \\mathbf{y}(t) = [C_1(t), \\ldots, C_{N-1}(t), B_0(t), \\ldots, B_N(t)]^T $$\nThe size of this vector is $(N-1) + (N+1) = 2N$.\n\nThe system of ODEs, $\\frac{d\\mathbf{y}}{dt} = \\mathbf{f}(t, \\mathbf{y})$, is given by:\nFor the mobile concentration $C_i(t)$ at interior points $i = 1, \\ldots, N-1$:\n$$ \\frac{dC_i}{dt} = D \\frac{C_{i-1}(t) - 2C_i(t) + C_{i+1}(t)}{(\\Delta x)^2} - k_{\\mathrm{on}} C_i(t) (S_{\\mathrm{tot}} - B_i(t)) + k_{\\mathrm{off}} B_i(t) $$\nHere, $C_0(t)$ is replaced by the constant boundary value $C_0$, and $C_N(t)$ is replaced by $0$.\n\nFor the bound concentration $B_i(t)$ at all points $i = 0, \\ldots, N$:\n$$ \\frac{dB_i}{dt} = k_{\\mathrm{on}} C_i(t) (S_{\\mathrm{tot}} - B_i(t)) - k_{\\mathrm{off}} B_i(t) $$\nNote that for $B_0(t)$, the value $C_0(t) = C_0$ is used, and for $B_N(t)$, the value $C_N(t) = 0$ is used.\n\nThe initial condition vector $\\mathbf{y}(0)$ is a zero vector of size $2N$, corresponding to $C_i(0)=0$ and $B_i(0)=0$ for the respective indices. This ODE initial value problem is solved using a numerical integrator suitable for stiff systems, such as the Radau method.\n\nThe objective is to find the access time, $T_{\\mathrm{access}}$, defined as the earliest time $t$ at which the flux at the inner boundary, $J(L,t)$, reaches a fraction $f=1/2$ of the theoretical steady-state flux in the absence of binding, $J_{\\mathrm{ss,0}} = D C_0 / L$.\nThe flux is given by Fick's first law, $J(L,t) = -D \\frac{\\partial C}{\\partial x}\\big|_{x=L}$. The spatial derivative at the boundary $x_N=L$ is approximated using a second-order backward difference formula for higher accuracy:\n$$ \\frac{\\partial C}{\\partial x}\\bigg|_{x=L} \\approx \\frac{3C_N(t) - 4C_{N-1}(t) + C_{N-2}(t)}{2 \\Delta x} $$\nSince the boundary condition dictates $C_N(t)=0$, this simplifies to:\n$$ J(L,t) \\approx -D \\frac{-4C_{N-1}(t) + C_{N-2}(t)}{2 \\Delta x} = D \\frac{4C_{N-1}(t) - C_{N-2}(t)}{2 \\Delta x} $$\nThe target condition is thus $J(L,t) \\ge \\frac{1}{2}\\frac{D C_0}{L}$. This condition is implemented as an event function within the ODE solver, which stops the integration and reports the time $T_{\\mathrm{access}}$ when the condition is first met.\n\nThe procedure is repeated for each value of $S_{\\mathrm{tot}}$ specified in the test suite: $\\{0, 1, 5, 20\\}\\ \\mathrm{mol}\\,\\mathrm{m}^{-3}$. The binding of polymyxin to LPS acts as a sink, trapping the molecule and impeding its diffusion. Consequently, $T_{\\mathrm{access}}$ is expected to increase with increasing $S_{\\mathrm{tot}}$. The case $S_{\\mathrm{tot}}=0$ corresponds to pure diffusion and serves as a baseline.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves a reaction-diffusion model for polymyxin penetration across the\n    Gram-negative outer membrane.\n    \"\"\"\n    # Define physical and model parameters in SI units.\n    L = 8.0e-9    # Thickness of the outer membrane (m)\n    D = 1.0e-12   # Diffusion coefficient of polymyxin (m^2/s)\n    C0 = 1.0e-2   # Bathing concentration of polymyxin (mol/m^3)\n    k_on = 1.0e3  # Binding on-rate constant (m^3/mol/s)\n    k_off = 1.0   # Binding off-rate constant (1/s)\n    f = 0.5       # Target flux fraction\n\n    # Define the test suite for total LPS site density (mol/m^3).\n    test_cases = [0.0, 1.0, 5.0, 20.0]\n\n    # Discretization parameters.\n    N = 100       # Number of spatial grid segments.\n    dx = L / N    # Spatial step size (m).\n\n    # Calculate the target flux.\n    J_ss0 = D * C0 / L\n    J_target = f * J_ss0\n\n    results = []\n\n    # Iterate through each test case for S_tot.\n    for S_tot in test_cases:\n        # Define the system of ODEs for the method of lines.\n        # The state vector y is [C_1, ..., C_{N-1}, B_0, ..., B_N].\n        def odefunc(t, y):\n            # Unpack the state vector y.\n            C_interior = y[:N - 1]\n            B_all = y[N - 1:]\n\n            # Reconstruct the full concentration vector C with boundary conditions.\n            C_all = np.zeros(N + 1)\n            C_all[0] = C0\n            C_all[1:N] = C_interior\n            # C_all[N] is 0 by default.\n\n            # Initialize the derivative vector dy/dt.\n            dydt = np.zeros_like(y)\n            dC_interior = dydt[:N - 1]\n            dB_all = dydt[N - 1:]\n\n            # Calculate the derivatives for the bound concentration B.\n            # dB/dt = k_on * C * (S_tot - B) - k_off * B\n            dB_all[:] = k_on * C_all * (S_tot - B_all) - k_off * B_all\n\n            # Calculate the derivatives for the mobile concentration C at interior points.\n            # dC/dt = D * d^2C/dx^2 + R(C,B)\n            # where R = -dB/dt.\n            \n            # Laplacian term using central differences.\n            laplacian_C = (C_all[0:N - 1] - 2 * C_all[1:N] + C_all[2:N + 1]) / dx**2\n            diffusion_term = D * laplacian_C\n\n            # Reaction term for interior points (i=1 to N-1).\n            reaction_term_C = -dB_all[1:N]\n\n            dC_interior[:] = diffusion_term + reaction_term_C\n\n            return dydt\n\n        # Define the event function to detect when the flux reaches the target.\n        def flux_event(t, y):\n            # J(L,t) - J_target = 0\n            # Use a second-order backward difference for the flux calculation.\n            # J = -D * (3*C_N - 4*C_{N-1} + C_{N-2}) / (2*dx)\n            # C_N = 0, so J = D * (4*C_{N-1} - C_{N-2}) / (2*dx)\n            # State vector y contains C_1, ..., C_{N-1}.\n            # C_{N-1} is y[N-2], C_{N-2} is y[N-3].\n            C_N_minus_1 = y[N - 2]\n            C_N_minus_2 = y[N - 3]\n            \n            J_L = D * (4 * C_N_minus_1 - C_N_minus_2) / (2 * dx)\n            \n            return J_L - J_target\n\n        flux_event.terminal = True  # Stop integration when the event occurs.\n        flux_event.direction = 1    # Trigger on zero-crossing from negative to positive.\n\n        # Set initial conditions (all concentrations are initially zero).\n        # Size is (N-1) for C_interior + (N+1) for B_all = 2N.\n        y0 = np.zeros(2 * N)\n\n        # Set a sufficiently long integration time span.\n        # Based on characteristic times, times can extend to seconds for high S_tot.\n        t_span = (0, 10.0)\n\n        # Solve the initial value problem. Use a stiff solver like 'Radau'.\n        sol = solve_ivp(\n            odefunc,\n            t_span,\n            y0,\n            method='Radau',\n            events=flux_event,\n            dense_output=True\n        )\n\n        # Extract the access time from the solver results.\n        if sol.status == 1 and len(sol.t_events[0]) > 0:\n            T_access = sol.t_events[0][0]\n            results.append(T_access)\n        else:\n            # Append NaN if the event was not found in the time span.\n            results.append(np.nan)\n\n    # Format results to six decimal places and print in the specified format.\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2504924"}]}