{"hands_on_practices": [{"introduction": "The journey of a virus into a host cell begins with a critical molecular handshake: the binding of a viral protein to a specific receptor on the cell surface. This exercise [@problem_id:2489082] challenges you to build a quantitative model of this crucial first step from the ground up. By applying the law of mass action, you will derive the exact equilibrium relationship between viral spikes and host receptors, providing a foundational tool for understanding viral tropism and attachment efficiency.", "problem": "A viral spike protein $S$ on the envelope of an animal virus binds a host cell receptor $R$ in a one-to-one stoichiometric complex $RS$ during entry. Assume that, in a well-mixed reaction volume adjacent to the membrane, the binding reaches thermodynamic equilibrium and obeys the law of mass action. You are given the total concentrations $[R]_T$ and $[S]_T$, and the dissociation constant (KD) $K_D$ of the interaction. Starting only from the conservation of mass for $R$ and $S$ and the definition of $K_D$ under the law of mass action, derive the exact fraction $f$ of spike proteins that are occupied by receptor at equilibrium in closed form, expressed solely in terms of $[R]_T$, $[S]_T$, and $K_D$. Express your final answer as a single closed-form symbolic expression in terms of $[R]_T$, $[S]_T$, and $K_D$.\n\nThen, briefly explain (no calculation required) how the spatial confinement of receptors to the two-dimensional cell membrane could cause deviations from this three-dimensional prediction, and under what limiting regimes the three-dimensional model is approximately recovered.\n\nNo numerical evaluation is required. Your final answer should be a single analytic expression with no units.", "solution": "The problem is to derive the fraction of occupied viral spike proteins, $f$, at thermodynamic equilibrium for a one-to-one binding interaction with a host cell receptor. The derivation must proceed from first principles: the law of mass action and the conservation of mass.\n\nThe reversible binding reaction is given by:\n$$S + R \\rightleftharpoons RS$$\nwhere $S$ is the spike protein, $R$ is the receptor, and $RS$ is the bound complex.\n\nAt equilibrium, the system is described by the dissociation constant, $K_D$, which is defined by the law of mass action as:\n$$K_D = \\frac{[S][R]}{[RS]}$$\nHere, $[S]$, $[R]$, and $[RS]$ represent the molar concentrations of the free spike protein, free receptor, and the complex at equilibrium, respectively.\n\nThe total concentrations of the spike protein, $[S]_T$, and the receptor, $[R]_T$, are conserved. The mass balance equations are:\n$$[S]_T = [S] + [RS]$$\n$$[R]_T = [R] + [RS]$$\n\nOur objective is to find the fraction $f$ of occupied spike proteins, which is defined as:\n$$f = \\frac{[RS]}{[S]_T}$$\nTo find $f$, we must first solve for the equilibrium concentration of the complex, $[RS]$, in terms of the given total concentrations, $[S]_T$ and $[R]_T$, and the constant $K_D$.\n\nFrom the mass balance equations, we can express the free concentrations $[S]$ and $[R]$ in terms of $[RS]$:\n$$[S] = [S]_T - [RS]$$\n$$[R] = [R]_T - [RS]$$\nThese expressions are valid as long as $[RS] \\le [S]_T$ and $[RS] \\le [R]_T$, which is required by physical reality.\n\nSubstituting these expressions for $[S]$ and $[R]$ into the equilibrium equation for $K_D$ yields:\n$$K_D = \\frac{([S]_T - [RS])([R]_T - [RS])}{[RS]}$$\n\nThis equation must be solved for $[RS]$. We rearrange the equation into a standard quadratic form, $ax^2 + bx + c = 0$, where the variable is $x = [RS]$.\n$$K_D [RS] = ([S]_T - [RS])([R]_T - [RS])$$\n$$K_D [RS] = [S]_T [R]_T - [S]_T [RS] - [R]_T [RS] + [RS]^2$$\n$$[RS]^2 - ([S]_T + [R]_T + K_D)[RS] + [S]_T [R]_T = 0$$\n\nThis is a quadratic equation for $[RS]$. We apply the quadratic formula, $[RS] = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$, with coefficients $a=1$, $b = -([S]_T + [R]_T + K_D)$, and $c = [S]_T [R]_T$.\n$$[RS] = \\frac{([S]_T + [R]_T + K_D) \\pm \\sqrt{(-([S]_T + [R]_T + K_D))^2 - 4(1)([S]_T [R]_T)}}{2}$$\n$$[RS] = \\frac{1}{2} \\left( [S]_T + [R]_T + K_D \\pm \\sqrt{([S]_T + [R]_T + K_D)^2 - 4[S]_T [R]_T} \\right)$$\n\nTwo mathematical solutions are obtained, but only one is physically meaningful. The concentration of the complex, $[RS]$, cannot exceed the total concentration of either reactant. That is, $[RS] \\le [S]_T$ and $[RS] \\le [R]_T$. We must evaluate the two roots provided by the $\\pm$ sign.\n\nLet us analyze the sum under the radical. It can be algebraically rearranged:\n$$([S]_T + [R]_T + K_D)^2 - 4[S]_T [R]_T = ([S]_T + [R]_T)^2 + 2K_D([S]_T + [R]_T) + K_D^2 - 4[S]_T [R]_T$$\n$$= ([S]_T - [R]_T)^2 + 2K_D([S]_T + [R]_T) + K_D^2$$\nThis term is always non-negative, so real solutions for $[RS]$ are guaranteed.\n\nConsider the solution with the plus sign. The term $\\sqrt{([S]_T + [R]_T + K_D)^2 - 4[S]_T [R]_T}$ is strictly less than $([S]_T + [R]_T + K_D)$ because $4[S]_T [R]_T > 0$ (assuming non-zero concentrations).\nHowever, if we take the plus sign, the resulting $[RS]$ is too large. For example, in the limit where $K_D \\to 0$ (infinitely tight binding), the reaction goes to completion. The limiting reagent is exhausted. If $[S]_T < [R]_T$, then $[RS] \\to [S]_T$. The formula with $K_D=0$ becomes:\n$$[RS] = \\frac{1}{2} \\left([S]_T + [R]_T \\pm \\sqrt{([S]_T - [R]_T)^2} \\right) = \\frac{1}{2} \\left([S]_T + [R]_T \\pm |[S]_T - [R]_T| \\right)$$\nAssuming $[S]_T < [R]_T$, then $|[S]_T - [R]_T| = [R]_T - [S]_T$.\nThe plus sign gives: $[RS] = \\frac{1}{2} ([S]_T + [R]_T + [R]_T - [S]_T) = [R]_T$. This is physically incorrect, as $[RS]$ cannot exceed $[S]_T$.\nThe minus sign gives: $[RS] = \\frac{1}{2} ([S]_T + [R]_T - ([R]_T - [S]_T)) = \\frac{1}{2}(2[S]_T) = [S]_T$. This is the correct physical limit.\nTherefore, the minus sign provides the only physically valid solution.\n\nThe correct expression for the equilibrium concentration of the complex is:\n$$[RS] = \\frac{1}{2} \\left( [S]_T + [R]_T + K_D - \\sqrt{([S]_T + [R]_T + K_D)^2 - 4[S]_T [R]_T} \\right)$$\n\nFinally, we compute the fraction $f$ of occupied spike proteins by dividing $[RS]$ by $[S]_T$:\n$$f = \\frac{[RS]}{[S]_T} = \\frac{1}{2[S]_T} \\left( [S]_T + [R]_T + K_D - \\sqrt{([S]_T + [R]_T + K_D)^2 - 4[S]_T [R]_T} \\right)$$\nThis is the required closed-form expression.\n\nRegarding the second part of the problem:\nThe provided model assumes a well-mixed, three-dimensional reaction volume where concentrations are uniform. The spatial confinement of receptors to the two-dimensional cell membrane introduces significant deviations from this idealized model.\n\nThe primary deviation arises from the concept of `effective concentration`. Receptors confined to a $2D$ surface have a much higher local density than if they were distributed throughout a $3D$ volume. A spike protein near the cell surface experiences a higher effective concentration of receptors, which enhances the probability of binding. This effect, known as `reduction of dimensionality`, generally leads to a higher bound fraction than predicted by the $3D$ model for a given number of molecules. Furthermore, the binding kinetics are altered, as the process becomes a search by a $3D$ diffusing particle for a target on a $2D$ surface, which is more efficient than a purely $3D$ search. The law of mass action assumes a well-mixed state that may not be achieved if diffusion rates are slow compared to reaction rates.\n\nThe three-dimensional model can be approximately recovered under specific limiting regimes. The most important is the `reaction-limited regime`. If the intrinsic chemical association ($k_{on}$) and dissociation ($k_{off}$) rates are much slower than the diffusion rates of both the spike protein in the bulk volume and the receptor on the membrane surface, then the system has sufficient time to equilibrate spatially. In this case, the particles are effectively `well-mixed` before a significant number of binding events occur. The equilibrium state is then governed purely by thermodynamics (i.e., the ratio $k_{off}/k_{on} = K_D$) rather than by the rate of diffusional encounter. Under such conditions, the $3D$ mass-action model provides a good approximation, provided the concentrations $[S]_T$ and $[R]_T$ are correctly defined for the relevant interaction volume adjacent to the membrane. If the receptor lateral mobility is very high, the receptor-decorated surface begins to behave like a homogeneous phase, which also helps recover the assumptions of the simpler model.", "answer": "$$\\boxed{\\frac{1}{2[S]_T} \\left( [R]_T + [S]_T + K_D - \\sqrt{([R]_T + [S]_T + K_D)^2 - 4[R]_T [S]_T} \\right)}$$", "id": "2489082"}, {"introduction": "For an enveloped virus, merging its own membrane with that of a host cell is a formidable task that requires overcoming a substantial energy barrier. This practice [@problem_id:2489080] explores the principle of cooperativity, where multiple fusion proteins work in concert to make this event possible on a biologically relevant timescale. Using concepts from Transition State Theory, you will calculate the minimum number of proteins required to trigger fusion, revealing the sharp, switch-like nature of this critical entry event.", "problem": "An enveloped animal virus enters cells by membrane fusion mediated by multiple copies of a trimeric fusion glycoprotein. Consider a minimal kinetic model in which membrane merger is a single, activated step with activation free energy $\\Delta G^{\\ddagger}(n)$ that depends on the number $n$ of simultaneously engaged fusion proteins. Adopt the following foundational bases: (i) Transition State Theory (TST) states that the fusion rate constant is $k(n) = k_{0} \\exp\\!\\left(-\\Delta G^{\\ddagger}(n) / (k_{B} T)\\right)$, where $k_{0}$ is the attempt frequency, $k_{B}$ is the Boltzmann constant, and $T$ is absolute temperature; (ii) the probability that at least one fusion event has occurred by time $t$ for a memoryless process with constant rate $k(n)$ is $P_{\\text{fuse}}(t) = 1 - \\exp\\!\\left(-k(n)\\, t\\right)$; and (iii) each engaged fusion protein lowers the activation free energy by an amount $\\Delta E_{\\text{prot}}$, and these contributions add linearly.\n\nAssume the following parameter values at physiological temperature: $T = 310 \\,\\mathrm{K}$, $k_{0} = 10^{6} \\,\\mathrm{s}^{-1}$, a baseline activation barrier in the absence of cooperation $E_{\\text{barrier}} = 35\\, k_{B} T$, and a per-protein barrier reduction $\\Delta E_{\\text{prot}} = 4\\, k_{B} T$. During endosomal trafficking, the virion has an effective time window $t_{\\text{avail}} = 60 \\,\\mathrm{s}$ in which fusion must occur to avoid degradation. Define a fusion outcome as physiologically relevant if the probability of fusion by the end of this window satisfies $P_{\\text{fuse}}(t_{\\text{avail}}) \\ge p^{\\star}$ with $p^{\\star} = 0.95$.\n\nStarting only from the bases stated above and the given parameter values, derive the inequality that determines the minimal integer $n$ ensuring a physiologically relevant outcome and compute that minimal $n$. Report the minimal integer $n$ as your final answer. No units are required. If any intermediate numerical calculation requires rounding, carry sufficient precision so that the final minimal integer $n$ is unambiguous; no specific significant-figure rounding of $n$ is required.", "solution": "The problem statement must first be validated for scientific soundness, consistency, and completeness.\n\nStep 1: Extract Givens\nThe explicit data and definitions provided are:\n- Model: Single-step membrane fusion mediated by $n$ trimeric fusion glycoproteins.\n- Transition State Theory (TST) rate constant: $k(n) = k_{0} \\exp\\!\\left(-\\Delta G^{\\ddagger}(n) / (k_{B} T)\\right)$.\n- Fusion probability by time $t$: $P_{\\text{fuse}}(t) = 1 - \\exp\\!\\left(-k(n)\\, t\\right)$.\n- Activation energy model: $\\Delta G^{\\ddagger}(n)$ is a linear function of $n$. Each protein reduces the barrier by $\\Delta E_{\\text{prot}}$.\n- Parameter values:\n  - Absolute temperature: $T = 310 \\,\\mathrm{K}$.\n  - Attempt frequency: $k_{0} = 10^{6} \\,\\mathrm{s}^{-1}$.\n  - Baseline activation barrier: $E_{\\text{barrier}} = 35\\, k_{B} T$.\n  - Per-protein energy contribution: $\\Delta E_{\\text{prot}} = 4\\, k_{B} T$.\n  - Available time for fusion: $t_{\\text{avail}} = 60 \\,\\mathrm{s}$.\n- Definition of physiologically relevant outcome: $P_{\\text{fuse}}(t_{\\text{avail}}) \\ge p^{\\star}$.\n- Probability threshold: $p^{\\star} = 0.95$.\n- Objective: Find the minimal integer $n$ that satisfies the condition for a physiologically relevant outcome.\n\nStep 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, employing a standard simplified kinetic model from biophysics based on Transition State Theory and cooperative binding, which is a well-established concept in virology. The problem is well-posed, providing all necessary parameters and a clearly defined objective. The language is precise and objective. There are no contradictions, missing information, or pseudoscientific elements. The values provided are physically plausible for such a biological process.\n\nStep 3: Verdict and Action\nThe problem is valid. A complete solution will be developed.\n\nThe solution proceeds by first constructing the explicit form of the fusion rate constant, $k(n)$, and then using the condition on the fusion probability to derive an inequality for the number of proteins, $n$.\n\nFirst, we formulate the activation free energy, $\\Delta G^{\\ddagger}(n)$. The baseline barrier, $E_{\\text{barrier}}$, corresponds to the case with zero cooperating proteins, i.e., $\\Delta G^{\\ddagger}(0) = E_{\\text{barrier}}$. According to basis (iii), each of the $n$ proteins linearly reduces this barrier by an amount $\\Delta E_{\\text{prot}}$. Therefore, the activation energy as a function of $n$ is:\n$$\n\\Delta G^{\\ddagger}(n) = \\Delta G^{\\ddagger}(0) - n \\cdot \\Delta E_{\\text{prot}} = E_{\\text{barrier}} - n \\cdot \\Delta E_{\\text{prot}}\n$$\nSubstituting the given parameter values, which are conveniently expressed in units of $k_{B} T$:\n$$\n\\Delta G^{\\ddagger}(n) = 35\\, k_{B} T - n (4\\, k_{B} T) = (35 - 4n) k_{B} T\n$$\nNext, we substitute this expression for $\\Delta G^{\\ddagger}(n)$ into the TST equation for the rate constant, $k(n)$:\n$$\nk(n) = k_{0} \\exp\\left(-\\frac{\\Delta G^{\\ddagger}(n)}{k_{B} T}\\right) = k_{0} \\exp\\left(-\\frac{(35 - 4n) k_{B} T}{k_{B} T}\\right)\n$$\nThe terms $k_{B} T$ in the exponent cancel, which simplifies the expression considerably:\n$$\nk(n) = k_{0} \\exp(- (35 - 4n)) = k_{0} \\exp(4n - 35)\n$$\nThe problem defines a \"physiologically relevant outcome\" as an event where the probability of fusion by time $t_{\\text{avail}}$ is at least $p^{\\star}$. This gives the inequality:\n$$\nP_{\\text{fuse}}(t_{\\text{avail}}) \\ge p^{\\star}\n$$\nUsing the provided formula for the fusion probability, we have:\n$$\n1 - \\exp(-k(n)\\, t_{\\text{avail}}) \\ge p^{\\star}\n$$\nWe now solve this inequality for $n$. Rearranging the terms to isolate the exponential:\n$$\n1 - p^{\\star} \\ge \\exp(-k(n)\\, t_{\\text{avail}})\n$$\nTo solve for the argument of the exponential, we take the natural logarithm of both sides. Since $\\ln(x)$ is a monotonically increasing function, the direction of the inequality is preserved.\n$$\n\\ln(1 - p^{\\star}) \\ge -k(n)\\, t_{\\text{avail}}\n$$\nMultiplying by $-1$ reverses the inequality:\n$$\n-\\ln(1 - p^{\\star}) \\le k(n)\\, t_{\\text{avail}}\n$$\nThis can be written more elegantly as:\n$$\n\\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) \\le k(n)\\, t_{\\text{avail}}\n$$\nNow, substitute the expression for $k(n)$:\n$$\n\\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) \\le \\left(k_{0} \\exp(4n - 35)\\right) t_{\\text{avail}}\n$$\nTo isolate $n$, we again rearrange and apply the natural logarithm. First, isolate the exponential term:\n$$\n\\frac{1}{k_{0} t_{\\text{avail}}} \\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) \\le \\exp(4n - 35)\n$$\nTaking the natural logarithm of both sides:\n$$\n\\ln\\left[ \\frac{1}{k_{0} t_{\\text{avail}}} \\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) \\right] \\le 4n - 35\n$$\nFinally, we solve for $n$:\n$$\n35 + \\ln\\left[ \\frac{1}{k_{0} t_{\\text{avail}}} \\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) \\right] \\le 4n\n$$\n$$\nn \\ge \\frac{1}{4} \\left( 35 + \\ln\\left[ \\frac{\\ln\\left(\\frac{1}{1 - p^{\\star}}\\right)}{k_{0} t_{\\text{avail}}} \\right] \\right)\n$$\nThis is the required inequality. Now we substitute the numerical values: $p^{\\star} = 0.95$, $k_{0} = 10^{6} \\,\\mathrm{s}^{-1}$, and $t_{\\text{avail}} = 60 \\,\\mathrm{s}$.\nFirst, calculate the terms inside the logarithms:\n$$\n\\frac{1}{1 - p^{\\star}} = \\frac{1}{1 - 0.95} = \\frac{1}{0.05} = 20\n$$\n$$\n\\ln\\left(\\frac{1}{1 - p^{\\star}}\\right) = \\ln(20) \\approx 2.99573\n$$\nNext, calculate the denominator term:\n$$\nk_{0} t_{\\text{avail}} = (10^{6} \\,\\mathrm{s}^{-1}) \\cdot (60 \\,\\mathrm{s}) = 6 \\times 10^{7}\n$$\nNow, substitute these values into the inequality for $n$:\n$$\nn \\ge \\frac{1}{4} \\left( 35 + \\ln\\left[ \\frac{\\ln(20)}{6 \\times 10^{7}} \\right] \\right)\n$$\n$$\nn \\ge \\frac{1}{4} \\left( 35 + \\ln\\left[ \\frac{2.99573}{6 \\times 10^{7}} \\right] \\right)\n$$\n$$\nn \\ge \\frac{1}{4} \\left( 35 + \\ln(4.99288 \\times 10^{-8}) \\right)\n$$\n$$\nn \\ge \\frac{1}{4} (35 - 16.8126)\n$$\n$$\nn \\ge \\frac{1}{4} (18.1874)\n$$\n$$\nn \\ge 4.54685\n$$\nSince the number of engaged fusion proteins, $n$, must be an integer, the minimal integer value of $n$ that satisfies this condition is obtained by rounding up to the next whole number.\nThus, the minimal number of simultaneously engaged fusion proteins required for a physiologically relevant fusion outcome is $5$.", "answer": "$$\\boxed{5}$$", "id": "2489080"}, {"introduction": "Observing a virus enter a cell reveals only the total time of the journey, not the individual steps along the way. This computational exercise [@problem_id:2489172] equips you with a powerful statistical framework for peering into this \"black box\" of kinetic intermediates. By modeling the total entry time as a sum of sequential, memoryless steps, you will use maximum likelihood estimation on hypothetical data to infer the underlying number of rate-limiting events, a skill essential for translating experimental measurements into mechanistic models.", "problem": "You are given a modeling task grounded in the mechanistic view that the total time to successful entry of an animal virus into a host cell can be approximated as the sum of a finite number of independent, memoryless waiting times, each corresponding to a rate-limiting molecular step in the entry pathway. The core starting points are the following fundamental definitions and widely accepted facts: (i) a single memoryless waiting time is modeled by an exponential random variable with rate parameter $\\lambda$ (in $\\mathrm{min}^{-1}$), (ii) the sum of $k$ independent exponential random variables of common rate $\\lambda$ follows a gamma (Erlang) distribution with shape parameter $k$ and rate parameter $\\lambda$, and (iii) the probability density function of a gamma distribution with shape $k$ and rate $\\lambda$ is $f(t \\mid k,\\lambda) = \\dfrac{\\lambda^k t^{k-1} e^{-\\lambda t}}{\\Gamma(k)}$ for $t > 0$, where $\\Gamma(k)$ is the gamma function.\n\nGiven observed entry times $t_1,\\dots,t_n$ (in minutes), assume that all rate-limiting steps share the same mean rate and that the total entry time is the sum of $k$ such steps. Your task is to infer from data the effective number of rate-limiting steps $k$ (assumed to be a positive integer) and the common step rate $\\lambda$ (in $\\mathrm{min}^{-1}$) by maximum likelihood, using only the above base assumptions and definitions.\n\nFormulate an algorithm that, for a fixed $k$, estimates $\\lambda$ by maximizing the likelihood under the gamma density and then selects the $k$ that maximizes the resulting maximized likelihood over the discrete set $\\{1,2,\\dots,K_{\\max}\\}$ for a given $K_{\\max}$. Then compute the corresponding mean duration per step $\\tau = 1/\\lambda$ (in minutes). All floating-point outputs must be rounded to exactly $4$ decimal places. Your program must implement this procedure and produce results for the test suite below.\n\nTest suite:\n- Case A (happy path, moderately sized sample with multiple effective steps): $[6.2, 8.5, 9.1, 11.0, 12.3, 14.7, 15.4, 16.8, 18.2, 19.5, 21.0, 24.3]$ minutes.\n- Case B (boundary condition, approximately single-step exponential behavior): $[0.4, 0.7, 1.2, 1.8, 2.1, 2.6, 3.3, 3.9, 4.8, 5.7]$ minutes.\n- Case C (edge case with higher effective step count): $[6.8, 8.9, 9.7, 10.5, 11.2, 11.8, 12.3, 12.9, 13.4, 13.9, 14.4, 15.1, 15.7, 16.4, 17.2]$ minutes.\n- Case D (small-sample stability check): $[0.2, 0.3, 1.1, 0.6]$ minutes.\n\nImplementation details to satisfy:\n- Treat $k$ as an integer and search over $k \\in \\{1,2,\\dots,K_{\\max}\\}$ with $K_{\\max} = 10$.\n- For each case, return a triple consisting of the inferred integer number of steps $k$, the inferred common step rate $\\lambda$ in $\\mathrm{min}^{-1}$, and the inferred mean per-step duration $\\tau$ in minutes. Round the latter two to exactly $4$ decimal places.\n- Angle units are not involved. All times are in minutes and all rates are in $\\mathrm{min}^{-1}$.\n- Your program should produce a single line of output containing the results for Cases A–D as a comma-separated list of lists, in the order A, B, C, D, enclosed in square brackets. For example, the output format must be exactly of the form $[[k_A,\\lambda_A,\\tau_A],[k_B,\\lambda_B,\\tau_B],[k_C,\\lambda_C,\\tau_C],[k_D,\\lambda_D,\\tau_D]]$ where each $\\lambda$ and $\\tau$ are displayed with exactly $4$ digits after the decimal point.\n\nYour program must be self-contained and must not require any input. It must compute the results as specified for the provided test suite and print the single-line output in the exact required format.", "solution": "The problem statement has been subjected to rigorous validation and is found to be valid. It is scientifically grounded in the principles of stochastic processes and statistical inference, specifically the application of gamma-distributed waiting times to model biological phenomena. The problem is well-posed, providing a clear objective, all necessary data, and a defined methodology for maximum likelihood estimation. It is free from ambiguity, contradiction, and subjective content. We may therefore proceed with the derivation of the solution.\n\nThe task is to infer the number of rate-limiting steps, $k$, and the common rate of these steps, $\\lambda$, from a set of $n$ observed total entry times, $\\mathbf{t} = \\{t_1, t_2, \\dots, t_n\\}$. The model assumes the total time $t$ follows a gamma distribution with a shape parameter $k$ (an integer) and a rate parameter $\\lambda$. The probability density function (PDF) is given as:\n$$ f(t \\mid k, \\lambda) = \\frac{\\lambda^k t^{k-1} e^{-\\lambda t}}{\\Gamma(k)} $$\nwhere $\\Gamma(k)$ is the gamma function. For integer $k$, $\\Gamma(k) = (k-1)!$.\n\nOur objective is to find the parameters $(k, \\lambda)$ that maximize the likelihood of observing the given data. Assuming the observations $t_i$ are independent and identically distributed (i.i.d.), the likelihood function $L$ is the product of the individual probability densities:\n$$ L(\\lambda, k \\mid \\mathbf{t}) = \\prod_{i=1}^{n} f(t_i \\mid k, \\lambda) = \\prod_{i=1}^{n} \\frac{\\lambda^k t_i^{k-1} e^{-\\lambda t_i}}{\\Gamma(k)} $$\n\nFor analytical convenience, we work with the log-likelihood function, $\\ell = \\ln L$:\n$$ \\ell(\\lambda, k \\mid \\mathbf{t}) = \\ln \\left( \\prod_{i=1}^{n} \\frac{\\lambda^k t_i^{k-1} e^{-\\lambda t_i}}{\\Gamma(k)} \\right) = \\sum_{i=1}^{n} \\ln \\left( \\frac{\\lambda^k t_i^{k-1} e^{-\\lambda t_i}}{\\Gamma(k)} \\right) $$\nExpanding the logarithm, we get:\n$$ \\ell(\\lambda, k \\mid \\mathbf{t}) = \\sum_{i=1}^{n} \\left( k \\ln\\lambda + (k-1)\\ln t_i - \\lambda t_i - \\ln\\Gamma(k) \\right) $$\n$$ \\ell(\\lambda, k \\mid \\mathbf{t}) = n k \\ln\\lambda + (k-1)\\sum_{i=1}^{n}\\ln t_i - \\lambda\\sum_{i=1}^{n} t_i - n\\ln\\Gamma(k) $$\n\nThe problem specifies a two-step procedure. First, for a fixed integer value of $k$, we find the maximum likelihood estimate (MLE) of $\\lambda$, denoted $\\hat{\\lambda}(k)$. This is found by taking the partial derivative of $\\ell$ with respect to $\\lambda$ and setting it to zero:\n$$ \\frac{\\partial\\ell}{\\partial\\lambda} = \\frac{\\partial}{\\partial\\lambda} \\left( n k \\ln\\lambda + (k-1)\\sum_{i=1}^{n}\\ln t_i - \\lambda\\sum_{i=1}^{n} t_i - n\\ln\\Gamma(k) \\right) = \\frac{nk}{\\lambda} - \\sum_{i=1}^{n} t_i $$\nSetting the derivative to zero:\n$$ \\frac{nk}{\\hat{\\lambda}} - \\sum_{i=1}^{n} t_i = 0 \\implies \\hat{\\lambda}(k) = \\frac{nk}{\\sum_{i=1}^{n} t_i} $$\nThis can be expressed in terms of the sample mean time, $\\bar{t} = \\frac{1}{n} \\sum_{i=1}^{n} t_i$, as:\n$$ \\hat{\\lambda}(k) = \\frac{k}{\\bar{t}} $$\nThe second partial derivative, $\\frac{\\partial^2\\ell}{\\partial\\lambda^2} = -\\frac{nk}{\\lambda^2}$, is always negative for positive $n$, $k$, and $\\lambda$, confirming that this is indeed a maximum.\n\nSecond, we must find the optimal integer $k$ in the specified range $\\{1, 2, \\dots, K_{\\max}\\}$, where $K_{\\max}=10$. We achieve this by substituting the MLE $\\hat{\\lambda}(k)$ back into the log-likelihood function to obtain the profile log-likelihood for $k$, denoted $\\ell(k)$:\n$$ \\ell(k) = \\ell(\\hat{\\lambda}(k), k \\mid \\mathbf{t}) = n k \\ln(\\hat{\\lambda}(k)) + (k-1)\\sum_{i=1}^{n}\\ln t_i - \\hat{\\lambda}(k)\\sum_{i=1}^{n} t_i - n\\ln\\Gamma(k) $$\nSubstituting $\\hat{\\lambda}(k) = k/\\bar{t}$ and $\\sum t_i = n\\bar{t}$:\n$$ \\ell(k) = n k \\ln\\left(\\frac{k}{\\bar{t}}\\right) + (k-1)\\sum_{i=1}^{n}\\ln t_i - \\left(\\frac{k}{\\bar{t}}\\right) n\\bar{t} - n\\ln\\Gamma(k) $$\n$$ \\ell(k) = n k (\\ln k - \\ln\\bar{t}) + (k-1)\\sum_{i=1}^{n}\\ln t_i - nk - n\\ln\\Gamma(k) $$\nThe optimal number of steps, $k^*$, is the integer value of $k$ from $1$ to $10$ that maximizes this function $\\ell(k)$.\n\nThe algorithm is therefore as follows:\n$1$. For a given data set $\\{t_1, \\dots, t_n\\}$, compute the summary statistics: sample size $n$, sample mean $\\bar{t}$, and the sum of logarithms $\\sum_{i=1}^{n} \\ln t_i$.\n$2$. For each integer $k$ from $1$ to $10$, calculate the value of the profile log-likelihood $\\ell(k)$. The term $\\ln\\Gamma(k)$ is computed numerically.\n$3$. Identify the integer $k^*$ that yields the maximum value of $\\ell(k)$.\n$4$. The final estimated parameters are:\n   - Number of steps: $k = k^*$\n   - Step rate: $\\lambda = \\hat{\\lambda}(k^*) = k^*/\\bar{t}$\n   - Mean step duration: $\\tau = 1/\\lambda = \\bar{t}/k^*$\n\nThis procedure will be implemented to solve for the parameters for each test case provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.special import gammaln\n\ndef solve():\n    \"\"\"\n    Solves the virus entry modeling problem for the given test suite.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = {\n        'A': [6.2, 8.5, 9.1, 11.0, 12.3, 14.7, 15.4, 16.8, 18.2, 19.5, 21.0, 24.3],\n        'B': [0.4, 0.7, 1.2, 1.8, 2.1, 2.6, 3.3, 3.9, 4.8, 5.7],\n        'C': [6.8, 8.9, 9.7, 10.5, 11.2, 11.8, 12.3, 12.9, 13.4, 13.9, 14.4, 15.1, 15.7, 16.4, 17.2],\n        'D': [0.2, 0.3, 1.1, 0.6]\n    }\n    \n    # Process cases in the required order A, B, C, D\n    case_order = ['A', 'B', 'C', 'D']\n    \n    K_max = 10\n    formatted_results = []\n\n    for case_key in case_order:\n        data = np.array(test_cases[case_key])\n        n = len(data)\n        \n        if n == 0:\n            # Handle empty data case, though not present in tests\n            continue \n            \n        t_mean = np.mean(data)\n        # To avoid log(0) for potential t_i = 0, although not in test cases\n        if np.any(data <= 0):\n            # This model is for t > 0, invalid data\n            continue\n        sum_log_t = np.sum(np.log(data))\n\n        best_k = -1\n        max_log_likelihood = -np.inf\n\n        # Iterate through possible numbers of steps k\n        for k in range(1, K_max + 1):\n            # Profile log-likelihood for a given k\n            # Formula: l(k) = nk*ln(k) - nk*ln(t_mean) + (k-1)*sum(ln(t_i)) - nk - n*ln(Gamma(k))\n            \n            # The term ln(Gamma(k)) is computed using scipy.special.gammaln\n            log_likelihood = (n * k * np.log(k) - \n                              n * k * np.log(t_mean) + \n                              (k - 1) * sum_log_t - \n                              n * k - \n                              n * gammaln(k))\n\n            if log_likelihood > max_log_likelihood:\n                max_log_likelihood = log_likelihood\n                best_k = k\n\n        # Calculate lambda and tau for the optimal k\n        lambda_hat = best_k / t_mean\n        tau_hat = 1.0 / lambda_hat\n        \n        # Format the result list as a string [k,lambda,tau]\n        # lambda and tau must be displayed with exactly 4 decimal places.\n        formatted_case_result = f\"[{best_k},{lambda_hat:.4f},{tau_hat:.4f}]\"\n        formatted_results.append(formatted_case_result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2489172"}]}