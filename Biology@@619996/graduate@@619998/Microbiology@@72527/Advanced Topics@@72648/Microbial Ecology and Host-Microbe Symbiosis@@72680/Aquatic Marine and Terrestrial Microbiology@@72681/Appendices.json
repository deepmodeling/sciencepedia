{"hands_on_practices": [{"introduction": "Microbial life in aquatic and terrestrial environments is often concentrated within structured habitats like soil aggregates or marine snow. Within these microenvironments, the supply of essential substrates to cells is not guaranteed; it is a dynamic balance between diffusive transport from the surrounding environment and metabolic consumption by the resident microbial community. This exercise [@problem_id:2473663] guides you through the process of deriving and evaluating the key dimensionless group that governs this interplay, demonstrating how fundamental transport phenomena can control microbial activity at the microscale.", "problem": "A porous spherical marine snow aggregate composed of exopolysaccharides hosts a dense heterotrophic community that consumes dissolved acetate via first-order kinetics. In a quiescent marine environment, assume the surrounding seawater has a constant acetate concentration, the aggregate is well described as a sphere of radius $L$, and molecular diffusion of acetate within the aggregate proceeds with diffusion coefficient $D$ (take the effective diffusion coefficient to equal the molecular diffusion coefficient, and neglect any external boundary layer). The local acetate concentration $C(r)$ inside the aggregate is governed by diffusion and a first-order consumption process with rate constant $k$.\n\nStarting from Fick’s law in spherical coordinates and a first-order sink term, write the steady-state mass balance for $C(r)$ and nondimensionalize it by scaling radius with $L$ and concentration with the ambient concentration to identify the single dimensionless group that compares the characteristic reaction timescale to the diffusive transport timescale. Using the provided, experimentally plausible parameter values $L = 5.0 \\times 10^{-4}\\ \\mathrm{m}$, $k = 2.0 \\times 10^{-2}\\ \\mathrm{s}^{-1}$, and $D = 7.0 \\times 10^{-10}\\ \\mathrm{m}^{2}\\ \\mathrm{s}^{-1}$, evaluate this dimensionless group numerically.\n\nReport only the numerical value of this dimensionless group, rounded to $3$ significant figures, as a pure number (no units). This value can be used to assess whether transport or reaction limits substrate availability inside the aggregate, but do not include that interpretation in your final reported answer.", "solution": "The problem requires the derivation and evaluation of a dimensionless group governing a reaction-diffusion process in a spherical marine snow aggregate.\n\nFirst, we establish the governing steady-state mass balance equation for the acetate concentration, $C(r)$, inside the spherical aggregate. The general conservation equation for a chemical species in a control volume is given by:\n$$ \\frac{\\partial C}{\\partial t} = -\\nabla \\cdot \\mathbf{J} + R_{prod} - R_{cons} $$\nwhere $C$ is the concentration, $t$ is time, $\\mathbf{J}$ is the molar flux vector, and the $R$ terms represent production and consumption rates.\n\nIn this problem, we are at steady state, so $\\frac{\\partial C}{\\partial t} = 0$. There is no production of acetate, and consumption is a first-order process, so the net reaction term is $R = -kC(r)$, where $k$ is the first-order rate constant. The flux $\\mathbf{J}$ is due to molecular diffusion and is described by Fick's first law, $\\mathbf{J} = -D \\nabla C$, where $D$ is the diffusion coefficient.\n\nGiven the spherical symmetry of the problem, we use spherical coordinates, and the concentration $C$ depends only on the radial distance $r$ from the center of the aggregate. The flux vector has only a radial component, $J_r = -D \\frac{dC}{dr}$. The divergence of the flux vector, $\\nabla \\cdot \\mathbf{J}$, in spherical coordinates for a radial-only field is:\n$$ \\nabla \\cdot \\mathbf{J} = \\frac{1}{r^2} \\frac{d}{dr} (r^2 J_r) = \\frac{1}{r^2} \\frac{d}{dr} \\left( r^2 \\left(-D \\frac{dC}{dr}\\right) \\right) $$\nAssuming $D$ is constant, this simplifies to:\n$$ \\nabla \\cdot \\mathbf{J} = -D \\left( \\frac{d^2C}{dr^2} + \\frac{2}{r} \\frac{dC}{dr} \\right) $$\nSubstituting these expressions into the steady-state conservation equation ($0 = -\\nabla \\cdot \\mathbf{J} + R$) gives:\n$$ 0 = D \\left( \\frac{d^2C}{dr^2} + \\frac{2}{r} \\frac{dC}{dr} \\right) - kC $$\nRearranging this gives the governing second-order ordinary differential equation for $C(r)$:\n$$ \\frac{d^2C}{dr^2} + \\frac{2}{r} \\frac{dC}{dr} - \\frac{k}{D} C = 0 $$\nThe boundary conditions for this physical system are:\n$1$. At the center of the sphere ($r=0$), there must be no concentration gradient due to a symmetry argument: $\\frac{dC}{dr}|_{r=0} = 0$.\n$2$. At the surface of the sphere ($r=L$), the concentration is equal to the constant ambient concentration, which we denote as $C_S$: $C(L) = C_S$. The problem statement to neglect any external boundary layer makes this condition precise.\n\nNext, we nondimensionalize the governing equation. We introduce the dimensionless variables as specified in the problem statement:\n- Dimensionless radius: $\\rho = \\frac{r}{L}$\n- Dimensionless concentration: $\\psi = \\frac{C}{C_S}$\n\nWe must re-express the derivatives with respect to the dimensional radius $r$ in terms of derivatives with respect to the dimensionless radius $\\rho$:\n$$ \\frac{dC}{dr} = \\frac{d(C_S \\psi)}{d(\\rho L)} = \\frac{C_S}{L} \\frac{d\\psi}{d\\rho} $$\n$$ \\frac{d^2C}{dr^2} = \\frac{d}{dr} \\left( \\frac{C_S}{L} \\frac{d\\psi}{d\\rho} \\right) = \\frac{d}{d(\\rho L)} \\left( \\frac{C_S}{L} \\frac{d\\psi}{d\\rho} \\right) = \\frac{C_S}{L^2} \\frac{d^2\\psi}{d\\rho^2} $$\nSubstituting these dimensionless forms into the governing differential equation:\n$$ \\left( \\frac{C_S}{L^2} \\frac{d^2\\psi}{d\\rho^2} \\right) + \\frac{2}{\\rho L} \\left( \\frac{C_S}{L} \\frac{d\\psi}{d\\rho} \\right) - \\frac{k}{D} (C_S \\psi) = 0 $$\nWe divide the entire equation by the constant term $\\frac{C_S}{L^2}$ to render it dimensionless:\n$$ \\frac{d^2\\psi}{d\\rho^2} + \\frac{2}{\\rho} \\frac{d\\psi}{d\\rho} - \\left( \\frac{k L^2}{D} \\right) \\psi = 0 $$\nThis is the dimensionless form of the governing equation. The single dimensionless group that appears is the coefficient of the $\\psi$ term. This group, often denoted as the square of the Thiele modulus ($\\Phi^2$), represents the ratio of a characteristic reaction rate to a characteristic diffusion rate.\n\nThe problem asks for the group that compares the characteristic reaction timescale to the diffusive transport timescale, but its interpretation should be the ratio of the diffusive timescale to the reaction timescale. Let us verify this physical interpretation. The characteristic time for diffusion across a length $L$ is $\\tau_{diff} \\sim \\frac{L^2}{D}$. The characteristic time for a first-order reaction is $\\tau_{rxn} \\sim \\frac{1}{k}$. The ratio is:\n$$ \\frac{\\tau_{diff}}{\\tau_{rxn}} = \\frac{L^2/D}{1/k} = \\frac{k L^2}{D} $$\nThis confirms that the dimensionless group we must evaluate is $\\frac{k L^2}{D}$.\n\nFinally, we calculate the numerical value of this group using the provided parameters:\n$L = 5.0 \\times 10^{-4}\\ \\mathrm{m}$\n$k = 2.0 \\times 10^{-2}\\ \\mathrm{s}^{-1}$\n$D = 7.0 \\times 10^{-10}\\ \\mathrm{m}^{2}\\ \\mathrm{s}^{-1}$\n\nThe dimensionless group is:\n$$ \\frac{k L^2}{D} = \\frac{(2.0 \\times 10^{-2}\\ \\mathrm{s}^{-1}) \\times (5.0 \\times 10^{-4}\\ \\mathrm{m})^2}{7.0 \\times 10^{-10}\\ \\mathrm{m}^{2}\\ \\mathrm{s}^{-1}} $$\n$$ \\frac{k L^2}{D} = \\frac{(2.0 \\times 10^{-2}) \\times (25.0 \\times 10^{-8})}{7.0 \\times 10^{-10}} \\frac{\\mathrm{s}^{-1} \\cdot \\mathrm{m}^2}{\\mathrm{m}^{2}\\ \\mathrm{s}^{-1}} $$\n$$ \\frac{k L^2}{D} = \\frac{50.0 \\times 10^{-10}}{7.0 \\times 10^{-10}} $$\n$$ \\frac{k L^2}{D} = \\frac{50.0}{7.0} \\approx 7.142857 $$\nThe problem requires the value to be rounded to $3$ significant figures.\n$$ \\frac{k L^2}{D} \\approx 7.14 $$\nThis is the final numerical value of the requested dimensionless group.", "answer": "$$\n\\boxed{7.14}\n$$", "id": "2473663"}, {"introduction": "From the microscale, we now scale up to the population level in an open, flow-through system, analytically modeled as a chemostat. The chemostat is a powerful theoretical and experimental tool in microbial ecology, representing an idealized ecosystem where nutrient supply and population loss are constant. In this practice [@problem_id:2473647], you will apply the principles of dynamical systems to derive the conditions for a microbial population's persistence versus its washout, and perform a stability analysis to understand how the system responds to perturbations. This analysis is fundamental to predicting microbial success in environments ranging from industrial bioreactors to oceanic currents.", "problem": "A single microbial population of marine heterotrophic bacteria grows in a perfectly mixed continuous-flow seawater chemostat of constant volume under carbon limitation. The inflow brings a limiting dissolved organic substrate at concentration $S_{in}$, and the effluent has the same concentrations as the reactor. The dilution rate is $D$ (flow rate divided by reactor volume). The specific growth rate follows Monod kinetics, $\\mu(S) = \\mu_{\\max}\\,\\dfrac{S}{K_s + S}$, where $\\mu_{\\max}$ is the maximum specific growth rate and $K_s$ is the half-saturation constant. Biomass growth is tied to substrate consumption by a constant biomass yield $Y$ (biomass produced per unit substrate consumed).\n\nStarting from fundamental unsteady mass balances for a chemostat and the stated kinetics and stoichiometry, do the following:\n\n1) Derive explicit algebraic expressions for the nonnegative steady-state substrate concentration $S^*$ and biomass concentration $X^*$ in terms of $D$, $\\mu_{\\max}$, $K_s$, $Y$, and $S_{in}$.\n\n2) Analyze the local stability of the washout steady state and the positive (nonzero biomass) steady state by linearization about each steady state. Identify the condition on $D$ under which the washout steady state is locally asymptotically stable, the condition under which the positive steady state exists and is locally asymptotically stable, and the critical dilution rate $D_{\\mathrm{crit}}$ at which stability switches.\n\n3) With parameters $\\mu_{\\max} = 0.60\\,\\mathrm{h}^{-1}$, $K_s = 0.50\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}$, $S_{in} = 2.0\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}$, and $Y = 0.45\\,\\mathrm{g}\\,\\mathrm{g}^{-1}$, compute the numerical value of $D_{\\mathrm{crit}}$ in $\\mathrm{h}^{-1}$. Round your answer to three significant figures. Express your final answer in $\\mathrm{h}^{-1}$, and report only this number as your final answer.", "solution": "The problem describes a standard chemostat model, which is a system of coupled nonlinear ordinary differential equations. We begin by establishing these equations from fundamental mass balance principles. Let $X$ be the concentration of microbial biomass and $S$ be the concentration of the limiting substrate. The volume of the chemostat, $V$, is constant. The flow rate is $F$. The dilution rate is defined as $D = F/V$.\n\nThe mass balance for biomass is:\n$$\n\\frac{d(VX)}{dt} = (\\text{Rate of biomass growth}) - (\\text{Rate of biomass outflow})\n$$\nSince $V$ is constant, this becomes:\n$$\nV\\frac{dX}{dt} = V(\\mu(S)X) - FX\n$$\nDividing by $V$ and using $D=F/V$, we obtain the first differential equation for biomass concentration $X$:\n$$\n\\frac{dX}{dt} = \\mu(S)X - DX\n$$\nThe mass balance for the substrate is:\n$$\n\\frac{d(VS)}{dt} = (\\text{Rate of substrate inflow}) - (\\text{Rate of substrate outflow}) - (\\text{Rate of substrate consumption})\n$$\nThis translates to:\n$$\nV\\frac{dS}{dt} = FS_{in} - FS - V\\frac{\\mu(S)X}{Y}\n$$\nwhere $S_{in}$ is the influent substrate concentration and $Y$ is the biomass yield coefficient. Dividing by $V$ gives the second differential equation for substrate concentration $S$:\n$$\n\\frac{dS}{dt} = D(S_{in} - S) - \\frac{\\mu(S)X}{Y}\n$$\nThe specific growth rate $\\mu(S)$ is given by the Monod equation:\n$$\n\\mu(S) = \\mu_{\\max}\\frac{S}{K_s + S}\n$$\nThe complete model is thus a system of two equations:\n$$\n\\frac{dX}{dt} = \\left(\\mu_{\\max}\\frac{S}{K_s + S} - D\\right)X\n$$\n$$\n\\frac{dS}{dt} = D(S_{in} - S) - \\frac{1}{Y}\\left(\\mu_{\\max}\\frac{S}{K_s + S}\\right)X\n$$\n\nPart $1$: Derivation of steady-state solutions.\nTo find the steady-state concentrations, denoted as $X^*$ and $S^*$, we set the time derivatives to zero:\n$$\n\\frac{dX}{dt} = 0 \\implies \\left(\\mu(S^*) - D\\right)X^* = 0\n$$\n$$\n\\frac{dS}{dt} = 0 \\implies D(S_{in} - S^*) - \\frac{\\mu(S^*)X^*}{Y} = 0\n$$\nFrom the first equation, there are two possibilities for a steady state:\nCase $1$: The washout steady state, where $X^* = 0$.\nSubstituting $X^*=0$ into the second steady-state equation gives:\n$$\nD(S_{in} - S^*) - 0 = 0\n$$\nSince $D > 0$, this implies $S^* = S_{in}$. Thus, the first steady state is $(X^*_1, S^*_1) = (0, S_{in})$. This represents the state where the microbial population has been completely washed out of the reactor.\n\nCase $2$: The positive (coexistence) steady state, where $X^* > 0$.\nFor this to be true, the first steady-state equation requires that the term in the parentheses must be zero:\n$$\n\\mu(S^*) - D = 0 \\implies \\mu(S^*) = D\n$$\nSubstituting the Monod expression:\n$$\n\\mu_{\\max}\\frac{S^*}{K_s + S^*} = D\n$$\nWe solve this for $S^*$:\n$$\n\\mu_{\\max}S^* = D(K_s + S^*) = DK_s + DS^*\n$$\n$$\nS^*(\\mu_{\\max} - D) = DK_s\n$$\n$$\nS^* = \\frac{DK_s}{\\mu_{\\max} - D}\n$$\nThis is the steady-state substrate concentration for the positive steady state, which we denote as $S^*_2$. For $S^*_2$ to be non-negative, since $D > 0$ and $K_s > 0$, we must have $\\mu_{\\max} - D > 0$, or $D  \\mu_{\\max}$.\nNow, we find the corresponding biomass concentration $X^*_2$ using the second steady-state equation:\n$$\nD(S_{in} - S^*_2) - \\frac{\\mu(S^*_2)X^*_2}{Y} = 0\n$$\nSince we are in the case where $\\mu(S^*_2)=D$, this simplifies to:\n$$\nD(S_{in} - S^*_2) - \\frac{DX^*_2}{Y} = 0\n$$\nAssuming $D \\neq 0$, we can divide by $D$:\n$$\nS_{in} - S^*_2 - \\frac{X^*_2}{Y} = 0\n$$\nSolving for $X^*_2$:\n$$\nX^*_2 = Y(S_{in} - S^*_2)\n$$\nSubstituting the expression for $S^*_2$:\n$$\nX^*_2 = Y\\left(S_{in} - \\frac{DK_s}{\\mu_{\\max} - D}\\right)\n$$\nThus, the expressions for the non-negative steady-state concentrations are:\nWashout state: $(X^*, S^*) = (0, S_{in})$\nPositive state: $(X^*, S^*) = \\left(Y\\left(S_{in} - \\frac{DK_s}{\\mu_{\\max} - D}\\right), \\frac{DK_s}{\\mu_{\\max} - D}\\right)$\n\nPart $2$: Stability analysis and critical dilution rate.\nWe perform a local stability analysis by linearizing the system around each steady state. The Jacobian matrix $J$ of the system is given by:\n$$\nJ = \\begin{pmatrix} \\frac{\\partial}{\\partial X}(\\mu(S)X - DX)  \\frac{\\partial}{\\partial S}(\\mu(S)X - DX) \\\\ \\frac{\\partial}{\\partial X}(D(S_{in}-S) - \\frac{\\mu(S)X}{Y})  \\frac{\\partial}{\\partial S}(D(S_{in}-S) - \\frac{\\mu(S)X}{Y}) \\end{pmatrix}\n$$\nThe partial derivatives are:\n$$\n\\frac{\\partial f_1}{\\partial X} = \\mu(S) - D\n$$\n$$\n\\frac{\\partial f_1}{\\partial S} = X \\frac{d\\mu}{dS} = X \\frac{\\mu_{\\max}K_s}{(K_s+S)^2}\n$$\n$$\n\\frac{\\partial f_2}{\\partial X} = -\\frac{\\mu(S)}{Y}\n$$\n$$\n\\frac{\\partial f_2}{\\partial S} = -D - \\frac{X}{Y}\\frac{d\\mu}{dS} = -D - \\frac{X}{Y}\\frac{\\mu_{\\max}K_s}{(K_s+S)^2}\n$$\nStability of the washout state $(X^*, S^*) = (0, S_{in})$:\nWe evaluate the Jacobian at this point:\n$$\nJ_1 = \\begin{pmatrix} \\mu(S_{in}) - D  0 \\\\ -\\frac{\\mu(S_{in})}{Y}  -D \\end{pmatrix}\n$$\nThe matrix is lower triangular, so its eigenvalues $(\\lambda_1, \\lambda_2)$ are the diagonal elements:\n$$\n\\lambda_1 = \\mu(S_{in}) - D = \\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}} - D\n$$\n$$\n\\lambda_2 = -D\n$$\nFor local asymptotic stability, all eigenvalues must have negative real parts. Since $D > 0$, $\\lambda_2$ is always negative. Stability thus depends on the sign of $\\lambda_1$. The washout state is stable if $\\lambda_1  0$, which means:\n$$\n\\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}} - D  0 \\implies D > \\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}}\n$$\nWe define the critical dilution rate $D_{\\mathrm{crit}}$ as this threshold value:\n$$\nD_{\\mathrm{crit}} = \\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}}\n$$\nSo, the washout steady state is locally asymptotically stable if $D > D_{\\mathrm{crit}}$.\n\nStability of the positive state $(X_2^*, S_2^*)$:\nThis steady state is physically meaningful (i.e., $X_2^* > 0$) only if $S_{in} > S_2^*$, which simplifies to $D  D_{\\mathrm{crit}}$. We now analyze its stability for $D  D_{\\mathrm{crit}}$. We evaluate the Jacobian at this point, remembering that $\\mu(S_2^*) = D$:\n$$\nJ_2 = \\begin{pmatrix} \\mu(S_2^*) - D  X_2^*\\frac{d\\mu}{dS}\\Big|_{S_2^*} \\\\ -\\frac{\\mu(S_2^*)}{Y}  -D - \\frac{X_2^*}{Y}\\frac{d\\mu}{dS}\\Big|_{S_2^*} \\end{pmatrix} = \\begin{pmatrix} 0  X_2^*\\mu'(S_2^*) \\\\ -\\frac{D}{Y}  -D - \\frac{X_2^*}{Y}\\mu'(S_2^*) \\end{pmatrix}\n$$\nwhere $\\mu'(S_2^*)$ is the derivative of $\\mu(S)$ evaluated at $S_2^*$. The stability of this fixed point is determined by the eigenvalues of $J_2$, which are the roots of the characteristic equation $\\lambda^2 - \\mathrm{Tr}(J_2)\\lambda + \\det(J_2) = 0$. For stability, we need $\\mathrm{Tr}(J_2)  0$ and $\\det(J_2) > 0$.\nThe trace is:\n$$\n\\mathrm{Tr}(J_2) = 0 + \\left(-D - \\frac{X_2^*}{Y}\\mu'(S_2^*)\\right) = -D - \\frac{X_2^*}{Y}\\mu'(S_2^*)\n$$\nSince $X_2^* > 0$ for $D  D_{\\mathrm{crit}}$, and $D>0$, $Y>0$, and $\\mu'(S) = \\frac{\\mu_{\\max}K_s}{(K_s+S)^2} > 0$ for all $S \\geq 0$, every term in the trace is positive. Therefore, $\\mathrm{Tr}(J_2)  0$.\nThe determinant is:\n$$\n\\det(J_2) = (0)\\left(-D - \\frac{X_2^*}{Y}\\mu'(S_2^*)\\right) - \\left(X_2^*\\mu'(S_2^*)\\right)\\left(-\\frac{D}{Y}\\right) = \\frac{D X_2^* \\mu'(S_2^*)}{Y}\n$$\nSince $D>0$, $Y>0$, $\\mu'(S_2^*)0$, the sign of the determinant is the same as the sign of $X_2^*$. As established, $X_2^* > 0$ if and only if $D  D_{\\mathrm{crit}}$. Therefore, for $D  D_{\\mathrm{crit}}$, we have $\\det(J_2) > 0$.\nSince both conditions, $\\mathrm{Tr}(J_2)  0$ and $\\det(J_2) > 0$, are met when $D  D_{\\mathrm{crit}}$, the positive steady state is locally asymptotically stable whenever it exists.\n\nIn summary:\n- The washout steady state is stable for $D > D_{\\mathrm{crit}}$.\n- The positive steady state exists and is stable for $D  D_{\\mathrm{crit}}$.\n- The critical dilution rate at which stability switches is $D_{\\mathrm{crit}} = \\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}}$. At this point, a transcritical bifurcation occurs.\n\nPart $3$: Numerical computation of $D_{\\mathrm{crit}}$.\nThe problem provides the following parameter values:\n$$\n\\mu_{\\max} = 0.60\\,\\mathrm{h}^{-1}\n$$\n$$\nK_s = 0.50\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}\n$$\n$$\nS_{in} = 2.0\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}\n$$\nThe value of $Y$ is not required for this calculation. We use the derived formula for $D_{\\mathrm{crit}}$:\n$$\nD_{\\mathrm{crit}} = \\mu_{\\max}\\frac{S_{in}}{K_s + S_{in}}\n$$\nSubstituting the numerical values:\n$$\nD_{\\mathrm{crit}} = (0.60\\,\\mathrm{h}^{-1}) \\times \\frac{2.0\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}}{0.50\\,\\mathrm{mg}\\,\\mathrm{L}^{-1} + 2.0\\,\\mathrm{mg}\\,\\mathrm{L}^{-1}}\n$$\n$$\nD_{\\mathrm{crit}} = 0.60 \\times \\frac{2.0}{2.5}\n$$\n$$\nD_{\\mathrm{crit}} = 0.60 \\times 0.8\n$$\n$$\nD_{\\mathrm{crit}} = 0.48\\,\\mathrm{h}^{-1}\n$$\nThe problem requires the answer to three significant figures. Thus, the final numerical value is $0.480\\,\\mathrm{h}^{-1}$.", "answer": "$$\n\\boxed{0.480}\n$$", "id": "2473647"}, {"introduction": "Real ecosystems are rarely composed of single populations; they are complex webs of interacting species. This final practice expands our analysis to a simple yet insightful community module: a nutrient-bacterium-predator system, which forms the basis of many aquatic food webs. By implementing and numerically analyzing this model [@problem_id:2473618], you will move beyond stable steady states to explore the emergence of complex, non-equilibrium dynamics like limit cycles. This hands-on computational exercise provides experience in simulating ecological models and interpreting their outputs, a core skill for modern quantitative ecology.", "problem": "Consider a closed, well-mixed aquatic microcosm in which dissolved inorganic nutrient, a bacterial prey population, and a protist predator interact. Assume strict conservation of the limiting nutrient element (for example, nitrogen), so that the total elemental content is constant. Let the state variables be: dissolved nutrient $N(t)$, bacterial biomass $B(t)$, and predator biomass $P(t)$, all measured in the same elemental units. Predator feeding follows a Holling type II functional response. Bacterial growth follows Monod kinetics with instantaneous remineralization of all non-assimilated and mortality losses back to dissolved nutrient. The Ordinary Differential Equation (ODE) model is\n$$\n\\frac{dN}{dt} = - \\mu_{\\max}\\frac{N}{K + N}B + (1 - e)\\,g(B)\\,P + m_B B + m_P P,\n$$\n$$\n\\frac{dB}{dt} = \\mu_{\\max}\\frac{N}{K + N}B - g(B)\\,P - m_B B,\n$$\n$$\n\\frac{dP}{dt} = e\\,g(B)\\,P - m_P P,\n$$\nwith\n$$\ng(B) = \\frac{a\\,B}{1 + a\\,h\\,B},\n$$\nand strict mass conservation\n$$\nN(t) + B(t) + P(t) = T \\quad \\text{for all } t \\ge 0.\n$$\nHere $\\mu_{\\max}$ is the maximum specific growth rate of bacteria, $K$ is the half-saturation constant for nutrient-limited growth, $e$ is the predator’s assimilation efficiency, $m_B$ and $m_P$ are mortality or maintenance loss rates for bacteria and predator, $a$ is the predator attack rate, $h$ is the predator handling time, and $T$ is the constant total elemental content. All parameters are strictly positive. You may assume that the model is biologically realistic for aquatic, marine, or terrestrial microbes when interpreted as a limiting-nutrient mass-balance system.\n\nStarting only from the model above, the core definitions of Monod growth and Holling type II, and the mass conservation constraint, derive a computational method that, for each choice of $(a,h)$:\n- determines the biologically feasible nontrivial equilibria,\n- analyzes the local linear stability of the interior equilibrium (when it exists),\n- decides whether the long-time dynamics exhibit a non-equilibrium attracting limit cycle (“steady-state cycle”),\n- and returns a simple classification for each parameter set.\n\nYour program must implement the following principles from first principles:\n- Use the mass conservation constraint to reduce the equilibrium search and to ensure that all variables remain nonnegative.\n- For an interior equilibrium with $P^\\ast gt; 0$, use the defining property $e\\,g(B^\\ast) = m_P$ implied by $\\frac{dP}{dt} = 0$ to reduce the problem and find $B^\\ast$.\n- Use the definition of linearization to construct the Jacobian of the ODEs at the equilibrium and determine stability from the eigenvalues.\n- Use numerical integration of the ODEs from a fixed biologically reasonable initial condition to determine whether a stable non-equilibrium periodic orbit exists. Decide “cycle” versus “no cycle” by an objective time-series criterion based on peak counting and amplitude after discarding a transient.\n\nScientific realism constraints:\n- Treat the system as closed and mass-conserving, that is, $N + B + P = T$ at all times. Do not invent any external inputs or losses other than the internal mortality and non-assimilation terms that are instantly remineralized.\n- Use the parameter values below, which are plausible for a microzooplankton–bacteria–nutrient system and are self-consistent.\n- Time is measured in days, but your outputs will be dimensionless booleans or integers, so no physical units need to be printed.\n\nFixed parameter values shared by all tests:\n- $\\mu_{\\max} = 1.2$\n- $K = 0.4$\n- $e = 0.45$\n- $m_B = 0.05$\n- $m_P = 0.1$\n- $T = 4.0$\n\nInitial condition for all tests:\n- $B(0) = 0.5$, $P(0) = 0.2$, $N(0) = T - B(0) - P(0)$.\n\nTest suite (each test case is a pair $(a,h)$):\n- Test $1$: $(a,h) = (0.2, 0.3)$\n- Test $2$: $(a,h) = (1.0, 0.5)$\n- Test $3$: $(a,h) = (3.0, 0.1)$\n- Test $4$: $(a,h) = (5.0, 0.05)$\n- Test $5$: $(a,h) = (2.0, 4.0)$\n\nFor each test case, your program must:\n1. Compute the feasible equilibria, including the interior equilibrium if it exists (that is, $B^\\ast gt; 0$, $P^\\ast gt; 0$, $N^\\ast \\ge 0$), using only the definitions above and the mass conservation $N^\\ast = T - B^\\ast - P^\\ast$.\n2. Compute the Jacobian matrix of the ODEs at the interior equilibrium (if it exists), calculate its eigenvalues, and determine whether the interior equilibrium is locally stable (all eigenvalues except the one corresponding to mass conservation have negative real parts) or unstable (at least one remaining eigenvalue with positive real part).\n3. Integrate the ODE system numerically from the initial condition up to a sufficiently long time to remove transients, then detect whether a non-equilibrium attracting limit cycle is present by:\n   - counting at least a fixed minimum number of local maxima of $P(t)$ in the final time window,\n   - and requiring that the peak-to-trough amplitude in the same window exceeds a small absolute threshold.\n   Conclude “cycle present” if both conditions are met and the trajectory does not collapse to a boundary equilibrium; otherwise conclude “no cycle”.\n4. Return an integer classification for each test case: output $1$ if a non-equilibrium attracting limit cycle is present, and $0$ otherwise.\n\nFinal output format:\n- Your program should produce a single line of output containing the classifications for the $5$ test cases as a comma-separated list of integers enclosed in square brackets. For example, if the classifications are $1$, $0$, $1$, $0$, $0$, the output must be exactly the single line\n\"[1,0,1,0,0]\".\n\nNotes:\n- Angle units are not involved.\n- Do not output any physical units.\n- The decision criterion for cycles must rely only on the model and the definitions given, and must not use any precomputed formulas other than those derivable from the definitions above.", "solution": "This problem requires classifying the long-term behavior of a nutrient-bacterium-predator model as either approaching a stable equilibrium or a limit cycle. The solution involves a combination of analytical reasoning and numerical simulation.\n\n**1. System Reduction**\nThe mass conservation constraint, $N(t) + B(t) + P(t) = T$, is a key feature. It implies that the sum of the derivatives is zero ($\\frac{dN}{dt} + \\frac{dB}{dt} + \\frac{dP}{dt} = 0$), which is consistent with the given ODEs. This constraint reduces the system's dimensionality from three to two. By substituting $N(t) = T - B(t) - P(t)$, we can describe the system's full dynamics using only the equations for the bacterial biomass ($B$) and predator biomass ($P$):\n$$\n\\frac{dB}{dt} = \\mu_{\\max}\\frac{T - B - P}{K + T - B - P}B - \\frac{aB}{1 + ahB}P - m_B B\n$$\n$$\n\\frac{dP}{dt} = \\left( e\\frac{aB}{1 + ahB} - m_P \\right) P\n$$\nThis 2D system is analyzed to determine the dynamics.\n\n**2. Equilibrium and Stability Analysis**\nThe emergence of limit cycles is often associated with the instability of an interior equilibrium (where $N, B, P > 0$).\nFirst, we find the equilibrium concentration of bacteria, $B^\\ast$, from the predator equation ($\\frac{dP}{dt}=0$). For a non-trivial predator population ($P^\\ast>0$), the term in parentheses must be zero:\n$$ e\\,g(B^\\ast) - m_P = 0 \\implies e\\frac{aB^\\ast}{1 + ahB^\\ast} = m_P $$\nSolving for $B^\\ast$ gives:\n$$ B^\\ast = \\frac{m_P}{a(e - m_P h)} $$\nAn interior equilibrium is only possible if $B^\\ast > 0$, which requires the denominator to be positive, leading to the condition $e > m_P h$. If this condition is not met, the predator cannot sustain itself, and the system collapses to a predator-free state.\n\nThe corresponding equilibrium predator concentration, $P^\\ast$, is found by setting $\\frac{dB}{dt}=0$ and substituting $B^\\ast$ and $N^\\ast = T - B^\\ast - P^\\ast$. This yields a (quadratic) equation for $P^\\ast$.\n\nThe stability of this interior equilibrium is determined by the eigenvalues of the Jacobian matrix of the 2D system. A Hopf bifurcation, which can give rise to a limit cycle, occurs when a pair of complex conjugate eigenvalues crosses the imaginary axis. This typically happens when the trace of the Jacobian matrix changes from negative (stable) to positive (unstable). While this analysis provides insight, the problem requires a definitive classification for each parameter set, for which numerical simulation is the most robust method.\n\n**3. Numerical Classification Method**\nThe core of the solution is to integrate the ODE system numerically and analyze the resulting time series to distinguish between a stable equilibrium and a limit cycle. This procedure is implemented in the provided code and consists of the following steps for each test case:\n1.  **Numerical Integration:** The 2D system of ODEs for $B(t)$ and $P(t)$ is solved numerically (e.g., using `solve_ivp` in Python) from the specified initial condition over a long time interval (e.g., $t=0$ to $t=1000$). This allows the system to settle into its long-term behavior, or attractor.\n2.  **Transient Removal:** The initial part of the simulation is discarded (e.g., data before $t=500$) to ensure the analysis is performed only on the attractor, after any initial transients have decayed.\n3.  **Cycle Detection:** The time series of the predator population, $P(t)$, in the post-transient window is examined against a set of objective criteria:\n    *   **Persistence:** First, we check that the system has not collapsed to a boundary where one or more populations are extinct. This is confirmed by verifying that the average population levels are significantly above zero.\n    *   **Oscillation Amplitude:** To distinguish a true limit cycle from numerical fluctuations around a stable point, the peak-to-trough amplitude of $P(t)$ must be greater than a small, predefined threshold (e.g., 0.01).\n    *   **Sustained Oscillation:** To confirm the oscillations are not a damped transient, we count the number of local maxima (peaks) in the time series. If the number of peaks exceeds a minimum count (e.g., 3), the oscillation is considered sustained.\n4.  **Classification:** If all three criteria (persistence, amplitude, and sustained oscillation) are met, the dynamic behavior is classified as a limit cycle, and the output is $1$. Otherwise, the system is assumed to converge to a stable equilibrium, and the output is $0$.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\n# Fixed parameter values as specified in the problem statement.\nMU_MAX = 1.2\nK = 0.4\nE = 0.45\nM_B = 0.05\nM_P = 0.1\nT = 4.0\n\n# Initial condition for all tests.\nY0 = [0.5, 0.2]  # [B(0), P(0)]\n\ndef model(t, y, a, h):\n    \"\"\"\n    Defines the 2D ODE system for bacterial (B) and predator (P) biomass.\n    The nutrient concentration N is implicitly defined by mass conservation.\n    \"\"\"\n    B, P = y\n    \n    # Enforce non-negativity to handle potential numerical errors near boundaries.\n    B = max(0.0, B)\n    P = max(0.0, P)\n    N = T - B - P\n    N = max(0.0, N)\n\n    # Bacterial growth rate (Monod kinetics)\n    # Check for N=0 to avoid division by zero if K=0, although K0 here.\n    mu_term = MU_MAX * N / (K + N) if (K + N)  0 else 0.0\n    \n    # Predator grazing rate (Holling Type II functional response)\n    # Check for B=0 to avoid division by denominator=0 if h=0, though a,h0.\n    g_B = a * B / (1.0 + a * h * B) if (1.0 + a * h * B)  0 else 0.0\n\n    # The system of Ordinary Differential Equations\n    dBdt = mu_term * B - g_B * P - M_B * B\n    dPdt = E * g_B * P - M_P * P\n    \n    return [dBdt, dPdt]\n\ndef classify_dynamics(a, h):\n    \"\"\"\n    Analyzes the long-term dynamics for a given parameter set (a, h)\n    by integrating the ODE and applying a cycle detection criterion.\n\n    Returns:\n        int: 1 if a limit cycle is detected, 0 otherwise.\n    \"\"\"\n    # Integration time settings\n    t_start, t_end = 0, 1000\n    t_transient = 500\n    \n    # Numerically integrate the ODE system.\n    # 'dense_output=True' is used to get a continuous solution.\n    sol = solve_ivp(\n        model, \n        [t_start, t_end], \n        Y0, \n        args=(a, h), \n        dense_output=True, \n        method='RK45', \n        rtol=1e-6, \n        atol=1e-9\n    )\n\n    # Evaluate the solution in the post-transient window.\n    # Use a sufficient number of points for accurate peak detection.\n    t_eval = np.linspace(t_transient, t_end, 5000)\n    y_eval = sol.sol(t_eval)\n    \n    b_series = y_eval[0, :]\n    p_series = y_eval[1, :]\n\n    # --- Cycle Detection Criterion ---\n\n    # 1. Check for collapse to a boundary equilibrium.\n    # If the mean population is very low, it's not a coexistence cycle.\n    BOUNDARY_TOLERANCE = 1e-5\n    if np.mean(p_series)  BOUNDARY_TOLERANCE or np.mean(b_series)  BOUNDARY_TOLERANCE:\n        return 0\n\n    # 2. Check for significant amplitude.\n    # Distinguishes true oscillations from numerical noise around a stable point.\n    AMPLITUDE_THRESHOLD = 0.01\n    amplitude = np.max(p_series) - np.min(p_series)\n    if amplitude  AMPLITUDE_THRESHOLD:\n        return 0\n\n    # 3. Check for a minimum number of peaks, indicating sustained oscillation.\n    MIN_PEAKS = 3\n    # A peak is detected where the sign of the derivative changes from positive to negative.\n    diffs = np.diff(p_series)\n    # The condition `(diffs[:-1]  0)  (diffs[1:]  0)` reliably finds strict local maxima.\n    num_peaks = np.sum((diffs[:-1] > 0)  (diffs[1:]  0))\n    \n    if num_peaks = MIN_PEAKS:\n        return 1\n    else:\n        return 0\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print the final output.\n    \"\"\"\n    # Test suite from the problem statement\n    test_cases = [\n        (0.2, 0.3),   # Test 1\n        (1.0, 0.5),   # Test 2\n        (3.0, 0.1),   # Test 3\n        (5.0, 0.05),  # Test 4\n        (2.0, 4.0),   # Test 5\n    ]\n\n    results = []\n    for a, h in test_cases:\n        classification = classify_dynamics(a, h)\n        results.append(classification)\n\n    # Print the final result in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\n# Execute the solver\nsolve()\n```", "id": "2473618"}]}