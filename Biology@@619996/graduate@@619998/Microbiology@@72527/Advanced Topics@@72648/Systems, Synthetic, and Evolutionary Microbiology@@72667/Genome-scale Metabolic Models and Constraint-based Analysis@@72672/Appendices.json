{"hands_on_practices": [{"introduction": "At the heart of any genome-scale metabolic model lies the stoichiometric matrix, $S$, which provides a mathematical representation of the network's reaction stoichiometry. This practice is designed to build your foundational understanding of how a biological network is translated into this matrix. By constructing the $S$ matrix for a simple cyclic pathway and analyzing its properties, you will explore the fundamental steady-state constraint $S v = 0$ and discover how the dimension of the null space reveals the metabolic flexibility of the system [@problem_id:2496368].", "problem": "In constraint-based reconstruction and analysis (COBRA) of genome-scale metabolic models, the steady-state assumption imposes a mass-balance constraint on intracellular metabolites expressed as $S \\, v = 0$, where $S$ is the stoichiometric matrix and $v$ is the vector of reaction fluxes. Consider a closed, internal subnetwork with three irreversible reactions $R_1$, $R_2$, $R_3$ and three intracellular metabolites $A$, $B$, $C$:\n- $R_1$: $A \\to B$\n- $R_2$: $B \\to C$\n- $R_3$: $C \\to A$\n\nUsing the definition of the stoichiometric coefficient (negative for consumption, positive for production), construct the stoichiometric matrix $S$ with metabolite order $[A,B,C]$ and reaction order $[R_1,R_2,R_3]$. Then, invoking the steady-state mass balance for a closed internal network (no exchange reactions), determine the dimension of the solution space of $S \\, v = 0$ over the real numbers. Assume all three reactions are irreversible, but report the dimension of the linear solution space (not the feasible cone). Express your final answer as a single integer with no units. No rounding is required.", "solution": "The problem requires the determination of the dimension of the solution space for the steady-state mass-balance equation $S \\, v = 0$ for a given closed metabolic subnetwork. This dimension is mathematically equivalent to the dimension of the null space of the stoichiometric matrix $S$, which is also known as the nullity of $S$.\n\nFirst, we must construct the stoichiometric matrix $S$. The matrix has rows corresponding to metabolites and columns corresponding to reactions. The problem specifies the order of metabolites as $[A, B, C]$ and the order of reactions as $[R_1, R_2, R_3]$. The matrix $S$ will therefore be a $3 \\times 3$ matrix. The entries of the matrix, $S_{ij}$, are the stoichiometric coefficients of metabolite $i$ in reaction $j$. The convention is that coefficients are negative for reactants (consumption) and positive for products (production).\n\nThe reactions are:\n$R_1$: $A \\to B$\n$R_2$: $B \\to C$\n$R_3$: $C \\to A$\n\nLet's construct the columns of $S$ corresponding to each reaction:\nFor reaction $R_1$: $A \\to B$. Metabolite $A$ is consumed (coefficient $-1$), metabolite $B$ is produced (coefficient $+1$), and metabolite $C$ is not involved (coefficient $0$). The first column of $S$ is $\\begin{pmatrix} -1 \\\\ 1 \\\\ 0 \\end{pmatrix}$.\n\nFor reaction $R_2$: $B \\to C$. Metabolite $B$ is consumed (coefficient $-1$), metabolite $C$ is produced (coefficient $+1$), and metabolite $A$ is not involved (coefficient $0$). The second column of $S$ is $\\begin{pmatrix} 0 \\\\ -1 \\\\ 1 \\end{pmatrix}$.\n\nFor reaction $R_3$: $C \\to A$. Metabolite $C$ is consumed (coefficient $-1$), metabolite $A$ is produced (coefficient $+1$), and metabolite $B$ is not involved (coefficient $0$). The third column of $S$ is $\\begin{pmatrix} 1 \\\\ 0 \\\\ -1 \\end{pmatrix}$.\n\nCombining these columns, the stoichiometric matrix $S$ is:\n$$\nS = \\begin{pmatrix}\n-1 & 0 & 1 \\\\\n1 & -1 & 0 \\\\\n0 & 1 & -1\n\\end{pmatrix}\n$$\n\nThe problem asks for the dimension of the solution space of the linear system $S v = 0$, where $v = \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\end{pmatrix}$ is the vector of reaction fluxes. This is the nullity of the matrix $S$, denoted $\\text{nullity}(S)$.\n\nAccording to the rank-nullity theorem, for a matrix with $n$ columns, the following relationship holds:\n$$\n\\text{rank}(S) + \\text{nullity}(S) = n\n$$\nIn our case, the number of columns $n$ is the number of reactions, which is $3$. Thus, we have:\n$$\n\\text{nullity}(S) = 3 - \\text{rank}(S)\n$$\nTo find the nullity, we first determine the rank of $S$, which is the dimension of its row space (or column space). The rows of $S$ are:\n$r_1 = \\begin{pmatrix} -1 & 0 & 1 \\end{pmatrix}$\n$r_2 = \\begin{pmatrix} 1 & -1 & 0 \\end{pmatrix}$\n$r_3 = \\begin{pmatrix} 0 & 1 & -1 \\end{pmatrix}$\n\nWe can check for linear dependence by observing that the sum of the three row vectors is the zero vector:\n$$\nr_1 + r_2 + r_3 = \\begin{pmatrix} -1+1+0 & 0-1+1 & 1+0-1 \\end{pmatrix} = \\begin{pmatrix} 0 & 0 & 0 \\end{pmatrix}\n$$\nSince there is a non-trivial linear combination of the rows that equals the zero vector, the rows are linearly dependent. This implies that $\\text{rank}(S) < 3$.\n\nNow we check if any two rows are linearly independent. Consider $r_1$ and $r_2$. They are linearly independent because neither is a scalar multiple of the other. For instance, to match the first element, we would need $c \\cdot (-1) = 1$, so $c=-1$. But $c \\cdot r_1 = (-1)\\begin{pmatrix} -1 & 0 & 1 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 & -1 \\end{pmatrix} \\neq r_2$. Therefore, the rank of $S$ is at least $2$.\nSince $\\text{rank}(S) < 3$ and $\\text{rank}(S) \\ge 2$, it must be that $\\text{rank}(S) = 2$.\n\nUsing the rank-nullity theorem:\n$$\n\\text{nullity}(S) = 3 - \\text{rank}(S) = 3 - 2 = 1\n$$\nAlternatively, we can solve the system $S v = 0$ directly:\n$$\n\\begin{pmatrix}\n-1 & 0 & 1 \\\\\n1 & -1 & 0 \\\\\n0 & 1 & -1\n\\end{pmatrix}\n\\begin{pmatrix}\nv_1 \\\\\nv_2 \\\\\nv_3\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n0 \\\\\n0 \\\\\n0\n\\end{pmatrix}\n$$\nThis gives the system of linear equations:\n$1) \\quad -v_1 + v_3 = 0 \\implies v_1 = v_3$\n$2) \\quad v_1 - v_2 = 0 \\implies v_1 = v_2$\n$3) \\quad v_2 - v_3 = 0 \\implies v_2 = v_3$\nAll three equations lead to the same condition: $v_1 = v_2 = v_3$. If we let $v_1 = t$ for some real parameter $t$, then any solution vector $v$ can be written as:\n$$\nv = \\begin{pmatrix} t \\\\ t \\\\ t \\end{pmatrix} = t \\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix}\n$$\nThe solution space is the set of all scalar multiples of the vector $\\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix}$. This space is spanned by a single basis vector. Therefore, the dimension of the solution space is $1$. This result corresponds to the existence of one independent steady-state flux mode, which in this case is the cyclic pathway itself, where all reactions must proceed at the same rate to maintain mass balance. The problem notes the reactions are irreversible, but correctly requests the dimension of the linear solution space ($S v = 0$) rather than the feasible cone ($S v = 0, v \\ge 0$), and this dimension is indeed $1$.", "answer": "$$\n\\boxed{1}\n$$", "id": "2496368"}, {"introduction": "While the mass-balance constraint $S v = 0$ defines all mathematically possible steady-state flux distributions, not all of them are biologically or physically realistic. This exercise introduces the critical layer of thermodynamic constraints, governed by the second law of thermodynamics. You will investigate how the actual Gibbs free energy of a reaction, $\\Delta_{r} G'$, determines its feasible direction, demonstrating that even a reaction with a highly favorable standard free energy ($\\Delta_{r} G'^{\\circ}$) can be forced to halt or reverse under specific cellular conditions [@problem_id:2496312].", "problem": "Consider a single intracellular reaction in a genome-scale metabolic model embedded within Flux Balance Analysis (FBA). The reaction has a standard transformed Gibbs free energy change of reaction $\\Delta_{r} G'^{\\circ} = -20 \\ \\text{kJ} \\ \\text{mol}^{-1}$. Under measured intracellular metabolite concentrations at temperature $T = 310 \\ \\text{K}$, the transformed Gibbs free energy change is observed to satisfy the fundamental relationship $\\Delta_{r} G' = \\Delta_{r} G'^{\\circ} + R T \\ln Q$ and is determined to be $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1}$. The reaction is enzyme-capacity constrained in the reconstruction with the two-sided bound $-5 \\le v \\le 10$, where $v$ is the net reaction flux in $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$ and the forward direction is defined to be $v > 0$. Assume steady state and impose thermodynamic feasibility consistent with the second law of thermodynamics.\n\nWhat is the maximum thermodynamically feasible forward net flux for this reaction? Express your final answer in $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$. No rounding is required.", "solution": "The goal is to determine the maximum feasible forward net flux given measured thermodynamics and capacity bounds, starting from first principles of nonequilibrium thermodynamics.\n\nThe foundational relationship linking reaction free energy to concentrations is\n$$\n\\Delta_{r} G' \\;=\\; \\Delta_{r} G'^{\\circ} + R T \\ln Q,\n$$\nwhere $\\Delta_{r} G'$ is the transformed Gibbs free energy change at intracellular conditions, $\\Delta_{r} G'^{\\circ}$ is the standard transformed Gibbs free energy change, $R$ is the ideal gas constant, $T$ is the absolute temperature, and $Q$ is the reaction quotient computed from metabolite activities or concentrations. By the problem statement, this evaluates to $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1}$ at the measured intracellular state.\n\nNext, we invoke the second law of thermodynamics for a chemically reacting nonequilibrium steady state. The entropy production rate associated with a single reaction $r$ is given by a well-established result of nonequilibrium thermodynamics:\n$$\n\\sigma_{r} \\;=\\; -\\frac{v_{r} \\, \\Delta_{r} G'}{T},\n$$\nwhere $v_{r}$ is the net reaction flux (positive in the defined forward direction) and $T$ is the absolute temperature. The second law requires $\\sigma_{r} \\ge 0$ at steady state. Therefore,\n$$\n-\\frac{v_{r} \\, \\Delta_{r} G'}{T} \\;\\ge\\; 0 \\quad \\Longrightarrow \\quad v_{r} \\, \\Delta_{r} G' \\;\\le\\; 0,\n$$\nsince $T > 0$.\n\nWith $\\Delta_{r} G' = +2 \\ \\text{kJ} \\ \\text{mol}^{-1} > 0$, the inequality reduces to\n$$\nv_{r} \\le 0.\n$$\nHence, any thermodynamically feasible net flux must be nonpositive; in particular, there can be no strictly positive forward net flux. The enzyme-capacity bound given is $-5 \\le v \\le 10$ in $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$. Imposing $v \\le 0$ further restricts the feasible region to\n$$\n-5 \\;\\le\\; v \\;\\le\\; 0.\n$$\nThe maximum feasible value of $v$ in the forward (positive) direction is therefore the largest $v$ consistent with both constraints, which is\n$$\nv_{\\text{forward,max}} = 0.\n$$\nThus, the maximum thermodynamically feasible forward net flux is zero in $\\text{mmol} \\ \\text{gDW}^{-1} \\ \\text{h}^{-1}$.", "answer": "$$\\boxed{0}$$", "id": "2496312"}, {"introduction": "One of the most powerful applications of constraint-based modeling is its ability to predict cellular phenotypes arising from genetic perturbations. This advanced practice guides you through the process of identifying a synthetic lethal gene pair—a case where deleting two non-essential genes together proves fatal. By implementing Flux Balance Analysis (FBA) and integrating Gene-Protein-Reaction (GPR) associations, you will simulate in silico gene knockouts and use the model to uncover functional redundancies hidden within parallel metabolic pathways [@problem_id:2496280].", "problem": "You are given a small, mass-balanced metabolic network that captures two parallel pathways, denoted by reactions $R_A$ and $R_B$, each capable of independently supporting biomass production when functioning. The task is to use Gene–Protein–Reaction (GPR) mapping together with Flux Balance Analysis (FBA) to determine viability under gene deletions and to identify synthetic lethal gene pairs. Your program must implement these steps from first principles, starting from steady-state mass balance and the operational definition of metabolic fluxes.\n\nBase definitions to use:\n- At metabolic steady state, intracellular metabolite concentrations do not change appreciably on the time scale of interest. This implies the linear constraint $S \\, v = 0$, where $S$ is the stoichiometric matrix and $v$ is the vector of reaction fluxes.\n- Each reaction flux $v_i$ is constrained by lower and upper bounds, $\\ell_i \\le v_i \\le u_i$.\n- Flux Balance Analysis (FBA) is defined here as the optimization problem of maximizing the biomass production rate subject to the steady-state and bound constraints. Let the biomass reaction be the reaction at index $5$ (zero-based indexing). The linear programming objective is to maximize $v_5$.\n- Gene–Protein–Reaction (GPR) mapping links gene presence/absence to reaction availability using Boolean logic. A reaction is active if and only if its GPR Boolean formula evaluates to true under the given gene deletion set; otherwise, if the reaction is inactive, enforce $v_i = 0$.\n\nNetwork specification:\n- Internal metabolites (rows of $S$): $S$ (substrate), $A$ (intermediate for pathway $R_A$), $C$ (intermediate for pathway $R_B$), $B$ (biomass precursor).\n- Reactions (columns of $S$), in order:\n  $0$: exchange/uptake for $S$ (denoted $\\mathrm{EX\\_S}$), \n  $1$: $S \\to A$ ($R1A$), \n  $2$: $A \\to B$ ($R2A$), \n  $3$: $S \\to C$ ($R1B$), \n  $4$: $C \\to B$ ($R2B$), \n  $5$: $B \\to$ biomass sink ($\\mathrm{Biomass}$).\n- Stoichiometric matrix $S \\in \\mathbb{R}^{4 \\times 6}$, with metabolites ordered as above and reactions ordered as above:\n$$\nS =\n\\begin{bmatrix}\n+1 & -1 & 0 & -1 & 0 & 0 \\\\\n0 & +1 & -1 & 0 & 0 & 0 \\\\\n0 & 0 & 0 & +1 & -1 & 0 \\\\\n0 & 0 & +1 & 0 & +1 & -1\n\\end{bmatrix}.\n$$\n- Flux bounds (in arbitrary units): lower bounds\n$$\n\\ell = \\begin{bmatrix} -10 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0 \\end{bmatrix},\n$$\nupper bounds\n$$\nu = \\begin{bmatrix} 0 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\\\ 1000 \\end{bmatrix}.\n$$\n- GPR rules, using zero-based gene indices. There are $4$ genes, indexed $0,1,2,3$. Use disjunctive normal form (OR-of-AND) for each reaction’s GPR:\n  - Reaction $0$ ($\\mathrm{EX\\_S}$): no gene association (always active).\n  - Reaction $1$ ($R1A$): $[\\,[0]\\,]$.\n  - Reaction $2$ ($R2A$): $[\\,[1]\\,]$.\n  - Reaction $3$ ($R1B$): $[\\,[2]\\,]$.\n  - Reaction $4$ ($R2B$): $[\\,[3]\\,]$.\n  - Reaction $5$ ($\\mathrm{Biomass}$): no gene association (always active).\n  Interpretation: a list like $[\\,[i]\\,]$ means the reaction is active if gene $i$ is present; a clause like $[i,j]$ would mean both genes $i$ and $j$ must be present; OR across clauses means at least one clause must be satisfied for activity.\n\nViability criterion:\n- For a given gene deletion set, evaluate the GPR rules to deactivate any reactions (set both bounds to $0$ for inactive reactions), then perform FBA. A genotype is considered viable if the optimal biomass flux satisfies $v_5^\\star \\ge \\varepsilon$, where $\\varepsilon = 10^{-9}$.\n\nSynthetic lethality:\n- A gene pair $\\{i,j\\}$ is a synthetic lethal pair if the two corresponding single-gene deletions are each viable, but the double deletion of genes $i$ and $j$ is non-viable.\n\nTasks for your program:\n- Implement the GPR evaluation and FBA as defined above.\n- Using the specified network and bounds, evaluate viability for the following gene deletion sets (use zero-based gene indices and sort each set in ascending order):\n  - $D_0 = [\\,]$,\n  - $D_1 = [\\,0\\,]$,\n  - $D_2 = [\\,1\\,]$,\n  - $D_3 = [\\,2\\,]$,\n  - $D_4 = [\\,3\\,]$,\n  - $D_5 = [\\,0,2\\,]$,\n  - $D_6 = [\\,0,3\\,]$,\n  - $D_7 = [\\,1,2\\,]$,\n  - $D_8 = [\\,1,3\\,]$.\n- Over the full gene set $\\{0,1,2,3\\}$, enumerate all size-$2$ gene pairs and return those that are synthetic lethal according to the definition above. Each pair must be reported as a sorted list $[i,j]$ with $i < j$. The list of pairs must itself be sorted in lexicographic order.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. The entries, in order, are the $9$ boolean viability results for $D_0$ through $D_8$, followed by a single list containing all synthetic lethal pairs as lists of two integers. For example, an output with placeholders would look like\n\"[True,True,False,...,[[0,2],[1,3]]]\" (do not print the quotes).", "solution": "The problem presented is a well-posed exercise in computational systems biology, requiring the application of Flux Balance Analysis (FBA) under genetic constraints defined by Gene-Protein-Reaction (GPR) mappings. The task is to determine cellular viability for various genotypes and to identify synthetic lethal gene pairs. The solution is derived from first principles of metabolic steady-state and linear optimization.\n\nThe core of the problem lies in solving a linear programming (LP) problem. The state of the metabolic network is described by the vector of reaction fluxes, $v \\in \\mathbb{R}^6$. At steady state, the concentrations of internal metabolites are constant. This imposes the mass balance constraint, which is a system of linear equations:\n$$S v = 0$$\nHere, $S \\in \\mathbb{R}^{4 \\times 6}$ is the stoichiometric matrix, where rows correspond to metabolites and columns to reactions. The vector $v$ contains the flux of each reaction. The equation $S v = 0$ ensures that for each internal metabolite, the total rate of production equals the total rate of consumption.\n\nFurthermore, each flux $v_i$ is constrained by thermodynamic and enzymatic capacity limitations. These are expressed as lower and upper bounds for each flux:\n$$ \\ell_i \\le v_i \\le u_i $$\nFor this problem, the bounds are given by the vectors $\\ell = [-10, 0, 0, 0, 0, 0]^T$ and $u = [0, 1000, 1000, 1000, 1000, 1000]^T$. Note that the uptake reaction $\\mathrm{EX\\_S}$ (reaction $0$) has a negative flux, representing consumption of substrate from the environment, with a maximum rate of $10$ units. All internal reactions are irreversible, with lower bounds of $0$.\n\nThe biological objective of the cell is assumed to be the maximization of its growth rate. In FBA, this is modeled as maximizing the flux through a synthetic biomass reaction, which drains precursors in stoichiometrically appropriate ratios. In this simplified model, this is reaction $5$, and the objective is to maximize $v_5$.\n\nThe complete FBA problem is thus formulated as the following LP:\n$$\n\\begin{array}{ll}\n\\underset{v}{\\text{maximize}} & c^T v \\\\\n\\text{subject to} & S v = 0 \\\\\n& \\ell \\le v \\le u\n\\end{array}\n$$\nwhere the objective vector is $c = [0, 0, 0, 0, 0, 1]^T$. Standard LP solvers typically perform minimization, so we solve the equivalent problem of minimizing $-c^T v$.\n\nGene deletions are incorporated by evaluating GPR rules. A GPR rule is a Boolean expression that determines if a reaction is active based on the presence of its associated genes. If a GPR expression evaluates to false for a reaction $i$ due to a gene deletion, the reaction is considered inactive. This is enforced by setting its flux bounds to zero: $\\ell_i = 0$ and $u_i = 0$, which forces $v_i=0$. For the given network, the GPRs are simple one-to-one mappings: gene $0 \\to$ reaction $1$, gene $1 \\to$ reaction $2$, gene $2 \\to$ reaction $3$, and gene $3 \\to$ reaction $4$. For example, if gene $0$ is deleted, reaction $1$ becomes inactive.\n\nA genotype, specified by a set of deleted genes, is considered viable if the resulting optimal biomass flux $v_5^*$ satisfies $v_5^* \\ge \\varepsilon$, where the viability threshold is $\\varepsilon = 10^{-9}$.\n\nA gene pair $\\{i,j\\}$ is defined as synthetic lethal if the single-gene deletions of $i$ and $j$ are both viable, but the double-gene deletion of $\\{i,j\\}$ is non-viable. This indicates that genes $i$ and $j$ participate in parallel, redundant pathways that are essential in combination.\n\nThe solution strategy is as follows:\n1.  For a given set of gene deletions, update the default flux bounds $\\ell$ and $u$ according to the GPR rules.\n2.  Solve the corresponding FBA linear programming problem to find the maximum biomass flux $v_5^*$.\n3.  Determine viability by comparing $v_5^*$ to the threshold $\\varepsilon$.\n4.  Apply this procedure to evaluate the viability of the nine specified deletion sets.\n5.  To identify synthetic lethal pairs, first assess the viability of all single-gene deletions. Then, for every pair of genes $\\{i,j\\}$ whose individual deletions are viable, assess the viability of the double-deletion $\\{i,j\\}$. If the double-deletion is non-viable, $\\{i,j\\}$ is a synthetic lethal pair.\n\nThis systematic application of FBA provides the required viability data and identifies the functional redundancies encoded in the network structure and GPR logic. The provided network consists of two parallel pathways (Pathway A: reactions $1,2$, governed by genes $0,1$; Pathway B: reactions $3,4$, governed by genes $2,3$) that convert substrate $S$ into biomass precursor $B$. Deleting one gene from each pathway simultaneously will block both routes to biomass production, resulting in a lethal phenotype, which is the basis for synthetic lethality in this system.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import linprog\nfrom itertools import combinations\n\ndef solve():\n    \"\"\"\n    Solves the metabolic network analysis problem by implementing Flux Balance Analysis (FBA)\n    with Gene-Protein-Reaction (GPR) constraints to determine viability and synthetic lethality.\n    \"\"\"\n    \n    # --- Model Definition ---\n    # Stoichiometric matrix S\n    S = np.array([\n        [1, -1, 0, -1, 0, 0],  # Substrate S\n        [0, 1, -1, 0, 0, 0],  # Intermediate A\n        [0, 0, 0, 1, -1, 0],  # Intermediate C\n        [0, 0, 1, 0, 1, -1]   # Precursor B\n    ])\n\n    # Default flux bounds (lower, upper)\n    base_bounds = [\n        (-10, 0),    # 0: EX_S\n        (0, 1000),   # 1: R1A\n        (0, 1000),   # 2: R2A\n        (0, 1000),   # 3: R1B\n        (0, 1000),   # 4: R2B\n        (0, 1000)    # 5: Biomass\n    ]\n\n    # GPR rules: maps gene index to the reaction index it controls.\n    # A deleted gene knocks out its associated reaction.\n    gpr_map = {\n        0: 1,  # Gene 0 -> R1A (Reaction 1)\n        1: 2,  # Gene 1 -> R2A (Reaction 2)\n        2: 3,  # Gene 2 -> R1B (Reaction 3)\n        3: 4,  # Gene 3 -> R2B (Reaction 4)\n    }\n\n    # FBA objective: maximize biomass flux (v_5). Scipy minimizes, so we minimize -v_5.\n    c = np.array([0, 0, 0, 0, 0, -1])\n\n    # Equality constraints: Sv = 0\n    A_eq = S\n    b_eq = np.zeros(S.shape[0])\n\n    # Viability threshold\n    epsilon = 1e-9\n\n    # Cache for memoizing FBA results to avoid redundant computations\n    viability_cache = {}\n\n    def is_viable(deleted_genes_tuple):\n        \"\"\"\n        Determines if a genotype is viable by running FBA.\n        The input is a tuple of sorted, unique gene indices to be deleted.\n        \"\"\"\n        if deleted_genes_tuple in viability_cache:\n            return viability_cache[deleted_genes_tuple]\n\n        # Apply GPR rules to update bounds\n        current_bounds = list(base_bounds)\n        for gene_idx in deleted_genes_tuple:\n            if gene_idx in gpr_map:\n                reaction_idx = gpr_map[gene_idx]\n                current_bounds[reaction_idx] = (0, 0)\n        \n        # Solve the LP\n        res = linprog(c=c, A_eq=A_eq, b_eq=b_eq, bounds=current_bounds, method='highs')\n\n        max_biomass_flux = 0.0\n        if res.success:\n            max_biomass_flux = -res.fun\n        \n        # Determine and cache viability\n        viable = max_biomass_flux >= epsilon\n        viability_cache[deleted_genes_tuple] = viable\n        return viable\n\n    # --- Task 1: Evaluate viability for specified gene deletion sets ---\n    deletion_sets_to_test = [\n        [], [0], [1], [2], [3], [0, 2], [0, 3], [1, 2], [1, 3]\n    ]\n    \n    viability_results = []\n    for d_set in deletion_sets_to_test:\n        # Use a sorted tuple as the cache key\n        d_tuple = tuple(sorted(d_set))\n        viability_results.append(is_viable(d_tuple))\n\n    # --- Task 2: Identify all synthetic lethal gene pairs ---\n    num_genes = 4\n    all_genes = range(num_genes)\n    synthetic_lethal_pairs = []\n\n    # Check all pairs of genes {i, j} with i < j\n    for i, j in combinations(all_genes, 2):\n        # A pair is synthetic lethal if single deletions are viable but the double is not.\n        single_i_viable = is_viable((i,))\n        single_j_viable = is_viable((j,))\n        double_ij_viable = is_viable((i, j))\n        \n        if single_i_viable and single_j_viable and not double_ij_viable:\n            synthetic_lethal_pairs.append([i, j])\n\n    # The pairs are already sorted by `itertools.combinations`.\n\n    # --- Final Output Formatting ---\n    # Combine the 9 viability booleans and the list of SL pairs\n    final_output_list = viability_results + [synthetic_lethal_pairs]\n\n    # Format the list to a string with no spaces, as per the example\n    str_results = []\n    for item in final_output_list:\n        # Convert item to string and remove all whitespace\n        str_item = str(item).replace(\" \", \"\")\n        str_results.append(str_item)\n    \n    print(f\"[{','.join(str_results)}]\")\n\nsolve()\n```", "id": "2496280"}]}