{"hands_on_practices": [{"introduction": "To quantitatively understand gene regulation, we must first master its fundamental building blocks. This practice guides you through the process of deriving the input-output function for simple repression, perhaps the most basic motif in any regulatory network. By applying principles of thermodynamic equilibrium to the binding of a repressor to DNA, you will derive the classic mathematical relationship that connects the concentration of a transcription factor to the fold-change in gene expression, a cornerstone of quantitative biology [@problem_id:2497045].", "problem": "A canonical simple repression motif in bacteria consists of a single operator site that overlaps the promoter such that a single repressor transcription factor (TF) sterically excludes RNA polymerase when bound. Consider a well-mixed cell at constant volume in which the repressor binds and unbinds the operator rapidly relative to transcription initiation and elongation. Let $R$ denote the free repressor concentration and let $K$ denote the equilibrium dissociation constant of the repressor for the operator. Assume that transcription occurs only when the operator is not bound by the repressor and that the basal transcription initiation rate of the unbound promoter does not depend on $R$.\n\nStarting only from the equilibrium law of mass action for a single binding reaction and conservation of operator sites, derive the fold-change in expression, defined as the ratio $f$ of the mean transcription rate in the presence of repressor at concentration $R$ to the mean transcription rate in the absence of repressor. Express your final result as a closed-form analytic function of $R$ and $K$. Briefly state the minimal physical assumptions under which your derivation is valid, emphasizing the equilibrium binding rationale.\n\nYour final answer must be a single closed-form analytic expression for $f$ with no units. No numerical evaluation is required and no rounding is needed.", "solution": "The system contains a single operator site that can be either free or bound by the repressor transcription factor. We denote the operator by $O$, the repressor by $R$, and the repressor–operator complex by $RO$. The reaction is\n$$\nR + O \\rightleftharpoons RO.\n$$\nAt thermodynamic equilibrium, the law of mass action defines the dissociation constant $K$ by\n$$\nK \\equiv \\frac{[R][O]}{[RO]},\n$$\nwhere $[R]$ is the free repressor concentration, $[O]$ is the concentration of free operator, and $[RO]$ is the concentration of the bound complex. Conservation of operator sites gives\n$$\n[O]_{T} = [O] + [RO],\n$$\nwhere $[O]_{T}$ is the total concentration of operator sites, which is constant.\n\nWe solve for the fraction of time the operator is free. From the definition of $K$,\n$$\n[RO] = \\frac{[R][O]}{K}.\n$$\nSubstitute this into the conservation relation:\n$$\n[O]_{T} = [O] + \\frac{[R][O]}{K} = [O]\\left(1 + \\frac{[R]}{K}\\right).\n$$\nRearrange to obtain the fraction of free operator,\n$$\np_{\\mathrm{free}} \\equiv \\frac{[O]}{[O]_{T}} = \\frac{1}{1 + \\frac{[R]}{K}}.\n$$\nBy assumption, transcription initiation occurs only when the operator is free and the initiation rate of the unbound promoter is independent of $R$. Therefore, the mean transcription rate in the presence of repressor is proportional to $p_{\\mathrm{free}}$. In the absence of repressor, $R = 0$, the operator is always free in this two-state model, so the mean transcription rate is the basal rate, proportional to $p_{\\mathrm{free}}(R=0) = 1$.\n\nThus, the fold-change $f$—defined as the ratio of the mean transcription rate at concentration $R$ to that at $R = 0$—is\n$$\nf = \\frac{p_{\\mathrm{free}}(R)}{p_{\\mathrm{free}}(0)} = \\frac{\\frac{1}{1 + \\frac{R}{K}}}{1} = \\frac{1}{1 + \\frac{R}{K}}.\n$$\n\nAssumptions underlying this derivation include:\n- Rapid equilibration of binding relative to transcription initiation and elongation (quasi-equilibrium), so that the law of mass action applies to $R + O \\rightleftharpoons RO$ on the timescale of transcriptional output.\n- A single, noncooperative binding site with mutually exclusive occupancy by repressor and RNA polymerase, such that transcription occurs only in the repressor-unbound state and the initiation rate of that state does not depend on $R$.\n- The free repressor concentration $R$ is effectively constant and not significantly depleted by binding to the single operator site.\n- Well-mixed conditions with no additional DNA-looping or multi-state promoter effects; any nonspecific binding or allosteric modulation is absorbed into an effective $K$.\n\nUnder these conditions, the fold-change is given by the closed-form expression above.", "answer": "$$\\boxed{\\frac{1}{1 + R/K}}$$", "id": "2497045"}, {"introduction": "While repression provides a simple 'off' switch, many bacterial promoters are actively turned 'on' by activators that recruit RNA polymerase. This exercise extends the thermodynamic framework to model transcriptional activation, incorporating the crucial concept of cooperativity between a transcription factor and the transcription machinery. By modeling the well-studied CRP activation system, you will learn how to account for multiple binding states and interaction energies to predict the strength of gene activation [@problem_id:2497029].", "problem": "Consider a promoter in Escherichia coli regulated by the global activator cyclic adenosine monophosphate receptor protein (CRP). The promoter has a single CRP binding site adjacent to a single RNA polymerase (RNAP) binding site. Assume the following biological and physical principles as the fundamental base:\n\n- Transcription initiation rate is proportional to the equilibrium probability that RNAP occupies its promoter site.\n- At equilibrium, the statistical weight of a binding state equals the product of the activities of the bound species divided by their dissociation constants, multiplied by a Boltzmann factor for any interaction energy between simultaneously bound factors.\n- CRP and RNAP can bind simultaneously without steric exclusion, and when both are bound, there is a protein–protein interaction energy denoted by $\\Delta \\epsilon_{\\text{int}}$.\n- The promoter is in the weak-RNAP-binding regime in the absence of CRP, meaning the basal RNAP occupancy is small.\n\nLet $[\\text{CRP}]$ be the bulk concentration of CRP, $K_{A}$ be the dissociation constant for CRP binding to its site, and $K_{R}$ be the dissociation constant for RNAP binding to its site. Define $\\beta = 1/(k_{B} T)$, where $k_{B}$ is the Boltzmann constant and $T$ is the absolute temperature. Let the RNAP and CRP dimensionless activities be $p = [\\text{RNAP}]/K_{R}$ and $a = [\\text{CRP}]/K_{A}$, respectively. When both CRP and RNAP are bound, the interaction contributes a Boltzmann factor $w = \\exp(-\\beta \\Delta \\epsilon_{\\text{int}})$ to the state weight.\n\nUsing these assumptions and starting from equilibrium statistical mechanics of promoter occupancy, derive a closed-form analytical expression for the fold-change in transcription defined as\n$$\nf \\equiv \\frac{\\text{RNAP occupancy with CRP present}}{\\text{RNAP occupancy with CRP absent}},\n$$\nin the weak-RNAP-binding limit. Your final expression must be written in terms of $a$ and $w$ only. Clearly state how each parameter you introduce arises from the model. Express the final answer as a single closed-form symbolic expression. No numerical evaluation is required.", "solution": "We begin from the principle that the transcription initiation rate is proportional to the equilibrium probability that RNA polymerase (RNAP) occupies its promoter site. In the thermodynamic occupancy framework, this probability is computed from the partition function that sums the statistical weights of all promoter states. The statistical weight of each state is the product of the dimensionless activities of the bound factors, divided by the dissociation constants, and multiplied by any Boltzmann factor for interaction energies.\n\nWe enumerate the promoter states under the assumptions given:\n\n- State $\\mathcal{S}_{0}$: Neither RNAP nor cyclic adenosine monophosphate receptor protein (CRP) bound. Weight $1$.\n- State $\\mathcal{S}_{R}$: RNAP only bound. Weight $p$, where $p = [\\text{RNAP}]/K_{R}$.\n- State $\\mathcal{S}_{A}$: CRP only bound. Weight $a$, where $a = [\\text{CRP}]/K_{A}$.\n- State $\\mathcal{S}_{AR}$: Both RNAP and CRP bound, with interaction energy $\\Delta \\epsilon_{\\text{int}}$. Weight $p \\, a \\, w$, where $w = \\exp(-\\beta \\Delta \\epsilon_{\\text{int}})$ and $\\beta = 1/(k_{B} T)$.\n\nWith CRP present, the partition function is\n$$\nZ_{\\text{with}} = 1 + p + a + p a w.\n$$\nThe probability that RNAP is bound (with CRP present) is the sum of the weights of states containing RNAP divided by the partition function:\n$$\nP_{R,\\text{with}} = \\frac{p + p a w}{1 + p + a + p a w}.\n$$\n\nWith CRP absent, we set $a = 0$ in the above enumeration. The partition function reduces to\n$$\nZ_{\\text{without}} = 1 + p,\n$$\nand the RNAP occupancy without CRP is\n$$\nP_{R,\\text{without}} = \\frac{p}{1 + p}.\n$$\n\nBy definition, the fold-change is\n$$\nf \\equiv \\frac{P_{R,\\text{with}}}{P_{R,\\text{without}}}\n= \\frac{\\dfrac{p + p a w}{1 + p + a + p a w}}{\\dfrac{p}{1 + p}}\n= \\frac{(p + p a w)(1 + p)}{p(1 + p + a + p a w)}.\n$$\nWe can cancel $p$ in numerator and denominator:\n$$\nf = \\frac{(1 + a w)(1 + p)}{1 + p + a + p a w}.\n$$\n\nWe now invoke the weak-RNAP-binding regime in the absence of CRP. This means $p \\ll 1$, such that terms of order $p$ in sums can be neglected to leading order. Applying this approximation to the expression above, we drop terms proportional to $p$ in numerator and denominator wherever they appear additively with order-$1$ terms:\n$$\nf \\approx \\frac{(1 + a w)}{1 + a}.\n$$\n\nThis is the desired closed-form expression in terms of $a$ and $w$ only.\n\nInterpretation of parameters:\n- $a = [\\text{CRP}]/K_{A}$ is the dimensionless activity (or occupancy parameter) of CRP at its binding site; $K_{A}$ is the CRP–DNA dissociation constant. Larger $a$ implies higher CRP occupancy.\n- $w = \\exp(-\\beta \\Delta \\epsilon_{\\text{int}})$ is the dimensionless cooperativity factor describing the energetic interaction between CRP and RNAP when both are bound. For favorable recruitment, $\\Delta \\epsilon_{\\text{int}} < 0$, implying $w > 1$.\n- $\\beta = 1/(k_{B} T)$ sets the energy scale for thermal fluctuations.\n\nThus, under weak basal RNAP binding, the fold-change depends only on the CRP occupancy parameter $a$ and the interaction cooperativity $w$, yielding a compact analytical expression.", "answer": "$$\\boxed{\\frac{1 + a\\,w}{1 + a}}$$", "id": "2497029"}, {"introduction": "Regulatory networks are not static; they are dynamic systems that respond to changing conditions over time. This practice shifts our focus from equilibrium steady-states to the transient dynamics of a global stress response network, using the bacterial heat shock regulon as a model system. By numerically solving a set of coupled ordinary differential equations, you will simulate the interplay between misfolded proteins, the sigma factor RpoH, and chaperones, gaining hands-on experience with the systems biology approach to modeling cellular adaptation [@problem_id:2496959].", "problem": "A bacterium responds to a rapid increase in temperature by activating the heat shock sigma factor RpoH (also called sigma-32), which induces transcription of heat shock protein (Hsp) chaperone genes. Consider a minimal dynamical model grounded in the Central Dogma of Molecular Biology and mass-action kinetics for molecular interactions. Let $U(t)$ denote the concentration (in $\\mu M$) of misfolded proteins acting as the activating signal, $R(t)$ denote the concentration (in $\\mu M$) of active RpoH, and $H(t)$ denote the concentration (in $\\mu M$) of an aggregate Hsp chaperone pool. Assume time $t$ is in seconds. The model consists of three coupled ordinary differential equations derived from first-order decay and second-order collision terms:\n- Misfolded protein load decreases spontaneously and through chaperone-assisted refolding:\n$$\\frac{dU}{dt} = -k_{u0}\\,U - k_{uH}\\,H\\,U.$$\n- Active RpoH is stabilized in proportion to the misfolded protein load and is lost by first-order inactivation and second-order sequestration by chaperones:\n$$\\frac{dR}{dt} = k_{a}\\,U - k_{r}\\,R - k_{s}\\,H\\,R.$$\n- Chaperones are produced in proportion to active RpoH and diluted or degraded with first-order kinetics:\n$$\\frac{dH}{dt} = k_{hR}\\,R - k_{hdeg}\\,H.$$\nAll parameters are nonnegative. The units are: $k_{u0}$ in $s^{-1}$, $k_{uH}$ in $\\mu M^{-1}\\,s^{-1}$, $k_{a}$ in $s^{-1}$, $k_{r}$ in $s^{-1}$, $k_{s}$ in $\\mu M^{-1}\\,s^{-1}$, $k_{hR}$ in $s^{-1}$, $k_{hdeg}$ in $s^{-1}$. Initial conditions at $t=0$ seconds are $U(0)=U_{0}$, $R(0)=R_{0}$, $H(0)=H_{0}$.\n\nTask. For each parameter set in the test suite below, numerically integrate the system from $t=0$ to $t=t_{\\mathrm{end}}$ using a stiff-capable method with absolute tolerance $10^{-9}$ and relative tolerance $10^{-7}$. Compute the peak chaperone concentration\n$$H_{\\max} = \\max_{t \\in [0,\\,t_{\\mathrm{end}}]} H(t).$$\nExpress each $H_{\\max}$ in $\\mu M$ as a decimal rounded to three decimal places.\n\nTest suite. Use the following four cases, which cover a typical response, a strong heat shock, removal of sequestration feedback, and high basal chaperone with faster dilution:\n- Case A (typical heat shock):\n  - $U_{0} = 2.0\\,\\mu M$, $R_{0} = 0.05\\,\\mu M$, $H_{0} = 3.0\\,\\mu M$.\n  - $k_{u0} = 0.0012\\,s^{-1}$, $k_{uH} = 0.0010\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{a} = 0.0060\\,s^{-1}$, $k_{r} = 0.0050\\,s^{-1}$, $k_{s} = 0.0020\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{hR} = 0.0012\\,s^{-1}$, $k_{hdeg} = 0.00012\\,s^{-1}$.\n  - $t_{\\mathrm{end}} = 1800\\,s$.\n- Case B (stronger heat shock input):\n  - $U_{0} = 8.0\\,\\mu M$, $R_{0} = 0.05\\,\\mu M$, $H_{0} = 3.0\\,\\mu M$.\n  - $k_{u0} = 0.0012\\,s^{-1}$, $k_{uH} = 0.0012\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{a} = 0.0060\\,s^{-1}$, $k_{r} = 0.0050\\,s^{-1}$, $k_{s} = 0.0020\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{hR} = 0.0012\\,s^{-1}$, $k_{hdeg} = 0.00012\\,s^{-1}$.\n  - $t_{\\mathrm{end}} = 1800\\,s$.\n- Case C (no sequestration feedback):\n  - $U_{0} = 3.0\\,\\mu M$, $R_{0} = 0.05\\,\\mu M$, $H_{0} = 3.0\\,\\mu M$.\n  - $k_{u0} = 0.0010\\,s^{-1}$, $k_{uH} = 0.0010\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{a} = 0.0060\\,s^{-1}$, $k_{r} = 0.0050\\,s^{-1}$, $k_{s} = 0.0000\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{hR} = 0.0012\\,s^{-1}$, $k_{hdeg} = 0.00012\\,s^{-1}$.\n  - $t_{\\mathrm{end}} = 1800\\,s$.\n- Case D (high basal chaperone and faster dilution):\n  - $U_{0} = 4.0\\,\\mu M$, $R_{0} = 0.05\\,\\mu M$, $H_{0} = 8.0\\,\\mu M$.\n  - $k_{u0} = 0.0012\\,s^{-1}$, $k_{uH} = 0.0015\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{a} = 0.0055\\,s^{-1}$, $k_{r} = 0.0045\\,s^{-1}$, $k_{s} = 0.0015\\,\\mu M^{-1}\\,s^{-1}$.\n  - $k_{hR} = 0.0010\\,s^{-1}$, $k_{hdeg} = 0.00030\\,s^{-1}$.\n  - $t_{\\mathrm{end}} = 1800\\,s$.\n\nFinal output format. Your program should produce a single line of output containing the four results as a comma-separated list enclosed in square brackets, in the order A, B, C, D, for example, \"[xA,xB,xC,xD]\". Each value must be in $\\mu M$, rounded to three decimal places.", "solution": "The problem statement is subjected to validation.\n\nStep 1: Extract Givens.\nThe system of coupled ordinary differential equations is given by:\n$$\n\\frac{dU}{dt} = -k_{u0}\\,U - k_{uH}\\,H\\,U\n$$\n$$\n\\frac{dR}{dt} = k_{a}\\,U - k_{r}\\,R - k_{s}\\,H\\,R\n$$\n$$\n\\frac{dH}{dt} = k_{hR}\\,R - k_{hdeg}\\,H\n$$\nwhere $U(t)$, $R(t)$, and $H(t)$ are concentrations in $\\mu M$ and $t$ is time in seconds.\nThe initial conditions are $U(0)=U_{0}$, $R(0)=R_{0}$, $H(0)=H_{0}$.\nThe task is to numerically integrate the system from $t=0$ to $t=t_{\\mathrm{end}}$ and find $H_{\\max} = \\max_{t \\in [0,\\,t_{\\mathrm{end}}]} H(t)$.\nThe integration parameters are absolute tolerance $10^{-9}$ and relative tolerance $10^{-7}$.\n\nTest cases are provided:\n- Case A: $U_{0} = 2.0$, $R_{0} = 0.05$, $H_{0} = 3.0$; $k_{u0} = 0.0012$, $k_{uH} = 0.0010$, $k_{a} = 0.0060$, $k_{r} = 0.0050$, $k_{s} = 0.0020$, $k_{hR} = 0.0012$, $k_{hdeg} = 0.00012$; $t_{\\mathrm{end}} = 1800$.\n- Case B: $U_{0} = 8.0$, $R_{0} = 0.05$, $H_{0} = 3.0$; $k_{u0} = 0.0012$, $k_{uH} = 0.0012$, $k_{a} = 0.0060$, $k_{r} = 0.0050$, $k_{s} = 0.0020$, $k_{hR} = 0.0012$, $k_{hdeg} = 0.00012$; $t_{\\mathrm{end}} = 1800$.\n- Case C: $U_{0} = 3.0$, $R_{0} = 0.05$, $H_{0} = 3.0$; $k_{u0} = 0.0010$, $k_{uH} = 0.0010$, $k_{a} = 0.0060$, $k_{r} = 0.0050$, $k_{s} = 0.0000$, $k_{hR} = 0.0012$, $k_{hdeg} = 0.00012$; $t_{\\mathrm{end}} = 1800$.\n- Case D: $U_{0} = 4.0$, $R_{0} = 0.05$, $H_{0} = 8.0$; $k_{u0} = 0.0012$, $k_{uH} = 0.0015$, $k_{a} = 0.0055$, $k_{r} = 0.0045$, $k_{s} = 0.0015$, $k_{hR} = 0.0010$, $k_{hdeg} = 0.00030$; $t_{\\mathrm{end}} = 1800$.\n\nAll units are specified and consistent. The final output must be a list of $H_{\\max}$ values for each case, rounded to three decimal places.\n\nStep 2: Validate Using Extracted Givens.\nThe problem is scientifically grounded, being a standard kinetic model of a biological regulatory network based on mass-action principles. It is well-posed as an initial value problem (IVP) for a system of ordinary differential equations with specified parameters and initial conditions. The functions on the right-hand side of the ODEs are polynomials, which are continuous and locally Lipschitz, guaranteeing the existence and uniqueness of a local solution. The problem statement is objective, complete, and contains no contradictions. The parameters and their units are physically consistent. Therefore, the problem is valid.\n\nStep 3: Verdict and Action.\nThe problem is valid. A solution will be constructed.\n\nSolution Methodology.\nThe problem requires the numerical solution of a system of three coupled, nonlinear, first-order ordinary differential equations. Let the state vector be $\\mathbf{y}(t) = [y_0(t), y_1(t), y_2(t)]^T = [U(t), R(t), H(t)]^T$. The system can be written in vector form as $\\frac{d\\mathbf{y}}{dt} = f(t, \\mathbf{y}, \\mathbf{p})$, where $\\mathbf{p}$ is the vector of system parameters.\n\nThe system is given by:\n$$\nf_0(t, \\mathbf{y}, \\mathbf{p}) = \\frac{dU}{dt} = -k_{u0}\\,U - k_{uH}\\,H\\,U\n$$\n$$\nf_1(t, \\mathbf{y}, \\mathbf{p}) = \\frac{dR}{dt} = k_{a}\\,U - k_{r}\\,R - k_{s}\\,H\\,R\n$$\n$$\nf_2(t, \\mathbf{y}, \\mathbf{p}) = \\frac{dH}{dt} = k_{hR}\\,R - k_{hdeg}\\,H\n$$\n\nThis initial value problem will be solved using a numerical integrator. The problem statement suggests the system may be stiff, which arises when there are widely different time scales in the dynamics. The function `scipy.integrate.solve_ivp` from the SciPy library is suitable for this task. The method `'LSODA'` is chosen, as it is a robust adaptive solver that automatically detects stiffness and switches between non-stiff (Adams) and stiff (BDF) methods, making it a good general-purpose choice. The specified integration tolerances, `rtol=$10^{-7}$` and `atol=$10^{-9}$`, will be used to ensure high accuracy.\n\nThe objective is to find the maximum concentration of the chaperone pool, $H_{\\max}$, over the time interval $[0, t_{\\mathrm{end}}]$. A simple `max` of the solution array at the solver's discrete time steps may not be accurate, as the true peak could occur between these steps. To address this, we use the `dense_output=True` option in `solve_ivp`. This provides a continuous interpolation of the solution over the integration interval. We can then evaluate this interpolation on a fine-grained time grid to find a highly accurate approximation of the true maximum. A grid of $20000$ points over the $1800 \\, s$ interval is more than sufficient for this purpose.\n\nFor each of the four test cases, the corresponding parameter set and initial conditions are used to define and solve the IVP. The maximum value of the $H(t)$ component is extracted from the dense solution, rounded to three decimal places, and collected. Finally, the results are formatted into the required output string.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves the heat shock response ODE system for four different test cases\n    and computes the peak chaperone concentration for each.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A (typical heat shock)\n        {\n            \"name\": \"A\",\n            \"y0\": [2.0, 0.05, 3.0],  # [U0, R0, H0]\n            \"params\": {\n                \"k_u0\": 0.0012, \"k_uH\": 0.0010,\n                \"k_a\": 0.0060, \"k_r\": 0.0050, \"k_s\": 0.0020,\n                \"k_hR\": 0.0012, \"k_hdeg\": 0.00012\n            },\n            \"t_end\": 1800.0\n        },\n        # Case B (stronger heat shock input)\n        {\n            \"name\": \"B\",\n            \"y0\": [8.0, 0.05, 3.0],\n            \"params\": {\n                \"k_u0\": 0.0012, \"k_uH\": 0.0012,\n                \"k_a\": 0.0060, \"k_r\": 0.0050, \"k_s\": 0.0020,\n                \"k_hR\": 0.0012, \"k_hdeg\": 0.00012\n            },\n            \"t_end\": 1800.0\n        },\n        # Case C (no sequestration feedback)\n        {\n            \"name\": \"C\",\n            \"y0\": [3.0, 0.05, 3.0],\n            \"params\": {\n                \"k_u0\": 0.0010, \"k_uH\": 0.0010,\n                \"k_a\": 0.0060, \"k_r\": 0.0050, \"k_s\": 0.0000,\n                \"k_hR\": 0.0012, \"k_hdeg\": 0.00012\n            },\n            \"t_end\": 1800.0\n        },\n        # Case D (high basal chaperone and faster dilution)\n        {\n            \"name\": \"D\",\n            \"y0\": [4.0, 0.05, 8.0],\n            \"params\": {\n                \"k_u0\": 0.0012, \"k_uH\": 0.0015,\n                \"k_a\": 0.0055, \"k_r\": 0.0045, \"k_s\": 0.0015,\n                \"k_hR\": 0.0010, \"k_hdeg\": 0.00030\n            },\n            \"t_end\": 1800.0\n        }\n    ]\n\n    results = []\n\n    def heat_shock_ode(t, y, p):\n        \"\"\"\n        Defines the system of ODEs for the heat shock response.\n        y = [U, R, H]\n        p = dictionary of parameters\n        \"\"\"\n        U, R, H = y\n        \n        dU_dt = -p[\"k_u0\"] * U - p[\"k_uH\"] * H * U\n        dR_dt = p[\"k_a\"] * U - p[\"k_r\"] * R - p[\"k_s\"] * H * R\n        dH_dt = p[\"k_hR\"] * R - p[\"k_hdeg\"] * H\n        \n        return [dU_dt, dR_dt, dH_dt]\n\n    for case in test_cases:\n        y0 = case[\"y0\"]\n        params = case[\"params\"]\n        t_span = (0, case[\"t_end\"])\n        \n        # Integrate the ODE system using a stiff-capable solver\n        sol = solve_ivp(\n            fun=heat_shock_ode,\n            t_span=t_span,\n            y0=y0,\n            method='LSODA',\n            args=(params,),\n            dense_output=True,\n            rtol=1e-7,\n            atol=1e-9\n        )\n        \n        # To find the true maximum, evaluate the dense solution on a fine grid\n        t_eval = np.linspace(t_span[0], t_span[1], 20000)\n        y_eval = sol.sol(t_eval)\n        \n        # The chaperone concentration H(t) is the third component (index 2)\n        h_t = y_eval[2]\n        \n        # Find the maximum value of H(t)\n        h_max = np.max(h_t)\n        \n        # Round the result to three decimal places\n        results.append(f\"{h_max:.3f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2496959"}]}