{"hands_on_practices": [{"introduction": "The decision to initiate DNA replication is a critical, highly regulated control point in the bacterial cell cycle, often coupled to the cell's metabolic state. This process is governed by the initiator protein DnaA, which acts as a molecular switch, being active only when bound to ATP. This practice allows you to apply principles of equilibrium chemical kinetics and competitive ligand binding to model how the cellular energy charge, reflected in the $[\\mathrm{ATP}]/[\\mathrm{ADP}]$ ratio, directly influences the timing of replication initiation [@problem_id:2475929]. By deriving the relationship between metabolic state and the active DnaA fraction, you will gain a quantitative understanding of this fundamental regulatory circuit.", "problem": "In a rapidly growing bacterium, the initiator protein DnaA binds either adenosine triphosphate (ATP) or adenosine diphosphate (ADP) at a single site, and only the ATP-bound form is competent to initiate chromosome replication. Assume the following biophysical and physiological framework.\n\n1. Equilibrium binding with mass action: DnaA binds ATP and ADP in a mutually exclusive manner with dissociation constants $K_{d,\\mathrm{ATP}}$ and $K_{d,\\mathrm{ADP}}$, respectively. The free nucleotide concentrations are $[\\mathrm{ATP}]$ and $[\\mathrm{ADP}]$, and the unliganded state is permitted. Assume one binding site per DnaA molecule and rapid equilibration relative to changes in nucleotide pools.\n2. Adenylate conservation and ratio control: The adenylate pool is constrained by $[\\mathrm{ATP}] + [\\mathrm{ADP}] = A_{\\mathrm{tot}}$, with a fixed total $A_{\\mathrm{tot}}$. The adenylate ratio $r \\equiv [\\mathrm{ATP}]/[\\mathrm{ADP}]$ is a controllable cellular parameter, such that $[\\mathrm{ATP}] = A_{\\mathrm{tot}} \\, r/(1+r)$ and $[\\mathrm{ADP}] = A_{\\mathrm{tot}} /(1+r)$.\n3. Initiation threshold model: The total DnaA abundance increases at a constant synthesis rate $s$ (in molecules per minute) and instantaneously equilibrates with the nucleotide pools so that a time-independent fraction $f_{\\mathrm{ATP}}(r)$ of DnaA is ATP-bound at a given $r$. Initiation occurs when the cumulative number of ATP-bound DnaA molecules reaches a threshold $H$.\n\nStarting only from the law of mass action and conservation statements above, do the following:\n\na) Derive the equilibrium fraction $f_{\\mathrm{ATP}}(r)$ of DnaA in the ATP-bound state as a function of $r$, $A_{\\mathrm{tot}}$, $K_{d,\\mathrm{ATP}}$, and $K_{d,\\mathrm{ADP}}$.\n\nb) Using your expression, evaluate $f_{\\mathrm{ATP}}(r)$ at $r = 1$ and $r = 5$ for the parameter values $A_{\\mathrm{tot}} = 5$ mM, $K_{d,\\mathrm{ATP}} = 1$ mM, and $K_{d,\\mathrm{ADP}} = 0.5$ mM.\n\nc) Using the initiation threshold model, show how the initiation time $t(r)$ depends on $f_{\\mathrm{ATP}}(r)$, $H$, and $s$, and then compute the shift in initiation timing $\\Delta t \\equiv t(r=5) - t(r=1)$ for $H = 1500$ molecules and $s = 50$ molecules per minute.\n\nExpress the final answer for $\\Delta t$ in minutes, and round to four significant figures.", "solution": "The problem statement is first subjected to validation.\n\n**Step 1: Extract Givens**\n- Initiator protein: DnaA.\n- Ligands: Adenosine triphosphate (ATP), Adenosine diphosphate (ADP).\n- Binding: Mutually exclusive, single site, with dissociation constants $K_{d,\\mathrm{ATP}}$ and $K_{d,\\mathrm{ADP}}$.\n- Active form for replication initiation: ATP-bound DnaA.\n- Unliganded DnaA is a possible state.\n- Free nucleotide concentrations: $[\\mathrm{ATP}]$ and $[\\mathrm{ADP}]$.\n- Adenylate pool conservation: $[\\mathrm{ATP}] + [\\mathrm{ADP}] = A_{\\mathrm{tot}}$.\n- Adenylate ratio: $r \\equiv [\\mathrm{ATP}]/[\\mathrm{ADP}]$. This implies $[\\mathrm{ATP}] = A_{\\mathrm{tot}} \\, r/(1+r)$ and $[\\mathrm{ADP}] = A_{\\mathrm{tot}} /(1+r)$.\n- DnaA synthesis: Constant rate $s$ (molecules per minute).\n- Equilibrium: Instantaneous equilibration between DnaA and nucleotides, yielding a time-independent fraction $f_{\\mathrm{ATP}}(r)$ of ATP-bound DnaA for a given $r$.\n- Initiation condition: Occurs when the cumulative number of ATP-bound DnaA molecules reaches a threshold $H$.\n- Parameter values:\n    - $A_{\\mathrm{tot}} = 5$ mM\n    - $K_{d,\\mathrm{ATP}} = 1$ mM\n    - $K_{d,\\mathrm{ADP}} = 0.5$ mM\n    - $H = 1500$ molecules\n    - $s = 50$ molecules per minute\n- Tasks:\n    - a) Derive $f_{\\mathrm{ATP}}(r)$.\n    - b) Evaluate $f_{\\mathrm{ATP}}(r)$ for $r=1$ and $r=5$.\n    - c) Derive the initiation time $t(r)$ and compute $\\Delta t \\equiv t(r=5) - t(r=1)$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is evaluated against the validation criteria.\n- **Scientifically Grounded:** The model is based on fundamental principles of chemical equilibrium (law of mass action) and conservation laws. The biological context—regulation of DNA replication by DnaA and the cellular energy state (ATP/ADP ratio)—is a well-established concept in microbiology. The model is a valid, albeit simplified, representation of a real biological system.\n- **Well-Posed:** The problem is clearly defined, with all necessary parameters and relationships provided to derive a unique solution for each part. The term \"cumulative number\" is interpreted as the instantaneous total number of molecules, which is consistent with the units of the threshold $H$ (molecules) and avoids contradictions.\n- **Objective:** The language is precise and quantitative. No subjective or opinion-based claims are present.\n- **Completeness and Consistency:** All required data is provided. The units (mM for concentrations, molecules and molecules/minute for counts and rates) are consistent within the structure of the problem, as the calculation of the dimensionless fraction $f_{\\mathrm{ATP}}$ correctly isolates the concentration-dependent part from the molecule-counting part.\n- **Feasibility:** The provided numerical values are within plausible biophysical and physiological ranges.\n\n**Step 3: Verdict and Action**\nThe problem is found to be scientifically valid, well-posed, and internally consistent. We proceed to solve it.\n\n**a) Derivation of the fraction $f_{\\mathrm{ATP}}(r)$**\n\nLet $[D]$, $[D_{\\mathrm{ATP}}]$, and $[D_{\\mathrm{ADP}}]$ be the concentrations of unliganded DnaA, ATP-bound DnaA, and ADP-bound DnaA, respectively. The total concentration of DnaA, $[D]_{\\mathrm{tot}}$, is given by the conservation equation:\n$$ [D]_{\\mathrm{tot}} = [D] + [D_{\\mathrm{ATP}}] + [D_{\\mathrm{ADP}}] $$\nThe binding equilibria are described by the law of mass action:\n$$ K_{d,\\mathrm{ATP}} = \\frac{[D][\\mathrm{ATP}]}{[D_{\\mathrm{ATP}}]} $$\n$$ K_{d,\\mathrm{ADP}} = \\frac{[D][\\mathrm{ADP}]}{[D_{\\mathrm{ADP}}]} $$\nThe fraction of DnaA in the ATP-bound state, $f_{\\mathrm{ATP}}$, is defined as:\n$$ f_{\\mathrm{ATP}} = \\frac{[D_{\\mathrm{ATP}}]}{[D]_{\\mathrm{tot}}} = \\frac{[D_{\\mathrm{ATP}}]}{[D] + [D_{\\mathrm{ATP}}] + [D_{\\mathrm{ADP}}]} $$\nWe express $[D]$ and $[D_{\\mathrm{ADP}}]$ in terms of $[D_{\\mathrm{ATP}}]$:\n$$ [D] = \\frac{K_{d,\\mathrm{ATP}}}{[\\mathrm{ATP}]} [D_{\\mathrm{ATP}}] $$\n$$ [D_{\\mathrm{ADP}}] = \\frac{[D][\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}} = \\left(\\frac{K_{d,\\mathrm{ATP}}}{[\\mathrm{ATP}]} [D_{\\mathrm{ATP}}]\\right) \\frac{[\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}} = \\frac{K_{d,\\mathrm{ATP}}[\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}[\\mathrm{ATP}]} [D_{\\mathrm{ATP}}] $$\nSubstituting these expressions into the denominator for $[D]_{\\mathrm{tot}}$:\n$$ [D]_{\\mathrm{tot}} = [D_{\\mathrm{ATP}}] \\left( 1 + \\frac{K_{d,\\mathrm{ATP}}}{[\\mathrm{ATP}]} + \\frac{K_{d,\\mathrm{ATP}}[\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}[\\mathrm{ATP}]} \\right) $$\nThus, the fraction $f_{\\mathrm{ATP}}$ is:\n$$ f_{\\mathrm{ATP}} = \\frac{1}{1 + \\frac{K_{d,\\mathrm{ATP}}}{[\\mathrm{ATP}]} + \\frac{K_{d,\\mathrm{ATP}}[\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}[\\mathrm{ATP}]}} $$\nMultiplying the numerator and denominator by $[\\mathrm{ATP}]$ yields:\n$$ f_{\\mathrm{ATP}} = \\frac{[\\mathrm{ATP}]}{[\\mathrm{ATP}] + K_{d,\\mathrm{ATP}} + K_{d,\\mathrm{ATP}}\\frac{[\\mathrm{ADP}]}{K_{d,\\mathrm{ADP}}}} $$\nNow, we introduce the adenylate ratio $r = [\\mathrm{ATP}]/[\\mathrm{ADP}]$ and the total adenylate pool $A_{\\mathrm{tot}}$, where $[\\mathrm{ATP}] = A_{\\mathrm{tot}} \\frac{r}{1+r}$ and $[\\mathrm{ADP}] = A_{\\mathrm{tot}} \\frac{1}{1+r}$. Substituting these into the previous expression:\n$$ f_{\\mathrm{ATP}}(r) = \\frac{A_{\\mathrm{tot}} \\frac{r}{1+r}}{A_{\\mathrm{tot}} \\frac{r}{1+r} + K_{d,\\mathrm{ATP}} + \\frac{K_{d,\\mathrm{ATP}}}{K_{d,\\mathrm{ADP}}} \\left(A_{\\mathrm{tot}} \\frac{1}{1+r}\\right)} $$\nTo simplify, multiply the numerator and denominator by $(1+r)$:\n$$ f_{\\mathrm{ATP}}(r) = \\frac{A_{\\mathrm{tot}} r}{A_{\\mathrm{tot}} r + K_{d,\\mathrm{ATP}}(1+r) + \\frac{K_{d,\\mathrm{ATP}}}{K_{d,\\mathrm{ADP}}}A_{\\mathrm{tot}}} $$\nThis is the desired expression for $f_{\\mathrm{ATP}}(r)$.\n\n**b) Evaluation of $f_{\\mathrm{ATP}}(r)$**\n\nWe are given the parameters $A_{\\mathrm{tot}} = 5$ mM, $K_{d,\\mathrm{ATP}} = 1$ mM, and $K_{d,\\mathrm{ADP}} = 0.5$ mM. Since all these parameters have the same units of concentration, the units cancel, and we can use the numerical values directly.\nSubstituting these into the derived formula:\n$$ f_{\\mathrm{ATP}}(r) = \\frac{5r}{5r + 1(1+r) + \\frac{1}{0.5}(5)} = \\frac{5r}{5r + 1 + r + 2(5)} = \\frac{5r}{6r + 11} $$\nNow we evaluate this expression for $r=1$ and $r=5$.\n\nFor $r=1$:\n$$ f_{\\mathrm{ATP}}(1) = \\frac{5(1)}{6(1) + 11} = \\frac{5}{17} $$\nFor $r=5$:\n$$ f_{\\mathrm{ATP}}(5) = \\frac{5(5)}{6(5) + 11} = \\frac{25}{30 + 11} = \\frac{25}{41} $$\n\n**c) Initiation Timing and Time Shift**\n\nThe total number of DnaA molecules, $N_{\\mathrm{tot}}$, increases at a constant rate $s$. Assuming $N_{\\mathrm{tot}}(0) = 0$, at time $t$ we have:\n$$ N_{\\mathrm{tot}}(t) = s t $$\nThe number of ATP-bound DnaA molecules, $N_{\\mathrm{ATP}}(t)$, is a fraction $f_{\\mathrm{ATP}}(r)$ of the total number, due to instantaneous equilibration:\n$$ N_{\\mathrm{ATP}}(t) = f_{\\mathrm{ATP}}(r) N_{\\mathrm{tot}}(t) = f_{\\mathrm{ATP}}(r) s t $$\nInitiation occurs at time $t(r)$ when $N_{\\mathrm{ATP}}(t(r))$ reaches the threshold $H$:\n$$ H = f_{\\mathrm{ATP}}(r) s t(r) $$\nSolving for the initiation time $t(r)$ yields its dependence on $f_{\\mathrm{ATP}}(r)$, $H$, and $s$:\n$$ t(r) = \\frac{H}{s \\cdot f_{\\mathrm{ATP}}(r)} $$\nThe shift in initiation time, $\\Delta t$, is defined as $t(r=5) - t(r=1)$:\n$$ \\Delta t = \\frac{H}{s \\cdot f_{\\mathrm{ATP}}(5)} - \\frac{H}{s \\cdot f_{\\mathrm{ATP}}(1)} = \\frac{H}{s} \\left( \\frac{1}{f_{\\mathrm{ATP}}(5)} - \\frac{1}{f_{\\mathrm{ATP}}(1)} \\right) $$\nWe are given $H = 1500$ molecules and $s = 50$ molecules/min. The ratio is:\n$$ \\frac{H}{s} = \\frac{1500}{50} = 30 \\, \\text{min} $$\nUsing the values for $f_{\\mathrm{ATP}}(1)$ and $f_{\\mathrm{ATP}}(5)$ from part (b):\n$$ f_{\\mathrm{ATP}}(1) = \\frac{5}{17} \\quad \\implies \\quad \\frac{1}{f_{\\mathrm{ATP}}(1)} = \\frac{17}{5} $$\n$$ f_{\\mathrm{ATP}}(5) = \\frac{25}{41} \\quad \\implies \\quad \\frac{1}{f_{\\mathrm{ATP}}(5)} = \\frac{41}{25} $$\nSubstituting these into the expression for $\\Delta t$:\n$$ \\Delta t = 30 \\left( \\frac{41}{25} - \\frac{17}{5} \\right) = 30 \\left( \\frac{41}{25} - \\frac{85}{25} \\right) = 30 \\left( \\frac{41 - 85}{25} \\right) $$\n$$ \\Delta t = 30 \\left( \\frac{-44}{25} \\right) = \\frac{6 \\times 5 \\times (-44)}{5 \\times 5} = \\frac{6 \\times (-44)}{5} = \\frac{-264}{5} = -52.8 $$\nThe result is in minutes. The problem asks for rounding to four significant figures.\n$$ \\Delta t = -52.80 \\, \\text{min} $$\nThe negative sign indicates that initiation occurs earlier when the ATP/ADP ratio is higher ($r=5$), which is a physically consistent outcome.", "answer": "$$\\boxed{-52.80}$$", "id": "2475929"}, {"introduction": "Maintaining genomic integrity requires that DNA replication be performed with extraordinary accuracy. DNA polymerases achieve this high fidelity through a two-step mechanism: initial discrimination of correct nucleotides and a subsequent \"proofreading\" step that removes misincorporated bases. This powerful error-correction strategy can be understood quantitatively using the framework of kinetic proofreading. This exercise challenges you to derive the error rate of a polymerase from a fundamental kinetic scheme, treating replication as a competition between productive extension and corrective excision [@problem_id:2475961]. In doing so, you will establish a tangible link between enzyme kinetics and the accuracy of genetic inheritance.", "problem": "A replicative deoxyribonucleic acid (DNA) polymerase from a bacterium performs template-directed nucleotide addition with an intrinsic proofreading activity mediated by a $3^{\\prime}\\!\\rightarrow\\!5^{\\prime}$ exonuclease domain. Consider a minimal, physically motivated kinetic scheme in which the enzyme at a correctly paired primer terminus incorporates either a correct or an incorrect deoxyribonucleoside triphosphate (dNTP) with effective pseudo–first-order rates $k_{\\text{inc}}^{c}$ and $k_{\\text{inc}}^{w}$, respectively. Upon an incorrect incorporation, the enzyme–primer complex enters a mismatched state, from which two mutually exclusive, memoryless fates compete: proofreading excision of the terminal nucleotide at rate $k_{\\text{exo}}$, or primer extension over the mismatch at rate $k_{\\text{ext}}^{w}$. Extension over the mismatch is assumed to render the error fixed (no longer correctable by the proofreading domain). Correctly paired termini are negligibly excised compared with their extension, and substrate concentrations are constant and already absorbed into the given pseudo–first-order rates.\n\nStarting only from fundamental chemical kinetics (law of mass action for parallel Poisson processes and steady-state flux balancing), derive an expression for the steady-state error probability per incorporated nucleotide, $\\varepsilon(k_{\\text{exo}})$, defined as the fraction of incorporated nucleotides that are incorrect and have escaped proofreading. Then, using your derived expression, analyze how the exonuclease rate alters fidelity by computing the fold-change in the error rate when the exonuclease rate is decreased from $k_{\\text{exo}} = 8.0\\ \\mathrm{s}^{-1}$ to $k_{\\text{exo}} = 2.0\\ \\mathrm{s}^{-1}$, given:\n- $k_{\\text{inc}}^{c} = 150\\ \\mathrm{s}^{-1}$,\n- $k_{\\text{inc}}^{w} = 1.50 \\times 10^{-3}\\ \\mathrm{s}^{-1}$,\n- $k_{\\text{ext}}^{w} = 2.0\\ \\mathrm{s}^{-1}$.\n\nReport as your final answer the fold-change, defined as $\\varepsilon(2.0\\ \\mathrm{s}^{-1})/\\varepsilon(8.0\\ \\mathrm{s}^{-1})$. Round your answer to $3$ significant figures.", "solution": "The problem requires the derivation of the steady-state error probability for a DNA polymerase and the subsequent calculation of a fold-change in this probability under different proofreading rates. The analysis must be based strictly on the principles of chemical kinetics as specified.\n\nFirst, we derive the expression for the error probability, $\\varepsilon(k_{\\text{exo}})$. This quantity is defined as the fraction of incorporated nucleotides that are incorrect and have escaped proofreading. In the language of steady-state kinetics, this is the ratio of the flux of fixed errors to the total flux of net nucleotide incorporation.\n\nLet us define the relevant fluxes based on the provided kinetic scheme. The enzyme at a primer terminus can undergo two initial competing reactions:\n$1.$ Correct nucleotide incorporation, with pseudo–first-order rate $k_{\\text{inc}}^{c}$. According to the problem, correctly paired termini are not excised. Thus, each such event leads to a successful, net incorporation. The flux of correct incorporations is:\n$$ J_{\\text{correct}} = k_{\\text{inc}}^{c} $$\n$2.$ Incorrect nucleotide incorporation, with pseudo–first-order rate $k_{\\text{inc}}^{w}$. This leads to a mismatched state.\n\nOnce a mismatch is formed, two mutually exclusive, memoryless processes compete:\n$1.$ Excision of the mismatched nucleotide (proofreading), with rate $k_{\\text{exo}}$. This is a corrective step that returns the enzyme to its initial state, and does not result in net DNA synthesis.\n$2.$ Extension of the primer over the mismatch, with rate $k_{\\text{ext}}^{w}$. This fixes the error, making it permanent, and results in a net nucleotide incorporation.\n\nThe competition between excision and extension from the mismatched state can be described by a branching ratio. The probability, $P_{\\text{ext}}$, that a mismatch is extended rather than excised is the ratio of the extension rate to the sum of the rates of all possible fates:\n$$ P_{\\text{ext}} = \\frac{k_{\\text{ext}}^{w}}{k_{\\text{ext}}^{w} + k_{\\text{exo}}} $$\nThe steady-state flux of forming fixed errors, $J_{\\text{error}}$, is the rate of forming mismatches, $k_{\\text{inc}}^{w}$, multiplied by the probability that the mismatch is fixed by extension:\n$$ J_{\\text{error}} = k_{\\text{inc}}^{w} \\cdot P_{\\text{ext}} = k_{\\text{inc}}^{w} \\frac{k_{\\text{ext}}^{w}}{k_{\\text{ext}}^{w} + k_{\\text{exo}}} $$\nThe total flux of net nucleotide incorporation, $J_{\\text{total\\_inc}}$, is the sum of all fluxes corresponding to events that lengthen the primer by one nucleotide. These are the flux of correct incorporations and the flux of erroneous incorporations that are subsequently fixed (extended):\n$$ J_{\\text{total\\_inc}} = J_{\\text{correct}} + J_{\\text{error}} = k_{\\text{inc}}^{c} + k_{\\text{inc}}^{w} \\frac{k_{\\text{ext}}^{w}}{k_{\\text{ext}}^{w} + k_{\\text{exo}}} $$\nThe error probability, $\\varepsilon$, is the ratio of the flux of fixed errors to the total flux of net incorporations:\n$$ \\varepsilon(k_{\\text{exo}}) = \\frac{J_{\\text{error}}}{J_{\\text{total\\_inc}}} = \\frac{k_{\\text{inc}}^{w} \\frac{k_{\\text{ext}}^{w}}{k_{\\text{ext}}^{w} + k_{\\text{exo}}}}{k_{\\text{inc}}^{c} + k_{\\text{inc}}^{w} \\frac{k_{\\text{ext}}^{w}}{k_{\\text{ext}}^{w} + k_{\\text{exo}}}} $$\nTo simplify this expression, we multiply the numerator and the denominator by $(k_{\\text{ext}}^{w} + k_{\\text{exo}})$:\n$$ \\varepsilon(k_{\\text{exo}}) = \\frac{k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}{k_{\\text{inc}}^{c} (k_{\\text{ext}}^{w} + k_{\\text{exo}}) + k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}} $$\nThis is the derived expression for the steady-state error probability.\n\nNext, we must compute the fold-change in the error rate when the exonuclease rate is decreased from $k_{\\text{exo},1} = 8.0\\ \\mathrm{s}^{-1}$ to $k_{\\text{exo},2} = 2.0\\ \\mathrm{s}^{-1}$. The fold-change is defined as the ratio $\\varepsilon(k_{\\text{exo},2}) / \\varepsilon(k_{\\text{exo},1})$.\nUsing the derived expression for $\\varepsilon(k_{\\text{exo}})$:\n$$ \\frac{\\varepsilon(k_{\\text{exo},2})}{\\varepsilon(k_{\\text{exo},1})} = \\frac{\\frac{k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}{k_{\\text{inc}}^{c} (k_{\\text{ext}}^{w} + k_{\\text{exo},2}) + k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}}{\\frac{k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}{k_{\\text{inc}}^{c} (k_{\\text{ext}}^{w} + k_{\\text{exo},1}) + k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}} $$\nThe common term $k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}$ in the numerators cancels, leading to:\n$$ \\frac{\\varepsilon(k_{\\text{exo},2})}{\\varepsilon(k_{\\text{exo},1})} = \\frac{k_{\\text{inc}}^{c} (k_{\\text{ext}}^{w} + k_{\\text{exo},1}) + k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}}{k_{\\text{inc}}^{c} (k_{\\text{ext}}^{w} + k_{\\text{exo},2}) + k_{\\text{inc}}^{w} k_{\\text{ext}}^{w}} $$\nWe now substitute the given numerical values:\n$k_{\\text{inc}}^{c} = 150\\ \\mathrm{s}^{-1}$\n$k_{\\text{inc}}^{w} = 1.50 \\times 10^{-3}\\ \\mathrm{s}^{-1}$\n$k_{\\text{ext}}^{w} = 2.0\\ \\mathrm{s}^{-1}$\n$k_{\\text{exo},1} = 8.0\\ \\mathrm{s}^{-1}$\n$k_{\\text{exo},2} = 2.0\\ \\mathrm{s}^{-1}$\n\nThe numerator of the ratio is:\n$$ N = 150 \\cdot (2.0 + 8.0) + (1.50 \\times 10^{-3}) \\cdot 2.0 = 150 \\cdot 10.0 + 3.0 \\times 10^{-3} = 1500 + 0.003 = 1500.003 $$\nThe denominator of the ratio is:\n$$ D = 150 \\cdot (2.0 + 2.0) + (1.50 \\times 10^{-3}) \\cdot 2.0 = 150 \\cdot 4.0 + 3.0 \\times 10^{-3} = 600 + 0.003 = 600.003 $$\nThe fold-change is the ratio $N/D$:\n$$ \\frac{\\varepsilon(2.0\\ \\mathrm{s}^{-1})}{\\varepsilon(8.0\\ \\mathrm{s}^{-1})} = \\frac{1500.003}{600.003} \\approx 2.499995833... $$\nRounding the result to $3$ significant figures as required gives $2.50$.\nThe decrease in the exonuclease rate from $8.0\\ \\mathrm{s}^{-1}$ to $2.0\\ \\mathrm{s}^{-1}$ makes proofreading less efficient relative to mismatch extension. Consequently, a larger fraction of misincorporated nucleotides escape correction, leading to an increase in the overall error rate, which is consistent with our calculated fold-change being greater than $1$.", "answer": "$$\\boxed{2.50}$$", "id": "2475961"}, {"introduction": "After the chromosome is duplicated, the final challenge is to ensure that each daughter cell inherits a complete copy, a process essential for viability. This segregation process is not perfectly deterministic but is instead a stochastic event governed by the fidelity of molecular partitioning systems. In this problem, you will build a probabilistic model to quantify the reliability of replicon segregation and the risk of catastrophic loss events [@problem_id:2475913]. By calculating the probability of chromosome loss as a function of the partition system's fidelity and the number of replicons, you will explore the quantitative basis of genetic stability and the principles that ensure robust inheritance.", "problem": "A bacterium contains three low-copy replicons: two chromosomes (Chr1 and Chr2) and one megaplasmid (Mega). Each replicon is duplicated prior to septation and segregated into two daughter cells. We will model segregation reliability starting from fundamental facts: (i) each replication event produces two sister copies, which form a pair; (ii) partition systems such as the ParABS (Partitioning A, B, and S) system operate on sister pairs and can either split the pair one-to-each daughter or mis-segregate both copies to the same daughter.\n\nModel assumptions for each replicon type $i \\in \\{\\text{Chr1}, \\text{Chr2}, \\text{Mega}\\}$:\n- The cell contains $k_i$ independent sister pairs at division (so there are $2 k_i$ copies in total), where $k_i$ is a positive integer.\n- Each sister pair of replicon $i$ undergoes a binary partition outcome: correct one-to-each-daughter segregation with probability $f_i$ (the partition fidelity), or a two-to-one mis-segregation with probability $1 - f_i$.\n- Conditional on mis-segregation, the destination bias is symmetric between the two daughters, so for a randomly chosen focal daughter, each mis-segregated pair contributes either both copies to the focal daughter with probability $\\frac{1 - f_i}{2}$ or zero copies with probability $\\frac{1 - f_i}{2}$.\n- Outcomes for distinct sister pairs are independent.\n\nYour task is to compute, for each test case, the probability that a randomly chosen daughter cell lacks at least one copy of each replicon immediately after division (that is, the per-daughter loss probability for each replicon). Express all probabilities as decimal numbers rounded to nine decimal places.\n\nMathematical variables:\n- $k_i$: the number of independent sister pairs for replicon $i$, a positive integer.\n- $f_i$: the partition fidelity for replicon $i$, a real number in $[0,1]$.\n- For a randomly chosen daughter and a given sister pair, define a random variable $X$ that equals the number of copies delivered to that daughter by that pair. Under the assumptions, $X$ takes values $0$, $1$, or $2$ with probabilities $\\frac{1 - f_i}{2}$, $f_i$, and $\\frac{1 - f_i}{2}$ respectively.\n\nGiven the independence of sister pairs and the additivity of copy number over pairs, the per-daughter loss probability for replicon $i$ is the probability that the total number of copies received by the daughter from all $k_i$ pairs is $0$. Your program should compute this probability for each replicon across the following test suite.\n\nTest suite (each test case is a tuple of triplets ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$)):\n- Test 1: ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$) = (1, 0.99), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$) = (1, 0.98), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$) = (1, 0.90).\n- Test 2: ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$) = (1, 0.99), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$) = (1, 0.99), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$) = (2, 0.80).\n- Test 3: ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$) = (1, 1.00), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$) = (1, 0.00), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$) = (3, 0.00).\n- Test 4: ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$) = (1, 0.95), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$) = (1, 0.90), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$) = (5, 0.90).\n- Test 5: ($k_{\\text{Chr1}}$, $f_{\\text{Chr1}}$) = (2, 0.95), ($k_{\\text{Chr2}}$, $f_{\\text{Chr2}}$) = (1, 0.999), ($k_{\\text{Mega}}$, $f_{\\text{Mega}}$) = (4, 0.85).\n\nOutput specification:\n- For each test case, output a list of three floats corresponding to [loss$_{\\text{Chr1}}$, loss$_{\\text{Chr2}}$, loss$_{\\text{Mega}}$], where each entry is the per-daughter loss probability for that replicon, rounded to nine decimal places.\n- Your program should produce a single line of output containing the results as a comma-separated list of these three-element lists with no spaces, enclosed in square brackets. For example: \"[[a,b,c],[d,e,f],...]\".", "solution": "The problem statement has been analyzed and is determined to be valid. It is scientifically grounded in the principles of bacterial genetics, specifically replicon segregation, and is mathematically well-posed. All parameters are clearly defined, and the objective is unambiguous. We shall proceed with the derivation of the solution.\n\nThe problem requires the calculation of the per-daughter loss probability for each of three replicons, denoted by an index $i \\in \\{\\text{Chr1}, \\text{Chr2}, \\text{Mega}\\}$. The loss of a replicon is defined as a daughter cell receiving zero copies of that replicon after cell division.\n\nThe state of the system is defined by two parameters for each replicon $i$:\n1.  $k_i$: The number of independent sister pairs of the replicon present at the time of division. This is a positive integer.\n2.  $f_i$: The partition fidelity for a single sister pair, which is the probability of correct one-to-each-daughter segregation. This is a real number in the interval $[0, 1]$.\n\nFor a randomly selected daughter cell and a single sister pair of replicon $i$, let the random variable $X$ be the number of copies it receives from this pair. The problem statement defines the probability distribution of $X$:\n-   The pair segregates correctly (one copy to each daughter). The focal daughter receives $1$ copy. This occurs with probability $P(X=1) = f_i$.\n-   The pair mis-segregates (both copies to one daughter). This occurs with total probability $1 - f_i$. Due to symmetric destination bias, there are two outcomes for the focal daughter:\n    -   It receives both copies ($2$ copies). This occurs with probability $P(X=2) = \\frac{1 - f_i}{2}$.\n    -   It receives no copies ($0$ copies). This occurs with probability $P(X=0) = \\frac{1 - f_i}{2}$.\n\nThe total number of copies of replicon $i$ received by the daughter cell, denoted $C_i$, is the sum of copies received from all $k_i$ independent sister pairs. Let $X_j$ be the number of copies from the $j$-th pair, for $j = 1, \\dots, k_i$. Then:\n$$C_i = \\sum_{j=1}^{k_i} X_j$$\nThe random variables $X_j$ are independent and identically distributed (i.i.d.) with the probability distribution defined above.\n\nThe per-daughter loss probability for replicon $i$, which we denote $P(\\text{loss}_i)$, is the probability that the total copy number in the daughter cell is zero, i.e., $P(C_i=0)$.\n$$P(\\text{loss}_i) = P\\left(\\sum_{j=1}^{k_i} X_j = 0\\right)$$\nSince $X_j$ is a non-negative random variable (it can only take values $0$, $1$, or $2$), the sum $\\sum_{j=1}^{k_i} X_j$ is zero if and only if every term $X_j$ is zero.\n$$P(\\text{loss}_i) = P(X_1=0 \\text{ and } X_2=0 \\text{ and } \\dots \\text{ and } X_{k_i}=0)$$\nThe problem states that the segregation outcomes for distinct sister pairs are independent. Therefore, we can express the joint probability as the product of the individual probabilities:\n$$P(\\text{loss}_i) = \\prod_{j=1}^{k_i} P(X_j=0)$$\nSince the variables $X_j$ are identically distributed, $P(X_j=0)$ is the same for all $j$:\n$$P(X_j=0) = \\frac{1 - f_i}{2}$$\nSubstituting this into the product gives the final expression for the loss probability:\n$$P(\\text{loss}_i) = \\left( \\frac{1 - f_i}{2} \\right)^{k_i}$$\nThis formula is computationally trivial and will be applied to each replicon in each test case provided. The results will be rounded to nine decimal places as specified.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the per-daughter loss probability for each replicon\n    based on the number of sister pairs (k) and partition fidelity (f).\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each test case is a tuple of triplets:\n    # ((k_Chr1, f_Chr1), (k_Chr2, f_Chr2), (k_Mega, f_Mega))\n    test_cases = [\n        ((1, 0.99), (1, 0.98), (1, 0.90)),\n        ((1, 0.99), (1, 0.99), (2, 0.80)),\n        ((1, 1.00), (1, 0.00), (3, 0.00)),\n        ((1, 0.95), (1, 0.90), (5, 0.90)),\n        ((2, 0.95), (1, 0.999), (4, 0.85)),\n    ]\n\n    all_results = []\n    \n    for case in test_cases:\n        case_results = []\n        for replicon_params in case:\n            k, f = replicon_params\n            \n            # The per-daughter loss probability is ((1-f)/2)^k.\n            # This is the probability that all k independent pairs mis-segregate\n            # to the *other* daughter cell.\n            # The probability of a single pair going to the other daughter is (1-f)/2.\n            loss_probability = ((1.0 - f) / 2.0)**k\n            \n            case_results.append(loss_probability)\n            \n        all_results.append(case_results)\n\n    # Format the output string according to the problem specification.\n    # The requirement is a comma-separated list of lists, with no spaces.\n    # Numbers must be expressed as decimals rounded to nine decimal places.\n    # e.g., [[a,b,c],[d,e,f],...]\n    \n    output_parts = []\n    for result_list in all_results:\n        # Format each number to 9 decimal places. This also handles rounding.\n        formatted_nums = [f\"{num:.9f}\" for num in result_list]\n        output_parts.append(f\"[{','.join(formatted_nums)}]\")\n        \n    final_output_string = f\"[{','.join(output_parts)}]\"\n\n    print(final_output_string)\n\nsolve()\n```", "id": "2475913"}]}