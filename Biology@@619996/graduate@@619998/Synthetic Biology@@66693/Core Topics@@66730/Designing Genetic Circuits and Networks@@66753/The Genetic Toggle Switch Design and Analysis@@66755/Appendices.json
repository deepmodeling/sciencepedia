{"hands_on_practices": [{"introduction": "The defining feature of a genetic toggle switch is bistability, but what are the precise mathematical conditions that allow this behavior to emerge? This exercise guides you through a foundational analysis of the toggle switch's governing ordinary differential equations (ODEs). By nondimensionalizing the model and using linear stability analysis to find the critical parameter value for a bifurcation, you will uncover the essential requirements, such as cooperative repression, for creating a functional switch. [@problem_id:2783261]", "problem": "A canonical mutual-repression genetic toggle switch consists of two genes whose protein products repress each other’s transcription. Under standard quasi-steady-state assumptions for transcriptional regulation and first-order protein degradation, a minimal model for the protein concentrations $U(t)$ and $V(t)$ is given by the ordinary differential equations (ODEs)\n$$\n\\frac{dU}{dt}=\\frac{\\alpha_{1}}{1+\\left(\\frac{V}{K_{2}}\\right)^{n_{2}}}-\\delta_{1}\\,U,\\qquad\n\\frac{dV}{dt}=\\frac{\\alpha_{2}}{1+\\left(\\frac{U}{K_{1}}\\right)^{n_{1}}}-\\delta_{2}\\,V,\n$$\nwhere $t$ is time, $\\alpha_{i}$ are maximal synthesis rates, $\\delta_{i}$ are protein degradation (or dilution) rates, $K_{i}$ are repression thresholds, and $n_{i}$ are Hill coefficients capturing cooperative repression.\n\nStarting from this dimensional model and using only the following fundamentals:\n- Transcriptional repression at steady state is represented by a Hill function of the form $1/\\left(1+(X/K)^{n}\\right)$.\n- Protein removal is dominated by first-order processes with rate constants $\\delta_{i}$.\n- Nondimensionalization proceeds by defining scaled variables that absorb physical units to reduce parameter count.\n\nPerform the following tasks:\n1. Introduce nondimensional variables by scaling concentrations by their repression thresholds and time by a degradation time scale, and derive the nondimensional ODEs with the minimal independent dimensionless parameter groups made explicit.\n2. Specialize to the symmetric case defined by $\\alpha_{1}=\\alpha_{2}=\\alpha$, $\\delta_{1}=\\delta_{2}=\\delta$, $K_{1}=K_{2}=K$, and $n_{1}=n_{2}=n\\geq 1$, and analyze linear stability of the symmetric fixed point along the invariant subspace where the two concentrations are equal. Determine the critical value of the dimensionless production parameter at which this symmetric fixed point first loses stability through a zero eigenvalue, signaling the onset of bistability.\n\nYour final answer must be a single closed-form analytic expression, in terms of the Hill coefficient $n$ only, for the critical dimensionless production parameter. No units are required for the final answer. Do not provide intermediate steps or additional text in the final answer.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It presents a canonical model from synthetic biology and asks for a standard, albeit non-trivial, mathematical analysis. All necessary information is provided, and the premises are consistent. We may therefore proceed with the solution.\n\nThe problem requires a two-part analysis of a genetic toggle switch model. First, we must nondimensionalize the governing ordinary differential equations (ODEs). Second, we must analyze the stability of the symmetric fixed point in the specialized symmetric case to find the critical parameter value for the onset of bistability.\n\nThe dimensional model is given by the coupled ODEs:\n$$\n\\frac{dU}{dt}=\\frac{\\alpha_{1}}{1+\\left(\\frac{V}{K_{2}}\\right)^{n_{2}}}-\\delta_{1}\\,U\n$$\n$$\n\\frac{dV}{dt}=\\frac{\\alpha_{2}}{1+\\left(\\frac{U}{K_{1}}\\right)^{n_{1}}}-\\delta_{2}\\,V\n$$\nHere, $U(t)$ and $V(t)$ are protein concentrations, $t$ is time, $\\alpha_{i}$ are maximal synthesis rates, $\\delta_{i}$ are first-order degradation rates, $K_{i}$ are repression thresholds (concentrations for half-maximal repression), and $n_{i}$ are Hill coefficients signifying the cooperativity of repression.\n\n**Part 1: Nondimensionalization**\nWe introduce dimensionless variables as instructed. We scale the concentrations by their respective repression thresholds:\n$$\nu = \\frac{U}{K_{1}}, \\qquad v = \\frac{V}{K_{2}}\n$$\nWe scale time by one of the degradation time scales. Let us choose $\\frac{1}{\\delta_1}$, defining dimensionless time $\\tau$:\n$$\n\\tau = \\delta_{1}t\n$$\nFrom these definitions, we have $U = u K_{1}$, $V = v K_{2}$, and $t = \\frac{\\tau}{\\delta_1}$. The time derivative transforms as $\\frac{d}{dt} = \\frac{d\\tau}{dt}\\frac{d}{d\\tau} = \\delta_{1}\\frac{d}{d\\tau}$.\n\nSubstituting these into the first ODE:\n$$\n\\delta_{1}\\frac{d(u K_{1})}{d\\tau} = \\frac{\\alpha_{1}}{1+v^{n_{2}}} - \\delta_{1} u K_{1}\n$$\n$$\nK_{1}\\delta_{1}\\frac{du}{d\\tau} = \\frac{\\alpha_{1}}{1+v^{n_{2}}} - \\delta_{1} u K_{1}\n$$\nDividing by $K_{1}\\delta_{1}$:\n$$\n\\frac{du}{d\\tau} = \\frac{\\alpha_{1}}{K_{1}\\delta_{1}}\\frac{1}{1+v^{n_{2}}} - u\n$$\nNow, substituting into the second ODE:\n$$\n\\delta_{1}\\frac{d(v K_{2})}{d\\tau} = \\frac{\\alpha_{2}}{1+u^{n_{1}}} - \\delta_{2} v K_{2}\n$$\n$$\nK_{2}\\delta_{1}\\frac{dv}{d\\tau} = \\frac{\\alpha_{2}}{1+u^{n_{1}}} - \\delta_{2} v K_{2}\n$$\nDividing by $K_{2}\\delta_{1}$:\n$$\n\\frac{dv}{d\\tau} = \\frac{\\alpha_{2}}{K_{2}\\delta_{1}}\\frac{1}{1+u^{n_{1}}} - \\frac{\\delta_{2}}{\\delta_{1}} v\n$$\nThe system is now expressed in terms of dimensionless variables $\\{u, v, \\tau\\}$. We identify the independent dimensionless parameter groups:\n- Dimensionless synthesis rates: $\\tilde{\\alpha}_{1} = \\frac{\\alpha_{1}}{K_{1}\\delta_{1}}$ and $\\tilde{\\alpha}_{2} = \\frac{\\alpha_{2}}{K_{2}\\delta_{1}}$.\n- Ratio of degradation rates: $\\gamma = \\frac{\\delta_{2}}{\\delta_{1}}$.\nThe Hill coefficients $n_{1}$ and $n_{2}$ are already dimensionless.\n\nThe nondimensional system is:\n$$\n\\frac{du}{d\\tau} = \\frac{\\tilde{\\alpha}_{1}}{1+v^{n_{2}}} - u\n$$\n$$\n\\frac{dv}{d\\tau} = \\frac{\\tilde{\\alpha}_{2}}{1+u^{n_{1}}} - \\gamma v\n$$\n\n**Part 2: Stability Analysis of the Symmetric Case**\nWe now specialize to the symmetric case, where $\\alpha_{1}=\\alpha_{2}=\\alpha$, $\\delta_{1}=\\delta_{2}=\\delta$, $K_{1}=K_{2}=K$, and $n_{1}=n_{2}=n$.\nThe dimensionless parameters become:\n- $\\tilde{\\alpha}_{1} = \\frac{\\alpha}{K\\delta}$ and $\\tilde{\\alpha}_{2} = \\frac{\\alpha}{K\\delta}$. Let us denote this common dimensionless production parameter as $\\beta = \\frac{\\alpha}{K\\delta}$.\n- $\\gamma = \\frac{\\delta}{\\delta} = 1$.\n\nThe symmetric dimensionless system is:\n$$\n\\frac{du}{d\\tau} = \\frac{\\beta}{1+v^{n}} - u \\equiv f(u,v)\n$$\n$$\n\\frac{dv}{d\\tau} = \\frac{\\beta}{1+u^{n}} - v \\equiv g(u,v)\n$$\nWe seek the symmetric fixed point, where $u=v$. Let the fixed point coordinates be $(u^{*}, v^{*})$. For a symmetric fixed point, $u^{*} = v^{*} = x^{*}$. Setting the time derivatives to zero, the fixed point condition becomes a single equation:\n$$\nx^{*} = \\frac{\\beta}{1+(x^{*})^{n}}\n$$\nTo analyze the linear stability of this fixed point, we compute the Jacobian matrix $J$ of the system:\n$$\nJ(u,v) = \\begin{pmatrix} \\frac{\\partial f}{\\partial u} & \\frac{\\partial f}{\\partial v} \\\\ \\frac{\\partial g}{\\partial u} & \\frac{\\partial g}{\\partial v} \\end{pmatrix} = \\begin{pmatrix} -1 & -\\frac{\\beta n v^{n-1}}{(1+v^{n})^{2}} \\\\ -\\frac{\\beta n u^{n-1}}{(1+u^{n})^{2}} & -1 \\end{pmatrix}\n$$\nEvaluating the Jacobian at the symmetric fixed point $(x^{*}, x^{*})$:\n$$\nJ(x^{*},x^{*}) = \\begin{pmatrix} -1 & -\\frac{\\beta n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} \\\\ -\\frac{\\beta n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} & -1 \\end{pmatrix}\n$$\nFrom the fixed point equation, we can substitute $\\beta = x^{*}(1+(x^{*})^{n})$. The off-diagonal terms become:\n$$\n-\\frac{x^{*}(1+(x^{*})^{n}) n (x^{*})^{n-1}}{(1+(x^{*})^{n})^{2}} = -\\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\nLet this term be denoted by $C$. The Jacobian at the fixed point is $J = \\begin{pmatrix} -1 & C \\\\ C & -1 \\end{pmatrix}$. The eigenvalues $\\lambda$ are the roots of the characteristic equation $\\det(J - \\lambda I) = 0$:\n$$\n\\det \\begin{pmatrix} -1-\\lambda & C \\\\ C & -1-\\lambda \\end{pmatrix} = (-1-\\lambda)^{2} - C^{2} = 0\n$$\n$$\n(\\lambda+1)^{2} = C^{2} \\implies \\lambda+1 = \\pm C \\implies \\lambda = -1 \\pm C\n$$\nThe two eigenvalues are:\n$$\n\\lambda_{1} = -1 + C = -1 - \\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\n$$\n\\lambda_{2} = -1 - C = -1 + \\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}\n$$\nFor the fixed point to be stable, both eigenvalues must have negative real parts.\nSince $n \\ge 1$ and $x^{*} > 0$, the term $\\frac{n (x^{*})^{n}}{1+(x^{*})^{n}}$ is always positive. Therefore, $\\lambda_{1}$ is always negative. Stability is determined by the sign of $\\lambda_{2}$.\nThe symmetric fixed point loses stability when $\\lambda_{2}$ passes through zero from negative to positive. This bifurcation marks the emergence of new, asymmetric fixed points, corresponding to the onset of bistability. The critical condition is $\\lambda_{2}=0$. Let $x^{*}_{c}$ be the fixed point value at the bifurcation.\n$$\n-1 + \\frac{n (x^{*}_{c})^{n}}{1+(x^{*}_{c})^{n}} = 0\n$$\n$$\nn (x^{*}_{c})^{n} = 1+(x^{*}_{c})^{n}\n$$\n$$\n(n-1)(x^{*}_{c})^{n} = 1\n$$\nThis equation has a meaningful solution for $x^{*}_{c} > 0$ only if $n > 1$. If $n=1$, the equation becomes $0=1$, which is impossible. For $n=1$, $\\lambda_{2} = -1 + \\frac{x^{*}}{1+x^{*}} = -\\frac{1}{1+x^{*}} < 0$, so the system is always monostable. The phenomenon of bistability in this switch requires cooperative repression, i.e., $n>1$.\n\nFor $n>1$, we solve for the critical fixed point concentration $x^{*}_{c}$:\n$$\n(x^{*}_{c})^{n} = \\frac{1}{n-1} \\implies x^{*}_{c} = \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}}\n$$\nThe problem asks for the critical value of the dimensionless production parameter, $\\beta_{c}$. We find this by substituting $x^{*}_{c}$ back into the fixed point equation:\n$$\n\\beta_{c} = x^{*}_{c}(1+(x^{*}_{c})^{n})\n$$\n$$\n\\beta_{c} = \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}} \\left(1 + \\frac{1}{n-1}\\right)\n$$\nSimplifying the second term:\n$$\n1 + \\frac{1}{n-1} = \\frac{n-1+1}{n-1} = \\frac{n}{n-1}\n$$\nThus, the critical value $\\beta_{c}$ is:\n$$\n\\beta_{c} = \\frac{n}{n-1} \\left(\\frac{1}{n-1}\\right)^{\\frac{1}{n}} = \\frac{n}{(n-1)^{1} (n-1)^{\\frac{1}{n}}} = \\frac{n}{(n-1)^{1+\\frac{1}{n}}}\n$$\nThis expression can be written finally as:\n$$\n\\beta_{c} = \\frac{n}{(n-1)^{\\frac{n+1}{n}}}\n$$\nThis is the critical value of the dimensionless production parameter at which the symmetric steady state loses stability, giving rise to bistability. This bifurcation is a supercritical pitchfork bifurcation.", "answer": "$$\n\\boxed{\\frac{n}{(n-1)^{\\frac{n+1}{n}}}}\n$$", "id": "2783261"}, {"introduction": "A key skill for a synthetic biologist is developing an intuition for how a circuit's behavior can be tuned by changing its components. This practice challenges you to reason about the genetic toggle switch qualitatively, using the powerful concept of nullclines. You will predict how design choices, like adding a protein degradation tag, alter the switch's steady-state concentrations and its hysteresis, providing a direct link between model parameters and system performance. [@problem_id:2783198]", "problem": "An engineered genetic toggle switch consists of two genes encoding protein repressors $X$ and $Y$ that mutually repress each other’s promoters. As a fundamental base, assume the Central Dogma of Molecular Biology (transcription produces messenger ribonucleic acid (mRNA), which is translated into protein) and standard kinetic descriptions: production is controlled by transcriptional repression that can be captured by Hill-type functions, and loss is driven by first-order dilution and proteolysis. A widely used deterministic model for the protein concentrations $x(t)$ and $y(t)$ is\n$$\n\\frac{dx}{dt} \\;=\\; \\beta_x\\,\\frac{1}{1+\\left(\\sigma_y y/K_y\\right)^{n_y}} \\;+\\; \\beta_{0x} \\;-\\; \\delta_x\\,x, \\qquad\n\\frac{dy}{dt} \\;=\\; \\beta_y\\,\\frac{1}{1+\\left(\\sigma_x x/K_x\\right)^{n_x}} \\;+\\; \\beta_{0y} \\;-\\; \\delta_y\\,y,\n$$\nwhere $K_x,K_y$ are repression thresholds, $n_x,n_y$ are Hill coefficients with $n_x,n_y>1$ capturing cooperative repression, $\\beta_x,\\beta_y$ are maximal production rates, $\\beta_{0x},\\beta_{0y}$ are basal (leaky) production rates, and $\\delta_x,\\delta_y$ are effective first-order loss rates due to dilution and degradation. Small-molecule inducers that inactivate repressors $X$ and $Y$ enter through $\\sigma_x,\\sigma_y\\in(0,1]$, which quantify the active repressor fraction available to bind DNA; for example, increasing an inducer targeting $X$ decreases $\\sigma_x$.\n\nA “degradation tag” appended to a repressor increases its proteolysis rate without changing its DNA-binding properties. Idealize a tag on $X$ as $\\delta_x \\mapsto \\tau_x\\,\\delta_x$ with $\\tau_x>1$ and a tag on $Y$ as $\\delta_y \\mapsto \\tau_y\\,\\delta_y$ with $\\tau_y>1$, while leaving $\\beta$’s, $\\beta_0$’s, $K$’s, $n$’s, and the $\\sigma$–inducer dose–responses unchanged.\n\nConsider an initially symmetric toggle with $\\beta_x=\\beta_y=\\beta$, $\\beta_{0x}=\\beta_{0y}=\\beta_0$, $K_x=K_y=K$, $n_x=n_y=n$, and $\\delta_x=\\delta_y=\\delta$, which is bistable at zero inducer (i.e., $\\sigma_x=\\sigma_y=1$). Assume $\\beta_0/\\beta$ is small but nonzero and $n$ is sufficiently large to permit bistability. You introduce degradation tags in two scenarios: (i) symmetric tagging with $\\tau_x=\\tau_y=\\tau>1$, and (ii) asymmetric tagging with $\\tau_x=\\tau>1$ and $\\tau_y=1$.\n\nUsing only the model structure above and first-principles nullcline and fixed-point arguments, assess the impact of these tags on steady-state protein concentrations in the stable states and on the switching thresholds in inducer space (the critical $\\sigma$ values at which a saddle-node bifurcation eliminates one stable state), under the assumption that bistability persists after tagging where specified.\n\nWhich of the following statements are correct?\n\nA. Under symmetric tagging with $\\tau>1$, both stable-state protein levels decrease, the hysteresis window widens, and the inducer thresholds shift outward (i.e., more inducer is required in both directions to switch), compared to the untagged toggle.\n\nB. Under symmetric tagging with $\\tau>1$, both stable-state protein levels decrease, the hysteresis window narrows, and the inducer thresholds move inward (i.e., less inducer is required in both directions to switch), compared to the untagged toggle.\n\nC. Under symmetric tagging with $\\tau>1$, both stable-state protein levels increase because faster turnover accelerates production cycles, the hysteresis window narrows, and the thresholds move inward.\n\nD. Under asymmetric tagging with $\\tau_x>1$ and $\\tau_y=1$, the toggle becomes biased: the $X$-high state is less stable and requires less inducer targeting $X$ to switch to the $Y$-high state, whereas the reverse switch from $Y$-high to $X$-high requires more inducer targeting $Y$; the degree of asymmetry increases with $\\tau_x$.", "solution": "The problem statement is subjected to validation and is found to be valid. It is a well-posed problem grounded in the established principles of nonlinear dynamics and synthetic biology, using a canonical model for the genetic toggle switch. The language is precise, and the setup is self-contained and scientifically sound.\n\nThe analysis of the system's behavior is based on its nullclines, which describe the conditions for zero rate of change for each protein concentration. The steady states, or fixed points, of the system are the intersections of these nullclines. The equations for the nullclines are obtained by setting $\\frac{dx}{dt}=0$ and $\\frac{dy}{dt}=0$:\n$$ \\delta_x\\,x \\;=\\; \\beta_x\\,\\frac{1}{1+\\left(\\sigma_y y/K_y\\right)^{n_y}} \\;+\\; \\beta_{0x} \\quad (\\text{x-nullcline}) $$\n$$ \\delta_y\\,y \\;=\\; \\beta_y\\,\\frac{1}{1+\\left(\\sigma_x x/K_x\\right)^{n_x}} \\;+\\; \\beta_{0y} \\quad (\\text{y-nullcline}) $$\nThese can be written as functions $x(y)$ and $y(x)$, representing curves in the $(x, y)$ phase plane. Bistability occurs when these two sigmoidally-shaped, decreasing curves intersect at three points: two stable fixed points, corresponding to the ($X$-high, $Y$-low) and ($Y$-high, $X$-low) states, and one unstable saddle point between them. The stability and location of these points, and the bifurcations that cause them to appear or disappear, are determined by the system's parameters.\n\nThe initial symmetric, untagged toggle has parameters $\\beta_x=\\beta_y=\\beta$, $\\beta_{0x}=\\beta_{0y}=\\beta_0$, $K_x=K_y=K$, $n_x=n_y=n$, and $\\delta_x=\\delta_y=\\delta$. The approximate steady-state levels are $(\\bar{x}_{\\text{high}}, \\bar{y}_{\\text{low}}) \\approx \\left( (\\beta + \\beta_0)/\\delta, \\beta_0/\\delta \\right)$ and $(\\bar{x}_{\\text{low}}, \\bar{y}_{\\text{high}}) \\approx \\left( \\beta_0/\\delta, (\\beta + \\beta_0)/\\delta \\right)$.\n\nWe now analyze the two scenarios.\n\n**Scenario (i): Symmetric Tagging ($\\tau_x = \\tau_y = \\tau > 1$)**\n\nIn this case, the degradation rates become $\\delta_x' = \\tau\\delta$ and $\\delta_y' = \\tau\\delta$. The new nullcline equations are:\n$$ x(y) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_y y/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) $$\n$$ y(x) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_x x/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) $$\n\n1.  **Effect on Steady-State Concentrations**: Both nullcline equations are scaled by a factor of $1/\\tau < 1$ compared to the untagged system. This means that for any given repressor concentration, the steady-state concentration of the expressed protein is lower. Consequently, the concentrations at the stable fixed points will be lower. The new approximate levels are $\\bar{x}_{\\text{high}}' \\approx (\\beta + \\beta_0)/(\\tau\\delta)$ and $\\bar{y}_{\\text{high}}' \\approx (\\beta + \\beta_0)/(\\tau\\delta)$. Both high and low protein levels decrease by a factor of $\\tau$.\n\n2.  **Effect on Hysteresis and Switching Thresholds**: The effectiveness of the mutual repression, which creates the bistable switch, can be quantified by a dimensionless loop gain parameter. Increasing the degradation rate $\\delta$ while keeping the production rate $\\beta$ and repression threshold $K$ constant reduces the steady-state protein levels. Lower protein levels lead to weaker repression, thus reducing the effective gain of the feedback loop. A system with a lower loop gain has a smaller region of bistability. A smaller bistable region implies that the hysteresis window narrows. This means that the saddle-node bifurcations, which define the switching thresholds, occur for a smaller range of inducer concentrations. Specifically, to switch from the $Y$-high to the $X$-high state, one applies an inducer that inactivates $Y$, thereby decreasing $\\sigma_y$. A narrower window means the switch occurs at a larger value of $\\sigma_y$ (closer to $1$), which corresponds to a lower concentration of inducer. The same logic applies symmetrically to the other switch. Therefore, the inducer thresholds move inward.\n\nBased on this analysis:\n-   **Option A**: States that stable-state protein levels decrease, but claims the hysteresis window widens and thresholds shift outward. The latter two claims are incorrect.\n-   **Option B**: States that stable-state protein levels decrease, the hysteresis window narrows, and the inducer thresholds move inward. This is fully consistent with our analysis.\n-   **Option C**: States that stable-state protein levels increase. This is fundamentally incorrect. Increased degradation must lead to lower steady-state concentrations, as the production function is independent of the degradation rate. The reasoning \"faster turnover accelerates production cycles\" is spurious.\n\nTherefore, statement B is correct, while A and C are incorrect.\n\n**Scenario (ii): Asymmetric Tagging ($\\tau_x = \\tau > 1, \\tau_y = 1$)**\n\nHere, the degradation rates are $\\delta_x' = \\tau\\delta$ and $\\delta_y' = \\delta$. This breaks the symmetry of the system. The nullclines become:\n$$ x(y) = \\frac{1}{\\tau\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_y y/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) \\quad (\\text{x-nullcline})$$\n$$ y(x) = \\frac{1}{\\delta} \\left( \\beta\\,\\frac{1}{1+\\left(\\sigma_x x/K\\right)^{n}} \\;+\\; \\beta_{0} \\right) \\quad (\\text{y-nullcline})$$\nThe $y$-nullcline is identical to the untagged symmetric case, but the $x$-nullcline is scaled down by a factor of $1/\\tau$. In the phase plane, this means the $x$-nullcline is shifted towards the $y$-axis (i.e., to lower $x$ values).\n\n1.  **Bias and Stability**: The shift of the $x$-nullcline breaks the symmetry of the phase portrait. The intersection corresponding to the $X$-high, $Y$-low state moves to a lower $x$ value. This lower concentration of $X$ repressor is less effective at keeping the $Y$ gene off. The basin of attraction for this state shrinks, and the state moves closer to the central saddle point, making it less stable. Conversely, the $Y$-high state becomes more robust. The system is now biased towards the $Y$-high, $X$-low state. This confirms \"the toggle becomes biased: the $X$-high state is less stable\".\n\n2.  **Switching Thresholds**:\n    -   **Switch from $X$-high to $Y$-high**: This switch is induced by decreasing $\\sigma_x$ (adding inducer for $X$). This causes the $y$-nullcline to shift upwards. Since the $X$-high state is already less stable and closer to the bifurcation point, a smaller upward shift of the $y$-nullcline is required to trigger the saddle-node bifurcation that eliminates this state. A smaller shift corresponds to a smaller decrease in $\\sigma_x$ from $1$. Thus, the critical value $\\sigma_{x,crit}$ is larger (closer to $1$), meaning less inducer is required. This confirms \"...requires less inducer targeting $X$ to switch...\".\n    -   **Switch from $Y$-high to $X$-high**: This switch is induced by decreasing $\\sigma_y$ (adding inducer for $Y$). This shifts the $x$-nullcline to the right. Because the $x$-nullcline is initially shifted to the left by the factor $1/\\tau$ due to the tag, a larger compensatory shift to the right is needed to reach the tangency point with the $y$-nullcline. This requires a larger decrease in $\\sigma_y$. Thus, the critical value $\\sigma_{y,crit}$ is smaller, meaning more inducer is required. This confirms \"...the reverse switch... requires more inducer targeting $Y$\".\n\n3.  **Dependence on $\\tau_x$**: All the asymmetric effects originate from the increased degradation rate $\\delta_x' = \\tau_x\\delta$. As $\\tau_x$ increases, the $x$-nullcline is shifted further left, amplifying all the consequences: the bias against the $X$-high state becomes stronger, and the disparity in the required inducer concentrations for switching grows. This confirms \"...the degree of asymmetry increases with $\\tau_x$\".\n\nBased on this analysis:\n-   **Option D**: All parts of this statement are consistent with our nullcline analysis. The toggle becomes biased, the $X$-high state is less stable, switching from it is easier (less inducer), switching to it is harder (more inducer), and this asymmetry is magnified by increasing $\\tau_x$.\n\nTherefore, statement D is correct.\n\n**Conclusion**\n\nOur analysis, based on first principles of nullcline geometry and bifurcation theory applied to the provided model, shows that both statement B and statement D are correct descriptions of the system's behavior under the specified modifications.\n\n*   **Option A**: **Incorrect**. Symmetric tagging narrows, not widens, the hysteresis window.\n*   **Option B**: **Correct**. Symmetric tagging decreases protein levels and narrows the hysteresis window, moving thresholds inward.\n*   **Option C**: **Incorrect**. Protein levels decrease, not increase.\n*   **Option D**: **Correct**. Asymmetric tagging on $X$ biases the switch against the $X$-high state, making it less stable and altering the inducer thresholds as described.", "answer": "$$\\boxed{BD}$$", "id": "2783198"}, {"introduction": "While analytical methods reveal fundamental principles, determining the exact operating points of a specific toggle switch design often requires computation. This exercise introduces the essential skill of numerically computing the system's fixed points, which correspond to the intersections of the two nullclines. By developing a robust algorithm, you will move from abstract theory to the concrete, quantitative prediction of circuit behavior for diverse parameter sets. [@problem_id:2783277]", "problem": "You will design and implement a numerical procedure to compute all distinct fixed points of a classical two-gene Genetic Toggle Switch model under transcriptional repression with Hill-type regulation and to report the number of solutions for each of several parameter sets. The toggle switch is modeled at the protein level by the following dimensionless ordinary differential equations, derived from the Central Dogma of Molecular Biology (DNA transcribed to RNA, translated to protein) and well-tested Hill repression functions for transcriptional control:\n- For protein concentrations $x(t)$ and $y(t)$,\n$$\n\\frac{dx}{dt} \\;=\\; \\frac{\\alpha_x}{1 + \\left(\\frac{y}{K_y}\\right)^{n}} \\;-\\; x,\n\\qquad\n\\frac{dy}{dt} \\;=\\; \\frac{\\alpha_y}{1 + \\left(\\frac{x}{K_x}\\right)^{m}} \\;-\\; y.\n$$\nHere $\\alpha_x,\\alpha_y$ are dimensionless maximal synthesis parameters, $K_x,K_y$ are dimensionless repression thresholds, and $n,m$ are Hill coefficients (cooperativity). A fixed point is any pair $(x^\\ast,y^\\ast)$ that satisfies the steady-state conditions $\\frac{dx}{dt}=0$ and $\\frac{dy}{dt}=0$ simultaneously.\n\nYour program must, for each parameter set in the test suite below, compute all distinct fixed points $(x^\\ast,y^\\ast)$ with $x^\\ast \\ge 0$ and $y^\\ast \\ge 0$, and then output only the number of distinct solutions found. Distinctness must be determined by the following criterion: two solutions $(x_1,y_1)$ and $(x_2,y_2)$ represent the same fixed point if both $|x_1-x_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|x_1|,|x_2|\\}$ and $|y_1-y_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|y_1|,|y_2|\\}$, where $\\varepsilon_{\\text{abs}} = 10^{-8}$ and $\\varepsilon_{\\text{rel}} = 10^{-6}$.\n\nScientific assumptions and constraints:\n- All parameters $\\alpha_x,\\alpha_y,K_x,K_y,n,m$ are strictly positive real numbers.\n- Physically admissible fixed points have $x^\\ast \\ge 0$ and $y^\\ast \\ge 0$. Any candidate solutions that violate these inequalities must be discarded.\n- Units are dimensionless by construction; report only dimensionless counts for the number of solutions.\n- Your search domain for $x^\\ast$ and $y^\\ast$ may be bounded using model-implied maxima; it is rigorously true that any fixed point must satisfy $0 \\le x^\\ast \\le \\alpha_x$ and $0 \\le y^\\ast \\le \\alpha_y$.\n\nYour numerical procedure must be general and robust across the test suite, and it must not rely on analytical closed forms for the fixed points. You may use floating-point computations. Angle units are not applicable. Results must be deterministic.\n\nTest suite (each item is a tuple $(\\alpha_x,\\alpha_y,K_x,K_y,n,m)$):\n- Case A: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (50,50,1,1,4,4)$\n- Case B: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (10,10,1,1,1,1)$\n- Case C: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (40,8,1,1,4,4)$\n- Case D: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (10,10,5,5,3,3)$\n- Case E: $(\\alpha_x,\\alpha_y,K_x,K_y,n,m) = (6,6,1,1,1.5,1.5)$\n\nFinal output specification:\n- Your program should produce a single line of output containing a list of integers, one per test case in the order listed above, giving the number of distinct fixed points found for each case.\n- The output must be a single line in the exact format\n\"[rA,rB,rC,rD,rE]\"\nwhere $rA$ is the integer result for Case A, and so on.", "solution": "The problem statement has been analyzed and is determined to be valid. It is scientifically grounded in the established theory of genetic regulatory networks, mathematically well-posed, and presented with objective, unambiguous specifications. It represents a standard, non-trivial problem in computational systems biology. We may therefore proceed with a solution.\n\nThe task is to find the number of distinct, non-negative fixed points $(x^\\ast, y^\\ast)$ for a system of two coupled ordinary differential equations representing a genetic toggle switch. A fixed point is a steady-state solution where the time derivatives are zero. The system is given by:\n$$\n\\frac{dx}{dt} = \\frac{\\alpha_x}{1 + \\left(\\frac{y}{K_y}\\right)^{n}} - x\n$$\n$$\n\\frac{dy}{dt} = \\frac{\\alpha_y}{1 + \\left(\\frac{x}{K_x}\\right)^{m}} - y\n$$\nSetting the derivatives to zero provides the conditions for the fixed points $(x^\\ast, y^\\ast)$:\n$$\nx^\\ast = \\frac{\\alpha_x}{1 + \\left(\\frac{y^\\ast}{K_y}\\right)^{n}} \\quad \\equiv f(y^\\ast)\n$$\n$$\ny^\\ast = \\frac{\\alpha_y}{1 + \\left(\\frac{x^\\ast}{K_x}\\right)^{m}} \\quad \\equiv g(x^\\ast)\n$$\nThese two equations define the nullclines of the system. The fixed points are the intersection points of these two nullclines in the non-negative quadrant of the $(x, y)$ plane.\n\nTo solve this system numerically without relying on analytical forms, we can reduce it to a root-finding problem for a single variable. By substituting the expression for $y^\\ast$ into the equation for $x^\\ast$, we obtain a single equation for $x^\\ast$:\n$$\nx^\\ast = f(g(x^\\ast)) = \\frac{\\alpha_x}{1 + \\left( \\frac{1}{K_y} \\left( \\frac{\\alpha_y}{1 + \\left(\\frac{x^\\ast}{K_x}\\right)^{m}} \\right) \\right)^{n}}\n$$\nA fixed point's $x$-coordinate, $x^\\ast$, must be a root of the function $H(x)$:\n$$\nH(x) = x - f(g(x)) = 0\n$$\nThe problem statement correctly indicates that any physically meaningful solution must satisfy $0 \\le x^\\ast \\le \\alpha_x$ and $0 \\le y^\\ast \\le \\alpha_y$. This is because the Hill-type repression terms are bounded. Consequently, we can confine our search for the roots of $H(x)=0$ to the closed interval $[0, \\alpha_x]$.\n\nThe numerical procedure to find all such roots is as follows:\n1.  **Discretize the Domain**: The search interval $[0, \\alpha_x]$ for $x$ is divided into a large number of small subintervals using a fine grid. Let the grid points be $x_i$ for $i=0, 1, \\dots, N$.\n2.  **Bracket Potential Roots**: The function $H(x)$ is evaluated at each grid point $x_i$. A root is guaranteed to exist in a subinterval $[x_i, x_{i+1}]$ if $H(x_i)$ and $H(x_{i+1})$ have opposite signs, i.e., $H(x_i) \\cdot H(x_{i+1}) < 0$. This is a consequence of the Intermediate Value Theorem, as the function $H(x)$ is continuous. We also explicitly check for roots that fall exactly on a grid point, where $H(x_i) = 0$.\n3.  **Refine Roots**: For each subinterval $[x_i, x_{i+1}]$ that brackets a root, a robust numerical root-finding algorithm is employed to determine the root $x^\\ast$ with high precision. The Brent-Dekker method (`brentq` in `scipy.optimize`) is an excellent choice for this task as it combines guaranteed convergence with high efficiency.\n4.  **Construct Full Solution**: For each distinct root $x^\\ast_j$ found, the corresponding $y$-coordinate is calculated using the nullcline equation $y^\\ast_j = g(x^\\ast_j)$. This gives a candidate fixed point $(x^\\ast_j, y^\\ast_j)$.\n5.  **Filter for Distinct Solutions**: The procedure may find multiple numerical approximations of the same mathematical root due to the nature of the grid search. Therefore, the list of candidate solutions must be filtered to retain only distinct fixed points. This is accomplished by iterating through the list of solutions and comparing each new solution to the already-accepted distinct solutions using the precise tolerance criterion specified in the problem: two points $(x_1, y_1)$ and $(x_2, y_2)$ are considered identical if $|x_1 - x_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|x_1|, |x_2|\\}$ and $|y_1 - y_2| \\le \\varepsilon_{\\text{abs}} + \\varepsilon_{\\text{rel}}\\max\\{|y_1|, |y_2|\\}$, with $\\varepsilon_{\\text{abs}} = 10^{-8}$ and $\\varepsilon_{\\text{rel}} = 10^{-6}$.\n\nThis systematic approach ensures that all fixed points within the specified domain are found and counted accurately, in adherence to the problem's constraints. The final Python implementation will execute this logic for each parameter set provided in the test suite.", "answer": "```python\nimport numpy as np\nfrom scipy.optimize import brentq\n\ndef solve():\n    \"\"\"\n    Main function to solve the genetic toggle switch problem for all test cases.\n    It computes the number of distinct fixed points for each parameter set and\n    prints the results in the specified format.\n    \"\"\"\n    test_cases = [\n        # (alpha_x, alpha_y, K_x, K_y, n, m)\n        (50.0, 50.0, 1.0, 1.0, 4.0, 4.0),  # Case A\n        (10.0, 10.0, 1.0, 1.0, 1.0, 1.0),  # Case B\n        (40.0, 8.0, 1.0, 1.0, 4.0, 4.0),   # Case C\n        (10.0, 10.0, 5.0, 5.0, 3.0, 3.0),  # Case D\n        (6.0, 6.0, 1.0, 1.0, 1.5, 1.5),    # Case E\n    ]\n\n    results = []\n    for params in test_cases:\n        num_solutions = count_fixed_points(params)\n        results.append(num_solutions)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef count_fixed_points(params):\n    \"\"\"\n    Calculates the number of distinct fixed points for a given set of parameters.\n    \"\"\"\n    alpha_x, alpha_y, K_x, K_y, n, m = params\n    \n    eps_abs = 1e-8\n    eps_rel = 1e-6\n\n    def is_close(p1, p2):\n        \"\"\"\n        Custom comparison function to determine if two points are the same\n        based on the problem's specific tolerance definition.\n        \"\"\"\n        x1, y1 = p1\n        x2, y2 = p2\n        \n        x_tol = eps_abs + eps_rel * max(abs(x1), abs(x2))\n        y_tol = eps_abs + eps_rel * max(abs(y1), abs(y2))\n        \n        return abs(x1 - x2) <= x_tol and abs(y1 - y2) <= y_tol\n\n    def g(x_val):\n        \"\"\"Defines the nullcline function y = g(x).\"\"\"\n        x_safe = np.maximum(x_val, 0)\n        return alpha_y / (1.0 + (x_safe / K_x)**m)\n\n    def f(y_val):\n        \"\"\"Defines the nullcline function x = f(y).\"\"\"\n        y_safe = np.maximum(y_val, 0)\n        return alpha_x / (1.0 + (y_safe / K_y)**n)\n\n    def H(x_val):\n        \"\"\"Root-finding function H(x) = x - f(g(x)).\"\"\"\n        return x_val - f(g(x_val))\n\n    search_min = 0.0\n    search_max = alpha_x\n    \n    N_grid = 20000\n    x_grid = np.linspace(search_min, search_max, N_grid)\n    \n    solutions = []\n\n    try:\n        h_vals = np.array([H(xi) for xi in x_grid])\n    except (OverflowError, ValueError):\n        # Fallback for numerical instability, though not expected here\n        print(\"Warning: Numerical instability encountered.\")\n        return 0\n\n    # Grid scan to bracket and find roots\n    for i in range(N_grid - 1):\n        h1, h2 = h_vals[i], h_vals[i+1]\n        x1, x2 = x_grid[i], x_grid[i+1]\n\n        root_to_add = None\n        if h1 * h2 < 0:\n            try:\n                # A root is bracketed, refine it with brentq\n                root_to_add = brentq(H, x1, x2)\n            except ValueError:\n                # This should not be reached if h1*h2 < 0, but is a safeguard\n                pass\n        elif h1 == 0:\n            # A root lies exactly on a grid point\n            root_to_add = x1\n            \n        if root_to_add is not None:\n            solutions.append((root_to_add, g(root_to_add)))\n    \n    # Check the very last grid point\n    if h_vals[-1] == 0:\n        root_to_add = x_grid[-1]\n        solutions.append((root_to_add, g(root_to_add)))\n\n    # Filter for distinct solutions using the specified tolerance\n    distinct_solutions = []\n    if not solutions:\n        return 0\n    \n    for sol in solutions:\n        is_distinct = True\n        for d_sol in distinct_solutions:\n            if is_close(sol, d_sol):\n                is_distinct = False\n                break\n        if is_distinct:\n            # Check physical admissibility (x>=0, y>=0)\n            if sol[0] >= 0 and sol[1] >= 0:\n                distinct_solutions.append(sol)\n            \n    return len(distinct_solutions)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2783277"}]}