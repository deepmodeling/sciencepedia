{"hands_on_practices": [{"introduction": "To begin our practical exploration of cellular edge detection, we first turn to the mathematical foundation that describes it: the reaction-diffusion model. This exercise challenges you to apply the powerful technique of nondimensionalization to a classic activator-inhibitor system. By recasting the equations in terms of dimensionless variables, you will uncover the fundamental parameter groupings that control the system's pattern-forming capabilities, providing deep insight into what truly governs the sharpness of a biological edge [@problem_id:2719110].", "problem": "A spatially extended microbial population implements edge detection using two diffusible species: an intracellularly produced activator, denoted by concentration $a(x,t)$, and a diffusible inhibitor, denoted by concentration $i(x,t)$. The population lies in a $1$-dimensional strip of characteristic length $\\mathcal{L}$ with spatial coordinate $x \\in [0,\\mathcal{L}]$. Both species obey Fickian diffusion and first-order decay. The activator is produced in response to an externally maintained morphogen profile $m(x)$ with Hill-type regulation, while the inhibitor is produced proportionally to the local activator level. The governing reaction-diffusion equations are\n$$\n\\frac{\\partial a}{\\partial t} \\;=\\; D_{a}\\,\\frac{\\partial^{2} a}{\\partial x^{2}} \\;+\\; s_{a}\\,f\\!\\left(m(x)\\right) \\;-\\; k_{a}\\,a,\n\\qquad\n\\frac{\\partial i}{\\partial t} \\;=\\; D_{i}\\,\\frac{\\partial^{2} i}{\\partial x^{2}} \\;+\\; s_{i}\\,a \\;-\\; k_{i}\\,i,\n$$\nwhere $D_{a}$ and $D_{i}$ are diffusion coefficients, $k_{a}$ and $k_{i}$ are first-order decay rates, $s_{a}$ and $s_{i}$ are production rate constants, and the Hill regulation is\n$$\nf\\!\\left(m\\right) \\;=\\; \\frac{m^{n}}{K^{n} + m^{n}},\n$$\nwith Hill coefficient $n \\geq 1$ and activation threshold $K0$. Assume no-flux boundary conditions at $x=0$ and $x=\\mathcal{L}$. The external morphogen $m(x)$ is prescribed and varies smoothly on the spatial domain.\n\nStarting from the fundamental principles of Fickian diffusion and first-order reaction kinetics, introduce characteristic scales for time $T$, length $L$, and concentrations $A_{0}$ and $I_{0}$ to nondimensionalize the system. Define the dimensionless variables $\\tau = t/T$, $\\xi = x/L$, $\\alpha(\\xi,\\tau) = a(x,t)/A_{0}$, and $\\iota(\\xi,\\tau) = i(x,t)/I_{0}$. Derive the nondimensional equations and identify the minimal set of dimensionless groups that govern the shape of the steady-state spatial patterns and the sharpness of the detected edge at the interface of high and low morphogen. Discuss the physical meaning of each dimensionless group you identify in terms of relative diffusion lengths, production versus decay balance, and regulatory steepness.\n\nDefine the edge sharpness index $\\Gamma$ to be the ratio of the activator diffusion length to the inhibitor diffusion length, where the diffusion length of a species with diffusion coefficient $D$ and decay rate $k$ is defined as $\\ell \\equiv \\sqrt{D/k}$. Express $\\Gamma$ in closed form in terms of the dimensional parameters $D_{a}$, $D_{i}$, $k_{a}$, and $k_{i}$. Your final reported answer should be this expression for $\\Gamma$ only, which is dimensionless and thus must be expressed without units.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed. It presents a standard activator-inhibitor system, a cornerstone model in the study of biological pattern formation, described by a set of reaction-diffusion partial differential equations. The parameters and functions are clearly defined, and the task—to nondimensionalize the system, identify governing dimensionless parameters, and derive a specific index—is a standard and rigorous procedure in mathematical biology and physics. Therefore, we will proceed with the solution.\n\nThe problem requires us to analyze the dynamics of an activator $a(x,t)$ and an inhibitor $i(x,t)$ governed by the following system of equations in a one-dimensional domain $x \\in [0, \\mathcal{L}]$:\n$$\n\\frac{\\partial a}{\\partial t} = D_{a}\\,\\frac{\\partial^{2} a}{\\partial x^{2}} + s_{a}\\,f\\!\\left(m(x)\\right) - k_{a}\\,a\n$$\n$$\n\\frac{\\partial i}{\\partial t} = D_{i}\\,\\frac{\\partial^{2} i}{\\partial x^{2}} + s_{i}\\,a - k_{i}\\,i\n$$\nThe first step is to nondimensionalize this system. We introduce the dimensionless variables $\\tau = t/T$, $\\xi = x/L$, $\\alpha(\\xi,\\tau) = a(x,t)/A_{0}$, and $\\iota(\\xi,\\tau) = i(x,t)/I_{0}$, where $T$, $L$, $A_{0}$, and $I_{0}$ are characteristic scales for time, length, activator concentration, and inhibitor concentration, respectively.\n\nThe partial derivatives transform as follows:\n$$\n\\frac{\\partial}{\\partial t} = \\frac{1}{T}\\frac{\\partial}{\\partial \\tau}, \\qquad \\frac{\\partial^{2}}{\\partial x^{2}} = \\frac{1}{L^{2}}\\frac{\\partial^{2}}{\\partial \\xi^{2}}\n$$\nSubstituting these into the governing equations, we obtain:\n$$\n\\frac{A_{0}}{T}\\frac{\\partial \\alpha}{\\partial \\tau} = D_{a}\\frac{A_{0}}{L^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + s_{a}\\,f\\!\\left(m(L\\xi)\\right) - k_{a}A_{0}\\alpha\n$$\n$$\n\\frac{I_{0}}{T}\\frac{\\partial \\iota}{\\partial \\tau} = D_{i}\\frac{I_{0}}{L^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + s_{i}A_{0}\\alpha - k_{i}I_{0}\\iota\n$$\nWe must now choose the characteristic scales. A logical choice for the length scale is the system size, $L = \\mathcal{L}$. For the time scale, we select the inverse of the activator decay rate, $T = 1/k_{a}$, as this represents a fundamental timescale of the system's reaction kinetics. For the activator concentration scale $A_{0}$, we balance the maximum production rate, $s_{a}$ (since $0 \\le f(m) \\le 1$), with the decay rate, yielding $A_{0} = s_{a}/k_{a}$. For the inhibitor concentration scale $I_{0}$, we balance its production from a characteristic activator level $A_{0}$ with its decay, yielding $s_{i}A_{0} = k_{i}I_{0}$, so $I_{0} = s_{i}A_{0}/k_{i} = s_{i}s_{a}/(k_{a}k_{i})$.\n\nWith these scales, we substitute and simplify. First, for the activator equation:\n$$\n\\frac{s_{a}/k_{a}}{1/k_{a}}\\frac{\\partial \\alpha}{\\partial \\tau} = D_{a}\\frac{s_{a}/k_{a}}{\\mathcal{L}^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + s_{a}\\,f\\!\\left(m(\\mathcal{L}\\xi)\\right) - k_{a}(s_{a}/k_{a})\\alpha\n$$\nDividing by $s_{a}$ gives:\n$$\n\\frac{\\partial \\alpha}{\\partial \\tau} = \\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + f\\!\\left(m(\\mathcal{L}\\xi)\\right) - \\alpha\n$$\nNext, for the inhibitor equation:\n$$\n\\frac{I_{0}}{1/k_{a}}\\frac{\\partial \\iota}{\\partial \\tau} = D_{i}\\frac{I_{0}}{\\mathcal{L}^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + s_{i}A_{0}\\alpha - k_{i}I_{0}\\iota\n$$\nDividing by $k_{a}I_{0}$ gives:\n$$\n\\frac{\\partial \\iota}{\\partial \\tau} = \\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + \\frac{s_{i}A_{0}}{k_{a}I_{0}}\\alpha - \\frac{k_{i}}{k_{a}}\\iota\n$$\nSubstituting our chosen scales for $A_{0}$ and $I_{0}$ into the coefficient of $\\alpha$:\n$$\n\\frac{s_{i}A_{0}}{k_{a}I_{0}} = \\frac{s_{i}(s_{a}/k_{a})}{k_{a}(s_{i}s_{a}/(k_{a}k_{i}))} = \\frac{s_{i}s_{a}/k_{a}}{s_{i}s_{a}/k_{i}} = \\frac{k_{i}}{k_{a}}\n$$\nThus, the dimensionless system of equations is:\n$$\n\\frac{\\partial \\alpha}{\\partial \\tau} = \\left(\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{\\partial^{2} \\alpha}{\\partial \\xi^{2}} + \\tilde{f}(\\xi) - \\alpha\n$$\n$$\n\\frac{\\partial \\iota}{\\partial \\tau} = \\left(\\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{\\partial^{2} \\iota}{\\partial \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\nwhere $\\tilde{f}(\\xi) = f(m(\\mathcal{L}\\xi))$.\n\nThe problem asks for the parameters governing the steady-state patterns ($ \\partial/\\partial\\tau = 0 $). The steady-state equations are:\n$$\n0 = \\left(\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{d^{2} \\alpha}{d \\xi^{2}} + \\tilde{f}(\\xi) - \\alpha\n$$\n$$\n0 = \\left(\\frac{D_{i}}{k_{a}\\mathcal{L}^{2}}\\right)\\frac{d^{2} \\iota}{d \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\nUsing the definition of a diffusion length $\\ell \\equiv \\sqrt{D/k}$, we have $\\ell_{a} = \\sqrt{D_{a}/k_{a}}$ and $\\ell_{i} = \\sqrt{D_{i}/k_{i}}$. The coefficients can be rewritten in terms of these fundamental lengths:\n$$\n\\frac{D_{a}}{k_{a}\\mathcal{L}^{2}} = \\left(\\frac{\\ell_{a}}{\\mathcal{L}}\\right)^{2}, \\qquad \\frac{D_{i}}{k_{a}\\mathcal{L}^{2}} = \\frac{D_{i}}{k_{i}\\mathcal{L}^{2}}\\frac{k_{i}}{k_{a}} = \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{k_{i}}{k_{a}}\n$$\nSubstituting these into the second steady-state equation:\n$$\n0 = \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{k_{i}}{k_{a}}\\frac{d^{2} \\iota}{d \\xi^{2}} + \\frac{k_{i}}{k_{a}}\\left(\\alpha - \\iota\\right)\n$$\nSince $k_{i}/k_{a} \\neq 0$, we can divide by it. The final steady-state system is:\n$$\n\\alpha - \\left(\\frac{\\ell_{a}}{\\mathcal{L}}\\right)^{2}\\frac{d^{2} \\alpha}{d \\xi^{2}} = \\tilde{f}(\\xi)\n$$\n$$\n\\iota - \\left(\\frac{\\ell_{i}}{\\mathcal{L}}\\right)^{2}\\frac{d^{2} \\iota}{d \\xi^{2}} = \\alpha\n$$\nFrom this form, the minimal set of dimensionless groups governing the spatial pattern shape is evident:\n1.  $\\Pi_{1} = \\ell_{a}/\\mathcal{L}$: The activator diffusion length relative to the system size. This group represents the ratio of two timescales: the square root of the activator decay timescale ($1/k_a$) to the diffusion timescale across the system ($\\mathcal{L}^2/D_a$). It determines the degree of spatial filtering, or blurring, of the input morphogen profile $\\tilde{f}(\\xi)$ to produce the activator profile $\\alpha(\\xi)$.\n2.  $\\Pi_{2} = \\ell_{i}/\\mathcal{L}$: The inhibitor diffusion length relative to the system size. Analogous to $\\Pi_{1}$, it sets the length scale over which the inhibitor profile $\\iota(\\xi)$ is smoothed relative to its source, the activator profile $\\alpha(\\xi)$.\n3.  $n$: The Hill coefficient. This parameter, originating from the function $\\tilde{f}$, controls the steepness or ultrasensitivity of the production response to the morphogen $m(x)$. A high value of $n$ leads to a more switch-like response, which is a prerequisite for a sharp edge.\n\nFor effective edge detection via lateral inhibition, the inhibitor must diffuse significantly farther than the activator, i.e., $\\ell_{i}  \\ell_{a}$. This ensures that cells in a high-morphogen region activate their neighbors but also inhibit cells further away, confining the activation to a sharp boundary. Therefore, the ratio $\\ell_{i}/\\ell_{a}$ is the most critical parameter for the sharpness of the edge. The set $\\{\\ell_{a}/\\mathcal{L}, \\ell_{i}/\\ell_{a}, n\\}$ is an equivalent minimal set describing the pattern-forming capability.\n\nFinally, we are asked to find the expression for the edge sharpness index $\\Gamma$, which is defined in the problem as the ratio of the activator diffusion length to the inhibitor diffusion length.\n$$\n\\Gamma \\equiv \\frac{\\ell_{a}}{\\ell_{i}}\n$$\nUsing the definition of diffusion length $\\ell = \\sqrt{D/k}$, we have:\n$$\n\\ell_{a} = \\sqrt{\\frac{D_{a}}{k_{a}}}, \\qquad \\ell_{i} = \\sqrt{\\frac{D_{i}}{k_{i}}}\n$$\nSubstituting these into the expression for $\\Gamma$:\n$$\n\\Gamma = \\frac{\\sqrt{D_{a}/k_{a}}}{\\sqrt{D_{i}/k_{i}}} = \\sqrt{\\frac{D_{a}/k_{a}}{D_{i}/k_{i}}} = \\sqrt{\\frac{D_{a} k_{i}}{D_{i} k_{a}}}\n$$\nThis dimensionless quantity captures the crucial balance of diffusion and decay rates between the activator and inhibitor species that determines the system's ability to form a sharp spatial boundary. A value of $\\Gamma  1$ is required for this mechanism of edge detection.", "answer": "$$\\boxed{\\sqrt{\\frac{D_{a} k_{i}}{D_{i} k_{a}}}}$$", "id": "2719110"}, {"introduction": "While continuum models use parameters like the diffusion coefficient $D$, a deeper understanding requires connecting them to the actions of individual cells. This practice guides you through the process of deriving the macroscopic diffusion equation from a microscopic model of bacterial 'run-and-tumble' motility [@problem_id:2719094]. Mastering this derivation provides a crucial bridge between agent-based and continuum descriptions, revealing how population-level phenomena emerge from the stochastic behavior of single agents.", "problem": "Engineered bacteria that implement population-level edge detection on an agar surface redistribute in space via run-and-tumble motility while computing local spatial contrast of a diffusible inducer. Consider an agent-based description of single-cell motility as a continuous-time velocity-jump process in $d=2$ spatial dimensions: each cell runs at constant speed $v$ along a heading defined by an angle $\\theta \\in [0,2\\pi)$ and, at a Poisson rate $\\lambda$, instantaneously reorients to a new heading drawn uniformly at random from $[0,2\\pi)$. Let $p(\\mathbf{x},\\theta,t)$ denote the orientation-resolved number density of cells and let $\\rho(\\mathbf{x},t)=\\int_{0}^{2\\pi} p(\\mathbf{x},\\theta,t)\\,\\mathrm{d}\\theta$ denote the macroscopic cell density. Starting from conservation of probability and the stated isotropic reorientation rule, derive the macroscopic evolution equation for $\\rho(\\mathbf{x},t)$ in the long-time, large-space, parabolic scaling limit in which many reorientations occur on the timescale of population redistribution. Identify the effective diffusion coefficient $D$ that governs this macroscopic limit in terms of the motility parameters $v$ and $\\lambda$ for $d=2$. Provide your final answer as a single closed-form symbolic expression for $D$. Do not include units in your final boxed answer. If you perform any approximations, make explicit the scaling assumptions under which they are valid. The final answer must be a single analytical expression for $D$.", "solution": "The problem as stated is valid. It is a well-posed problem in statistical physics, grounded in the established theory of stochastic processes (specifically, velocity-jump processes) and their macroscopic limits. All parameters and conditions are specified, and the task is to derive a known result from first principles.\n\nWe begin by formalizing the dynamics of the orientation-resolved cell density $p(\\mathbf{x},\\theta,t)$. The evolution of this density is governed by a Boltzmann-type kinetic equation that accounts for two processes: deterministic motion (the \"run\") and stochastic reorientation (the \"tumble\").\n\nThe change in $p(\\mathbf{x},\\theta,t)$ over time is given by the conservation equation in the phase space of position $\\mathbf{x}$ and orientation $\\theta$:\n$$\n\\frac{\\partial p}{\\partial t} + \\nabla \\cdot (\\mathbf{v}(\\theta) p) = \\mathcal{C}[p]\n$$\nHere, $\\mathbf{v}(\\theta)$ is the velocity of a cell with heading $\\theta$. In two dimensions, $\\mathbf{x} = (x, y)$ and the velocity vector is $\\mathbf{v}(\\theta) = v(\\cos\\theta, \\sin\\theta)$, where $v$ is the constant speed. The term $\\nabla \\cdot (\\mathbf{v}(\\theta) p)$ represents the change in density due to cells moving into or out of a volume element. Since $v$ is constant, this simplifies to $\\mathbf{v}(\\theta) \\cdot \\nabla p$.\n\nThe term $\\mathcal{C}[p]$ is the collision or reorientation operator. It describes the rate of change of $p$ due to tumbling events. It consists of a loss term and a gain term.\n1.  **Loss**: Cells with orientation $\\theta$ reorient at a Poisson rate $\\lambda$. This leads to a loss of density in the state $(\\mathbf{x}, \\theta)$ at a rate $-\\lambda p(\\mathbf{x},\\theta,t)$.\n2.  **Gain**: Cells at any orientation $\\theta'$ can reorient and acquire the new orientation $\\theta$. The total rate of tumbling at position $\\mathbf{x}$ is $\\int_{0}^{2\\pi} \\lambda p(\\mathbf{x},\\theta',t) \\, \\mathrm{d}\\theta' = \\lambda\\rho(\\mathbf{x},t)$. Since the new heading is drawn uniformly from $[0, 2\\pi)$, this total rate is distributed evenly over the interval of length $2\\pi$. The gain rate for orientation $\\theta$ is therefore $\\frac{1}{2\\pi} \\lambda \\rho(\\mathbf{x},t)$.\n\nCombining these terms, the kinetic equation for $p(\\mathbf{x},\\theta,t)$ is:\n$$\n\\frac{\\partial p}{\\partial t} + \\mathbf{v}(\\theta) \\cdot \\nabla p = -\\lambda p + \\frac{\\lambda}{2\\pi} \\rho(\\mathbf{x},t)\n$$\nwhere $\\rho(\\mathbf{x},t) = \\int_{0}^{2\\pi} p(\\mathbf{x},\\theta,t) \\, \\mathrm{d}\\theta$ is the macroscopic cell density.\n\nOur goal is to find an equation for $\\rho(\\mathbf{x},t)$. We integrate the kinetic equation over all angles $\\theta \\in [0, 2\\pi)$:\n$$\n\\int_{0}^{2\\pi} \\frac{\\partial p}{\\partial t} \\, \\mathrm{d}\\theta + \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\int_{0}^{2\\pi} \\left(-\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta\n$$\nLet us evaluate each term:\n-   $\\int_{0}^{2\\pi} \\frac{\\partial p}{\\partial t} \\, \\mathrm{d}\\theta = \\frac{\\partial}{\\partial t} \\int_{0}^{2\\pi} p \\, \\mathrm{d}\\theta = \\frac{\\partial \\rho}{\\partial t}$.\n-   $\\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\mathbf{J}$, where we have defined the macroscopic flux vector $\\mathbf{J}(\\mathbf{x},t) = \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p(\\mathbf{x},\\theta,t) \\, \\mathrm{d}\\theta$.\n-   $\\int_{0}^{2\\pi} \\left(-\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta = -\\lambda \\int_{0}^{2\\pi} p \\, \\mathrm{d}\\theta + \\frac{\\lambda\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathrm{d}\\theta = -\\lambda\\rho + \\frac{\\lambda\\rho}{2\\pi}(2\\pi) = 0$.\n\nThis yields the macroscopic continuity equation:\n$$\n\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\mathbf{J} = 0\n$$\nThis equation is not closed, as it relates $\\rho$ to $\\mathbf{J}$. To close it, we need an expression for $\\mathbf{J}$ in terms of $\\rho$. We derive an evolution equation for $\\mathbf{J}$ by multiplying the kinetic equation by $\\mathbf{v}(\\theta)$ and integrating over $\\theta$:\n$$\n\\frac{\\partial}{\\partial t} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta + \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) (\\mathbf{v}(\\theta) \\cdot \\nabla p) \\, \\mathrm{d}\\theta = \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\left( -\\lambda p + \\frac{\\lambda}{2\\pi} \\rho \\right) \\mathrm{d}\\theta\n$$\nLet us evaluate each term in this new equation:\n-   The first term is $\\frac{\\partial \\mathbf{J}}{\\partial t}$.\n-   The right-hand side is $-\\lambda \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) p \\, \\mathrm{d}\\theta + \\frac{\\lambda\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\, \\mathrm{d}\\theta$. The first part is $-\\lambda \\mathbf{J}$. The second part is zero because $\\int_0^{2\\pi} \\cos\\theta \\, \\mathrm{d}\\theta = 0$ and $\\int_0^{2\\pi} \\sin\\theta \\, \\mathrm{d}\\theta = 0$. Thus, the RHS is $-\\lambda \\mathbf{J}$.\n-   The second term on the left is $\\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) \\cdot \\nabla p \\, \\mathrm{d}\\theta = \\nabla \\cdot \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) p \\, \\mathrm{d}\\theta$, where $\\otimes$ denotes the outer product. Let us call the tensor $\\mathcal{T} = \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) p \\, \\mathrm{d}\\theta$.\n\nThe evolution equation for the flux is therefore:\n$$\n\\frac{\\partial \\mathbf{J}}{\\partial t} + \\nabla \\cdot \\mathcal{T} = -\\lambda \\mathbf{J}\n$$\nThis is the second equation in a hierarchy of moment equations. We now invoke the condition of the \"long-time, large-space, parabolic scaling limit.\" This limit corresponds to observing the system on time scales much longer than the reorientation time $1/\\lambda$ and on length scales much larger than the typical run length $v/\\lambda$. In this limit, the flux $\\mathbf{J}$ evolves much more slowly than the fast relaxation rate $\\lambda$, so we can assume $\\frac{\\partial \\mathbf{J}}{\\partial t} \\ll \\lambda \\mathbf{J}$. This is an adiabatic approximation where the fast variable $\\mathbf{J}$ is eliminated. Neglecting the time derivative of the flux, we obtain:\n$$\n\\lambda \\mathbf{J} \\approx - \\nabla \\cdot \\mathcal{T}\n$$\nTo proceed, we must approximate the tensor $\\mathcal{T}$. In the diffusive limit, the orientational distribution $p(\\mathbf{x},\\theta,t)$ is nearly isotropic. We can approximate it by its leading order term, $p(\\mathbf{x},\\theta,t) \\approx \\frac{\\rho(\\mathbf{x},t)}{2\\pi}$. Substituting this into the definition of $\\mathcal{T}$:\n$$\n\\mathcal{T} \\approx \\int_{0}^{2\\pi} (\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)) \\frac{\\rho}{2\\pi} \\, \\mathrm{d}\\theta = \\frac{\\rho}{2\\pi} \\int_{0}^{2\\pi} \\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta) \\, \\mathrm{d}\\theta\n$$\nLet us compute the components of the integral. The matrix $\\mathbf{v}(\\theta) \\otimes \\mathbf{v}(\\theta)$ is $v^2 \\begin{pmatrix} \\cos^2\\theta  \\cos\\theta\\sin\\theta \\\\ \\cos\\theta\\sin\\theta  \\sin^2\\theta \\end{pmatrix}$.\n-   xx-component: $\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\cos^2\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\frac{1+\\cos(2\\theta)}{2} \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\left[\\pi\\right] = \\frac{\\rho v^2}{2}$.\n-   yy-component: $\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\sin^2\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\frac{1-\\cos(2\\theta)}{2} \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{2\\pi} \\left[\\pi\\right] = \\frac{\\rho v^2}{2}$.\n-   xy-component: $\\frac{\\rho v^2}{2\\pi} \\int_0^{2\\pi} \\cos\\theta\\sin\\theta \\, \\mathrm{d}\\theta = \\frac{\\rho v^2}{4\\pi} \\int_0^{2\\pi} \\sin(2\\theta) \\, \\mathrm{d}\\theta = 0$.\nSo the tensor $\\mathcal{T}$ is diagonal and isotropic: $\\mathcal{T} \\approx \\frac{\\rho v^2}{2} \\mathbf{I}$, where $\\mathbf{I}$ is the $2 \\times 2$ identity matrix.\n\nSubstituting this result into the approximate flux equation:\n$$\n\\lambda \\mathbf{J} \\approx - \\nabla \\cdot \\left(\\frac{\\rho v^2}{2} \\mathbf{I}\\right) = - \\frac{v^2}{2} \\nabla\\rho\n$$\nThis gives Fick's first law of diffusion:\n$$\n\\mathbf{J}(\\mathbf{x},t) = - \\frac{v^2}{2\\lambda} \\nabla\\rho(\\mathbf{x},t)\n$$\nFinally, we substitute this expression for the flux $\\mathbf{J}$ back into the continuity equation $\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\mathbf{J} = 0$:\n$$\n\\frac{\\partial \\rho}{\\partial t} + \\nabla \\cdot \\left(- \\frac{v^2}{2\\lambda} \\nabla\\rho \\right) = 0\n$$\n$$\n\\frac{\\partial \\rho}{\\partial t} = \\frac{v^2}{2\\lambda} \\nabla^2\\rho\n$$\nThis is the macroscopic evolution equation for the cell density, which is the diffusion equation. By comparing this to the general form of the diffusion equation, $\\frac{\\partial \\rho}{\\partial t} = D \\nabla^2\\rho$, we identify the effective diffusion coefficient $D$.\nThe result holds for dimensionality $d=2$. For general dimension $d$, the result is $D = v^2/(d\\lambda)$.", "answer": "$$\\boxed{\\frac{v^{2}}{2\\lambda}}$$", "id": "2719094"}, {"introduction": "Moving from analysis to design, we now tackle the engineering challenge of building a precise edge detector. This exercise places you in the role of a synthetic biologist, tasking you with optimizing a genetic band-pass filter to produce the sharpest possible output band in response to a morphogen gradient [@problem_id:2719114]. Through a systematic parameter search, you will gain hands-on experience with the trade-offs inherent in circuit design and learn how to computationally tune a system for optimal performance.", "problem": "A synthetic multicellular edge detector can be modeled by a band-pass gene expression circuit in which a morphogen concentration field varies across space and each cell’s steady-state output is the product of an activating Hill function and a repressing Hill function evaluated at the local morphogen level. The objective is to identify the activation and repression strengths and Hill coefficients that minimize the band width of the population response while maintaining a nonzero peak output in the presence of a spatial gradient.\n\nStart from the following well-tested facts and modeling assumptions. Gene expression driven by a transcription factor (the morphogen) can be approximated by Hill-type occupancy functions. Let the morphogen gradient be a smooth, monotone function of space, and let steady-state output be proportional to the product of an activation term and a repression term. For spatial position $x$ in a one-dimensional domain $[0,1]$, define the morphogen profile\n$$\ng(x) \\;=\\; g_{\\mathrm{lo}} \\;+\\; \\frac{g_{\\mathrm{hi}} - g_{\\mathrm{lo}}}{1 + \\exp\\!\\left(-\\frac{x - x_0}{\\sigma}\\right)} \\,,\n$$\nwith $g_{\\mathrm{lo}} \\in \\mathbb{R}_{0}$, $g_{\\mathrm{hi}} \\in \\mathbb{R}_{0}$, $x_0 \\in (0,1)$, and $\\sigma \\in \\mathbb{R}_{0}$. The activation term is\n$$\n\\mathrm{Act}(g; K_a, n) \\;=\\; \\frac{g^n}{K_a^n + g^n} \\,,\n$$\nand the repression term is\n$$\n\\mathrm{Rep}(g; K_r, m) \\;=\\; \\frac{K_r^m}{K_r^m + g^m} \\,.\n$$\nDefine the steady-state output of a cell at position $x$ by\n$$\ny(x; s_a, s_r, n, m) \\;=\\; \\left[\\mathrm{Act}\\!\\left(g(x); K_a, n\\right)\\right]^{s_a} \\cdot \\left[\\mathrm{Rep}\\!\\left(g(x); K_r, m\\right)\\right]^{s_r} \\,,\n$$\nwhere $s_a \\in \\mathbb{R}_{0}$ and $s_r \\in \\mathbb{R}_{0}$ are the activation and repression strengths, and $n \\in \\mathbb{N}$ and $m \\in \\mathbb{N}$ are the Hill coefficients for activation and repression, respectively. The thresholds $K_a$ and $K_r$ are fixed, with $K_a  K_r$, ensuring a band-pass regime for intermediate $g$.\n\nDefine the band width using the full width at half maximum (FWHM), where Full Width at Half Maximum (FWHM) is the spatial width over which the output exceeds half of its peak value. Let $y_{\\max} = \\max_{x \\in [0,1]} y(x)$ and $\\tau = \\frac{1}{2} y_{\\max}$. The FWHM is the measure\n$$\nW \\;=\\; \\max\\{x \\in [0,1] \\;|\\; y(x) \\ge \\tau\\} \\;-\\; \\min\\{x \\in [0,1] \\;|\\; y(x) \\ge \\tau\\} \\,,\n$$\ncomputed on a discrete grid. To avoid trivial solutions, require a nonzero peak by imposing $y_{\\max} \\ge \\varepsilon$ for a small $\\varepsilon \\in \\mathbb{R}_{0}$.\n\nYour task is to write a complete, runnable program that, for each specified test case, searches a discrete parameter grid for $(s_a, s_r, n, m)$ and returns the parameter tuple that minimizes the band width $W$ subject to $y_{\\max} \\ge \\varepsilon$. If there are ties in $W$ within numerical tolerance, prefer the tuple with larger $y_{\\max}$; if still tied, prefer the tuple with smaller $\\ell_2$ norm $\\sqrt{s_a^2 + s_r^2 + n^2 + m^2}$.\n\nAll quantities are dimensionless. Angles are not used. No percentages are used.\n\nUse the following fixed constants for all test cases:\n- $K_a = 0.5$,\n- $K_r = 2.0$,\n- $g_{\\mathrm{lo}} = 0.01$,\n- $g_{\\mathrm{hi}} = 10.0$,\n- $x_0 = 0.5$,\n- $\\varepsilon = 10^{-3}$,\n- Spatial domain $x \\in [0,1]$ discretized uniformly with $N = 1001$ points.\n\nUse the following parameter search grid for every test case:\n- Activation strength $s_a \\in \\{0.5, 1.0, 2.0\\}$,\n- Repression strength $s_r \\in \\{0.5, 1.0, 2.0\\}$,\n- Activation Hill coefficient $n \\in \\{1, 2, 3, 4\\}$,\n- Repression Hill coefficient $m \\in \\{1, 2, 3, 4\\}$.\n\nUse the following test suite of gradient steepness values:\n- Test case A: $\\sigma = 0.02$,\n- Test case B: $\\sigma = 0.10$,\n- Test case C: $\\sigma = 0.50$.\n\nFor each test case, compute the best tuple $(s_a, s_r, n, m)$, its achieved FWHM $W$, and its peak output $y_{\\max}$. Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. The result for each test case must be a list of the form $[s_a, s_r, n, m, W, y_{\\max}]$ with $W$ and $y_{\\max}$ rounded to $6$ decimal places, in the order of the test cases A, B, C. For example, the overall output format must be\n$$\n\\big[ [s_a^{(A)}, s_r^{(A)}, n^{(A)}, m^{(A)}, W^{(A)}, y_{\\max}^{(A)}], [s_a^{(B)}, s_r^{(B)}, n^{(B)}, m^{(B)}, W^{(B)}, y_{\\max}^{(B)}], [s_a^{(C)}, s_r^{(C)}, n^{(C)}, m^{(C)}, W^{(C)}, y_{\\max}^{(C)}] \\big].\n$$\nNo additional text should be printed.", "solution": "The problem presented is a well-defined computational optimization task rooted in the field of synthetic biology. The objective is to determine the optimal parameters for a synthetic gene circuit designed to function as a population-level edge detector. This is achieved by engineering a band-pass filter response to a spatially varying morphogen concentration. The optimal parameters are those that minimize the spatial width of the gene expression band while ensuring a sufficiently high peak expression level.\n\nThe system is modeled as follows. A one-dimensional spatial domain is defined for $x \\in [0,1]$. Across this domain, a morphogen concentration profile $g(x)$ is established, described by a sigmoidal function:\n$$\ng(x) = g_{\\mathrm{lo}} + \\frac{g_{\\mathrm{hi}} - g_{\\mathrm{lo}}}{1 + \\exp\\left(-\\frac{x - x_0}{\\sigma}\\right)}\n$$\nHere, $g_{\\mathrm{lo}}$ and $g_{\\mathrm{hi}}$ are the minimum and maximum morphogen concentrations, $x_0$ is the center of the gradient, and $\\sigma$ controls the steepness of the gradient.\n\nCells at each position $x$ respond to the local morphogen concentration $g(x)$ through a gene circuit. The steady-state output of this circuit, denoted $y(x)$, is modeled as the product of an activating term and a repressing term. Both terms are described by Hill functions, which are standard for modeling cooperative molecular interactions.\n\nThe activation term, $\\mathrm{Act}(g)$, is given by:\n$$\n\\mathrm{Act}(g; K_a, n) = \\frac{g^n}{K_a^n + g^n}\n$$\nwhere $K_a$ is the activation threshold and $n$ is the activation Hill coefficient, which quantifies the steepness of the response.\n\nThe repression term, $\\mathrm{Rep}(g)$, is given by:\n$$\n\\mathrm{Rep}(g; K_r, m) = \\frac{K_r^m}{K_r^m + g^m}\n$$\nwhere $K_r$ is the repression threshold and $m$ is the repression Hill coefficient. The condition $K_a  K_r$ ensures that activation occurs at lower morphogen concentrations than repression, creating a band of expression at intermediate concentrations.\n\nThe total cell output $y(x)$ is a function of four tunable parameters: the activation strength $s_a$, the repression strength $s_r$, and the Hill coefficients $n$ and $m$.\n$$\ny(x; s_a, s_r, n, m) = \\left[\\mathrm{Act}(g(x); K_a, n)\\right]^{s_a} \\cdot \\left[\\mathrm{Rep}(g(x); K_r, m)\\right]^{s_r}\n$$\n\nThe primary optimization objective is to minimize the band width, $W$, of the expression profile $y(x)$. The band width is quantified by the Full Width at Half Maximum (FWHM). First, the peak output is found: $y_{\\max} = \\max_{x \\in [0,1]} y(x)$. The FWHM is then defined as the spatial distance between the two points where the output $y(x)$ is equal to half of its maximum value, $\\tau = \\frac{1}{2} y_{\\max}$. Formally:\n$$\nW = \\max\\{x \\in [0,1] \\mid y(x) \\ge \\tau\\} - \\min\\{x \\in [0,1] \\mid y(x) \\ge \\tau\\}\n$$\nTo prevent trivial solutions (e.g., zero output everywhere, which has a width of zero), a constraint is imposed: the peak output must be above a minimum threshold $\\varepsilon$.\n$$\ny_{\\max} \\ge \\varepsilon\n$$\nThe optimization problem is thus:\n$$\n\\min_{(s_a, s_r, n, m)} W \\quad \\text{subject to} \\quad y_{\\max} \\ge \\varepsilon\n$$\nThe search for the optimal parameter set $(s_a, s_r, n, m)$ is conducted over a specified discrete grid. Given the discrete nature of the search space, a solution is guaranteed to exist. To ensure a unique solution, a set of tie-breaking rules is defined:\n1.  If multiple parameter sets yield the same minimal width $W$ (within a small numerical tolerance), the set that produces the largest peak output $y_{\\max}$ is preferred.\n2.  If a tie still persists, the set with the smallest $\\ell_2$ norm, $\\sqrt{s_a^2 + s_r^2 + n^2 + m^2}$, is chosen.\n\nThe computational procedure to solve this problem for each test case involves the following steps:\n1.  Discretize the spatial domain $x \\in [0,1]$ into $N=1001$ equally spaced points.\n2.  For a given test case value of $\\sigma$, calculate the morphogen profile $g(x)$ over the discrete grid.\n3.  Iterate through every possible combination of $(s_a, s_r, n, m)$ from the provided parameter search grid.\n4.  For each parameter combination, calculate the output profile $y(x)$, find its maximum $y_{\\max}$, and verify that $y_{\\max} \\ge \\varepsilon$.\n5.  If the constraint is met, calculate the band width $W$.\n6.  Compare the resulting $(W, y_{\\max})$ and the parameter norm with the best values found so far, applying the hierarchical optimization criteria to update the best-known solution.\n7.  After exploring the entire parameter grid, the optimal parameter tuple $(s_a, s_r, n, m)$ and its corresponding metrics $W$ and $y_{\\max}$ are recorded. This process is repeated for each test case.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the synthetic biology edge detector optimization problem.\n    \"\"\"\n\n    # --- Fixed constants ---\n    KA = 0.5\n    KR = 2.0\n    G_LO = 0.01\n    G_HI = 10.0\n    X0 = 0.5\n    EPSILON = 1e-3\n    N_POINTS = 1001\n\n    # --- Spatial domain ---\n    x_grid = np.linspace(0, 1, N_POINTS)\n\n    # --- Parameter search grid ---\n    sa_grid = [0.5, 1.0, 2.0]\n    sr_grid = [0.5, 1.0, 2.0]\n    n_grid = [1, 2, 3, 4]\n    m_grid = [1, 2, 3, 4]\n\n    # --- Test cases for gradient steepness ---\n    test_cases = [\n        0.02,  # Case A\n        0.10,  # Case B\n        0.50,  # Case C\n    ]\n\n    all_results = []\n    TOL = 1e-9  # Numerical tolerance for float comparisons\n\n    for sigma in test_cases:\n        # Calculate morphogen profile for the current test case\n        g = G_LO + (G_HI - G_LO) / (1.0 + np.exp(-(x_grid - X0) / sigma))\n\n        # Initialize tracking variables for the best parameters\n        best_W = float('inf')\n        best_y_max_at_W = -1.0\n        best_norm_at_tie = float('inf')\n        best_params = None\n\n        # Grid search over all parameter combinations\n        for sa in sa_grid:\n            for sr in sr_grid:\n                for n in n_grid:\n                    for m in m_grid:\n                        # Calculate activation and repression terms\n                        gn = np.power(g, n)\n                        gm = np.power(g, m)\n                        \n                        act = gn / (KA**n + gn)\n                        rep = (KR**m) / (KR**m + gm)\n                        \n                        # Calculate cell output profile\n                        y = np.power(act, sa) * np.power(rep, sr)\n\n                        # Find peak output and check constraint\n                        y_max = np.max(y)\n                        if y_max  EPSILON:\n                            continue\n\n                        # Calculate Full Width at Half Maximum (FWHM)\n                        tau = 0.5 * y_max\n                        above_half_max_indices = np.where(y >= tau)[0]\n                        \n                        if above_half_max_indices.size > 1:\n                            W = x_grid[above_half_max_indices[-1]] - x_grid[above_half_max_indices[0]]\n                        else:\n                            # If only one point is at/above half-max, width is zero.\n                            W = 0.0\n\n                        # Apply optimization criteria with tie-breaking\n                        is_better = False\n                        if W  best_W - TOL:\n                            is_better = True\n                        elif W  best_W + TOL:  # Tie in W\n                            if y_max > best_y_max_at_W + TOL:\n                                is_better = True\n                            elif y_max > best_y_max_at_W - TOL:  # Tie in W and y_max\n                                norm = np.sqrt(sa**2 + sr**2 + n**2 + m**2)\n                                if norm  best_norm_at_tie - TOL:\n                                    is_better = True\n                        \n                        if is_better:\n                            best_W = W\n                            best_y_max_at_W = y_max\n                            best_norm_at_tie = np.sqrt(sa**2 + sr**2 + n**2 + m**2)\n                            best_params = (sa, sr, n, m)\n                            \n        # Store the result for the current test case\n        if best_params:\n            sa_opt, sr_opt, n_opt, m_opt = best_params\n            # Recalculate y_max for the optimal parameters, as best_y_max_at_W might be from a different set in case of a norm tie\n            gn_opt = np.power(g, n_opt)\n            gm_opt = np.power(g, m_opt)\n            act_opt = gn_opt / (KA**n_opt + gn_opt)\n            rep_opt = (KR**m_opt) / (KR**m_opt + gm_opt)\n            y_opt = np.power(act_opt, sa_opt) * np.power(rep_opt, sr_opt)\n            final_y_max = np.max(y_opt)\n\n            all_results.append([sa_opt, sr_opt, n_opt, m_opt, best_W, final_y_max])\n\n    # Format the final output string exactly as required\n    result_strings = []\n    for res in all_results:\n        sa, sr, n, m, W, y_max = res\n        result_strings.append(f\"[{sa}, {sr}, {n}, {m}, {W:.6f}, {y_max:.6f}]\")\n    \n    final_output = f\"[{','.join(result_strings)}]\"\n    print(final_output)\n\nsolve()\n```", "id": "2719114"}]}