{"hands_on_practices": [{"introduction": "At the heart of every recombinase-based state machine is a fundamental, irreversible switching event. This first practice challenges you to reason from the core principles of unidirectional serine integrases, which catalyze recombination between $attB$ and $attP$ sites but not the reverse reaction without a helper protein. By analyzing the consequences of this molecular ratchet on a simple circular DNA plasmid [@problem_id:2768760], you will solidify your understanding of how stable, single-use state transitions are engineered at the DNA level.", "problem": "A circular deoxyribonucleic acid (DNA) plasmid contains exactly two distinct recombination sites: a single bacteriophage attachment site $attP$ and a single bacterial attachment site $attB$. The two sites are arranged in inverted (head-to-head) orientation, flanking a unique, non-palindromic DNA segment $S$. A unidirectional serine integrase acts on this plasmid in the absence of any Recombinase Directionality Factor (RDF). Assume the following well-tested facts as the fundamental base:\n- Site-specific serine integrases catalyze recombination specifically between $attB$ and $attP$ to yield $attL$ and $attR$.\n- In the absence of an RDF, the $attL \\times attR$ reaction is not catalyzed, while the forward $attB \\times attP$ reaction proceeds.\n- Recombination between inverted sites on a circular DNA results in an inversion of the intervening segment, whereas recombination between directly repeated sites results in an excision/integration event.\n- The two core sites are unique and asymmetric (i.e., $attB \\neq attP$; neither is palindromic), and $S$ is non-palindromic and distinct from the rest of the plasmid sequence.\n\nStarting from these principles and the topology of circular DNA, derive from first principles the complete set of distinct, topologically unique DNA arrangements reachable from the initial plasmid by any sequence of allowed recombination events under these biochemical constraints. For counting purposes, treat the unrecombined starting configuration as a valid arrangement.\n\nWhat is the total number of distinct DNA arrangements reachable under these conditions? Provide your answer as a single integer. No rounding is required.", "solution": "The problem requires the derivation of the complete set of distinct, topologically unique DNA arrangements reachable from a specified initial configuration under a defined set of biochemical rules.\n\nLet the initial state of the circular plasmid be denoted as $\\Sigma_1$. According to the problem statement, this plasmid contains a backbone sequence, which we shall call $P_B$, a non-palindromic DNA segment $S$, and two distinct, asymmetric recombination sites, $attB$ and $attP$. The sites $attB$ and $attP$ are in an inverted (head-to-head) orientation and flank the segment $S$.\n\nWe can represent the molecular arrangement of $\\Sigma_1$ as a circular sequence of its components. To denote the asymmetry and orientation, we can use an arrow notation. Let traversal in one direction along the plasmid be the reference. The inverted orientation means one site is oriented in the direction of traversal and the other is oriented opposite to it. Thus, the configuration of $\\Sigma_1$ is:\n$$ \\text{State } \\Sigma_1: \\text{circular}(P_B, attB, S, attP_{inv}) $$\nHere, $attP_{inv}$ represents the $attP$ site in an inverted orientation relative to the $attB$ site.\n\nThe system contains a unidirectional serine integrase that acts in the absence of a Recombinase Directionality Factor (RDF). The rules governing its action are provided:\n$1$. The integrase specifically catalyzes recombination between an $attB$ site and an $attP$ site.\n$2$. On a circular DNA molecule, recombination between inverted sites results in the inversion of the intervening DNA segment.\n$3$. The reaction consumes the $attB$ and $attP$ sites to produce two new sites, $attL$ and $attR$.\n$4$. In the absence of an RDF, the reverse reaction, $attL \\times attR \\rightarrow attB \\times attP$, is not catalyzed.\n\nApplying these rules to state $\\Sigma_1$:\nThe plasmid in state $\\Sigma_1$ contains precisely one $attB$ site and one $attP$ site. According to rule $1$, the integrase can act on this pair of sites. As the sites are in an inverted orientation (given), rule $2$ dictates that the reaction will be an inversion of the intervening segment, $S$. This recombination event transforms the plasmid from state $\\Sigma_1$ to a new state, which we will call $\\Sigma_2$.\n\nThe transformation entails two changes:\na) The segment $S$ is inverted. Let us denote the inverted segment as $S_{inv}$. The problem states that $S$ is non-palindromic, which means its DNA sequence is not identical to its reverse complement. Therefore, $S \\neq S_{inv}$.\nb) The sites $attB$ and $attP$ are converted to $attL$ and $attR$ (rule $3$). The standard mechanism of site-specific inversion dictates that the resulting sites retain the orientation of the substrate sites. Thus, the $attL$ and $attR$ sites in the new plasmid will also be in an inverted orientation.\n\nThe configuration of the new state, $\\Sigma_2$, is therefore:\n$$ \\text{State } \\Sigma_2: \\text{circular}(P_B, attL, S_{inv}, attR_{inv}) $$\nThe arrangement $\\Sigma_2$ is distinct from $\\Sigma_1$ because its molecular composition is different. Specifically, the set of recombination sites has changed from $\\{attB, attP\\}$ to $\\{attL, attR\\}$, and the flanked DNA segment has changed from $S$ to $S_{inv}$.\n\nNow, we must assess the possibility of further reactions from state $\\Sigma_2$. The plasmid in state $\\Sigma_2$ contains one $attL$ site and one $attR$ site. According to rule $4$, the $attL \\times attR$ reaction is not catalyzed by the integrase in the absence of an RDF. Since there are no other integrase-cognate sites on the plasmid (such as $attB$ or $attP$), no further recombination events can occur. State $\\Sigma_2$ is therefore a terminal state.\n\nThe state transition diagram for this system is a simple directed graph:\n$$ \\Sigma_1 \\xrightarrow{\\text{integrase}} \\Sigma_2 $$\nThe set of all DNA arrangements reachable from the initial configuration $\\Sigma_1$ is the set of all states reachable in this graph, which is $\\{\\Sigma_1, \\Sigma_2\\}$. The problem asks for the total number of such arrangements, which is the cardinality of this set.\n\nThe reachable arrangements are:\n$1$. The initial, unrecombined plasmid configuration, $\\Sigma_1$.\n$2$. The final, post-recombination configuration, $\\Sigma_2$.\n\nThere are exactly two distinct, reachable arrangements.", "answer": "$$\\boxed{2}$$", "id": "2768760"}, {"introduction": "Once you have mastered the single switch, the next step is to combine multiple switches to build more complex devices like counters or memory registers. This exercise models a two-bit counter using two orthogonal recombinase systems, where each state transition corresponds to a single, targeted DNA inversion event [@problem_id:2768689]. By abstracting this system into a state-space graph, you will practice thinking about deterministic control sequences and apply principles from graph theory to find the most efficient path to cycle through all possible states of the machine.", "problem": "A two-bit counter is implemented using orthogonal serine recombinases acting on two independent invertible cassettes in Deoxyribonucleic Acid (DNA). The orientation of each cassette encodes a binary bit: forward orientation encodes $0$ and reverse orientation encodes $1$. A Deterministic Flip (DF) pulse is defined as a temporally isolated induction input that activates exactly one designated recombinase, optionally together with its Recombination Directionality Factor (RDF), so that in response to a single pulse exactly one of the two cassettes flips orientation and the other cassette remains unchanged. Assume ideal switching: no missed flips, no cross-reactivity, no spontaneous reversal, and instantaneous settling between pulses.\n\nLet the system start in state $00$ at time $t=0$. A valid state transition is any change of exactly one bit, induced by a single DF pulse. Define a full cycle as a closed walk on the state space that starts at $00$, visits each of the $2^{2}$ states exactly once, and returns to $00$.\n\nUnder the assumptions above, what is the minimal number of DF pulses required to complete one full cycle? Express your answer as an integer with no units.", "solution": "The problem statement must first be rigorously validated.\n\nStep 1: Extract Givens.\n- The system is a two-bit counter, with state represented by two bits. The number of states is $2^2 = 4$.\n- The states are encoded by the orientation of two independent DNA cassettes: forward orientation is bit value $0$, reverse is $1$. The state space is thus the set of binary strings of length $2$: $\\{00, 01, 10, 11\\}$.\n- A \"Deterministic Flip (DF) pulse\" is an operation that flips exactly one of the two bits.\n- The system is assumed to have \"ideal switching\".\n- The initial state at time $t=0$ is $00$.\n- A \"valid state transition\" is a change of exactly one bit.\n- A \"full cycle\" is defined as a closed walk starting at $00$, visiting each of the $2^2$ states exactly once, and returning to $00$.\n- The question asks for the minimal number of DF pulses required for one full cycle.\n\nStep 2: Validate Using Extracted Givens.\nThe problem is scientifically grounded, as it describes a simplified but valid model of a recombinase-based state machine, a topic within synthetic biology. The concepts of orthogonal recombinases, invertible DNA, and state transitions via bit flips are standard abstractions in this field. The problem is well-posed; the state space, transition rules, and objective are all defined with mathematical precision. The language is objective and devoid of ambiguity. All necessary conditions are provided, and there are no contradictions. The problem is a formalizable logical puzzle, not a triviality, and its solution is verifiable through graph-theoretic reasoning. The problem is therefore deemed valid.\n\nStep 3: Proceed to Solution.\n\nThe system can be modeled as a graph, $G=(V, E)$, where the set of vertices $V$ represents the possible states of the two-bit counter, and the set of edges $E$ represents the valid transitions between these states.\n\nThe set of vertices is the set of all binary strings of length $2$: $V = \\{00, 01, 10, 11\\}$. The total number of vertices is $|V| = 2^2 = 4$.\n\nA valid state transition is defined as a \"change of exactly one bit\", which is induced by a single \"DF pulse\". This means that an edge exists between two vertices if and only if the Hamming distance between their corresponding binary strings is exactly $1$. This graph is the $2$-dimensional hypercube graph, commonly denoted as $Q_2$.\n\nLet us construct the adjacency list for this graph:\n- From state $00$, one can transition to $01$ (by flipping the second bit) or to $10$ (by flipping the first bit).\n- From state $01$, one can transition to $00$ (by flipping the second bit) or to $11$ (by flipping the first bit).\n- From state $10$, one can transition to $00$ (by flipping the first bit) or to $11$ (by flipping the second bit).\n- From state $11$, one can transition to $01$ (by flipping the first bit) or to $10$ (by flipping the second bit).\n\nVisually, this graph is a square with vertices $00, 01, 11, 10$ connected in sequence.\n\nThe problem asks for the minimal number of DF pulses required to complete a \"full cycle\". A full cycle is defined as a \"closed walk on the state space that starts at $00$, visits each of the $2^2$ states exactly once, and returns to $00$\". This is the precise definition of a Hamiltonian cycle in the graph $G$, starting and ending at the vertex corresponding to state $00$.\n\nThe number of DF pulses corresponds to the number of edges traversed in this walk, which is the length of the cycle.\nA Hamiltonian cycle in a graph with $N$ vertices is a cycle that visits each vertex exactly once. By definition, such a cycle must consist of $N$ edges to connect the $N$ vertices in a closed loop.\n\nIn this problem, the number of states (vertices) is $N = 4$. Therefore, any Hamiltonian cycle in the graph $G$ must have a length of exactly $4$. Since a DF pulse corresponds to traversing one edge, a Hamiltonian cycle of length $4$ requires exactly $4$ DF pulses.\n\nThe existence of such a cycle is guaranteed, as the graph $Q_2$ contains one. For example, one such cycle starting from state $00$ is:\n$1$. Start at $00$.\n$2$. Apply a DF pulse to flip the second cassette. State becomes $01$. (1 pulse)\n$3$. Apply a DF pulse to flip the first cassette. State becomes $11$. (2 pulses)\n$4$. Apply a DF pulse to flip the second cassette. State becomes $10$. (3 pulses)\n$5$. Apply a DF pulse to flip the first cassette. State returns to $00$. (4 pulses)\n\nThe sequence of states visited is $00 \\to 01 \\to 11 \\to 10 \\to 00$. All $4$ states are visited exactly once before returning to the start. The journey requires $4$ transitions, and thus $4$ DF pulses. Since a cycle visiting $N$ vertices must have a length of at least $N$, the minimal number of pulses is $4$.", "answer": "$$\\boxed{4}$$", "id": "2768689"}, {"introduction": "An ideal logical design is only the first step; a successful synthetic circuit must also be robust to the inherent noise and failures of biological systems. This final practice confronts the real-world engineering challenge of designing a reliable logic device by balancing performance against cost [@problem_id:2768709]. You will develop a mathematical model incorporating redundancy and failure probabilities to explore the trade-off between a design's robustness and its complexity, using the concept of Pareto optimality to identify the most efficient designs.", "problem": "Design a self-contained program that evaluates trade-offs for implementing a two-input event-integrating logical device using site-specific recombinase-based architectures, framed purely in mathematical and logical terms. Consider a device that should output a correct state only after both events $A$ and $B$ have occurred in any order. Each candidate design is parameterized by two integers: the number of site pairs per recombinase per cassette $m$ and the number of redundant cassettes in parallel $k$. Each cassette contains $m$ site pairs for event $A$ and $m$ site pairs for event $B$, and the two recombinases act on disjoint sites. Assume independent action across all site pairs and cassettes, and use the following foundational facts and assumptions as the base for your derivation:\n\n- The Central Dogma of Molecular Biology implies that Deoxyribonucleic Acid (DNA) edits persist as heritable states; here, editing is modeled as state transitions induced by site-specific recombinases.\n- Each required recombination on a site pair succeeds independently with probability $1 - \\epsilon$, where $\\epsilon$ is a small failure probability per site pair per required edit.\n- A cassette incurs an independent integrity failure factor that reduces correctness by a multiplicative factor $1 - \\lambda$, where $\\lambda$ is the leak-induced failure probability per cassette.\n- Redundant cassettes are wired such that the device is correct if any one cassette is correct (a logical disjunction of independent Bernoulli trials).\n\nFor this problem, use the following scientifically plausible constants for error processes and candidate design set:\n- Per-site-pair failure probability per required recombination: $\\epsilon_A = \\epsilon_B = 0.02$.\n- Per-cassette integrity failure probability: $\\lambda = 0.01$.\n- Candidate designs are the $12$ pairs $(m,k)$ enumerated in lexicographic order (with $0$-based index): $[(2,1),(2,2),(2,3),(2,4),(3,1),(3,2),(3,3),(3,4),(4,1),(4,2),(4,3),(4,4)]$, hence indices $0$ through $11$.\n\nTasks to implement mathematically:\n1. Derive from first principles and compute the per-cassette correctness probability $q(m)$ as a function of $m$, given two recombinases, each requiring $m$ successful site-pair edits, independence across edits, and the multiplicative integrity factor $1 - \\lambda$.\n2. Derive from first principles and compute the overall device robustness $R(m,k)$ (the probability that the device outputs the correct state after both events have occurred) for $k$ redundant cassettes operating as independent parallel Bernoulli trials.\n3. Define the total recombination site count $s(m,k)$ for a design as twice the number of site pairs across both recombinases and all cassettes. Then compute the normalized site count $\\tilde{s}(m,k)$ by linearly mapping $s(m,k)$ to the unit interval using the minimum and maximum over the candidate set.\n4. Define a scalarized cost $C_{\\alpha,\\beta}(m,k)$ that balances minimizing $\\tilde{s}(m,k)$ and maximizing $R(m,k)$ under weights $\\alpha$ and $\\beta$ with $\\alpha + \\beta = 1$, by penalizing $1 - R(m,k)$ for robustness. Then compute, for each given weight pair, the index of the design that minimizes $C_{\\alpha,\\beta}$, breaking ties by choosing the smallest index within a numerical tolerance of $10^{-12}$.\n5. Compute the Pareto-optimal set of designs under the bi-objective optimization that minimizes $s(m,k)$ and simultaneously maximizes $R(m,k)$. A design $x$ dominates a design $y$ if $s(x) \\le s(y)$ and $R(x) \\ge R(y)$ with at least one strict inequality; Pareto-optimal designs are those not dominated by any other.\n\nRequired test suite (weights $\\alpha,\\beta$ in the order to be processed):\n- Case $1$: $\\alpha = 0.5$, $\\beta = 0.5$.\n- Case $2$: $\\alpha = 1.0$, $\\beta = 0.0$.\n- Case $3$: $\\alpha = 0.0$, $\\beta = 1.0$.\n- Case $4$: $\\alpha = 0.2$, $\\beta = 0.8$.\n\nQuantities to compute precisely:\n- For each candidate $(m,k)$, compute $q(m)$, $R(m,k)$, $s(m,k)$, and $\\tilde{s}(m,k)$ using the definitions derived from the base assumptions above and the given constants $\\epsilon_A$, $\\epsilon_B$, and $\\lambda$.\n- For each weight pair $(\\alpha,\\beta)$ in the test suite, compute the $0$-based index of the candidate design that minimizes $C_{\\alpha,\\beta}(m,k)$.\n- Compute the list of $0$-based indices of all Pareto-optimal designs in ascending order.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated Python-style list with five elements: the first four elements are integers giving the indices (in the same order as the four weight pairs), and the fifth element is a list of integers giving the indices of all Pareto-optimal designs in ascending order. For example, an output might look like $[i_1,i_2,i_3,i_4,[j_1,j_2,\\dots]]$ where all $i_\\cdot$ and $j_\\cdot$ are integers. No physical units or angles are required in this problem. Express all decimals as plain decimal numbers, not as percentages.", "solution": "The problem statement must first be subjected to rigorous validation to ensure it is scientifically sound, well-posed, objective, and self-contained.\n\n### Step 1: Extract Givens\nThe problem provides the following data, variables, and definitions:\n- **Device function**: A two-input event-integrating logical device must output a correct state only after both events $A$ and $B$ have occurred in any order.\n- **Design parameters**: Each design is parameterized by integers $(m, k)$, where $m$ is the number of site pairs per recombinase per cassette, and $k$ is the number of redundant cassettes.\n- **Cassette structure**: Each cassette has $m$ site pairs for event $A$ and $m$ site pairs for event $B$. The two recombinases act on disjoint sites.\n- **Probabilistic assumptions**:\n    - Recombination on a site pair succeeds independently with probability $1 - \\epsilon$.\n    - A cassette incurs an independent integrity failure factor of $1 - \\lambda$.\n    - Redundant cassettes are independent, and the overall device is correct if any one cassette is correct (logical OR).\n- **Constants**:\n    - Per-site-pair failure probability: $\\epsilon_A = 0.02$, $\\epsilon_B = 0.02$.\n    - Per-cassette integrity failure probability: $\\lambda = 0.01$.\n- **Candidate designs**: The set of $12$ pairs $(m,k)$ given by $[(2,1),(2,2),(2,3),(2,4),(3,1),(3,2),(3,3),(3,4),(4,1),(4,2),(4,3),(4,4)]$, indexed from $0$ to $11$.\n- **Definitions for computation**:\n    1.  Per-cassette correctness probability $q(m)$.\n    2.  Overall device robustness $R(m,k)$.\n    3.  Total recombination site count $s(m,k)$, defined as twice the number of site pairs across all cassettes.\n    4.  Normalized site count $\\tilde{s}(m,k)$, a linear map of $s(m,k)$ to $[0, 1]$.\n    5.  Scalarized cost $C_{\\alpha,\\beta}(m,k) = \\alpha \\tilde{s}(m,k) + \\beta (1 - R(m,k))$ with $\\alpha + \\beta = 1$.\n    6.  Pareto-optimality criteria: A design $x$ dominates $y$ if $s(x) \\le s(y)$ and $R(x) \\ge R(y)$, with at least one strict inequality.\n- **Test cases (weights)**: $(\\alpha, \\beta)$ pairs are $(0.5, 0.5)$, $(1.0, 0.0)$, $(0.0, 1.0)$, and $(0.2, 0.8)$.\n- **Required outputs**:\n    - For each test case, the $0$-based index of the design minimizing $C_{\\alpha,\\beta}(m,k)$, with ties broken by the smallest index within a tolerance of $10^{-12}$.\n    - A list of $0$-based indices of all Pareto-optimal designs, sorted in ascending order.\n\n### Step 2: Validate Using Extracted Givens\n- **Scientifically Grounded (Critical)**: The problem is a simplified but valid mathematical model of a recombinase-based genetic circuit. The concepts of site-specific recombination, DNA as a memory substrate, failure probabilities, and redundancy are standard in synthetic biology. The problem is grounded in the principles of probability theory and engineering design. It is free of pseudoscience.\n- **Well-Posed**: The problem is well-posed. The objectives are clearly defined, the constants are provided, and the required derivations lead to a unique set of results.\n- **Objective (Critical)**: The problem is stated in precise, objective mathematical and logical language. There are no subjective or opinion-based claims.\n- **Incomplete or Contradictory Setup**: The setup is complete. All necessary parameters ($\\epsilon_A$, $\\epsilon_B$, $\\lambda$), design sets, and objective functions are specified. There are no contradictions. The definition of $s(m,k)$ is explicit, though perhaps unconventional.\n- **Unrealistic or Infeasible**: The parameter values are scientifically plausible for such systems. The model is an abstraction, but not physically impossible or inconsistent.\n- **Ill-Posed or Poorly Structured**: The problem is well-structured and leads to a unique and meaningful solution. The tie-breaking rule resolves any potential ambiguity in optimization.\n\n### Step 3: Verdict and Action\nThe problem is valid. It is a well-defined exercise in mathematical modeling and multi-objective optimization applied to a synthetic biology system. A reasoned solution will now be derived.\n\n### Derivations\n\n**1. Per-cassette correctness probability $q(m)$**\n\nA single cassette is correct if and only if two conditions are met: ($1$) it is functionally correct, meaning all required recombination events succeed, and ($2$) it does not suffer an integrity failure.\n\nLet $S_A$ be the event that all $m$ recombinations for event $A$ succeed, and $S_B$ be the event for event $B$. The probability of a single site-pair recombination succeeding is $1 - \\epsilon$. Given $\\epsilon_A = \\epsilon_B = 0.02$, we denote this value as $\\epsilon$.\nThe probability of a single A-type event succeeding is $1 - \\epsilon_A$. As there are $m$ such sites and their recombinations are independent events, the probability of all $m$ succeeding is:\n$$ P(S_A) = (1 - \\epsilon_A)^m $$\nSimilarly, for event B:\n$$ P(S_B) = (1 - \\epsilon_B)^m $$\nSince the recombinases act on disjoint sites, we assume the success of A-type recombinations is independent of B-type recombinations. Thus, the probability of a cassette being functionally correct, $P(\\text{functional})$, is:\n$$ P(\\text{functional}) = P(S_A) \\cdot P(S_B) = (1 - \\epsilon_A)^m (1 - \\epsilon_B)^m $$\nGiven $\\epsilon_A = \\epsilon_B = \\epsilon = 0.02$, this simplifies to:\n$$ P(\\text{functional}) = (1 - \\epsilon)^{2m} $$\nThe problem states a multiplicative integrity failure factor of $1 - \\lambda$, where $\\lambda=0.01$. This is the probability that the cassette does not fail due to a leak or other structural problem. The final correctness probability of a single cassette, $q(m)$, is the product of the functional correctness probability and the integrity probability:\n$$ q(m) = P(\\text{functional}) \\cdot (1 - \\lambda) = (1 - \\epsilon)^{2m} (1 - \\lambda) $$\n\n**2. Overall device robustness $R(m,k)$**\n\nThe device consists of $k$ independent, redundant cassettes. The device is correct if at least one of these $k$ cassettes is correct. It is simpler to calculate the probability of the complementary event: the device being incorrect, which occurs if and only if all $k$ cassettes are incorrect.\n\nThe probability of a single cassette being incorrect is $1 - q(m)$.\nSince the $k$ cassettes are independent, the probability that all $k$ of them are incorrect is:\n$$ P(\\text{all } k \\text{ incorrect}) = (1 - q(m))^k $$\nThe robustness $R(m,k)$, which is the probability that the device is correct, is therefore:\n$$ R(m,k) = 1 - P(\\text{all } k \\text{ incorrect}) = 1 - (1 - q(m))^k $$\n\n**3. Site count $s(m,k)$ and normalized site count $\\tilde{s}(m,k)$**\n\nThe problem defines the total recombination site count $s(m,k)$ as \"twice the number of site pairs across both recombinases and all cassettes\".\n- Number of site pairs per recombinase per cassette: $m$.\n- Number of recombinases: $2$ (for $A$ and $B$).\n- Total site pairs per cassette: $2m$.\n- Total site pairs across all $k$ cassettes: $k \\cdot (2m) = 2mk$.\nFollowing the definition literally, $s(m,k)$ is twice this value:\n$$ s(m,k) = 2 \\cdot (2mk) = 4mk $$\nTo compute the normalized site count $\\tilde{s}(m,k)$, we first find the minimum and maximum values of $s(m,k)$ over the given set of $12$ candidate designs. Let these be $s_{\\text{min}}$ and $s_{\\text{max}}$. The linear mapping to the unit interval $[0, 1]$ is:\n$$ \\tilde{s}(m,k) = \\frac{s(m,k) - s_{\\text{min}}}{s_{\\text{max}} - s_{\\text{min}}} $$\nThis formula is valid as long as $s_{\\text{max}} \\neq s_{\\text{min}}$, which is true for the given design set.\n\n**4. Scalarized cost $C_{\\alpha,\\beta}(m,k)$**\n\nThe cost function is a weighted sum of the normalized site count (a cost to be minimized) and the device's failure probability (another cost to be minimized). The failure probability is $1 - R(m,k)$.\n$$ C_{\\alpha,\\beta}(m,k) = \\alpha \\cdot \\tilde{s}(m,k) + \\beta \\cdot (1 - R(m,k)) $$\nFor each given pair of weights $(\\alpha, \\beta)$, we must compute this cost for all $12$ designs and find the index of the design that yields the minimum cost. Ties must be broken by selecting the smallest index among those that are minimal within a numerical tolerance of $10^{-12}$.\n\n**5. Pareto-optimal set**\n\nThe bi-objective optimization problem is to simultaneously minimize the site count $s(m,k)$ and maximize the robustness $R(m,k)$. A design is on the Pareto front if no other design is superior in both objectives.\nA design $x = (m_x, k_x)$ dominates a design $y = (m_y, k_y)$ if:\n$$ s(m_x, k_x) \\le s(m_y, k_y) \\quad \\text{and} \\quad R(m_x, k_x) \\ge R(m_y, k_y) $$\nwith at least one of the inequalities being strict.\nA design is Pareto-optimal if it is not dominated by any other design in the candidate set. The algorithm to find the Pareto set is to iterate through each design and check if any other design dominates it. If no such dominator exists, the design is added to the Pareto set. The final list of indices must be sorted.", "answer": "[0,0,11,4,[0, 1, 2, 3, 5, 6, 7, 9, 10, 11]]", "id": "2768709"}]}