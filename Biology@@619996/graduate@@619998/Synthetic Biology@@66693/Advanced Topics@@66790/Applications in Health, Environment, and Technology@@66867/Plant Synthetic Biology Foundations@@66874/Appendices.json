{"hands_on_practices": [{"introduction": "A central goal of synthetic biology is to design genetic circuits with predictable behavior. This practice focuses on modeling the foundational element of many such circuits: the transcriptional switch. You will use the Hill function, a cornerstone mathematical model in biochemistry, to quantify the nonlinear, cooperative activation of a synthetic promoter and analyze its sensitivity, a key determinant of a circuit's responsiveness [@problem_id:2759991].", "problem": "A synthetic promoter in a plant protoplast transcriptional assay is activated by a dimerizing transcription factor (TF). Under the standard occupancy model of gene regulation, promoter activity is proportional to the probability that the TF is bound to its regulatory site(s). For cooperative binding with Hill coefficient $n = 2$, a widely used phenomenological model for the steady-state, dimensionless relative expression is the Hill function $f([ \\text{TF} ]) = \\dfrac{[ \\text{TF} ]^{2}}{K^{2} + [ \\text{TF} ]^{2}}$, where $K$ is the concentration at which half-maximal expression occurs. Assume $K = 50\\ \\text{nM}$ (nanomolar).\n\nTasks:\n1) Compute $f([ \\text{TF} ])$ at $[ \\text{TF} ] = 10\\ \\text{nM}$, $[ \\text{TF} ] = 50\\ \\text{nM}$, and $[ \\text{TF} ] = 200\\ \\text{nM}$. Express each value as a dimensionless decimal. You may present these intermediate values to at least four significant figures.\n\n2) Let the local logarithmic sensitivity be defined as $S([ \\text{TF} ]) = \\dfrac{d \\ln f}{d \\ln [ \\text{TF} ]}$, which quantifies the fractional change in output per fractional change in input. Starting from this definition and the Hill function above, derive $S([ \\text{TF} ])$ symbolically and evaluate it at $[ \\text{TF} ] = K$. Briefly justify, using your expression for $S([ \\text{TF} ])$ and/or the slope $df/d[ \\text{TF} ]$, why the region near $[ \\text{TF} ] \\approx K$ is often considered sensitive for control.\n\nProvide as your final answer only the numerical value of the dimensionless sensitivity $S([ \\text{TF} ] = K)$.", "solution": "The problem as stated is subjected to validation.\n\nStep 1: Extracted Givens.\n- The model for relative expression is the Hill function: $f([ \\text{TF} ]) = \\dfrac{[ \\text{TF} ]^{2}}{K^{2} + [ \\text{TF} ]^{2}}$.\n- The Hill coefficient is $n = 2$.\n- $K$ is the concentration for half-maximal expression.\n- The value of $K$ is given as $K = 50\\ \\text{nM}$.\n- The definition of local logarithmic sensitivity is $S([ \\text{TF} ]) = \\dfrac{d \\ln f}{d \\ln [ \\text{TF} ]}$.\n- Task 1: Compute $f([ \\text{TF} ])$ for $[ \\text{TF} ] = 10\\ \\text{nM}$, $[ \\text{TF} ] = 50\\ \\text{nM}$, and $[ \\text{TF} ] = 200\\ \\text{nM}$.\n- Task 2: Derive $S([ \\text{TF} ])$ symbolically, evaluate it at $[ \\text{TF} ] = K$, and justify why the region near $[ \\text{TF} ] \\approx K$ is sensitive for control.\n- Final answer required: The numerical value of $S([ \\text{TF} ] = K)$.\n\nStep 2: Validation.\n- The problem is **scientifically grounded**. The Hill function is a standard and fundamental model in biochemistry and systems biology used to describe cooperative ligand binding and transcriptional regulation. The context of a synthetic promoter in plant systems is a valid application area.\n- The problem is **well-posed**. It provides a clear mathematical model, defined parameters, and specific computational and derivational tasks. A unique solution exists.\n- The problem is **objective**. It is stated using precise, formal language without subjective or ambiguous terms.\n- The problem is free of the specified flaws, including scientific unsoundness, incompleteness, and infeasibility. The given value of $K=50\\ \\text{nM}$ is biologically plausible for transcription factor-DNA interactions.\n\nStep 3: Verdict.\nThe problem is valid. A solution will be provided.\n\nThe analysis proceeds with the tasks as stated. For notational convenience, let $C = [ \\text{TF} ]$. The dimensionless relative expression is given by the function:\n$$f(C) = \\frac{C^{2}}{K^{2} + C^{2}}$$\nwith $K = 50\\ \\text{nM}$.\n\nTask 1: Computation of $f(C)$ at specified concentrations.\n\n- For $C = 10\\ \\text{nM}$:\n$$f(10) = \\frac{(10)^{2}}{(50)^{2} + (10)^{2}} = \\frac{100}{2500 + 100} = \\frac{100}{2600} = \\frac{1}{26} \\approx 0.03846$$\nThe units of concentration (nM) cancel out, resulting in a dimensionless value as required.\n\n- For $C = 50\\ \\text{nM}$:\n$$f(50) = \\frac{(50)^{2}}{(50)^{2} + (50)^{2}} = \\frac{50^{2}}{2 \\times 50^{2}} = \\frac{1}{2} = 0.5000$$\nAs expected from the definition of $K$, the expression is at half-maximum.\n\n- For $C = 200\\ \\text{nM}$:\n$$f(200) = \\frac{(200)^{2}}{(50)^{2} + (200)^{2}} = \\frac{40000}{2500 + 40000} = \\frac{40000}{42500} = \\frac{400}{425} = \\frac{16 \\times 25}{17 \\times 25} = \\frac{16}{17} \\approx 0.9412$$\n\nTask 2: Derivation and analysis of logarithmic sensitivity $S(C)$.\n\nThe local logarithmic sensitivity is defined as $S(C) = \\dfrac{d \\ln f}{d \\ln C}$.\nTo derive an expression for $S(C)$, we first take the natural logarithm of $f(C)$:\n$$\\ln(f(C)) = \\ln\\left(\\frac{C^{2}}{K^{2} + C^{2}}\\right) = \\ln(C^{2}) - \\ln(K^{2} + C^{2}) = 2\\ln(C) - \\ln(K^{2} + C^{2})$$\nNow, we differentiate $\\ln(f(C))$ with respect to $\\ln(C)$. Let $u = \\ln(C)$, which implies $C = \\exp(u)$. Differentiating with respect to $u$ is equivalent to applying the operator $\\frac{d}{d \\ln C}$.\n$$S(C) = \\frac{d}{d \\ln C}[2\\ln(C) - \\ln(K^{2} + C^{2})]$$\n$$S(C) = 2\\frac{d(\\ln C)}{d(\\ln C)} - \\frac{d}{d\\ln C}[\\ln(K^{2} + C^{2})]$$\nThe first term is simply $2$. For the second term, we use the chain rule: $\\frac{d g}{d \\ln C} = C \\frac{dg}{dC}$.\n$$S(C) = 2 - C \\frac{d}{dC}[\\ln(K^{2} + C^{2})] = 2 - C \\left(\\frac{1}{K^{2} + C^{2}} \\cdot \\frac{d}{dC}(K^{2} + C^{2})\\right)$$\n$$S(C) = 2 - C \\left(\\frac{2C}{K^{2} + C^{2}}\\right) = 2 - \\frac{2C^{2}}{K^{2} + C^{2}}$$\nCombining the terms gives the symbolic expression for sensitivity:\n$$S(C) = \\frac{2(K^{2} + C^{2}) - 2C^{2}}{K^{2} + C^{2}} = \\frac{2K^{2} + 2C^{2} - 2C^{2}}{K^{2} + C^{2}} = \\frac{2K^{2}}{K^{2} + C^{2}}$$\nThis is the symbolic expression for $S(C)$.\n\nNext, we evaluate $S(C)$ at $C = K$:\n$$S(K) = \\frac{2K^{2}}{K^{2} + K^{2}} = \\frac{2K^{2}}{2K^{2}} = 1$$\nThe dimensionless sensitivity at $C=K$ is exactly $1$.\n\nFinally, we justify why the region near $C \\approx K$ is sensitive for control.\nThe sensitivity of a system can be analyzed in terms of either absolute changes (slope, $\\frac{df}{dC}$) or relative changes (logarithmic sensitivity, $S(C)$).\n\nThe absolute slope is given by:\n$$\\frac{df}{dC} = \\frac{d}{dC}\\left(\\frac{C^{2}}{K^{2} + C^{2}}\\right) = \\frac{2C(K^{2} + C^{2}) - C^{2}(2C)}{(K^{2} + C^{2})^{2}} = \\frac{2CK^{2}}{(K^{2} + C^{2})^{2}}$$\nThe region of maximum absolute sensitivity corresponds to the maximum slope. This occurs where $\\frac{d}{dC}(\\frac{df}{dC}) = 0$. The calculation shows this maximum is located at $C = K/\\sqrt{3}$. This point is indeed near $C = K$. This region of the sigmoidal response curve is the steepest part, where a small absolute change in input concentration $C$ leads to the largest possible absolute change in the output response $f$.\n\nThe logarithmic sensitivity, $S(C) = \\frac{2K^{2}}{K^{2} + C^{2}}$, quantifies the fractional change in output per fractional change in input.\n- For $C \\ll K$, $S(C) \\approx \\frac{2K^{2}}{K^{2}} = 2$. Sensitivity is high, but the absolute output $f(C) \\approx (C/K)^{2}$ is very small, so the system is effectively \"off\".\n- For $C \\gg K$, $S(C) \\approx \\frac{2K^{2}}{C^{2}} \\to 0$. The system is saturated and unresponsive to changes in $C$.\n- At $C = K$, $S(K) = 1$. This signifies that a $1\\%$ change in $C$ results in a $1\\%$ change in $f$.\n\nThe region near $C \\approx K$ is crucial for control because it represents the optimal trade-off. It is where the promoter transitions from a low-expression state to a high-expression state. Here, the system exhibits both a substantial absolute slope (near its maximum) and a significant logarithmic sensitivity ($S(K) = 1$), while the output level itself ($f(K) = 1/2$) is in the middle of its dynamic range. This combination of responsiveness and non-trivial output level makes this region the effective operating point for a biological switch.", "answer": "$$\\boxed{1}$$", "id": "2759991"}, {"introduction": "Moving from a single gene to a multi-enzyme pathway requires a systems-level perspective. This exercise introduces Flux Balance Analysis (FBA), a powerful computational framework for predicting the optimal performance of engineered metabolic networks under steady-state conditions. You will build a complete FBA model from first principles, from deriving the stoichiometric matrix to performing linear programming, to determine the maximum theoretical yield of a synthetic product [@problem_id:2760005].", "problem": "You are tasked with building a minimal yet biophysically faithful Flux Balance Analysis (FBA) model of a synthetic pathway in a plant plastid that converts an imported substrate into a heterologous product through a pathway with $5$ enzymatic steps. Starting from mass conservation and steady-state assumptions, you must derive the stoichiometric matrix and then use Linear Programming (LP) to compute the maximum product formation yield under substrate uptake limits and cofactor supply limits. Your program must implement the following steps purely from first principles and output the requested numerical results.\n\nBegin with the following foundational facts and assumptions:\n- Steady-state intracellular concentrations for modeled metabolites, so for every internal metabolite $i$, the net production rate is zero, giving the linear system $S \\, v = 0$, where $S$ is the stoichiometric matrix and $v$ is the flux vector.\n- Reaction stoichiometry is exact and constrains fluxes via mass balance.\n- Fluxes for irreversible reactions are nonnegative.\n- The objective is to maximize the product export flux, subject to uptake and cofactor supply limits, and then among all optimal solutions choose the one that minimizes substrate uptake, yielding a well-defined maximum yield.\n\nDefine the internal metabolites as the ordered list\n$[S, A, B, C, D, P, ATP, ADP, Pi, NADPH, NADP^+]$,\nwhere $S$ is the imported substrate, $P$ is the intracellular product, $ATP$ is adenosine triphosphate, $ADP$ is adenosine diphosphate, $Pi$ is inorganic phosphate, $NADPH$ and $NADP^+$ are pyridine nucleotides, all at steady state.\n\nDefine the reactions (columns of $S$), in order, as:\n- $R_0$: Substrate uptake $S_{ext} \\rightarrow S$ (upper bound $U_S$).\n- $R_1$: Step $1$ (condensation): $2 \\, S \\rightarrow A$.\n- $R_2$: Step $2$: $A \\rightarrow B$.\n- $R_3$: Step $3$ (reduction): $B + NADPH \\rightarrow C + NADP^+$.\n- $R_4$: Step $4$ (activation): $C + ATP \\rightarrow D + ADP + Pi$.\n- $R_5$: Step $5$: $D \\rightarrow P$.\n- $R_6$: Product export $P \\rightarrow P_{ext}$ (objective to maximize).\n- $R_7$: Photosynthetic ATP supply: $ADP + Pi \\rightarrow ATP$ (upper bound $U_{ATP}$).\n- $R_8$: Photosynthetic NADPH supply: $NADP^+ \\rightarrow NADPH$ (upper bound $U_{NADPH}$).\n- $R_9$: ATP generation from substrate (respiratory stand-in): $S + ADP + Pi \\rightarrow ATP$.\n- $R_{10}$: NADPH generation from substrate (oxidative stand-in): $S + NADP^+ \\rightarrow NADPH$.\n\nFrom these reactions, derive the stoichiometric matrix $S \\in \\mathbb{R}^{11 \\times 11}$ by writing for each metabolite the signed stoichiometric coefficient in each reaction column in the metabolite order given above and the reaction order $R_0, \\dots, R_{10}$. Use the steady-state constraint $S \\, v = 0$.\n\nFlux bounds:\n- For $R_0$: $0 \\le v_0 \\le U_S$.\n- For $R_6$: $0 \\le v_6$ (irreversible).\n- For $R_7$: $0 \\le v_7 \\le U_{ATP}$.\n- For $R_8$: $0 \\le v_8 \\le U_{NADPH}$.\n- For all other reactions $R_j$ with $j \\in \\{1,2,3,4,5,9,10\\}$: $0 \\le v_j$ (irreversible).\n\nOptimization task (two-stage, lexicographic):\n- Stage $1$ (maximize product formation): maximize $v_6$ subject to $S \\, v = 0$ and the bounds above.\n- Stage $2$ (minimize substrate usage at maximal product): among all $v$ achieving the maximal $v_6$ from Stage $1$, minimize $v_0$ subject to $S \\, v = 0$, the bounds above, and $v_6$ fixed at its optimal value from Stage $1$.\n\nDefine the yield as $y = v_6 / v_0$ computed from the Stage $2$ solution. If the optimal solution has $v_0 = 0$, define $y = 0$.\n\nTest suite:\n- Each test case is a triplet $\\left(U_S, U_{ATP}, U_{NADPH}\\right)$. Use the following five cases, in this order:\n  $[(10, 100, 100), (10, 3, 100), (10, 0, 0), (0, 100, 100), (10, 7, 2)]$.\n- For each case, compute the maximal-yield $y$ as a real number. Express each yield as a decimal rounded to six digits after the decimal point.\n\nFinal output format:\n- Your program should produce a single line of output containing the five yields, in the same order as the test cases, as a comma-separated list enclosed in square brackets, for example $[0.123456,0.234567,0.345678,0.456789,0.567890]$.\n- No other text should be printed.", "solution": "The problem is valid as it constitutes a well-posed, scientifically grounded application of Flux Balance Analysis (FBA), a standard method in computational systems biology. It is free of contradictions, ambiguities, and factual errors. The task is to determine the maximum theoretical yield of a synthetic product by solving a two-stage lexicographic linear programming (LP) problem.\n\nThe solution proceeds in three main steps: first, the derivation of the stoichiometric matrix from the given reaction network; second, the formulation of the two-stage LP problem; and third, the computation of the yield for each specified test case.\n\n**1. Derivation of the Stoichiometric Matrix**\n\nThe stoichiometric matrix, denoted by $S$, represents the mass balance constraints on the metabolic network. Its elements, $S_{ij}$, correspond to the stoichiometric coefficient of metabolite $i$ in reaction $j$. By convention, reactants have negative coefficients and products have positive coefficients. The matrix has $11$ rows for the $11$ internal metabolites and $11$ columns for the $11$ reactions.\n\nThe ordered list of metabolites is:\n$[S, A, B, C, D, P, ATP, ADP, Pi, NADPH, NADP^+]$.\n\nThe ordered list of reactions is:\n$R_0: S_{ext} \\rightarrow S$\n$R_1: 2 \\, S \\rightarrow A$\n$R_2: A \\rightarrow B$\n$R_3: B + NADPH \\rightarrow C + NADP^+$\n$R_4: C + ATP \\rightarrow D + ADP + Pi$\n$R_5: D \\rightarrow P$\n$R_6: P \\rightarrow P_{ext}$\n$R_7: ADP + Pi \\rightarrow ATP$\n$R_8: NADP^+ \\rightarrow NADPH$\n$R_9: S + ADP + Pi \\rightarrow ATP$\n$R_{10}: S + NADP^+ \\rightarrow NADPH$\n\nConstructing the matrix column-wise based on these reactions yields the stoichiometric matrix $S \\in \\mathbb{R}^{11 \\times 11}$:\n\n$$\nS = \n\\begin{pmatrix}\n 1 & -2 &  0 &  0 &  0 &  0 &  0 &  0 &  0 & -1 & -1 \\\\\n 0 &  1 & -1 &  0 &  0 &  0 &  0 &  0 &  0 &  0 &  0 \\\\\n 0 &  0 &  1 & -1 &  0 &  0 &  0 &  0 &  0 &  0 &  0 \\\\\n 0 &  0 &  0 &  1 & -1 &  0 &  0 &  0 &  0 &  0 &  0 \\\\\n 0 &  0 &  0 &  0 &  1 & -1 &  0 &  0 &  0 &  0 &  0 \\\\\n 0 &  0 &  0 &  0 &  0 &  1 & -1 &  0 &  0 &  0 &  0 \\\\\n 0 &  0 &  0 &  0 & -1 &  0 &  0 &  1 &  0 &  1 &  0 \\\\\n 0 &  0 &  0 &  0 &  1 &  0 &  0 & -1 &  0 & -1 &  0 \\\\\n 0 &  0 &  0 &  0 &  1 &  0 &  0 & -1 &  0 & -1 &  0 \\\\\n 0 &  0 &  0 & -1 &  0 &  0 &  0 &  0 &  1 &  0 &  1 \\\\\n 0 &  0 &  0 &  1 &  0 &  0 &  0 &  0 & -1 &  0 & -1 \n\\end{pmatrix}\n$$\n\n**2. Linear Programming Formulation**\n\nLet $v = [v_0, v_1, \\dots, v_{10}]^T$ be the vector of reaction fluxes. The core of FBA is the steady-state assumption, which translates to the linear system of equations:\n$$S \\, v = 0$$\nThis is the primary equality constraint for the LP problem.\n\nThe flux bounds are inequality constraints derived from thermodynamic irreversibility and specified uptake/supply limits:\n- $0 \\le v_0 \\le U_S$\n- $0 \\le v_j$ for $j \\in \\{1, 2, 3, 4, 5, 6, 9, 10\\}$\n- $0 \\le v_7 \\le U_{ATP}$\n- $0 \\le v_8 \\le U_{NADPH}$\n\nThe optimization is performed in two sequential stages.\n\n**Stage 1: Maximize Product Formation**\nThe objective is to maximize the product export flux, $v_6$. Since standard LP solvers perform minimization, we minimize $-v_6$. The objective function vector is $c_1 \\in \\mathbb{R}^{11}$:\n$$c_1 = [0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0]^T$$\nThe first LP problem is:\n$$ \\underset{v}{\\text{minimize}} \\quad c_1^T v $$\n$$ \\text{subject to} \\quad S v = 0 $$\n$$ \\text{and the flux bounds specified above.} $$\nLet the optimal objective value from this stage be $f_1^*$. The maximum product flux is then $v_6^* = -f_1^*$.\n\n**Stage 2: Minimize Substrate Usage**\nThe second stage seeks the most substrate-efficient solution among all solutions that achieve the maximum product flux. The objective is to minimize the substrate uptake flux, $v_0$. The objective function vector is $c_2 \\in \\mathbb{R}^{11}$:\n$$c_2 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]^T$$\nA new constraint is added to fix the product export flux at its maximum value determined in Stage $1$:\n$$v_6 = v_6^*$$\nThe second LP problem is:\n$$ \\underset{v}{\\text{minimize}} \\quad c_2^T v $$\n$$ \\text{subject to} \\quad S v = 0 $$\n$$ v_6 = v_6^* $$\n$$ \\text{and the original flux bounds.} $$\nThe solution to this problem, $v^{opt}$, is a unique flux vector that represents the state of maximum product yield.\n\n**3. Yield Calculation**\n\nThe product yield, $y$, is defined as the ratio of the product export flux to the substrate uptake flux from the optimal solution of Stage $2$:\n$$ y = \\frac{v_6^{opt}}{v_0^{opt}} $$\nAs per the problem specification, if the optimal substrate uptake is $v_0^{opt} = 0$, the yield is defined as $y = 0$.\n\nThis entire procedure is implemented for each test case triplet $(U_S, U_{ATP}, U_{NADPH})$ to calculate the corresponding maximum yield. The numerical solution is obtained using the `linprog` function from the `scipy.optimize` library.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import linprog\n\ndef solve():\n    \"\"\"\n    Main function to solve the FBA problem for the given test cases.\n    \"\"\"\n    \n    # Define the stoichiometric matrix S based on first principles.\n    # Rows correspond to metabolites: [S, A, B, C, D, P, ATP, ADP, Pi, NADPH, NADP+]\n    # Columns correspond to reactions: [R0, R1, ..., R10]\n    S = np.array([\n        # R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10\n        [ 1, -2,  0,  0,  0,  0,  0,  0,  0, -1, -1], # S\n        [ 0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0], # A\n        [ 0,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0], # B\n        [ 0,  0,  0,  1, -1,  0,  0,  0,  0,  0,  0], # C\n        [ 0,  0,  0,  0,  1, -1,  0,  0,  0,  0,  0], # D\n        [ 0,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0], # P\n        [ 0,  0,  0,  0, -1,  0,  0,  1,  0,  1,  0], # ATP\n        [ 0,  0,  0,  0,  1,  0,  0, -1,  0, -1,  0], # ADP\n        [ 0,  0,  0,  0,  1,  0,  0, -1,  0, -1,  0], # Pi\n        [ 0,  0,  0, -1,  0,  0,  0,  0,  1,  0,  1], # NADPH\n        [ 0,  0,  0,  1,  0,  0,  0,  0, -1,  0, -1]  # NADP+\n    ], dtype=np.float64)\n\n    # Equality constraints for the LP: S * v = 0\n    A_eq = S\n    b_eq = np.zeros(S.shape[0])\n\n    def solve_fba(U_S, U_ATP, U_NADPH):\n        \"\"\"\n        Performs the two-stage FBA optimization for a given set of bounds.\n        \"\"\"\n        # Define bounds for all fluxes. (lower_bound, upper_bound)\n        # `None` signifies no upper bound.\n        bounds = [\n            (0, U_S),       # v0: R0 Substrate uptake\n            (0, None),      # v1: R1\n            (0, None),      # v2: R2\n            (0, None),      # v3: R3\n            (0, None),      # v4: R4\n            (0, None),      # v5: R5\n            (0, None),      # v6: R6 Product export\n            (0, U_ATP),     # v7: R7 Photosynthetic ATP\n            (0, U_NADPH),   # v8: R8 Photosynthetic NADPH\n            (0, None),      # v9: R9 ATP from substrate\n            (0, None)       # v10: R10 NADPH from substrate\n        ]\n\n        # --- Stage 1: Maximize product formation (v6) ---\n        # Objective: maximize v6, which is equivalent to minimizing -v6\n        c1 = np.zeros(S.shape[1])\n        c1[6] = -1\n\n        res1 = linprog(c=c1, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')\n\n        if not res1.success:\n            return 0.0\n\n        # Optimal value is -v6_max. Using a tolerance for floating point issues.\n        v6_max = -res1.fun if res1.fun is not None else 0.0\n        if v6_max < 1e-9:\n            v6_max = 0.0\n\n        # --- Stage 2: Minimize substrate uptake (v0) at max product formation ---\n        # Update bounds to fix v6 at its maximum value.\n        stage2_bounds = list(bounds)\n        stage2_bounds[6] = (v6_max, v6_max)\n\n        # Objective: minimize v0\n        c2 = np.zeros(S.shape[1])\n        c2[0] = 1\n\n        res2 = linprog(c=c2, A_eq=A_eq, b_eq=b_eq, bounds=stage2_bounds, method='highs')\n        \n        if not res2.success:\n            return 0.0\n\n        v0_opt = res2.x[0] if res2.x is not None else 0.0\n        v6_opt = res2.x[6] if res2.x is not None else 0.0\n        \n        # As per problem, if v0_opt is zero, yield is zero.\n        if v0_opt < 1e-9:\n            return 0.0\n        else:\n            yield_val = v6_opt / v0_opt\n            return yield_val\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (10, 100, 100), \n        (10, 3, 100), \n        (10, 0, 0), \n        (0, 100, 100), \n        (10, 7, 2)\n    ]\n\n    results = []\n    for case in test_cases:\n        U_S, U_ATP, U_NADPH = case\n        y = solve_fba(U_S, U_ATP, U_NADPH)\n        # Format the result to six digits after the decimal point.\n        results.append(f\"{y:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2760005"}, {"introduction": "While systems-level models like FBA are powerful, they often rely on a \"well-mixed\" approximation that ignores the physical realities of the crowded cellular environment. This final practice provides a crucial biophysical reality check, guiding you through an order-of-magnitude calculation to compare the timescale of metabolite diffusion with that of enzymatic catalysis. This analysis helps determine if a pathway is reaction-limited or diffusion-limited, a critical insight for designing advanced strategies like substrate channeling [@problem_id:2760055].", "problem": "A plant synthetic biology team is designing a two-enzyme pathway in the cytosol and is deciding whether to scaffold the enzymes to promote substrate channeling. The intermediate metabolite is small and neutral, with an effective cytosolic diffusion coefficient of $D=10^{-7}\\ \\text{cm}^{2}\\ \\text{s}^{-1}$. The enzymes are not co-localized, and the intermediate must diffuse across a characteristic cytosolic distance comparable to the radius of a small compartment, $L=1\\ \\mu\\text{m}$. The catalytic turnover rate of the second enzyme is $k_{\\text{cat}}=100\\ \\text{s}^{-1}$.\n\nStarting from the mean-squared displacement relation for an unbiased Brownian walker in $n$ spatial dimensions, $\\langle r^{2}\\rangle = 2nDt$, derive an order-of-magnitude estimate for the characteristic diffusion time needed for the metabolite to explore a region of linear size $L$. Engineers commonly drop order-one geometric prefactors in such estimates; adopt this convention for the final estimate.\n\nThen, compute the dimensionless ratio $r = k_{\\text{cat}}\\tau$, where $\\tau$ is your conservative estimate of the diffusion time based on the above convention. Report $r$ as a plain number with no units. Do not round unless necessary.", "solution": "The relevant foundational base is Fickian diffusion for an unbiased random walker. For an isotropic process in $n$ spatial dimensions, the mean-squared displacement is given by\n$$\n\\langle r^{2}\\rangle = 2n D t,\n$$\nwhere $D$ is the diffusion coefficient and $t$ is time. In three-dimensional (3D) space, $n=3$, so\n$$\n\\langle r^{2}\\rangle = 6 D t.\n$$\nA characteristic diffusion time to explore a region of linear size $L$ can be estimated by setting $\\langle r^{2}\\rangle \\sim L^{2}$, which gives\n$$\nt \\sim \\frac{L^{2}}{6D}.\n$$\nFor order-of-magnitude engineering estimates, it is common to drop order-one geometric prefactors and use the conservative scaling\n$$\n\\tau \\approx \\frac{L^{2}}{D}.\n$$\nWe now compute $\\tau$ using the provided values, first converting units to be consistent. The given $D$ is in $\\text{cm}^{2}\\ \\text{s}^{-1}$, so we express $L$ in $\\text{cm}$. Since $1\\ \\mu\\text{m} = 10^{-4}\\ \\text{cm}$, we have\n$$\nL = 1\\ \\mu\\text{m} = 10^{-4}\\ \\text{cm},\n$$\nand therefore\n$$\nL^{2} = \\left(10^{-4}\\ \\text{cm}\\right)^{2} = 10^{-8}\\ \\text{cm}^{2}.\n$$\nUsing $D = 10^{-7}\\ \\text{cm}^{2}\\ \\text{s}^{-1}$, the conservative diffusion time estimate is\n$$\n\\tau \\approx \\frac{L^{2}}{D} = \\frac{10^{-8}\\ \\text{cm}^{2}}{10^{-7}\\ \\text{cm}^{2}\\ \\text{s}^{-1}} = 10^{-1}\\ \\text{s} = 0.1\\ \\text{s}.\n$$\nThe catalytic turnover rate is $k_{\\text{cat}} = 100\\ \\text{s}^{-1}$. The requested dimensionless ratio is\n$$\nr = k_{\\text{cat}} \\tau = 100\\ \\text{s}^{-1} \\times 0.1\\ \\text{s} = 10.\n$$\nInterpretation for design (not required in the final numeric answer): $r=10$ means the characteristic diffusion time across $1\\ \\mu\\text{m}$ is about ten times the catalytic turnover time per event (which is $1/k_{\\text{cat}} = 0.01\\ \\text{s}$). This indicates diffusion over this length scale is slower than catalysis at $k_{\\text{cat}}=100\\ \\text{s}^{-1}$, supporting a design choice that reduces diffusive travel distance (such as co-localization or substrate channeling) if throughput is limited by intermediate transfer.", "answer": "$$\\boxed{10}$$", "id": "2760055"}]}