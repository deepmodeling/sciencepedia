{"hands_on_practices": [{"introduction": "In experimental evolution, we often measure the continuous, Malthusian growth rate ($m$) of a microbial strain, but our population genetics models rely on discrete, per-generation parameters like the selection coefficient ($s$). This first practice provides a crucial bridge between these two frameworks. By deriving the relationship between $m$ and $s$, you will gain a hands-on understanding of how to translate laboratory measurements into the fundamental parameters that govern allele frequency change, a core skill for quantifying selection in both natural and engineered systems [@problem_id:2761924].", "problem": "In a turbidostat experiment with a large asexual haploid microbe engineered to carry an alternative promoter allele, two genotypes compete: a reference genotype $a$ and a modified genotype $A$. Under constant environmental conditions and negligible frequency-dependent effects over a single generation, suppose each genotype $i \\in \\{A,a\\}$ follows density-independent exponential growth over short time intervals with abundance $N_{i}(t)$ satisfying the ordinary differential equation $dN_{i}/dt = m_{i} N_{i}$, where $m_{i}$ is the Malthusian parameter (per-time logarithmic growth rate). Over discrete non-overlapping generations of duration $\\tau$, absolute fitness $W_{i}$ is defined via $N_{i}(g+1) = W_{i} N_{i}(g)$. In population-genetic bookkeeping over one generation with only viability selection (no mutation, migration, or drift), if $p$ denotes the frequency of genotype $A$ at the start of a generation, the frequency in the next generation is given by $p' = \\dfrac{p W_{A}}{p W_{A} + (1-p) W_{a}}$.\n\nYou measure a constant growth-rate difference $\\Delta m = m_{A} - m_{a}$ between the two genotypes equal to $\\Delta m = 0.05 \\,\\mathrm{h}^{-1}$, and the generation time is $\\tau = 1.5 \\,\\mathrm{h}$. The initial frequency of genotype $A$ is $p = 0.2$. Starting from the definitions above, derive the relationship that connects $m_{i}$ to $W_{i}$, then express the discrete-generation selection coefficient $s$ (defined by $W_{A} = (1+s) W_{a}$) in terms of $\\Delta m$ and $\\tau$. Using this, compute the expected one-generation allele-frequency change $\\Delta p = p' - p$ for the engineered allele $A$.\n\nExpress the final numerical answer for $\\Delta p$ as a unitless decimal fraction and round your answer to four significant figures.", "solution": "The problem requires the derivation of the one-generation change in allele frequency, $\\Delta p$, based on a continuous-time model of exponential growth and discrete-time population genetics definitions. The first step is to validate the problem statement.\n\nThe problem is scientifically grounded, well-posed, and objective. It provides a standard scenario in microbial population genetics where two models of population growth, one in continuous time and one in discrete generations, must be reconciled. All necessary definitions and parameters are provided, including the differential equation for Malthusian growth, $dN_{i}/dt = m_{i} N_{i}$; the definition of absolute fitness $W_{i}$ in a discrete generation framework, $N_{i}(g+1) = W_{i} N_{i}(g)$; the formula for frequency change under selection, $p' = \\frac{p W_{A}}{p W_{A} + (1-p) W_{a}}$; the definition of the selection coefficient $s$ via $W_{A} = (1+s) W_{a}$; and all required parameter values: $\\Delta m = m_{A} - m_{a} = 0.05 \\,\\mathrm{h}^{-1}$, generation time $\\tau = 1.5 \\,\\mathrm{h}$, and initial frequency $p = 0.2$. The problem is self-contained, consistent, and requires a standard, non-trivial derivation. Therefore, the problem is valid and a solution will be provided.\n\nThe first task is to establish the relationship between the Malthusian parameter $m_{i}$ and the absolute fitness $W_{i}$. The continuous growth of a genotype $i$ over a time interval $t$ is described by the solution to the ordinary differential equation $dN_{i}/dt = m_{i} N_{i}$. Separating variables and integrating gives $\\int_{N_{i}(0)}^{N_{i}(t)} \\frac{dN_{i}}{N_{i}} = \\int_{0}^{t} m_{i} dt'$, which yields $\\ln(N_{i}(t)) - \\ln(N_{i}(0)) = m_{i} t$, or $N_{i}(t) = N_{i}(0) \\exp(m_{i} t)$.\nOver a single generation of duration $\\tau$, the population size changes from $N_{i}(g)$ at the beginning of the generation to $N_{i}(g+1)$ at the end. In the continuous-time framework, this is equivalent to the population size at time $\\tau$ relative to time $0$. Thus, we have $N_{i}(g+1) = N_{i}(g) \\exp(m_{i} \\tau)$.\nThe problem defines absolute fitness $W_{i}$ via the discrete generation equation $N_{i}(g+1) = W_{i} N_{i}(g)$. By comparing these two expressions for $N_{i}(g+1)$, we arrive at the fundamental relationship:\n$$W_{i} = \\exp(m_{i} \\tau)$$\n\nNext, we must express the selection coefficient $s$ in terms of the growth rate difference $\\Delta m$ and the generation time $\\tau$. The selection coefficient is defined by $W_{A} = (1+s) W_{a}$. From this, we can write $1+s = \\frac{W_{A}}{W_{a}}$.\nSubstituting the relationship $W_{i} = \\exp(m_{i} \\tau)$ for each genotype:\n$$1+s = \\frac{\\exp(m_{A} \\tau)}{\\exp(m_{a} \\tau)} = \\exp(m_{A} \\tau - m_{a} \\tau) = \\exp((m_{A}-m_{a})\\tau)$$\nGiven that $\\Delta m = m_{A} - m_{a}$, this simplifies to:\n$$1+s = \\exp(\\Delta m \\tau)$$\nTherefore, the selection coefficient $s$ is given by:\n$$s = \\exp(\\Delta m \\tau) - 1$$\n\nThe final step is to derive an expression for the one-generation change in allele frequency, $\\Delta p = p' - p$. The frequency of allele $A$ in the next generation, $p'$, is given by $p' = \\frac{p W_{A}}{p W_{A} + (1-p) W_{a}}$. To simplify this expression, we can divide the numerator and denominator by $W_{a}$:\n$$p' = \\frac{p (W_{A}/W_{a})}{p (W_{A}/W_{a}) + (1-p)}$$\nUsing the definition $W_{A}/W_{a} = 1+s$, we obtain:\n$$p' = \\frac{p(1+s)}{p(1+s) + (1-p)} = \\frac{p(1+s)}{p+ps+1-p} = \\frac{p(1+s)}{1+ps}$$\nNow we compute $\\Delta p = p' - p$:\n$$\\Delta p = \\frac{p(1+s)}{1+ps} - p = \\frac{p(1+s) - p(1+ps)}{1+ps} = \\frac{p+ps - p - p^2s}{1+ps} = \\frac{ps - p^2s}{1+ps}$$\nFactoring the numerator gives the standard form for the change in allele frequency under selection:\n$$\\Delta p = \\frac{ps(1-p)}{1+ps}$$\n\nWe now have all the necessary formulas to compute the numerical value of $\\Delta p$. The given values are $\\Delta m = 0.05 \\,\\mathrm{h}^{-1}$, $\\tau = 1.5 \\,\\mathrm{h}$, and $p = 0.2$.\nFirst, we calculate the selection coefficient $s$:\n$$s = \\exp(\\Delta m \\tau) - 1 = \\exp(0.05 \\times 1.5) - 1 = \\exp(0.075) - 1$$\nNow, substitute the values of $p$ and $s$ into the expression for $\\Delta p$:\n$$\\Delta p = \\frac{(0.2)s(1-0.2)}{1+(0.2)s} = \\frac{(0.2)(0.8)s}{1+0.2s} = \\frac{0.16s}{1+0.2s}$$\nSubstituting the expression for $s$:\n$$\\Delta p = \\frac{0.16 (\\exp(0.075) - 1)}{1 + 0.2 (\\exp(0.075) - 1)}$$\nNumerically evaluating the expression:\n$s = \\exp(0.075) - 1 \\approx 1.0778841 - 1 = 0.0778841$\n$$\\Delta p \\approx \\frac{0.16 \\times 0.0778841}{1 + 0.2 \\times 0.0778841} = \\frac{0.01246146}{1 + 0.01557682} = \\frac{0.01246146}{1.01557682} \\approx 0.01227041$$\nRounding the result to four significant figures as requested gives $0.01227$.", "answer": "$$\\boxed{0.01227}$$", "id": "2761924"}, {"introduction": "Beyond selection, genetic drift is a powerful evolutionary force, especially in engineered microbial populations that undergo regular passaging and bottlenecks. The magnitude of drift is governed by the effective population size ($N_e$), but how do we calculate this when the census size fluctuates dramatically over time? This exercise challenges you to derive from first principles why the long-term effective size is governed by the harmonic mean of the generational sizes, revealing the disproportionate impact of bottlenecks on evolutionary trajectories [@problem_id:2761883]. Mastering this concept is essential for managing genetic diversity and predicting stochastic outcomes in directed evolution.", "problem": "A synthetic biology laboratory is conducting a directed evolution campaign on a haploid engineered bacterium. The population is propagated for $T$ non-overlapping generations in a well-mixed environment with neutral dynamics at a marker locus linked to the edited construct. Due to experimental passaging and deliberate library down-selections, the census size $N_t$ varies across generations. Assume:\n- haploid asexual reproduction,\n- random sampling of $N_t$ genomes each generation (no selection, mutation, or migration),\n- the marker is selectively neutral and tracked only to quantify stochastic drift,\n- the process follows the classical random-sampling logic of a Wright–Fisher-type model with variable census size.\n\nStarting from the fundamental facts that in each generation allele copies are sampled at random from the current gene pool and that variance accumulates over generations via the law of total variance, derive from first principles an expression for the constant effective size $N_e$ that, over $T$ generations, yields the same cumulative neutral drift in allele frequency as the observed variable-size process.\n\nThen apply your result to the following bottlenecked passaging schedule over $T = 10$ generations:\n$$\n\\{N_t\\}_{t=1}^{10} = \\{2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 500,\\, 500,\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8}\\}.\n$$\nCompute $N_e$ implied by your derivation for this schedule. Express your final numeric answer as a pure number (no units) and round to $4$ significant figures.", "solution": "The problem statement is scientifically grounded, well-posed, and objective. It describes a classic scenario in population genetics—the effect of fluctuating population size on genetic drift, framed within a plausible synthetic biology context. The model is a standard Wright–Fisher process with non-overlapping generations, and the task is to derive the effective population size, $N_e$, a fundamental concept that quantifies the magnitude of drift. All assumptions and data are provided, are internally consistent, and permit a unique, meaningful solution. Therefore, the problem is valid.\n\nWe proceed with the derivation from first principles.\n\nThe process is modeled as a Wright–Fisher model for a haploid population with a census size $N_t$ that varies at each generation $t$. Let $p_t$ be the frequency of a selectively neutral marker allele at generation $t$. The population for generation $t+1$ is formed by randomly sampling $N_{t+1}$ individuals (or genomes) from the population at generation $t$. This is a binomial sampling process.\n\nThe cumulative effect of random genetic drift is measured by the change in the variance of the allele frequency, which is directly related to the decay of expected heterozygosity over time. For a haploid population, we can use the analogous quantity $H_t^{\\text{exp}} = E[p_t(1 - p_t)]$, which represents the expected variance of the allele frequency within a single individual drawn from the population at generation $t$.\n\nLet us derive the recurrence relation for $H_t^{\\text{exp}}$. Given the allele frequency $p_t$ in generation $t$, the frequency $p_{t+1}$ in generation $t+1$ is a random variable. The conditional expectation of $p_{t+1}$ is $E[p_{t+1} | p_t] = p_t$ due to the absence of selection or mutation.\n\nThe conditional variance of $p_{t+1}$ arises from the binomial sampling of $N_{t+1}$ individuals and is given by:\n$$\n\\text{Var}(p_{t+1} | p_t) = \\frac{p_t(1 - p_t)}{N_{t+1}}\n$$\nWe can find the conditional expectation of $p_{t+1}(1 - p_{t+1})$ using the law of the unconscious statistician and the relation $\\text{Var}(X) = E[X^2] - (E[X])^2$:\n$$\nE[p_{t+1}^2 | p_t] = \\text{Var}(p_{t+1} | p_t) + (E[p_{t+1} | p_t])^2 = \\frac{p_t(1 - p_t)}{N_{t+1}} + p_t^2\n$$\nTherefore:\n$$\nE[p_{t+1}(1 - p_{t+1}) | p_t] = E[p_{t+1} | p_t] - E[p_{t+1}^2 | p_t] = p_t - \\left(\\frac{p_t(1 - p_t)}{N_{t+1}} + p_t^2\\right)\n$$\nSimplifying this expression, we obtain:\n$$\nE[p_{t+1}(1 - p_{t+1}) | p_t] = p_t(1 - p_t) - \\frac{p_t(1 - p_t)}{N_{t+1}} = p_t(1 - p_t)\\left(1 - \\frac{1}{N_{t+1}}\\right)\n$$\nBy the law of total expectation, $E[X] = E[E[X|Y]]$, we can take the expectation over the distribution of $p_t$:\n$$\nE[p_{t+1}(1 - p_{t+1})] = E[p_t(1 - p_t)] \\left(1 - \\frac{1}{N_{t+1}}\\right)\n$$\nThis gives the recurrence relation for $H_{t+1}^{\\text{exp}}$:\n$$\nH_{t+1}^{\\text{exp}} = H_t^{\\text{exp}} \\left(1 - \\frac{1}{N_{t+1}}\\right)\n$$\nIterating this relation from generation $0$ to generation $T$:\n$$\nH_T^{\\text{exp}} = H_0^{\\text{exp}} \\prod_{t=1}^{T} \\left(1 - \\frac{1}{N_t}\\right)\n$$\nNow, we define the effective population size $N_e$ as the size of a hypothetical population with constant size that would experience the same cumulative amount of drift over $T$ generations. For such a population, the decay in expected heterozygosity would be:\n$$\nH_T^{\\text{exp}} = H_0^{\\text{exp}} \\left(1 - \\frac{1}{N_e}\\right)^T\n$$\nEquating the expressions for the variable-size and constant-size processes gives:\n$$\n\\prod_{t=1}^{T} \\left(1 - \\frac{1}{N_t}\\right) = \\left(1 - \\frac{1}{N_e}\\right)^T\n$$\nThis is an exact definition for this inbreeding effective population size. To obtain a more tractable expression, we assume that $N_t$ is generally large, such that $1/N_t \\ll 1$. In this regime, the approximation $\\ln(1 - x) \\approx -x$ for small $x$ is valid. Taking the natural logarithm of both sides:\n$$\n\\sum_{t=1}^{T} \\ln\\left(1 - \\frac{1}{N_t}\\right) = T \\ln\\left(1 - \\frac{1}{N_e}\\right)\n$$\nApplying the approximation yields:\n$$\n\\sum_{t=1}^{T} \\left(-\\frac{1}{N_t}\\right) \\approx T \\left(-\\frac{1}{N_e}\\right)\n$$\nThis simplifies to:\n$$\n\\frac{T}{N_e} = \\sum_{t=1}^{T} \\frac{1}{N_t}\n$$\nSolving for $N_e$, we arrive at the expression for the effective population size as the harmonic mean of the census sizes over the time period:\n$$\nN_e = \\frac{T}{\\sum_{t=1}^{T} \\frac{1}{N_t}}\n$$\nThis is the required expression derived from first principles.\n\nWe now apply this result to the given passaging schedule over $T = 10$ generations. The sequence of census sizes is:\n$$\n\\{N_t\\}_{t=1}^{10} = \\{2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 500,\\, 500,\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8},\\, 2.0 \\times 10^{8}\\}\n$$\nThe sequence contains $8$ generations with $N_t = 2.0 \\times 10^8$ and $2$ generations with $N_t = 500$. We compute the sum of the reciprocals of the census sizes:\n$$\n\\sum_{t=1}^{10} \\frac{1}{N_t} = 8 \\times \\left(\\frac{1}{2.0 \\times 10^8}\\right) + 2 \\times \\left(\\frac{1}{500}\\right)\n$$\n$$\n\\sum_{t=1}^{10} \\frac{1}{N_t} = \\frac{8}{2.0 \\times 10^8} + \\frac{2}{500} = 4.0 \\times 10^{-8} + 0.004\n$$\n$$\n\\sum_{t=1}^{10} \\frac{1}{N_t} = 0.00400004\n$$\nNow, we compute $N_e$:\n$$\nN_e = \\frac{10}{0.00400004} \\approx 2499.975\n$$\nRounding this result to $4$ significant figures, we obtain $2500$. This result demonstrates that the effective population size is disproportionately influenced by the smallest population sizes (the bottlenecks).", "answer": "$$\n\\boxed{2500}\n$$", "id": "2761883"}, {"introduction": "The ultimate goal for many synthetic biologists is to design and predict the behavior of novel genetic sequences. This requires understanding the genotype-to-phenotype map, which is often complex and non-additive due to epistasis—interactions between mutations. In this final practice, you will step into the role of a data scientist to build a predictive fitness model from a hypothetical synthetic promoter library dataset [@problem_id:2761900]. By implementing a linear model that includes pairwise epistasis and using cross-validation to assess its predictive power, you will gain practical skills in constructing and evaluating the very models that enable rational biological design.", "problem": "You are given genotype–fitness data from a synthetic promoter library in which genotypes are encoded as binary vectors and fitness is measured as a real value. Assume that the genotype–fitness map is well-approximated by an additive-plus-pairwise-epistatic model of the form\n$$\nw(\\mathbf{x}) \\;=\\; \\beta_0 \\;+\\; \\sum_{i=1}^{L} \\beta_i x_i \\;+\\; \\sum_{1 \\le i < j \\le L} \\beta_{ij} x_i x_j,\n$$\nwhere $L$ is the number of sites, $\\mathbf{x} \\in \\{0,1\\}^L$ encodes a genotype using $0$ for the reference allele and $1$ for the alternative allele at each site, $w(\\mathbf{x})$ is the fitness, $\\beta_0$ is the intercept, $\\beta_i$ are additive effects, and $\\beta_{ij}$ are pairwise epistatic effects. Your task is to implement a program that, for each provided dataset, constructs the appropriate linear design matrix using the features $[1, x_1, \\dots, x_L, x_1 x_2, x_1 x_3, \\dots, x_{L-1} x_L]$, fits the model by ordinary least squares, quantifies generalization error by Leave-One-Out Cross-Validation (LOOCV), and predicts the fitness of specified unseen genotypes.\n\nFundamental base and assumptions to use:\n- The genotype–phenotype mapping is modeled linearly in these features, consistent with standard quantitative genetics definitions of additive and epistatic contributions.\n- Fit the coefficients by minimizing the sum of squared residuals (ordinary least squares), which yields the coefficient vector minimizing $\\sum_{n=1}^{N} \\left(w^{(n)} - \\hat{w}^{(n)}\\right)^2$, where $N$ is the number of observed genotypes.\n- Use the Moore–Penrose pseudoinverse or an equivalent numerically stable ordinary least squares solver to handle both overdetermined and underdetermined cases.\n- Quantify predictive performance by Leave-One-Out Cross-Validation (LOOCV), defined as the average of the squared prediction errors when each sample is held out once, trained on the remaining samples, and then predicted. Specifically, the LOOCV mean squared error (LOOCV-MSE) is\n$$\n\\mathrm{LOOCV\\text{-}MSE} \\;=\\; \\frac{1}{N} \\sum_{n=1}^{N} \\left( w^{(n)} - \\hat{w}_{-n}^{(n)} \\right)^2,\n$$\nwhere $\\hat{w}_{-n}^{(n)}$ is the prediction for sample $n$ using the model fit to all samples except $n$.\n- After computing LOOCV-MSE, refit the model on the full training set, then predict the fitness for the specified unseen genotypes.\n\nYour program must implement the above procedure for the following test suite. In each case, genotypes are given as binary vectors of length $L$ and fitness values are real numbers. You must:\n- Build the design matrix with column order $[1, x_1, \\dots, x_L, x_1 x_2, x_1 x_3, \\dots, x_{L-1} x_L]$.\n- Fit by ordinary least squares for each training fold and for the final full-data fit.\n- Compute LOOCV-MSE across all training samples.\n- Predict the fitness for the provided unseen genotypes.\n- Round all reported floats to $6$ decimal places.\n\nTest Suite:\n- Case A:\n  - $L = 4$\n  - Training genotypes $\\mathbf{x}^{(n)}$ and fitness $w^{(n)}$:\n    - $[0,0,0,0] \\to 1.0$\n    - $[0,0,0,1] \\to 1.1$\n    - $[0,0,1,0] \\to 1.2$\n    - $[0,0,1,1] \\to 1.55$\n    - $[0,1,0,0] \\to 0.7$\n    - $[0,1,0,1] \\to 0.7$\n    - $[0,1,1,0] \\to 1.2$\n    - $[1,0,0,0] \\to 1.5$\n    - $[1,0,0,1] \\to 1.6$\n    - $[1,0,1,0] \\to 1.5$\n    - $[1,1,0,0] \\to 1.6$\n    - $[1,1,1,1] \\to 2.15$\n    - $[1,1,1,0] \\to 1.9$\n  - Unseen genotypes to predict: $[0,1,1,1]$ and $[1,0,1,1]$.\n- Case B:\n  - $L = 3$\n  - Training genotypes $\\mathbf{x}^{(n)}$ and fitness $w^{(n)}$:\n    - $[0,0,0] \\to 0.8$\n    - $[0,0,1] \\to 1.1$\n    - $[0,1,0] \\to 0.7$\n    - $[0,1,1] \\to 1.2$\n    - $[1,0,0] \\to 1.0$\n    - $[1,0,1] \\to 0.9$\n    - $[1,1,0] \\to 1.4$\n  - Unseen genotypes to predict: $[1,1,1]$.\n- Case C:\n  - $L = 5$\n  - Training genotypes $\\mathbf{x}^{(n)}$ and fitness $w^{(n)}$:\n    - $[0,0,0,0,0] \\to 2.0$\n    - $[0,0,0,0,1] \\to 2.15$\n    - $[0,0,0,1,0] \\to 2.0$\n    - $[0,0,0,1,1] \\to 2.15$\n    - $[0,0,1,0,0] \\to 2.05$\n    - $[0,0,1,0,1] \\to 2.20$\n    - $[0,0,1,1,0] \\to 2.05$\n    - $[0,1,0,0,0] \\to 1.8$\n    - $[0,1,0,0,1] \\to 1.95$\n    - $[0,1,0,1,0] \\to 1.8$\n    - $[0,1,1,0,0] \\to 1.85$\n    - $[0,1,1,1,0] \\to 1.85$\n    - $[1,0,0,0,0] \\to 2.1$\n    - $[1,0,0,0,1] \\to 2.25$\n    - $[1,0,0,1,0] \\to 2.1$\n    - $[1,0,1,0,0] \\to 2.15$\n    - $[1,1,0,0,0] \\to 1.9$\n    - $[1,1,1,1,1] \\to 2.1$\n  - Unseen genotypes to predict: $[1,0,1,0,1]$ and $[0,1,1,0,1]$.\n\nImplementation details and output:\n- Use ordinary least squares to fit $\\boldsymbol{\\beta}$ in each fold and in the final fit.\n- Use Leave-One-Out Cross-Validation (LOOCV) to compute a single LOOCV-MSE per case.\n- After computing LOOCV-MSE, fit on the full training set and produce predictions for the listed unseen genotypes in the order given.\n- The program must produce a single line of output containing the results as a comma-separated list of three bracketed lists, one per case. Each case list must contain the LOOCV-MSE followed by the predictions for the unseen genotypes, all rounded to $6$ decimal places. For example, the final format must be:\n\"[caseA_list,caseB_list,caseC_list]\".", "solution": "We model the genotype–fitness relationship using an additive-plus-pairwise-epistatic linear model. The fundamental basis for this approach stems from quantitative genetics and evolutionary theory: fitness differences attributable to alleles can be decomposed into additive contributions and interaction terms (epistasis), consistent with the standard decomposition of genetic variance. In a synthetic biology context, binary genotypes across promoter positions or motifs provide input variables, and the observed fitness is a measurable phenotype.\n\n1. Model and design matrix. For a genotype $\\mathbf{x} = [x_1,\\dots,x_L] \\in \\{0,1\\}^L$, we define the linear predictor\n$$\n\\hat{w}(\\mathbf{x}) \\;=\\; \\beta_0 \\;+\\; \\sum_{i=1}^{L} \\beta_i x_i \\;+\\; \\sum_{1 \\le i < j \\le L} \\beta_{ij} x_i x_j.\n$$\nFor $N$ observations, collect the responses in $\\mathbf{y} \\in \\mathbb{R}^N$ and build a design matrix $\\mathbf{X} \\in \\mathbb{R}^{N \\times P}$, where $P = 1 + L + \\frac{L(L-1)}{2}$, with columns in the fixed order $[1, x_1, \\dots, x_L, x_1 x_2, x_1 x_3, \\dots, x_{L-1} x_L]$. Each row of $\\mathbf{X}$ corresponds to one observed genotype.\n\n2. Least squares fitting. The ordinary least squares (OLS) estimate $\\hat{\\boldsymbol{\\beta}}$ minimizes the sum of squared residuals\n$$\nS(\\boldsymbol{\\beta}) \\;=\\; \\|\\mathbf{y} - \\mathbf{X}\\boldsymbol{\\beta}\\|_2^2 \\;=\\; \\sum_{n=1}^{N}\\left(y^{(n)} - \\mathbf{x}^{(n)\\top}\\boldsymbol{\\beta}\\right)^2.\n$$\nThe first-order optimality condition gives the normal equations $\\mathbf{X}^\\top \\mathbf{X} \\hat{\\boldsymbol{\\beta}} = \\mathbf{X}^\\top \\mathbf{y}$. When $\\mathbf{X}^\\top \\mathbf{X}$ is invertible, $\\hat{\\boldsymbol{\\beta}} = (\\mathbf{X}^\\top \\mathbf{X})^{-1}\\mathbf{X}^\\top \\mathbf{y}$. In general (including underdetermined or rank-deficient cases), we may use the Moore–Penrose pseudoinverse to obtain the minimum-norm solution\n$$\n\\hat{\\boldsymbol{\\beta}} \\;=\\; \\mathbf{X}^+ \\mathbf{y},\n$$\nwhich coincides with the OLS solution in the overdetermined full-rank case and provides a consistent choice otherwise. Numerically, this is implemented via stable linear algebra routines for least squares.\n\n3. Leave-One-Out Cross-Validation (LOOCV). To estimate the generalization error without reusing held-out data, we perform LOOCV:\n- For each $n \\in \\{1,\\dots,N\\}$, construct $\\mathbf{X}_{-n}$ and $\\mathbf{y}_{-n}$ by removing the $n$-th sample.\n- Fit $\\hat{\\boldsymbol{\\beta}}_{-n}$ by OLS on $(\\mathbf{X}_{-n}, \\mathbf{y}_{-n})$.\n- Predict the held-out sample using $\\hat{w}_{-n}^{(n)} = \\mathbf{x}^{(n)\\top} \\hat{\\boldsymbol{\\beta}}_{-n}$.\n- Accumulate the squared errors $\\left(y^{(n)} - \\hat{w}_{-n}^{(n)}\\right)^2$.\nThe LOOCV mean squared error is then\n$$\n\\mathrm{LOOCV\\text{-}MSE} \\;=\\; \\frac{1}{N} \\sum_{n=1}^{N} \\left( y^{(n)} - \\hat{w}_{-n}^{(n)} \\right)^2.\n$$\nIf the true data are exactly generated by the assumed model and each training fold yields a unique OLS solution recovering the true parameters, then the LOOCV error will be $0$. In underdetermined folds, the pseudoinverse provides a minimum-norm solution that fits the training samples, but predictions on the held-out point can deviate from the true value if the solution is not uniquely determined by the training subset.\n\n4. Final fitting and prediction on unseen genotypes. After computing LOOCV-MSE, we refit on the full dataset to obtain $\\hat{\\boldsymbol{\\beta}}$ and then predict for each provided unseen genotype $\\mathbf{x}^{\\mathrm{(unseen)}}$ using $\\hat{w}(\\mathbf{x}^{\\mathrm{(unseen)}}) = \\mathbf{x}^{\\mathrm{(unseen)}\\top} \\hat{\\boldsymbol{\\beta}}$ with the same feature ordering. This uses all training information and yields our best point estimates under the model.\n\n5. Algorithmic steps for each case:\n- Parse $L$, the list of training genotypes $\\{\\mathbf{x}^{(n)}\\}_{n=1}^{N}$, and $\\mathbf{y}$.\n- Construct $\\mathbf{X}$ with the specified column ordering.\n- Perform LOOCV by repeatedly solving least squares on $\\mathbf{X}_{-n}$, $\\mathbf{y}_{-n}$ and predicting the held-out sample, then compute LOOCV-MSE.\n- Fit on full $\\mathbf{X}$, $\\mathbf{y}$ to get $\\hat{\\boldsymbol{\\beta}}$ and predict for the unseen genotypes.\n- Round all reported floats to $6$ decimal places.\n\n6. Output. For each case, output a list whose first entry is the LOOCV-MSE and whose subsequent entries are the predictions for the unseen genotypes in the order provided. Aggregate the three case-lists into a single list of lists, and print it on one line in the format \"[caseA_list,caseB_list,caseC_list]\". All floats must be rounded to $6$ decimal places. No physical units apply and no angles are involved. All proportions, if any, must be expressed as decimal numbers, not percentages.\n\nThis approach operationalizes the principles of evolution and natural selection for synthetic biology data by quantifying additive and pairwise epistatic contributions to fitness, estimating them from data via least squares, and evaluating predictive performance with cross-validation to guard against overfitting while leveraging the assumed model structure.", "answer": "[[0.002821,1.300000,1.800000],[0.040000,1.500000],[0.000000,2.300000,2.000000]]", "id": "2761900"}]}