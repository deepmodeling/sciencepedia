{"hands_on_practices": [{"introduction": "The foundational Michaelis-Menten model describes an idealized enzyme. In real biological systems and in therapeutic contexts, enzyme activity is often modulated by inhibitors. This practice explores two common types of reversible inhibition, competitive and uncompetitive, which are fundamental concepts in pharmacology and metabolic engineering. By calculating the substrate concentrations needed to achieve a target velocity under these different inhibitory conditions, you will gain a quantitative understanding of how these inhibitors distinctly alter an enzyme's kinetic behavior [@problem_id:2323062].", "problem": "A research team is characterizing a novel enzyme, Xylosidase Prime, which is a potential target for a new therapeutic drug. The enzyme follows Michaelis-Menten kinetics. In the absence of any inhibitors, its kinetic parameters have been determined to be a Michaelis constant ($K_m$) of 60 µM and a maximum velocity ($V_{\\text{max}}$) of 120 µM/s.\n\nTwo small-molecule compounds are being evaluated as potential inhibitors:\n1.  **Comparetin**: A competitive inhibitor with an inhibition constant ($K_I$) of 10 µM.\n2.  **Uncompexil**: An uncompetitive inhibitor with an inhibition constant ($K_{I'}$) of 40 µM.\n\nIn two separate experiments, each inhibitor is added to the enzyme reaction mixture at a concentration of 20 µM. The researchers want to determine the substrate concentration required to achieve a reaction velocity of 40 µM/s in the presence of each inhibitor.\n\nLet $[S]_{\\text{Comparetin}}$ be the substrate concentration required to achieve this velocity in the presence of Comparetin, and let $[S]_{\\text{Uncompexil}}$ be the substrate concentration required in the presence of Uncompexil.\n\nCalculate the ratio $\\frac{[S]_{\\text{Uncompexil}}}{[S]_{\\text{Comparetin}}}$. Express your answer as a single real number, rounded to three significant figures.", "solution": "For Michaelis-Menten kinetics with inhibitors, the rate equation in the presence of competitive and uncompetitive inhibition can be written in the unified form\n$$\nv=\\frac{V_{\\text{max}}[S]}{\\alpha K_{m}+\\alpha'[S]},\n$$\nwhere for competitive inhibition $\\alpha=1+\\frac{[I]}{K_{I}}$ and $\\alpha'=1$, and for uncompetitive inhibition $\\alpha=1$ and $\\alpha'=1+\\frac{[I]}{K_{I'}}$.\n\nGiven $V_{\\text{max}}=120$, $K_{m}=60$, target $v=40$, and inhibitor concentration $[I]=20$:\n\nCompetitive (Comparetin): $\\alpha=1+\\frac{20}{10}=3$, $\\alpha'=1$. The rate equation becomes\n$$\n40=\\frac{120[S]}{3\\cdot 60+[S]}=\\frac{120[S]}{180+[S]}.\n$$\nSolving,\n$$\n40(180+[S])=120[S]\\;\\Rightarrow\\;7200+40[S]=120[S]\\;\\Rightarrow\\;[S]_{\\text{Comparetin}}=\\frac{7200}{80}=90.\n$$\n\nUncompetitive (Uncompexil): $\\alpha=1$, $\\alpha'=1+\\frac{20}{40}=\\frac{3}{2}$. The rate equation becomes\n$$\n40=\\frac{120[S]}{60+\\frac{3}{2}[S]}.\n$$\nSolving,\n$$\n40\\left(60+\\frac{3}{2}[S]\\right)=120[S]\\;\\Rightarrow\\;2400+60[S]=120[S]\\;\\Rightarrow\\;[S]_{\\text{Uncompexil}}=\\frac{2400}{60}=40.\n$$\n\nTherefore, the required ratio is\n$$\n\\frac{[S]_{\\text{Uncompexil}}}{[S]_{\\text{Comparetin}}}=\\frac{40}{90}=\\frac{4}{9}\\approx 0.444.\n$$\nRounded to three significant figures, the result is $0.444$.", "answer": "$$\\boxed{0.444}$$", "id": "2323062"}, {"introduction": "The kinetic parameters $V_{max}$ and $K_m$ are the heart of the Michaelis-Menten model, but how are they determined from experimental data? This computational exercise puts you in the role of an experimental biochemist tasked with fitting kinetic models to initial rate measurements. By implementing and comparing two widely used methods—direct nonlinear regression and the classic Lineweaver-Burk linearization—you will appreciate their respective strengths and statistical trade-offs, a crucial skill for rigorous data analysis in any modern biology lab [@problem_id:2938278].", "problem": "You are provided with initial rate measurements for a single-substrate enzyme following the binding-and-catalysis scheme $E + S \\rightleftharpoons ES \\rightarrow E + P$ under initial-rate conditions. Starting from the law of mass action and the quasi-steady-state assumption, derive an expression for the initial velocity $v$ as a function of substrate concentration $[S]$ and two parameters that characterize the enzyme-catalyzed reaction. Then, implement and use two independent estimation procedures to infer these two parameters from given datasets: (i) direct nonlinear least-squares regression on the derived rate law and (ii) a linear regression based on the Lineweaver–Burk (LB) transformation. Finally, compare the estimates from the two procedures for each dataset.\n\nFundamental base to begin the derivation:\n- The reaction mechanism is $E + S \\xrightleftharpoons[k_{-1}]{k_1} ES \\xrightarrow{k_2} E + P$ with rate constants $k_1$, $k_{-1}$, and $k_2$.\n- Under initial-rate conditions, product accumulation is negligible, and total enzyme concentration $[E]_T$ is conserved.\n- The quasi-steady-state condition for the complex $ES$ holds at early times.\n- The observable initial rate is $v = \\dfrac{d[P]}{dt}$ at $t \\to 0^+$.\n- Assume $[S]_0 \\gg [E]_T$ so that substrate depletion is negligible during the initial-rate measurement.\n\nYour program must:\n1. Derive the initial-rate law from the fundamental base above and use it as the model for nonlinear regression to estimate the two kinetic parameters. Denote the maximal velocity as $V_{\\max}$ (in $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$) and the Michaelis constant as $K_m$ (in $\\mu \\mathrm{M}$). Use unweighted nonlinear least squares with physically meaningful constraints ($V_{\\max} > 0$, $K_m > 0$).\n2. Independently, apply the Lineweaver–Burk (LB) transformation, which rewrites the model in a linear-in-parameters form, and estimate the same parameters via ordinary least squares on the transformed variables.\n3. For each dataset, report both sets of parameter estimates. Express $V_{\\max}$ in $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$ and $K_m$ in $\\mu \\mathrm{M}$. Round each reported number to four significant figures.\n\nTest suite (all $[S]$ values are in $\\mu \\mathrm{M}$, all $v$ values are in $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$):\n- Dataset A (balanced range of $[S]$): $[S] = [2, 5, 10, 20, 40, 80, 160]$, $v = [0.162, 0.349, 0.641, 0.991, 1.441, 1.792, 2.118]$.\n- Dataset B (low-$[S]$-heavy): $[S] = [0.5, 1, 2, 3, 4, 5, 8]$, $v = [0.106, 0.208, 0.335, 0.461, 0.522, 0.612, 0.727]$.\n- Dataset C (high-$[S]$-heavy): $[S] = [10, 20, 50, 100, 200, 400, 800]$, $v = [0.040, 0.071, 0.165, 0.258, 0.409, 0.523, 0.648]$.\n- Dataset D (includes a mild high-$[S]$ outlier): $[S] = [5, 15, 30, 60, 120, 240]$, $v = [0.191, 0.492, 0.869, 1.329, 1.960, 2.270]$.\n\nAlgorithmic requirements and numerical conditions:\n- For nonlinear regression, use a robust initialization strategy that does not assume prior knowledge of the parameters, and enforce $V_{\\max} > 0$ and $K_m > 0$.\n- For the LB method, form $x = 1/[S]$ and $y = 1/v$ and perform ordinary least squares on $y = a x + b$. Convert the fitted slope $a$ and intercept $b$ into $V_{\\max}$ and $K_m$. Ensure no division-by-zero occurs.\n- For each dataset, output the ordered list $[V_{\\max}^{\\mathrm{NL}}, K_m^{\\mathrm{NL}}, V_{\\max}^{\\mathrm{LB}}, K_m^{\\mathrm{LB}}]$, where the superscripts indicate the estimation method (nonlinear versus Lineweaver–Burk). All values must be floats rounded to four significant figures, with units as specified above.\n\nFinal output format:\n- Your program should produce a single line of output containing the results for all datasets as a comma-separated list of lists enclosed in square brackets, for example, $[[x_{A1},x_{A2},x_{A3},x_{A4}],[x_{B1},x_{B2},x_{B3},x_{B4}],\\ldots]$ with no spaces.", "solution": "The problem is subjected to rigorous validation and is deemed valid. It is a scientifically grounded, well-posed, and objective problem in the field of chemical kinetics. The task requires the derivation of the Michaelis-Menten equation from fundamental principles and its application to experimental data analysis using two standard regression techniques: direct nonlinear least-squares fitting and linear regression on the Lineweaver-Burk transformed data. This is a classic exercise that assesses both theoretical understanding and practical data analysis skills.\n\nThe solution proceeds in two parts: first, a formal derivation of the rate law, and second, a description of the computational methods used to estimate the kinetic parameters from the provided datasets.\n\n**1. Derivation of the Michaelis-Menten Rate Law**\n\nThe enzymatic reaction is described by the following mechanism:\n$$\nE + S \\xrightleftharpoons[k_{-1}]{k_1} ES \\xrightarrow{k_2} E + P\n$$\nwhere $E$ is the enzyme, $S$ is the substrate, $ES$ is the enzyme-substrate complex, and $P$ is the product. The rate constants for the association, dissociation, and catalytic steps are $k_1$, $k_{-1}$, and $k_2$, respectively.\n\nThe rates of change for the concentrations of the chemical species involved are described by the law of mass action. For the enzyme-substrate complex $[ES]$, the rate equation is:\n$$\n\\frac{d[ES]}{dt} = k_1 [E][S] - k_{-1}[ES] - k_2[ES] = k_1 [E][S] - (k_{-1} + k_2)[ES]\n$$\n\nThe total enzyme concentration, $[E]_T$, is conserved throughout the reaction:\n$$\n[E]_T = [E] + [ES]\n$$\nThis allows the concentration of free enzyme, $[E]$, to be expressed as $[E] = [E]_T - [ES]$.\n\nThe quasi-steady-state assumption (QSSA) is applied, which posits that the concentration of the intermediate $[ES]$ complex rapidly reaches a steady state where its rate of formation is balanced by its rate of breakdown. Mathematically, this is expressed as:\n$$\n\\frac{d[ES]}{dt} \\approx 0\n$$\nApplying the QSSA to the rate equation for $[ES]$ yields:\n$$\nk_1 [E][S] - (k_{-1} + k_2)[ES] = 0\n$$\nSubstituting $[E] = [E]_T - [ES]$ into this equation:\n$$\nk_1 ([E]_T - [ES])[S] - (k_{-1} + k_2)[ES] = 0\n$$\nWe now solve for the steady-state concentration of the complex, $[ES]$:\n$$\nk_1 [E]_T [S] - k_1 [ES][S] - (k_{-1} + k_2)[ES] = 0\n$$\n$$\nk_1 [E]_T [S] = [ES] (k_1[S] + k_{-1} + k_2)\n$$\n$$\n[ES] = \\frac{k_1 [E]_T [S]}{k_1[S] + k_{-1} + k_2}\n$$\nBy dividing the numerator and denominator by $k_1$, we get:\n$$\n[ES] = \\frac{[E]_T [S]}{[S] + \\frac{k_{-1} + k_2}{k_1}}\n$$\n\nThe initial velocity of the reaction, $v$, is defined as the rate of product formation, which is proportional to the concentration of the $ES$ complex:\n$$\nv = \\frac{d[P]}{dt} = k_2 [ES]\n$$\nSubstituting the expression for $[ES]$ into the velocity equation gives:\n$$\nv = k_2 \\frac{[E]_T [S]}{[S] + \\frac{k_{-1} + k_2}{k_1}}\n$$\nThis expression is the complete rate law under the QSSA. To simplify it into the familiar Michaelis-Menten form, we define two key parameters:\n1.  The maximal velocity, $V_{\\max}$, which is the theoretical maximum rate of the reaction when the enzyme is fully saturated with substrate ($[S] \\to \\infty$). In this limit, $[ES] \\approx [E]_T$, and the velocity becomes $v = k_2 [E]_T$. Therefore, we define:\n    $$\n    V_{\\max} = k_2 [E]_T\n    $$\n2.  The Michaelis constant, $K_m$, which is a composite constant representing the substrate concentration at which the reaction velocity is half of $V_{\\max}$. We define it as:\n    $$\n    K_m = \\frac{k_{-1} + k_2}{k_1}\n    $$\n\nSubstituting these two parameters, $V_{\\max}$ and $K_m$, into the rate law results in the Michaelis-Menten equation:\n$$\nv = \\frac{V_{\\max}[S]}{K_m + [S]}\n$$\nThis equation will serve as the model for the nonlinear regression analysis.\n\n**2. Parameter Estimation Procedures**\n\nTwo independent methods are implemented to estimate $V_{\\max}$ and $K_m$ from the provided datasets.\n\n**2.1. Direct Nonlinear Least-Squares (NLS) Regression**\n\nThis method directly fits the Michaelis-Menten equation to the experimental data pairs $([S]_i, v_i)$. The goal is to find the parameter values for $V_{\\max}$ and $K_m$ that minimize the sum of squared residuals (SSR):\n$$\n\\mathrm{SSR}(V_{\\max}, K_m) = \\sum_{i=1}^{n} \\left( v_i - \\frac{V_{\\max}[S]_i}{K_m + [S]_i} \\right)^2\n$$\nThis is a nonlinear optimization problem. The implementation utilizes the `scipy.optimize.curve_fit` function. To ensure robustness and physical meaning, the following conditions are applied:\n-   A robust initial guess for the parameters is generated: $V_{\\max, 0} = \\max(v_{\\text{data}})$ and $K_{m, 0} = \\mathrm{median}([S]_{\\text{data}})$.\n-   Parameter constraints $V_{\\max} > 0$ and $K_m > 0$ are enforced using the `bounds` argument of the function.\n\n**2.2. Lineweaver-Burk (LB) Linear Regression**\n\nThis method involves a transformation of the Michaelis-Menten equation into a linear form. By taking the reciprocal of both sides of the equation:\n$$\n\\frac{1}{v} = \\frac{K_m + [S]}{V_{\\max}[S]} = \\frac{K_m}{V_{\\max}[S]} + \\frac{[S]}{V_{\\max}[S]}\n$$\nThis simplifies to the equation of a straight line, $y = ax + b$:\n$$\n\\frac{1}{v} = \\left(\\frac{K_m}{V_{\\max}}\\right) \\frac{1}{[S]} + \\frac{1}{V_{\\max}}\n$$\nwhere $y = 1/v$, $x = 1/[S]$, the slope is $a = K_m / V_{\\max}$, and the y-intercept is $b = 1 / V_{\\max}$.\n\nThe experimental data are transformed to $(x_i, y_i) = (1/[S]_i, 1/v_i)$. An ordinary least-squares linear regression is performed on these transformed data to find the best-fit slope $a$ and intercept $b$. The kinetic parameters are then calculated from these fitted values:\n$$\nV_{\\max} = \\frac{1}{b}\n$$\n$$\nK_m = a \\cdot V_{\\max} = \\frac{a}{b}\n$$\nThis method is computationally simple but can be sensitive to errors in measurements at low substrate concentrations, as these points have high leverage in the linear fit.\n\nThe following program implements both procedures for all provided datasets and formats the results as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import curve_fit\nimport math\n\ndef solve():\n    \"\"\"\n    Derives Michaelis-Menten parameters using NLS and Lineweaver-Burk methods.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Dataset A\n        {'S': np.array([2, 5, 10, 20, 40, 80, 160], dtype=float), \n         'v': np.array([0.162, 0.349, 0.641, 0.991, 1.441, 1.792, 2.118], dtype=float)},\n        # Dataset B\n        {'S': np.array([0.5, 1, 2, 3, 4, 5, 8], dtype=float), \n         'v': np.array([0.106, 0.208, 0.335, 0.461, 0.522, 0.612, 0.727], dtype=float)},\n        # Dataset C\n        {'S': np.array([10, 20, 50, 100, 200, 400, 800], dtype=float), \n         'v': np.array([0.040, 0.071, 0.165, 0.258, 0.409, 0.523, 0.648], dtype=float)},\n        # Dataset D\n        {'S': np.array([5, 15, 30, 60, 120, 240], dtype=float), \n         'v': np.array([0.191, 0.492, 0.869, 1.329, 1.960, 2.270], dtype=float)},\n    ]\n\n    all_results = []\n\n    def michaelis_menten(S, Vmax, Km):\n        \"\"\"Michaelis-Menten model function.\"\"\"\n        return (Vmax * S) / (Km + S)\n\n    def round_to_sf(x, sf):\n        \"\"\"Rounds a number to a specified number of significant figures.\"\"\"\n        if x == 0:\n            return 0.0\n        sign = -1 if x < 0 else 1\n        x = abs(x)\n        if x == 0:\n            return 0.0\n        \n        # Calculate rounding position\n        pos = sf - 1 - int(math.floor(math.log10(x)))\n        return sign * round(x, pos)\n\n    for case in test_cases:\n        S_data = case['S']\n        v_data = case['v']\n\n        # (i) Nonlinear Least-Squares Regression (NLS)\n        Vmax_nl, Km_nl = np.nan, np.nan\n        try:\n            # Robust initial guess for parameters: Vmax ~ max(v), Km ~ S at Vmax/2\n            p0 = [np.max(v_data), np.median(S_data)]\n            # Enforce physically meaningful constraints (Vmax > 0, Km > 0)\n            bounds = ([0, 0], [np.inf, np.inf])\n            popt_nl, _ = curve_fit(michaelis_menten, S_data, v_data, p0=p0, bounds=bounds)\n            Vmax_nl, Km_nl = popt_nl\n        except RuntimeError:\n            # This case occurs if the optimization fails to converge.\n            pass\n\n        # (ii) Lineweaver-Burk (LB) Linear Regression\n        Vmax_lb, Km_lb = np.nan, np.nan\n        try:\n            # Transform data: x = 1/[S], y = 1/v\n            # The problem statement guarantees S > 0 and v > 0.\n            x_lb = 1.0 / S_data\n            y_lb = 1.0 / v_data\n            \n            # Perform linear regression: y = a*x + b\n            # slope (a) = Km/Vmax, intercept (b) = 1/Vmax\n            slope, intercept = np.polyfit(x_lb, y_lb, 1)\n\n            # Check for physically meaningful results (positive slope and intercept)\n            if intercept > 0 and slope > 0:\n                Vmax_lb = 1.0 / intercept\n                Km_lb = slope / intercept\n        except (np.linalg.LinAlgError, ZeroDivisionError):\n            # This case occurs if linear algebra fails or if intercept is zero.\n            pass\n        \n        # Round all results to four significant figures\n        sf = 4\n        result = [\n            round_to_sf(Vmax_nl, sf),\n            round_to_sf(Km_nl, sf),\n            round_to_sf(Vmax_lb, sf),\n            round_to_sf(Km_lb, sf)\n        ]\n        all_results.append(result)\n\n    # Format the output string to be a list of lists with no spaces\n    # Example: [[v_a,k_a,v_a,k_a],[v_b,k_b,v_b,k_b]]\n    result_strings = [f\"[{r[0]},{r[1]},{r[2]},{r[3]}]\" for r in all_results]\n    final_output = f\"[{','.join(result_strings)}]\"\n    \n    print(final_output)\n\nsolve()\n```", "id": "2938278"}, {"introduction": "Enzymes in nature and synthetic constructs rarely operate in a simple, well-mixed solution; they function within complex, spatially organized environments like cells or engineered microreactors. This problem challenges you to model such a system by considering an enzyme encapsulated within a permeable vesicle. To solve it, you must couple the enzyme's intrinsic Michaelis-Menten kinetics with the physics of substrate diffusion across a membrane, providing a hands-on introduction to the kind of multi-process modeling essential in systems and synthetic biology [@problem_id:2323088].", "problem": "An advanced drug delivery system is being modeled, which consists of spherical lipid vesicles designed to function as micro-bioreactors. Each vesicle has a radius $R$ and encapsulates a fixed number of enzyme molecules, $N_E$. This enzyme follows Michaelis-Menten kinetics, characterized by a catalytic rate constant $k_{cat}$ and a Michaelis constant $K_m$.\n\nThe vesicles are suspended in a large buffer solution where the substrate concentration is maintained at a constant value, $S_{out}$. The substrate can diffuse across the vesicle's membrane, which has a permeability coefficient $P$. The total rate of substrate transport into the vesicle is governed by the relation $v_{transport} = A \\cdot P \\cdot (S_{out} - S_{in})$, where $A$ is the vesicle's surface area and $S_{in}$ is the substrate concentration inside the vesicle.\n\nFor simplicity in the final expression, we define two composite parameters: the membrane transport capacity, $\\kappa = 4 \\pi R^2 P$, and the total catalytic capacity of the vesicle, $V_{max,total} = k_{cat} N_E$.\n\nAssuming the system reaches a steady state where the internal substrate concentration $S_{in}$ is constant, and that product removal from the vesicle is immediate and does not influence the reaction, derive a closed-form analytic expression for the steady-state rate of product formation, $v_p$, for a single vesicle. Your final expression should be in terms of $S_{out}$, $K_m$, $\\kappa$, and $V_{max,total}$.", "solution": "At steady state, the substrate influx across the membrane equals the enzymatic consumption rate, and equals the product formation rate. Denote the steady-state product formation rate by $v_{p}$. The membrane transport influx is given by $v_{transport} = \\kappa (S_{out} - S_{in})$, where $\\kappa = 4 \\pi R^{2} P$. The enzymatic rate inside the vesicle follows Michaelis-Menten kinetics with the total catalytic capacity $V_{max,total} = k_{cat} N_{E}$, so $v_{enz} = V_{max,total} \\frac{S_{in}}{K_{m} + S_{in}}$. At steady state,\n$$\nv_{p} = v_{transport} = \\kappa (S_{out} - S_{in}), \\quad v_{p} = v_{enz} = V_{max,total} \\frac{S_{in}}{K_{m} + S_{in}}.\n$$\nSolve the Michaelis-Menten relation for $S_{in}$ in terms of $v_{p}$:\n$$\nv_{p} (K_{m} + S_{in}) = V_{max,total} S_{in} \\;\\Rightarrow\\; v_{p} K_{m} = (V_{max,total} - v_{p}) S_{in} \\;\\Rightarrow\\; S_{in} = \\frac{v_{p} K_{m}}{V_{max,total} - v_{p}}.\n$$\nSubstitute this into the transport relation:\n$$\nv_{p} = \\kappa \\left( S_{out} - \\frac{v_{p} K_{m}}{V_{max,total} - v_{p}} \\right).\n$$\nMultiply both sides by $(V_{max,total} - v_{p})$ and expand to obtain a quadratic equation in $v_{p}$:\n$$\nv_{p} (V_{max,total} - v_{p}) = \\kappa \\left( S_{out} (V_{max,total} - v_{p}) - v_{p} K_{m} \\right),\n$$\n$$\nv_{p} V_{max,total} - v_{p}^{2} = \\kappa V_{max,total} S_{out} - \\kappa v_{p} S_{out} - \\kappa v_{p} K_{m}.\n$$\nRearranging terms gives\n$$\nv_{p}^{2} - v_{p} \\left( \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\right) + \\kappa V_{max,total} S_{out} = 0.\n$$\nSolving this quadratic for $v_{p}$ yields\n$$\nv_{p} = \\frac{ \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\pm \\sqrt{ \\left( \\kappa S_{out} + V_{max,total} + \\kappa K_{m} \\right)^{2} - 4 \\kappa V_{max,total} S_{out} } }{ 2 }.\n$$\nThe physically relevant branch is selected by the condition $v_{p} \\to 0$ as $S_{out} \\to 0$, which corresponds to choosing the minus sign in front of the square root. Therefore, the steady-state product formation rate for a single vesicle is\n$$\nv_{p} = \\frac{ \\kappa (K_{m} + S_{out}) + V_{max,total} - \\sqrt{ \\left[ \\kappa (K_{m} + S_{out}) + V_{max,total} \\right]^{2} - 4 \\kappa V_{max,total} S_{out} } }{ 2 }.\n$$", "answer": "$$\\boxed{\\frac{\\kappa\\left(K_{m}+S_{out}\\right)+V_{max,total}-\\sqrt{\\left[\\kappa\\left(K_{m}+S_{out}\\right)+V_{max,total}\\right]^{2}-4\\,\\kappa\\,V_{max,total}\\,S_{out}}}{2}}$$", "id": "2323088"}]}