{"hands_on_practices": [{"introduction": "The cohesin complex functions as a sophisticated molecular motor, powered by the binding and hydrolysis of ATP. To truly understand this mechanochemical cycle, it is essential to dissect the specific roles of each step. This exercise [@problem_id:2964819] presents a classic thought experiment using a Walker B mutation, which traps the complex in an ATP-bound state, challenging you to deduce the functional consequences for cohesin's loading, loop extrusion, and chromatin residence.", "problem": "A Structural Maintenance of Chromosomes (SMC) family adenosine triphosphatase (ATPase) within cohesin uses an ATP-driven mechanochemical cycle to load onto DNA, extrude loops, and dynamically exchange on and off chromatin. Consider a Walker B mutation in Smc3 that abolishes ATP hydrolysis while retaining ATP binding and head engagement. Assume the following foundational facts: (i) ATP binding promotes SMC head engagement and DNA gripping with the loader Nipped-B-like protein (NIPBL, also called Scc2), (ii) at least one ATP hydrolysis event per cycle is required to complete productive topological loading (DNA entrapment) and to transition between gripping and slipping states central to loop extrusion, and (iii) non-nucleolytic release mediated by Wings apart-like protein (Wapl) requires an ATP hydrolysis-dependent head disengagement step. Using a minimal kinetic schema in which productive loading frequency scales with a hydrolysis-dependent rate $k_{\\mathrm{load}}$, loop extrusion velocity $v$ scales with the ATP turnover rate $k_{\\mathrm{cat}}$, and residence time on chromatin $\\tau$ scales inversely with an ATP hydrolysis-dependent off-rate $k_{\\mathrm{off}}$ via $\\tau \\approx 1/k_{\\mathrm{off}}$, predict the qualitative direction of change in vivo for the following observables relative to wild type: (a) loading frequency, (b) loop extrusion velocity, and (c) chromatin residence time. Choose the best single option.\n\nA. Loading frequency decreases; loop extrusion velocity approaches zero; residence time increases.\n\nB. Loading frequency increases; loop extrusion velocity increases; residence time decreases.\n\nC. Loading frequency is unchanged; loop extrusion velocity approaches zero; residence time is unchanged.\n\nD. Loading frequency decreases; loop extrusion velocity is unchanged; residence time decreases.\n\nE. Loading frequency increases; loop extrusion velocity approaches zero; residence time increases.", "solution": "The problem statement will be validated before a solution is attempted.\n\n### Problem Validation\n\n**Step 1: Extracted Givens**\nThe problem provides the following information:\n1.  **System**: A Structural Maintenance of Chromosomes (SMC) family adenosine triphosphatase (ATPase), specifically the cohesin complex.\n2.  **Function**: The complex uses an ATP-driven mechanochemical cycle for three key processes: loading onto DNA, extruding DNA loops, and dynamic exchange on and off chromatin.\n3.  **Perturbation**: A Walker B mutation in the Smc3 subunit.\n4.  **Consequence of Mutation**: This mutation abolishes ATP hydrolysis but preserves ATP binding and SMC head engagement.\n5.  **Premise (i)**: ATP binding is necessary for SMC head engagement and for gripping DNA in conjunction with the loader protein NIPBL (Scc2).\n6.  **Premise (ii)**: A minimum of one ($1$) ATP hydrolysis event per cycle is essential for two processes: (a) completing productive topological loading (i.e., DNA entrapment) and (b) transitioning between gripping and slipping states, which is fundamental to loop extrusion.\n7.  **Premise (iii)**: The Wapl-mediated release of cohesin from chromatin (non-nucleolytic release) is dependent on an ATP hydrolysis-driven head disengagement step.\n8.  **Kinetic Model**:\n    *   Productive loading frequency is proportional to a hydrolysis-dependent rate, $k_{\\mathrm{load}}$.\n    *   Loop extrusion velocity, $v$, is proportional to the ATP turnover rate, $k_{\\mathrm{cat}}$.\n    *   Chromatin residence time, $\\tau$, is approximately the inverse of an ATP hydrolysis-dependent off-rate, $k_{\\mathrm{off}}$, such that $\\tau \\approx 1/k_{\\mathrm{off}}$.\n\n**Step 2: Validation Using Extracted Givens**\nThe problem is assessed against the required criteria:\n*   **Scientific Grounding**: The problem is rooted in established principles of molecular and cell biology concerning the function of the cohesin complex. The roles of ATP binding and hydrolysis, the Walker B motif, loading and release factors (NIPBL, Wapl), and the process of loop extrusion are all consistent with current scientific literature. The described mutation is a standard experimental tool for investigating ATPase mechanisms. The problem is scientifically sound.\n*   **Well-Posedness**: The problem defines a specific perturbation (the mutation) and its direct biochemical effect (no hydrolysis). It then asks for the qualitative effects on three clearly defined observables based on a set of explicit premises and a simplified kinetic model. This structure allows for a unique and logical solution to be derived.\n*   **Objectivity**: The language is technical, precise, and devoid of subjective or ambiguous terminology.\n*   **Completeness and Consistency**: The problem is self-contained. It provides all necessary axioms—the \"foundational facts\" and the \"minimal kinetic schema\"—to deduce the answer without requiring external information that would contradict the setup. The premises are internally consistent.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. It is a well-formulated question in molecular biophysics. I will proceed with the derivation of the solution.\n\n### Solution Derivation\n\nThe central element of this problem is the specified mutation in the Walker B motif of Smc3, which results in the abolishment of ATP hydrolysis while retaining the capacity for ATP binding and subsequent head engagement. The complex is therefore arrested in an ATP-bound, head-engaged conformation. We will analyze the consequences for each of the three specified observables based on the provided premises.\n\n**1. Analysis of Loading Frequency**\nThe problem states that productive loading frequency scales with a hydrolysis-dependent rate $k_{\\mathrm{load}}$. Furthermore, premise (ii) explicitly states that \"at least one ATP hydrolysis event per cycle is required to complete productive topological loading\". Since the mutation abolishes ATP hydrolysis, the cycle cannot proceed past the initial ATP-bound, head-engaged state to achieve topological entrapment of DNA. The rate-limiting step for productive loading, which requires hydrolysis, has its rate constant effectively reduced to zero. Consequently, the rate of productive loading, $k_{\\mathrm{load}}$, must decrease precipitously. While an initial, non-productive association with DNA might occur (premise (i)), the conversion of this state into a topologically loaded complex is blocked. Therefore, the overall loading frequency decreases.\n\n**2. Analysis of Loop Extrusion Velocity**\nThe problem defines that the loop extrusion velocity, $v$, scales with the ATP turnover rate, $k_{\\mathrm{cat}}$. The ATP turnover rate is the rate of the full cycle: ATP binding, hydrolysis, and product release. The mutation halts the cycle at the hydrolysis step. This means the cycle cannot be completed, so the turnover rate $k_{\\mathrm{cat}}$ becomes zero. As $v$ is proportional to $k_{\\mathrm{cat}}$, the loop extrusion velocity $v$ must approach zero. This conclusion is reinforced by premise (ii), which indicates that the state transitions necessary for loop extrusion are dependent on ATP hydrolysis. Without hydrolysis, the complex is locked in a static DNA-gripping state and cannot perform the iterative steps of the extrusion process.\n\n**3. Analysis of Chromatin Residence Time**\nThe residence time on chromatin, $\\tau$, is given by the relation $\\tau \\approx 1/k_{\\mathrm{off}}$, where $k_{\\mathrm{off}}$ is an ATP hydrolysis-dependent off-rate. Premise (iii) establishes that the primary mechanism for cohesin release from chromatin, mediated by Wapl, requires an ATP hydrolysis-dependent step for SMC head disengagement. By abolishing ATP hydrolysis, the mutation prevents this head disengagement and thus blocks the Wapl-mediated release pathway. This causes the off-rate, $k_{\\mathrm{off}}$, to approach zero. As a result, the residence time $\\tau$, being inversely proportional to $k_{\\mathrm{off}}$, will increase dramatically, theoretically approaching infinity. The mutant cohesin complex becomes trapped on the chromatin.\n\n**Summary of Predictions:**\n*   (a) Loading frequency: Decreases.\n*   (b) Loop extrusion velocity: Approaches zero.\n*   (c) Chromatin residence time: Increases.\n\n### Evaluation of Options\n\n*   **A. Loading frequency decreases; loop extrusion velocity approaches zero; residence time increases.** This option perfectly matches the derived consequences for all three observables. **Correct**.\n\n*   **B. Loading frequency increases; loop extrusion velocity increases; residence time decreases.** This option is incorrect for all three observables. The lack of ATP hydrolysis blocks all these processes or, in the case of residence time, has the opposite effect. **Incorrect**.\n\n*   **C. Loading frequency is unchanged; loop extrusion velocity approaches zero; residence time is unchanged.** This option is incorrect regarding loading frequency and residence time. Productive loading is hydrolysis-dependent, and the blockage of release significantly increases residence time. **Incorrect**.\n\n*   **D. Loading frequency decreases; loop extrusion velocity is unchanged; residence time decreases.** This option is incorrect regarding loop extrusion velocity and residence time. Velocity depends on ATP turnover, and residence time is increased, not decreased. **Incorrect**.\n\n*   **E. Loading frequency increases; loop extrusion velocity approaches zero; residence time increases.** This option incorrectly states that loading frequency increases. It conflates the initial DNA binding and head engagement (which may be stabilized by the ATP-bound state) with the overall frequency of *productive* topological loading, which is strictly dependent on hydrolysis and is therefore blocked. **Incorrect**.\n\nBased on this rigorous analysis, only option A is consistent with the provided model of cohesin function and the effects of the specified mutation.", "answer": "$$\\boxed{A}$$", "id": "2964819"}, {"introduction": "While the core cohesin motor is essential, its function in the cell is intricately managed by a network of regulatory factors. A cornerstone of molecular genetics is the use of epistasis analysis to decipher the logic of these regulatory pathways. This problem [@problem_id:2964800] puts you in the role of a research scientist, tasking you with interpreting genetic and biochemical data to unravel the hierarchical and antagonistic relationships between the key cohesin regulators Eco1, Wapl, and Pds5.", "problem": "A research group investigates the genetic order and dependencies among the establishment acetyltransferase Eco1, the releasing factor Wapl, and the cohesin-associated factor Pds5 in budding yeast. Cohesion is assayed by scoring sister centromere separation using a Green Fluorescent Protein (GFP)-marked centromere reporter in metaphase-arrested cells after a synchronized cell cycle, with the relevant perturbations present from before DNA replication. Establishment of sister chromatid cohesion is defined as the conversion of loaded cohesin into a state competent to resist spindle forces following DNA replication, while maintenance refers to the preservation of this state until anaphase. Eco1 is a replication-coupled acetyltransferase of the Structural Maintenance of Chromosomes (SMC) subunit Smc3, Wapl promotes cohesin release from DNA, and Pds5 binds cohesin and influences both establishment and release. Genetic epistasis is interpreted using the following well-tested framework: in a linear pathway, the downstream component’s mutant phenotype masks that of the upstream; in antagonistic or branched modules, suppression of one mutant by loss of an antagonist reveals inhibitory relationships rather than linear activation.\n\nThe team constructs conditional alleles: an eco1 temperature-sensitive (ts) allele, a wapl deletion, and an Auxin-Inducible Degron (AID) allele for Pds5 that is acutely depleted by auxin throughout the experiment. After arresting cells in metaphase, they quantify the percentage of cells exhibiting separated sister centromere GFP foci (higher percentages indicate weaker cohesion). In parallel, they immunoblot for acetylated Smc3 and report the acetylated Smc3 to total Smc3 ratio normalized to wild type.\n\nCohesion phenotype (fraction of cells with separated sister centromeres, mean of biological replicates):\n- Wild type: $12\\%$\n- eco1-ts: $78\\%$\n- wapl\\Delta: $5\\%$\n- pds5-AID (depleted): $85\\%$\n- eco1-ts; wapl\\Delta: $20\\%$\n- pds5-AID; wapl\\Delta: $82\\%$\n- eco1-ts; pds5-AID: $88\\%$\n- eco1-ts; pds5-AID; wapl\\Delta: $80\\%$\n\nSmc3 acetylation (acetyl-Smc3/total Smc3, normalized to wild type $=1$):\n- Wild type: $1.0$\n- eco1-ts: $0.2$\n- wapl\\Delta: $1.0$\n- pds5-AID: $0.3$\n- eco1-ts; wapl\\Delta: $0.2$\n- pds5-AID; wapl\\Delta: $0.3$\n- eco1-ts; pds5-AID; wapl\\Delta: $0.3$\n\nWhich interpretation of pathway order and dependency is best supported by these data?\n\nA. Wapl acts upstream to recruit Eco1 and Pds5 to cohesin during establishment; thus, loss of Wapl should phenocopy loss of Eco1, and deletion of Wapl should rescue the cohesion defect of pds5 depletion by bypassing the need for Pds5.\n\nB. Eco1 acts upstream to activate Wapl’s releasing activity; therefore, eco1-ts phenotypes should not be suppressed by loss of Wapl, whereas pds5 depletion should be rescued by wapl deletion because Pds5 functions only through Wapl.\n\nC. Pds5 acts upstream to promote Eco1-dependent establishment, whereas Wapl acts downstream as an antagonist of cohesion; therefore, deletion of Wapl suppresses eco1-ts but not pds5 depletion, Smc3 acetylation depends on Eco1 and Pds5 but not on Wapl, and triple mutants retain the severe pds5 defect.\n\nD. Eco1 and Wapl constitute a single linear pathway in which Eco1 positively regulates Wapl to ensure proper turnover of cohesin, while Pds5 acts in a parallel redundant pathway; thus, the severe triple mutant phenotype is due to additivity rather than epistasis or suppression.", "solution": "The problem requires an interpretation of genetic and biochemical data to elucidate the functional relationships between the proteins Eco1, Wapl, and Pds5 in sister chromatid cohesion. First, the problem statement must be validated.\n\n**Problem Validation**\n\nStep 1: Extract Givens\n- **Proteins and Functions**:\n    - Eco1: Acetyltransferase for Smc3, required for cohesion establishment.\n    - Wapl: Promotes cohesin release from DNA, an antagonist of cohesion.\n    - Pds5: Binds cohesin, influences establishment and release.\n- **Genetic Alleles**:\n    - `eco1-ts`: Temperature-sensitive allele for Eco1.\n    - `waplΔ`: Deletion allele for Wapl.\n    - `pds5-AID`: Auxin-Inducible Degron allele for Pds5.\n- **Epistasis Framework**:\n    - Linear pathway: Downstream mutant phenotype masks upstream mutant phenotype.\n    - Antagonistic modules: Loss of an antagonist can suppress the phenotype of a mutant in the opposed pathway.\n- **Quantitative Data 1 (Cohesion Defect)**: Percentage of cells with separated sister centromeres.\n    - Wild type: $12\\%$\n    - `eco1-ts`: $78\\%$\n    - `waplΔ`: $5\\%$\n    - `pds5-AID`: $85\\%$\n    - `eco1-ts; waplΔ`: $20\\%$\n    - `pds5-AID; waplΔ`: $82\\%$\n    - `eco1-ts; pds5-AID`: $88\\%$\n    - `eco1-ts; pds5-AID; waplΔ`: $80\\%$\n- **Quantitative Data 2 (Smc3 Acetylation)**: Ratio of acetyl-Smc3 to total Smc3, normalized to wild type.\n    - Wild type: $1.0$\n    - `eco1-ts`: $0.2$\n    - `waplΔ`: $1.0$\n    - `pds5-AID`: $0.3$\n    - `eco1-ts; waplΔ`: $0.2$\n    - `pds5-AID; waplΔ`: $0.3$\n    - `eco1-ts; pds5-AID; waplΔ`: $0.3$\n\nStep 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, describing a standard epistasis analysis in molecular cell biology using established techniques and model organisms. The provided protein functions are consistent with current scientific literature. The problem is well-posed, providing sufficient quantitative data and a clear framework for interpretation to arrive at a logical conclusion. The language is objective and precise. The data are internally consistent; for example, the loss of the acetyltransferase Eco1 correctly corresponds to a sharp drop in Smc3 acetylation. No scientific, logical, or structural flaws are detected.\n\nStep 3: Verdict and Action\nThe problem is valid. A full solution will be derived.\n\n**Derivation of Solution**\n\nThe goal is to construct a pathway model consistent with all provided data.\n\n1.  **Analysis of Single Mutants**:\n    - **`eco1-ts`**: The cohesion defect is severe ($78\\%$ separated centromeres), and Smc3 acetylation is severely reduced (ratio of $0.2$). This confirms Eco1 is a positive regulator of cohesion, acting via Smc3 acetylation.\n    - **`waplΔ`**: Cohesion is enhanced ($5\\%$ separated centromeres, less than wild type at $12\\%$). Smc3 acetylation is normal (ratio of $1.0$). This confirms Wapl is an antagonist of cohesion that does not affect the acetylation process itself. It likely acts by removing cohesin from chromosomes.\n    - **`pds5-AID`**: The cohesion defect is severe ($85\\%$ separated centromeres), comparable to `eco1-ts`. Importantly, Smc3 acetylation is also severely reduced (ratio of $0.3$). Since Eco1 is the acetyltransferase, the fact that Pds5 depletion prevents acetylation implies that Pds5 is required for Eco1's function. Thus, Pds5 is also a positive regulator of cohesion establishment and acts in the same pathway as Eco1, likely upstream of or as a co-factor for the acetylation step.\n\n2.  **Analysis of Double Mutants (Epistasis)**:\n    - **`eco1-ts; waplΔ`**: The cohesion defect of `eco1-ts` ($78\\%$) is strongly suppressed by `waplΔ`, resulting in only $20\\%$ separated centromeres. This is a classic example of suppression by removing an antagonist. Wapl normally removes un-acetylated cohesin. When both Eco1 (and thus acetylation) and Wapl are absent, the un-acetylated cohesin is no longer efficiently removed and can provide partial cohesion. The acetylation level remains low (ratio of $0.2$), confirming that suppression is not due to restored acetylation but is a bypass mechanism. This places Wapl's antagonistic function genetically downstream of, or in opposition to, the establishment pathway.\n    - **`pds5-AID; waplΔ`**: The cohesion defect of `pds5-AID` ($85\\%$) is *not* suppressed by `waplΔ` ($82\\%$ separation in the double mutant). This is a critical result. If Pds5's only role were to activate Eco1, then the `pds5-AID` mutant should be suppressed by `waplΔ` just like `eco1-ts` is. The lack of suppression indicates that Pds5 has an additional essential function for cohesion that cannot be bypassed by deleting Wapl. The cohesin complex formed in the absence of Pds5 appears to be non-functional for cohesion, even if its removal by Wapl is blocked.\n    - **`eco1-ts; pds5-AID`**: The double mutant phenotype ($88\\%$ separation) is as severe as, or slightly more severe than, the single mutants. This is consistent with both genes acting in the same linear pathway for cohesion establishment, where loss of either component incapacitates the pathway.\n\n3.  **Analysis of Triple Mutant**:\n    - **`eco1-ts; pds5-AID; waplΔ`**: The phenotype is a severe cohesion defect ($80\\%$ separation). The suppression of `eco1-ts` by `waplΔ` is completely eliminated in the absence of Pds5. This indicates that the `pds5-AID` phenotype is epistatic to (masks) the phenotypes of `eco1-ts` and `waplΔ`. The severe defect caused by Pds5 depletion is the dominant outcome.\n\n**Summary Model**:\n- Pds5 and Eco1 act in the same pathway to promote cohesion establishment via Smc3 acetylation. `Pds5 -> Eco1 -> Acetylation -> Cohesion Establishment`.\n- Wapl acts as an antagonist, promoting cohesin release.\n- The cohesion defect from loss of Eco1 function (`eco1-ts`) can be partially bypassed by removing the antagonist Wapl.\n- The cohesion defect from loss of Pds5 function (`pds5-AID`) cannot be bypassed by removing Wapl, indicating Pds5 has a second, crucial role beyond promoting Eco1-mediated acetylation.\n- The `pds5-AID` defect is epistatic to `eco1-ts` and `waplΔ`.\n\n**Evaluation of Options**\n\nA. Wapl acts upstream to recruit Eco1 and Pds5 to cohesin during establishment; thus, loss of Wapl should phenocopy loss of Eco1, and deletion of Wapl should rescue the cohesion defect of pds5 depletion by bypassing the need for Pds5.\n- This is incorrect. Wapl is an antagonist, not an upstream activator. The `waplΔ` phenotype ($5\\%$ separation) is opposite to the `eco1-ts` phenotype ($78\\%$ separation). The data also show `waplΔ` does not rescue `pds5-AID` ($82\\%$ vs $85\\%$). **Incorrect**.\n\nB. Eco1 acts upstream to activate Wapl’s releasing activity; therefore, eco1-ts phenotypes should not be suppressed by loss of Wapl, whereas pds5 depletion should be rescued by wapl deletion because Pds5 functions only through Wapl.\n- This is incorrect. Eco1 establishes cohesion; it does not activate the antagonist Wapl. The data explicitly show that `eco1-ts` ($78\\%$) *is* suppressed by `waplΔ` (to $20\\%$). The data also show `pds5-AID` is *not* rescued by `waplΔ`. **Incorrect**.\n\nC. Pds5 acts upstream to promote Eco1-dependent establishment, whereas Wapl acts downstream as an antagonist of cohesion; therefore, deletion of Wapl suppresses eco1-ts but not pds5 depletion, Smc3 acetylation depends on Eco1 and Pds5 but not on Wapl, and triple mutants retain the severe pds5 defect.\n- This statement accurately synthesizes the data.\n    - `Pds5 acts upstream to promote Eco1-dependent establishment`: Supported by acetylation data (`pds5-AID` has low acetylation).\n    - `Wapl acts downstream as an antagonist`: Supported by its phenotype ($5\\%$ separation) and its suppression of `eco1-ts`.\n    - `deletion of Wapl suppresses eco1-ts but not pds5 depletion`: A direct, correct summary of the epistasis data ($20\\%$ vs $82\\%$).\n    - `Smc3 acetylation depends on Eco1 and Pds5 but not on Wapl`: A direct, correct summary of the biochemical data ($0.2$, $0.3$ vs $1.0$).\n    - `triple mutants retain the severe pds5 defect`: A correct reading of the triple mutant data ($80\\%$), demonstrating the epistasis of `pds5-AID`.\nThis option is entirely consistent with the derived model. **Correct**.\n\nD. Eco1 and Wapl constitute a single linear pathway in which Eco1 positively regulates Wapl to ensure proper turnover of cohesin, while Pds5 acts in a parallel redundant pathway; thus, the severe triple mutant phenotype is due to additivity rather than epistasis or suppression.\n- This is incorrect. Eco1 and Wapl are antagonists, not a linear pathway. Pds5 and Eco1 act in the same, not parallel, pathway for acetylation. The data show clear examples of epistasis and suppression, not simple additivity. The triple mutant phenotype shows the epistatic effect of `pds5-AID` over the others. **Incorrect**.", "answer": "$$\\boxed{C}$$", "id": "2964800"}, {"introduction": "Cohesin's activity culminates in the large-scale organization of the genome into functional domains, such as Topologically Associating Domains (TADs), which can be visualized using chromosome conformation capture techniques. A key challenge is to move from qualitative observation to quantitative analysis. This practice [@problem_id:2964851] guides you through the process of developing a computational metric for TAD boundary strength and applying a rigorous statistical analysis to test the foundational hypothesis that cohesin is essential for maintaining genome architecture.", "problem": "You are given multiple replicate chromosome contact matrices representing locus-locus contact frequencies before and after depletion of the Cohesin complex. The goal is to formalize and compute an insulation-based boundary strength at specified candidate indices, then test whether boundary strength decreases upon Cohesin depletion using a one-sided paired test across matched replicates with multiple hypothesis correction across indices.\n\nFoundational definitions:\n- Let a chromosome contact map be represented by a symmetric matrix $C \\in \\mathbb{R}_{\\ge 0}^{N \\times N}$ with $C_{ab} = C_{ba}$ denoting the contact frequency between bins $a$ and $b$, where $0 \\le a,b \\le N-1$.\n- For a bin index $i$ and a positive integer window radius $w$, define the crossing-sum $S_i(C; w)$ as the total contact frequency in the window that crosses the vertical partition between bins $i$ and $i+1$:\n$$\nS_i(C; w) \\equiv \\sum_{a = \\max(0,\\, i-w+1)}^{i} \\;\\; \\sum_{b = i+1}^{\\min(N-1,\\, i+w)} C_{ab}.\n$$\n- For numerical stability, define a pseudocount $\\varepsilon > 0$ and the stabilized log-crossing $X_i(C; w, \\varepsilon) \\equiv \\ln\\!\\big(S_i(C; w) + \\varepsilon\\big)$.\n- For a flank size $d \\in \\mathbb{N}$, define the boundary strength at index $i$ as the contrast between the average log-crossing of the flanks and the log-crossing at the center:\n$$\nB_i(C; w, d, \\varepsilon) \\equiv \\frac{1}{2}\\left(\\frac{1}{d}\\sum_{k=1}^{d} X_{i-k}(C; w, \\varepsilon) + \\frac{1}{d}\\sum_{k=1}^{d} X_{i+k}(C; w, \\varepsilon)\\right) - X_i(C; w, \\varepsilon).\n$$\n- Eligibility: For $B_i(C; w, d, \\varepsilon)$ to be well-defined without edge clipping, $i$ must satisfy $i - d \\ge w - 1$ and $i + d \\le N - 1 - w$. Only such $i$ are eligible for hypothesis testing.\n\nStatistical testing across matched replicates:\n- Suppose we have $R$ matched replicate contact matrices for the control condition (before Cohesin depletion), $\\{C^{\\text{pre}}_r\\}_{r=1}^{R}$, and $R$ matched replicate contact matrices for the experimental condition (after Cohesin depletion), $\\{C^{\\text{post}}_r\\}_{r=1}^{R}$. For each eligible index $i$, compute paired replicate boundary strengths in each condition and form the differences\n$$\nD_{i,r} \\equiv B_i\\!\\left(C^{\\text{post}}_r; w, d, \\varepsilon\\right) - B_i\\!\\left(C^{\\text{pre}}_r; w, d, \\varepsilon\\right), \\quad r = 1,\\dots,R.\n$$\n- Perform a one-sided paired $t$-test for each eligible $i$ to assess the null hypothesis $H_0: \\mu_i \\ge 0$ against the alternative $H_1: \\mu_i < 0$, where $\\mu_i$ is the population mean of $D_{i,r}$. Let $\\bar{D}_i$ be the sample mean of $\\{D_{i,r}\\}_{r=1}^{R}$ and $s_i$ be the sample standard deviation with $R-1$ degrees of freedom. The test statistic is\n$$\nt_i \\equiv \\frac{\\bar{D}_i}{s_i / \\sqrt{R}}.\n$$\nIf $s_i = 0$, define the one-sided $p$-value by the conservative rule: if $\\bar{D}_i  0$ then $p_i = 0$, if $\\bar{D}_i = 0$ then $p_i = 0.5$, and if $\\bar{D}_i > 0$ then $p_i = 1$. Otherwise, when $s_i > 0$, define $p_i$ as the cumulative distribution function of the Student $t$-distribution with $R-1$ degrees of freedom evaluated at $t_i$:\n$$\np_i \\equiv F_{t_{R-1}}(t_i).\n$$\n- Across the $m$ eligible indices in the candidate set, correct for multiple hypothesis testing using the Benjamini–Hochberg procedure at a false discovery rate level $\\alpha \\in (0,1)$. Let the $m$ $p$-values be sorted in ascending order $p_{(1)} \\le \\dots \\le p_{(m)}$. Find\n$$\nk^\\star \\equiv \\max\\left\\{ k \\in \\{1,\\dots,m\\} \\,\\middle|\\, p_{(k)} \\le \\frac{k}{m}\\alpha \\right\\},\n$$\nif such $k^\\star$ exists; otherwise, no hypotheses are rejected. Reject all hypotheses with $p_i \\le p_{(k^\\star)}$. Report the total number of rejections.\n\nYour task:\n- Implement the above definitions and statistical testing for each provided test case.\n- For each test case, output a single integer: the number of candidate indices declared significant (i.e., boundary strength decreased after Cohesin depletion) after Benjamini–Hochberg correction at the specified $\\alpha$.\n- Aggregate the results across all test cases into a single line as a comma-separated list enclosed in square brackets.\n\nTest suite:\nFor each test case, you are given:\n- The list of candidate boundary indices $\\mathcal{I}$ (zero-based).\n- Lists of matched replicate matrices before and after Cohesin depletion.\n- The parameters $w$, $d$, $\\varepsilon$, and $\\alpha$.\n\nAll matrices are symmetric with nonnegative entries and small sizes to allow direct implementation.\n\nTest case 1 (happy path, clear decrease at one interior boundary):\n- $N = 8$, $R = 4$, $\\mathcal{I} = [3, 1, 6]$, $w = 2$, $d = 1$, $\\varepsilon = 10^{-6}$, $\\alpha = 0.1$.\n- For each replicate $r \\in \\{1,2,3,4\\}$, define baseline contacts $C_{ab} = 10$ for all $a  b$, with symmetry $C_{ba} = C_{ab}$ and $C_{aa} = 0$. Modify only the four crossing cells of the partition at $i = 3$: the cells $(2,4)$, $(2,5)$, $(3,4)$, $(3,5)$.\n    - Replicate 1: pre values set to $2$, post values set to $20$ at those four cells.\n    - Replicate 2: pre values set to $3$, post values set to $19$ at those four cells.\n    - Replicate 3: pre values set to $2.5$, post values set to $18$ at those four cells.\n    - Replicate 4: pre values set to $3.5$, post values set to $21$ at those four cells.\n- All other matrix entries remain at the baseline $10$.\n\nTest case 2 (eligibility boundary condition and no change):\n- $N = 7$, $R = 3$, $\\mathcal{I} = [1, 5, 3]$, $w = 2$, $d = 2$, $\\varepsilon = 10^{-6}$, $\\alpha = 0.2$.\n- For each replicate $r \\in \\{1,2,3\\}$ and both conditions (pre and post), set all off-diagonal entries to $10$, enforce symmetry, and set $C_{aa} = 0$. There is no difference between conditions. Indices that do not satisfy the eligibility constraints must be excluded from testing.\n\nTest case 3 (boundary strength increases, not decreases):\n- $N = 6$, $R = 4$, $\\mathcal{I} = [2, 3]$, $w = 1$, $d = 1$, $\\varepsilon = 10^{-6}$, $\\alpha = 0.05$.\n- For each replicate $r \\in \\{1,2,3,4\\}$, set a baseline of $5$ for all off-diagonal entries, symmetric with $C_{aa} = 0$. Modify only the single crossing cell at the partition $i = 3$ with $w = 1$, which is $(3,4)$:\n    - Pre: $(3,4) = (4,3) = 5$ (baseline).\n    - Post: $(3,4) = (4,3) = 1$ (reduced crossing), all others remain baseline.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[result1,result2,result3]\"), where each result is the integer number of significant decreases in boundary strength discovered for the corresponding test case.", "solution": "The problem statement is subjected to rigorous validation prior to any attempt at a solution.\n\n### Step 1: Extract Givens\nThe problem provides the following definitions and procedures:\n- A chromosome contact map is a symmetric matrix $C \\in \\mathbb{R}_{\\ge 0}^{N \\times N}$.\n- The crossing-sum at index $i$ with window radius $w$ is $S_i(C; w) \\equiv \\sum_{a = \\max(0,\\, i-w+1)}^{i} \\;\\; \\sum_{b = i+1}^{\\min(N-1,\\, i+w)} C_{ab}$.\n- The stabilized log-crossing is $X_i(C; w, \\varepsilon) \\equiv \\ln\\!\\big(S_i(C; w) + \\varepsilon\\big)$ for a pseudocount $\\varepsilon > 0$.\n- The boundary strength at index $i$ with flank size $d$ is $B_i(C; w, d, \\varepsilon) \\equiv \\frac{1}{2}\\left(\\frac{1}{d}\\sum_{k=1}^{d} X_{i-k}(C; w, \\varepsilon) + \\frac{1}{d}\\sum_{k=1}^{d} X_{i+k}(C; w, \\varepsilon)\\right) - X_i(C; w, \\varepsilon)$.\n- An index $i$ is eligible for testing if and only if $i - d \\ge w - 1$ and $i + d \\le N - 1 - w$.\n- For $R$ matched replicates of pre- and post-depletion matrices, $\\{C^{\\text{pre}}_r\\}_{r=1}^{R}$ and $\\{C^{\\text{post}}_r\\}_{r=1}^{R}$, the paired difference is $D_{i,r} \\equiv B_i\\!\\left(C^{\\text{post}}_r\\right) - B_i\\!\\left(C^{\\text{pre}}_r\\right)$.\n- A one-sided paired $t$-test is performed on the differences $\\{D_{i,r}\\}_{r=1}^R$ for each eligible index $i$ to test $H_0: \\mu_i \\ge 0$ against $H_1: \\mu_i  0$.\n- The test statistic is $t_i \\equiv \\frac{\\bar{D}_i}{s_i / \\sqrt{R}}$, where $\\bar{D}_i$ and $s_i$ are the sample mean and sample standard deviation.\n- The $p$-value $p_i$ is calculated from the cumulative distribution function of the Student's $t$-distribution, $F_{t_{R-1}}(t_i)$, with special handling for the case $s_i=0$.\n- Multiple hypothesis testing across $m$ eligible indices is corrected using the Benjamini–Hochberg procedure at a false discovery rate $\\alpha$, with the specific rule to find $k^\\star \\equiv \\max\\left\\{ k \\in \\{1,\\dots,m\\} \\,\\middle|\\, p_{(k)} \\le \\frac{k}{m}\\alpha \\right\\}$ and reject all hypotheses with $p_i \\le p_{(k^\\star)}$.\n- Three specific test cases are provided with all parameters and data generation rules.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is evaluated against the established criteria:\n- **Scientifically Grounded:** The problem is rooted in the established biological context of chromosome architecture. The protein complex Cohesin is known to be a primary driver of topologically associating domains (TADs). The concept of an \"insulation score\" or \"boundary strength\" is a standard method for quantifying TAD boundaries from chromosome conformation capture data (like Hi-C). The hypothesis that Cohesin depletion weakens these boundaries (i.e., decreases their strength) is a central tenet in the field. The provided formulas are a reasonable and explicit formalization of these concepts.\n- **Well-Posed and Objective:** The problem is mathematically rigorous. All terms are explicitly defined with precise formulas. The statistical procedure, including handling of edge cases ($s_i=0$) and multiple testing correction, is specified without ambiguity. The problem is stated in objective, formal language.\n- **Completeness and Consistency:** The problem is self-contained. Each test case includes all necessary parameters ($N, R, \\mathcal{I}, w, d, \\varepsilon, \\alpha$) and unambiguous instructions for constructing the input matrices. There are no internal contradictions.\n\n### Step 3: Verdict and Action\nThe problem statement is **valid**. It is a well-defined, scientifically sound, and computationally tractable problem. A solution will be provided.\n\n### Principle-Based Design of the Solution\nThe task is to implement the specified computational pipeline to determine the number of genomic boundaries whose strength significantly decreases upon Cohesin depletion across multiple test scenarios. The solution is constructed by systematically implementing the provided definitions.\n\n1.  **Eligibility Filtering:** For each test case, the list of candidate indices $\\mathcal{I}$ is first filtered to retain only those indices $i$ that are \"eligible\" for boundary strength calculation without edge artifacts. An index $i$ is eligible if it satisfies the dual conditions $i - d \\ge w - 1$ and $i + d \\le N - 1 - w$, where $N$ is the matrix dimension, $w$ is the window radius, and $d$ is the flank size. If no indices are eligible, the analysis for that test case terminates with zero significant findings.\n\n2.  **Boundary Strength Calculation:** The core of the analysis is the function $B_i(C; w, d, \\varepsilon)$, which quantifies the boundary strength. Its computation is hierarchical:\n    - First, the crossing-sum $S_i(C; w)$ is calculated for a given matrix $C$, index $i$, and window $w$. This sum represents the total contact frequency across the partition at $i$ within a specified diamond-shaped region. The summation is performed over matrix elements $C_{ab}$ where $a \\in [\\max(0,\\, i-w+1), i]$ and $b \\in [i+1, \\min(N-1,\\, i+w)]$.\n    - Second, the stabilized log-crossing $X_i(C; w, \\varepsilon) = \\ln(S_i(C; w) + \\varepsilon)$ is computed. The logarithm transforms the highly skewed contact frequencies, and the pseudocount $\\varepsilon$ ensures numerical stability for small or zero sums.\n    - Finally, the boundary strength $B_i$ is computed as the difference between the average log-crossing of the flanking regions and the log-crossing at the center: $B_i = \\frac{1}{2d} \\sum_{k=1}^{d} (X_{i-k} + X_{i+k}) - X_i$. A high positive value indicates strong insulation (a good boundary), as crossing at $i$ is low compared to its neighborhood.\n\n3.  **Paired Statistical Testing:** For each eligible index $i$, we assess the change in boundary strength between the 'pre' and 'post' Cohesin depletion conditions.\n    - For each replicate $r \\in \\{1,\\dots,R\\}$, the paired difference $D_{i,r} = B_i(C^{\\text{post}}_r) - B_i(C^{\\text{pre}}_r)$ is calculated. A negative value for $D_{i,r}$ indicates a decrease in boundary strength for that replicate.\n    - The set of differences $\\{D_{i,r}\\}_{r=1}^R$ is then subjected to a one-sided paired $t$-test. The null hypothesis $H_0: \\mu_i \\ge 0$ (no decrease in mean boundary strength) is tested against the alternative $H_1: \\mu_i  0$ (a decrease in mean boundary strength).\n    - The sample mean $\\bar{D}_i$ and sample standard deviation $s_i$ (with $R-1$ degrees of freedom) are computed.\n    - A special rule handles the case where $s_i=0$: if $\\bar{D}_i  0$, $p_i=0$; if $\\bar{D}_i = 0$, $p_i=0.5$; if $\\bar{D}_i  0$, $p_i=1$.\n    - If $s_i  0$, the $t$-statistic $t_i = \\bar{D}_i / (s_i / \\sqrt{R})$ is computed, and the $p$-value $p_i$ is obtained from the cumulative distribution function of the Student's $t$-distribution with $R-1$ degrees of freedom, $p_i = F_{t_{R-1}}(t_i)$.\n\n4.  **Multiple Hypothesis Correction:** The set of $p$-values $\\{p_i\\}$ for all $m$ eligible indices must be corrected for multiple comparisons. The Benjamini–Hochberg (BH) procedure is applied at a specified false discovery rate $\\alpha$.\n    - The $m$ p-values are sorted in ascending order: $p_{(1)} \\le p_{(2)} \\le \\dots \\le p_{(m)}$.\n    - The largest integer $k^\\star$ is found such that $p_{(k^\\star)} \\le \\frac{k^\\star}{m}\\alpha$.\n    - If such a $k^\\star$ exists, the significance threshold is set to $p_{(k^\\star)}$. The final result is the count of all original (unsorted) $p$-values, $p_i$, that are less than or equal to this threshold. If no such $k^\\star$ exists, no hypotheses are rejected, and the count is zero.\n\nThis structured, principle-based approach ensures a correct and robust implementation of the specified biological data analysis problem.", "answer": "```python\nimport numpy as np\nfrom scipy import stats\n\ndef compute_crossing_sum(C, i, w, N):\n    \"\"\"Computes the crossing-sum S_i(C; w).\"\"\"\n    a_start = max(0, i - w + 1)\n    a_end = i + 1\n    b_start = i + 1\n    b_end = min(N, i + w + 1)\n    \n    # Return 0 if the summation window is empty\n    if a_start = a_end or b_start = b_end:\n        return 0.0\n    \n    return np.sum(C[a_start:a_end, b_start:b_end])\n\ndef compute_log_crossing(C, i, w, epsilon, N, memo_X):\n    \"\"\"Computes the stabilized log-crossing X_i, with memoization.\"\"\"\n    # Use tuple (matrix id, index) as key for memoization\n    memo_key = (id(C), i)\n    if memo_key in memo_X:\n        return memo_X[memo_key]\n    \n    s_i = compute_crossing_sum(C, i, w, N)\n    x_i = np.log(s_i + epsilon)\n    memo_X[memo_key] = x_i\n    return x_i\n\ndef compute_boundary_strength(C, i, w, d, epsilon, N, memo_X):\n    \"\"\"Computes the boundary strength B_i.\"\"\"\n    x_i_center = compute_log_crossing(C, i, w, epsilon, N, memo_X)\n    \n    left_flank_sum = 0.0\n    for k in range(1, d + 1):\n        left_flank_sum += compute_log_crossing(C, i - k, w, epsilon, N, memo_X)\n    \n    right_flank_sum = 0.0\n    for k in range(1, d + 1):\n        right_flank_sum += compute_log_crossing(C, i + k, w, epsilon, N, memo_X)\n        \n    avg_flank_log_crossing = (left_flank_sum / d + right_flank_sum / d) / 2.0\n    \n    b_i = avg_flank_log_crossing - x_i_center\n    return b_i\n\ndef process_case(case_data):\n    \"\"\"\n    Processes a single test case from data generation to final count of significant results.\n    \"\"\"\n    N, R, I_candidate, w, d, epsilon, alpha, matrices_pre, matrices_post = case_data\n\n    # Step 1: Filter for eligible indices based on problem constraints\n    eligible_indices = []\n    for i in I_candidate:\n        if (i - d = w - 1) and (i + d = N - 1 - w):\n            eligible_indices.append(i)\n    \n    if not eligible_indices:\n        return 0\n\n    p_values_map = {}\n    \n    # Step 2: For each eligible index, perform the paired t-test\n    memo_X = {} # Memoization for log-crossing values, reset for each case\n    for i in eligible_indices:\n        D_i_r = []\n        for r in range(R):\n            C_pre = matrices_pre[r]\n            C_post = matrices_post[r]\n            \n            B_pre = compute_boundary_strength(C_pre, i, w, d, epsilon, N, memo_X)\n            B_post = compute_boundary_strength(C_post, i, w, d, epsilon, N, memo_X)\n            \n            D_i_r.append(B_post - B_pre)\n        \n        D_i_r_array = np.array(D_i_r)\n        mean_D = np.mean(D_i_r_array)\n        std_D = np.std(D_i_r_array, ddof=1) if R  1 else 0.0\n        \n        p_i = 0.0\n        if std_D == 0:\n            if mean_D  0:\n                p_i = 0.0\n            elif mean_D == 0:\n                p_i = 0.5\n            else: # mean_D  0\n                p_i = 1.0\n        else:\n            t_stat = mean_D / (std_D / np.sqrt(R))\n            p_i = stats.t.cdf(t_stat, df=R - 1)\n        \n        p_values_map[i] = p_i\n\n    # Step 3: Apply Benjamini-Hochberg correction\n    m = len(eligible_indices)\n    original_p_values = list(p_values_map.values())\n    sorted_p_values = sorted(original_p_values)\n    \n    k_star_val = 0\n    p_thresh = -1.0\n    \n    for k in range(m, 0, -1):\n        if sorted_p_values[k-1] = (k / m) * alpha:\n            k_star_val = k\n            p_thresh = sorted_p_values[k-1]\n            break\n            \n    if k_star_val == 0:\n        return 0\n    else:\n        significant_count = sum(1 for p in original_p_values if p = p_thresh)\n        return significant_count\n\ndef solve():\n    \"\"\"\n    Main function to define test cases, run the analysis, and print results.\n    \"\"\"\n    test_cases_data = []\n\n    # Test Case 1 Definition\n    N1, R1, I1, w1, d1, eps1, alpha1 = 8, 4, [3, 1, 6], 2, 1, 1e-6, 0.1\n    mats_pre1, mats_post1 = [], []\n    baseline1 = np.full((N1, N1), 10.0)\n    np.fill_diagonal(baseline1, 0)\n    pre_mod_vals1 = [2.0, 3.0, 2.5, 3.5]\n    post_mod_vals1 = [20.0, 19.0, 18.0, 21.0]\n    mod_cells1 = [(2, 4), (2, 5), (3, 4), (3, 5)]\n    for r in range(R1):\n        C_pre = baseline1.copy()\n        C_post = baseline1.copy()\n        for i_mod, j_mod in mod_cells1:\n            C_pre[i_mod, j_mod] = C_pre[j_mod, i_mod] = pre_mod_vals1[r]\n            C_post[i_mod, j_mod] = C_post[j_mod, i_mod] = post_mod_vals1[r]\n        mats_pre1.append(C_pre)\n        mats_post1.append(C_post)\n    test_cases_data.append((N1, R1, I1, w1, d1, eps1, alpha1, mats_pre1, mats_post1))\n    \n    # Test Case 2 Definition\n    N2, R2, I2, w2, d2, eps2, alpha2 = 7, 3, [1, 5, 3], 2, 2, 1e-6, 0.2\n    mat2 = np.full((N2, N2), 10.0)\n    np.fill_diagonal(mat2, 0)\n    mats_pre2 = [mat2.copy() for _ in range(R2)]\n    mats_post2 = [mat2.copy() for _ in range(R2)]\n    test_cases_data.append((N2, R2, I2, w2, d2, eps2, alpha2, mats_pre2, mats_post2))\n\n    # Test Case 3 Definition\n    N3, R3, I3, w3, d3, eps3, alpha3 = 6, 4, [2, 3], 1, 1, 1e-6, 0.05\n    baseline3 = np.full((N3, N3), 5.0)\n    np.fill_diagonal(baseline3, 0)\n    C_post3 = baseline3.copy()\n    C_post3[3, 4] = C_post3[4, 3] = 1.0\n    mats_pre3 = [baseline3.copy() for _ in range(R3)]\n    mats_post3 = [C_post3.copy() for _ in range(R3)]\n    test_cases_data.append((N3, R3, I3, w3, d3, eps3, alpha3, mats_pre3, mats_post3))\n    \n    results = [process_case(case) for case in test_cases_data]\n\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2964851"}]}