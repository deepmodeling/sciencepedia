{"hands_on_practices": [{"introduction": "Before exploring the regulation and function of mRNA modifications, it is essential to understand their fundamental bioenergetic cost. This exercise challenges you to perform a quantitative accounting of the high-energy phosphate bonds consumed during 5' capping and 3' polyadenylation. By applying basic principles of biochemical thermodynamics, you will build a model that connects poly(A) tail length directly to the energy required, providing a foundational perspective on the cellular economy of gene expression.", "problem": "A eukaryotic messenger ribonucleic acid (mRNA) undergoes two co- or post-transcriptional processing steps that are thermodynamically driven by nucleoside triphosphate hydrolysis and methyl transfer: 5′ capping and 3′ polyadenylation. In 5′ capping, one guanosine triphosphate (GTP) is used to form a 5′–5′ triphosphate linkage to the nascent RNA, followed by methyl transfer that uses one molecule of S-adenosylmethionine (SAM). In 3′ polyadenylation, a polyadenosine tail of length $L$ is added by poly(A) polymerase, consuming one adenosine triphosphate (ATP) per adenosine incorporated. Assume the following widely accepted biochemical facts for energetic accounting:\n\n- Each nucleotidyl transfer that incorporates one nucleotide from a nucleoside triphosphate into RNA proceeds by cleavage of the $\\alpha$–$\\beta$ phosphoanhydride bond of the triphosphate, releasing inorganic pyrophosphate (PPi), and is thermodynamically driven forward in vivo by hydrolysis of PPi to two orthophosphates. Count both bond cleavages.\n- The 5′ capping guanylyltransfer reaction likewise proceeds via cleavage of one GTP to guanosine monophosphate (GMP) plus PPi, and the subsequent hydrolysis of PPi to orthophosphate. Count both bond cleavages.\n- Regeneration of one molecule of SAM for methyl transfer during capping consumes one ATP in a manner that, when coupled to PPi hydrolysis, results in the cleavage of two phosphoanhydride bonds in total. Count both bond cleavages.\n- For energetic bookkeeping, let the standard free energy released per phosphoanhydride bond cleavage be $\\Delta g$ (in $\\text{kJ}\\cdot\\text{mol}^{-1}$), and take $\\Delta g$ to be identical for ATP and GTP bond cleavages.\n\nStarting only from these principles and definitions, and assuming one GTP and one SAM regeneration are required per cap while polyadenylation adds exactly $L$ adenosines (one per ATP), do the following:\n\n1) Determine, as functions of $L$, the number of ATP molecules and the number of GTP molecules consumed to complete 5′ capping and 3′ polyadenylation of a single mRNA.\n\n2) Using the energetic accounting rules above, derive a closed-form expression $E(L)$ for the total standard free energy cost (in $\\text{kJ}\\cdot\\text{mol}^{-1}$) of these processing steps, expressed as a function of $L$ and the parameter $\\Delta g$.\n\nProvide your final result as the single analytic expression $E(L)$, expressed in terms of $L$ and $\\Delta g$. Do not include units in your boxed final answer.", "solution": "The total standard free energy cost, $E(L)$, is the sum of the energy cost for $5'$ capping, $E_{cap}$, and the energy cost for $3'$ polyadenylation, $E_{poly(A)}$.\n$$\nE(L) = E_{cap} + E_{poly(A)}\n$$\nWe will now derive expressions for each component based on the number of high-energy phosphoanhydride bonds cleaved.\n\nFirst, consider the $5'$ capping process. This process has two energetic costs: the guanylylation reaction and the regeneration of $SAM$ for methylation.\n\n1.  **Guanylylation:** The problem states that one molecule of $GTP$ is used, which is cleaved to $GMP$ and $PP_i$. This is the cleavage of the $\\alpha$–$\\beta$ phosphoanhydride bond of $GTP$, which accounts for one high-energy bond. The released pyrophosphate, $PP_i$, is then hydrolyzed to two inorganic phosphates, which involves the cleavage of a second high-energy bond.\n    $$\n    GTP \\rightarrow GMP + PP_i \\quad (\\text{1 bond cleavage})\n    $$\n    $$\n    PP_i + H_2O \\rightarrow 2 P_i \\quad (\\text{1 bond cleavage})\n    $$\n    Thus, the guanylylation step results in the cleavage of $2$ phosphoanhydride bonds, sourced from one $GTP$ molecule.\n\n2.  **Methylation via SAM Regeneration:** The problem states that the regeneration of one molecule of $SAM$ consumes one molecule of $ATP$ and results in the cleavage of two phosphoanhydride bonds. This corresponds to the biological pathway where $ATP$ is hydrolyzed to $AMP$ and $PP_i$, followed by the hydrolysis of the released $PP_i$.\n    $$\n    ATP \\rightarrow AMP + PP_i \\quad (\\text{1 bond cleavage})\n    $$\n    $$\n    PP_i + H_2O \\rightarrow 2 P_i \\quad (\\text{1 bond cleavage})\n    $$\n    This step results in the cleavage of $2$ phosphoanhydride bonds, sourced from one $ATP$ molecule.\n\nThe total number of bonds cleaved during $5'$ capping is the sum from these two steps:\n$$\nN_{cap} = 2 (\\text{from GTP}) + 2 (\\text{from ATP}) = 4 \\text{ bonds}\n$$\nThe energy cost for capping is therefore:\n$$\nE_{cap} = 4 \\Delta g\n$$\n\nNext, we consider the $3'$ polyadenylation process. This involves the addition of a poly(A) tail of length $L$.\n\n1.  **Adenosine Incorporation:** For each of the $L$ adenosine residues added to the tail, one molecule of $ATP$ is consumed. The rule for nucleotidyl transfer applies: the $ATP$ is cleaved to $AMP$ and $PP_i$, and the resulting $PP_i$ is hydrolyzed.\n    For each adenosine added, the reactions are:\n    $$\n    ATP \\rightarrow AMP + PP_i \\quad (\\text{1 bond cleavage})\n    $$\n    $$\n    PP_i + H_2O \\rightarrow 2 P_i \\quad (\\text{1 bond cleavage})\n    $$\n    This means that the incorporation of a single adenosine residue costs $2$ phosphoanhydride bond cleavages.\n\n2.  **Total for Polyadenylation:** Since $L$ adenosine residues are added, the total number of bonds cleaved during polyadenylation is:\n    $$\n    N_{poly(A)} = L \\times 2 = 2L \\text{ bonds}\n    $$\nThe energy cost for polyadenylation is therefore:\n$$\nE_{poly(A)} = (2L) \\Delta g\n$$\n\nFinally, the total standard free energy cost $E(L)$ is the sum of the costs for capping and polyadenylation.\n$$\nE(L) = E_{cap} + E_{poly(A)} = 4 \\Delta g + 2L \\Delta g\n$$\nFactoring out the common term $\\Delta g$ gives the final expression for the total energy cost as a function of $L$.\n$$\nE(L) = (2L + 4) \\Delta g\n$$\n\nFor completeness, we also address the first sub-task. The number of $ATP$ molecules consumed is $1$ (for SAM regeneration) plus $L$ (for polyadenylation), totaling $L+1$. The number of $GTP$ molecules consumed is $1$ (for guanylylation). However, the final answer required is the expression for $E(L)$.", "answer": "$$\n\\boxed{(2L + 4)\\Delta g}\n$$", "id": "2835502"}, {"introduction": "The efficiency of mRNA processing is not uniform; it is tightly regulated by specific sequences within the transcript that are recognized by protein factors. In this problem, you will explore the quantitative impact of a single-nucleotide mutation in the canonical polyadenylation signal (PAS). By translating a given change in binding free energy into changes in binding affinity and site occupancy, you will directly calculate the resulting reduction in processing efficiency, bridging the gap between molecular biophysics and gene regulation.", "problem": "A canonical eukaryotic polyadenylation signal (PAS) hexamer is the sequence AAUAAA. The Cleavage and Polyadenylation Specificity Factor (CPSF) binds this PAS to specify the endonucleolytic cleavage site and recruit poly(A) polymerase. Consider an in vitro cleavage reaction in which the only sequence change is a mutation of the PAS hexamer from AAUAAA to AUUAAA. Empirical biophysical measurements attribute the A-to-U substitution at position two of the hexamer with an increase in CPSF binding free energy of $\\Delta \\Delta G = +0.7 \\ \\mathrm{kcal \\ mol^{-1}}$ due to the loss of a key hydrogen bond, plus an additional positional misalignment penalty of $\\Delta \\Delta G_{\\mathrm{struct}} = +0.4 \\ \\mathrm{kcal \\ mol^{-1}}$, for a total binding penalty of $\\Delta \\Delta G_{\\mathrm{total}} = \\Delta \\Delta G + \\Delta \\Delta G_{\\mathrm{struct}}$. Assume temperature $T = 310 \\ \\mathrm{K}$. Take the molar gas constant as $R = 1.987 \\ \\mathrm{cal \\ mol^{-1} \\ K^{-1}}$. For the wild-type AAUAAA PAS, the dissociation constant for CPSF is $K_{d,\\mathrm{wt}} = 5 \\ \\mathrm{nM}$. The free CPSF concentration in the reaction is $[C] = 20 \\ \\mathrm{nM}$. Assume that cleavage efficiency is proportional to the steady-state fraction of PAS sites occupied by CPSF, and that no other factors (for example, Cleavage Stimulation Factor (CstF) or CFIm) change between wild-type and mutant.\n\nUsing only fundamental thermodynamic relationships between binding free energy and equilibrium constants and the law of mass action for a one-site binding equilibrium, determine the fold reduction in cleavage efficiency upon mutating AAUAAA to AUUAAA, defined as the ratio of mutant to wild-type cleavage efficiency. Express your final answer as a unitless decimal and round to three significant figures.", "solution": "The problem requires us to determine the fold reduction in cleavage efficiency upon mutation of the polyadenylation signal (PAS) from `AAUAAA` (wild-type, wt) to `AUUAAA` (mutant, mut). The core assumption is that cleavage efficiency, denoted $\\eta$, is directly proportional to the steady-state fraction of PAS sites occupied by the Cleavage and Polyadenylation Specificity Factor (CPSF). This fraction of occupied sites is denoted by $\\theta$. Thus, we have the relationship $\\eta \\propto \\theta$. The desired quantity is the ratio of the mutant efficiency to the wild-type efficiency:\n$$\n\\frac{\\eta_{\\mathrm{mut}}}{\\eta_{\\mathrm{wt}}} = \\frac{\\theta_{\\mathrm{mut}}}{\\theta_{\\mathrm{wt}}}\n$$\nThe binding of CPSF to the PAS is a reversible one-site binding equilibrium: $\\mathrm{C} + \\mathrm{P} \\rightleftharpoons \\mathrm{CP}$, where $\\mathrm{C}$ represents CPSF and $\\mathrm{P}$ represents the PAS site. The dissociation constant, $K_d$, for this reaction is given by:\n$$\nK_d = \\frac{[\\mathrm{C}]_{\\mathrm{free}}[\\mathrm{P}]_{\\mathrm{free}}}{[\\mathrm{CP}]}\n$$\nThe fraction of occupied sites, $\\theta$, is defined as the ratio of the concentration of bound PAS sites to the total concentration of PAS sites:\n$$\n\\theta = \\frac{[\\mathrm{CP}]}{[\\mathrm{P}]_{\\mathrm{total}}} = \\frac{[\\mathrm{CP}]}{[\\mathrm{P}]_{\\mathrm{free}} + [\\mathrm{CP}]}\n$$\nBy rearranging the $K_d$ expression to $[\\mathrm{P}]_{\\mathrm{free}} = K_d \\frac{[\\mathrm{CP}]}{[\\mathrm{C}]_{\\mathrm{free}}}$ and substituting into the expression for $\\theta$, we obtain:\n$$\n\\theta = \\frac{[\\mathrm{CP}]}{K_d \\frac{[\\mathrm{CP}]}{[\\mathrm{C}]_{\\mathrm{free}}} + [\\mathrm{CP}]} = \\frac{1}{\\frac{K_d}{[\\mathrm{C}]_{\\mathrm{free}}} + 1} = \\frac{[\\mathrm{C}]_{\\mathrm{free}}}{[\\mathrm{C}]_{\\mathrm{free}} + K_d}\n$$\nThe problem provides the free CPSF concentration, $[C] = 20 \\ \\mathrm{nM}$, which corresponds to $[\\mathrm{C}]_{\\mathrm{free}}$. Therefore, we can express the fractions of occupied sites for the wild-type and mutant sequences as:\n$$\n\\theta_{\\mathrm{wt}} = \\frac{[C]}{[C] + K_{d,\\mathrm{wt}}}\n$$\n$$\n\\theta_{\\mathrm{mut}} = \\frac{[C]}{[C] + K_{d,\\mathrm{mut}}}\n$$\nThe ratio of efficiencies is then:\n$$\n\\frac{\\theta_{\\mathrm{mut}}}{\\theta_{\\mathrm{wt}}} = \\frac{\\frac{[C]}{[C] + K_{d,\\mathrm{mut}}}}{\\frac{[C]}{[C] + K_{d,\\mathrm{wt}}}} = \\frac{[C] + K_{d,\\mathrm{wt}}}{[C] + K_{d,\\mathrm{mut}}}\n$$\nTo calculate this ratio, we must first determine $K_{d,\\mathrm{mut}}$. We are given the change in Gibbs free energy of binding, $\\Delta \\Delta G_{\\mathrm{total}}$, upon mutation. The relationship between the standard Gibbs free energy of binding, $\\Delta G^\\circ$, and the dissociation constant, $K_d$, is:\n$$\n\\Delta G^\\circ = -RT \\ln(K_a) = RT \\ln(K_d)\n$$\nwhere $K_a$ is the association constant, $R$ is the molar gas constant, and $T$ is the absolute temperature. The change in free energy is $\\Delta \\Delta G_{\\mathrm{total}} = \\Delta G_{\\mathrm{mut}}^\\circ - \\Delta G_{\\mathrm{wt}}^\\circ$. Substituting the thermodynamic relationship:\n$$\n\\Delta \\Delta G_{\\mathrm{total}} = RT \\ln(K_{d,\\mathrm{mut}}) - RT \\ln(K_{d,\\mathrm{wt}}) = RT \\ln\\left(\\frac{K_{d,\\mathrm{mut}}}{K_{d,\\mathrm{wt}}}\\right)\n$$\nSolving for $K_{d,\\mathrm{mut}}$ yields:\n$$\nK_{d,\\mathrm{mut}} = K_{d,\\mathrm{wt}} \\exp\\left(\\frac{\\Delta \\Delta G_{\\mathrm{total}}}{RT}\\right)\n$$\nNow, we substitute the given numerical values. First, we compute the total change in free energy:\n$$\n\\Delta \\Delta G_{\\mathrm{total}} = \\Delta \\Delta G + \\Delta \\Delta G_{\\mathrm{struct}} = 0.7 \\ \\mathrm{kcal \\ mol^{-1}} + 0.4 \\ \\mathrm{kcal \\ mol^{-1}} = 1.1 \\ \\mathrm{kcal \\ mol^{-1}}\n$$\nWe must ensure consistent units. We convert $\\Delta \\Delta G_{\\mathrm{total}}$ to $\\mathrm{cal \\ mol^{-1}}$ to match the units of $R$:\n$$\n\\Delta \\Delta G_{\\mathrm{total}} = 1.1 \\ \\mathrm{kcal \\ mol^{-1}} \\times \\frac{1000 \\ \\mathrm{cal}}{1 \\ \\mathrm{kcal}} = 1100 \\ \\mathrm{cal \\ mol^{-1}}\n$$\nNext, we calculate the product $RT$:\n$$\nRT = (1.987 \\ \\mathrm{cal \\ mol^{-1} \\ K^{-1}}) \\times (310 \\ \\mathrm{K}) = 615.97 \\ \\mathrm{cal \\ mol^{-1}}\n$$\nNow we can compute the exponent in the expression for $K_{d,\\mathrm{mut}}$:\n$$\n\\frac{\\Delta \\Delta G_{\\mathrm{total}}}{RT} = \\frac{1100 \\ \\mathrm{cal \\ mol^{-1}}}{615.97 \\ \\mathrm{cal \\ mol^{-1}}} \\approx 1.7858\n$$\nUsing this value, we find $K_{d,\\mathrm{mut}}$:\n$$\nK_{d,\\mathrm{mut}} = (5 \\ \\mathrm{nM}) \\times \\exp(1.7858) \\approx (5 \\ \\mathrm{nM}) \\times 5.9642 = 29.821 \\ \\mathrm{nM}\n$$\nFinally, we calculate the ratio of efficiencies using the known values for $[C] = 20 \\ \\mathrm{nM}$, $K_{d,\\mathrm{wt}} = 5 \\ \\mathrm{nM}$, and our calculated $K_{d,\\mathrm{mut}}$:\n$$\n\\frac{\\eta_{\\mathrm{mut}}}{\\eta_{\\mathrm{wt}}} = \\frac{[C] + K_{d,\\mathrm{wt}}}{[C] + K_{d,\\mathrm{mut}}} = \\frac{20 \\ \\mathrm{nM} + 5 \\ \\mathrm{nM}}{20 \\ \\mathrm{nM} + 29.821 \\ \\mathrm{nM}} = \\frac{25}{49.821} \\approx 0.501896\n$$\nThe problem requires the answer rounded to three significant figures.\n$$\n\\frac{\\eta_{\\mathrm{mut}}}{\\eta_{\\mathrm{wt}}} \\approx 0.502\n$$\nThis result indicates that the single point mutation reduces the cleavage efficiency to approximately $50.2\\%$ of the wild-type level under these conditions.", "answer": "$$\n\\boxed{0.502}\n$$", "id": "2964057"}, {"introduction": "The ultimate purpose of the 5' cap and 3' poly(A) tail is to ensure the efficient translation of mRNA into protein, a synergy often explained by the 'closed-loop' model. This advanced computational exercise puts you in the role of a data scientist tasked with testing this hypothesis using simulated experimental data. You will derive a biophysically-motivated mathematical model, fit it to data, and use statistical criteria to determine whether the relationship between poly(A) tail length and ribosome density supports this fundamental model of translational control.", "problem": "You are given paired measurements that mimic tail-length sequencing (tail-seq) and ribosome profiling across multiple biological conditions. Each condition provides an array of poly(A) tail lengths and a matched array of ribosome footprint densities measured on the same set of messenger ribonucleic acid (mRNA) transcripts. Your task is to infer, from first principles, the functional relationship between poly(A) tail length and ribosome density, and to validate whether the observed relationship in each condition is consistent with the closed-loop hypothesis of cap–poly(A) synergy.\n\nBackground foundational base for derivation:\n- The Central Dogma of Molecular Biology states that deoxyribonucleic acid (DNA) is transcribed into ribonucleic acid (RNA), which is translated into protein. In eukaryotes, messenger ribonucleic acid (mRNA) carries a $5^{\\prime}$ cap and a $3^{\\prime}$ poly(A) tail. \n- In initiation-limited translation at steady state, the average ribosome density on an mRNA is proportional to the initiation rate, provided that the elongation rate is not the dominant rate-limiting step and does not vary systematically with poly(A) tail length. Denote ribosome density by $R$ and mean initiation rate by $k_{\\mathrm{init}}$, then $R \\propto k_{\\mathrm{init}}$.\n- Poly(A)-Binding Protein (PABP) binds along the poly(A) tail with finite affinity and footprint size, and its interaction with cap-associated factors can facilitate mRNA circularization (closed-loop). Under mass-action binding with a finite number of effective sites increasing with tail length $L$, the occupancy of PABP—and thus the probability of forming a productive closed-loop complex—rises with $L$ and saturates as binding sites are filled.\n\nProblem objectives:\n1. Using only the principles above, posit a minimal, three-parameter, non-decreasing and concave function $f(L;\\theta)$ mapping poly(A) tail length $L$ (in nucleotides) to expected ribosome density $R$ (normalized, dimensionless) under initiation-limited conditions and finite-affinity binding that saturates with $L$. Justify the monotonicity and concavity from the binding-occupancy argument.\n2. Implement a parameter estimation procedure for $f(L;\\theta)$ using least squares, and, in parallel, fit a linear null model that does not encode saturation. For model selection, compute the Akaike Information Criterion (AIC) for each fit, using \n$$\n\\mathrm{AIC} \\;=\\; 2k \\;+\\; n \\ln\\!\\left(\\frac{\\mathrm{RSS}}{n}\\right),\n$$\nwhere $k$ is the number of free parameters, $n$ is the number of observations, and $\\mathrm{RSS}$ is the residual sum of squares.\n3. Independently quantify monotonic association between $L$ and $R$ by computing the Spearman rank correlation coefficient $\\rho_{s}$, defined as the Pearson correlation of the ranks of $L$ and $R$.\n4. Decision rule per condition: declare that the data support the closed-loop hypothesis if and only if both conditions hold:\n   - Monotonicity: $\\rho_{s} \\ge 0.6$ (dimensionless).\n   - Saturation evidence: $\\Delta \\mathrm{AIC} \\equiv \\mathrm{AIC}_{\\mathrm{linear}} - \\mathrm{AIC}_{\\mathrm{concave}} \\ge 4$ (dimensionless), where $\\mathrm{AIC}_{\\mathrm{concave}}$ is the AIC of your derived non-decreasing concave model $f(L;\\theta)$.\n   You may additionally verify concavity of the fitted $f$ by confirming that its discrete second differences over sorted $L$ are non-positive for most interior points; however, the decision is governed by the two criteria above.\n\nTest suite (five conditions spanning a happy path, absence of association, inverse association, near-linear regime where saturation is not identifiable, and a noisy saturating case). For each condition $i$, you are given tail lengths $L^{(i)}$ (in nucleotides) and ribosome densities $R^{(i)}$ (normalized, dimensionless):\n\n- Condition 1 (positive saturating):\n  - $L^{(1)} = \\left(15,\\,30,\\,45,\\,60,\\,90,\\,140,\\,200\\right)$\n  - $R^{(1)} = \\left(1.05,\\,1.52,\\,1.8257,\\,1.97,\\,2.31,\\,2.6,\\,2.7877\\right)$\n- Condition 2 (no clear relationship):\n  - $L^{(2)} = \\left(20,\\,40,\\,60,\\,80,\\,100,\\,120,\\,140\\right)$\n  - $R^{(2)} = \\left(1.75,\\,1.82,\\,1.77,\\,1.84,\\,1.80,\\,1.79,\\,1.83\\right)$\n- Condition 3 (negative relationship):\n  - $L^{(3)} = \\left(15,\\,30,\\,45,\\,60,\\,90,\\,140,\\,200\\right)$\n  - $R^{(3)} = \\left(3.13,\\,2.99,\\,2.94,\\,2.82,\\,2.66,\\,2.38,\\,1.99\\right)$\n- Condition 4 (positive but near-linear regime, saturation not identifiable):\n  - $L^{(4)} = \\left(10,\\,15,\\,20,\\,25,\\,30,\\,40,\\,55,\\,60\\right)$\n  - $R^{(4)} = \\left(1.1,\\,1.23,\\,1.28,\\,1.41,\\,1.49,\\,1.72,\\,1.97,\\,2.1\\right)$\n- Condition 5 (positive saturating with modest outliers):\n  - $L^{(5)} = \\left(20,\\,35,\\,50,\\,75,\\,110,\\,160,\\,220\\right)$\n  - $R^{(5)} = \\left(1.2756,\\,1.5233,\\,1.8117,\\,1.933,\\,2.2678,\\,2.3893,\\,2.6265\\right)$\n\nAlgorithmic constraints:\n- You must implement your own fitting and selection logic. You may use standard linear least squares for linear models. For the concave model $f(L;\\theta)$, you must ensure parameters respect biological plausibility (non-decreasing, saturating with $L$).\n- All computations are dimensionless except that $L$ is in nucleotides; no unit conversion is required since the outputs are booleans.\n- Angles are not involved.\n\nRequired program output:\n- For the five conditions above, produce a single line of output containing a list of five boolean values indicating, in order, whether the data support the closed-loop hypothesis under the decision rule above. The list must be printed as a comma-separated list enclosed in square brackets, for example, $\\left[\\text{True},\\text{False},\\ldots\\right]$ with exactly five entries and no additional text.", "solution": "The objective is to discern a specific functional relationship—saturating positive monotonicity—between poly(A) tail length ($L$) and ribosome density ($R$) from provided data, and to use this finding to test the \"closed-loop hypothesis\" of mRNA translation. We will construct the analysis in four stages: derivation of a candidate model function, implementation of parameter estimation for this model and a null model, quantification of monotonic association, and application of a specified decision rule.\n\n**1. Derivation of a Saturating Function for Ribosome Density**\n\nThe problem requires a minimal, three-parameter, non-decreasing, and concave function $f(L;\\theta)$ to model the dependence of ribosome density $R$ on poly(A) tail length $L$. The foundational principles are:\n- Ribosome density $R$ is proportional to the translation initiation rate, $R \\propto k_{\\mathrm{init}}$.\n- The initiation rate has a basal, tail-independent component and an enhanced component mediated by Poly(A)-Binding Protein (PABP) binding to the poly(A) tail.\n- The PABP-mediated enhancement saturates with increasing tail length $L$, consistent with a finite number of binding sites or a saturable interaction mechanism.\n\nLet us formalize this. The total initiation rate $k_{\\mathrm{init}}$ can be modeled as the sum of a basal rate, $k_{\\mathrm{basal}}$, and a tail-dependent enhancement, $\\Delta k(L)$:\n$$ k_{\\mathrm{init}}(L) = k_{\\mathrm{basal}} + \\Delta k(L) $$\nSince $R \\propto k_{\\mathrm{init}}$, we can write the ribosome density as:\n$$ R(L) = R_0 + \\Delta R(L) $$\nwhere $R_0$ is the basal ribosome density (corresponding to $k_{\\mathrm{basal}}$) and $\\Delta R(L)$ is the enhancement term.\n\nThe enhancement is contingent on the formation of a \"closed-loop\" complex, the probability of which depends on PABP occupancy on the tail. A standard and minimal model for such a saturating binding process is the Langmuir isotherm or, analogously, the Michaelis-Menten functional form. In this framework, the enhancement $\\Delta R(L)$ is proportional to the fractional occupancy of some critical binding state, which itself saturates with the concentration of a \"ligand\". Here, the tail itself, via its length $L$, acts as the scaffold for binding, so we model the response as a function of $L$.\nThe enhancement term $\\Delta R(L)$ will therefore follow a saturation curve:\n$$ \\Delta R(L) = \\frac{\\Delta R_{\\max} \\cdot L}{K_L + L} $$\nHere, $\\Delta R_{\\max}$ is the maximum possible increase in ribosome density achieved at saturating tail lengths ($L \\to \\infty$), and $K_L$ is the poly(A) tail length at which the enhancement reaches half of its maximum ($50\\%$). $K_L$ effectively serves as a dissociation constant, with a lower $K_L$ implying a higher-affinity interaction leading to saturation at shorter tail lengths.\n\nCombining the basal and enhanced components, we arrive at our three-parameter model function, $f(L;\\theta)$:\n$$ f(L; R_0, \\Delta R_{\\max}, K_L) = R_0 + \\frac{\\Delta R_{\\max} \\cdot L}{K_L + L} $$\nThe parameter vector is $\\theta = (R_0, \\Delta R_{\\max}, K_L)$.\n- $R_0$: The basal ribosome density for an mRNA with no poly(A) tail ($L=0$). Biologically, $R_0 \\geq 0$.\n- $\\Delta R_{\\max}$: The maximal additional ribosome density conferred by the poly(A) tail. Biologically, to be non-decreasing, $\\Delta R_{\\max} \\geq 0$.\n- $K_L$: The half-saturation length constant. Biologically, $K_L > 0$.\n\nThis function is non-decreasing, as its first derivative with respect to $L$,\n$$ \\frac{\\partial f}{\\partial L} = \\frac{\\Delta R_{\\max} \\cdot K_L}{(K_L + L)^2} $$\nis non-negative for $\\Delta R_{\\max} \\ge 0$ and $K_L > 0$. It is also concave, as its second derivative,\n$$ \\frac{\\partial^2 f}{\\partial L^2} = -2 \\frac{\\Delta R_{\\max} \\cdot K_L}{(K_L + L)^3} $$\nis non-positive under the same conditions. This functional form is therefore a valid candidate.\n\n**2. Parameter Estimation and Model Selection**\n\nWe must fit two models to the data $(L_i, R_i)$ for each condition: the derived concave model and a linear null model.\n\n- **Linear Null Model**: $R(L) = mL + d$. This model assumes no saturation. It has $k=2$ parameters: the slope $m$ and intercept $d$. These are found by minimizing the residual sum of squares, $\\mathrm{RSS}_{\\mathrm{linear}} = \\sum_i (R_i - (mL_i + d))^2$, using standard linear least squares regression.\n\n- **Concave Model**: $R(L) = R_0 + \\frac{\\Delta R_{\\max} \\cdot L}{K_L + L}$. This is a non-linear model with $k=3$ parameters $\\theta = (R_0, \\Delta R_{\\max}, K_L)$. The parameters are estimated by minimizing $\\mathrm{RSS}_{\\mathrm{concave}} = \\sum_i (R_i - f(L_i; \\theta))^2$ using an iterative non-linear least squares algorithm, such as Levenberg-Marquardt. We enforce the constraints $R_0 \\ge 0$, $\\Delta R_{\\max} \\ge 0$, and $K_L > 0$ to maintain biological plausibility.\n\n- **Model Selection**: To compare the goodness-of-fit while penalizing for model complexity, we use the Akaike Information Criterion (AIC), given as:\n$$ \\mathrm{AIC} = 2k + n \\ln\\left(\\frac{\\mathrm{RSS}}{n}\\right) $$\nwhere $n$ is the number of data points. We compute $\\mathrm{AIC}_{\\mathrm{linear}}$ ($k=2$) and $\\mathrm{AIC}_{\\mathrm{concave}}$ ($k=3$). The evidence for saturation is quantified by $\\Delta \\mathrm{AIC} = \\mathrm{AIC}_{\\mathrm{linear}} - \\mathrm{AIC}_{\\mathrm{concave}}$. A value of $\\Delta \\mathrm{AIC} \\geq 4$ is considered substantial evidence in favor of the more complex concave model over the linear one.\n\n**3. Monotonicity Analysis**\n\nTo independently assess the strength of the monotonic relationship between $L$ and $R$, we compute the Spearman rank correlation coefficient, $\\rho_s$. This non-parametric statistic measures the correlation between the ranks of the two variables, making it robust to outliers and the specific functional form of the relationship, so long as it is monotonic. A value of $\\rho_s \\ge 0.6$ is required, indicating a sufficiently strong positive monotonic association.\n\n**4. Decision Procedure and Implementation**\n\nFor each of the five experimental conditions, we execute the following computational procedure:\n1.  Given the data $(L^{(j)}, R^{(j)})$, compute the Spearman correlation $\\rho_s^{(j)}$.\n2.  Perform a linear least-squares fit to obtain $\\mathrm{RSS}_{\\mathrm{linear}}^{(j)}$ and calculate $\\mathrm{AIC}_{\\mathrm{linear}}^{(j)}$.\n3.  Perform a non-linear least-squares fit of the concave model to obtain $\\mathrm{RSS}_{\\mathrm{concave}}^{(j)}$ and calculate $\\mathrm{AIC}_{\\mathrm{concave}}^{(j)}$.\n4.  Calculate the difference $\\Delta \\mathrm{AIC}^{(j)} = \\mathrm{AIC}_{\\mathrm{linear}}^{(j)} - \\mathrm{AIC}_{\\mathrm{concave}}^{(j)}$.\n5.  Apply the decision rule: the closed-loop hypothesis is supported if and only if both $\\rho_s^{(j)} \\ge 0.6$ and $\\Delta \\mathrm{AIC}^{(j)} \\ge 4$.\n6.  The final output will be a list of five boolean values, corresponding to the outcome of this rule for each condition.\n\n```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import curve_fit\nfrom scipy.stats import spearmanr\n\ndef solve():\n    \"\"\"\n    Solves the problem by analyzing five experimental conditions to test the\n    closed-loop hypothesis of mRNA translation.\n    \"\"\"\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Condition 1: positive saturating\n        {'L': np.array([15, 30, 45, 60, 90, 140, 200]),\n         'R': np.array([1.05, 1.52, 1.8257, 1.97, 2.31, 2.6, 2.7877])},\n        # Condition 2: no clear relationship\n        {'L': np.array([20, 40, 60, 80, 100, 120, 140]),\n         'R': np.array([1.75, 1.82, 1.77, 1.84, 1.80, 1.79, 1.83])},\n        # Condition 3: negative relationship\n        {'L': np.array([15, 30, 45, 60, 90, 140, 200]),\n         'R': np.array([3.13, 2.99, 2.94, 2.82, 2.66, 2.38, 1.99])},\n        # Condition 4: positive but near-linear regime\n        {'L': np.array([10, 15, 20, 25, 30, 40, 55, 60]),\n         'R': np.array([1.1, 1.23, 1.28, 1.41, 1.49, 1.72, 1.97, 2.1])},\n        # Condition 5: positive saturating with modest outliers\n        {'L': np.array([20, 35, 50, 75, 110, 160, 220]),\n         'R': np.array([1.2756, 1.5233, 1.8117, 1.933, 2.2678, 2.3893, 2.6265])}\n    ]\n\n    results = []\n    for case in test_cases:\n        result = analyze_condition(case['L'], case['R'])\n        results.append(result)\n\n    # The problem asks for the list of booleans as the final output.\n    # We are providing that in the answer tag.\n\ndef concave_model(L, R0, delta_R_max, K_L):\n    \"\"\"\n    The derived three-parameter non-decreasing concave function.\n    f(L; R0, delta_R_max, K_L) = R0 + (delta_R_max * L) / (K_L + L)\n    \"\"\"\n    # To prevent division by zero or negative K_L during optimization iterations\n    K_L = np.maximum(K_L, 1e-9) \n    return R0 + (delta_R_max * L) / (K_L + L)\n\ndef calculate_aic(k, n, rss):\n    \"\"\"\n    Calculates the Akaike Information Criterion.\n    AIC = 2k + n * ln(RSS/n)\n    \"\"\"\n    if rss = 0:\n        # A perfect fit (RSS=0) implies infinite likelihood, hence AIC = -inf.\n        return -np.inf\n    return 2 * k + n * np.log(rss / n)\n\ndef analyze_condition(L, R):\n    \"\"\"\n    Analyzes a single condition based on the problem's decision rule.\n    \"\"\"\n    n = len(L)\n\n    # Step 1: Quantify monotonic association with Spearman's rho\n    rho_s, _ = spearmanr(L, R)\n\n    # Step 2: Fit linear null model and compute its AIC\n    # Linear model: R = m*L + d (k=2 parameters)\n    m, d = np.polyfit(L, R, 1)\n    R_pred_lin = m * L + d\n    rss_lin = np.sum((R - R_pred_lin)**2)\n    aic_lin = calculate_aic(k=2, n=n, rss=rss_lin)\n\n    # Step 3: Fit concave model and compute its AIC\n    # Concave model: R = R0 + (delta_R_max*L)/(K_L+L) (k=3 parameters)\n    \n    # Provide reasonable initial guesses for the parameters\n    r0_guess = np.min(R)\n    delta_r_guess = np.max(R) - np.min(R)\n    k_l_guess = np.median(L)\n    p0 = [r0_guess, delta_r_guess, k_l_guess]\n\n    # Enforce biologically plausible parameter bounds\n    bounds = ([0, 0, 1e-9], [np.inf, np.inf, np.inf])\n\n    try:\n        params, _ = curve_fit(concave_model, L, R, p0=p0, bounds=bounds, maxfev=10000)\n        R_pred_concave = concave_model(L, *params)\n        rss_concave = np.sum((R - R_pred_concave)**2)\n        aic_concave = calculate_aic(k=3, n=n, rss=rss_concave)\n    except RuntimeError:\n        # If the fit fails, the model is considered infinitely bad.\n        aic_concave = np.inf\n\n    # Step 4: Compute Delta AIC for model selection\n    delta_aic = aic_lin - aic_concave\n\n    # Step 5: Apply the decision rule\n    # Condition 1: Monotonicity (rho_s >= 0.6)\n    # Condition 2: Saturation Evidence (Delta AIC >= 4)\n    supports_hypothesis = (rho_s >= 0.6) and (delta_aic >= 4)\n    \n    return supports_hypothesis\n```", "answer": "[True,False,False,False,True]", "id": "2963969"}]}