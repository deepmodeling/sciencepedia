{"hands_on_practices": [{"introduction": "To move beyond a qualitative understanding of gene regulation, we must connect molecular interactions to quantitative outcomes. This exercise provides a foundational practice in quantitative biology, guiding you to derive and apply the relationship between the free energy of ribosome binding ($\\Delta G_{\\mathrm{total}}$) and the rate of translation initiation. By calculating the energy change required for a specific fold-increase in protein expression, you will gain a tangible sense of how thermodynamics governs cellular processes and informs rational synthetic design. [@problem_id:2934841]", "problem": "In bacteria, the initiation rate of translation depends sensitively on how the small ribosomal subunit engages the ribosome binding site in the messenger ribonucleic acid (mRNA), including base-pairing between the Shine–Dalgarno sequence and the anti–Shine–Dalgarno sequence in the $16\\mathrm{S}$ ribosomal ribonucleic acid (rRNA), start codon recognition by the initiator transfer ribonucleic acid (tRNA), the spacing between the Shine–Dalgarno helix and the peptidyl site (P-site), and the energetic cost of unfolding local mRNA secondary structure occluding these elements. Assume the following foundational facts: (i) in the quasi-equilibrium limit, the initiation rate $k_{\\mathrm{init}}$ is proportional to the Boltzmann weight of the ribosome-bound initiation complex relative to the unbound state; (ii) the total initiation free energy $\\Delta G_{\\mathrm{total}}$ is the sum of the above energetic contributions; and (iii) the proportionality prefactor is sequence-independent across closely related constructs.\n\nStarting from these assumptions and first principles of equilibrium statistical mechanics, derive the relationship between a fold-change in initiation rate and the corresponding change in total initiation free energy $\\Delta G_{\\mathrm{total}}$. Then, for a design goal of increasing the initiation rate by $10$-fold at $37^{\\circ}\\mathrm{C}$, compute the required change in total initiation free energy, $\\Delta\\Delta G_{\\mathrm{total}} \\equiv \\Delta G_{\\mathrm{total}}^{(\\mathrm{after})} - \\Delta G_{\\mathrm{total}}^{(\\mathrm{before})}$, using the molar gas constant $R = 1.987 \\times 10^{-3}\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\\ \\mathrm{K}^{-1}$. Take $37^{\\circ}\\mathrm{C}$ to be $T = 310.15\\ \\mathrm{K}$. Report $\\Delta\\Delta G_{\\mathrm{total}}$ in kilocalories per mole and round your answer to four significant figures.\n\nAdditionally, indicate a minimal, concrete set of sequence-level modifications to an mRNA $5^{\\prime}$ untranslated region (UTR) and start region that are expected to achieve approximately this $\\Delta\\Delta G_{\\mathrm{total}}$ in a bacterium such as Escherichia coli, and briefly justify how each modification shifts specific terms in $\\Delta G_{\\mathrm{total}}$ toward more favorable values. Your design justification should be qualitative; do not alter your numerical answer based on this justification.", "solution": "The problem as stated is scientifically grounded, well-posed, and contains sufficient information for a rigorous solution. It is based on established principles of equilibrium statistical mechanics as applied to molecular biology, a standard and productive framework for quantitative analysis of gene regulation. The validation is affirmative; therefore, a solution will be provided.\n\nThe problem requires a derivation of the relationship between a fold-change in translation initiation rate, $k_{\\mathrm{init}}$, and the change in the total Gibbs free energy of initiation, $\\Delta G_{\\mathrm{total}}$. It then asks for a specific calculation and a qualitative design proposal based on this relationship.\n\nFirst, we establish the fundamental relationship. According to assumption (i), the initiation rate, $k_{\\mathrm{init}}$, is proportional to the Boltzmann weight of the final initiation complex relative to the unbound state of the ribosome and messenger ribonucleic acid (mRNA). The Gibbs free energy difference between these two macroscopic states is $\\Delta G_{\\mathrm{total}}$. The Boltzmann weight is given by $\\exp(-\\Delta G_{\\mathrm{total}} / (RT))$, where $R$ is the molar gas constant and $T$ is the absolute temperature.\n\nTherefore, we can write the initiation rate as:\n$$\nk_{\\mathrm{init}} = C \\cdot \\exp\\left(-\\frac{\\Delta G_{\\mathrm{total}}}{RT}\\right)\n$$\nwhere $C$ is a proportionality prefactor which, according to assumption (iii), is constant for the constructs being compared.\n\nLet us consider two constructs, one \"before\" modification and one \"after\" modification, with initiation rates $k_{\\mathrm{init}}^{(\\mathrm{before})}$ and $k_{\\mathrm{init}}^{(\\mathrm{after})}$, and corresponding total free energies $\\Delta G_{\\mathrm{total}}^{(\\mathrm{before})}$ and $\\Delta G_{\\mathrm{total}}^{(\\mathrm{after})}$, respectively. The fold-change in initiation rate is the ratio of these two rates:\n$$\n\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}} = \\frac{C \\cdot \\exp\\left(-\\frac{\\Delta G_{\\mathrm{total}}^{(\\mathrm{after})}}{RT}\\right)}{C \\cdot \\exp\\left(-\\frac{\\Delta G_{\\mathrm{total}}^{(\\mathrm{before})}}{RT}\\right)}\n$$\nThe constant $C$ cancels, and by the properties of exponents, we have:\n$$\n\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}} = \\exp\\left(-\\frac{\\Delta G_{\\mathrm{total}}^{(\\mathrm{after})} - \\Delta G_{\\mathrm{total}}^{(\\mathrm{before})}}{RT}\\right)\n$$\nDefining the change in total initiation free energy as $\\Delta\\Delta G_{\\mathrm{total}} \\equiv \\Delta G_{\\mathrm{total}}^{(\\mathrm{after})} - \\Delta G_{\\mathrm{total}}^{(\\mathrm{before})}$, the relationship becomes:\n$$\n\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}} = \\exp\\left(-\\frac{\\Delta\\Delta G_{\\mathrm{total}}}{RT}\\right)\n$$\nThis is the required general relationship. To solve for $\\Delta\\Delta G_{\\mathrm{total}}$, we take the natural logarithm of both sides:\n$$\n\\ln\\left(\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}}\\right) = -\\frac{\\Delta\\Delta G_{\\mathrm{total}}}{RT}\n$$\nWhich yields the final expression for the change in free energy:\n$$\n\\Delta\\Delta G_{\\mathrm{total}} = -RT \\ln\\left(\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}}\\right)\n$$\nThis completes the derivation. A positive fold-change in rate (an increase) must correspond to a negative change in free energy (a more favorable interaction).\n\nNext, we must compute the value of $\\Delta\\Delta G_{\\mathrm{total}}$ for the specified conditions. The problem states a design goal of a $10$-fold increase in initiation rate, so $\\frac{k_{\\mathrm{init}}^{(\\mathrm{after})}}{k_{\\mathrm{init}}^{(\\mathrm{before})}} = 10$. The given physical constants are the temperature $T = 37^{\\circ}\\mathrm{C} = 310.15\\ \\mathrm{K}$ and the molar gas constant $R = 1.987 \\times 10^{-3}\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\\ \\mathrm{K}^{-1}$.\n\nWe substitute these values into our derived formula:\n$$\n\\Delta\\Delta G_{\\mathrm{total}} = -(1.987 \\times 10^{-3}\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\\ \\mathrm{K}^{-1}) \\times (310.15\\ \\mathrm{K}) \\times \\ln(10)\n$$\nFirst, calculate the product $RT$:\n$$\nRT = (1.987 \\times 10^{-3}) \\times 310.15\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1} \\approx 0.61619\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\n$$\nNow, we compute $\\Delta\\Delta G_{\\mathrm{total}}$:\n$$\n\\Delta\\Delta G_{\\mathrm{total}} \\approx - (0.61619\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}) \\times \\ln(10)\n$$\nUsing the value $\\ln(10) \\approx 2.302585$, we find:\n$$\n\\Delta\\Delta G_{\\mathrm{total}} \\approx - (0.61619) \\times (2.302585) \\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1} \\approx -1.4185\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\n$$\nRounding the result to four significant figures as required gives:\n$$\n\\Delta\\Delta G_{\\mathrm{total}} = -1.419\\ \\mathrm{kcal}\\ \\mathrm{mol}^{-1}\n$$\n\nFinally, the problem asks for a minimal set of concrete sequence-level modifications to an mRNA that would achieve this energetic change. The total free energy is given as a sum of contributions: $\\Delta G_{\\mathrm{total}} = \\Delta G_{\\mathrm{SD}} + \\Delta G_{\\mathrm{start}} + \\Delta G_{\\mathrm{spacing}} + \\Delta G_{\\mathrm{mRNA}}$. To decrease $\\Delta G_{\\mathrm{total}}$, we must decrease one or more of these terms. Here are two distinct and minimal modifications:\n\n1.  **Optimization of the Shine-Dalgarno (SD) sequence:** The free energy of hybridization between the SD sequence on the mRNA and the anti-SD sequence on the $16\\mathrm{S}$ ribosomal ribonucleic acid (rRNA), $\\Delta G_{\\mathrm{SD}}$, is a dominant term. Suppose an initial mRNA contains a suboptimal SD sequence, for example, $5'$-AGGAG**A**U-3', where the bolded A forms a mismatch against the central C ($5'$-ACCU**C**CU-3') of the *E. coli* anti-SD sequence. A single point mutation changing this A to a G to form the canonical sequence $5'$-AGGAG**G**U-3' would replace an A-C mismatch with a stable G-C Watson-Crick base pair. This single nucleotide change makes $\\Delta G_{\\mathrm{SD}}$ significantly more negative, typically by $2$ to $3\\ \\text{kcal/mol}$, which is more than sufficient to achieve the desired change.\n\n2.  **Destabilization of local mRNA secondary structure:** The term $\\Delta G_{\\mathrm{mRNA}}$ represents the energetic cost of unfolding any mRNA structure that occludes the ribosome binding site. A large, positive $\\Delta G_{\\mathrm{mRNA}}$ is strongly inhibitory to translation. Suppose the $5'$ untranslated region contains a stable hairpin loop whose stem includes the sequence $5'$-...GGCGC...-3'$ paired with $5'$-...GCGCC...-3'$. A single point mutation that disrupts a G-C pair in the stem, for instance changing $5'$-...GGCGC...-3' to $5'$-...GG**A**GC...-3', would break a strong G-C pair and introduce a mismatch. This destabilizes the hairpin, thereby lowering the unfolding penalty $\\Delta G_{\\mathrm{mRNA}}$ (making it less positive). The reduction in free energy from disrupting a single G-C pair is again on the order of $2$ to $3\\ \\text{kcal/mol}$, making this another effective strategy for decreasing $\\Delta G_{\\mathrm{total}}$ and increasing the initiation rate.\n\nThese two examples represent minimal (single base-pair) changes that lead to substantial and predictable shifts in the total initiation free energy.", "answer": "$$\n\\boxed{-1.419}\n$$", "id": "2934841"}, {"introduction": "The efficiency of translation initiation depends not only on binding strength but also on precise spatial arrangement. The ribosome is a complex molecular machine, and the messenger RNA must thread through it to correctly position the start codon in the peptidyl (P)-site. This practice challenges you to use first principles of ribosomal geometry to predict how the spacing between the Shine-Dalgarno sequence and the start codon affects translation efficiency, providing insight into the structural rules that constrain gene architecture. [@problem_id:2934865]", "problem": "A bacterial messenger ribonucleic acid (mRNA) is engineered into four otherwise identical constructs that differ only in the spacing, in nucleotides, between the downstream edge of the Shine–Dalgarno (SD) pairing block and the first base of the adenine–uracil–guanine (AUG) start codon. The SD sequence is canonical and pairs strongly with the anti–Shine–Dalgarno sequence at the $3^{\\prime}$ end of the $16\\text{S}$ ribosomal ribonucleic acid (rRNA) within the $30$S small subunit. Translation initiation is driven by assembly of the $30$S pre-initiation complex, placement of the start codon into the peptidyl (P)-site, and loading of the initiator transfer ribonucleic acid (tRNA) by initiation factors. Assume that all constructs have identical $5^{\\prime}$ untranslated region (UTR) sequences apart from the SD–AUG spacing, identical secondary-structure propensities in the region of interest, identical Shine–Dalgarno composition and strength, and that initiation factors and ribosomal protein composition are unchanged.\n\nThe four SD–AUG spacings are $3$, $6$, $9$, and $12$ nucleotides. Using only foundational facts that (i) the SD–anti-SD helix anchors the mRNA to a fixed position at the $3^{\\prime}$ tail of the $16\\text{S}$ rRNA, (ii) the mRNA path through the $30$S subunit places the P-site at a fixed offset from that anchor, and (iii) base pairing and backbone geometry impose energetic penalties when the AUG is misaligned relative to the P-site, predict the relative translation initiation efficiencies among the four constructs. Choose the single ordering that best reflects the expected trend, from highest to lowest efficiency, and justify your choice mechanistically by reference to ribosomal geometry and P-site alignment.\n\nA. $6 \\;>\\; 9 \\;>\\; 12 \\;>\\; 3$\n\nB. $9 \\;>\\; 6 \\;>\\; 12 \\;>\\; 3$\n\nC. $12 \\;>\\; 9 \\;>\\; 6 \\;>\\; 3$\n\nD. $3 \\;>\\; 6 \\;>\\; 9 \\;>\\; 12$", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extract Givens**\n- **System**: Four engineered bacterial messenger ribonucleic acid (mRNA) constructs.\n- **Independent Variable**: The spacing, in nucleotides, between the downstream edge of the Shine–Dalgarno (SD) pairing block and the first base of the adenine–uracil–guanine (AUG) start codon. The four spacing values are $3$, $6$, $9$, and $12$ nucleotides.\n- **Constants and Constraints**:\n    - The four constructs are \"otherwise identical\".\n    - The SD sequence is \"canonical and pairs strongly with the anti–Shine–Dalgarno sequence\".\n    - The anti-SD sequence is located at the $3^{\\prime}$ end of the $16\\text{S}$ ribosomal ribonucleic acid (rRNA) within the $30$S small subunit.\n    - All constructs have identical $5^{\\prime}$ untranslated region (UTR) sequences apart from the SD–AUG spacing.\n    - All constructs have identical secondary-structure propensities in the region of interest.\n    - All constructs have identical Shine–Dalgarno composition and strength.\n    - Initiation factors and ribosomal protein composition are unchanged.\n- **Governing Principles (Provided as \"Foundational Facts\")**:\n    - (i) The SD–anti-SD helix anchors the mRNA to a fixed position at the $3^{\\prime}$ tail of the $16\\text{S}$ rRNA.\n    - (ii) The mRNA path through the $30$S subunit places the peptidyl (P)-site at a fixed offset from that anchor.\n    - (iii) Base pairing and backbone geometry impose energetic penalties when the AUG is misaligned relative to the P-site.\n- **Objective**: Predict the relative translation initiation efficiencies for the four constructs and choose the single ordering from highest to lowest efficiency.\n\n**Step 2: Validate Using Extracted Givens**\n- **Scientific Grounding**: The problem is firmly grounded in the established principles of molecular biology concerning bacterial translation initiation. The roles of the SD sequence, the $16\\text{S}$ rRNA, the $30$S subunit, and the P-site in positioning the start codon are canonical. The concept of an optimal spacer distance between the SD sequence and the AUG codon is a well-documented phenomenon.\n- **Well-Posedness**: The problem is well-posed. It defines a single variable (spacer length) and provides clear constraints to isolate its effect. The question asks for a relative ordering of efficiencies, which is a definite and meaningful solution derived from the provided principles.\n- **Objectivity**: The problem is stated in precise, objective, and scientific language, free from ambiguity or subjective claims.\n- **Flaw Checklist**: The problem does not violate any of the invalidity criteria. It is scientifically sound, formalizable, complete, realistic, well-posed, and non-trivial.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. A solution will be derived.\n\n**Derivation of Solution**\nThe problem requires ordering the translation initiation efficiencies of four mRNA constructs that differ only in the length of the spacer between the Shine-Dalgarno (SD) sequence and the AUG start codon. The provided foundational facts establish a clear mechanistic framework.\n\nPrinciple (i) states that the SD sequence binds to a fixed location on the $16\\text{S}$ rRNA, acting as an anchor. Principle (ii) states that the P-site, which must accommodate the AUG start codon for initiation to occur, is located at a fixed geometric offset from this SD anchor point. Together, these principles imply that there exists an optimal spacer length, which we will denote $S_{opt}$, that perfectly bridges the distance between the SD anchor and the P-site, allowing the AUG to be positioned with maximal precision and stability.\n\nPrinciple (iii) states that any deviation from this optimal positioning results in misalignment, which incurs an energetic penalty, thereby reducing the efficiency of translation initiation. Consequently, efficiency is maximal when the spacer length $S$ is equal to $S_{opt}$ and decreases as the absolute difference $|S - S_{opt}|$ increases.\n\nThe central task is to evaluate the given spacer lengths—$3$, $6$, $9$, and $12$ nucleotides—relative to the known optimal value, $S_{opt}$. In prokaryotes such as *Escherichia coli*, extensive bioinformatics and experimental studies have established that $S_{opt}$ is not a single value but rather a range, typically from $5$ to $9$ nucleotides, with a peak efficiency often centered around $S_{opt} \\approx 7$ or $S_{opt} \\approx 8$ nucleotides.\n\nWe evaluate the given spacers based on this canonical knowledge:\n\n1.  **Spacers of $6$ and $9$ nucleotides**: Both lengths fall squarely within the optimal range of $5$ to $9$ nucleotides. They are expected to yield high translation initiation efficiency. To rank them relative to each other, we consider their proximity to the center of the optimal range. If we assume a peak efficiency at $S_{opt} \\approx 7$ nucleotides, the spacer of length $6$ ($|6-7|=1$) is slightly closer to the optimum than the spacer of length $9$ ($|9-7|=2$). Thus, it is reasonable to predict that the efficiency for a $6$-nucleotide spacer is higher than for a $9$-nucleotide spacer. We can therefore state: Efficiency($S=6$) $>$ Efficiency($S=9$).\n\n2.  **Spacers of $3$ and $12$ nucleotides**: Both lengths lie outside the optimal range and are expected to result in significantly lower efficiency.\n    - A spacer of $3$ nucleotides is too short. It forces the mRNA backbone into a strained conformation to span the distance between the SD anchor and the P-site. This results in significant steric hindrance, a severe enthalpic penalty that strongly inhibits the proper docking of the AUG codon into the P-site.\n    - A spacer of $12$ nucleotides is too long. This introduces excessive flexibility into the mRNA leader. The AUG codon is not effectively constrained, and its successful placement in the P-site becomes a low-probability event due to the large conformational space that must be searched. This is primarily an entropic penalty.\n\n3.  **Comparing the penalties**: The energetic penalty for misalignment is not symmetric around $S_{opt}$. The severe steric clash and backbone strain associated with a spacer that is too short ($S=3$) constitutes a much greater barrier to initiation than the entropic cost associated with a spacer that is too long ($S=12$). Experimental evidence confirms that extremely short spacers are profoundly inhibitory. Therefore, the efficiency for a spacer of $3$ nucleotides is the lowest of the four. The efficiency for a $12$-nucleotide spacer, while low, will be greater than that for the $3$-nucleotide spacer. We can state: Efficiency($S=12$) $>$ Efficiency($S=3$).\n\nCombining these findings, the overall predicted order of translation initiation efficiency, from highest to lowest, is:\nEfficiency($S=6$) $>$ Efficiency($S=9$) $>$ Efficiency($S=12$) $>$ Efficiency($S=3$).\nThis corresponds to the ordering $6 > 9 > 12 > 3$.\n\n**Option-by-Option Analysis**\n\n- **A. $6 \\;>\\; 9 \\;>\\; 12 \\;>\\; 3$**: This ordering correctly identifies that $6$ and $9$ are near-optimal spacers, with $6$ being slightly more efficient than $9$ (assuming an optimum near $7$ nucleotides). It also correctly identifies that a $12$-nucleotide spacer is suboptimal and that a $3$-nucleotide spacer is the least efficient due to severe steric penalties. This ordering is fully consistent with our derivation.\n  - **Verdict**: **Correct**.\n\n- **B. $9 \\;>\\; 6 \\;>\\; 12 \\;>\\; 3$**: This ordering correctly places the suboptimal spacers ($12$ and $3$) at the end. However, it posits that a $9$-nucleotide spacer is more efficient than a $6$-nucleotide spacer. While the optimal peak can be broad and center closer to $8$ or $9$ in some contexts, making this ordering plausible, the canonical view and consideration of minimal chain length favors $6$ over $9$. Thus, A is a better representation of the general case.\n  - **Verdict**: **Incorrect**.\n\n- **C. $12 \\;>\\; 9 \\;>\\; 6 \\;>\\; 3$**: This ordering incorrectly suggests that efficiency increases with spacer length up to $12$ nucleotides. This contradicts the well-established principle that very long spacers are inefficient due to entropic costs.\n  - **Verdict**: **Incorrect**.\n\n- **D. $3 \\;>\\; 6 \\;>\\; 9 \\;>\\; 12$**: This ordering incorrectly suggests that shorter spacers are always better. It fails to account for the existence of an optimal distance and the severe steric clash that makes a $3$-nucleotide spacer extremely inefficient.\n  - **Verdict**: **Incorrect**.\n\nThe analysis converges on option A as the best description of the expected trend based on foundational principles of ribosome structure and function.", "answer": "$$\\boxed{A}$$", "id": "2934865"}, {"introduction": "The principles of optimal spacing and sequence-dependent binding are not just theoretical; they are observable patterns in genomes. This exercise puts you in the role of a bioinformatician, tasking you with designing a complete computational pipeline to analyze genomic data. You will implement an algorithm to calculate background probabilities, scan for motif enrichment, and ultimately identify the optimal Shine-Dalgarno spacing for different hypothetical species, mirroring the real-world methods used to uncover the rules of gene regulation. [@problem_id:2934805]", "problem": "You are to implement a complete computational pipeline, grounded in first principles of bacterial translation initiation, to quantify Shine–Dalgarno enrichment upstream of annotated start codons and to estimate the optimal spacing distribution per species. The pipeline must be expressed as a runnable program that takes no input and produces a single-line output in the format specified below. Your design must be based on fundamental concepts and well-tested facts: the Central Dogma of Molecular Biology, base-pairing rules in ribonucleic acid, and the canonical Shine–Dalgarno consensus sequence that complements the $3^{\\prime}$ end of the $16\\text{S}$ ribosomal ribonucleic acid.\n\nDefinitions and modeling assumptions: In bacteria, translation initiation involves base-pairing between a purine-rich Shine–Dalgarno (SD) sequence in the messenger ribonucleic acid and the anti-SD sequence at the $3^{\\prime}$ end of the $16\\text{S}$ ribosomal ribonucleic acid. This pairing must occur at a spacing that positions the start codon within the ribosomal P-site. We formalize this as follows.\n\n- Let the annotated start codon’s first base (the adenine of AUG) be indexed as position $0$ on the messenger ribonucleic acid, and let upstream positions be indexed by negative integers. For each gene, you are provided only the upstream segment of length $W$ nucleotides, corresponding to positions $-W,-W+1,\\dots,-1$ (left to right).\n- Let the Shine–Dalgarno consensus word be $S=\\text{AGGAGG}$ of length $L=6$ nucleotides. Define the SD–start spacing $d$ (in nucleotides) as the number of nucleotides between the $3^{\\prime}$ end of a candidate SD word and the start at position $0$. Equivalently, a candidate SD $L$-mer at spacing $d$ occupies positions $[-d-L,\\dots,-d-1]$.\n- Define the sequence identity scoring function $X$ for any candidate $L$-mer $s=s_0 s_1 \\dots s_{L-1}$ by $X(s)=\\sum_{i=0}^{L-1} \\mathbf{1}[s_i=S_i]$, which counts the number of positions matching the consensus word. This identity model is justified by complementarity to the anti-SD and captures the strongest contribution of canonical base-pairing under the consensus approximation.\n- For a gene with upstream length $W$, the candidate window at spacing $d$ is available if and only if $d+L \\leq W$. For a species with $N$ genes, let $N_d$ be the number of genes for which the spacing $d$ is available. Let $M_d$ be the number of such genes whose candidate $L$-mer at spacing $d$ attains $X(s)\\geq T$, with threshold $T=5$. Define the observed high-score fraction $F_d=M_d/N_d$ for $N_d>0$, and $F_d=0$ when $N_d=0$.\n- To estimate a composition-matched background, compute nucleotide frequencies $(p_A,p_C,p_G,p_U)$ across all upstream nucleotides of a species. For the consensus positions $i\\in\\{0,1,2,3,4,5\\}$ with letters $S_0=\\text{A}$, $S_1=\\text{G}$, $S_2=\\text{G}$, $S_3=\\text{A}$, $S_4=\\text{G}$, $S_5=\\text{G}$, define success probabilities $p_i$ by $p_i=p_A$ if $S_i=\\text{A}$ and $p_i=p_G$ if $S_i=\\text{G}$. Under an independent letter model, the number of matches $K$ to $S$ in a random $L$-mer is a Poisson–binomial random variable with per-position success probabilities $\\{p_i\\}_{i=0}^{L-1}$. Compute the background probability $P_{\\ge T}=\\mathbb{P}[K\\ge T]$ exactly by dynamic programming convolution over the $L$ Bernoulli trials. Define the enrichment at spacing $d$ by $E_d=F_d-P_{\\ge T}$.\n- The optimal SD–start spacing for a species is defined as $d^\\ast=\\arg\\max_{d\\in\\{0,1,\\dots,D_{\\max}\\}} E_d$, with tie-breaking by choosing the smallest such $d$. Use $D_{\\max}=12$. Report $d^\\ast$ in units of nucleotides as an integer.\n\nAlgorithmic requirements: Implement the following steps.\n\n1) For each species, construct the provided upstream sequences. Use only the upstream segments; do not include start codons in any input strings.\n\n2) For each species, compute $(p_A,p_C,p_G,p_U)$ over all upstream nucleotides and then compute $P_{\\ge T}$ for $L=6$ and $T=5$ using Poisson–binomial dynamic programming as described above.\n\n3) For each $d\\in\\{0,1,\\dots,D_{\\max}\\}$, compute $F_d$ using the identity score $X$ against $S=\\text{AGGAGG}$ and the threshold $T=5$, then compute $E_d=F_d-P_{\\ge T}$.\n\n4) Output the vector of optimal spacings, one integer per species, in a single line as a comma-separated list enclosed in square brackets.\n\nTest suite and construction of species-specific upstream sequences: You must generate the upstream sequences exactly as specified below. For any upstream length $W$, first form a base filler sequence by repeating the dinucleotide “UC” $\\lfloor W/2\\rfloor$ times (and if $W$ is odd, append “U” at the end). This yields a string with only “U” and “C,” ensuring negligible background matches to the purine-rich consensus. For a gene with specified spacing $d$ and motif string $m$ of length $L=6$, overwrite the substring at indices $[W-d-L,\\dots,W-d-1]$ with $m$. If $m$ is “None,” do not perform any overwrite. For each species, construct the list of genes using the triples $(W,d,m)$ below. All spacings $d$ and lengths $W$ are in nucleotides.\n\n- Species $1$ genes:\n  - $(W=20,d=7,m=\\text{AGGAGG})$\n  - $(W=20,d=7,m=\\text{AGGAGG})$\n  - $(W=20,d=7,m=\\text{AGGAGG})$\n  - $(W=20,d=7,m=\\text{AGGAGG})$\n  - $(W=20,d=7,m=\\text{GGGAGG})$ one mismatch to induce $X=5$\n  - $(W=20,d=\\text{None},m=\\text{None})$ no SD-like signal\n- Species $2$ genes:\n  - $(W=20,d=5,m=\\text{AGGAGG})$\n  - $(W=20,d=5,m=\\text{AGGAGG})$\n  - $(W=20,d=5,m=\\text{AGGAGG})$\n  - $(W=20,d=5,m=\\text{AGGAAG})$ one mismatch to induce $X=5$\n  - $(W=20,d=5,m=\\text{AGGAAC})$ two mismatches to induce $X=4$\n  - $(W=20,d=\\text{None},m=\\text{None})$\n- Species $3$ genes:\n  - $(W=20,d=9,m=\\text{AGGAGG})$\n  - $(W=20,d=9,m=\\text{AGGAGG})$\n  - $(W=20,d=\\text{None},m=\\text{None})$\n  - $(W=12,d=5,m=\\text{AGGAGG})$ short upstream, tests boundary\n  - $(W=12,d=\\text{None},m=\\text{None})$\n\nAngle units are not applicable. There are no physical units other than nucleotide counts; report spacings as integers in nucleotides.\n\nFinal output format: Your program should produce a single line of output containing the per-species optimal spacings as a comma-separated list enclosed in square brackets (for example, “[3,7,5]”). For the above test suite, your program must compute and output the corresponding integers in nucleotides according to the pipeline specified.", "solution": "The problem statement has been subjected to rigorous validation and is determined to be sound. It presents a well-posed computational task grounded in the fundamental principles of molecular biology, specifically bacterial translation initiation. The definitions are precise, the model is scientifically reasonable for its purpose, and the objective is algorithmically achievable. We will therefore construct the required computational pipeline.\n\nThe solution is structured into four main components, following the algorithmic requirements.\n\n**Step 1: Construction of Upstream Gene Sequences**\n\nThe problem requires the generation of synthetic messenger ribonucleic acid (mRNA) upstream sequences for a set of genes within each species. This controlled generation allows for a precise test of the subsequent analysis pipeline. For a gene specified by an upstream length $W$, an implanted motif $m$ of length $L=6$, and a spacing $d$, the sequence is constructed as follows:\n\n1. A background filler sequence of length $W$ is generated. This sequence is composed of a repeating \"UC\" dinucleotide, specifically $(\\text{UC})_{\\lfloor W/2 \\rfloor}$ followed by \"U\" if $W$ is odd. This construction results in a sequence devoid of 'A' and 'G' nucleotides, thus providing a low-complexity background that will not spuriously match the purine-rich Shine-Dalgarno (SD) consensus sequence $S=\\text{AGGAGG}$.\n2. If a motif $m$ is specified (i.e., not 'None'), it is implanted into the filler sequence. The position of implantation is determined by the spacing parameter $d$, defined as the distance from the $3'$ end of the motif to the start codon (position $0$). In a sequence of length $W$ indexed from $0$ to $W-1$ (representing positions $-W$ to $-1$ relative to the start codon), the motif occupies the indices $[W-d-L, W-d-1]$. This corresponds to the python slice `[W-d-L : W-d]`.\n\nThis procedure is applied to every gene specified in the test suite for each species, yielding a list of upstream sequences that serve as the input for the subsequent analysis.\n\n**Step 2: Estimation of Background Match Probability**\n\nTo quantify the enrichment of a sequence motif, one must establish a baseline or background probability of observing the motif by chance. The problem specifies a composition-matched background model.\n\n1.  For each species, all generated upstream sequences are concatenated. From this aggregate sequence, the frequencies of the four nucleotides, $(p_A, p_C, p_G, p_U)$, are calculated.\n2.  The Shine-Dalgarno consensus sequence is $S=\\text{AGGAGG}$. For a randomly generated $L$-mer, where each position is drawn independently according to the background frequencies, the probability of a match at position $i$ of the consensus is denoted $p_i$. Given $S = S_0S_1S_2S_3S_4S_5 = \\text{AGGAGG}$, the success probabilities for the $L=6$ Bernoulli trials are $\\{p_A, p_G, p_G, p_A, p_G, p_G\\}$.\n3.  The total number of matches, $K$, to the consensus $S$ in a random $L$-mer follows a Poisson-binomial distribution. The probability mass function $\\mathbb{P}[K=k]$ for $k \\in \\{0, 1, \\dots, L\\}$ is computed exactly using a dynamic programming approach equivalent to polynomial multiplication. Let $P_i(x) = (1-p_i) + p_i x$ be the probability generating function for the $i$-th Bernoulli trial. The generating function for the sum $K$ is $P_K(x) = \\prod_{i=0}^{L-1} P_i(x)$. The coefficient of $x^k$ in $P_K(x)$ is $\\mathbb{P}[K=k]$. This is implemented efficiently by repeatedly applying convolution. We start with a probability vector for the first trial, $[1-p_0, p_0]$, and convolve it with $[1-p_1, p_1]$, and so on, for all $i=1, \\dots, L-1$.\n4.  The final background probability, $P_{\\ge T}$, is the probability of observing a score of at least $T=5$. This is calculated by summing the probabilities of exactly $T$ matches and more: $P_{\\ge T} = \\mathbb{P}[K \\ge T] = \\sum_{k=T}^{L} \\mathbb{P}[K=k]$. For this problem, this is $\\mathbb{P}[K=5] + \\mathbb{P}[K=6]$.\n\n**Step 3: Computation of Spacing-Dependent Enrichment**\n\nWith the background probability established, we now measure the observed frequency of high-scoring SD-like sequences at each possible spacing upstream of the start codon.\n\n1.  We iterate through all possible integer spacings $d$ from $0$ to $D_{\\max}=12$.\n2.  For each spacing $d$, we compute the observed high-score fraction, $F_d$. To do this, we iterate through all $N$ genes of the species.\n3.  For each gene with upstream sequence length $W$, we first check if a candidate $L$-mer at a spacing $d$ is fully contained within the available upstream region, which requires the condition $d+L \\le W$. Let $N_d$ be the total count of genes for which this condition holds.\n4.  If the condition is met, we extract the candidate $L$-mer, $s$, from the sequence at indices $[W-d-L, W-d]$.\n5.  We compute the score $X(s) = \\sum_{i=0}^{L-1} \\mathbf{1}[s_i=S_i]$, which is the number of identical nucleotides between the candidate $s$ and the consensus $S$.\n6.  If $X(s) \\ge T=5$, we increment a counter $M_d$.\n7.  After examining all genes, the observed fraction is computed as $F_d = M_d / N_d$ if $N_d > 0$, and $F_d = 0$ otherwise.\n8.  The enrichment score for spacing $d$ is then defined as the difference between the observed fraction and the expected background probability: $E_d = F_d - P_{\\ge T}$.\n\n**Step 4: Identification of Optimal Spacing**\n\nThe final step is to determine the single optimal spacing $d^\\ast$ for each species, which is the spacing that exhibits the maximum enrichment.\n\n1.  After computing the enrichment scores $E_d$ for all $d \\in \\{0, 1, \\dots, D_{\\max}\\}$, we find the spacing $d^\\ast$ that maximizes this score: $d^\\ast = \\arg\\max_{d \\in \\{0, \\dots, D_{\\max}\\}} E_d$.\n2.  The problem specifies a tie-breaking rule: if multiple spacings yield the same maximal enrichment, the smallest such spacing is chosen. This is the default behavior of standard `argmax` functions in computational libraries.\n\nThis entire pipeline is executed for each species defined in the test suite. The final output is an integer vector containing the optimal spacing $d^\\ast$ for each species, in order.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the complete computational pipeline to find the optimal Shine-Dalgarno spacing.\n    \"\"\"\n    # Per-species test cases from the problem statement.\n    # Each species is a list of gene specifications: (W, d_implant, m_implant)\n    test_cases = [\n        # Species 1\n        [\n            (20, 7, \"AGGAGG\"), (20, 7, \"AGGAGG\"), (20, 7, \"AGGAGG\"),\n            (20, 7, \"AGGAGG\"), (20, 7, \"GGGAGG\"), (20, None, None)\n        ],\n        # Species 2\n        [\n            (20, 5, \"AGGAGG\"), (20, 5, \"AGGAGG\"), (20, 5, \"AGGAGG\"),\n            (20, 5, \"AGGAAG\"), (20, 5, \"AGGAAC\"), (20, None, None)\n        ],\n        # Species 3\n        [\n            (20, 9, \"AGGAGG\"), (20, 9, \"AGGAGG\"), (20, None, None),\n            (12, 5, \"AGGAGG\"), (12, None, None)\n        ]\n    ]\n\n    # Global parameters from the problem definition\n    L = 6\n    T = 5\n    D_max = 12\n    S_consensus = \"AGGAGG\"\n\n    results = []\n\n    for species_genes_spec in test_cases:\n        # STEP 1: Construct upstream sequences\n        sequences = []\n        gene_lengths = []\n\n        def generate_sequence(W, d_implant, m_implant):\n            \"\"\"Generates a sequence of length W with an optional implanted motif.\"\"\"\n            filler = \"UC\" * (W // 2) + \"U\" * (W % 2)\n            seq_list = list(filler)\n            if m_implant is not None and d_implant is not None:\n                if d_implant + L <= W:\n                    start_idx = W - d_implant - L\n                    seq_list[start_idx:start_idx+L] = list(m_implant)\n            return \"\".join(seq_list)\n\n        for W, d_implant, m_implant in species_genes_spec:\n            sequences.append(generate_sequence(W, d_implant, m_implant))\n            gene_lengths.append(W)\n\n        # STEP 2: Compute background probability P_>=T\n        full_sequence = \"\".join(sequences)\n        total_len = len(full_sequence)\n        \n        if total_len == 0:\n            p_nuc = {'A': 0.25, 'C': 0.25, 'G': 0.25, 'U': 0.25}\n        else:\n            p_nuc = {\n                'A': full_sequence.count('A') / total_len,\n                'C': full_sequence.count('C') / total_len,\n                'G': full_sequence.count('G') / total_len,\n                'U': full_sequence.count('U') / total_len\n            }\n\n        p_success = [p_nuc.get(char, 0.0) for char in S_consensus]\n        \n        # Compute Poisson-binomial probability mass function via convolution\n        pmf = np.array([1.0 - p_success[0], p_success[0]])\n        for i in range(1, L):\n            pmf = np.convolve(pmf, [1.0 - p_success[i], p_success[i]])\n        \n        P_ge_T = np.sum(pmf[T:]) if len(pmf) > T else 0.0\n        \n        # STEP 3 & 4: Compute enrichments and find optimal spacing\n        enrichments = []\n        \n        def score_identity(s, consensus):\n            \"\"\"Calculates identity score between a sequence and the consensus.\"\"\"\n            return sum(1 for i in range(len(s)) if s[i] == consensus[i])\n\n        for d in range(D_max + 1):\n            N_d = 0  # Number of genes where spacing d is available\n            M_d = 0  # Number of high-scoring motifs at spacing d\n            \n            for i, seq in enumerate(sequences):\n                W = gene_lengths[i]\n                \n                if d + L <= W:\n                    N_d += 1\n                    start_idx = W - d - L\n                    candidate_s = seq[start_idx:start_idx+L]\n                    \n                    if score_identity(candidate_s, S_consensus) >= T:\n                        M_d += 1\n            \n            F_d = M_d / N_d if N_d > 0 else 0.0\n            E_d = F_d - P_ge_T\n            enrichments.append(E_d)\n            \n        d_star = np.argmax(enrichments)\n        results.append(d_star)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2934805"}]}