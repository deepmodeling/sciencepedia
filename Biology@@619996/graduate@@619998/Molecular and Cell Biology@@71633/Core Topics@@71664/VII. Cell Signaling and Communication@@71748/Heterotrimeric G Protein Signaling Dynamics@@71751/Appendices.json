{"hands_on_practices": [{"introduction": "At the heart of G protein signaling lies a dynamic equilibrium between activation and inactivation of the Gα subunit. This practice problem models this central \"on/off\" switch using fundamental mass-action kinetics to explore how the steady-state level of active G protein is determined by the balance of these opposing rates [@problem_id:2947630]. By analyzing a hypothetical mutation, you will gain a quantitative understanding of how changes in catalytic efficiency for activation and deactivation can dramatically alter signaling output.", "problem": "A G protein-coupled receptor (GPCR) activates a heterotrimeric G protein by catalyzing nucleotide exchange on the guanosine diphosphate (GDP)-bound Gα subunit, producing guanosine triphosphate (GTP)-bound active Gα and releasing Gβγ. Consider a minimal, well-mixed kinetic model with two Gα states: inactive GDP-bound concentration $[G_{d}]$ and active GTP-bound concentration $[G_{t}]$, with total Gα conserved as $[G_{\\mathrm{tot}}] = [G_{d}] + [G_{t}]$. The receptor-catalyzed nucleotide exchange occurs with second-order rate constant $k_{e}$ and depends on the concentration of active receptor $[R^{*}]$. There is also receptor-independent basal exchange with first-order rate constant $k_{b}$. Deactivation occurs by GTP hydrolysis, which in the presence of Regulator of G protein Signaling (RGS) proteins is well described as a first-order process with effective rate constant $k_{h}$. Assume rapid reassociation and no other sinks or sources.\n\nStart from mass-action kinetics and conservation to derive the steady-state $[G_{t}]$ under constant $[R^{*}]$. A point mutation in Gα disrupts the catalytic glutamine involved in GTP hydrolysis, decreasing $k_{h}$ by a factor of $50$, and weakens receptor coupling, decreasing $k_{e}$ by $20\\%$. Basal exchange $k_{b}$ is unchanged. For the wild-type protein, the parameters are:\n- $[G_{\\mathrm{tot}}] = 1.0\\,\\mu\\mathrm{M}$,\n- $[R^{*}] = 0.010\\,\\mu\\mathrm{M}$,\n- $k_{e} = 10\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1}$,\n- $k_{b} = 1.0\\times 10^{-3}\\,\\mathrm{s}^{-1}$,\n- $k_{h} = 0.200\\,\\mathrm{s}^{-1}$.\n\nCompute the fold-change in steady-state active G alpha concentration produced by the mutation, defined as $F = [G_{t}]_{\\mathrm{mut}}/[G_{t}]_{\\mathrm{WT}}$. Express your answer as a unitless decimal and round your result to four significant figures.", "solution": "The problem is first validated.\n\n**Step 1: Extracted Givens**\n-   Model: Heterotrimeric G protein signaling with two states for G alpha: inactive GDP-bound $[G_{d}]$ and active GTP-bound $[G_{t}]$.\n-   Conservation Law: Total G alpha is conserved, $[G_{\\mathrm{tot}}] = [G_{d}] + [G_{t}]$.\n-   Activation Kinetics:\n    -   Receptor-catalyzed nucleotide exchange: second-order rate constant $k_{e}$, dependent on active receptor concentration $[R^{*}]$.\n    -   Basal, receptor-independent exchange: first-order rate constant $k_{b}$.\n-   Deactivation Kinetics: First-order GTP hydrolysis with effective rate constant $k_{h}$.\n-   Assumptions: Well-mixed system, constant $[R^{*}]$, rapid reassociation of G beta gamma.\n-   Wild-Type (WT) Parameters:\n    -   $[G_{\\mathrm{tot}}] = 1.0\\,\\mu\\mathrm{M}$\n    -   $[R^{*}] = 0.010\\,\\mu\\mathrm{M}$\n    -   $k_{e} = 10\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1}$\n    -   $k_{b} = 1.0\\times 10^{-3}\\,\\mathrm{s}^{-1}$\n    -   $k_{h} = 0.200\\,\\mathrm{s}^{-1}$\n-   Mutant (mut) Characteristics:\n    -   $k_{h}$ is decreased by a factor of $50$.\n    -   $k_{e}$ is decreased by $20\\%$.\n    -   $k_{b}$ is unchanged.\n-   Objective: Compute the fold-change $F = [G_{t}]_{\\mathrm{mut}}/[G_{t}]_{\\mathrm{WT}}$, rounded to four significant figures.\n\n**Step 2: Validation Using Extracted Givens**\n-   **Scientific Grounding**: The problem describes a standard, simplified mass-action kinetic model for G protein activation and deactivation cycles. This is a fundamental concept in cell signaling and biophysics. All parameters and processes are scientifically sound.\n-   **Well-Posedness**: The problem asks for a steady-state concentration, which is expected to exist and be unique for the given linear kinetic scheme. All necessary parameters are provided to calculate a definitive numerical answer.\n-   **Objectivity**: The language is precise, and the terms are defined within the framework of chemical kinetics. The problem is free of subjective or ambiguous statements.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically grounded, well-posed, objective, and contains sufficient information for a unique solution. Therefore, it is deemed **valid**. We proceed with the derivation and solution.\n\nThe dynamics of the active G protein concentration, $[G_{t}]$, are described by a differential equation based on the principles of mass-action kinetics. The rate of change of $[G_{t}]$ is the sum of formation rates minus the sum of removal rates.\n\nFormation of $[G_{t}]$ occurs from the inactive pool, $[G_{d}]$, through two parallel pathways:\n$1$. Receptor-catalyzed activation, with rate $k_{e} [R^{*}] [G_{d}]$.\n$2$. Basal activation, with rate $k_{b} [G_{d}]$.\nThe total rate of formation is thus $(k_{e} [R^{*}] + k_{b}) [G_{d}]$.\n\nRemoval of $[G_{t}]$ occurs via GTP hydrolysis, a first-order process with respect to $[G_{t}]$:\nRate of removal is $k_{h} [G_{t}]$.\n\nThe complete differential equation for $[G_{t}]$ is:\n$$\n\\frac{d[G_{t}]}{dt} = (k_{e} [R^{*}] + k_{b}) [G_{d}] - k_{h} [G_{t}]\n$$\nThe system is subject to the conservation of total G alpha protein:\n$$\n[G_{\\mathrm{tot}}] = [G_{d}] + [G_{t}]\n$$\nWe can express $[G_{d}]$ in terms of $[G_{t}]$ and $[G_{\\mathrm{tot}}]$:\n$$\n[G_{d}] = [G_{\\mathrm{tot}}] - [G_{t}]\n$$\nSubstituting this into the differential equation yields an equation solely in terms of $[G_{t}]$:\n$$\n\\frac{d[G_{t}]}{dt} = (k_{e} [R^{*}] + k_{b}) ([G_{\\mathrm{tot}}] - [G_{t}]) - k_{h} [G_{t}]\n$$\nAt steady state, the concentration of active G protein does not change over time, so $\\frac{d[G_{t}]}{dt} = 0$.\n$$\n0 = (k_{e} [R^{*}] + k_{b}) ([G_{\\mathrm{tot}}] - [G_{t}]) - k_{h} [G_{t}]\n$$\nTo simplify, let $k_{\\mathrm{act}} = k_{e} [R^{*}] + k_{b}$ be the total pseudo-first-order rate constant for activation.\n$$\n0 = k_{\\mathrm{act}} ([G_{\\mathrm{tot}}] - [G_{t}]) - k_{h} [G_{t}]\n$$\nWe now solve for the steady-state concentration, $[G_{t}]$:\n$$\nk_{\\mathrm{act}} [G_{\\mathrm{tot}}] - k_{\\mathrm{act}} [G_{t}] = k_{h} [G_{t}]\n$$\n$$\nk_{\\mathrm{act}} [G_{\\mathrm{tot}}] = (k_{\\mathrm{act}} + k_{h}) [G_{t}]\n$$\n$$\n[G_{t}] = \\frac{k_{\\mathrm{act}} [G_{\\mathrm{tot}}]}{k_{\\mathrm{act}} + k_{h}}\n$$\nSubstituting the expression for $k_{\\mathrm{act}}$ back gives the general solution for the steady-state concentration of active G alpha:\n$$\n[G_{t}] = \\frac{(k_{e} [R^{*}] + k_{b}) [G_{\\mathrm{tot}}]}{k_{e} [R^{*}] + k_{b} + k_{h}}\n$$\nNow, we apply this formula to both the wild-type (WT) and mutant (mut) cases.\n\nFor the wild-type protein, we use the given parameters:\n$k_{e, \\mathrm{WT}} = 10\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1}$\n$k_{b, \\mathrm{WT}} = 1.0 \\times 10^{-3}\\,\\mathrm{s}^{-1}$\n$k_{h, \\mathrm{WT}} = 0.200\\,\\mathrm{s}^{-1}$\n$[R^{*}] = 0.010\\,\\mu\\mathrm{M}$\n$[G_{\\mathrm{tot}}] = 1.0\\,\\mu\\mathrm{M}$\n\nThe WT activation rate term is:\n$k_{e, \\mathrm{WT}} [R^{*}] + k_{b, \\mathrm{WT}} = (10\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1})(0.010\\,\\mu\\mathrm{M}) + 1.0 \\times 10^{-3}\\,\\mathrm{s}^{-1} = 0.1\\,\\mathrm{s}^{-1} + 0.001\\,\\mathrm{s}^{-1} = 0.101\\,\\mathrm{s}^{-1}$\n\nThe steady-state concentration for WT is:\n$$\n[G_{t}]_{\\mathrm{WT}} = \\frac{(0.101\\,\\mathrm{s}^{-1}) (1.0\\,\\mu\\mathrm{M})}{0.101\\,\\mathrm{s}^{-1} + 0.200\\,\\mathrm{s}^{-1}} = \\frac{0.101}{0.301}\\,\\mu\\mathrm{M}\n$$\n\nFor the mutant protein, the parameters are altered as specified:\n$k_{e, \\mathrm{mut}} = k_{e, \\mathrm{WT}} \\times (1 - 0.20) = 10 \\times 0.8 = 8.0\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1}$\n$k_{h, \\mathrm{mut}} = \\frac{k_{h, \\mathrm{WT}}}{50} = \\frac{0.200\\,\\mathrm{s}^{-1}}{50} = 0.004\\,\\mathrm{s}^{-1}$\n$k_{b, \\mathrm{mut}} = k_{b, \\mathrm{WT}} = 1.0 \\times 10^{-3}\\,\\mathrm{s}^{-1}$\n\nThe mutant activation rate term is:\n$k_{e, \\mathrm{mut}} [R^{*}] + k_{b, \\mathrm{mut}} = (8.0\\,\\mu\\mathrm{M}^{-1}\\,\\mathrm{s}^{-1})(0.010\\,\\mu\\mathrm{M}) + 1.0 \\times 10^{-3}\\,\\mathrm{s}^{-1} = 0.08\\,\\mathrm{s}^{-1} + 0.001\\,\\mathrm{s}^{-1} = 0.081\\,\\mathrm{s}^{-1}$\n\nThe steady-state concentration for the mutant is:\n$$\n[G_{t}]_{\\mathrm{mut}} = \\frac{(0.081\\,\\mathrm{s}^{-1}) (1.0\\,\\mu\\mathrm{M})}{0.081\\,\\mathrm{s}^{-1} + 0.004\\,\\mathrm{s}^{-1}} = \\frac{0.081}{0.085}\\,\\mu\\mathrm{M}\n$$\n\nThe problem requires the fold-change, $F = [G_{t}]_{\\mathrm{mut}}/[G_{t}]_{\\mathrm{WT}}$.\n$$\nF = \\frac{[G_{t}]_{\\mathrm{mut}}}{[G_{t}]_{\\mathrm{WT}}} = \\frac{\\frac{0.081}{0.085}}{\\frac{0.101}{0.301}} = \\frac{0.081 \\times 0.301}{0.085 \\times 0.101}\n$$\n$$\nF = \\frac{0.024381}{0.008585} \\approx 2.8399534...\n$$\nRounding the result to four significant figures, we get:\n$$\nF \\approx 2.840\n$$\nThe mutation leads to a decrease in the activation rate constant $k_e$ but a much larger decrease in the hydrolysis rate constant $k_h$. The drastic reduction in deactivation more than compensates for the modest reduction in activation, resulting in a significantly higher steady-state level of active G protein.", "answer": "$$\\boxed{2.840}$$", "id": "2947630"}, {"introduction": "Understanding how a cell responds to varying concentrations of a ligand is a cornerstone of pharmacology, often described by a dose-response curve. This exercise guides you through building a quantitative model of a G protein signaling cascade, from ligand binding at the receptor to a final measurable effect [@problem_id:2947595]. You will derive the full input-output relationship and compute key pharmacological metrics, gaining hands-on experience in translating molecular kinetics into system-level dose-response characteristics.", "problem": "You are asked to formalize and compute dose–response characteristics for a minimal, operational model of a G protein-coupled receptor (GPCR) that signals via a heterotrimeric G protein. Build your derivation and implementation strictly from fundamental laws of mass action, conservation of mass, and steady-state analysis.\n\nBase assumptions and definitions:\n- Ligand binding: A ligand $L$ reversibly binds a receptor $R$ to form $RL$ with dissociation constant $K_D$. The system is in a well-mixed compartment. The ligand is buffered by a large reservoir, so the free ligand concentration equals the applied concentration $[L]$ at all times. At equilibrium under mass action and in the buffered-ligand limit, $[RL]$ is determined by $[R]_T$, $K_D$, and $[L]$.\n- G protein activation cycle: Only the ligand-bound receptor $RL$ catalyzes the activation of heterotrimeric G protein $G$ into active $G^*$ (for example, $G\\alpha\\text{-GTP}$), with a second-order catalytic rate constant $k_{\\text{act}}$ such that the activation term is $k_{\\text{act}}\\,[RL]\\,[G]$. Active $G^*$ returns to the inactive pool $G$ via GTP hydrolysis with first-order rate constant $k_{\\text{hyd}}$. Total G protein is conserved: $[G]_T = [G] + [G^*]$. The system is analyzed at steady state.\n- Effect readout: The measurable effect $E([L])$ is a saturating hyperbolic function of $[G^*]$, given by $E([L]) = \\frac{[G^*]}{[G^*] + K_E}$, where $K_E$ is a positive constant that sets the sensitivity of the downstream readout.\n- Units: Concentrations are in molar (M), time is in seconds (s). Report any required outputs explicitly in the units specified below.\n\nQuantities to compute:\n- Define the asymptotic maximum effect under saturating ligand as $E_{\\infty} = \\lim_{[L]\\to\\infty} E([L])$.\n- Define the half-maximal effective concentration $\\mathrm{EC}_{50}$ as the ligand concentration $[L]$ that satisfies $E([L]) = \\tfrac{1}{2}\\,E_{\\infty}$. You must report $\\mathrm{EC}_{50}$ in M (molar).\n- Define the dimensionless operational efficacy as follows. Let $\\alpha = [L]/K_D$ be the dimensionless agonist concentration. Define\n$$\n\\tau \\equiv \\frac{1}{E_{\\infty}}\\,\\left.\\frac{dE}{d\\alpha}\\right|_{\\alpha \\to 0^+}.\n$$\n- Compute $\\tau$ numerically from first principles without assuming any specific closed-form dose–response model.\n\nImplementation requirements:\n- Derive $E([L])$ from the assumptions using mass-action kinetics and steady-state analysis. Then numerically obtain $E_{\\infty}$, $\\mathrm{EC}_{50}$, and $\\tau$ for each parameter set below.\n- For $\\tau$, evaluate the derivative with respect to $\\alpha$ in the limit $\\alpha \\to 0^+$ numerically with a small positive increment of $\\alpha$.\n- For $\\mathrm{EC}_{50}$, solve $E([L]) = \\tfrac{1}{2}\\,E_{\\infty}$ numerically. Ensure your method works robustly across all parameter sets.\n- Rounding and units: Report $\\mathrm{EC}_{50}$ in M (molar) and $\\tau$ as dimensionless. Round both $\\mathrm{EC}_{50}$ and $\\tau$ to three significant figures.\n\nTest suite (concentrations in M, rate constants in the indicated units):\n- Case 1 (general): $K_D = 5\\times 10^{-8}$, $[R]_T = 2\\times 10^{-9}$, $[G]_T = 1\\times 10^{-7}$, $k_{\\text{act}} = 1\\times 10^{7}\\ \\text{M}^{-1}\\text{s}^{-1}$, $k_{\\text{hyd}} = 1\\times 10^{-1}\\ \\text{s}^{-1}$, $K_E = 3\\times 10^{-8}$.\n- Case 2 (high receptor reserve/efficacy): $K_D = 1\\times 10^{-7}$, $[R]_T = 5\\times 10^{-8}$, $[G]_T = 1\\times 10^{-7}$, $k_{\\text{act}} = 5\\times 10^{7}\\ \\text{M}^{-1}\\text{s}^{-1}$, $k_{\\text{hyd}} = 5\\times 10^{-2}\\ \\text{s}^{-1}$, $K_E = 1\\times 10^{-8}$.\n- Case 3 (low efficacy): $K_D = 2\\times 10^{-8}$, $[R]_T = 2\\times 10^{-9}$, $[G]_T = 5\\times 10^{-8}$, $k_{\\text{act}} = 2\\times 10^{6}\\ \\text{M}^{-1}\\text{s}^{-1}$, $k_{\\text{hyd}} = 1\\times 10^{0}\\ \\text{s}^{-1}$, $K_E = 3\\times 10^{-8}$.\n- Case 4 (G protein limited): $K_D = 1\\times 10^{-8}$, $[R]_T = 5\\times 10^{-7}$, $[G]_T = 5\\times 10^{-9}$, $k_{\\text{act}} = 1\\times 10^{7}\\ \\text{M}^{-1}\\text{s}^{-1}$, $k_{\\text{hyd}} = 2\\times 10^{-1}\\ \\text{s}^{-1}$, $K_E = 2\\times 10^{-9}$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case result should be the two-element list $[\\mathrm{EC}_{50},\\tau]$ using the units and rounding specified above. For example, a valid format with two hypothetical cases would be: $[[1.23\\mathrm{e}{-7},4.56],[7.89\\mathrm{e}{-8},1.01]]$.", "solution": "The problem statement presents a valid, self-contained, and scientifically grounded model of G protein-coupled receptor (GPCR) signaling. It is based on fundamental principles of mass-action kinetics and conservation of mass, which are standard paradigms in molecular systems biology and quantitative pharmacology. The problem is well-posed, with all parameters, variables, and objectives clearly defined. There are no logical contradictions, factual inaccuracies, or unscientific claims. Therefore, a reasoned solution can be derived.\n\nThe derivation proceeds in a sequence of logical steps, beginning with the initial ligand binding event and culminating in the final measurable effect.\n\n**Step 1: Ligand-Receptor Equilibrium**\nThe reversible binding of a ligand $L$ to a receptor $R$ is described by the reaction $L + R \\rightleftharpoons RL$. The dissociation constant, $K_D$, is given by the law of mass action at equilibrium:\n$$K_D = \\frac{[L][R]}{[RL]}$$\nThe total concentration of receptor, $[R]_T$, is conserved: $[R]_T = [R] + [RL]$. By substituting $[R] = [R]_T - [RL]$ into the expression for $K_D$, we solve for the concentration of the active ligand-receptor complex, $[RL]$:\n$$K_D = \\frac{[L]([R]_T - [RL])}{[RL]}$$\n$$K_D [RL] = [L][R]_T - [L][RL]$$\n$$[RL](K_D + [L]) = [L][R]_T$$\nThis yields the well-known Hill-Langmuir equation, which relates the concentration of the occupied receptor to the free ligand concentration:\n$$[RL] = \\frac{[R]_T [L]}{K_D + [L]}$$\n\n**Step 2: G Protein Activation Cycle at Steady State**\nThe ligand-bound receptor, $RL$, acts as a catalyst for the activation of the G protein. The active form is denoted $G^*$ and the inactive form is $G$. The rate of activation is given as a second-order reaction: $v_{\\text{act}} = k_{\\text{act}}[RL][G]$. The active protein $G^*$ is inactivated via a first-order process, presumably GTP hydrolysis, with a rate $v_{\\text{hyd}} = k_{\\text{hyd}}[G^*]$.\nThe time evolution of $[G^*]$ is given by the differential equation:\n$$\\frac{d[G^*]}{dt} = v_{\\text{act}} - v_{\\text{hyd}} = k_{\\text{act}}[RL][G] - k_{\\text{hyd}}[G^*]$$\nThe problem specifies analysis at steady state, where $\\frac{d[G^*]}{dt} = 0$. Thus:\n$$k_{\\text{act}}[RL][G] = k_{\\text{hyd}}[G^*]$$\nThe total G protein concentration, $[G]_T$, is conserved: $[G]_T = [G] + [G^*]$. Substituting $[G] = [G]_T - [G^*]$ into the steady-state condition gives:\n$$k_{\\text{act}}[RL]([G]_T - [G^*]) = k_{\\text{hyd}}[G^*]$$\nSolving for the steady-state concentration of active G protein, $[G^*]$, as a function of $[RL]$:\n$$k_{\\text{act}}[RL][G]_T = (k_{\\text{hyd}} + k_{\\text{act}}[RL])[G^*]$$\n$$[G^*] = \\frac{k_{\\text{act}}[RL][G]_T}{k_{\\text{hyd}} + k_{\\text{act}}[RL]}$$\nThis equation has the functional form of a Michaelis-Menten relation where $[RL]$ acts as the input signal.\n\n**Step 3: Derivation of the Full Dose-Response Function for $[G^*]$**\nBy substituting the expression for $[RL]$ from Step 1 into the steady-state expression for $[G^*]$ from Step 2, we obtain the relationship between the applied ligand concentration $[L]$ and the amount of active G protein $[G^*]$:\n$$[G^*] = \\frac{k_{\\text{act}}\\left(\\frac{[R]_T [L]}{K_D + [L]}\\right)[G]_T}{k_{\\text{hyd}} + k_{\\text{act}}\\left(\\frac{[R]_T [L]}{K_D + [L]}\\right)}$$\nTo simplify this complex fraction, we multiply the numerator and denominator by $(K_D + [L])$:\n$$[G^*]([L]) = \\frac{k_{\\text{act}}[R]_T [L][G]_T}{k_{\\text{hyd}}(K_D + [L]) + k_{\\text{act}}[R]_T [L]}$$\nRearranging the denominator by powers of $[L]$ yields the final functional form:\n$$[G^*]([L]) = \\frac{k_{\\text{act}}[R]_T [G]_T [L]}{k_{\\text{hyd}}K_D + (k_{\\text{hyd}} + k_{\\text{act}}[R]_T)[L]}$$\n\n**Step 4: Calculation of the Measurable Effect, $E([L])$, and its Maximum, $E_{\\infty}$**\nThe measured effect $E$ is a saturating hyperbolic function of $[G^*]$:\n$$E([L]) = \\frac{[G^*]([L])}{[G^*]([L]) + K_E}$$\nThe maximum effect, $E_{\\infty}$, occurs at a saturating ligand concentration, i.e., in the limit $[L] \\to \\infty$. First, we determine the maximum concentration of active G protein, $[G^*]_{\\infty}$:\n$$[G^*]_{\\infty} = \\lim_{[L]\\to\\infty} [G^*]([L]) = \\lim_{[L]\\to\\infty} \\frac{k_{\\text{act}}[R]_T [G]_T [L]}{k_{\\text{hyd}}K_D + (k_{\\text{hyd}} + k_{\\text{act}}[R]_T)[L]}$$\nDividing numerator and denominator by $[L]$:\n$$[G^*]_{\\infty} = \\frac{k_{\\text{act}}[R]_T [G]_T}{\\lim_{[L]\\to\\infty}\\frac{k_{\\text{hyd}}K_D}{[L]} + (k_{\\text{hyd}} + k_{\\text{act}}[R]_T)} = \\frac{k_{\\text{act}}[R]_T [G]_T}{k_{\\text{hyd}} + k_{\\text{act}}[R]_T}$$\nThe maximum effect $E_{\\infty}$ is then:\n$$E_{\\infty} = \\frac{[G^*]_{\\infty}}{[G^*]_{\\infty} + K_E}$$\n\n**Step 5: Calculation of Half-Maximal Effective Concentration, $\\mathrm{EC}_{50}$**\nThe $\\mathrm{EC}_{50}$ is the ligand concentration $[L]$ at which the effect is half of its maximum: $E(\\mathrm{EC}_{50}) = \\frac{1}{2}E_{\\infty}$. We must solve this equation for $[L]=\\mathrm{EC}_{50}$. Let $[G^*]_{\\mathrm{EC50}}$ be the concentration of active G protein at $\\mathrm{EC}_{50}$. The condition becomes:\n$$\\frac{[G^*]_{\\mathrm{EC50}}}{[G^*]_{\\mathrm{EC50}} + K_E} = \\frac{1}{2} \\left( \\frac{[G^*]_{\\infty}}{[G^*]_{\\infty} + K_E} \\right)$$\nSolving this for $[G^*]_{\\mathrm{EC50}}$ yields:\n$$[G^*]_{\\mathrm{EC50}} = \\frac{K_E [G^*]_{\\infty}}{[G^*]_{\\infty} + 2K_E}$$\nWe must then invert the dose-response function $[G^*]([L])$ to find the corresponding $[L]$ which is $\\mathrm{EC}_{50}$. This requires solving $[G^*]([L])=[G^*]_{\\mathrm{EC50}}$ for $[L]$. Given the monotonic nature of the function, a numerical root-finding algorithm, such as the bisection method, is suitable and robust. The equation to solve is $E([L]) - \\frac{1}{2} E_{\\infty} = 0$.\n\n**Step 6: Calculation of Operational Efficacy, $\\tau$**\nThe operational efficacy $\\tau$ is defined as $\\tau \\equiv \\frac{1}{E_{\\infty}}\\,\\left.\\frac{dE}{d\\alpha}\\right|_{\\alpha \\to 0^+}$, where $\\alpha = [L]/K_D$.\nWe use the chain rule: $\\frac{dE}{d\\alpha} = \\frac{dE}{d[G^*]} \\frac{d[G^*]}{d[L]} \\frac{d[L]}{d\\alpha}$.\nFirst, $\\frac{d[L]}{d\\alpha} = K_D$.\nSecond, $\\frac{dE}{d[G^*]} = \\frac{K_E}{([G^*] + K_E)^2}$. In the limit $\\alpha \\to 0^+$, $[L] \\to 0^+$ and $[G^*] \\to 0$. Thus, $\\lim_{\\alpha \\to 0^+} \\frac{dE}{d[G^*]} = \\frac{1}{K_E}$.\nThird, $\\frac{d[G^*]}{d[L]} = \\frac{d}{d[L]} \\left( \\frac{A [L]}{B + C [L]} \\right) = \\frac{A B}{(B + C [L])^2}$, where $A=k_{\\text{act}}[R]_T [G]_T$, $B=k_{\\text{hyd}}K_D$, and $C=k_{\\text{hyd}} + k_{\\text{act}}[R]_T$.\nIn the limit $[L] \\to 0$, this derivative becomes $\\frac{A B}{B^2} = \\frac{A}{B} = \\frac{k_{\\text{act}}[R]_T [G]_T}{k_{\\text{hyd}}K_D}$.\nCombining the terms:\n$$\\left.\\frac{dE}{d\\alpha}\\right|_{\\alpha \\to 0^+} = \\left(\\frac{1}{K_E}\\right) \\left(\\frac{k_{\\text{act}}[R]_T [G]_T}{k_{\\text{hyd}}K_D}\\right) (K_D) = \\frac{k_{\\text{act}}[R]_T [G]_T}{k_{\\text{hyd}}K_E}$$\nThus, the analytical form for $\\tau$ is:\n$$\\tau = \\frac{1}{E_{\\infty}} \\left( \\frac{k_{\\text{act}}[R]_T [G]_T}{k_{\\text{hyd}}K_E} \\right)$$\nAs per the problem, this will be computed numerically using a finite difference approximation for a small increment of $\\alpha$:\n$$\\left.\\frac{dE}{d\\alpha}\\right|_{\\alpha \\to 0^+} \\approx \\frac{E(\\alpha=\\delta) - E(\\alpha=0)}{\\delta} = \\frac{E(\\alpha=\\delta)}{\\delta}$$\nwhere $\\delta$ is a small positive number.\n\nThe implementation will follow these derivations to compute the required quantities for each test case.", "answer": "```python\nimport numpy as np\nimport scipy.optimize\nimport math\n\ndef solve():\n    \"\"\"\n    Computes dose-response characteristics (EC50, tau) for a GPCR model.\n    \"\"\"\n\n    test_cases = [\n        # Case 1 (general)\n        {\"K_D\": 5e-8, \"R_T\": 2e-9, \"G_T\": 1e-7, \"k_act\": 1e7, \"k_hyd\": 1e-1, \"K_E\": 3e-8},\n        # Case 2 (high receptor reserve/efficacy)\n        {\"K_D\": 1e-7, \"R_T\": 5e-8, \"G_T\": 1e-7, \"k_act\": 5e7, \"k_hyd\": 5e-2, \"K_E\": 1e-8},\n        # Case 3 (low efficacy)\n        {\"K_D\": 2e-8, \"R_T\": 2e-9, \"G_T\": 5e-8, \"k_act\": 2e6, \"k_hyd\": 1.0, \"K_E\": 3e-8},\n        # Case 4 (G protein limited)\n        {\"K_D\": 1e-8, \"R_T\": 5e-7, \"G_T\": 5e-9, \"k_act\": 1e7, \"k_hyd\": 2e-1, \"K_E\": 2e-9},\n    ]\n\n    def round_to_sf(x, sf):\n        \"\"\"Rounds a number to a specified number of significant figures.\"\"\"\n        if x == 0:\n            return 0.0\n        # Calculate the position of the most significant digit\n        log_val = math.log10(abs(x))\n        round_pos = sf - 1 - int(math.floor(log_val))\n        return round(x, round_pos)\n\n    def calculate_metrics(params):\n        \"\"\"\n        Calculates EC50 and tau for a given set of parameters.\n        \"\"\"\n        K_D = params[\"K_D\"]\n        R_T = params[\"R_T\"]\n        G_T = params[\"G_T\"]\n        k_act = params[\"k_act\"]\n        k_hyd = params[\"k_hyd\"]\n        K_E = params[\"K_E\"]\n\n        # Define G_star concentration as a function of ligand concentration L\n        # [G*]([L]) = (k_act * [R]T * [G]T * [L]) / (k_hyd * K_D + (k_hyd + k_act * [R]T) * [L])\n        A = k_act * R_T * G_T\n        B = k_hyd * K_D\n        C = k_hyd + k_act * R_T\n        \n        def get_G_star(L):\n            return (A * L) / (B + C * L)\n\n        # Define Effect E as a function of ligand concentration L\n        def get_E(L):\n            G_star = get_G_star(L)\n            return G_star / (G_star + K_E)\n\n        # 1. Calculate E_infinity\n        G_star_inf = (k_act * R_T * G_T) / (k_hyd + k_act * R_T)\n        E_inf = G_star_inf / (G_star_inf + K_E)\n\n        # 2. Calculate EC50 numerically\n        # EC50 is L where E(L) = 0.5 * E_inf\n        # We solve f(L) = E(L) - 0.5 * E_inf = 0\n        def ec50_objective(L):\n            return get_E(L) - 0.5 * E_inf\n\n        # Find a suitable search bracket [a, b] for the root finder\n        # Since E(L) is monotonic and E(0) < 0.5*E_inf, we know a root exists if E(L) can exceed 0.5*E_inf\n        # The bracket [1e-15, 1.0] should be robust for typical pharmacological concentrations.\n        # E(1e-15) is very close to E(0), so ec50_objective(1e-15) is negative.\n        # E(1.0) is very close to E_inf, so ec50_objective(1.0) is positive.\n        try:\n            ec50 = scipy.optimize.bisect(ec50_objective, 1e-15, 1.0)\n        except ValueError:\n            # This can happen if E_inf is 0 or the function does not cross zero in the interval\n            ec50 = np.nan\n\n        # 3. Calculate tau numerically\n        # tau = (1/E_inf) * dE/d(alpha) at alpha -> 0+\n        # where alpha = L/K_D\n        # We approximate dE/d(alpha) with E(alpha=delta)/delta for a small delta\n        delta_alpha = 1e-9\n        L_delta = delta_alpha * K_D\n        E_delta = get_E(L_delta)\n        \n        if E_inf > 1e-12: # Avoid division by zero if E_inf is effectively zero\n            tau = (1 / E_inf) * (E_delta / delta_alpha)\n        else:\n            tau = 0.0\n\n        return ec50, tau\n\n    results = []\n    for case_params in test_cases:\n        ec50, tau = calculate_metrics(case_params)\n        \n        # Round final numbers to three significant figures as requested\n        ec50_rounded = round_to_sf(ec50, 3)\n        tau_rounded = round_to_sf(tau, 3)\n\n        results.append([ec50_rounded, tau_rounded])\n    \n    # Format the final output string to match the specified format without extra spaces\n    # and with standard python float representation.\n    final_output_str = str(results).replace(\" \", \"\")\n    print(final_output_str)\n\nsolve()\n\n```", "id": "2947595"}, {"introduction": "Not all components of a signaling pathway exert equal control over its output; some act as critical bottlenecks or 'rate-limiting' steps. This practice introduces the powerful concept of Logarithmic Control Analysis to dissect the G protein signaling system you have modeled [@problem_id:2947610]. By numerically calculating control coefficients, you will learn to pinpoint which parameters—such as enzyme activities or component concentrations—are the dominant drivers of signaling flux under different conditions.", "problem": "Consider a minimal, physically consistent model of heterotrimeric guanine nucleotide-binding protein (G protein) signaling initiated by a G protein-coupled receptor (GPCR). The model must be built strictly from mass-action kinetics, conservation relations, and steady-state balance. Use the following fundamental and well-tested facts as the only starting points:\n\n- Receptor-ligand binding is governed by mass-action kinetics. Let $R$ denote free receptor concentration, $L$ the free ligand concentration (assumed buffered and constant), and $RL$ the receptor-ligand complex. The reversible binding satisfies $R + L \\rightleftharpoons RL$ with association rate constant $k_{\\mathrm{on}}$ and dissociation rate constant $k_{\\mathrm{off}}$. Receptor is conserved: $[R] + [RL] = R_{\\mathrm{tot}}$.\n- Activation of the G protein is modeled as a second-order mass-action process in which the receptor-ligand complex catalyzes nucleotide exchange on inactive G protein ($G_{\\mathrm{GDP}}$) to form active G protein ($G^*$). Let the exchange rate constant be $k_{\\mathrm{ex}}$. The activation rate is $v_{\\mathrm{act}} = k_{\\mathrm{ex}} [RL] [G_{\\mathrm{GDP}}]$.\n- Inactivation occurs by intrinsic or regulator of G protein signaling (RGS)-accelerated GTP hydrolysis, modeled as first-order decay of $G^*$ with rate constant $k_{\\mathrm{hyd}}$: $v_{\\mathrm{hyd}} = k_{\\mathrm{hyd}} [G^*]$.\n- G protein is conserved: $G_{\\mathrm{tot}} = [G_{\\mathrm{GDP}}] + [G^*]$. Assume $G_{\\mathrm{tot}}$ is constant and strictly positive.\n\nYour program must, for each specified parameter set, compute two outputs that quantify rate limitation and control:\n\n1. The steady-state fraction of active G protein, $f_{\\ast} \\equiv [G^*]_{\\mathrm{ss}} / G_{\\mathrm{tot}}$, obtained by solving the steady-state balance $dv/dt = 0$ implied by the above kinetics. Report this as a real number rounded to six decimal places. This quantity is dimensionless.\n2. The index of the parameter that exerts the largest absolute logarithmic control on the steady-state activation flux $J$ at steady state, where $J$ is defined as the hydrolysis flux at steady state, $J \\equiv v_{\\mathrm{hyd}} \\big|_{\\mathrm{ss}}$. For a parameter $p$, the logarithmic control coefficient is $C_p \\equiv \\partial \\ln J / \\partial \\ln p$. You must estimate $C_p$ numerically by a symmetric relative perturbation of size $\\varepsilon = 10^{-6}$ around the nominal parameter value, holding all other parameters fixed, and using the central-difference approximation to $C_p$. Identify the parameter index corresponding to the maximum absolute value among $\\{C_{k_{\\mathrm{on}}}, C_{k_{\\mathrm{off}}}, C_{k_{\\mathrm{ex}}}, C_{k_{\\mathrm{hyd}}}, C_{R_{\\mathrm{tot}}}, C_{L}}\\}$. If multiple parameters share the same maximum absolute value within an absolute tolerance of $10^{-9}$, break ties by choosing the smallest index. Indices must be assigned in the following fixed order:\n   - $0$: $k_{\\mathrm{on}}$ (units $\\mu \\mathrm{M}^{-1}\\mathrm{s}^{-1}$),\n   - $1$: $k_{\\mathrm{off}}$ (units $\\mathrm{s}^{-1}$),\n   - $2$: $k_{\\mathrm{ex}}$ (units $\\mu \\mathrm{M}^{-1}\\mathrm{s}^{-1}$),\n   - $3$: $k_{\\mathrm{hyd}}$ (units $\\mathrm{s}^{-1}$),\n   - $4$: $R_{\\mathrm{tot}}$ (units $\\mu \\mathrm{M}$),\n   - $5$: $L$ (units $\\mu \\mathrm{M}$).\n   \nAll concentrations must be treated in micromolar and all times in seconds. The final hydrolysis flux $J$ is in units of $\\mu \\mathrm{M}\\,\\mathrm{s}^{-1}$, but you do not need to output $J$; it is only used to compute control coefficients. The steady-state fraction $f_{\\ast}$ is dimensionless. Angles are not involved. Do not use percentages; if any fraction is required, it must be a real number.\n\nFor receptor-ligand binding, assume rapid pre-equilibrium so that the bound complex $RL$ is at its equilibrium consistent with mass-action kinetics and the conservation $[R] + [RL] = R_{\\mathrm{tot}}$. For G protein activation/inactivation, determine $[G^*]_{\\mathrm{ss}}$ by enforcing steady state of $d[G^*]/dt = v_{\\mathrm{act}} - v_{\\mathrm{hyd}}$ under the above definitions. Your algorithm should therefore:\n\n- Determine $RL$ from the binding pre-equilibrium and conservation.\n- Determine $[G^*]_{\\mathrm{ss}}$ and hence $f_{\\ast}$ from the steady-state balance using $v_{\\mathrm{act}}$ and $v_{\\mathrm{hyd}}$ as given.\n- Compute $J$ at steady state, and then compute the six logarithmic control coefficients $C_p$ by symmetric relative perturbation and central differencing.\n- Choose the index of the parameter with the largest absolute $C_p$ using the tie-breaking rule.\n\nTest Suite. Use the following five parameter sets, each given as an ordered $6$-tuple $(k_{\\mathrm{on}}, k_{\\mathrm{off}}, k_{\\mathrm{ex}}, k_{\\mathrm{hyd}}, R_{\\mathrm{tot}}, L)$ in the specified units:\n\n- Case A (balanced): $(1.0, 0.1, 1.0, 0.5, 0.1, 0.1)$.\n- Case B (ligand-limited): $(1.0, 0.1, 1.0, 0.5, 0.1, 0.0001)$.\n- Case C (activation-saturated): $(1.0, 0.1, 10.0, 0.1, 10.0, 1000.0)$.\n- Case D (rapid hydrolysis): $(1.0, 0.1, 1.0, 5.0, 0.1, 0.1)$.\n- Case E (weak binding): $(1.0, 100.0, 1.0, 0.5, 0.1, 0.1)$.\n\nFinal Output Format. Your program should produce a single line of output containing the results for the five cases as a comma-separated list of length five, where each element is a two-element list $[f_{\\ast}, \\mathrm{idx}]$ with $f_{\\ast}$ rounded to six decimal places and $\\mathrm{idx}$ the integer index of the dominant control parameter as defined above. For example, the printed output must look like\n\"[[fA,idxA],[fB,idxB],[fC,idxC],[fD,idxD],[fE,idxE]]\"\nwith no spaces added or removed beyond those implied by Python list formatting of numbers.", "solution": "The problem is subjected to validation and is found to be scientifically grounded, well-posed, objective, and internally consistent. It presents a standard problem in quantitative systems biology, requiring the derivation and analysis of a steady-state model for G protein signaling. All necessary parameters and kinetic laws are provided. The problem is valid.\n\nThe solution is developed in two parts: first, the derivation of the steady-state fraction of active G protein, $f_{\\ast}$, and second, the calculation of logarithmic control coefficients, $C_p$, to identify the rate-limiting parameter.\n\n**Part 1: Derivation of the Steady-State Active G Protein Fraction ($f_{\\ast}$)**\n\nThe model is composed of two coupled modules: receptor-ligand binding and G protein activation-inactivation cycle.\n\nFirst, we analyze the receptor-ligand binding module. The binding reaction is $R + L \\rightleftharpoons RL$. The problem specifies that this reaction is at rapid pre-equilibrium. This implies that the concentrations of free receptor, $R$, free ligand, $L$, and receptor-ligand complex, $RL$, satisfy the law of mass action at equilibrium. The dissociation constant, $K_d$, is defined by the ratio of the off-rate, $k_{\\mathrm{off}}$, to the on-rate, $k_{\\mathrm{on}}$:\n$$K_d = \\frac{k_{\\mathrm{off}}}{k_{\\mathrm{on}}}$$\nAt equilibrium, the following relation holds:\n$$[R][L] = K_d[RL]$$\nReceptor concentration is conserved, with a total concentration $R_{\\mathrm{tot}}$:\n$$[R] + [RL] = R_{\\mathrm{tot}}$$\nSubstituting $[R] = R_{\\mathrm{tot}} - [RL]$ into the equilibrium condition gives:\n$$(R_{\\mathrm{tot}} - [RL])[L] = K_d[RL]$$\nSolving for the steady-state concentration of the receptor-ligand complex, $[RL]_{\\mathrm{ss}}$, yields the standard hyperbolic binding isotherm:\n$$[RL]_{\\mathrm{ss}} = \\frac{R_{\\mathrm{tot}} L}{L + K_d} = \\frac{R_{\\mathrm{tot}} L}{L + k_{\\mathrm{off}}/k_{\\mathrm{on}}}$$\nHere, we treat the ligand concentration $L$ as a constant parameter as specified.\n\nNext, we analyze the G protein cycle. The rate of change of the active G protein concentration, $[G^*]$, is given by the difference between its activation rate, $v_{\\mathrm{act}}$, and its inactivation rate, $v_{\\mathrm{hyd}}$:\n$$\\frac{d[G^*]}{dt} = v_{\\mathrm{act}} - v_{\\mathrm{hyd}}$$\nThe rates are given by mass-action kinetics:\n$$v_{\\mathrm{act}} = k_{\\mathrm{ex}} [RL] [G_{\\mathrm{GDP}}]$$\n$$v_{\\mathrm{hyd}} = k_{\\mathrm{hyd}} [G^*]$$\nAt steady state, $\\frac{d[G^*]}{dt}=0$, which implies $v_{\\mathrm{act}} = v_{\\mathrm{hyd}}$. Therefore:\n$$k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}} [G_{\\mathrm{GDP}}]_{\\mathrm{ss}} = k_{\\mathrm{hyd}} [G^*]_{\\mathrm{ss}}$$\nThe total G protein concentration, $G_{\\mathrm{tot}}$, is also conserved:\n$$[G_{\\mathrm{GDP}}] + [G^*] = G_{\\mathrm{tot}}$$\nSubstituting $[G_{\\mathrm{GDP}}]_{\\mathrm{ss}} = G_{\\mathrm{tot}} - [G^*]_{\\mathrm{ss}}$ into the steady-state balance equation:\n$$k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}} (G_{\\mathrm{tot}} - [G^*]_{\\mathrm{ss}}) = k_{\\mathrm{hyd}} [G^*]_{\\mathrm{ss}}$$\nSolving for $[G^*]_{\\mathrm{ss}}$:\n$$k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}} G_{\\mathrm{tot}} = ([G^*]_{\\mathrm{ss}})(k_{\\mathrm{hyd}} + k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}})$$\n$$[G^*]_{\\mathrm{ss}} = \\frac{k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}} G_{\\mathrm{tot}}}{k_{\\mathrm{hyd}} + k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}}}$$\nThe desired quantity is the fraction of active G protein, $f_{\\ast} \\equiv [G^*]_{\\mathrm{ss}} / G_{\\mathrm{tot}}$. Dividing the expression for $[G^*]_{\\mathrm{ss}}$ by $G_{\\mathrm{tot}}$ gives:\n$$f_{\\ast} = \\frac{[G^*]_{\\mathrm{ss}}}{G_{\\mathrm{tot}}} = \\frac{k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}}}{k_{\\mathrm{hyd}} + k_{\\mathrm{ex}} [RL]_{\\mathrm{ss}}}$$\nThis final expression for $f_{\\ast}$ depends on the parameters $\\{k_{\\mathrm{on}}, k_{\\mathrm{off}}, k_{\\mathrm{ex}}, k_{\\mathrm{hyd}}, R_{\\mathrm{tot}}, L\\}$ via the term $[RL]_{\\mathrm{ss}}$. It is independent of the total G protein concentration $G_{\\mathrm{tot}}$.\n\n**Part 2: Computation of Logarithmic Control Coefficients ($C_p$)**\n\nThe logarithmic control coefficient of a flux $J$ with respect to a parameter $p$ is defined as $C_p^J \\equiv \\frac{\\partial \\ln J}{\\partial \\ln p}$. The flux $J$ is the steady-state hydrolysis flux, $J = v_{\\mathrm{hyd}}|_{\\mathrm{ss}} = k_{\\mathrm{hyd}} [G^*]_{\\mathrm{ss}}$.\n$$J = k_{\\mathrm{hyd}} f_{\\ast} G_{\\mathrm{tot}}$$\nThe value of $G_{\\mathrm{tot}}$ is not provided. However, the control coefficients are independent of its value. Taking the natural logarithm of $J$:\n$$\\ln J = \\ln(k_{\\mathrm{hyd}}) + \\ln(f_{\\ast}) + \\ln(G_{\\mathrm{tot}})$$\nThe control coefficient for a parameter $p$ from the set $\\{k_{\\mathrm{on}}, k_{\\mathrm{off}}, k_{\\mathrm{ex}}, k_{\\mathrm{hyd}}, R_{\\mathrm{tot}}, L\\}$ is:\n$$C_p = \\frac{\\partial \\ln J}{\\partial \\ln p} = \\frac{\\partial (\\ln(k_{\\mathrm{hyd}}) + \\ln(f_{\\ast}))}{\\partial \\ln p} + \\frac{\\partial \\ln(G_{\\mathrm{tot}})}{\\partial \\ln p}$$\nSince $G_{\\mathrm{tot}}$ is a constant that is not part of the parameter set $p$, the last term $\\frac{\\partial \\ln(G_{\\mathrm{tot}})}{\\partial \\ln p}$ is zero. Thus, we can compute the control coefficients on a normalized flux $J' = J/G_{\\mathrm{tot}} = k_{\\mathrm{hyd}} f_{\\ast}$ without loss of generality.\n\nThe problem requires a numerical estimation of $C_p$ using a symmetric relative perturbation of size $\\varepsilon = 10^{-6}$ and a central-difference formula for the log-transformed variables:\n$$C_p \\approx \\frac{\\ln J'(p(1+\\varepsilon)) - \\ln J'(p(1-\\varepsilon))}{\\ln(p(1+\\varepsilon)) - \\ln(p(1-\\varepsilon))} = \\frac{\\ln(J'(p(1+\\varepsilon)) / J'(p(1-\\varepsilon)))}{\\ln((1+\\varepsilon)/(1-\\varepsilon))}$$\nThe algorithm proceeds as follows for each parameter set:\n1.  Calculate the nominal value of $f_{\\ast}$ using the derived analytical formula.\n2.  Define a function to compute $J'(p_0, p_1, ..., p_5) = k_{\\mathrm{hyd}} f_{\\ast}$.\n3.  For each parameter $p_i$ (where $i \\in \\{0, 1, 2, 3, 4, 5\\}$):\n    a. Create two new parameter sets by perturbing $p_i$ to $p_i(1+\\varepsilon)$ and $p_i(1-\\varepsilon)$, keeping all other parameters fixed.\n    b. Calculate the perturbed fluxes, $J'_+$ and $J'_-$.\n    c. Compute $C_{p_i}$ using the central-difference formula above.\n4.  Find the maximum absolute value among all calculated control coefficients, $|C_p|$.\n5.  Identify all parameter indices $i$ for which $|C_{p_i}|$ is within an absolute tolerance of $10^{-9}$ of the maximum.\n6.  Select the smallest index among these candidates as the final answer, according to the specified tie-breaking rule.\n\nThis procedure is implemented for each of the five test cases provided.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the G protein signaling problem for the given test cases.\n    Computes the steady-state fraction of active G protein (f_star) and\n    the index of the parameter with the largest logarithmic control coefficient.\n    \"\"\"\n\n    test_cases = [\n        # Case A (balanced)\n        (1.0, 0.1, 1.0, 0.5, 0.1, 0.1),\n        # Case B (ligand-limited)\n        (1.0, 0.1, 1.0, 0.5, 0.1, 0.0001),\n        # Case C (activation-saturated)\n        (1.0, 0.1, 10.0, 0.1, 10.0, 1000.0),\n        # Case D (rapid hydrolysis)\n        (1.0, 0.1, 1.0, 5.0, 0.1, 0.1),\n        # Case E (weak binding)\n        (1.0, 100.0, 1.0, 0.5, 0.1, 0.1),\n    ]\n\n    def calculate_system_outputs(params):\n        \"\"\"\n        Calculates f_star and the normalized flux J' for a given set of parameters.\n        \n        Args:\n            params (tuple): A 6-tuple of parameters (k_on, k_off, k_ex, k_hyd, R_tot, L).\n\n        Returns:\n            tuple: A tuple containing (f_star, J_prime).\n        \"\"\"\n        k_on, k_off, k_ex, k_hyd, R_tot, L = params\n        \n        if k_on <= 0 or L < 0 or R_tot < 0:\n            return 0.0, 0.0\n\n        K_d = k_off / k_on\n        \n        RL_ss_denominator = L + K_d\n        if RL_ss_denominator == 0:\n            # This happens if L=0 and k_off=0, implying K_d=0.\n            # In this case, RL_ss = R_tot.\n            RL_ss = R_tot\n        else:\n            RL_ss = (R_tot * L) / RL_ss_denominator\n\n        f_star_denominator = k_hyd + k_ex * RL_ss\n        if f_star_denominator == 0:\n            # This can happen if k_hyd=0 and either k_ex=0 or RL_ss=0.\n            # If the denominator is 0 but the numerator is not, f_star is infinite.\n            # If both are 0, it is undefined.\n            # With positive parameters as per problem context, this denominator is positive.\n            # If k_hyd = 0, G protein cannot inactivate, so f_star becomes 1.\n            f_star = 1.0 if k_ex * RL_ss > 0 else 0.0\n        else:\n            f_star = (k_ex * RL_ss) / f_star_denominator\n\n        J_prime = k_hyd * f_star\n        return f_star, J_prime\n\n    results = []\n    \n    epsilon = 1e-6\n    # Pre-calculate the denominator for the central difference formula for stability\n    log_perturb_denom = np.log((1 + epsilon) / (1 - epsilon))\n    \n    for case_params in test_cases:\n        # 1. Calculate nominal f_star for the current case\n        f_star_nominal, _ = calculate_system_outputs(case_params)\n\n        # 2. Calculate all control coefficients\n        coeffs = []\n        params_list = list(case_params)\n\n        for i in range(len(params_list)):\n            p_i = params_list[i]\n            \n            # Create perturbed parameter lists\n            params_plus = params_list[:]\n            params_plus[i] = p_i * (1 + epsilon)\n            \n            params_minus = params_list[:]\n            params_minus[i] = p_i * (1 - epsilon)\n            \n            # Calculate perturbed fluxes\n            _, J_prime_plus = calculate_system_outputs(tuple(params_plus))\n            _, J_prime_minus = calculate_system_outputs(tuple(params_minus))\n            \n            # Calculate control coefficient using central difference on log-scale\n            if J_prime_plus > 0 and J_prime_minus > 0:\n                c_p_i = (np.log(J_prime_plus) - np.log(J_prime_minus)) / log_perturb_denom\n            else:\n                # This case should not be reached with the given test data,\n                # as all parameters that produce zero flux are positive.\n                c_p_i = 0.0\n            coeffs.append(c_p_i)\n            \n        # 3. Find the index of the parameter with the largest absolute control coefficient\n        abs_coeffs = [abs(c) for c in coeffs]\n        max_abs_coeff = 0.0\n        if abs_coeffs:\n            max_abs_coeff = max(abs_coeffs)\n\n        candidate_indices = []\n        for i, c_abs in enumerate(abs_coeffs):\n            if abs(c_abs - max_abs_coeff) < 1e-9:\n                candidate_indices.append(i)\n        \n        # Apply tie-breaking rule: choose the smallest index\n        dominant_index = min(candidate_indices)\n\n        # 4. Store the results for this case\n        f_star_rounded = round(f_star_nominal, 6)\n        results.append(f\"[{f_star_rounded},{dominant_index}]\")\n        \n    # Final print statement in the exact required format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2947610"}]}