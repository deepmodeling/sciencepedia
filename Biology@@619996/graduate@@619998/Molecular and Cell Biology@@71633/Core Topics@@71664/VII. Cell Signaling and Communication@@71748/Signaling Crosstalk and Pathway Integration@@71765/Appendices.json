{"hands_on_practices": [{"introduction": "Understanding signaling crosstalk begins with building quantitative models of specific molecular interactions. This first exercise guides you through modeling a classic example of inhibitory crosstalk: the suppression of the MAPK pathway by the PI3K-Akt pathway. By applying steady-state analysis to a mechanistically grounded, albeit hypothetical, model, you will derive how Akt-mediated phosphorylation of Raf-1 tunes the pathway's overall sensitivity to an input signal, a concept quantified using log-sensitivity analysis [@problem_id:2964750]. This practice builds foundational skills in translating biochemical mechanisms into mathematical expressions that predict systemic behavior.", "problem": "Epidermal Growth Factor (EGF) co-activates two signaling branches in many mammalian cells: the Ras–Raf–Mitogen-Activated Protein Kinase (MAPK) cascade culminating in Extracellular Signal-Regulated Kinase (ERK) activation, and the Phosphoinositide 3-kinase (PI3K)–protein kinase B (Akt) branch. Protein kinase B (Akt) phosphorylates Raf-1 (also called c-Raf) on an inhibitory site, reducing Raf-1’s catalytic efficiency. Consider a minimal, mechanistically grounded model linking these branches and quantify how this cross-inhibition modifies the effective gain of the MAPK pathway and the ERK sensitivity to EGF.\n\nAssume the following experimentally supported bases:\n- Receptor-proximal activation produces a Ras–guanosine triphosphate (Ras-GTP) fraction $r(u)$ that increases monotonically with EGF concentration $u$ and, near steady state, is well-approximated by a receptor occupancy form $r(u) = \\dfrac{u}{K_{R}+u}$, where $K_{R}$ is an apparent half-activation constant.\n- EGF also activates Akt with an activity $a(u)$ that follows a similar saturating form $a(u) = A_{\\max}\\dfrac{u}{K_{A}+u}$, where $A_{\\max}$ is the maximal Akt activity (in arbitrary activity units) and $K_{A}$ is the half-activation constant.\n- Raf-1 contains a single inhibitory phosphorylation site $P$ that is phosphorylated by Akt with an effective first-order rate constant $k_{A}\\,a(u)$ and dephosphorylated by a phosphatase with a first-order rate constant $k_{P}$. Let $f_{P}(u)$ denote the steady-state fraction of Raf-1 molecules that are phosphorylated at site $P$.\n- Only unphosphorylated Raf-1 contributes to downstream catalysis with catalytic constant $k_{\\text{cat}}$, so the effective catalytic constant is $k_{\\text{cat,eff}}(u) = k_{\\text{cat}}\\big(1-f_{P}(u)\\big)$.\n- Lumping downstream steps, assume ERK activation dynamics are dominated by an effective inflow proportional to $r(u)\\,k_{\\text{cat,eff}}(u)$ and a first-order deactivation with rate constant $k_{\\text{out}}$. At steady state, the active ERK level $E(u)$ is proportional to $r(u)\\,k_{\\text{cat,eff}}(u)$, with all proportionality constants independent of $u$.\n\nTasks:\n1. Starting from mass-action balance for a single-site kinase–phosphatase cycle at steady state, derive $f_{P}(u)$ in terms of $k_{A}$, $k_{P}$, and $a(u)$, and hence express $k_{\\text{cat,eff}}(u)$ as a function of $a(u)$.\n2. Using the definition of log-sensitivity (elasticity) $S(u) \\equiv \\dfrac{d\\ln E(u)}{d\\ln u}$, derive a closed-form expression for $S(u)$ in terms of $u$, $K_{R}$, $K_{A}$, $A_{\\max}$, $k_{A}$, and $k_{P}$.\n3. Evaluate $S(u)$ at $u=u_{0}$ with the parameter values $u_{0}=10$ nM, $K_{R}=5$ nM, $K_{A}=10$ nM, $A_{\\max}=1$ (arbitrary units), $k_{A}=3$ s$^{-1}$ per arbitrary unit of $a(u)$, and $k_{P}=1$ s$^{-1}$. Express your final sensitivity as a pure number (dimensionless). Provide the exact value; no rounding is required.", "solution": "The problem as stated is scientifically grounded, well-posed, objective, and internally consistent. It describes a simplified, yet mechanistically plausible, model of signaling crosstalk between the MAPK and PI3K/Akt pathways, which is a well-documented phenomenon in cell biology. The mathematical framework, based on mass-action kinetics and steady-state analysis, is standard and appropriate for the question. All necessary parameters and functional forms are provided for a unique solution to be determined. Therefore, the problem is valid and I will proceed with the solution.\n\nThe solution is structured into three parts as requested by the problem statement.\n\nTask $1$: Derivation of the steady-state phosphorylated fraction of Raf-$1$, $f_{P}(u)$, and the effective catalytic constant, $k_{\\text{cat,eff}}(u)$.\n\nLet $[Raf_{unP}]$ and $[Raf_{P}]$ denote the concentrations of Raf-$1$ that are unphosphorylated and phosphorylated at the inhibitory site $P$, respectively. The total concentration of Raf-$1$ is $[Raf]_{T} = [Raf_{unP}] + [Raf_{P}]$. The fraction of phosphorylated Raf-$1$ is defined as $f_{P}(u) = \\frac{[Raf_{P}]}{[Raf]_{T}}$. Consequently, the fraction of unphosphorylated Raf-$1$ is $1 - f_{P}(u) = \\frac{[Raf_{unP}]}{[Raf]_{T}}$.\n\nThe phosphorylation of Raf-$1$ by Akt is a first-order process with respect to $[Raf_{unP}]$, with a rate $v_{phos}$:\n$$v_{phos} = k_{A}\\,a(u)\\,[Raf_{unP}] = k_{A}\\,a(u)\\,(1 - f_{P}(u))\\,[Raf]_{T}$$\nThe dephosphorylation by a phosphatase is a first-order process with respect to $[Raf_{P}]$, with a rate $v_{dephos}$:\n$$v_{dephos} = k_{P}\\,[Raf_{P}] = k_{P}\\,f_{P}(u)\\,[Raf]_{T}$$\nAt steady state, the rate of phosphorylation equals the rate of dephosphorylation, $v_{phos} = v_{dephos}$:\n$$k_{A}\\,a(u)\\,(1 - f_{P}(u))\\,[Raf]_{T} = k_{P}\\,f_{P}(u)\\,[Raf]_{T}$$\nThe total concentration $[Raf]_{T}$ cancels from both sides, leaving an equation for $f_{P}(u)$:\n$$k_{A}\\,a(u)\\,(1 - f_{P}(u)) = k_{P}\\,f_{P}(u)$$\n$$k_{A}\\,a(u) - k_{A}\\,a(u)\\,f_{P}(u) = k_{P}\\,f_{P}(u)$$\nSolving for $f_{P}(u)$:\n$$k_{A}\\,a(u) = f_{P}(u)\\,(k_{P} + k_{A}\\,a(u))$$\n$$f_{P}(u) = \\frac{k_{A}\\,a(u)}{k_{P} + k_{A}\\,a(u)}$$\nThis expression gives the fraction of inhibited Raf-$1$ as a function of Akt activity $a(u)$.\n\nThe effective catalytic constant $k_{\\text{cat,eff}}(u)$ is proportional to the fraction of active (unphosphorylated) Raf-$1$:\n$$k_{\\text{cat,eff}}(u) = k_{\\text{cat}}\\big(1-f_{P}(u)\\big)$$\nWe can find an expression for $1 - f_{P}(u)$:\n$$1 - f_{P}(u) = 1 - \\frac{k_{A}\\,a(u)}{k_{P} + k_{A}\\,a(u)} = \\frac{(k_{P} + k_{A}\\,a(u)) - k_{A}\\,a(u)}{k_{P} + k_{A}\\,a(u)} = \\frac{k_{P}}{k_{P} + k_{A}\\,a(u)}$$\nSubstituting this into the expression for $k_{\\text{cat,eff}}(u)$:\n$$k_{\\text{cat,eff}}(u) = k_{\\text{cat}}\\left(\\frac{k_{P}}{k_{P} + k_{A}\\,a(u)}\\right)$$\nThis is the required expression for the effective catalytic constant as a function of $a(u)$.\n\nTask $2$: Derivation of the log-sensitivity $S(u)$.\n\nThe log-sensitivity (elasticity) of the ERK response $E(u)$ to the EGF stimulus $u$ is defined as:\n$$S(u) \\equiv \\frac{d\\ln E(u)}{d\\ln u}$$\nWe are given that $E(u)$ is proportional to the product of $r(u)$ and $k_{\\text{cat,eff}}(u)$. Let the proportionality constant be $\\gamma$.\n$$E(u) = \\gamma \\cdot r(u) \\cdot k_{\\text{cat,eff}}(u)$$\nTaking the natural logarithm of both sides:\n$$\\ln E(u) = \\ln(\\gamma) + \\ln(r(u)) + \\ln(k_{\\text{cat,eff}}(u))$$\nSince $\\gamma$ is a constant independent of $u$, its derivative with respect to $\\ln u$ is zero. Using the property of additivity of logarithms, the total sensitivity is the sum of the sensitivities of its components:\n$$S(u) = \\frac{d\\ln(r(u))}{d\\ln u} + \\frac{d\\ln(k_{\\text{cat,eff}}(u))}{d\\ln u}$$\nLet us denote these two terms as $S_{r}(u)$ and $S_{k}(u)$, respectively.\n$$S(u) = S_{r}(u) + S_{k}(u)$$\nFirst, we calculate $S_{r}(u)$:\n$$r(u) = \\frac{u}{K_{R}+u}$$\n$$\\ln(r(u)) = \\ln(u) - \\ln(K_{R}+u)$$\n$$S_{r}(u) = \\frac{d(\\ln u - \\ln(K_{R}+u))}{d\\ln u} = \\frac{d\\ln u}{d\\ln u} - \\frac{d\\ln(K_{R}+u)}{d\\ln u} = 1 - u \\frac{d\\ln(K_{R}+u)}{du} = 1 - u \\frac{1}{K_{R}+u} = \\frac{(K_{R}+u)-u}{K_{R}+u} = \\frac{K_{R}}{K_{R}+u}$$\nNext, we calculate $S_{k}(u)$. We can use the chain rule:\n$$S_{k}(u) = \\frac{d\\ln(k_{\\text{cat,eff}}(u))}{d\\ln u} = \\frac{d\\ln(k_{\\text{cat,eff}}(u))}{d\\ln(a(u))} \\cdot \\frac{d\\ln(a(u))}{d\\ln u}$$\nLet's evaluate each part. For the first part, using the expression for $k_{\\text{cat,eff}}$ in terms of $a(u)$:\n$$\\ln(k_{\\text{cat,eff}}(u)) = \\ln(k_{\\text{cat}}) + \\ln(k_{P}) - \\ln(k_{P} + k_{A}\\,a(u))$$\n$$\\frac{d\\ln(k_{\\text{cat,eff}}(u))}{d\\ln(a(u))} = a(u) \\cdot \\frac{d\\ln(k_{\\text{cat,eff}}(u))}{da(u)} = a(u) \\cdot \\left( -\\frac{k_{A}}{k_{P}+k_{A}\\,a(u)} \\right) = -\\frac{k_{A}\\,a(u)}{k_{P}+k_{A}\\,a(u)} = -f_{P}(u)$$\nFor the second part, we calculate the sensitivity of $a(u)$ to $u$:\n$$a(u) = A_{\\max}\\frac{u}{K_{A}+u}$$\n$$\\frac{d\\ln(a(u))}{d\\ln u} = \\frac{d(\\ln(A_{\\max}) + \\ln(u) - \\ln(K_{A}+u))}{d\\ln u} = 0 + 1 - \\frac{u}{K_{A}+u} = \\frac{K_{A}}{K_{A}+u}$$\nCombining these results for $S_{k}(u)$:\n$$S_{k}(u) = -f_{P}(u) \\cdot \\frac{K_{A}}{K_{A}+u}$$\nSubstituting the full expression for $f_{P}(u)$:\n$$f_{P}(u) = \\frac{k_{A}\\,a(u)}{k_{P} + k_{A}\\,a(u)} = \\frac{k_{A} A_{\\max} \\frac{u}{K_{A}+u}}{k_{P} + k_{A} A_{\\max} \\frac{u}{K_{A}+u}} = \\frac{k_{A} A_{\\max} u}{k_{P}(K_{A}+u) + k_{A} A_{\\max} u}$$\nThe total sensitivity $S(u)$ is:\n$$S(u) = S_{r}(u) + S_{k}(u) = \\frac{K_{R}}{K_{R}+u} - \\left( \\frac{k_{A} A_{\\max} u}{k_{P}(K_{A}+u) + k_{A} A_{\\max} u} \\right) \\left( \\frac{K_{A}}{K_{A}+u} \\right)$$\nThis is the closed-form expression for the log-sensitivity.\n\nTask $3$: Evaluation of $S(u)$ at $u=u_0$.\n\nWe are given the following parameter values:\n$u_0 = 10 \\text{ nM}$\n$K_{R} = 5 \\text{ nM}$\n$K_{A} = 10 \\text{ nM}$\n$A_{\\max} = 1$ (arbitrary unit)\n$k_{A} = 3 \\text{ s}^{-1}$ per arbitrary unit\n$k_{P} = 1 \\text{ s}^{-1}$\n\nWe evaluate each term in the expression for $S(u_0)$.\nThe first term, $S_{r}(u_0)$:\n$$S_{r}(u_0) = \\frac{K_{R}}{K_{R}+u_0} = \\frac{5}{5+10} = \\frac{5}{15} = \\frac{1}{3}$$\nThe second term, $S_{k}(u_0)$, is a product of two factors.\nThe first factor is $-f_{P}(u_0)$, which is $-\\left( \\frac{k_{A} A_{\\max} u_0}{k_{P}(K_{A}+u_0) + k_{A} A_{\\max} u_0} \\right)$:\nNumerator: $k_{A} A_{\\max} u_0 = (3)(1)(10) = 30$.\nDenominator: $k_{P}(K_{A}+u_0) + k_{A} A_{\\max} u_0 = (1)(10+10) + (3)(1)(10) = 20 + 30 = 50$.\nSo, $-f_{P}(u_0) = -\\frac{30}{50} = -\\frac{3}{5}$.\nThe second factor is $\\frac{K_{A}}{K_{A}+u_0}$:\n$$\\frac{K_{A}}{K_{A}+u_0} = \\frac{10}{10+10} = \\frac{10}{20} = \\frac{1}{2}$$\nThus, the second term for the total sensitivity is:\n$$S_{k}(u_0) = \\left(-\\frac{3}{5}\\right) \\cdot \\left(\\frac{1}{2}\\right) = -\\frac{3}{10}$$\nFinally, we sum the two terms to find the total sensitivity $S(u_0)$:\n$$S(u_0) = S_{r}(u_0) + S_{k}(u_0) = \\frac{1}{3} - \\frac{3}{10}$$\nTo subtract the fractions, we find a common denominator, which is $30$:\n$$S(u_0) = \\frac{10}{30} - \\frac{9}{30} = \\frac{1}{30}$$\nThe sensitivity is a dimensionless quantity, as expected. The result represents the fractional change in ERK activity for a small fractional change in EGF concentration. The positive sign indicates that the overall response is still activatory, but the inhibitory crosstalk has reduced its sensitivity from $\\frac{1}{3}$ to $\\frac{1}{30}$ at this particular concentration of EGF.", "answer": "$$\\boxed{\\frac{1}{30}}$$", "id": "2964750"}, {"introduction": "Beyond modeling known mechanisms, a key task is to infer the nature of crosstalk from experimental data. This problem introduces Bliss independence, a powerful null model used to predict the combined effect of two stimuli assuming they act independently [@problem_id:2964740]. By comparing hypothetical experimental observations from a co-stimulation experiment to the Bliss expectation, you will learn to quantify deviations that suggest pathway interaction. This exercise emphasizes the crucial distinction between direct biochemical crosstalk and non-additive effects that can arise from pathway architecture, such as competition for a shared, saturable component.", "problem": "Two growth factor ligands, denoted ligand $A$ and ligand $B$, each activate distinct receptor tyrosine kinases that converge on a common Mitogen-Activated Protein Kinase (MAPK) output. The measured output is the normalized fractional activation $E \\in [0,1]$, where $E=0$ is basal activity and $E=1$ is the saturating maximal response. When applied individually at concentration $x$ (for $A$) or $y$ (for $B$), their single-ligand dose-responses are well fit by Hill functions:\n- For ligand $A$: $E_{A}(x) = \\dfrac{x^{2}}{50^{2} + x^{2}}$ with $x$ in nM.\n- For ligand $B$: $E_{B}(y) = \\dfrac{y}{20 + y}$ with $y$ in nM.\n\nIn two independent co-stimulation experiments, the following dose pairs and observed combined normalized outputs were obtained:\n- Pair $1$: $(x,y) = (20\\,\\text{nM}, 10\\,\\text{nM})$ with observed $E_{AB,1}^{\\mathrm{obs}} = 0.420$.\n- Pair $2$: $(x,y) = (200\\,\\text{nM}, 100\\,\\text{nM})$ with observed $E_{AB,2}^{\\mathrm{obs}} = 0.950$.\n\nStarting from the independence principle for concurrent activators acting on a common output (i.e., the probability that the output is not activated by either input equals the product of the probabilities that it is not activated by each input individually), derive the Bliss independence expectation $E_{AB}^{\\mathrm{Bliss}}$ in terms of $E_A$ and $E_B$, and then compute the Bliss deviations $\\Delta_i = E_{AB,i}^{\\mathrm{obs}} - E_{AB,i}^{\\mathrm{Bliss}}$ for $i \\in \\{1,2\\}$ at the two dose pairs above. Report $(\\Delta_1,\\Delta_2)$ as a row matrix and round your results to $4$ significant figures. The deviations are dimensionless.\n\nFinally, based on first principles, state whether a nonzero Bliss deviation necessarily implies biochemical crosstalk between the two pathways, or whether it can arise from the presence of shared saturating downstream nodes that violate the independence assumption. Justify briefly using mechanistic reasoning rooted in resource limitation at a shared node. Your numerical answer must be the $(\\Delta_1,\\Delta_2)$ row matrix only; provide the interpretation in your derivation.", "solution": "The problem statement is scientifically grounded, mathematically well-posed, and contains no ambiguities or contradictions. It provides all necessary data and definitions for a rigorous solution. We shall proceed.\n\nThe first task is to derive the Bliss independence model from the stated first principle. Let $E_A$ and $E_B$ be the normalized fractional activation, which we interpret as the probability of activation by ligand $A$ at concentration $x$ and ligand $B$ at concentration $y$, respectively. The probability of the system *not* being activated by ligand $A$ is then $(1 - E_A)$, and by ligand $B$ is $(1 - E_B)$.\n\nThe principle of independence states that the probability of the system not being activated by the combination of ligands is the product of the probabilities of it not being activated by each ligand individually. Let $E_{AB}^{\\mathrm{Bliss}}$ be the predicted combined activation under this assumption. The probability of the system *not* being activated by the combination is $(1 - E_{AB}^{\\mathrm{Bliss}})$. Thus, we can write:\n$$1 - E_{AB}^{\\mathrm{Bliss}} = (1 - E_A(x)) \\cdot (1 - E_B(y))$$\nSolving for $E_{AB}^{\\mathrm{Bliss}}$ yields the expression for Bliss independence:\n$$E_{AB}^{\\mathrm{Bliss}} = 1 - (1 - E_A(x))(1 - E_B(y))$$\nExpanding this expression gives the equivalent form:\n$$E_{AB}^{\\mathrm{Bliss}} = 1 - (1 - E_A(x) - E_B(y) + E_A(x)E_B(y)) = E_A(x) + E_B(y) - E_A(x)E_B(y)$$\n\nNext, we must compute the Bliss deviations, $\\Delta_i = E_{AB,i}^{\\mathrm{obs}} - E_{AB,i}^{\\mathrm{Bliss}}$, for the two given experimental conditions.\n\nFor experiment pair $1$: $(x,y) = (20\\,\\text{nM}, 10\\,\\text{nM})$.\nFirst, we calculate the individual activation levels, $E_A$ and $E_B$.\n$$E_{A,1} = E_A(20) = \\frac{20^2}{50^2 + 20^2} = \\frac{400}{2500 + 400} = \\frac{400}{2900} = \\frac{4}{29}$$\n$$E_{B,1} = E_B(10) = \\frac{10}{20 + 10} = \\frac{10}{30} = \\frac{1}{3}$$\nNow, we compute the expected Bliss response:\n$$E_{AB,1}^{\\mathrm{Bliss}} = E_{A,1} + E_{B,1} - E_{A,1}E_{B,1} = \\frac{4}{29} + \\frac{1}{3} - \\left(\\frac{4}{29}\\right)\\left(\\frac{1}{3}\\right) = \\frac{12+29}{87} - \\frac{4}{87} = \\frac{41}{87} - \\frac{4}{87} = \\frac{37}{87}$$\nThe numerical value is $E_{AB,1}^{\\mathrm{Bliss}} \\approx 0.425287$.\nThe observed response is given as $E_{AB,1}^{\\mathrm{obs}} = 0.420$. The deviation $\\Delta_1$ is:\n$$\\Delta_1 = E_{AB,1}^{\\mathrm{obs}} - E_{AB,1}^{\\mathrm{Bliss}} = 0.420 - \\frac{37}{87} \\approx 0.420 - 0.425287 = -0.00528735...$$\nRounding to $4$ significant figures, we get $\\Delta_1 = -0.005287$.\n\nFor experiment pair $2$: $(x,y) = (200\\,\\text{nM}, 100\\,\\text{nM})$.\nAgain, we compute the individual activation levels:\n$$E_{A,2} = E_A(200) = \\frac{200^2}{50^2 + 200^2} = \\frac{40000}{2500 + 40000} = \\frac{40000}{42500} = \\frac{400}{425} = \\frac{16}{17}$$\n$$E_{B,2} = E_B(100) = \\frac{100}{20 + 100} = \\frac{100}{120} = \\frac{5}{6}$$\nNow, we compute the expected Bliss response:\n$$E_{AB,2}^{\\mathrm{Bliss}} = E_{A,2} + E_{B,2} - E_{A,2}E_{B,2} = \\frac{16}{17} + \\frac{5}{6} - \\left(\\frac{16}{17}\\right)\\left(\\frac{5}{6}\\right) = \\frac{96+85}{102} - \\frac{80}{102} = \\frac{181}{102} - \\frac{80}{102} = \\frac{101}{102}$$\nThe numerical value is $E_{AB,2}^{\\mathrm{Bliss}} \\approx 0.990196$.\nThe observed response is given as $E_{AB,2}^{\\mathrm{obs}} = 0.950$. The deviation $\\Delta_2$ is:\n$$\\Delta_2 = E_{AB,2}^{\\mathrm{obs}} - E_{AB,2}^{\\mathrm{Bliss}} = 0.950 - \\frac{101}{102} \\approx 0.950 - 0.990196 = -0.04019607...$$\nRounding to $4$ significant figures, we get $\\Delta_2 = -0.04020$.\n\nFinally, we address the conceptual question. A nonzero Bliss deviation indicates a violation of the statistical independence assumption on which the model is built. However, it does **not** necessarily imply direct biochemical crosstalk (e.g., one pathway's components chemically modifying the other's). Such a deviation can, and often does, arise from the network topology itself, specifically when pathways converge on a common, saturable node.\n\nThe Bliss model implicitly assumes that the capacity of the system to respond to one stimulus is unaffected by its concurrent response to another. This is a reasonable approximation at low signal levels where system components are far from saturation. The small deviation $\\Delta_1$ at low concentrations is consistent with this.\n\nHowever, at high signal levels, as in the second experiment, both pathways strongly drive the shared MAPK output. Any shared component in the pathway, including the final MAPK node itself, has a finite number of molecules and a maximum processing rate (i.e., it is saturable). When both pathways attempt to utilize this limited resource at high intensity, they compete. This competition for a finite resource pool causes the combined effect to be less than the sum of independent probabilities would predict, leading to a negative deviation ($\\Delta  0$). This phenomenon is a form of antagonism that arises from resource limitation, not from direct inhibitory crosstalk. The observed negative deviation $\\Delta_2 = -0.04020$ at high concentrations is a classic signature of such saturation at a shared node. Therefore, a nonzero Bliss deviation is an indicator of pathway interaction, but this interaction can be structural (due to shared, saturable nodes) rather than a direct biochemical crosstalk mechanism.", "answer": "$$\\boxed{\\begin{pmatrix} -0.005287  -0.04020 \\end{pmatrix}}$$", "id": "2964740"}, {"introduction": "Cellular responses are inherently stochastic, and crosstalk can profoundly influence this variability to shape population-level outcomes like cell fate decisions. This practice moves from deterministic averages to the world of stochastic simulation, where you will implement the Gillespie algorithm to explore how mutual inhibitory crosstalk alters the dynamics of a simple decision circuit within a thought experiment [@problem_id:2964675]. You will quantify the resulting shift in the distribution of cell fates using the Jensen-Shannon divergence, a metric from information theory. This computational exercise provides hands-on experience in connecting network topology, noise, and the probabilistic nature of cellular decision-making.", "problem": "Consider a minimal stochastic model of two signaling pathways, denoted by species $X$ and $Y$, that integrate upstream inputs to determine a cell fate. The state is the molecule counts $(X(t), Y(t)) \\in \\mathbb{Z}_{\\ge 0}^2$ evolving in continuous time $t \\in \\mathbb{R}_{\\ge 0}$ as a continuous-time Markov chain governed by the Chemical Master Equation under the following reactions with propensities defined at state $(x,y)$:\n- Synthesis of $X$: $a_{X}^{+}(x,y) = k_{X}\\, s_{X}\\, f_{\\mathrm{inh}}(y;\\gamma, K, n) + k_{0X}$.\n- Degradation of $X$: $a_{X}^{-}(x,y) = d_{X}\\, x$.\n- Synthesis of $Y$: $a_{Y}^{+}(x,y) = k_{Y}\\, s_{Y}\\, f_{\\mathrm{inh}}(x;\\gamma, K, n) + k_{0Y}$.\n- Degradation of $Y$: $a_{Y}^{-}(x,y) = d_{Y}\\, y$.\n\nHere $f_{\\mathrm{inh}}(z;\\gamma, K, n) = \\dfrac{1}{1 + \\gamma \\left(\\dfrac{z}{K}\\right)^{n}}$ is a phenomenological inhibitory crosstalk function with strength parameter $\\gamma \\ge 0$, half-effect parameter $K > 0$, and Hill coefficient $n \\ge 1$. All rate constants and time are dimensionless. The initial condition is $X(0) = 0$ and $Y(0) = 0$.\n\nCell fate is decided at a fixed decision time $T_{\\mathrm{dec}}$ by a thresholded difference rule:\n- If $X(T_{\\mathrm{dec}}) - Y(T_{\\mathrm{dec}}) \\ge \\theta$, the fate is $F_{X}$.\n- Else if $Y(T_{\\mathrm{dec}}) - X(T_{\\mathrm{dec}}) \\ge \\theta$, the fate is $F_{Y}$.\n- Otherwise, the fate is $F_{U}$ (undecided).\n\nTo quantify how crosstalk-induced feedback alters the distribution of cell fate choices relative to independent pathways, compare two conditions:\n- Crosstalk condition: use the specified $\\gamma > 0$.\n- Independent condition: set $\\gamma = 0$, which yields $f_{\\mathrm{inh}}(z;0,K,n) = 1$ and thus removes crosstalk.\n\nFor each condition, estimate the empirical distribution over the $3$ fates, $p = [p_{X}, p_{Y}, p_{U}]$, by running $N$ independent trajectories using the Stochastic Simulation Algorithm (also known as the Gillespie algorithm) up to time $T_{\\mathrm{dec}}$. Use the same model parameters and inputs in both conditions except for $\\gamma$.\n\nQuantify the distributional change using two scalar metrics:\n- The Jensen–Shannon divergence (in nats, using the natural logarithm) between the two empirical distributions $p^{\\mathrm{cross}}$ and $p^{\\mathrm{ind}}$,\n$$\n\\mathrm{JSD}(p^{\\mathrm{cross}}, p^{\\mathrm{ind}}) = \\tfrac{1}{2}\\,\\mathrm{KL}\\!\\left(p^{\\mathrm{cross}} \\middle\\| m \\right) + \\tfrac{1}{2}\\,\\mathrm{KL}\\!\\left(p^{\\mathrm{ind}} \\middle\\| m \\right),\n$$\nwhere $m = \\tfrac{1}{2}\\left(p^{\\mathrm{cross}} + p^{\\mathrm{ind}}\\right)$ and $\\mathrm{KL}(p \\| q) = \\sum_{i} p_{i}\\,\\ln\\!\\left(\\dfrac{p_{i}}{q_{i}}\\right)$ with the convention that terms with $p_{i} = 0$ contribute $0$.\n- The change in the probability of the $F_{X}$ fate, defined as $\\Delta_{X} = p_{X}^{\\mathrm{cross}} - p_{X}^{\\mathrm{ind}}$.\n\nFundamental base to use: the Chemical Master Equation under mass-action-like stochastic kinetics, the definition of the Stochastic Simulation Algorithm for exact sampling of waiting times and reaction channels, and the definitions of Kullback–Leibler divergence and Jensen–Shannon divergence.\n\nYou must implement an exact Stochastic Simulation Algorithm for the above model in code and compute the specified metrics for each parameter set in the test suite below. All rates and times are dimensionless; do not use any physical units.\n\nUse the following fixed model parameters for all test cases:\n- $k_{X} = 1.2$, $k_{Y} = 1.2$.\n- $d_{X} = 0.06$, $d_{Y} = 0.06$.\n- $k_{0X} = 0.05$, $k_{0Y} = 0.05$.\n- $K = 30.0$, $n = 2$.\n- Decision threshold $\\theta = 3$.\n\nUse the following test suite of parameter sets specifying the upstream input strengths $(s_{X}, s_{Y})$, the crosstalk strength $\\gamma$ for the crosstalk condition, decision time $T_{\\mathrm{dec}}$, number of trajectories $N$, and the random seed for reproducibility. For the independent condition in each test case, set $\\gamma = 0$ and use the seed incremented by $1$.\n\n- Test case $1$: $(s_{X}, s_{Y}) = (1.0, 1.0)$, $\\gamma = 2.0$, $T_{\\mathrm{dec}} = 40.0$, $N = 200$, seed $= 12345$.\n- Test case $2$: $(s_{X}, s_{Y}) = (1.25, 0.75)$, $\\gamma = 3.0$, $T_{\\mathrm{dec}} = 40.0$, $N = 200$, seed $= 22345$.\n- Test case $3$: $(s_{X}, s_{Y}) = (1.0, 1.0)$, $\\gamma = 0.5$, $T_{\\mathrm{dec}} = 40.0$, $N = 200$, seed $= 32345$.\n\nProgram requirements:\n- Implement the Stochastic Simulation Algorithm exactly, with exponentially distributed waiting times $\\tau \\sim \\mathrm{Exp}(a_{0})$, where $a_{0} = a_{X}^{+} + a_{X}^{-} + a_{Y}^{+} + a_{Y}^{-}$, and select the reaction channel according to the normalized propensities.\n- For each test case, compute $\\mathrm{JSD}(p^{\\mathrm{cross}}, p^{\\mathrm{ind}})$ and $\\Delta_{X}$ as defined.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with entries ordered as $[\\mathrm{JSD}_{1}, \\Delta_{X,1}, \\mathrm{JSD}_{2}, \\Delta_{X,2}, \\mathrm{JSD}_{3}, \\Delta_{X,3}]$.\n\nAll numeric answers must be provided as plain decimal numbers without any unit symbols or percentage signs. Angles are not involved. The results must be reproducible given the specified seeds.", "solution": "The problem is well-defined, scientifically grounded in the theory of stochastic chemical kinetics, and computationally tractable. A solution is constructed by implementing the Stochastic Simulation Algorithm (SSA) to simulate the system's trajectories and then applying statistical methods to analyze the outcomes.\n\nThe state of the system at any time $t$ is the vector of integer molecule counts $(X(t), Y(t))$. The system evolves according to four fundamental reactions: synthesis and degradation for each species, $X$ and $Y$. The propensities, or instantaneous probabilities of these reactions occurring, are defined at state $(x, y)$ as follows:\n- Synthesis of $X$: $a_{X}^{+}(x,y) = k_{X}\\, s_{X}\\, f_{\\mathrm{inh}}(y;\\gamma, K, n) + k_{0X}$\n- Degradation of $X$: $a_{X}^{-}(x,y) = d_{X}\\, x$\n- Synthesis of $Y$: $a_{Y}^{+}(x,y) = k_{Y}\\, s_{Y}\\, f_{\\mathrm{inh}}(x;\\gamma, K, n) + k_{0Y}$\n- Degradation of $Y$: $a_{Y}^{-}(x,y) = d_{Y}\\, y$\n\nThe inhibitory crosstalk is mediated by the function $f_{\\mathrm{inh}}(z;\\gamma, K, n) = \\dfrac{1}{1 + \\gamma \\left(\\frac{z}{K}\\right)^{n}}$. When the crosstalk strength $\\gamma = 0$, this function becomes $f_{\\mathrm{inh}} = 1$, and the synthesis rates become independent of the other species' concentration.\n\nThe Stochastic Simulation Algorithm provides a method to generate statistically exact trajectories of this Markov chain. The procedure for a single trajectory is as follows:\n1.  Initialize the system state to $(X(0), Y(0)) = (0, 0)$ and time $t = 0$.\n2.  While the simulation time $t$ is less than the decision time $T_{\\mathrm{dec}}$:\n    a. At the current state $(x, y)$, calculate the four propensity functions $a_{X}^{+}$, $a_{X}^{-}$, $a_{Y}^{+}$, $a_{Y}^{-}$.\n    b. Calculate the total propensity $a_{0} = a_{X}^{+} + a_{X}^{-} + a_{Y}^{+} + a_{Y}^{-}$. Since the basal synthesis rates $k_{0X}$ and $k_{0Y}$ are positive, $a_0$ will always be greater than zero.\n    c. Sample a time-to-next-reaction, $\\tau$, from an exponential distribution with rate $a_{0}$. This is computed as $\\tau = \\frac{1}{a_{0}} \\ln(\\frac{1}{r_{1}})$, where $r_{1}$ is a random number drawn from a uniform distribution $U(0, 1)$.\n    d. Update the time: $t \\leftarrow t + \\tau$. If the new $t  T_{\\mathrm{dec}}$, the simulation for this trajectory ends. The state of the system at $T_{\\mathrm{dec}}$ is the state $(x,y)$ just before this final time update.\n    e. Sample which reaction occurs. This is done by drawing a second uniform random number $r_{2} \\sim U(0, 1)$ and partitioning the interval $[0, a_{0})$ according to the individual propensities:\n        - If $r_{2} \\cdot a_{0}  a_{X}^{+}$, the reaction is the synthesis of $X$, and the state is updated to $(x+1, y)$.\n        - If $a_{X}^{+} \\le r_{2} \\cdot a_{0}  a_{X}^{+} + a_{X}^{-}$, the reaction is the degradation of $X$, and the state becomes $(x-1, y)$.\n        - If $a_{X}^{+} + a_{X}^{-} \\le r_{2} \\cdot a_{0}  a_{X}^{+} + a_{X}^{-} + a_{Y}^{+}$, the reaction is the synthesis of $Y$, updating the state to $(x, y+1)$.\n        - Otherwise, the reaction is the degradation of $Y$, updating the state to $(x, y-1)$.\n3.  The final state $(X(T_{\\mathrm{dec}}), Y(T_{\\mathrm{dec}}))$ is the state of the system at the conclusion of the loop.\n\nThis entire simulation process is repeated for $N$ independent trajectories. For each trajectory, the final state is categorized into one of three fates based on the decision rule:\n- Fate $F_{X}$: $X(T_{\\mathrm{dec}}) - Y(T_{\\mathrm{dec}}) \\ge \\theta$\n- Fate $F_{Y}$: $Y(T_{\\mathrm{dec}}) - X(T_{\\mathrm{dec}}) \\ge \\theta$\n- Fate $F_{U}$: otherwise\n\nBy counting the number of trajectories that result in each fate ($N_{X}, N_{Y}, N_{U}$), we estimate the empirical fate probability distribution $p = [p_{X}, p_{Y}, p_{U}]$, where $p_{i} = N_{i}/N$. This procedure is performed for both the crosstalk condition (using the given $\\gamma  0$) and the independent condition ($\\gamma = 0$), yielding distributions $p^{\\mathrm{cross}}$ and $p^{\\mathrm{ind}}$.\n\nFinally, the two specified metrics are computed.\n- The Jensen-Shannon Divergence (JSD), a symmetrized measure of the difference between two probability distributions. Given $p^{\\mathrm{cross}}$ and $p^{\\mathrm{ind}}$, we first compute their mixture $m = \\frac{1}{2}(p^{\\mathrm{cross}} + p^{\\mathrm{ind}})$. The JSD is then:\n$$\n\\mathrm{JSD}(p^{\\mathrm{cross}} \\| p^{\\mathrm{ind}}) = \\frac{1}{2} \\mathrm{KL}(p^{\\mathrm{cross}} \\| m) + \\frac{1}{2} \\mathrm{KL}(p^{\\mathrm{ind}} \\| m)\n$$\nwhere $\\mathrm{KL}(p \\| q) = \\sum_{i} p_{i} \\ln(\\frac{p_{i}}{q_{i}})$ is the Kullback-Leibler divergence. The computation must handle cases where a probability $p_i$ is zero. This is done by using the convention that $0 \\ln(0/q_i) = 0$.\n- The change in the probability of fate $F_{X}$, which is a simple difference:\n$$\n\\Delta_{X} = p_{X}^{\\mathrm{cross}} - p_{X}^{\\mathrm{ind}}\n$$\nThis entire process is repeated for each parameter set provided in the test suite, using the specified random seeds for reproducibility.", "answer": "```python\nimport numpy as np\nfrom scipy.special import rel_entr\n\ndef solve():\n    \"\"\"\n    Solves the problem by running stochastic simulations for each test case\n    and computing the required metrics.\n    \"\"\"\n    \n    # Fixed model parameters for all test cases\n    k_X = 1.2\n    k_Y = 1.2\n    d_X = 0.06\n    d_Y = 0.06\n    k_0X = 0.05\n    k_0Y = 0.05\n    K = 30.0\n    n = 2\n    theta = 3.0\n\n    # Test cases from the problem statement\n    test_cases = [\n        {'s_X': 1.0, 's_Y': 1.0, 'gamma_cross': 2.0, 'T_dec': 40.0, 'N': 200, 'seed': 12345},\n        {'s_X': 1.25, 's_Y': 0.75, 'gamma_cross': 3.0, 'T_dec': 40.0, 'N': 200, 'seed': 22345},\n        {'s_X': 1.0, 's_Y': 1.0, 'gamma_cross': 0.5, 'T_dec': 40.0, 'N': 200, 'seed': 32345},\n    ]\n\n    all_results = []\n\n    def run_single_trajectory(s_X, s_Y, gamma, T_dec, rng):\n        \"\"\"\n        Runs a single trajectory of the stochastic simulation algorithm (Gillespie).\n        \"\"\"\n        t, x, y = 0.0, 0, 0\n\n        while t  T_dec:\n            # Calculate propensities\n            f_inh_y = 1.0 / (1.0 + gamma * (y / K)**n) if y  0 else 1.0\n            f_inh_x = 1.0 / (1.0 + gamma * (x / K)**n) if x  0 else 1.0\n\n            a_X_plus = k_X * s_X * f_inh_y + k_0X\n            a_X_minus = d_X * x\n            a_Y_plus = k_Y * s_Y * f_inh_x + k_0Y\n            a_Y_minus = d_Y * y\n\n            a_total = a_X_plus + a_X_minus + a_Y_plus + a_Y_minus\n            \n            # Since k_0X and k_0Y are positive, a_total is always positive.\n\n            # Sample time to next reaction\n            r1 = rng.random()\n            tau = (1.0 / a_total) * np.log(1.0 / r1)\n\n            # Store current state as final if time exceeds T_dec\n            if t + tau = T_dec:\n                break\n            \n            t += tau\n\n            # Sample which reaction occurs\n            r2 = rng.random()\n            reaction_val = r2 * a_total\n\n            if reaction_val  a_X_plus:\n                x += 1\n            elif reaction_val  a_X_plus + a_X_minus:\n                x -= 1\n            elif reaction_val  a_X_plus + a_X_minus + a_Y_plus:\n                y += 1\n            else:\n                y -= 1\n\n        return x, y\n\n    def get_fate_distribution(N, seed, s_X, s_Y, gamma, T_dec):\n        \"\"\"\n        Runs N simulations and computes the empirical fate distribution.\n        \"\"\"\n        rng = np.random.default_rng(seed)\n        fate_counts = np.zeros(3, dtype=np.int32)  # [Fate X, Fate Y, Fate U]\n\n        for _ in range(N):\n            x_final, y_final = run_single_trajectory(s_X, s_Y, gamma, T_dec, rng)\n            \n            diff = x_final - y_final\n            if diff = theta:\n                fate_counts[0] += 1\n            elif -diff = theta: # i.e., y_final - x_final = theta\n                fate_counts[1] += 1\n            else:\n                fate_counts[2] += 1\n\n        return fate_counts / N\n\n    def calculate_jsd(p, q):\n        \"\"\"\n        Calculates the Jensen-Shannon Divergence between two distributions.\n        \"\"\"\n        m = 0.5 * (p + q)\n        kl_p_m = np.sum(rel_entr(p, m))\n        kl_q_m = np.sum(rel_entr(q, m))\n        return 0.5 * (kl_p_m + kl_q_m)\n\n    for case in test_cases:\n        s_X, s_Y, gamma_cross, T_dec, N, seed = \\\n            case['s_X'], case['s_Y'], case['gamma_cross'], case['T_dec'], case['N'], case['seed']\n\n        # Crosstalk condition\n        p_cross = get_fate_distribution(N, seed, s_X, s_Y, gamma_cross, T_dec)\n\n        # Independent condition\n        p_ind = get_fate_distribution(N, seed + 1, s_X, s_Y, 0.0, T_dec)\n        \n        # Calculate metrics\n        jsd = calculate_jsd(p_cross, p_ind)\n        delta_X = p_cross[0] - p_ind[0]\n        \n        all_results.extend([jsd, delta_X])\n\n    # Format the final output string\n    output_str = \",\".join(f\"{res:.8f}\" for res in all_results)\n    print(f\"[{output_str}]\")\n\n\nsolve()\n```", "id": "2964675"}]}