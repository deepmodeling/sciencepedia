{"hands_on_practices": [{"introduction": "Understanding the origin of the resting membrane potential is the first step toward understanding all of cellular electrophysiology. This practice guides you through the chord conductance model, which provides an intuitive and powerful framework for calculating the steady-state potential of a cell based on the contributions of different ion channels [@problem_id:2950161]. By treating the membrane as a parallel circuit, you will see how the cell's potential settles at a value that reflects a weighted average of the equilibrium potentials for each ion, providing a quantitative foundation for why neurons are typically negative at rest.", "problem": "A small isopotential cell at thermal equilibrium is bathed in fixed extracellular and intracellular ionic solutions such that the Nernst reversal potentials for potassium, sodium, and chloride are constant at $E_{\\text{K}}=-90\\ \\text{mV}$, $E_{\\text{Na}}=+60\\ \\text{mV}$, and $E_{\\text{Cl}}=-65\\ \\text{mV}$, respectively. The membrane expresses ohmic potassium, sodium, and chloride channels whose open-channel conductances are constant in time and voltage independent, with values $g_{\\text{K}}=10\\ \\text{nS}$, $g_{\\text{Na}}=1\\ \\text{nS}$, and $g_{\\text{Cl}}=3\\ \\text{nS}$. Assume the membrane is otherwise passive, that the only transmembrane currents are the ionic currents through these channels, and that the contribution of any electrogenic pumps is negligible on the timescale of interest. The resting potential $V_{\\text{rest}}$ is defined as the steady state at which the membrane potential is time invariant.\n\nStarting from conservation of charge at the membrane and the linear (ohmic) current-voltage relation for each ionic species, derive an expression for the steady-state membrane potential $V_{\\text{rest}}$ in terms of $\\{g_{i}\\}$ and $\\{E_{i}\\}$ and then evaluate it numerically using the given parameters. Round your final numerical result to four significant figures and express it in $\\text{mV}$.", "solution": "The problem presented is a standard, well-posed exercise in quantitative membrane biophysics and is therefore valid. We shall proceed with its formal derivation and solution.\n\nThe fundamental principle governing the membrane potential in a steady state is the conservation of charge. For a small isopotential cell, the membrane acts as a capacitor. The rate of change of the membrane potential, $V_m$, is related to the total transmembrane current, $I_{\\text{total}}$, and the membrane capacitance, $C_m$, by the equation:\n$$ C_m \\frac{dV_m}{dt} = -I_{\\text{total}} $$\nThe problem defines the resting potential, $V_{\\text{rest}}$, as the steady state where the membrane potential is time-invariant. This condition, $\\frac{dV_m}{dt} = 0$, implies that the total transmembrane current must be zero:\n$$ I_{\\text{total}} = 0 $$\nThe problem states that the only significant currents are the ionic currents through potassium ($K^+$), sodium ($Na^+$), and chloride ($Cl^-$) channels. Therefore, the total current is the algebraic sum of these individual ionic currents:\n$$ I_{\\text{total}} = I_{\\text{K}} + I_{\\text{Na}} + I_{\\text{Cl}} = 0 $$\nEach ionic current, $I_i$, is described by a linear, ohmic current-voltage relationship. The current for a given ionic species $i$ is the product of its conductance, $g_i$, and its electrochemical driving force, $(V_m - E_i)$, where $E_i$ is the Nernst reversal potential for that ion.\n$$ I_i = g_i (V_m - E_i) $$\nThis relation holds for all ions, irrespective of their charge. The sign of the ionic charge is implicitly accounted for in the value of the Nernst potential, $E_i$.\n\nSubstituting the ohmic relations for $I_{\\text{K}}$, $I_{\\text{Na}}$, and $I_{\\text{Cl}}$ into the zero-current condition, we have:\n$$ g_{\\text{K}}(V_m - E_{\\text{K}}) + g_{\\text{Na}}(V_m - E_{\\text{Na}}) + g_{\\text{Cl}}(V_m - E_{\\text{Cl}}) = 0 $$\nAt steady state, the membrane potential $V_m$ is the resting potential, $V_{\\text{rest}}$. Substituting $V_m = V_{\\text{rest}}$:\n$$ g_{\\text{K}}(V_{\\text{rest}} - E_{\\text{K}}) + g_{\\text{Na}}(V_{\\text{rest}} - E_{\\text{Na}}) + g_{\\text{Cl}}(V_{\\text{rest}} - E_{\\text{Cl}}) = 0 $$\nThis is a linear algebraic equation for $V_{\\text{rest}}$. To solve for $V_{\\text{rest}}$, we expand the equation:\n$$ g_{\\text{K}}V_{\\text{rest}} - g_{\\text{K}}E_{\\text{K}} + g_{\\text{Na}}V_{\\text{rest}} - g_{\\text{Na}}E_{\\text{Na}} + g_{\\text{Cl}}V_{\\text{rest}} - g_{\\text{Cl}}E_{\\text{Cl}} = 0 $$\nNext, we consolidate terms containing $V_{\\text{rest}}$ on one side of the equation and all other terms on the opposite side:\n$$ (g_{\\text{K}} + g_{\\text{Na}} + g_{\\text{Cl}}) V_{\\text{rest}} = g_{\\text{K}}E_{\\text{K}} + g_{\\text{Na}}E_{\\text{Na}} + g_{\\text{Cl}}E_{\\text{Cl}} $$\nIsolating $V_{\\text{rest}}$ yields the general expression for the resting potential as a weighted average of the Nernst potentials, where the conductances serve as the weighting factors. This is a form of the chord conductance equation:\n$$ V_{\\text{rest}} = \\frac{g_{\\text{K}}E_{\\text{K}} + g_{\\text{Na}}E_{\\text{Na}} + g_{\\text{Cl}}E_{\\text{Cl}}}{g_{\\text{K}} + g_{\\text{Na}} + g_{\\text{Cl}}} $$\nThis expression represents the first part of the required answer.\n\nFor the second part, we substitute the given numerical values into this derived expression. The parameters are:\n- $E_{\\text{K}} = -90\\ \\text{mV}$\n- $E_{\\text{Na}} = +60\\ \\text{mV}$\n- $E_{\\text{Cl}} = -65\\ \\text{mV}$\n- $g_{\\text{K}} = 10\\ \\text{nS}$\n- $g_{\\text{Na}} = 1\\ \\text{nS}$\n- $g_{\\text{Cl}} = 3\\ \\text{nS}$\n\nFirst, we calculate the numerator, which is the sum of the products of conductance and Nernst potential for each ion:\n$$ \\text{Numerator} = (10\\ \\text{nS})(-90\\ \\text{mV}) + (1\\ \\text{nS})(60\\ \\text{mV}) + (3\\ \\text{nS})(-65\\ \\text{mV}) $$\n$$ \\text{Numerator} = -900\\ \\text{nS} \\cdot \\text{mV} + 60\\ \\text{nS} \\cdot \\text{mV} - 195\\ \\text{nS} \\cdot \\text{mV} $$\n$$ \\text{Numerator} = -1035\\ \\text{nS} \\cdot \\text{mV} $$\nNext, we calculate the denominator, which is the total membrane conductance:\n$$ \\text{Denominator} = 10\\ \\text{nS} + 1\\ \\text{nS} + 3\\ \\text{nS} $$\n$$ \\text{Denominator} = 14\\ \\text{nS} $$\nNow we compute the value of $V_{\\text{rest}}$:\n$$ V_{\\text{rest}} = \\frac{-1035\\ \\text{nS} \\cdot \\text{mV}}{14\\ \\text{nS}} $$\n$$ V_{\\text{rest}} = -\\frac{1035}{14}\\ \\text{mV} \\approx -73.92857\\ \\text{mV} $$\nThe problem requires the result to be rounded to four significant figures.\n$$ V_{\\text{rest}} \\approx -73.93\\ \\text{mV} $$\nThis value represents the steady-state membrane potential at which the net influx of charge carried by sodium ions is exactly balanced by the net efflux of charge carried by potassium and chloride ions, resulting in zero total current across the membrane.", "answer": "$$\n\\boxed{-73.93}\n$$", "id": "2950161"}, {"introduction": "Building on the concept of a steady-state potential, we now turn to a more physically detailed model: the Goldman-Hodgkin-Katz (GHK) voltage equation. This exercise not only involves calculating the membrane potential based on ionic permeabilities but also delves into a powerful quantitative method, sensitivity analysis, to determine exactly how much the potential changes in response to a change in a specific ion's permeability [@problem_id:2950115]. This practice is essential for understanding the biophysical mechanisms underlying depolarization and how subtle molecular changes can have significant effects on neuronal function.", "problem": "A spherical neuron at steady state is permeable to sodium, potassium, and chloride ions. Assume constant field conditions and electroneutral bulk solutions so that the Goldman–Hodgkin–Katz (GHK) voltage equation is applicable. The extracellular and intracellular ionic activities can be taken as equal to concentrations. The temperature is $T=310.15\\,\\text{K}$, the universal gas constant is $R=8.314\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}$, and the Faraday constant is $F=96485\\,\\text{C}\\,\\text{mol}^{-1}$.\n\nBaseline conditions:\n- Extracellular concentrations: $\\left[\\mathrm{K}^{+}\\right]_{o}=5.0\\,\\text{mM}$, $\\left[\\mathrm{Na}^{+}\\right]_{o}=145.0\\,\\text{mM}$, $\\left[\\mathrm{Cl}^{-}\\right]_{o}=110.0\\,\\text{mM}$.\n- Intracellular concentrations: $\\left[\\mathrm{K}^{+}\\right]_{i}=140.0\\,\\text{mM}$, $\\left[\\mathrm{Na}^{+}\\right]_{i}=12.0\\,\\text{mM}$, $\\left[\\mathrm{Cl}^{-}\\right]_{i}=10.0\\,\\text{mM}$.\n- Baseline relative permeabilities: $P_{\\mathrm{K}}=1.00$, $P_{\\mathrm{Na}}=0.0400$, $P_{\\mathrm{Cl}}=0.450$.\n\nTasks:\n1. Using first principles and well-tested formulas, obtain the resting membrane potential $V_{m}$ from the GHK voltage framework under the baseline conditions. Be explicit about the placement of chloride terms given its negative valence.\n2. Analyze how a twofold increase in sodium permeability to $P_{\\mathrm{Na}}=2\\times 0.0400$ alters $V_{m}$ under the same conditions; report the new $V_{m}$ and the change relative to baseline.\n3. Starting from the GHK framework and using symbolic calculus, derive an analytic expression for the sensitivity $\\partial V_{m}/\\partial \\ln P_{\\mathrm{Na}}$ evaluated at the baseline permeabilities, and then compute its numerical value.\n\nProvide both the analysis and computations in your solution. As your final answer, report only the value of $\\partial V_{m}/\\partial \\ln P_{\\mathrm{Na}}$ at baseline, expressed in millivolts. Round your final answer to three significant figures. Do not include units in the boxed final answer, but use millivolts in your intermediate discussion and results.", "solution": "The problem statement is first subjected to a rigorous validation process.\n\n**Step 1: Extract Givens**\n- Model: Spherical neuron at steady state, constant field conditions, electroneutral bulk solutions.\n- Governing Equation: Goldman–Hodgkin–Katz (GHK) voltage equation.\n- Constants: Temperature $T=310.15\\,\\text{K}$, universal gas constant $R=8.314\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1}$, Faraday constant $F=96485\\,\\text{C}\\,\\text{mol}^{-1}$.\n- Extracellular Concentrations: $[\\mathrm{K}^{+}]_{o}=5.0\\,\\text{mM}$, $[\\mathrm{Na}^{+}]_{o}=145.0\\,\\text{mM}$, $[\\mathrm{Cl}^{-}]_{o}=110.0\\,\\text{mM}$.\n- Intracellular Concentrations: $[\\mathrm{K}^{+}]_{i}=140.0\\,\\text{mM}$, $[\\mathrm{Na}^{+}]_{i}=12.0\\,\\text{mM}$, $[\\mathrm{Cl}^{-}]_{i}=10.0\\,\\text{mM}$.\n- Baseline Relative Permeabilities: $P_{\\mathrm{K}}=1.00$, $P_{\\mathrm{Na}}=0.0400$, $P_{\\mathrm{Cl}}=0.450$.\n- Tasks:\n  1. Calculate baseline resting membrane potential $V_{m}$.\n  2. Calculate new $V_{m}$ and the change $\\Delta V_{m}$ for a twofold increase in $P_{\\mathrm{Na}}$.\n  3. Derive an analytic expression for the sensitivity $\\partial V_{m}/\\partial \\ln P_{\\mathrm{Na}}$ and compute its numerical value at baseline.\n- Final Answer Requirement: The value of $\\partial V_{m}/\\partial \\ln P_{\\mathrm{Na}}$ at baseline, in millivolts, rounded to three significant figures.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is evaluated against the required criteria.\n- **Scientifically Grounded**: The problem is based on the GHK equation, a fundamental and well-established model in membrane biophysics. All provided ionic concentrations and permeabilities are within physiologically realistic ranges for a mammalian neuron.\n- **Well-Posed**: The problem is mathematically well-defined. The GHK equation provides a unique solution for the membrane potential given the parameters. The tasks involve direct calculation and standard symbolic differentiation, leading to a unique and meaningful result.\n- **Objective**: The problem is stated using precise, quantitative language, free of ambiguity or subjective claims.\n- **Completeness and Consistency**: All necessary data and constants are provided. There are no contradictions in the setup.\n\n**Step 3: Verdict and Action**\nThe problem is scientifically sound, well-posed, objective, and complete. It is therefore deemed **valid**. We proceed to the solution.\n\nThe solution is structured to address the three tasks in sequence. The foundational equation is the Goldman–Hodgkin–Katz (GHK) voltage equation for a membrane permeable to $\\mathrm{K}^{+}$, $\\mathrm{Na}^{+}$, and $\\mathrm{Cl}^{-}$ ions:\n$$V_{m} = \\frac{RT}{F} \\ln \\left( \\frac{P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{o} + P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{o} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{i}}{P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{i} + P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{i} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{o}} \\right)$$\nNote the inversion of the intracellular and extracellular concentrations for the anion $\\mathrm{Cl}^{-}$ in the argument of the logarithm, which correctly accounts for its negative valence ($z=-1$).\n\nFirst, we calculate the pre-factor $\\frac{RT}{F}$:\n$$ \\frac{RT}{F} = \\frac{(8.314\\,\\text{J}\\,\\text{mol}^{-1}\\,\\text{K}^{-1})(310.15\\,\\text{K})}{96485\\,\\text{C}\\,\\text{mol}^{-1}} \\approx 0.026707\\,\\text{V} = 26.707\\,\\text{mV} $$\n\n**Task 1: Baseline Resting Membrane Potential**\nWe substitute the baseline concentrations and permeabilities into the GHK equation.\nThe numerator of the logarithmic argument is:\n$$ N_{1} = P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{o} + P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{o} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{i} $$\n$$ N_{1} = (1.00)(5.0) + (0.0400)(145.0) + (0.450)(10.0) = 5.0 + 5.8 + 4.5 = 15.3\\,\\text{mM} $$\nThe denominator of the logarithmic argument is:\n$$ D_{1} = P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{i} + P_{\\mathrm{Na}}[\\mathrm{Na}^{+}]_{i} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{o} $$\n$$ D_{1} = (1.00)(140.0) + (0.0400)(12.0) + (0.450)(110.0) = 140.0 + 0.48 + 49.5 = 189.98\\,\\text{mM} $$\nThe baseline membrane potential $V_{m, \\text{base}}$ is:\n$$ V_{m, \\text{base}} = (26.707\\,\\text{mV}) \\ln\\left(\\frac{15.3}{189.98}\\right) \\approx (26.707\\,\\text{mV}) \\ln(0.080535) \\approx (26.707\\,\\text{mV})(-2.5190) \\approx -67.27\\,\\text{mV} $$\n\n**Task 2: Effect of Increased Sodium Permeability**\nThe sodium permeability is doubled to $P'_{\\mathrm{Na}} = 2 \\times 0.0400 = 0.0800$. All other parameters remain constant. We recalculate the numerator and denominator.\nThe new numerator is:\n$$ N_{2} = (1.00)(5.0) + (0.0800)(145.0) + (0.450)(10.0) = 5.0 + 11.6 + 4.5 = 21.1\\,\\text{mM} $$\nThe new denominator is:\n$$ D_{2} = (1.00)(140.0) + (0.0800)(12.0) + (0.450)(110.0) = 140.0 + 0.96 + 49.5 = 190.46\\,\\text{mM} $$\nThe new membrane potential $V'_{m}$ is:\n$$ V'_{m} = (26.707\\,\\text{mV}) \\ln\\left(\\frac{21.1}{190.46}\\right) \\approx (26.707\\,\\text{mV}) \\ln(0.11078) \\approx (26.707\\,\\text{mV})(-2.2002) \\approx -58.76\\,\\text{mV} $$\nThe change in membrane potential is a depolarization:\n$$ \\Delta V_{m} = V'_{m} - V_{m, \\text{base}} \\approx -58.76\\,\\text{mV} - (-67.27\\,\\text{mV}) = 8.51\\,\\text{mV} $$\n\n**Task 3: Sensitivity Analysis**\nWe are asked to derive an analytic expression for the sensitivity $\\frac{\\partial V_{m}}{\\partial \\ln P_{\\mathrm{Na}}}$ and compute its value at baseline. Let $P \\equiv P_{\\mathrm{Na}}$.\nUsing the chain rule, we establish the identity:\n$$ \\frac{\\partial V_{m}}{\\partial \\ln P} = \\frac{\\partial V_{m}}{\\partial P} \\frac{\\partial P}{\\partial (\\ln P)} = P \\frac{\\partial V_{m}}{\\partial P} $$\nTo simplify the differentiation, we write the GHK equation as:\n$$ V_{m}(P) = \\frac{RT}{F} \\ln \\left( \\frac{A + P[\\mathrm{Na}^{+}]_{o}}{B + P[\\mathrm{Na}^{+}]_{i}} \\right) $$\nwhere $A = P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{o} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{i}$ and $B = P_{\\mathrm{K}}[\\mathrm{K}^{+}]_{i} + P_{\\mathrm{Cl}}[\\mathrm{Cl}^{-}]_{o}$ are constants with respect to $P$.\nWe first differentiate $V_{m}$ with respect to $P$:\n$$ \\frac{\\partial V_{m}}{\\partial P} = \\frac{RT}{F} \\cdot \\frac{1}{\\left( \\frac{A + P[\\mathrm{Na}^{+}]_{o}}{B + P[\\mathrm{Na}^{+}]_{i}} \\right)} \\cdot \\frac{\\partial}{\\partial P}\\left( \\frac{A + P[\\mathrm{Na}^{+}]_{o}}{B + P[\\mathrm{Na}^{+}]_{i}} \\right) $$\nUsing the quotient rule:\n$$ \\frac{\\partial}{\\partial P}\\left( \\frac{A + P[\\mathrm{Na}^{+}]_{o}}{B + P[\\mathrm{Na}^{+}]_{i}} \\right) = \\frac{[\\mathrm{Na}^{+}]_{o}(B + P[\\mathrm{Na}^{+}]_{i}) - (A + P[\\mathrm{Na}^{+}]_{o})[\\mathrm{Na}^{+}]_{i}}{(B + P[\\mathrm{Na}^{+}]_{i})^2} = \\frac{B[\\mathrm{Na}^{+}]_{o} - A[\\mathrm{Na}^{+}]_{i}}{(B + P[\\mathrm{Na}^{+}]_{i})^2} $$\nSubstituting back:\n$$ \\frac{\\partial V_{m}}{\\partial P} = \\frac{RT}{F} \\cdot \\frac{B + P[\\mathrm{Na}^{+}]_{i}}{A + P[\\mathrm{Na}^{+}]_{o}} \\cdot \\frac{B[\\mathrm{Na}^{+}]_{o} - A[\\mathrm{Na}^{+}]_{i}}{(B + P[\\mathrm{Na}^{+}]_{i})^2} = \\frac{RT}{F} \\cdot \\frac{B[\\mathrm{Na}^{+}]_{o} - A[\\mathrm{Na}^{+}]_{i}}{(A + P[\\mathrm{Na}^{+}]_{o})(B + P[\\mathrm{Na}^{+}]_{i})} $$\nThe sensitivity is therefore:\n$$ \\frac{\\partial V_{m}}{\\partial \\ln P} = P \\frac{\\partial V_{m}}{\\partial P} = \\frac{RT}{F} \\cdot \\frac{P (B[\\mathrm{Na}^{+}]_{o} - A[\\mathrm{Na}^{+}]_{i})}{(A + P[\\mathrm{Na}^{+}]_{o})(B + P[\\mathrm{Na}^{+}]_{i})} $$\nThis is the required analytic expression. Now we compute its numerical value at baseline conditions ($P = P_{\\mathrm{Na}} = 0.0400$).\nFirst, calculate $A$ and $B$:\n$$ A = (1.00)(5.0) + (0.450)(10.0) = 9.5 $$\n$$ B = (1.00)(140.0) + (0.450)(110.0) = 189.5 $$\nThe denominator term $(A + P[\\mathrm{Na}^{+}]_{o})(B + P[\\mathrm{Na}^{+}]_{i})$ is simply the product of the numerator and denominator of the GHK argument, which we have already calculated as $N_1 \\cdot D_1 = (15.3)(189.98) = 2906.694$.\nThe numerator term is $P (B[\\mathrm{Na}^{+}]_{o} - A[\\mathrm{Na}^{+}]_{i})$:\n$$ (0.0400) \\left( (189.5)(145.0) - (9.5)(12.0) \\right) = (0.0400) (27477.5 - 114) = (0.0400)(27363.5) = 1094.54 $$\nFinally, we compute the sensitivity:\n$$ \\frac{\\partial V_{m}}{\\partial \\ln P_{\\mathrm{Na}}} = (26.707\\,\\text{mV}) \\cdot \\frac{1094.54}{2906.694} \\approx (26.707\\,\\text{mV})(0.37656) \\approx 10.056\\,\\text{mV} $$\nRounding to three significant figures, the result is $10.1\\,\\text{mV}$.", "answer": "$$ \\boxed{10.1} $$", "id": "2950115"}, {"introduction": "From the static world of resting potentials, we leap into the dynamic behavior of an excitable neuron. This practice challenges you to work with the celebrated Hodgkin-Huxley model, the cornerstone of computational neuroscience, to understand the generation of an action potential [@problem_id:2950135]. By numerically simulating the model's differential equations, you will determine the rheobase—the minimum stimulus required to make a neuron fire—and gain direct insight into how changes in ion conductances alter a neuron's fundamental excitability.", "problem": "You are asked to formalize and compute how increasing the maximum sodium conductance by $20\\%$ changes the rheobase current in a single-compartment Hodgkin–Huxley (HH) model. The rheobase is defined here as the minimum constant injected current density $I_{\\text{inj}}$ (in $\\mu\\text{A}/\\text{cm}^2$) that produces at least one action potential when applied for a finite duration to the HH membrane model.\n\nStart from the following fundamental base:\n- Current balance at the membrane capacitance: $$C_{\\text{m}}\\frac{dV}{dt} = - I_{\\text{Na}} - I_{\\text{K}} - I_{\\text{L}} + I_{\\text{inj}},$$ where $C_{\\text{m}}$ is the membrane capacitance per unit area, $V$ is the membrane potential (in $\\text{mV}$), $I_{\\text{inj}}$ is the injected current density (in $\\mu\\text{A}/\\text{cm}^2$), and $I_{\\text{Na}}, I_{\\text{K}}, I_{\\text{L}}$ are the sodium, potassium, and leak currents, respectively.\n- Ionic currents follow Ohm’s law with voltage- and state-dependent conductances: $$I_{\\text{Na}} = \\bar{g}_{\\text{Na}}\\,m^3h\\,(V - E_{\\text{Na}}),\\quad I_{\\text{K}} = \\bar{g}_{\\text{K}}\\,n^4\\,(V - E_{\\text{K}}),\\quad I_{\\text{L}} = \\bar{g}_{\\text{L}}\\,(V - E_{\\text{L}}),$$ where $\\bar{g}_{\\text{Na}}, \\bar{g}_{\\text{K}}, \\bar{g}_{\\text{L}}$ are maximum conductances (in $\\text{mS}/\\text{cm}^2$), $E_{\\text{Na}}, E_{\\text{K}}, E_{\\text{L}}$ are reversal potentials (in $\\text{mV}$), and $m,h,n$ are gating variables with dynamics defined below.\n- Gating variable dynamics at $6.3^{\\circ}\\text{C}$ (standard Hodgkin–Huxley 1952 rate laws): $$\\frac{dm}{dt} = \\alpha_m(V)\\,(1-m) - \\beta_m(V)\\,m,\\quad \\frac{dh}{dt} = \\alpha_h(V)\\,(1-h) - \\beta_h(V)\\,h,\\quad \\frac{dn}{dt} = \\alpha_n(V)\\,(1-n) - \\beta_n(V)\\,n,$$\nwith rate functions\n$$\\alpha_m(V) = \\frac{0.1\\,(V+40)}{1 - e^{-(V+40)/10}},\\quad \\beta_m(V) = 4\\,e^{-(V+65)/18},$$\n$$\\alpha_h(V) = 0.07\\,e^{-(V+65)/20},\\quad \\beta_h(V) = \\frac{1}{1 + e^{-(V+35)/10}},$$\n$$\\alpha_n(V) = \\frac{0.01\\,(V+55)}{1 - e^{-(V+55)/10}},\\quad \\beta_n(V) = 0.125\\,e^{-(V+65)/80}.$$\n\nUse the following fixed parameters unless explicitly varied in the test suite:\n- Membrane capacitance: $C_{\\text{m}} = 1\\ \\mu\\text{F}/\\text{cm}^2$.\n- Reversal potentials: $E_{\\text{Na}} = 50\\ \\text{mV}$, $E_{\\text{K}} = -77\\ \\text{mV}$, $E_{\\text{L}} = -54.4\\ \\text{mV}$.\n- Baseline maximum conductances: $\\bar{g}_{\\text{Na}} = 120\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{K}} = 36\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{L}} = 0.3\\ \\text{mS}/\\text{cm}^2$.\n\nInitial conditions at $t=0$:\n- Membrane potential: $V(0) = -65\\ \\text{mV}$.\n- Gating variables at steady state at $V=-65\\ \\text{mV}$: $$x(0) = \\frac{\\alpha_x(-65)}{\\alpha_x(-65) + \\beta_x(-65)}\\ \\text{for}\\ x \\in \\{m,h,n\\}.$$\n\nDefinition of a spike for this task:\n- A spike is detected if $V(t)$ crosses $0\\ \\text{mV}$ from below (an upward crossing) at any time during the simulation window.\n\nNumerical and algorithmic requirements:\n- Simulate for a finite window of $T = 200\\ \\text{ms}$ with a fixed time step $\\Delta t = 0.01\\ \\text{ms}$ using a numerically stable ordinary differential equation integrator (for example, a fourth-order Runge–Kutta method). Keep $m,h,n$ numerically constrained within $[0,1]$ after each update.\n- Determine the rheobase by a one-dimensional search over constant $I_{\\text{inj}}$ applied over the entire window $[0,T]$. Use a bracketing and binary search strategy: start from a lower bound $I_{\\min} = 0\\ \\mu\\text{A}/\\text{cm}^2$, expand an upper bound $I_{\\max}$ by doubling until a spike is produced or until reaching a hard ceiling of $I_{\\max} = 2000\\ \\mu\\text{A}/\\text{cm}^2$. Then binary search between the current bracket to within a tolerance of $\\varepsilon = 10^{-3}\\ \\mu\\text{A}/\\text{cm}^2$.\n- If no spike is produced even at the hard ceiling, return the ceiling rheobase value $2000.0$ for that test case.\n\nTest suite:\nCompute the rheobase current density for the following four parameter sets, each with a constant $I_{\\text{inj}}$ over $T$:\n- Case $1$ (baseline): $\\bar{g}_{\\text{Na}} = 120\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{K}} = 36\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{L}} = 0.3\\ \\text{mS}/\\text{cm}^2$.\n- Case $2$ (sodium increased by $20\\%$): $\\bar{g}_{\\text{Na}} = 1.2 \\times 120\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{K}} = 36\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{L}} = 0.3\\ \\text{mS}/\\text{cm}^2$.\n- Case $3$ (higher leak): $\\bar{g}_{\\text{Na}} = 120\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{K}} = 36\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{L}} = 0.6\\ \\text{mS}/\\text{cm}^2$.\n- Case $4$ (higher leak and sodium increased by $20\\%$): $\\bar{g}_{\\text{Na}} = 1.2 \\times 120\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{K}} = 36\\ \\text{mS}/\\text{cm}^2$, $\\bar{g}_{\\text{L}} = 0.6\\ \\text{mS}/\\text{cm}^2$.\n\nAnswer specification and output format:\n- For each case, compute the rheobase current density as a single float in $\\mu\\text{A}/\\text{cm}^2$, rounded to $3$ decimal places.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the order of cases $1$ through $4$ (e.g., $\"[6.302,5.118,10.441,8.997]\"$), with no additional text.", "solution": "The problem statement has been validated and is deemed scientifically sound, well-posed, and computationally tractable. It presents a standard problem in computational neuroscience, requiring the numerical determination of the rheobase current in the Hodgkin-Huxley model. We will proceed with a complete, reasoned solution.\n\nThe core of the problem is to solve a system of four coupled, nonlinear, first-order ordinary differential equations (ODEs) that constitute the Hodgkin-Huxley model. The state of the system at any time $t$ is described by the vector $Y(t) = [V(t), m(t), h(t), n(t)]^T$, where $V$ is the membrane potential, and $m$, $h$, and $n$ are the gating variables for the sodium and potassium ion channels.\n\nThe system of ODEs is given by $\\frac{dY}{dt} = F(Y, I_{\\text{inj}})$, where the vector function $F$ is defined as follows:\n$$\n\\frac{dV}{dt} = \\frac{1}{C_{\\text{m}}} \\left( I_{\\text{inj}} - \\bar{g}_{\\text{Na}}m^3h(V - E_{\\text{Na}}) - \\bar{g}_{\\text{K}}n^4(V - E_{\\text{K}}) - \\bar{g}_{\\text{L}}(V - E_{\\text{L}}) \\right)\n$$\n$$\n\\frac{dm}{dt} = \\alpha_m(V)(1-m) - \\beta_m(V)m\n$$\n$$\n\\frac{dh}{dt} = \\alpha_h(V)(1-h) - \\beta_h(V)h\n$$\n$$\n\\frac{dn}{dt} = \\alpha_n(V)(1-n) - \\beta_n(V)n\n$$\nThe parameters $C_{\\text{m}}$, $\\bar{g}_{\\text{Na}}$, $\\bar{g}_{\\text{K}}$, $\\bar{g}_{\\text{L}}$, $E_{\\text{Na}}$, $E_{\\text{K}}$, and $E_{\\text{L}}$ are provided constants. The rate functions $\\alpha_x(V)$ and $\\beta_x(V)$ are also given. Note that the functions $\\alpha_m(V)$ and $\\alpha_n(V)$ contain expressions of the form $\\frac{0}{0}$ at specific voltages ($V = -40\\ \\text{mV}$ for $\\alpha_m$ and $V = -55\\ \\text{mV}$ for $\\alpha_n$). These are removable singularities, which must be handled numerically by applying L'Hôpital's rule. For $\\alpha_m(V)$ as $V \\to -40$, the limit is $1.0$. For $\\alpha_n(V)$ as $V \\to -55$, the limit is $0.1$.\n\nTo solve this system of ODEs numerically, the fourth-order Runge-Kutta (RK4) method is employed, as suggested. This method provides a good balance of accuracy and computational stability for this type of problem. For a time step $\\Delta t$, the state vector $Y_{i+1}$ at time $t_{i+1} = t_i + \\Delta t$ is computed from $Y_i$ at time $t_i$ as:\n$$\nk_1 = F(Y_i, I_{\\text{inj}})\n$$\n$$\nk_2 = F(Y_i + \\frac{\\Delta t}{2} k_1, I_{\\text{inj}})\n$$\n$$\nk_3 = F(Y_i + \\frac{\\Delta t}{2} k_2, I_{\\text{inj}})\n$$\n$$\nk_4 = F(Y_i + \\Delta t k_3, I_{\\text{inj}})\n$$\n$$\nY_{i+1} = Y_i + \\frac{\\Delta t}{6} (k_1 + 2k_2 + 2k_3 + k_4)\n$$\nThe simulation is run for a total duration of $T = 200\\ \\text{ms}$ with a time step of $\\Delta t = 0.01\\ \\text{ms}$. After each integration step, the gating variables $m$, $h$, and $n$ must be clamped to the physically meaningful interval $[0, 1]$ to prevent numerical artifacts. A spike is registered if $V(t)$ crosses $0\\ \\text{mV}$ from a negative value.\n\nThe primary objective is to find the rheobase current, which is the minimum constant injected current $I_{\\text{inj}}$ that elicits at least one spike. This is a root-finding problem, which is solved using a specified search algorithm. The algorithm comprises two phases:\n\n1.  **Bracketing**: An interval $[I_{\\text{low}}, I_{\\text{high}}]$ that is guaranteed to contain the rheobase is established. We begin with $I_{\\text{low}} = 0\\ \\mu\\text{A}/\\text{cm}^2$ and an initial $I_{\\text{high}}$ (e.g., $1\\ \\mu\\text{A}/\\text{cm}^2$). If the simulation with $I_{\\text{high}}$ does not produce a spike, $I_{\\text{low}}$ is set to the current $I_{\\text{high}}$ and $I_{\\text{high}}$ is doubled. this process is repeated until a spike is observed at $I_{\\text{high}}$, or $I_{\\text{high}}$ exceeds the ceiling of $2000\\ \\mu\\text{A}/\\text{cm}^2$. If no spike is produced at this ceiling, the rheobase is taken to be $2000.0\\ \\mu\\text{A}/\\text{cm}^2$.\n\n2.  **Binary Search**: Once a valid bracket $[I_{\\text{low}}, I_{\\text{high}}]$ is found (where $I_{\\text{low}}$ produces no spike and $I_{\\text{high}}$ does), a binary search is performed. The midpoint $I_{\\text{mid}} = (I_{\\text{low}} + I_{\\text{high}})/2$ is tested. If $I_{\\text{mid}}$ causes a spike, it becomes the new upper bound: $I_{\\text{high}} = I_{\\text{mid}}$. Otherwise, it becomes the new lower bound: $I_{\\text{low}} = I_{\\text{mid}}$. This process is iterated until the width of the interval $(I_{\\text{high}} - I_{\\text{low}})$ is less than the specified tolerance $\\varepsilon = 10^{-3}\\ \\mu\\text{A}/\\text{cm}^2$. The final value of $I_{\\text{high}}$ is taken as the rheobase.\n\nThis entire procedure is applied to each of the four test cases defined in the problem statement. The results are then rounded to $3$ decimal places and formatted as required. The provided code implements this logic precisely.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the rheobase current for four parameter sets of the Hodgkin-Huxley model.\n    \"\"\"\n\n    # --- Hodgkin-Huxley Model Rate Functions ---\n    def alpha_m(V):\n        \"\"\"Sodium channel activation rate.\"\"\"\n        if np.abs(V + 40.0) < 1e-5:\n            # L'Hopital's rule for singularity at V = -40 mV\n            return 1.0\n        return (0.1 * (V + 40.0)) / (1.0 - np.exp(-(V + 40.0) / 10.0))\n\n    def beta_m(V):\n        \"\"\"Sodium channel deactivation rate.\"\"\"\n        return 4.0 * np.exp(-(V + 65.0) / 18.0)\n\n    def alpha_h(V):\n        \"\"\"Sodium channel inactivation rate.\"\"\"\n        return 0.07 * np.exp(-(V + 65.0) / 20.0)\n\n    def beta_h(V):\n        \"\"\"Sodium channel deinactivation rate.\"\"\"\n        return 1.0 / (1.0 + np.exp(-(V + 35.0) / 10.0))\n\n    def alpha_n(V):\n        \"\"\"Potassium channel activation rate.\"\"\"\n        if np.abs(V + 55.0) < 1e-5:\n            # L'Hopital's rule for singularity at V = -55 mV\n            return 0.1\n        return (0.01 * (V + 55.0)) / (1.0 - np.exp(-(V + 55.0) / 10.0))\n\n    def beta_n(V):\n        \"\"\"Potassium channel deactivation rate.\"\"\"\n        return 0.125 * np.exp(-(V + 65.0) / 80.0)\n\n    # --- System of ODEs ---\n    def hh_derivatives(y, I_inj, g_Na, g_K, g_L):\n        \"\"\"\n        Computes the derivatives for the HH model state vector [V, m, h, n].\n        \"\"\"\n        V, m, h, n = y\n        \n        # Fixed parameters\n        C_m = 1.0  # uF/cm^2\n        E_Na = 50.0  # mV\n        E_K = -77.0  # mV\n        E_L = -54.4  # mV\n        \n        # Ionic currents (uA/cm^2)\n        I_Na = g_Na * (m**3) * h * (V - E_Na)\n        I_K = g_K * (n**4) * (V - E_K)\n        I_L = g_L * (V - E_L)\n        \n        # Time derivatives\n        dVdt = (I_inj - I_Na - I_K - I_L) / C_m\n        dmdt = alpha_m(V) * (1.0 - m) - beta_m(V) * m\n        dhdt = alpha_h(V) * (1.0 - h) - beta_h(V) * h\n        dndt = alpha_n(V) * (1.0 - n) - beta_n(V) * n\n        \n        return np.array([dVdt, dmdt, dhdt, dndt])\n\n    # --- Simulation and Spike Detection ---\n    def simulate_and_check_spike(I_inj, g_Na, g_K, g_L):\n        \"\"\"\n        Simulates the HH model for a given current and parameters, and checks for a spike.\n        \"\"\"\n        # Simulation parameters\n        T = 200.0  # ms\n        dt = 0.01   # ms\n        num_steps = int(T / dt)\n        \n        # Initial conditions at V_rest = -65 mV\n        V0 = -65.0\n        m0 = alpha_m(V0) / (alpha_m(V0) + beta_m(V0))\n        h0 = alpha_h(V0) / (alpha_h(V0) + beta_h(V0))\n        n0 = alpha_n(V0) / (alpha_n(V0) + beta_n(V0))\n        \n        y = np.array([V0, m0, h0, n0])\n        v_prev = y[0]\n        \n        # RK4 integration loop\n        for _ in range(num_steps):\n            k1 = dt * hh_derivatives(y, I_inj, g_Na, g_K, g_L)\n            k2 = dt * hh_derivatives(y + 0.5 * k1, I_inj, g_Na, g_K, g_L)\n            k3 = dt * hh_derivatives(y + 0.5 * k2, I_inj, g_Na, g_K, g_L)\n            k4 = dt * hh_derivatives(y + k3, I_inj, g_Na, g_K, g_L)\n            \n            y = y + (k1 + 2.0*k2 + 2.0*k3 + k4) / 6.0\n            \n            # Clamp gating variables to [0, 1]\n            y[1:] = np.clip(y[1:], 0.0, 1.0)\n            \n            # Spike detection: upward crossing of 0 mV\n            if v_prev < 0.0 and y[0] >= 0.0:\n                return True\n            v_prev = y[0]\n            \n        return False\n\n    # --- Rheobase Search Algorithm ---\n    def find_rheobase(g_Na, g_K, g_L):\n        \"\"\"\n        Finds the rheobase current using bracketing and binary search.\n        \"\"\"\n        I_low = 0.0\n        I_high = 1.0  # Initial guess for upper bound\n        I_ceil = 2000.0\n        tolerance = 1e-3\n        \n        # Bracketing Phase: Find an interval [I_low, I_high] containing the rheobase\n        is_spiking_at_high = simulate_and_check_spike(I_high, g_Na, g_K, g_L)\n        \n        while not is_spiking_at_high:\n            I_low = I_high\n            I_high *= 2.0\n            if I_high > I_ceil:\n                if not simulate_and_check_spike(I_ceil, g_Na, g_K, g_L):\n                    return I_ceil # No spike even at ceiling\n                else:\n                    I_high = I_ceil # Bracket is [I_low, I_ceil]\n                    break\n            is_spiking_at_high = simulate_and_check_spike(I_high, g_Na, g_K, g_L)\n\n        # Binary Search Phase: Refine the rheobase value\n        while (I_high - I_low) > tolerance:\n            I_mid = (I_low + I_high) / 2.0\n            if I_mid == I_low or I_mid == I_high: # Precision limit reached\n                break\n            if simulate_and_check_spike(I_mid, g_Na, g_K, g_L):\n                I_high = I_mid\n            else:\n                I_low = I_mid\n                \n        return I_high\n\n    # --- Main Execution ---\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (120.0, 36.0, 0.3),                 # Case 1: Baseline\n        (1.2 * 120.0, 36.0, 0.3),           # Case 2: gNa increased by 20%\n        (120.0, 36.0, 0.6),                 # Case 3: Higher leak\n        (1.2 * 120.0, 36.0, 0.6),           # Case 4: Higher leak and gNa increased\n    ]\n\n    results = []\n    for case in test_cases:\n        g_Na, g_K, g_L = case\n        rheobase = find_rheobase(g_Na, g_K, g_L)\n        results.append(rheobase)\n\n    # Format output to 3 decimal places as specified\n    formatted_results = [f\"{r:.3f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2950135"}]}