{"hands_on_practices": [{"introduction": "The journey of directed differentiation begins at the cell surface, where external cues are first interpreted. This exercise lays the foundation by modeling the initial interaction between a growth factor and its receptor, first under equilibrium conditions and then by incorporating the dynamic process of receptor trafficking. By applying principles of mass action and kinetic modeling, you will gain a quantitative understanding of how ligand binding translates into a signal of specific strength and duration, a critical first step in controlling cell fate [@problem_id:2941050].", "problem": "A human forebrain organoid culture is maintained in a microfluidic perfusion system supplying Fibroblast Growth Factor 2 (FGF2). FGF2 binds to Fibroblast Growth Factor Receptors (FGFRs), which are receptor tyrosine kinases (RTKs), on the surface of neural progenitor cells embedded within the organoid. Assume that extracellular FGF2 is held constant at concentration $[L] = 5\\,\\mathrm{nM}$ by perfusion, and that extracellular-domain ligand binding equilibrates rapidly relative to membrane trafficking. The binding reaction is $R + L \\rightleftharpoons RL$ and obeys the law of mass action with dissociation constant defined by $K_{d} = \\frac{[R][L]}{[RL]}$. Let the total surface-accessible receptor concentration be $R_{T} = [R] + [RL]$, and define the fraction of occupied receptors as $\\theta = \\frac{[RL]}{R_{T}}$. Assume ligand depletion is negligible so that $[L]$ is not reduced by binding.\n\n(a) Starting from the definition of $K_{d}$ and conservation of receptor, derive the expression for the equilibrium receptor occupancy $\\theta$ as a function of $[L]$ and $K_{d}$. Then evaluate $\\theta$ for $[L] = 5\\,\\mathrm{nM}$ and $K_{d} = 1\\,\\mathrm{nM}$. Express your numerical result as an exact fraction.\n\n(b) To connect binding to effective signaling duration in organoid directed differentiation, incorporate receptor internalization and recycling. Let $R_{s}(t)$ and $R_{i}(t)$ denote surface and internalized receptor pools, respectively, with $R_{T} = R_{s}(t) + R_{i}(t)$ conserved. Suppose first-order internalization and recycling with rate constants $k_{\\mathrm{int}}$ and $k_{\\mathrm{rec}}$ govern the receptor pools. Under constant $[L]$ and rapid binding equilibration at the surface, signaling competence is proportional to $S(t) \\propto \\theta \\frac{R_{s}(t)}{R_{T}}$. Using mass action kinetics for trafficking, derive $R_{s}(t)$ given $R_{s}(0) = R_{T}$, and, based on the resulting expression, explain qualitatively how increasing $k_{\\mathrm{int}}$ relative to $k_{\\mathrm{rec}}$ alters the effective duration over which $S(t)$ remains near its initial value.\n\nProvide the numerical value of the initial receptor occupancy from part (a) as your final answer, expressed as an exact fraction.", "solution": "The problem statement has been analyzed and is deemed valid. It is scientifically grounded in established principles of receptor-ligand kinetics and cell signaling, is well-posed with sufficient information for a unique solution, and is formulated with objective, precise language. No flaws related to scientific unsoundness, incompleteness, contradiction, or ambiguity are present.\n\nPart (a): Derivation of equilibrium receptor occupancy $\\theta$.\n\nWe are given the following definitions and relationships:\nThe dissociation constant:\n$$K_{d} = \\frac{[R][L]}{[RL]}$$\nThe conservation of total surface receptors:\n$$R_{T} = [R] + [RL]$$\nThe definition of receptor occupancy:\n$$\\theta = \\frac{[RL]}{R_{T}}$$\n\nOur objective is to express $\\theta$ as a function of the ligand concentration $[L]$ and the dissociation constant $K_{d}$. We begin by manipulating the equation for the conservation of receptors to express the concentration of free receptors, $[R]$, in terms of the total and bound receptors:\n$$[R] = R_{T} - [RL]$$\n\nNext, we substitute this expression for $[R]$ into the definition of the dissociation constant $K_{d}$:\n$$K_{d} = \\frac{(R_{T} - [RL])[L]}{[RL]}$$\n\nWe now algebraically solve this equation for the concentration of the ligand-receptor complex, $[RL]$.\n$$K_{d} [RL] = (R_{T} - [RL])[L]$$\n$$K_{d} [RL] = R_{T}[L] - [RL][L]$$\n$$K_{d} [RL] + [RL][L] = R_{T}[L]$$\n$$[RL] (K_{d} + [L]) = R_{T}[L]$$\n$$[RL] = \\frac{R_{T}[L]}{K_{d} + [L]}$$\n\nFinally, we substitute this expression for $[RL]$ into the definition of the occupancy, $\\theta$:\n$$\\theta = \\frac{[RL]}{R_{T}} = \\frac{1}{R_{T}} \\left( \\frac{R_{T}[L]}{K_{d} + [L]} \\right)$$\nThis simplifies to the desired expression for $\\theta$:\n$$\\theta = \\frac{[L]}{K_{d} + [L]}$$\n\nNow, we evaluate $\\theta$ using the provided numerical values: $[L] = 5\\,\\mathrm{nM}$ and $K_{d} = 1\\,\\mathrm{nM}$.\n$$\\theta = \\frac{5\\,\\mathrm{nM}}{1\\,\\mathrm{nM} + 5\\,\\mathrm{nM}} = \\frac{5\\,\\mathrm{nM}}{6\\,\\mathrm{nM}} = \\frac{5}{6}$$\n\nPart (b): Analysis of receptor trafficking dynamics.\n\nWe are asked to model the dynamics of the surface receptor population, $R_{s}(t)$, which is subject to first-order internalization (rate constant $k_{\\mathrm{int}}$) and recycling (rate constant $k_{\\mathrm{rec}}$). The total cellular receptor pool, $R_{T} = R_{s}(t) + R_{i}(t)$, where $R_{i}(t)$ is the internalized pool, is conserved.\n\nThe rate of change of the surface receptor population, $\\frac{dR_{s}}{dt}$, is determined by the balance between the rate of recycling of internalized receptors back to the surface and the rate of internalization of surface receptors. This is expressed by the following differential equation:\n$$\\frac{dR_{s}}{dt} = k_{\\mathrm{rec}} R_{i}(t) - k_{\\mathrm{int}} R_{s}(t)$$\n\nTo solve this equation, we must express it in terms of a single variable, $R_{s}(t)$. We use the conservation relation $R_{i}(t) = R_{T} - R_{s}(t)$ to substitute for $R_{i}(t)$:\n$$\\frac{dR_{s}}{dt} = k_{\\mathrm{rec}}(R_{T} - R_{s}(t)) - k_{\\mathrm{int}} R_{s}(t)$$\n$$\\frac{dR_{s}}{dt} = k_{\\mathrm{rec}}R_{T} - k_{\\mathrm{rec}}R_{s}(t) - k_{\\mathrm{int}} R_{s}(t)$$\n$$\\frac{dR_{s}}{dt} + (k_{\\mathrm{int}} + k_{\\mathrm{rec}})R_{s}(t) = k_{\\mathrm{rec}}R_{T}$$\n\nThis is a first-order linear ordinary differential equation. The solution consists of a transient part and a steady-state part. The steady-state solution, $R_{s,ss}$, is found by setting $\\frac{dR_{s}}{dt} = 0$:\n$$(k_{\\mathrm{int}} + k_{\\mathrm{rec}})R_{s,ss} = k_{\\mathrm{rec}}R_{T}$$\n$$R_{s,ss} = \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T}$$\n\nThe general solution is of the form $R_{s}(t) = C\\exp(-(k_{\\mathrm{int}} + k_{\\mathrm{rec}})t) + R_{s,ss}$. We determine the constant $C$ using the initial condition $R_{s}(0) = R_{T}$:\n$$R_{s}(0) = R_{T} = C + R_{s,ss} = C + \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T}$$\n$$C = R_{T} - \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T} = R_{T}\\left(1 - \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}}\\right) = R_{T}\\left(\\frac{k_{\\mathrm{int}} + k_{\\mathrm{rec}} - k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}}\\right) = \\frac{k_{\\mathrm{int}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T}$$\n\nSubstituting $C$ back into the general solution gives the explicit time-dependent expression for the surface receptor population:\n$$R_{s}(t) = \\left(\\frac{k_{\\mathrm{int}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T}\\right) \\exp(-(k_{\\mathrm{int}} + k_{\\mathrm{rec}})t) + \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} R_{T}$$\n\nThe signaling competence is given as $S(t) \\propto \\theta \\frac{R_{s}(t)}{R_{T}}$. Since $[L]$ is constant, $\\theta$ is also constant. Therefore, the time course of signaling, $S(t)$, is directly proportional to the fraction of receptors on the surface, $\\frac{R_{s}(t)}{R_{T}}$.\n\nQualitatively, increasing the internalization rate constant $k_{\\mathrm{int}}$ relative to the recycling rate constant $k_{\\mathrm{rec}}$ has two primary effects on the dynamics of $R_{s}(t)$:\n1.  The rate of decay from the initial state ($R_{s}(0) = R_{T}$) to the steady state ($R_{s,ss}$) is determined by the exponential term $\\exp(-(k_{\\mathrm{int}} + k_{\\mathrm{rec}})t)$. A larger $k_{\\mathrm{int}}$ leads to a larger value for the overall rate constant $(k_{\\mathrm{int}} + k_{\\mathrm{rec}})$, which means the system approaches its steady state more rapidly. This shortens the time interval during which $R_{s}(t)$ remains close to its initial maximum value, $R_{T}$.\n2.  The steady-state level of surface receptors, $R_{s,ss} = R_{T} \\frac{k_{\\mathrm{rec}}}{k_{\\mathrm{int}} + k_{\\mathrm{rec}}} = R_{T} \\frac{1}{1 + k_{\\mathrm{int}}/k_{\\mathrm{rec}}}$, is reduced. As the ratio $k_{\\mathrm{int}}/k_{\\mathrm{rec}}$ increases, the steady-state fraction of surface receptors decreases, leading to a lower sustained signaling level.\n\nIn conclusion, increasing $k_{\\mathrm{int}}$ relative to $k_{\\mathrm{rec}}$ causes a more rapid depletion of surface receptors to a lower steady-state level. This results in a more transient signaling response, characterized by a shorter duration over which the signal $S(t)$ remains near its initial peak value.", "answer": "$$\\boxed{\\frac{5}{6}}$$", "id": "2941050"}, {"introduction": "Moving from the single-cell surface to the scale of a whole organoid, this practice addresses a central challenge in 3D culture: the transport of signaling molecules into the tissue. You will derive a steady-state reaction-diffusion model from first principles to describe how a morphogen concentration profile forms within a spherical organoid. This exercise is crucial for understanding the physical basis of spatial patterning and for appreciating how an organoid's size and metabolic activity can shape its internal environment and ultimate development [@problem_id:2941100].", "problem": "An aggregate of pluripotent stem cells is cultured as a spherical organoid of radius $R$ in a stirred bioreactor containing a morphogen used to drive directed differentiation. The morphogen in the bulk media has a constant concentration $C_{m}$ maintained by continuous perfusion and mixing. Within the organoid, cells consume the morphogen at a uniform zero-order volumetric rate $q$ (units of amount per volume per time), and transport inside the organoid occurs by diffusion with a constant diffusion coefficient $D$. Transport across the organoid–media interface is resisted by an external boundary layer that can be modeled by a convective mass transfer coefficient $h$ at the surface, so that interfacial transport is proportional to the difference between the surface concentration and the bulk concentration.\n\nStarting only from Fick’s laws of diffusion and conservation of mass, model the steady-state, spherically symmetric morphogen concentration $C(r)$ inside the organoid, where $r$ is the radial coordinate from the organoid center. Assume the external media is well mixed (no reaction in the media), the organoid is homogeneous with respect to $D$ and $q$, and the following boundary conditions hold: (i) finiteness at the center $r=0$, and (ii) a flux balance at the organoid surface $r=R$ equating the diffusive flux inside the organoid to the convective flux across the boundary layer.\n\nDerive the steady-state concentration profile $C(r)$ inside the organoid and then compute the center concentration $C(0)$ in closed form. Express your final answer as a single analytic expression for $C(0)$ in terms of $C_{m}$, $D$, $h$, $R$, and $q$. No numerical values are required, and no rounding is needed. Do not include units in your final expression.", "solution": "The problem requires the derivation of the steady-state morphogen concentration at the center of a spherical organoid. We begin from the fundamental principle of mass conservation.\n\nConsider a spherical shell of inner radius $r$ and outer radius $r + \\Delta r$ within the organoid. At steady state, the rate of mass accumulation is zero. The mass balance equation is:\n$$ (\\text{Rate of mass in}) - (\\text{Rate of mass out}) - (\\text{Rate of mass consumed}) = 0 $$\nMass transport within the organoid is governed by Fick's first law of diffusion, where the flux $J(r)$ is given by $J(r) = -D \\frac{dC}{dr}$. The surface area of a sphere of radius $r$ is $4\\pi r^2$. The volumetric consumption rate is given as a constant, $q$.\n\nThe mass balance on the shell becomes:\n$$ [J(r) \\cdot 4\\pi r^2] - [J(r+\\Delta r) \\cdot 4\\pi (r+\\Delta r)^2] - q \\cdot \\frac{4}{3}\\pi[(r+\\Delta r)^3 - r^3] = 0 $$\nSubstituting Fick's law, $J(r) = -D \\frac{dC}{dr}$:\n$$ \\left[-D \\frac{dC}{dr}\\bigg|_r \\cdot 4\\pi r^2\\right] - \\left[-D \\frac{dC}{dr}\\bigg|_{r+\\Delta r} \\cdot 4\\pi (r+\\Delta r)^2\\right] - q \\cdot \\frac{4}{3}\\pi[(r+\\Delta r)^3 - r^3] = 0 $$\nDividing by $4\\pi$ and rearranging gives:\n$$ D \\left[ (r+\\Delta r)^2 \\frac{dC}{dr}\\bigg|_{r+\\Delta r} - r^2 \\frac{dC}{dr}\\bigg|_r \\right] - \\frac{q}{3}[(r+\\Delta r)^3 - r^3] = 0 $$\nDividing by $\\Delta r$ and taking the limit as $\\Delta r \\to 0$:\n$$ D \\lim_{\\Delta r \\to 0} \\frac{ (r+\\Delta r)^2 \\frac{dC}{dr}\\bigg|_{r+\\Delta r} - r^2 \\frac{dC}{dr}\\bigg|_r }{\\Delta r} - \\lim_{\\Delta r \\to 0} \\frac{q}{3} \\frac{r^3 + 3r^2\\Delta r + 3r(\\Delta r)^2 + (\\Delta r)^3 - r^3}{\\Delta r} = 0 $$\nThe first term is the definition of the derivative of $r^2 \\frac{dC}{dr}$. The second limit evaluates to $qr^2$. This yields the governing ordinary differential equation (ODE) for the concentration $C(r)$:\n$$ D \\frac{d}{dr}\\left(r^2 \\frac{dC}{dr}\\right) - qr^2 = 0 $$\nSince the diffusion coefficient $D$ is constant, we can write:\n$$ \\frac{1}{r^2} \\frac{d}{dr}\\left(r^2 \\frac{dC}{dr}\\right) = \\frac{q}{D} $$\nThis is the steady-state reaction-diffusion equation in spherical coordinates for a zero-order reaction.\n\nTo solve this ODE, we integrate it twice. Integrating once with respect to $r$:\n$$ r^2 \\frac{dC}{dr} = \\frac{q}{3D} r^3 + c_1 $$\nwhere $c_1$ is an integration constant. Dividing by $r^2$:\n$$ \\frac{dC}{dr} = \\frac{qr}{3D} + \\frac{c_1}{r^2} $$\nIntegrating a second time with respect to $r$:\n$$ C(r) = \\frac{qr^2}{6D} - \\frac{c_1}{r} + c_2 $$\nwhere $c_2$ is the second integration constant. This is the general solution for the concentration profile.\n\nWe apply the two boundary conditions to determine the constants $c_1$ and $c_2$.\nThe first boundary condition is the finiteness of concentration at the center of the organoid ($r=0$).\n$$ C(0) \\text{ must be finite.} $$\nAs $r \\to 0$, the term $-\\frac{c_1}{r}$ becomes singular unless $c_1=0$. Therefore, to ensure a physically meaningful finite concentration at the center, we must set $c_1=0$.\nThe solution thus simplifies to:\n$$ C(r) = \\frac{qr^2}{6D} + c_2 $$\n\nThe second boundary condition is the flux balance at the organoid surface ($r=R$). The diffusive flux out of the organoid must equal the convective flux across the external boundary layer into the bulk medium.\n$$ -D \\frac{dC}{dr}\\bigg|_{r=R} = h (C(R) - C_m) $$\nFirst, we find the derivative $\\frac{dC}{dr}$ from our simplified solution:\n$$ \\frac{dC}{dr} = \\frac{2qr}{6D} = \\frac{qr}{3D} $$\nNow, we evaluate the terms in the boundary condition at $r=R$:\n$$ \\frac{dC}{dr}\\bigg|_{r=R} = \\frac{qR}{3D} $$\n$$ C(R) = \\frac{qR^2}{6D} + c_2 $$\nSubstituting these into the flux balance equation:\n$$ -D \\left(\\frac{qR}{3D}\\right) = h \\left(\\left(\\frac{qR^2}{6D} + c_2\\right) - C_m\\right) $$\n$$ -\\frac{qR}{3} = h \\left(\\frac{qR^2}{6D} + c_2 - C_m\\right) $$\nWe now solve for the constant $c_2$:\n$$ -\\frac{qR}{3h} = \\frac{qR^2}{6D} + c_2 - C_m $$\n$$ c_2 = C_m - \\frac{qR^2}{6D} - \\frac{qR}{3h} $$\n\nHaving found both integration constants, we can write the complete solution for the concentration profile $C(r)$ inside the organoid ($0 \\le r \\le R$):\n$$ C(r) = \\frac{qr^2}{6D} + c_2 = \\frac{qr^2}{6D} + C_m - \\frac{qR^2}{6D} - \\frac{qR}{3h} $$\nRearranging the terms gives the final expression for the concentration profile:\n$$ C(r) = C_m - \\frac{qR}{3h} - \\frac{q}{6D}(R^2 - r^2) $$\n\nThe problem asks for the concentration at the center of the organoid, $C(0)$. We obtain this by setting $r=0$ in the expression for $C(r)$:\n$$ C(0) = C_m - \\frac{qR}{3h} - \\frac{q}{6D}(R^2 - 0^2) $$\n$$ C(0) = C_m - \\frac{qR}{3h} - \\frac{qR^2}{6D} $$\nThis can be factored to give the final analytic expression:\n$$ C(0) = C_m - q\\left(\\frac{R^2}{6D} + \\frac{R}{3h}\\right) $$\nThis expression is the complete solution for the center concentration in terms of the given parameters.", "answer": "$$ \\boxed{C_m - q\\left(\\frac{R^2}{6D} + \\frac{R}{3h}\\right)} $$", "id": "2941100"}, {"introduction": "After a morphogen gradient is established, how do cells read this continuous information to make discrete fate decisions? This computational practice simulates this process by implementing the classic French flag model, integrating concepts from developmental biology, Bayesian decision theory, and statistics. You will define fate boundaries based on gene sensitivities and then quantify the reliability of this patterning system in the presence of biological noise, providing insight into the principles of robust tissue self-organization [@problem_id:2941106].", "problem": "A morphogen gradient can be used to direct differentiation in organoids by partitioning space into three fates according to the French flag model. The fundamental base is that morphogen concentration $C(x)$ at position $x$ regulates transcriptional responses via binding-dependent activation characterized by Hill-type dose-response curves and that single-cell readouts of external ligand concentration are typically subject to multiplicative fluctuations that are well-approximated by log-normal noise. The core definitions are: transcriptional activation of targets with distinct half-maximal effective concentrations (denoted here as sensitivities) $K$, and a three-domain decision rule formed by two concentration thresholds $T_{1}$ and $T_{2}$ satisfying $T_{1} < T_{2}$. The three domains are defined as: low domain where $C(x) < T_{1}$, intermediate domain where $T_{1} \\le C(x) < T_{2}$, and high domain where $C(x) \\ge T_{2}$.\n\nStarting from the definitions:\n- A target gene with sensitivity $K$ exhibits a Hill response $R(C;K,n) = \\dfrac{C^{n}}{C^{n} + K^{n}}$ with Hill coefficient $n$.\n- Concentration readout noise is log-normal: if the nominal $\\ln C = y$, a cell’s effective log-sensed concentration is $Z \\sim \\mathcal{N}(y, \\sigma^{2})$ with log-standard-deviation $\\sigma$ that does not depend on $x$.\n- Under equal priors and equal log-variance for alternative target genes with characteristic scales $K$, the Bayes-optimal decision boundary for classifying $C$ between two adjacent gene sensitivities $K_{i}$ and $K_{j}$ lies at the midpoint in log-concentration: $\\ln T = \\dfrac{\\ln K_{i} + \\ln K_{j}}{2}$.\n\nYou must implement a program that, for each test case, does the following:\n1. Uses three known target gene sensitivities $K_{\\text{low}}$, $K_{\\text{mid}}$, and $K_{\\text{high}}$ (with $K_{\\text{low}} < K_{\\text{mid}} < K_{\\text{high}}$) to compute Bayesian decision thresholds justified by these sensitivities:\n   - $T_{1} = \\sqrt{K_{\\text{low}} K_{\\text{mid}}}$,\n   - $T_{2} = \\sqrt{K_{\\text{mid}} K_{\\text{high}}}$.\n2. Given a monotonic decreasing ligand profile $C(x)$ on a one-dimensional domain $x \\in [0,L]$, computes the spatial boundary positions $x_{1}$ and $x_{2}$ that satisfy $C(x_{1}) = T_{1}$ and $C(x_{2}) = T_{2}$, respectively. If a threshold $T$ lies outside the range of $C(x)$ over $[0,L]$, return $-1.0$ for the corresponding position. Assume the following invertible profiles, each strictly positive in their admissible ranges:\n   - Exponential: $C(x) = C_{0}\\,\\exp(-x/\\lambda)$ with inverse $x(T) = \\lambda \\ln\\!\\big(C_{0}/T\\big)$ valid for $T \\in \\big(C_{0}\\exp(-L/\\lambda),\\, C_{0}\\big)$.\n   - Linear decreasing to zero: $C(x) = C_{0}\\,\\big(1 - x/L\\big)$ with inverse $x(T) = L\\big(1 - T/C_{0}\\big)$ valid for $T \\in \\big(0,\\, C_{0}\\big)$. Treat $x=L$ as excluded when evaluating probabilities that require $\\ln C(x)$.\n   - Logistic (decreasing): $C(x) = C_{\\min} + \\dfrac{C_{\\max} - C_{\\min}}{1 + \\exp\\!\\big((x - x_{0})/k\\big)}$ with inverse $x(T) = x_{0} + k\\,\\ln\\!\\big(\\dfrac{C_{\\max} - C_{\\min}}{T - C_{\\min}} - 1\\big)$ valid for $T \\in \\big(C_{\\min},\\, C_{\\max}\\big)$.\n3. Computes the expected misclassification risk under log-normal sensing noise of scale $\\sigma$ for the French flag thresholding rule. Let $y(x) = \\ln C(x)$, and let $a = \\ln T_{1}$, $b = \\ln T_{2}$. The nominal domain label at position $x$ is determined by comparing $C(x)$ to $T_{1}$ and $T_{2}$. The probability of correct classification at $x$ equals:\n   - If $C(x) < T_{1}$: $P_{\\text{correct}}(x) = \\Phi\\!\\left(\\dfrac{a - y(x)}{\\sigma}\\right)$.\n   - If $T_{1} \\le C(x) < T_{2}$: $P_{\\text{correct}}(x) = \\Phi\\!\\left(\\dfrac{b - y(x)}{\\sigma}\\right) - \\Phi\\!\\left(\\dfrac{a - y(x)}{\\sigma}\\right)$.\n   - If $C(x) \\ge T_{2}$: $P_{\\text{correct}}(x) = 1 - \\Phi\\!\\left(\\dfrac{b - y(x)}{\\sigma}\\right)$.\n   Here $\\Phi(\\cdot)$ is the standard normal cumulative distribution function. The misclassification probability is $1 - P_{\\text{correct}}(x)$, and the expected risk is the spatial average over $x \\in [0,L]$. For $\\sigma = 0$, define the risk to be $0$.\n4. Returns for each test case the list $[T_{1}, T_{2}, x_{1}, x_{2}, \\text{risk}]$ as floating-point numbers.\n\nUnits and numeric requirements:\n- Concentrations $C$, $K$, $T_{1}$, and $T_{2}$ must be in nanomolar (nM).\n- Positions $x$, $x_{1}$, and $x_{2}$ must be in millimeters (mm).\n- The expected risk must be reported as a decimal fraction.\n- Your program must round all reported floats to $6$ decimal places.\n\nTest suite:\nProvide results for the following five test cases, each with scientifically consistent parameters:\n\n- Case $1$ (exponential): $L = 5.0$ mm, $C_{0} = 100.0$ nM, $\\lambda = 1.5$ mm, $K_{\\text{low}} = 5.0$ nM, $K_{\\text{mid}} = 20.0$ nM, $K_{\\text{high}} = 80.0$ nM, $n = 2.0$, $\\sigma = 0.25$.\n- Case $2$ (linear): $L = 10.0$ mm, $C_{0} = 50.0$ nM, $K_{\\text{low}} = 2.0$ nM, $K_{\\text{mid}} = 10.0$ nM, $K_{\\text{high}} = 40.0$ nM, $n = 2.0$, $\\sigma = 0.10$.\n- Case $3$ (logistic): $L = 10.0$ mm, $C_{\\min} = 1.0$ nM, $C_{\\max} = 200.0$ nM, $x_{0} = 3.0$ mm, $k = 0.8$ mm, $K_{\\text{low}} = 5.0$ nM, $K_{\\text{mid}} = 30.0$ nM, $K_{\\text{high}} = 120.0$ nM, $n = 2.0$, $\\sigma = 0.30$.\n- Case $4$ (exponential, missing high domain): $L = 4.0$ mm, $C_{0} = 30.0$ nM, $\\lambda = 2.0$ mm, $K_{\\text{low}} = 5.0$ nM, $K_{\\text{mid}} = 40.0$ nM, $K_{\\text{high}} = 100.0$ nM, $n = 2.0$, $\\sigma = 0.20$.\n- Case $5$ (exponential, both thresholds below minimum concentration): $L = 5.0$ mm, $C_{0} = 1000.0$ nM, $\\lambda = 100.0$ mm, $K_{\\text{low}} = 5.0$ nM, $K_{\\text{mid}} = 10.0$ nM, $K_{\\text{high}} = 20.0$ nM, $n = 2.0$, $\\sigma = 0.15$.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element is a sublist for one test case in the order above. Each sublist must be of the form $[T_{1},T_{2},x_{1},x_{2},\\text{risk}]$, for example:\n$[[\\dots],[\\dots],[\\dots],[\\dots],[\\dots]]$.", "solution": "The problem statement is scientifically and mathematically valid. It describes a well-posed problem in quantitative developmental biology, based on the established French flag model of morphogen-driven patterning. The concepts of Hill-type transcriptional regulation, log-normal sensing noise, and Bayesian decision theory are standard in the field. The provided parameters are plausible, and the tasks are specified with sufficient detail and logical consistency to permit a unique solution. Therefore, a reasoned solution will be provided.\n\nThe problem requires the calculation of several quantities related to a three-domain pattern formed by a morphogen gradient. The overall procedure involves four main steps for each test case:\n1.  Calculation of decision thresholds from gene sensitivities.\n2.  Determination of spatial boundary positions corresponding to these thresholds.\n3.  Computation of the system-wide misclassification risk under log-normal noise.\n4.  Formatting the results as specified.\n\nLet's detail the methodology for each step.\n\n**Step 1: Computation of Bayesian Decision Thresholds**\n\nThe problem states that under assumptions of equal priors and log-variance, the Bayes-optimal decision boundary between two target genes with sensitivities $K_i$ and $K_j$ is their geometric mean. For the three-domain French flag model, we have three characteristic gene sensitivities, $K_{\\text{low}}$, $K_{\\text{mid}}$, and $K_{\\text{high}}$, which define two boundaries. The lower threshold, $T_1$, separates the \"low\" and \"intermediate\" domains, and is determined by $K_{\\text{low}}$ and $K_{\\text{mid}}$. The upper threshold, $T_2$, separates the \"intermediate\" and \"high\" domains, and is determined by $K_{\\text{mid}}$ and $K_{\\text{high}}$. Their values are computed as:\n$$\nT_1 = \\sqrt{K_{\\text{low}} K_{\\text{mid}}}\n$$\n$$\nT_2 = \\sqrt{K_{\\text{mid}} K_{\\text{high}}}\n$$\nGiven that $K_{\\text{low}} < K_{\\text{mid}} < K_{\\text{high}}$, it follows that $T_1 < T_2$.\n\n**Step 2: Computation of Spatial Boundary Positions**\n\nThe morphogen concentration $C(x)$ is a monotonically decreasing function of position $x$ on the domain $[0, L]$. The spatial boundaries $x_1$ and $x_2$ are the positions where the concentration equals the thresholds $T_1$ and $T_2$, respectively:\n$$\nC(x_1) = T_1\n$$\n$$\nC(x_2) = T_2\n$$\nTo find these positions, we use the inverse function $x(C)$ for each specified concentration profile. Since $C(x)$ is decreasing and $T_1 < T_2$, we must have $x_1 > x_2$.\n\nFirst, we must determine if a given threshold $T$ falls within the concentration range of the system, which is $[C(L), C(0)]$.\n- If $C(L) \\le T \\le C(0)$, the boundary exists within the domain $x \\in [0, L]$. Its position is found by evaluating the specific inverse function provided:\n  - Exponential profile: $C(x) = C_0 e^{-x/\\lambda}$, so $x(T) = \\lambda \\ln(C_0/T)$.\n  - Linear profile: $C(x) = C_0(1 - x/L)$, so $x(T) = L(1 - T/C_0)$.\n  - Logistic profile: $C(x) = C_{\\min} + \\frac{C_{\\max} - C_{\\min}}{1 + e^{(x-x_0)/k}}$, so $x(T) = x_0 + k \\ln\\left(\\frac{C_{\\max} - C_{\\min}}{T - C_{\\min}} - 1\\right)$.\n- If $T$ is outside the range $[C(L), C(0)]$, the corresponding boundary does not exist within the domain, and its position is assigned the value $-1.0$.\n\n**Step 3: Computation of Expected Misclassification Risk**\n\nThe misclassification risk is the probability of a cell incorrectly identifying its fate, averaged over the entire spatial domain. The noise in concentration sensing is modeled as log-normal, meaning that if the true log-concentration is $y(x) = \\ln C(x)$, a cell perceives a log-concentration $Z$ drawn from a normal distribution $\\mathcal{N}(y(x), \\sigma^2)$.\n\nThe probability of correct classification, $P_{\\text{correct}}(x)$, depends on the \"true\" domain at position $x$, which is determined by comparing $C(x)$ to $T_1$ and $T_2$. Let $a = \\ln T_1$ and $b = \\ln T_2$. The probability of misclassification is $P_{\\text{mis}}(x) = 1 - P_{\\text{correct}}(x)$. The formulas given in the problem can be used to define $P_{\\text{mis}}(x)$:\n- If $C(x) \\ge T_2$ (High domain, $x \\le x_2$): $P_{\\text{correct}} = P(Z \\ge b) = 1 - \\Phi\\left(\\frac{b - y(x)}{\\sigma}\\right)$. Thus, $P_{\\text{mis}}(x) = \\Phi\\left(\\frac{b - y(x)}{\\sigma}\\right)$.\n- If $T_1 \\le C(x) < T_2$ (Intermediate domain, $x_2 < x \\le x_1$): $P_{\\text{correct}} = P(a \\le Z < b) = \\Phi\\left(\\frac{b - y(x)}{\\sigma}\\right) - \\Phi\\left(\\frac{a - y(x)}{\\sigma}\\right)$. Thus, $P_{\\text{mis}}(x) = 1 - \\left[\\Phi\\left(\\frac{b - y(x)}{\\sigma}\\right) - \\Phi\\left(\\frac{a - y(x)}{\\sigma}\\right)\\right]$.\n- If $C(x) < T_1$ (Low domain, $x > x_1$): $P_{\\text{correct}} = P(Z < a) = \\Phi\\left(\\frac{a - y(x)}{\\sigma}\\right)$. Thus, $P_{\\text{mis}}(x) = 1 - \\Phi\\left(\\frac{a - y(x)}{\\sigma}\\right)$.\n\nHere, $\\Phi(\\cdot)$ is the cumulative distribution function (CDF) of the standard normal distribution. If the noise parameter $\\sigma = 0$, position sensing is perfect, and the risk is defined to be $0$.\n\nThe expected misclassification risk is the spatial average of $P_{\\text{mis}}(x)$ over the domain $[0, L]$:\n$$\n\\text{Risk} = \\frac{1}{L} \\int_0^L P_{\\text{mis}}(x) \\, dx\n$$\nThis integral does not generally have a simple analytical solution and must be computed numerically. We can implement a single function for the integrand, $P_{\\text{mis}}(x)$, which internally determines the correct formula to use based on the value of $C(x)$ at a given $x$. This function is then passed to a numerical quadrature routine, such as `scipy.integrate.quad`, to evaluate the definite integral from $0$ to $L$. The special cases where one or both thresholds are outside the concentration range are handled naturally by this approach, as the integrand function will simply select the appropriate formula for $P_{\\text{mis}}(x)$ for all $x \\in [0, L]$.\n\n**Algorithmic Summary**\n\nFor each test case:\n1.  Calculate $T_1$ and $T_2$ using the provided sensitivity values $K_{\\text{low}}, K_{\\text{mid}}, K_{\\text{high}}$.\n2.  Define the functions for the concentration profile $C(x)$ and its inverse $x(T)$ based on the test case parameters.\n3.  Calculate the concentration range $[C(L), C(0)]$.\n4.  Determine $x_1$ and $x_2$ by applying the inverse function $x(T)$ if the thresholds $T_1$ and $T_2$ are within the concentration range; otherwise, assign $-1.0$.\n5.  If $\\sigma=0$, the risk is $0$. Otherwise, define an integrand function that computes $P_{\\text{mis}}(x)$ for any $x \\in [0, L]$.\n6.  Use numerical integration to compute $\\int_0^L P_{\\text{mis}}(x) \\, dx$.\n7.  The final risk is the integral result divided by the domain length $L$.\n8.  Collect and round all five output values ($T_1, T_2, x_1, x_2$, risk) to $6$ decimal places.\n\nThis procedure will be systematically applied to each of the five test cases provided.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Solves the French flag model problem for a suite of test cases.\n    \"\"\"\n    test_cases = [\n        # Case 1 (exponential)\n        {'profile': 'exponential', 'params': {'L': 5.0, 'C0': 100.0, 'lambda_': 1.5},\n         'K_vals': {'low': 5.0, 'mid': 20.0, 'high': 80.0}, 'sigma': 0.25},\n        # Case 2 (linear)\n        {'profile': 'linear', 'params': {'L': 10.0, 'C0': 50.0},\n         'K_vals': {'low': 2.0, 'mid': 10.0, 'high': 40.0}, 'sigma': 0.10},\n        # Case 3 (logistic)\n        {'profile': 'logistic', 'params': {'L': 10.0, 'Cmin': 1.0, 'Cmax': 200.0, 'x0': 3.0, 'k': 0.8},\n         'K_vals': {'low': 5.0, 'mid': 30.0, 'high': 120.0}, 'sigma': 0.30},\n        # Case 4 (exponential, missing high domain)\n        {'profile': 'exponential', 'params': {'L': 4.0, 'C0': 30.0, 'lambda_': 2.0},\n         'K_vals': {'low': 5.0, 'mid': 40.0, 'high': 100.0}, 'sigma': 0.20},\n        # Case 5 (exponential, both thresholds below minimum concentration)\n        {'profile': 'exponential', 'params': {'L': 5.0, 'C0': 1000.0, 'lambda_': 100.0},\n         'K_vals': {'low': 5.0, 'mid': 10.0, 'high': 20.0}, 'sigma': 0.15},\n    ]\n\n    results = []\n    for case in test_cases:\n        results.append(process_case(case))\n\n    # Format output as a list of lists, with values rounded.\n    formatted_results = []\n    for res_list in results:\n        formatted_results.append(\n            [f\"{x:.6f}\" for x in res_list]\n        )\n    print(str(formatted_results).replace(\"'\", \"\"))\n\n\ndef process_case(case):\n    \"\"\"\n    Processes a single test case.\n    \"\"\"\n    params = case['params']\n    K_vals = case['K_vals']\n    sigma = case['sigma']\n    profile_type = case['profile']\n    L = params['L']\n\n    # Step 1: Compute thresholds\n    T1 = np.sqrt(K_vals['low'] * K_vals['mid'])\n    T2 = np.sqrt(K_vals['mid'] * K_vals['high'])\n\n    # Define concentration profiles and their inverses\n    if profile_type == 'exponential':\n        C0, lambda_ = params['C0'], params['lambda_']\n        C_func = lambda x: C0 * np.exp(-x / lambda_)\n        x_func = lambda T: lambda_ * np.log(C0 / T)\n    elif profile_type == 'linear':\n        C0 = params['C0']\n        C_func = lambda x: C0 * (1 - x / L)\n        x_func = lambda T: L * (1 - T / C0)\n    elif profile_type == 'logistic':\n        Cmin, Cmax, x0, k = params['Cmin'], params['Cmax'], params['x0'], params['k']\n        C_func = lambda x: Cmin + (Cmax - Cmin) / (1 + np.exp((x - x0) / k))\n        x_func = lambda T: x0 + k * np.log((Cmax - Cmin) / (T - Cmin) - 1)\n    \n    # Step 2: Compute spatial boundaries\n    C_at_0 = C_func(0)\n    C_at_L = C_func(L)\n    \n    # Concentration is decreasing, so range is [C(L), C(0)]\n    min_C, max_C = C_at_L, C_at_0\n\n    # Ensure T is in the valid range for the inverse function argument to be positive\n    def is_in_range(T, Cmin, Cmax):\n        return Cmin <= T <= Cmax\n\n    x1 = x_func(T1) if is_in_range(T1, min_C, max_C) else -1.0\n    x2 = x_func(T2) if is_in_range(T2, min_C, max_C) else -1.0\n\n    # Step 3: Compute misclassification risk\n    if sigma == 0.0:\n        risk = 0.0\n    else:\n        a = np.log(T1)\n        b = np.log(T2)\n\n        def p_mis(x):\n            C_x = C_func(x)\n            if C_x <= 0: # Avoid log(0) for linear profile at x=L\n                # As C -> 0, it's firmly in the low domain.\n                # y -> -inf, (a-y)/sigma -> +inf, Phi -> 1, 1-Phi -> 0.\n                return 0.0\n            \n            y_x = np.log(C_x)\n            \n            # Probability of correct classification\n            if C_x < T1: # Low domain\n                p_correct = norm.cdf((a - y_x) / sigma)\n            elif T1 <= C_x < T2: # Intermediate domain\n                p_correct = norm.cdf((b - y_x) / sigma) - norm.cdf((a - y_x) / sigma)\n            else: # High domain (C_x >= T2)\n                p_correct = 1 - norm.cdf((b - y_x) / sigma)\n            \n            return 1 - p_correct\n\n        # Numerically integrate p_mis over [0, L]\n        total_misclassification, _ = quad(p_mis, 0, L, epsabs=1e-9, epsrel=1e-9)\n        risk = total_misclassification / L\n\n    # Step 4: Return rounded results\n    return [\n        round(T1, 6),\n        round(T2, 6),\n        round(x1, 6),\n        round(x2, 6),\n        round(risk, 6)\n    ]\n\nsolve()\n```", "id": "2941106"}]}