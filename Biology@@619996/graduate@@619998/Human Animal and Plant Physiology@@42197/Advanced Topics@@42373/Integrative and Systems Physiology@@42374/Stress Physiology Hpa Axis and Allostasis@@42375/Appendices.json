{"hands_on_practices": [{"introduction": "The physiological impact of cortisol is ultimately determined by its binding to the intracellular glucocorticoid receptor (GR). However, the total concentration of cortisol in the blood is not the direct determinant of this interaction, as the majority is bound to plasma proteins like Corticosteroid-Binding Globulin (CBG), rendering it inactive. This exercise guides you through the process of modeling this crucial buffering system to calculate the true biologically active free cortisol concentration and, subsequently, the fractional occupancy of the GR, providing a more accurate picture of hormone signaling under physiological conditions [@problem_id:2610528].", "problem": "In stress physiology within the Hypothalamic-Pituitary-Adrenal (HPA) axis, circulating cortisol is reversibly buffered by Corticosteroid-Binding Globulin (CBG), which modulates the free cortisol available to bind the intracellular Glucocorticoid Receptor (GR). Under allostatic adjustments, GR-mediated transcriptional responses depend on the fraction of GR occupied by cortisol. Consider a single, well-mixed compartment at steady state with the following assumptions: (i) cortisol binds CBG in a one-to-one reversible interaction; (ii) albumin and nonspecific binding are negligible; (iii) intracellular free cortisol equilibrates rapidly with plasma free cortisol; (iv) GR concentration is sufficiently low compared to CBG that GR binding does not appreciably perturb the free cortisol concentration that is set by the CBG buffer.\n\nStarting from the law of mass action and conservation of mass, derive a closed-form expression for the GR fractional occupancy $f_{\\mathrm{GR}}$ as a function of total cortisol concentration $C_{\\mathrm{T}}$, total CBG concentration $B_{\\mathrm{T}}$, the CBG dissociation constant $K_{d,\\mathrm{CBG}}$, and the GR dissociation constant $K_{d,\\mathrm{GR}}$. Then evaluate $f_{\\mathrm{GR}}$ for the following physiologically plausible parameters (all concentrations in $\\mathrm{nM}$):\n- total cortisol $C_{\\mathrm{T}} = 600$,\n- total CBG $B_{\\mathrm{T}} = 1000$,\n- $K_{d,\\mathrm{CBG}} = 40$,\n- $K_{d,\\mathrm{GR}} = 10$.\n\nExpress the final fractional occupancy as a unitless decimal and round your answer to four significant figures.", "solution": "The goal is to obtain the GR fractional occupancy $f_{\\mathrm{GR}}$ that accounts for the buffering of free cortisol by Corticosteroid-Binding Globulin (CBG). The relevant foundational principles are the law of mass action for reversible binding and conservation of mass.\n\nDefine the following concentrations: free cortisol $C$, free CBG $B$, the cortisol–CBG complex $BC$, and total pools $C_{\\mathrm{T}}$ and $B_{\\mathrm{T}}$. The reversible binding reaction for CBG is\n$$\n\\mathrm{C} + \\mathrm{CBG} \\rightleftharpoons \\mathrm{CBG}\\!:\\!\\mathrm{C},\n$$\nwith dissociation constant\n$$\nK_{d,\\mathrm{CBG}} = \\frac{[C][B]}{[BC]}.\n$$\nConservation of mass for CBG gives\n$$\nB_{\\mathrm{T}} = B + BC,\n$$\nand for cortisol (under assumption that GR binding does not appreciably deplete free cortisol in the bulk buffer) gives\n$$\nC_{\\mathrm{T}} = C + BC.\n$$\nFrom the definition of $K_{d,\\mathrm{CBG}}$ and $B = B_{\\mathrm{T}} - BC$, we can express the complex concentration as a function of $C$:\n$$\nK_{d,\\mathrm{CBG}} = \\frac{C\\,(B_{\\mathrm{T}} - BC)}{BC} \\quad \\Longrightarrow \\quad BC = \\frac{B_{\\mathrm{T}}\\,C}{K_{d,\\mathrm{CBG}} + C}.\n$$\nInsert this into the cortisol mass balance to obtain an implicit equation for the free cortisol $C$:\n$$\nC_{\\mathrm{T}} = C + \\frac{B_{\\mathrm{T}}\\,C}{K_{d,\\mathrm{CBG}} + C}.\n$$\nMultiply both sides by $(K_{d,\\mathrm{CBG}} + C)$ to clear the denominator:\n$$\nC_{\\mathrm{T}}(K_{d,\\mathrm{CBG}} + C) = C\\,(K_{d,\\mathrm{CBG}} + C) + B_{\\mathrm{T}}\\,C.\n$$\nRearrange to a quadratic in $C$:\n$$\n0 = C^{2} + C\\,(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}) - C_{\\mathrm{T}}\\,K_{d,\\mathrm{CBG}}.\n$$\nThe physically relevant (nonnegative) root gives the free cortisol concentration:\n$$\nC = \\frac{-\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big) + \\sqrt{\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big)^{2} + 4\\,C_{\\mathrm{T}}\\,K_{d,\\mathrm{CBG}}}}{2}.\n$$\nGR fractional occupancy under a simple one-to-one ligand–receptor interaction at equilibrium follows from the law of mass action as\n$$\nf_{\\mathrm{GR}} = \\frac{C}{K_{d,\\mathrm{GR}} + C}.\n$$\nCombining, the desired closed-form model that includes CBG buffering is\n$$\nf_{\\mathrm{GR}}(C_{\\mathrm{T}},B_{\\mathrm{T}},K_{d,\\mathrm{CBG}},K_{d,\\mathrm{GR}}) \\;=\\; \\frac{\\displaystyle \\frac{-\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big) + \\sqrt{\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big)^{2} + 4\\,C_{\\mathrm{T}}\\,K_{d,\\mathrm{CBG}}}}{2}}{\\displaystyle K_{d,\\mathrm{GR}} + \\frac{-\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big) + \\sqrt{\\big(K_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}}\\big)^{2} + 4\\,C_{\\mathrm{T}}\\,K_{d,\\mathrm{CBG}}}}{2}}.\n$$\nNow evaluate numerically for $C_{\\mathrm{T}} = 600$, $B_{\\mathrm{T}} = 1000$, $K_{d,\\mathrm{CBG}} = 40$, and $K_{d,\\mathrm{GR}} = 10$ (all in $\\mathrm{nM}$). First compute $C$:\n$$\nK_{d,\\mathrm{CBG}} + B_{\\mathrm{T}} - C_{\\mathrm{T}} = 40 + 1000 - 600 = 440,\n$$\n$$\n\\Delta = (440)^{2} + 4\\cdot 600 \\cdot 40 = 193{,}600 + 96{,}000 = 289{,}600,\n$$\n$$\n\\sqrt{\\Delta} \\approx 538.14495,\n$$\n$$\nC = \\frac{-440 + 538.14495}{2} \\approx \\frac{98.14495}{2} \\approx 49.072475.\n$$\nThen compute the GR occupancy:\n$$\nf_{\\mathrm{GR}} = \\frac{C}{K_{d,\\mathrm{GR}} + C} = \\frac{49.072475}{10 + 49.072475} = \\frac{49.072475}{59.072475} \\approx 0.8307164.\n$$\nRounded to four significant figures as a unitless decimal,\n$$\nf_{\\mathrm{GR}} \\approx 0.8307.\n$$", "answer": "$$\\boxed{0.8307}$$", "id": "2610528"}, {"introduction": "Having examined how cortisol interacts with its receptor, we now turn our attention to its synthesis within the adrenal glands. This practice employs a quantitative model grounded in Michaelis-Menten kinetics to simulate the steroidogenic pathway, a core process in the HPA axis. By introducing a partial deficiency in a key enzyme, CYP21A2, you will calculate the resulting accumulation of precursor molecules and the reduction in cortisol output, thereby gaining a hands-on understanding of the pathophysiology of conditions like congenital adrenal hyperplasia [@problem_id:2610508].", "problem": "A simplified steady-state model of zona fasciculata steroidogenesis under fixed allostatic drive is considered to quantify the effect of a partial enzyme deficiency on precursor accumulation and cortisol output. Under control conditions, Adrenocorticotropic Hormone (ACTH) drive from the Hypothalamic-Pituitary-Adrenal (HPA) axis sets an upstream constant influx of the immediate cortisol precursor, taken here as $17$-hydroxyprogesterone, into the zona fasciculata at rate $J_{\\mathrm{in}}$ (units $\\mathrm{nM\\,min^{-1}}$). The conversion step governed by Cytochrome P450 $21$-hydroxylase (CYP21A2) is modeled by Michaelis–Menten kinetics with maximal rate $V_{\\max}$ and Michaelis constant $K_{m}$. The precursor pool has an additional first-order loss with rate constant $k_{s}$ (units $\\mathrm{min^{-1}}$), representing sequestration and side-path metabolism. Cortisol is formed stoichiometrically from the CYP21A2 flux downstream (assuming no further bottleneck) and removed with first-order clearance rate constant $k_{c}$ (units $\\mathrm{min^{-1}}$).\n\nStarting from conservation of mass balances and well-tested kinetic laws, assume steady state for both the precursor concentration $S$ and cortisol concentration $C$, with equations\n$${\\frac{dS}{dt}} = J_{\\mathrm{in}} - v - k_{s}\\,S = 0, \\quad v = \\frac{V_{\\max}\\,S}{K_{m} + S}, \\quad {\\frac{dC}{dt}} = v - k_{c}\\,C = 0.$$\nA partial CYP21A2 deficiency is modeled as a $50\\,\\%$ reduction in $V_{\\max}$ with all other parameters unchanged, while the fixed drive $J_{\\mathrm{in}}$ is maintained (representing a constant allostatic load).\n\nUse the following physiologically plausible parameter values:\n- $J_{\\mathrm{in}} = 100\\,\\mathrm{nM\\,min^{-1}}$,\n- $V_{\\max} = 300\\,\\mathrm{nM\\,min^{-1}}$ under control and $V_{\\max}^{\\mathrm{def}} = 0.5\\,V_{\\max}$ under deficiency,\n- $K_{m} = 50\\,\\mathrm{nM}$,\n- $k_{s} = 0.10\\,\\mathrm{min^{-1}}$,\n- $k_{c} = 0.050\\,\\mathrm{min^{-1}}$.\n\nCompute:\n- the fold-change in steady-state precursor concentration, defined as $S_{\\mathrm{def}}/S_{\\mathrm{norm}}$,\n- the fractional reduction in steady-state cortisol concentration, defined as $(C_{\\mathrm{norm}} - C_{\\mathrm{def}})/C_{\\mathrm{norm}}$.\n\nReport your final answer as a two-entry row vector $\\big[S_{\\mathrm{def}}/S_{\\mathrm{norm}} \\;\\; (C_{\\mathrm{norm}} - C_{\\mathrm{def}})/C_{\\mathrm{norm}}\\big]$, unitless, rounded to four significant figures.", "solution": "The problem requires the analysis of a simplified model of adrenal steroidogenesis at steady state under two conditions: a normal (control) condition and a condition of partial enzyme deficiency.\n\nThe system is described by the following set of equations at steady state:\n$$\n\\frac{dS}{dt} = J_{\\mathrm{in}} - v - k_{s} S = 0\n$$\n$$\n\\frac{dC}{dt} = v - k_{c} C = 0\n$$\nwhere the reaction velocity $v$ is given by the Michaelis-Menten expression:\n$$\nv = \\frac{V_{\\max} S}{K_{m} + S}\n$$\nHere, $S$ is the precursor concentration ($17$-hydroxyprogesterone), $C$ is the product concentration (cortisol), $J_{\\mathrm{in}}$ is the constant influx rate of the precursor, $V_{\\max}$ and $K_{m}$ are the Michaelis-Menten parameters for the enzyme CYP21A2, $k_{s}$ is the first-order rate constant for precursor sequestration, and $k_{c}$ is the first-order rate constant for cortisol clearance.\n\nFirst, we solve for the steady-state precursor concentration, $S$. From the first steady-state equation, we have:\n$$\nJ_{\\mathrm{in}} = v + k_{s} S\n$$\nSubstituting the expression for $v$:\n$$\nJ_{\\mathrm{in}} = \\frac{V_{\\max} S}{K_{m} + S} + k_{s} S\n$$\nTo solve for $S$, we rearrange this equation into a standard quadratic form, $aS^2 + bS + c = 0$.\n$$\nJ_{\\mathrm{in}}(K_{m} + S) = V_{\\max} S + k_{s} S(K_{m} + S)\n$$\n$$\nJ_{\\mathrm{in}} K_{m} + J_{\\mathrm{in}} S = V_{\\max} S + k_{s} K_{m} S + k_{s} S^2\n$$\n$$\nk_{s} S^2 + (V_{\\max} + k_{s} K_{m} - J_{\\mathrm{in}}) S - J_{\\mathrm{in}} K_{m} = 0\n$$\nThe physiologically meaningful solution for $S$ must be positive. The solution to this quadratic equation is given by:\n$$\nS = \\frac{-(V_{\\max} + k_{s} K_{m} - J_{\\mathrm{in}}) + \\sqrt{(V_{\\max} + k_{s} K_{m} - J_{\\mathrm{in}})^2 - 4(k_{s})(-J_{\\mathrm{in}} K_{m})}}{2k_{s}}\n$$\nThe positive root is chosen because the term under the square root is strictly greater than the square of the first term in the numerator, ensuring $S > 0$.\n\nWe now calculate $S$ for both normal ($S_{\\mathrm{norm}}$) and deficient ($S_{\\mathrm{def}}$) conditions using the provided parameters:\n$J_{\\mathrm{in}} = 100\\,\\mathrm{nM\\,min^{-1}}$, $K_{m} = 50\\,\\mathrm{nM}$, and $k_{s} = 0.10\\,\\mathrm{min^{-1}}$.\n\nFor the normal condition ($S_{\\mathrm{norm}}$), $V_{\\max} = 300\\,\\mathrm{nM\\,min^{-1}}$.\nThe coefficient of the quadratic term is $a = k_s = 0.10$.\nThe coefficient of the linear term is $b = V_{\\max} + k_s K_m - J_{\\mathrm{in}} = 300 + (0.10)(50) - 100 = 205$.\nThe constant term is $c = -J_{\\mathrm{in}} K_m = -(100)(50) = -5000$.\nThe equation is $0.10 S_{\\mathrm{norm}}^2 + 205 S_{\\mathrm{norm}} - 5000 = 0$.\nSolving for $S_{\\mathrm{norm}}$:\n$$\nS_{\\mathrm{norm}} = \\frac{-205 + \\sqrt{205^2 + 4(0.10)(5000)}}{2(0.10)} = \\frac{-205 + \\sqrt{42025 + 2000}}{0.20} = \\frac{-205 + \\sqrt{44025}}{0.20} \\approx \\frac{-205 + 209.82135}{0.20} \\approx 24.10677\\,\\mathrm{nM}\n$$\n\nFor the deficient condition ($S_{\\mathrm{def}}$), $V_{\\max}^{\\mathrm{def}} = 0.5 \\times 300 = 150\\,\\mathrm{nM\\,min^{-1}}$.\nThe coefficient $a$ and term $c$ remain the same. The coefficient $b$ changes:\n$b' = V_{\\max}^{\\mathrm{def}} + k_s K_m - J_{\\mathrm{in}} = 150 + (0.10)(50) - 100 = 55$.\nThe equation is $0.10 S_{\\mathrm{def}}^2 + 55 S_{\\mathrm{def}} - 5000 = 0$.\nSolving for $S_{\\mathrm{def}}$:\n$$\nS_{\\mathrm{def}} = \\frac{-55 + \\sqrt{55^2 + 4(0.10)(5000)}}{2(0.10)} = \\frac{-55 + \\sqrt{3025 + 2000}}{0.20} = \\frac{-55 + \\sqrt{5025}}{0.20} \\approx \\frac{-55 + 70.88723}{0.20} \\approx 79.43617\\,\\mathrm{nM}\n$$\nThe fold-change in precursor concentration is the ratio $S_{\\mathrm{def}}/S_{\\mathrm{norm}}$:\n$$\n\\frac{S_{\\mathrm{def}}}{S_{\\mathrm{norm}}} \\approx \\frac{79.43617}{24.10677} \\approx 3.29521\n$$\nRounded to four significant figures, this is $3.295$.\n\nNext, we solve for the steady-state cortisol concentration, $C$. From the second steady-state equation, we have $v = k_{c} C$, which gives $C = v/k_{c}$.\nAlso, from the first steady-state equation, $v = J_{\\mathrm{in}} - k_{s} S$.\nTherefore, the steady-state cortisol concentration is directly related to the precursor concentration $S$:\n$$\nC = \\frac{J_{\\mathrm{in}} - k_{s} S}{k_{c}}\n$$\nWe use $k_{c} = 0.050\\,\\mathrm{min^{-1}}$.\n\nFor the normal condition ($C_{\\mathrm{norm}}$):\n$$\nC_{\\mathrm{norm}} = \\frac{J_{\\mathrm{in}} - k_{s} S_{\\mathrm{norm}}}{k_{c}} \\approx \\frac{100 - (0.10)(24.10677)}{0.050} = \\frac{97.589323}{0.050} \\approx 1951.786\\,\\mathrm{nM}\n$$\nFor the deficient condition ($C_{\\mathrm{def}}$):\n$$\nC_{\\mathrm{def}} = \\frac{J_{\\mathrm{in}} - k_{s} S_{\\mathrm{def}}}{k_{c}} \\approx \\frac{100 - (0.10)(79.43617)}{0.050} = \\frac{92.056383}{0.050} \\approx 1841.128\\,\\mathrm{nM}\n$$\nThe fractional reduction in cortisol concentration is given by $(C_{\\mathrm{norm}} - C_{\\mathrm{def}})/C_{\\mathrm{norm}}$.\n$$\n\\frac{C_{\\mathrm{norm}} - C_{\\mathrm{def}}}{C_{\\mathrm{norm}}} = 1 - \\frac{C_{\\mathrm{def}}}{C_{\\mathrm{norm}}} \\approx 1 - \\frac{1841.128}{1951.786} \\approx 1 - 0.943305 \\approx 0.056695\n$$\nThis can also be expressed as:\n$$\n\\frac{C_{\\mathrm{norm}} - C_{\\mathrm{def}}}{C_{\\mathrm{norm}}} = \\frac{(J_{\\mathrm{in}} - k_s S_{\\mathrm{norm}}) - (J_{\\mathrm{in}} - k_s S_{\\mathrm{def}})}{J_{\\mathrm{in}} - k_s S_{\\mathrm{norm}}} = \\frac{k_s(S_{\\mathrm{def}} - S_{\\mathrm{norm}})}{J_{\\mathrm{in}} - k_s S_{\\mathrm{norm}}}\n$$\nUsing the values we found:\n$$\n\\frac{C_{\\mathrm{norm}} - C_{\\mathrm{def}}}{C_{\\mathrm{norm}}} \\approx \\frac{0.10(79.43617 - 24.10677)}{100 - 0.10(24.10677)} = \\frac{5.53294}{97.589323} \\approx 0.056695\n$$\nRounded to four significant figures, the fractional reduction is $0.05670$.\n\nThe final answer is a two-entry row vector containing the fold-change in $S$ and the fractional reduction in $C$.", "answer": "$$\n\\boxed{\n\\begin{bmatrix}\n3.295 & 0.05670\n\\end{bmatrix}\n}\n$$", "id": "2610508"}, {"introduction": "The HPA axis is not a system that operates at a simple steady state; it is a highly dynamic regulatory network characterized by distinct hormonal rhythms. This final practice moves beyond static analysis to explore the temporal dynamics of the entire feedback loop, demonstrating how the inherent time delay in cortisol's genomic negative feedback can cause the system to oscillate. By numerically solving a set of delay differential equations, you will witness the emergence of ultradian cortisol pulsatility, a fundamental feature of stress physiology that arises directly from the system's control architecture [@problem_id:2610563].", "problem": "Consider a minimal two-compartment endocrine control model for the Hypothalamic-Pituitary-Adrenal (HPA) axis that captures negative genomic feedback with finite delay. Let $A(t)$ denote adrenocorticotropic hormone (ACTH; arbitrary concentration units), and let $C(t)$ denote cortisol (in $\\mathrm{nmol/L}$). Assume the standard mass-balance principle: rate of change equals production minus clearance, and first-order clearance for both species. Negative feedback is implemented as Hill-type repression of ACTH production by delayed cortisol, representing genomic signaling latency. The mathematical model is the delay differential equation (DDE) system\n$$\n\\frac{dA}{dt} \\;=\\; s_A \\,\\frac{1}{1+\\left(\\frac{C(t-\\tau)}{K}\\right)^n} \\;-\\; k_A \\, A(t),\n\\qquad\n\\frac{dC}{dt} \\;=\\; s_C \\, A(t) \\;-\\; k_C \\, C(t),\n$$\nwhere $s_A$ and $s_C$ are production scale parameters, $k_A$ and $k_C$ are first-order clearance rate constants, $K$ is the repression midpoint, $n$ is the Hill coefficient, and $\\tau$ is the genomic feedback delay. Time must be measured in minutes and cortisol in $\\mathrm{nmol/L}$. To make this problem self-contained, take the history for $t \\le 0$ to be constant: $C(t) = C_0$ with $C_0 = K$, and $A(t) = A_0$ with $A_0 = \\dfrac{s_A}{k_A}\\,\\dfrac{1}{1+\\left(\\frac{C_0}{K}\\right)^n}$.\n\nYour task is to write a complete, runnable program that:\n- Integrates the DDE system numerically using a method-of-steps approach with a fixed-step explicit Runge–Kutta scheme, ensuring that the sub-stepping always evaluates $C(t-\\tau)$ at times $\\le t$ whenever $\\tau &gt; 0$ (you may special-case $\\tau = 0$ as an ordinary differential equation with instantaneous feedback).\n- Demonstrates that a finite genomic feedback delay $\\tau$ can generate sustained ultradian oscillations in $C(t)$ (with periods on the order of tens to a few hundreds of minutes), by simulating for a sufficiently long horizon to allow transients to decay and then detecting sustained oscillations.\n- Determines, for each parameter set in the test suite below, whether $C(t)$ exhibits sustained oscillations and, if so, estimates the oscillation period.\n\nScientific bases you may assume without proof:\n- The mass-balance law for concentrations: $dx/dt = \\text{production} - \\text{clearance}$.\n- First-order clearance: $\\text{clearance} = k\\,x$.\n- Hill-type repression for transcriptional/genomic negative feedback with finite delay.\n- Numerical method-of-steps for constant-delay DDEs with interpolation of the delayed state.\n\nDetection and reporting requirements:\n- Simulate for a total duration $T_{\\text{max}} = 1000$ minutes with a fixed time step small enough to resolve the shortest expected ultradian cycles and satisfy the method-of-steps condition when $\\tau &gt; 0$ (you may enforce $dt \\le 0.05$ minutes).\n- Discard an initial transient and analyze the last $T_{\\text{an}} = 300$ minutes.\n- Classify as “sustained oscillatory” if, over the analysis window, the cortisol amplitude satisfies $\\max C - \\min C \\ge 0.05\\,K$ and there are at least $3$ well-separated local maxima (separated by at least $15$ minutes). Otherwise classify as “non-oscillatory.”\n- If oscillatory, estimate the period as the mean separation (in minutes) between successive detected local maxima over the analysis window. Report the period rounded to one decimal place. If non-oscillatory, report $-1.0$ for the period.\n\nTest suite (each case is a $7$-tuple $(s_A,s_C,k_A,k_C,K,n,\\tau)$):\n1. $s_A=1.0$, $s_C=0.4$, $k_A=0.07$, $k_C=0.01$, $K=300$, $n=4$, $\\tau=25$.\n2. $s_A=1.0$, $s_C=0.4$, $k_A=0.07$, $k_C=0.01$, $K=300$, $n=4$, $\\tau=0$.\n3. $s_A=1.0$, $s_C=0.4$, $k_A=0.07$, $k_C=0.01$, $K=300$, $n=1$, $\\tau=25$.\n4. $s_A=1.0$, $s_C=0.4$, $k_A=0.07$, $k_C=0.01$, $K=300$, $n=5$, $\\tau=40$.\n5. $s_A=1.0$, $s_C=0.4$, $k_A=0.07$, $k_C=0.03$, $K=300$, $n=4$, $\\tau=25$.\n\nFinal output format:\n- For each test case, output a two-element list $[b,p]$ where $b$ is an integer indicator ($1$ if oscillatory, $0$ otherwise) and $p$ is the oscillation period in minutes as a floating-point number rounded to one decimal place or $-1.0$ if non-oscillatory.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, e.g., $[[1,62.5],[0,-1.0],[\\dots]]$.", "solution": "We begin from core physiological and mathematical principles. The Hypothalamic-Pituitary-Adrenal (HPA) axis features hormone production and clearance described by mass balance. For a hormone concentration $x(t)$, the fundamental law is $dx/dt = \\text{production}(t) - \\text{clearance}(t)$. First-order clearance implies $\\text{clearance}(t) = k\\,x(t)$ for some rate constant $k \\ge 0$.\n\nNegative genomic feedback of cortisol on upstream ACTH production is well-characterized. A standard reduced representation adopts a Hill-type repression function, $f(C) = \\dfrac{1}{1 + \\left(\\frac{C}{K}\\right)^n}$, which monotonically decreases from $1$ to $0$ as $C$ increases, with midpoint $K$ and Hill coefficient $n \\ge 1$ encoding cooperativity. Genomic signaling introduces a finite latency $\\tau$; hence ACTH production at time $t$ depends on cortisol at time $t-\\tau$.\n\nFrom these bases, we obtain the DDE system\n$$\n\\frac{dA}{dt} \\;=\\; s_A\\,f\\!\\left(C(t-\\tau)\\right) \\;-\\; k_A\\,A(t),\n\\qquad\n\\frac{dC}{dt} \\;=\\; s_C\\,A(t) \\;-\\; k_C\\,C(t),\n$$\nwith $f(C) = \\dfrac{1}{1+\\left(\\frac{C}{K}\\right)^n}$. Units are minutes for time and $\\mathrm{nmol/L}$ for cortisol $C$. The history is chosen constant for $t \\le 0$: set $C(t) = C_0$ with $C_0 = K$, and $A(t) = A_0$ with\n$$\nA_0 \\;=\\; \\frac{s_A}{k_A}\\,\\frac{1}{1+\\left(\\frac{C_0}{K}\\right)^n}.\n$$\nThis is consistent with a steady state of the instantaneous-feedback ($\\tau=0$) system at $C=K$.\n\nSteady state and linearization. Let $(A^\\ast,C^\\ast)$ denote a steady state, satisfying\n$$\n0 \\;=\\; s_A\\,f(C^\\ast) \\;-\\; k_A A^\\ast, \\qquad 0 \\;=\\; s_C A^\\ast \\;-\\; k_C C^\\ast.\n$$\nNear $(A^\\ast,C^\\ast)$, define perturbations $a(t) = A(t)-A^\\ast$, $c(t) = C(t)-C^\\ast$. Linearizing the DDE with one delayed argument gives\n$$\n\\frac{da}{dt} \\;=\\; -k_A\\,a(t) \\;+\\; s_A f'(C^\\ast)\\,c(t-\\tau), \\qquad\n\\frac{dc}{dt} \\;=\\; s_C\\,a(t) \\;-\\; k_C\\,c(t),\n$$\nwhere $f'(C^\\ast) = \\dfrac{d}{dC}\\left.\\left(\\frac{1}{1+(C/K)^n}\\right)\\right|_{C=C^\\ast} \\lt 0$. Defining the positive loop gain $g \\equiv -s_A f'(C^\\ast) \\gt 0$, we can write\n$$\n\\frac{da}{dt} \\;=\\; -k_A\\,a(t) \\;-\\; g\\,c(t-\\tau), \\qquad\n\\frac{dc}{dt} \\;=\\; s_C\\,a(t) \\;-\\; k_C\\,c(t).\n$$\nSeeking exponential solutions $a(t),c(t) \\propto e^{\\lambda t}$ yields the characteristic equation for $\\lambda \\in \\mathbb{C}$:\n$$\n\\lambda^2 + (k_A + k_C)\\,\\lambda + k_A k_C + s_C g \\, e^{-\\lambda \\tau} \\;=\\; 0.\n$$\nWhen $\\tau = 0$, the exponential factor equals $1$ and this becomes a quadratic with positive coefficients, ensuring all roots have negative real part and the steady state is asymptotically stable (no sustained oscillations). For $\\tau \\gt 0$, the term $e^{-\\lambda \\tau}$ introduces a frequency-dependent phase lag. A Hopf bifurcation to sustained oscillations occurs when a pair of complex conjugate roots cross the imaginary axis. Setting $\\lambda = i\\omega$, $\\omega \\in \\mathbb{R}$, and separating real and imaginary parts yields the conditions\n$$\n-\\omega^2 + k_A k_C + s_C g \\cos(\\omega \\tau) \\;=\\; 0, \\qquad\n(k_A + k_C)\\,\\omega - s_C g \\sin(\\omega \\tau) \\;=\\; 0.\n$$\nThese equations characterize the onset of oscillations in terms of delay $\\tau$ and loop gain $s_C g$. In particular, sufficiently large $\\tau$ and/or sufficiently strong effective gain $s_C g$ can satisfy these simultaneously, yielding sustained ultradian oscillations. Conversely, small $\\tau$ or weak nonlinearity (small $n$, hence small $|f'(C^\\ast)|$) keep the fixed point stable.\n\nNumerical demonstration and detection. Because the full nonlinear DDE produces finite-amplitude limit cycles beyond the Hopf threshold, we simulate the nonlinear system to demonstrate sustained oscillations and estimate periods:\n- Use a method-of-steps approach with fixed-step explicit Runge–Kutta (e.g., classical order-$4$) to integrate forward. At each stage time $t_s$ within a step starting at $t$, evaluate the delayed cortisol as $C(t_s - \\tau)$ using linear interpolation from the already computed history. Ensuring a fixed step $dt$ such that $dt \\le 0.05$ minutes and $dt \\lt \\tau$ for $\\tau \\gt 0$ guarantees that $t_s - \\tau \\le t$ so that only past values are needed. For $\\tau = 0$, treat the system as an ordinary differential equation and evaluate $f(C)$ at the stage’s current estimate $C$.\n- Simulate for $T_{\\text{max}} = 1000$ minutes. Analyze the last $T_{\\text{an}} = 300$ minutes: compute amplitude $\\max C - \\min C$ and detect local maxima of $C(t)$ separated by at least $15$ minutes. If amplitude $\\ge 0.05\\,K$ and at least $3$ maxima are found, classify as oscillatory; compute the period as the mean separation between successive maxima. Otherwise classify as non-oscillatory with period $-1.0$.\n\nParameter regimes in the test suite:\n- Case $1$ with $n=4$ and $\\tau=25$ minutes yields moderately strong nonlinearity and substantial delay; the loop phase lag near the natural time constants ($k_A^{-1}$ and $k_C^{-1}$) allows a Hopf bifurcation and sustained ultradian oscillations (period often on the order of $50$–$90$ minutes).\n- Case $2$ with $\\tau=0$ removes the delay; the characteristic polynomial has positive coefficients, implying asymptotic stability and no sustained oscillations.\n- Case $3$ with $n=1$ reduces nonlinearity and loop gain $g$, stabilizing the fixed point; oscillations are suppressed.\n- Case $4$ with $n=5$ and $\\tau=40$ minutes strengthens both nonlinearity and delay, promoting oscillations with a longer period (typically larger than Case $1$).\n- Case $5$ with larger $k_C=0.03$ minutes$^{-1}$ speeds cortisol clearance, shortening the cortisol time constant and reducing effective loop gain at relevant frequencies; for the given production scales, this suppresses sustained oscillations.\n\nAlgorithmic design:\n1. Implement the DDE right-hand side using $f(C) = \\dfrac{1}{1+(C/K)^n}$.\n2. For $\\tau \\gt 0$, in the Runge–Kutta stages evaluate $C(t_s - \\tau)$ by linear interpolation of the computed trajectory; for $\\tau = 0$, substitute the current-stage $C$ directly.\n3. Integrate with $dt \\le 0.05$ minutes up to $T_{\\text{max}}=1000$ minutes.\n4. Analyze the last $300$ minutes to classify oscillations and, if present, compute the period as the mean inter-peak interval. Output for each test case a two-element list $[b,p]$ with $b \\in \\{0,1\\}$ and $p$ in minutes (rounded to one decimal) or $-1.0$ if non-oscillatory.\n5. Aggregate all test results into a single-line output in the required format $[[b_1,p_1],[b_2,p_2],\\dots]$.\n\nThis procedure directly demonstrates that finite genomic delay can generate sustained ultradian cortisol oscillations and maps the oscillatory versus non-oscillatory regimes across the specified parameter sets by first-principles simulation and principled detection.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef simulate_case(params, T_max=1000.0, T_analyze=300.0, dt=0.05):\n    \"\"\"\n    Simulate the delayed negative feedback HPA model for one parameter set.\n\n    Parameters:\n        params: tuple (sA, sC, kA, kC, K, n, tau)\n        T_max: total simulation time (minutes)\n        T_analyze: last window length to analyze (minutes)\n        dt: fixed time step (minutes)\n\n    Returns:\n        (oscillatory_flag, period_minutes_rounded_1dp_or_minus1)\n    \"\"\"\n    sA, sC, kA, kC, K, n, tau = params\n\n    # Ensure positive step and lengths\n    dt = float(dt)\n    if dt <= 0:\n        dt = 0.05\n    N = int(np.round(T_max / dt))\n    T_max = N * dt  # align to step\n\n    times = np.linspace(0.0, T_max, N + 1)\n    A = np.zeros(N + 1, dtype=float)\n    C = np.zeros(N + 1, dtype=float)\n\n    # History: constant for t <= 0\n    C_hist = K\n    def f_hill(Cval):\n        return 1.0 / (1.0 + (Cval / K) ** n)\n\n    A_hist = sA * f_hill(C_hist) / kA\n\n    # Initialize at t=0 with history values\n    A[0] = A_hist\n    C[0] = C_hist\n\n    def interp_C(t_query, current_idx):\n        \"\"\"Linear interpolation of C at time t_query <= current time.\n        Uses history constant if t_query <= 0.\n        \"\"\"\n        if t_query <= 0.0:\n            return C_hist\n        # index position in grid\n        p = t_query / dt\n        j = int(np.floor(p))\n        if j < 0:\n            return C_hist\n        # If requesting beyond current computed index, clamp\n        if j >= current_idx:\n            return C[current_idx]\n        # Interpolate between j and j+1\n        alpha = p - j\n        return (1.0 - alpha) * C[j] + alpha * C[j + 1]\n\n    # Time stepping with classical RK4; method-of-steps for tau > 0\n    for i in range(N):\n        t = times[i]\n        Ai = A[i]\n        Ci = C[i]\n\n        if tau == 0.0:\n            # ODE case: instantaneous feedback\n            def rhs(Ax, Cx):\n                dA = sA * f_hill(Cx) - kA * Ax\n                dC = sC * Ax - kC * Cx\n                return dA, dC\n\n            k1A, k1C = rhs(Ai, Ci)\n            k2A, k2C = rhs(Ai + 0.5 * dt * k1A, Ci + 0.5 * dt * k1C)\n            k3A, k3C = rhs(Ai + 0.5 * dt * k2A, Ci + 0.5 * dt * k2C)\n            k4A, k4C = rhs(Ai + dt * k3A, Ci + dt * k3C)\n        else:\n            # DDE case: use delayed cortisol via interpolation\n            # Stage 1\n            Ctau1 = interp_C(t - tau, i)\n            dA1 = sA * f_hill(Ctau1) - kA * Ai\n            dC1 = sC * Ai - kC * Ci\n\n            # Stage 2\n            A2 = Ai + 0.5 * dt * dA1\n            C2 = Ci + 0.5 * dt * dC1\n            Ctau2 = interp_C(t + 0.5 * dt - tau, i)\n            dA2 = sA * f_hill(Ctau2) - kA * A2\n            dC2 = sC * A2 - kC * C2\n\n            # Stage 3\n            A3 = Ai + 0.5 * dt * dA2\n            C3 = Ci + 0.5 * dt * dC2\n            Ctau3 = interp_C(t + 0.5 * dt - tau, i)\n            dA3 = sA * f_hill(Ctau3) - kA * A3\n            dC3 = sC * A3 - kC * C3\n\n            # Stage 4\n            A4 = Ai + dt * dA3\n            C4 = Ci + dt * dC3\n            Ctau4 = interp_C(t + dt - tau, i)\n            dA4 = sA * f_hill(Ctau4) - kA * A4\n            dC4 = sC * A4 - kC * C4\n\n            k1A, k1C = dA1, dC1\n            k2A, k2C = dA2, dC2\n            k3A, k3C = dA3, dC3\n            k4A, k4C = dA4, dC4\n\n        A[i + 1] = Ai + (dt / 6.0) * (k1A + 2.0 * k2A + 2.0 * k3A + k4A)\n        C[i + 1] = Ci + (dt / 6.0) * (k1C + 2.0 * k2C + 2.0 * k3C + k4C)\n\n        # Enforce non-negativity (physically meaningful concentrations)\n        if A[i + 1] < 0.0:\n            A[i + 1] = 0.0\n        if C[i + 1] < 0.0:\n            C[i + 1] = 0.0\n\n    # Analyze last T_analyze minutes\n    start_time = T_max - T_analyze\n    if start_time < 0:\n        start_time = 0.0\n    start_idx = int(np.floor(start_time / dt))\n    t_seg = times[start_idx:]\n    C_seg = C[start_idx:]\n\n    amp = float(np.max(C_seg) - np.min(C_seg))\n\n    # Peak detection: simple local maxima with a minimum separation\n    peaks_t = []\n    # Minimum separation between peaks to avoid spurious detections (minutes)\n    min_sep = 15.0\n    last_peak_time = -1e9\n\n    for j in range(1, len(C_seg) - 1):\n        if C_seg[j] > C_seg[j - 1] and C_seg[j] >= C_seg[j + 1]:\n            t_j = t_seg[j]\n            if t_j - last_peak_time >= min_sep:\n                peaks_t.append(t_j)\n                last_peak_time = t_j\n\n    # Oscillation decision and period estimation\n    is_osc = 0\n    period = -1.0\n    if amp >= 0.05 * K and len(peaks_t) >= 3:\n        # Compute mean inter-peak interval\n        intervals = np.diff(peaks_t)\n        if len(intervals) > 0:\n            period = float(np.mean(intervals))\n            is_osc = 1\n\n    # Round period to one decimal place if oscillatory; otherwise -1.0\n    if is_osc == 1:\n        period = float(np.round(period, 1))\n    else:\n        period = -1.0\n\n    return int(is_osc), period\n\ndef solve():\n    # Define the test cases from the problem statement.\n    # Each is (sA, sC, kA, kC, K, n, tau)\n    test_cases = [\n        (1.0, 0.4, 0.07, 0.01, 300.0, 4.0, 25.0),  # Expected oscillatory\n        (1.0, 0.4, 0.07, 0.01, 300.0, 4.0, 0.0),   # No delay: non-oscillatory\n        (1.0, 0.4, 0.07, 0.01, 300.0, 1.0, 25.0),  # Low Hill n: likely non-oscillatory\n        (1.0, 0.4, 0.07, 0.01, 300.0, 5.0, 40.0),  # Strong delay and nonlinearity: oscillatory\n        (1.0, 0.4, 0.07, 0.03, 300.0, 4.0, 25.0),  # Fast cortisol clearance: likely non-oscillatory\n    ]\n\n    results = []\n    for case in test_cases:\n        is_osc, period = simulate_case(case, T_max=1000.0, T_analyze=300.0, dt=0.05)\n        results.append([is_osc, period])\n\n    # Final print statement in the exact required format.\n    # Ensure floats print with standard representation\n    def fmt_item(x):\n        if isinstance(x, float):\n            # Ensure at least one decimal digit for floats\n            return f\"{x:.1f}\" if (x == -1.0 or abs(x - round(x, 1)) < 1e-12) else f\"{x}\"\n        return str(x)\n\n    out = \"[\" + \",\".join(\"[\" + \",\".join(fmt_item(v) for v in item) + \"]\" for item in results) + \"]\"\n    print(out)\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2610563"}]}