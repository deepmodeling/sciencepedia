{"hands_on_practices": [{"introduction": "The perception of a hormonal signal is the gateway to any cellular response. This exercise roots the abstract concept of a signaling pathway in the concrete, quantifiable biophysics of receptor-ligand binding. By deriving the Langmuir isotherm for the jasmonate co-receptor, you will gain a tangible understanding of how ligand concentration translates into receptor activation and explore the meaning of the dissociation constant, $K_d$, a fundamental parameter governing the sensitivity of the entire jasmonate pathway [@problem_id:2576654].", "problem": "In jasmonate signaling, the bioactive conjugate jasmonoyl-isoleucine (JA-Ile) enables the F-box protein CORONATINE INSENSITIVE 1 (COI1) to bind JASMONATE ZIM-domain (JAZ) repressors, forming an active co-receptor complex that triggers downstream defense responses after JAZ ubiquitination. Consider a simplified equilibrium binding system in which the formation of the active complex is represented as a single reversible binding step between a binding-competent receptor state and ligand, where the ligand is JA-Ile. Assume a single class of independent, noncooperative sites and rapid equilibrium. Let the free receptor be denoted by $R$, the free ligand (JA-Ile) by $L$, and the ligand-bound complex by $RL$. Let $R_{\\mathrm{T}}$ denote the total receptor concentration. Assume the ligand is present in large excess over $R_{\\mathrm{T}}$, so that the free ligand concentration $[L]$ is effectively equal to the total ligand added.\n\nStarting from the law of mass action, the definition of the dissociation constant $K_{d}$, and conservation of mass for the receptor, derive the Langmuir isotherm expression for the fractional occupancy $\\theta$ of the COI1–JAZ co-receptor as a function of the free JA-Ile concentration $[JA\\text{-}Ile]$. Then, using $K_{d}=50\\,\\mathrm{nM}$, compute the receptor occupancy at $[JA\\text{-}Ile]=10\\,\\mathrm{nM}$, $100\\,\\mathrm{nM}$, and $1000\\,\\mathrm{nM}$. Express the three occupancies as a dimensionless decimal fraction and report them as a row vector. Round your answers to four significant figures.", "solution": "The problem as stated is scientifically sound, self-contained, and well-posed. It presents a standard model of receptor-ligand binding, which is a fundamental concept in biochemistry and pharmacology. All necessary parameters and assumptions are provided to derive the Langmuir isotherm and compute the requested values. We shall proceed with the derivation.\n\nThe system is described by a single reversible binding equilibrium between the free receptor, $R$, and the free ligand, $L$ (JA-Ile), to form the ligand-bound complex, $RL$:\n$$\nR + L \\rightleftharpoons RL\n$$\nThe dissociation constant, $K_{d}$, is defined by the law of mass action for the dissociation of the complex:\n$$\nK_{d} = \\frac{[R][L]}{[RL]}\n$$\nwhere $[R]$, $[L]$, and $[RL]$ represent the molar concentrations of the free receptor, free ligand, and receptor-ligand complex at equilibrium, respectively. Per the problem statement, the free ligand concentration $[L]$ is assumed to be equivalent to the total added ligand concentration, which is denoted as $[JA\\text{-}Ile]$.\n\nThe principle of conservation of mass must be applied to the receptor. The total concentration of receptor, $[R_{\\mathrm{T}}]$, is the sum of the concentration of free receptor, $[R]$, and the concentration of ligand-bound receptor, $[RL]$:\n$$\n[R_{\\mathrm{T}}] = [R] + [RL]\n$$\nThe fractional occupancy, $\\theta$, is defined as the fraction of total receptor sites that are occupied by the ligand. This is expressed as the ratio of the concentration of the bound complex to the total receptor concentration:\n$$\n\\theta = \\frac{[RL]}{[R_{\\mathrm{T}}]}\n$$\nTo derive the Langmuir isotherm, we must express $\\theta$ as a function of the free ligand concentration $[L]$ and the dissociation constant $K_{d}$. We begin by rearranging the mass conservation equation to solve for the free receptor concentration, $[R]$:\n$$\n[R] = [R_{\\mathrm{T}}] - [RL]\n$$\nWe substitute this expression for $[R]$ into the definition of the dissociation constant:\n$$\nK_{d} = \\frac{([R_{\\mathrm{T}}] - [RL])[L]}{[RL]}\n$$\nNow, we must solve this equation for $[RL]$. First, multiply both sides by $[RL]$:\n$$\nK_{d} [RL] = ([R_{\\mathrm{T}}] - [RL])[L]\n$$\nExpand the term on the right-hand side:\n$$\nK_{d} [RL] = [R_{\\mathrm{T}}][L] - [RL][L]\n$$\nGroup all terms containing $[RL]$ on the left-hand side:\n$$\nK_{d} [RL] + [RL][L] = [R_{\\mathrm{T}}][L]\n$$\nFactor out $[RL]$:\n$$\n[RL](K_{d} + [L]) = [R_{\\mathrm{T}}][L]\n$$\nFinally, isolate $[RL]$:\n$$\n[RL] = \\frac{[R_{\\mathrm{T}}][L]}{K_{d} + [L]}\n$$\nNow, substitute this expression for $[RL]$ into the definition of fractional occupancy $\\theta$:\n$$\n\\theta = \\frac{1}{[R_{\\mathrm{T}}]} \\left( \\frac{[R_{\\mathrm{T}}][L]}{K_{d} + [L]} \\right)\n$$\nThe term $[R_{\\mathrm{T}}]$ cancels, yielding the Langmuir isotherm equation:\n$$\n\\theta = \\frac{[L]}{K_{d} + [L]}\n$$\nGiven the problem's notation where $[L] = [JA\\text{-}Ile]$, the expression becomes:\n$$\n\\theta = \\frac{[JA\\text{-}Ile]}{K_{d} + [JA\\text{-}Ile]}\n$$\nThis is the required derivation. Now, we compute the receptor occupancy $\\theta$ for the given concentrations, using the provided dissociation constant $K_{d} = 50 \\, \\mathrm{nM}$.\n\nCase 1: $[JA\\text{-}Ile] = 10 \\, \\mathrm{nM}$\n$$\n\\theta_{1} = \\frac{10 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 10 \\, \\mathrm{nM}} = \\frac{10}{60} = \\frac{1}{6} \\approx 0.16666...\n$$\nRounded to four significant figures, this is $0.1667$.\n\nCase 2: $[JA\\text{-}Ile] = 100 \\, \\mathrm{nM}$\n$$\n\\theta_{2} = \\frac{100 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 100 \\, \\mathrm{nM}} = \\frac{100}{150} = \\frac{2}{3} \\approx 0.66666...\n$$\nRounded to four significant figures, this is $0.6667$.\n\nCase 3: $[JA\\text{-}Ile] = 1000 \\, \\mathrm{nM}$\n$$\n\\theta_{3} = \\frac{1000 \\, \\mathrm{nM}}{50 \\, \\mathrm{nM} + 1000 \\, \\mathrm{nM}} = \\frac{1000}{1050} = \\frac{20}{21} \\approx 0.95238...\n$$\nRounded to four significant figures, this is $0.9524$.\n\nThe three computed occupancy values, reported as a dimensionless decimal fraction rounded to four significant figures, are $0.1667$, $0.6667$, and $0.9524$.", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.1667 & 0.6667 & 0.9524 \\end{pmatrix}}\n$$", "id": "2576654"}, {"introduction": "Once a signal is perceived, how quickly does the cell execute a response? This practice shifts focus from the static equilibrium of receptor binding to the time-dependent dynamics of gene activation. By modeling the accumulation of a defense-related messenger RNA transcript, $m(t)$, you will derive a key result in systems biology—the characteristic response time—and understand how parameters like the degradation rate, $\\delta$, dictate how quickly the plant can mobilize its defenses at the transcriptional level [@problem_id:2576635].", "problem": "A jasmonic acid (JA) pulse in Arabidopsis rapidly degrades Jasmonate ZIM-domain (JAZ) repressors and releases the basic helix-loop-helix transcription factor MYC2, causing transcriptional activation of the Vegetative Storage Protein 2 (VSP2) gene. Consider a single-cell, well-mixed compartment model for VSP2 messenger ribonucleic acid (mRNA) in which transcription is initiated at a constant maximal rate once promoter occupancy by MYC2 is saturated, and mRNA is degraded by first-order kinetics. Assume that at time $t=0$, a step-like increase in MYC2 activity fully saturates VSP2 promoter occupancy and remains constant thereafter. Before $t=0$, basal transcription is negligible, so that the pre-stimulus mRNA is at its steady-state value under negligible production. Let the maximal transcription rate be $\\alpha = 5$ arbitrary units (a.u.) min$^{-1}$ and the mRNA degradation rate be $\\delta = 0.1$ min$^{-1}$. Take the initial condition $m(0)=0$ for the VSP2 mRNA abundance $m(t)$.\n\nStarting only from (i) the central dogma interpretation that transcription produces mRNA molecules at the polymerase initiation rate and (ii) mass-action first-order decay for mRNA, derive the ordinary differential equation governing $m(t)$ for $t \\ge 0$, solve it, and determine the time $t_{1/2}$ at which $m(t)$ reaches one-half of its new steady-state level after the step in MYC2 activity. Express your final time in minutes and round your answer to $4$ significant figures.", "solution": "The problem statement is first subjected to critical validation.\n\nStep 1: Extract Givens.\n- System: A single-cell, well-mixed compartment model for VSP2 messenger ribonucleic acid (mRNA) abundance, denoted by $m(t)$.\n- Transcription (Production): Initiated at a constant maximal rate, $\\alpha$, for time $t \\ge 0$.\n- Degradation: Follows first-order kinetics with a rate constant $\\delta$.\n- Condition at $t=0$: A step-like increase in MYC2 activity saturates the VSP2 promoter.\n- Condition for $t < 0$: Basal transcription is negligible, and the system is at a pre-stimulus steady-state value corresponding to negligible production.\n- Parameter values: Maximal transcription rate $\\alpha = 5$ arbitrary units (a.u.) min$^{-1}$. mRNA degradation rate $\\delta = 0.1$ min$^{-1}$.\n- Initial Condition: $m(0) = 0$.\n- Objective: (i) Derive the ordinary differential equation (ODE) for $m(t)$ for $t \\ge 0$. (ii) Solve the ODE. (iii) Determine the time $t_{1/2}$ at which $m(t)$ is one-half of its new steady-state value. (iv) Provide a numerical value for $t_{1/2}$ in minutes, rounded to $4$ significant figures.\n\nStep 2: Validate Using Extracted Givens.\nThe problem is assessed for validity.\n- Scientific Grounding: The model of gene expression using constant production and first-order decay is a standard and fundamental simplification in systems biology. It is scientifically sound. The biological context provided (jasmonate signaling pathway) is a correct and appropriate example for such a transcriptional response.\n- Well-Posedness: The problem describes a first-order linear non-homogeneous ordinary differential equation with a specified initial condition. This constitutes a well-posed initial value problem, which guarantees a unique and stable solution.\n- Objectivity: The problem is stated in precise, quantitative, and unbiased language.\n- Consistency Check: The problem states that for $t < 0$, production is negligible, leading to a steady-state value. With negligible production, the dynamics would be $\\frac{dm}{dt} = -\\delta m$, for which the steady state ($\\frac{dm}{dt} = 0$) is $m = 0$. This is consistent with the explicitly provided initial condition $m(0)=0$.\n\nStep 3: Verdict and Action.\nThe problem is valid as it is scientifically grounded, well-posed, objective, and self-consistent. A solution is therefore warranted and will be derived.\n\nThe dynamics of the mRNA abundance $m(t)$ are governed by the principle of mass balance. The rate of change of $m(t)$ is the difference between its rate of production (transcription) and its rate of degradation.\n$$\n\\frac{dm}{dt} = (\\text{Rate of production}) - (\\text{Rate of degradation})\n$$\nAccording to the problem statement, for $t \\ge 0$, a step-like increase in MYC2 activity leads to a constant maximal transcription rate, $\\alpha$. This is a zero-order production process.\n$$\n\\text{Rate of production} = \\alpha\n$$\nThe degradation of mRNA is described by first-order kinetics, meaning the rate of degradation is directly proportional to the current abundance $m(t)$, with the proportionality constant being the degradation rate $\\delta$.\n$$\n\\text{Rate of degradation} = \\delta m(t)\n$$\nCombining these terms, we derive the ordinary differential equation governing $m(t)$ for $t \\ge 0$:\n$$\n\\frac{dm}{dt} = \\alpha - \\delta m(t)\n$$\nThis is a linear first-order non-homogeneous ODE. We solve it subject to the initial condition $m(0) = 0$. The equation can be rearranged for solution by separation of variables:\n$$\n\\frac{dm}{\\alpha - \\delta m} = dt\n$$\nIntegrating both sides from the initial state $(0, 0)$ to a generic state $(t, m(t))$:\n$$\n\\int_{0}^{m(t)} \\frac{dm'}{\\alpha - \\delta m'} = \\int_{0}^{t} dt'\n$$\nThe integral on the left side is evaluated as:\n$$\n\\left[ -\\frac{1}{\\delta} \\ln(\\alpha - \\delta m') \\right]_{0}^{m(t)} = t\n$$\n$$\n-\\frac{1}{\\delta} \\left[ \\ln(\\alpha - \\delta m(t)) - \\ln(\\alpha - \\delta \\cdot 0) \\right] = t\n$$\n$$\n\\ln\\left(\\frac{\\alpha - \\delta m(t)}{\\alpha}\\right) = -\\delta t\n$$\nExponentiating both sides gives:\n$$\n\\frac{\\alpha - \\delta m(t)}{\\alpha} = \\exp(-\\delta t)\n$$\n$$\n1 - \\frac{\\delta}{\\alpha} m(t) = \\exp(-\\delta t)\n$$\nSolving for $m(t)$:\n$$\n\\frac{\\delta}{\\alpha} m(t) = 1 - \\exp(-\\delta t)\n$$\n$$\nm(t) = \\frac{\\alpha}{\\delta} (1 - \\exp(-\\delta t))\n$$\nThis is the solution of the ODE for $m(t)$ for $t \\ge 0$.\n\nNext, we determine the new steady-state level of mRNA, $m_{ss}$, which is the value of $m(t)$ as $t \\to \\infty$.\n$$\nm_{ss} = \\lim_{t \\to \\infty} m(t) = \\lim_{t \\to \\infty} \\left[ \\frac{\\alpha}{\\delta} (1 - \\exp(-\\delta t)) \\right]\n$$\nSince $\\delta > 0$, the term $\\exp(-\\delta t)$ approaches $0$ as $t \\to \\infty$.\n$$\nm_{ss} = \\frac{\\alpha}{\\delta} (1 - 0) = \\frac{\\alpha}{\\delta}\n$$\nThe problem requires finding the time $t_{1/2}$ at which the mRNA level reaches one-half of this new steady-state value. We set $m(t_{1/2}) = \\frac{1}{2} m_{ss}$.\n$$\nm(t_{1/2}) = \\frac{1}{2} \\left(\\frac{\\alpha}{\\delta}\\right)\n$$\nSubstituting this into the solution for $m(t)$:\n$$\n\\frac{1}{2} \\frac{\\alpha}{\\delta} = \\frac{\\alpha}{\\delta} (1 - \\exp(-\\delta t_{1/2}))\n$$\nThe term $\\frac{\\alpha}{\\delta}$ is non-zero and can be cancelled from both sides.\n$$\n\\frac{1}{2} = 1 - \\exp(-\\delta t_{1/2})\n$$\nRearranging the equation to solve for $t_{1/2}$:\n$$\n\\exp(-\\delta t_{1/2}) = 1 - \\frac{1}{2} = \\frac{1}{2}\n$$\nTaking the natural logarithm of both sides:\n$$\n-\\delta t_{1/2} = \\ln\\left(\\frac{1}{2}\\right) = -\\ln(2)\n$$\n$$\nt_{1/2} = \\frac{\\ln(2)}{\\delta}\n$$\nNow, we substitute the given numerical value for the degradation rate, $\\delta = 0.1$ min$^{-1}$.\n$$\nt_{1/2} = \\frac{\\ln(2)}{0.1} \\text{ min}\n$$\nUsing the value $\\ln(2) \\approx 0.693147...$:\n$$\nt_{1/2} \\approx \\frac{0.693147}{0.1} = 6.93147 \\text{ min}\n$$\nRounding the final result to $4$ significant figures as required by the problem statement gives:\n$$\nt_{1/2} \\approx 6.931 \\text{ min}\n$$", "answer": "$$\n\\boxed{6.931}\n$$", "id": "2576635"}, {"introduction": "Plant defense signaling is not a set of independent pathways but an integrated network of interacting modules. This final, advanced practice elevates our analysis to the systems level by modeling the antagonistic crosstalk between the jasmonate ($J$) and salicylic acid ($S$) modules as a biological toggle switch. Through numerical simulation, you will explore emergent properties like bistability and hysteresis, providing a quantitative framework for how plants make robust and decisive \"choices\" between different defense strategies [@problem_id:2576649].", "problem": "Consider a minimal, dimensionless dynamical-systems model of antagonistic crosstalk between jasmonate-responsive and salicylic acid-responsive transcriptional modules in plant defense. Let $J(t)$ denote the activation level of the jasmonate (methyl jasmonate, MeJA)-responsive module and $S(t)$ denote the activation level of the salicylic acid (SA)-responsive module. Assume $J(t)$ and $S(t)$ evolve according to the coupled ordinary differential equations\n$$\n\\frac{dJ}{dt} \\;=\\; \\frac{-J \\;+\\; H\\!\\Big(b_{JJ} J \\;-\\; c_{JS} S \\;+\\; b^{0}_{J} \\;+\\; g_{J} U_{J}(t)\\Big)}{\\tau_{J}}, \\quad\n\\frac{dS}{dt} \\;=\\; \\frac{-S \\;+\\; H\\!\\Big(b_{SS} S \\;-\\; c_{SJ} J \\;+\\; b^{0}_{S} \\;+\\; g_{S} U_{S}(t)\\Big)}{\\tau_{S}},\n$$\nwhere $H(x)$ is a smooth, saturating nonlinearity given by $H(x) = \\dfrac{1}{1 + e^{-x}}$. The inputs $U_{J}(t)$ and $U_{S}(t)$ represent externally applied MeJA and SA pulses, respectively. The parameters are fixed to the following values:\n- $\\tau_{J} = 1$, $\\tau_{S} = 1$,\n- $b_{JJ} = 6$, $b_{SS} = 6$,\n- $c_{JS} = 7$, $c_{SJ} = 7$,\n- $b^{0}_{J} = -2$, $b^{0}_{S} = -2$,\n- $g_{J} = 5$, $g_{S} = 5$.\n\nInitial conditions at $t=0$ are $J(0) = 0.05$ and $S(0) = 0.05$. The time-dependent external pulses are defined as follows. Let $T_{\\mathrm{pre}} = 10$ be a pre-pulse baseline duration, $G = 10$ be an inter-pulse gap, and $T_{\\mathrm{post}} = 50$ be a final post-pulse settling duration. For each test case, you are given a tuple $(A_{S}, T_{S}, A_{J}, T_{J})$ specifying the SA amplitude $A_{S}$ and duration $T_{S}$ and the MeJA amplitude $A_{J}$ and duration $T_{J}$, with the following timing:\n- The SA pulse is defined by $U_{S}(t) = A_{S}$ for $t \\in [T_{\\mathrm{pre}}, T_{\\mathrm{pre}} + T_{S})$, and $U_{S}(t) = 0$ otherwise.\n- The MeJA pulse is defined by $U_{J}(t) = A_{J}$ for $t \\in [T_{\\mathrm{pre}} + T_{S} + G, T_{\\mathrm{pre}} + T_{S} + G + T_{J})$, and $U_{J}(t) = 0$ otherwise.\n\nThe total simulation time is $T_{\\mathrm{end}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + T_{\\mathrm{post}}$. Use numerical time integration with a fixed step size $\\Delta t = 0.01$ and the classical fourth-order Runge–Kutta method to compute trajectories $J(t)$ and $S(t)$ for $t \\in [0, T_{\\mathrm{end}}]$. No physical units are required since the model is dimensionless.\n\nTo assess state transitions and hysteresis, define the dominance classifier with margin $\\delta = 0.2$:\n- $\\sigma(J,S) = 1$ if $J - S > \\delta$ (jasmonate-dominant),\n- $\\sigma(J,S) = -1$ if $S - J > \\delta$ (salicylate-dominant),\n- $\\sigma(J,S) = 0$ otherwise (no dominance).\n\nFor each test case, compute two state classifications:\n- $\\sigma_{\\mathrm{SA}} = \\sigma\\!\\big(J(t^{\\mathrm{eval}}_{\\mathrm{SA}}),\\, S(t^{\\mathrm{eval}}_{\\mathrm{SA}})\\big)$ at $t^{\\mathrm{eval}}_{\\mathrm{SA}} = T_{\\mathrm{pre}} + T_{S} + 5$ (evaluation shortly after the SA pulse ends and before MeJA onset),\n- $\\sigma_{\\mathrm{MeJA}} = \\sigma\\!\\big(J(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}),\\, S(t^{\\mathrm{eval}}_{\\mathrm{MeJA}})\\big)$ at $t^{\\mathrm{eval}}_{\\mathrm{MeJA}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + 20$ (evaluation after the MeJA pulse ends).\n\nThe following test suite of pulse parameters $(A_{S}, T_{S}, A_{J}, T_{J})$ must be used, each number as given is dimensionless:\n- Test $1$: $(1.0, 30.0, 1.0, 30.0)$,\n- Test $2$: $(1.0, 30.0, 2.0, 30.0)$,\n- Test $3$: $(0.2, 30.0, 0.5, 30.0)$,\n- Test $4$: $(1.0, 0.5, 2.0, 30.0)$,\n- Test $5$: $(0.0, 0.0, 0.0, 0.0)$,\n- Test $6$: $(1.0, 30.0, 1.6, 30.0)$.\n\nYour program must:\n- Implement the specified dynamical system and numerical method exactly as stated,\n- Simulate each test case independently on $t \\in [0, T_{\\mathrm{end}}]$ with $\\Delta t = 0.01$,\n- For each test, output the pair $[\\sigma_{\\mathrm{SA}}, \\sigma_{\\mathrm{MeJA}}]$ where each entry is an integer in $\\{-1, 0, 1\\}$.\n\nFinal output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element is the two-integer list for a test, in order of the tests above. For example, an output with two hypothetical tests would look like $[[a,b],[c,d]]$ but with the actual six test results in sequence, i.e., $[[\\sigma_{\\mathrm{SA}}^{(1)},\\sigma_{\\mathrm{MeJA}}^{(1)}],\\dots,[\\sigma_{\\mathrm{SA}}^{(6)},\\sigma_{\\mathrm{MeJA}}^{(6)}]]$.", "solution": "The problem statement has been validated and is deemed to be scientifically grounded, well-posed, and self-contained. It presents a standard problem in computational systems biology, requiring the numerical solution of a system of coupled nonlinear ordinary differential equations (ODEs). All parameters, initial conditions, and procedures are defined with sufficient rigor. Therefore, a solution is warranted.\n\nThe problem describes a minimal model for the antagonistic interaction between the jasmonate ($J$) and salicylic acid ($S$) signaling modules in plants. This interaction is a well-established example of a biological toggle switch, a common network motif where two components mutually inhibit each other while promoting their own production. Such a structure can lead to bistability, where the system can exist in one of two stable steady states—a $J$-dominant state or an $S$-dominant state.\n\nThe dynamics of the system are governed by the following coupled ODEs:\n$$\n\\frac{dJ}{dt} = \\frac{-J + H(b_{JJ} J - c_{JS} S + b^{0}_{J} + g_{J} U_{J}(t))}{\\tau_{J}}\n$$\n$$\n\\frac{dS}{dt} = \\frac{-S + H(b_{SS} S - c_{SJ} J + b^{0}_{S} + g_{S} U_{S}(t))}{\\tau_{S}}\n$$\nwhere $J(t)$ and $S(t)$ are the activation levels, and the function $H(x) = (1 + e^{-x})^{-1}$ is a standard sigmoidal function modeling the saturating nature of transcriptional activation. The parameters $b_{JJ}$ and $b_{SS}$ represent self-activation, while $c_{JS}$ and $c_{SJ}$ represent cross-inhibition. $b^{0}_{J}$ and $b^{0}_{S}$ are basal activation thresholds, and $g_{J} U_{J}(t)$ and $g_{S} U_{S}(t)$ represent the effect of external hormonal pulses.\n\nTo analyze the system's behavior, we must integrate these equations numerically. The problem specifies the use of the classical fourth-order Runge-Kutta (RK4) method with a fixed time step $\\Delta t = 0.01$. For a system of ODEs of the form $d\\mathbf{y}/dt = \\mathbf{F}(t, \\mathbf{y})$, where $\\mathbf{y}(t) = [J(t), S(t)]^{\\text{T}}$, the RK4 method advances the solution from time $t_n$ to $t_{n+1} = t_n + \\Delta t$ as follows:\n$$\n\\mathbf{y}_{n+1} = \\mathbf{y}_n + \\frac{\\Delta t}{6} (\\mathbf{k}_1 + 2\\mathbf{k}_2 + 2\\mathbf{k}_3 + \\mathbf{k}_4)\n$$\nwhere\n$$\n\\begin{aligned}\n\\mathbf{k}_1 &= \\mathbf{F}(t_n, \\mathbf{y}_n) \\\\\n\\mathbf{k}_2 &= \\mathbf{F}(t_n + \\frac{\\Delta t}{2}, \\mathbf{y}_n + \\frac{\\Delta t}{2} \\mathbf{k}_1) \\\\\n\\mathbf{k}_3 &= \\mathbf{F}(t_n + \\frac{\\Delta t}{2}, \\mathbf{y}_n + \\frac{\\Delta t}{2} \\mathbf{k}_2) \\\\\n\\mathbf{k}_4 &= \\mathbf{F}(t_n + \\Delta t, \\mathbf{y}_n + \\Delta t \\, \\mathbf{k}_3)\n\\end{aligned}\n$$\nHere, the vector field $\\mathbf{F}(t, \\mathbf{y})$ is the right-hand side of the system of ODEs, which is time-dependent due to the external inputs $U_{J}(t)$ and $U_{S}(t)$.\n\nThe simulation protocol for each test case $(A_{S}, T_{S}, A_{J}, T_{J})$ is as follows:\n1.  The total simulation time $T_{\\mathrm{end}}$ is calculated as $T_{\\mathrm{end}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + T_{\\mathrm{post}}$, using the given constants $T_{\\mathrm{pre}}=10$, $G=10$, and $T_{\\mathrm{post}}=50$.\n2.  The system state is initialized to $\\mathbf{y}(0) = [J(0), S(0)]^{\\text{T}} = [0.05, 0.05]^{\\text{T}}$.\n3.  The time interval $[0, T_{\\mathrm{end}}]$ is discretized with step size $\\Delta t = 0.01$.\n4.  The RK4 algorithm is iteratively applied at each time step. At each step $t_n$, the values of the external stimuli $U_S(t_n)$ and $U_J(t_n)$ are determined based on the specified pulse schedule:\n    - $U_{S}(t) = A_{S}$ for $t \\in [T_{\\mathrm{pre}}, T_{\\mathrm{pre}} + T_{S})$ and $0$ otherwise.\n    - $U_{J}(t) = A_{J}$ for $t \\in [T_{\\mathrm{pre}} + T_{S} + G, T_{\\mathrm{pre}} + T_{S} + G + T_{J})$ and $0$ otherwise.\n5.  The entire trajectory of $\\mathbf{y}(t)$ is computed over the simulation interval.\n\nAfter the simulation, the state of the system is classified at two specific moments in time to assess the system's response to the sequential pulses. The dominance classifier $\\sigma(J, S)$ is defined with a margin $\\delta = 0.2$:\n$$\n\\sigma(J,S) = \n\\begin{cases} \n1 & \\text{if } J - S > \\delta \\\\\n-1 & \\text{if } S - J > \\delta \\\\\n0 & \\text{otherwise}\n\\end{cases}\n$$\nThis classifier determines if the system is in a $J$-dominant state ($+1$), an $S$-dominant state ($-1$), or a co-active/uncommitted state ($0$).\n\nThe two classifications to be computed for each test case are:\n1.  $\\sigma_{\\mathrm{SA}} = \\sigma(J(t^{\\mathrm{eval}}_{\\mathrm{SA}}), S(t^{\\mathrm{eval}}_{\\mathrm{SA}}))$ at time $t^{\\mathrm{eval}}_{\\mathrm{SA}} = T_{\\mathrm{pre}} + T_{S} + 5$. This captures the state shortly after the SA pulse.\n2.  $\\sigma_{\\mathrm{MeJA}} = \\sigma(J(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}), S(t^{\\mathrm{eval}}_{\\mathrm{MeJA}}))$ at time $t^{\\mathrm{eval}}_{\\mathrm{MeJA}} = T_{\\mathrm{pre}} + T_{S} + G + T_{J} + 20$. This captures the final state long after the MeJA pulse has ended, revealing any lasting transition.\n\nThe implementation will execute this procedure for each of the six provided test cases and collate the resulting $[\\sigma_{\\mathrm{SA}}, \\sigma_{\\mathrm{MeJA}}]$ pairs into the specified output format.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the plant defense signaling ODE model for a suite of test cases.\n    \"\"\"\n    \n    # Define fixed model parameters as per the problem statement\n    params = {\n        'tau_J': 1.0, 'tau_S': 1.0,\n        'b_JJ': 6.0, 'b_SS': 6.0,\n        'c_JS': 7.0, 'c_SJ': 7.0,\n        'b0_J': -2.0, 'b0_S': -2.0,\n        'g_J': 5.0, 'g_S': 5.0,\n        'delta': 0.2\n    }\n\n    # Define fixed timing parameters\n    T_pre = 10.0\n    G = 10.0\n    T_post = 50.0\n    dt = 0.01\n\n    # Test suite of pulse parameters (A_S, T_S, A_J, T_J)\n    test_cases = [\n        (1.0, 30.0, 1.0, 30.0),\n        (1.0, 30.0, 2.0, 30.0),\n        (0.2, 30.0, 0.5, 30.0),\n        (1.0, 0.5, 2.0, 30.0),\n        (0.0, 0.0, 0.0, 0.0),\n        (1.0, 30.0, 1.6, 30.0),\n    ]\n\n    # --- Helper Functions ---\n    \n    def H(x):\n        \"\"\"Sigmoid nonlinearity H(x) = 1 / (1 + exp(-x))\"\"\"\n        return 1.0 / (1.0 + np.exp(-x))\n\n    def vector_field(t, y, p, pulse_params):\n        \"\"\"Defines the system of ODEs dy/dt = F(t, y)\"\"\"\n        J, S = y\n        A_S, T_S, A_J, T_J = pulse_params\n        \n        # Determine external inputs U_S(t) and U_J(t)\n        t_start_S = T_pre\n        t_end_S = T_pre + T_S\n        U_S = A_S if t_start_S <= t < t_end_S else 0.0\n\n        t_start_J = T_pre + T_S + G\n        t_end_J = T_pre + T_S + G + T_J\n        U_J = A_J if t_start_J <= t < t_end_J else 0.0\n\n        # Calculate derivatives\n        dJ_dt = (-J + H(p['b_JJ']*J - p['c_JS']*S + p['b0_J'] + p['g_J']*U_J)) / p['tau_J']\n        dS_dt = (-S + H(p['b_SS']*S - p['c_SJ']*J + p['b0_S'] + p['g_S']*U_S)) / p['tau_S']\n        \n        return np.array([dJ_dt, dS_dt])\n\n    def rk4_step(f, t, y, h, p, pulse_params):\n        \"\"\"Performs a single classical 4th-order Runge-Kutta step.\"\"\"\n        k1 = f(t, y, p, pulse_params)\n        k2 = f(t + 0.5 * h, y + 0.5 * h * k1, p, pulse_params)\n        k3 = f(t + 0.5 * h, y + 0.5 * h * k2, p, pulse_params)\n        k4 = f(t + h, y + h * k3, p, pulse_params)\n        return y + (h / 6.0) * (k1 + 2*k2 + 2*k3 + k4)\n\n    def sigma_classifier(J, S, delta):\n        \"\"\"Dominance classifier sigma(J, S)\"\"\"\n        if J - S > delta:\n            return 1\n        elif S - J > delta:\n            return -1\n        else:\n            return 0\n\n    results = []\n    for case in test_cases:\n        A_S, T_S, A_J, T_J = case\n        \n        # --- Simulation Setup ---\n        T_end = T_pre + T_S + G + T_J + T_post\n        num_steps = int(round(T_end / dt))\n        \n        # Initial conditions\n        y = np.array([0.05, 0.05])\n        \n        # Store trajectory\n        y_trajectory = np.zeros((num_steps + 1, 2))\n        y_trajectory[0] = y\n        \n        # --- Numerical Integration ---\n        t = 0.0\n        for i in range(num_steps):\n            y = rk4_step(vector_field, t, y, dt, params, case)\n            y_trajectory[i+1] = y\n            t += dt\n            \n        # --- Analysis ---\n        # Evaluation time for SA pulse\n        t_eval_sa = T_pre + T_S + 5.0\n        idx_sa = int(round(t_eval_sa / dt))\n        J_sa, S_sa = y_trajectory[idx_sa]\n        sigma_sa = sigma_classifier(J_sa, S_sa, params['delta'])\n\n        # Evaluation time for MeJA pulse\n        t_eval_meja = T_pre + T_S + G + T_J + 20.0\n        idx_meja = int(round(t_eval_meja / dt))\n        J_meja, S_meja = y_trajectory[idx_meja]\n        sigma_meja = sigma_classifier(J_meja, S_meja, params['delta'])\n        \n        results.append((sigma_sa, sigma_meja))\n\n    # --- Format Output ---\n    # Manually format each pair to match '[a,b]' style without spaces\n    formatted_results = [f'[{s_sa},{s_meja}]' for s_sa, s_meja in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2576649"}]}