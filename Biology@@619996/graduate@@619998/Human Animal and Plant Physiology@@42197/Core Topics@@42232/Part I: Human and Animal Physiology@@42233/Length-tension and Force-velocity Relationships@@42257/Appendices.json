{"hands_on_practices": [{"introduction": "The foundational Hill force-velocity relationship is a cornerstone of muscle physiology, describing the inverse relationship between the force a muscle produces and the velocity at which it shortens. This first practice provides a direct application of A.V. Hill's classic hyperbolic equation. By working through this exercise, you will solidify your understanding of this core principle and gain proficiency in calculating a muscle fiber's shortening velocity and its corresponding mechanical power output ($P = Fv$), a critical measure of performance. [@problem_id:2577830]", "problem": "A single skinned skeletal muscle fiber is tested at constant temperature under isotonic shortening. Decades of experiments established a hyperbolic force–velocity relation originally reported by Archibald Vivian Hill. Treat this hyperbolic relation as an empirically validated constitutive law for active shortening at steady state, together with the definition of mechanical power as force times shortening velocity. Let $F$ denote the isotonic load during shortening, $F_{0}$ denote the maximum isometric force, $v$ denote the shortening velocity (positive for shortening), and $a$ and $b$ be Hill’s empirical constants, where $a$ has units of force and $b$ has units of length per time. The fiber’s length unit $\\mathrm{L}$ is the fiber-length unit used in the experiment.\n\nGiven $F_{0}=100\\,\\mathrm{mN}$, $a=10\\,\\mathrm{mN}$, and $b=1.5\\,\\mathrm{L}\\,\\mathrm{s}^{-1}$, do the following:\n\n1) Starting from the hyperbolic force–velocity constitutive law and the definition of mechanical power, derive an explicit expression for $v$ as a function of $F$ and parameters $\\{F_{0},a,b\\}$, then evaluate $v$ at $F=50\\,\\mathrm{mN}$. Express the velocity in $\\mathrm{L}\\,\\mathrm{s}^{-1}$.\n\n2) Compute the corresponding mechanical power $P=F\\,v$ at that load and express it in $\\mathrm{mN}\\cdot\\mathrm{L}\\,\\mathrm{s}^{-1}$.\n\nProvide exact values; do not round. Your final answer should report, in order, the velocity and the power.", "solution": "The problem statement has been evaluated and is determined to be valid. It is scientifically grounded in the principles of muscle mechanics, is well-posed, and contains all necessary information for a unique solution. The solution proceeds by applying the established Hill force-velocity model.\n\nThe hyperbolic force-velocity relationship for a skeletal muscle fiber, as formulated by A.V. Hill, is given by the equation:\n$$ (F + a)(v + b) = (F_0 + a)b $$\nwhere $F$ is the isotonic load, $v$ is the shortening velocity, $F_0$ is the maximum isometric force (the force at $v=0$), and $a$ and $b$ are empirical constants. The constant $a$ has units of force, and $b$ has units of velocity.\n\nThe first task is to derive an explicit expression for the shortening velocity $v$ as a function of the force $F$ and the parameters $\\{F_0, a, b\\}$. We begin by algebraically rearranging the Hill equation to isolate $v$.\n$$ v + b = \\frac{(F_0 + a)b}{F + a} $$\nSubtracting $b$ from both sides gives the expression for $v$:\n$$ v = \\frac{(F_0 + a)b}{F + a} - b $$\nTo obtain a more compact form, we find a common denominator:\n$$ v = b \\left( \\frac{F_0 + a}{F + a} - 1 \\right) $$\n$$ v = b \\left( \\frac{F_0 + a - (F + a)}{F + a} \\right) $$\n$$ v = b \\left( \\frac{F_0 - F}{F + a} \\right) $$\nThis is the required explicit expression for $v$ as a function of $F$.\n\nNext, we evaluate $v$ for the given values:\n- Maximum isometric force, $F_0 = 100\\,\\mathrm{mN}$\n- Hill's force constant, $a = 10\\,\\mathrm{mN}$\n- Hill's velocity constant, $b = 1.5\\,\\mathrm{L}\\,\\mathrm{s}^{-1} = \\frac{3}{2}\\,\\mathrm{L}\\,\\mathrm{s}^{-1}$\n- Isotonic load, $F = 50\\,\\mathrm{mN}$\n\nSubstituting these values into the derived expression for $v$:\n$$ v = \\left(\\frac{3}{2}\\right) \\left( \\frac{100 - 50}{50 + 10} \\right) \\,\\mathrm{L}\\,\\mathrm{s}^{-1} $$\n$$ v = \\left(\\frac{3}{2}\\right) \\left( \\frac{50}{60} \\right) \\,\\mathrm{L}\\,\\mathrm{s}^{-1} $$\n$$ v = \\left(\\frac{3}{2}\\right) \\left( \\frac{5}{6} \\right) \\,\\mathrm{L}\\,\\mathrm{s}^{-1} $$\n$$ v = \\frac{15}{12} \\,\\mathrm{L}\\,\\mathrm{s}^{-1} = \\frac{5}{4} \\,\\mathrm{L}\\,\\mathrm{s}^{-1} $$\nThe shortening velocity at a load of $50\\,\\mathrm{mN}$ is exactly $\\frac{5}{4}\\,\\mathrm{L}\\,\\mathrm{s}^{-1}$.\n\nThe second task is to compute the corresponding mechanical power, $P$, at this load. Mechanical power is defined as the product of force and velocity:\n$$ P = F \\cdot v $$\nUsing the load $F = 50\\,\\mathrm{mN}$ and the calculated velocity $v = \\frac{5}{4}\\,\\mathrm{L}\\,\\mathrm{s}^{-1}$:\n$$ P = (50\\,\\mathrm{mN}) \\cdot \\left(\\frac{5}{4}\\,\\mathrm{L}\\,\\mathrm{s}^{-1}\\right) $$\n$$ P = \\frac{250}{4} \\,\\mathrm{mN}\\cdot\\mathrm{L}\\,\\mathrm{s}^{-1} $$\n$$ P = \\frac{125}{2} \\,\\mathrm{mN}\\cdot\\mathrm{L}\\,\\mathrm{s}^{-1} $$\nThe mechanical power generated at a load of $50\\,\\mathrm{mN}$ is exactly $\\frac{125}{2}\\,\\mathrm{mN}\\cdot\\mathrm{L}\\,\\mathrm{s}^{-1}$.\n\nThe final results are the velocity $v = \\frac{5}{4}\\,\\mathrm{L}\\,\\mathrm{s}^{-1}$ and the power $P = \\frac{125}{2}\\,\\mathrm{mN}\\cdot\\mathrm{L}\\,\\mathrm{s}^{-1}$.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{5}{4} & \\frac{125}{2} \\end{pmatrix}}\n$$", "id": "2577830"}, {"introduction": "Muscles in vivo do not exist as isolated contractile elements; they are mechanically coupled with tendons and other passive tissues that have their own elastic properties. This exercise introduces this complexity by modeling a Contractile Element (CE) in series with a Series Elastic Element (SEE), a common representation of a muscle-tendon unit. This practice will challenge you to think about how series compliance affects muscle dynamics and how to correct experimental measurements to reveal the intrinsic properties of the contractile machinery itself. [@problem_id:2577800]", "problem": "A one-dimensional muscle–tendon unit (MTU) consists of a Contractile Element (CE) in series with a linear Series Elastic Element (SEE). The SEE has constant stiffness $k_{s}$, so that its extension $x$ satisfies $F = k_{s}\\,x$, where $F$ is the tensile force transmitted through both elements. The CE is activated at a fixed level and at a fixed fiber length (so that its intrinsic force–velocity relation is a single-valued function $F = \\Phi(v_{CE})$ that is strictly decreasing in the CE shortening velocity $v_{CE}$, with no explicit dependence on time), and inertial effects of all components are negligible on the timescale considered.\n\nThe MTU is initially held isometric at force $F_{0}$, after which an ideal isotonic clamp imposes a constant afterload $F_{A} \\in (0, F_{0})$ at $t=0$, and the MTU shortens. Define velocities with the sign convention that positive $v$ denotes shortening (decrease of length). Let $L_{MTU}$ denote total MTU length, $L_{CE}$ the CE length, and $x$ the SEE extension above slack length, so that $L_{MTU} = L_{CE} + x$ at all times.\n\n(a) Using only Newton’s second law (quasi-static force balance), the kinematic relation $L_{MTU} = L_{CE} + x$, and the constitutive law $F = k_{s}\\,x$ for the SEE, determine whether the steady isotonic shortening velocity at the prescribed afterload $F_{A}$ depends on the series elastic stiffness $k_{s}$. Do not assume any specific algebraic form of the CE force–velocity relation beyond $F = \\Phi(v_{CE})$ being strictly decreasing.\n\n(b) In a practical measurement, $F(t)$ may not be exactly constant during the early phase after release. Express the instantaneous CE shortening velocity $v_{CE}(t)$ in terms of the measured MTU shortening velocity $v_{MTU}(t)$, the SEE stiffness $k_{s}$, and the time derivative $\\dot{F}(t)$. Provide a closed-form analytic expression for $v_{CE}(t)$ as a function of these quantities. Your final answer must be this expression only (no units), written in terms of $v_{MTU}(t)$, $k_{s}$, and $\\dot{F}(t)$.", "solution": "The problem as stated is subjected to rigorous validation.\n\n**Problem Statement Validation**\n\nGivens extracted from the problem statement are as follows:\n- A one-dimensional muscle–tendon unit (MTU) model with a Contractile Element (CE) in series with a Series Elastic Element (SEE).\n- The SEE is a linear spring with constant stiffness $k_{s}$, and its constitutive law is $F = k_{s}x$, where $F$ is tensile force and $x$ is extension.\n- The CE has a force-velocity relation $F = \\Phi(v_{CE})$, where $\\Phi$ is a strictly decreasing function of CE shortening velocity $v_{CE}$.\n- The kinematic relation is $L_{MTU} = L_{CE} + x$, where $L_{MTU}$ is total MTU length and $L_{CE}$ is CE length.\n- The sign convention is that positive velocity corresponds to shortening.\n- Initial state: isometric at force $F_{0}$.\n- Subsequent state: for $t \\ge 0$, an ideal isotonic clamp imposes a constant afterload $F_{A} \\in (0, F_{0})$.\n- Assumption: Inertial effects are negligible, implying quasi-static force balance.\n\nThe problem is evaluated against the validation criteria. It is scientifically grounded, rooted in the classical Hill-type muscle model, which is a cornerstone of biomechanics. It is well-posed, with sufficient information to derive the requested relationships. The language is objective and precise. The premises are not factually incorrect, contradictory, or unrealistic within the context of a theoretical model. The problem is formalizable and directly relevant to the specified topic. Therefore, the problem is deemed **valid**. The solution will proceed.\n\nThe problem consists of two parts. They will be addressed sequentially.\n\n**(a) Analysis of Steady-State Isotonic Shortening**\n\nThe condition is a steady isotonic shortening. \"Isotonic\" implies that the force exerted by the MTU is constant and equal to the afterload, $F = F_{A}$. \"Steady\" implies that all time derivatives of the system's state variables are zero. Consequently, all velocities are constant.\n\nUnder the quasi-static assumption (negligible inertia), the force is uniform throughout the series-coupled system. Thus, the force in the SEE and the force in the CE are both equal to the externally applied afterload:\n$$F_{SEE} = F_{CE} = F = F_{A}$$\nFor the SEE, the constitutive law is $F = k_{s}x$. Since the force $F$ is constant at $F_{A}$ during steady isotonic shortening, the extension $x$ of the SEE must also be constant:\n$$x = \\frac{F_{A}}{k_{s}}$$\nThe velocity of change of the SEE's extension is the time derivative of $x$. Since $x$ is constant in the steady state, its time derivative is zero:\n$$\\frac{dx}{dt} = 0$$\nThe kinematic relationship for the lengths is given as $L_{MTU} = L_{CE} + x$. To relate the velocities, we differentiate this expression with respect to time $t$:\n$$\\frac{d L_{MTU}}{dt} = \\frac{d L_{CE}}{dt} + \\frac{dx}{dt}$$\nThe problem defines shortening as positive velocity. Thus, the shortening velocity of the MTU is $v_{MTU} = -\\frac{d L_{MTU}}{dt}$, and the shortening velocity of the CE is $v_{CE} = -\\frac{d L_{CE}}{dt}$. Substituting these definitions into the differentiated kinematic equation yields:\n$$-v_{MTU} = -v_{CE} + \\frac{dx}{dt}$$\nRearranging gives the relationship between the velocities:\n$$v_{MTU} = v_{CE} - \\frac{dx}{dt}$$\nIn the steady state, we have established that $\\frac{dx}{dt}=0$. Therefore, the steady-state MTU shortening velocity is equal to the steady-state CE shortening velocity:\n$$v_{MTU, steady} = v_{CE, steady}$$\nThe force in the CE is determined by its force-velocity relation, $F_{CE} = \\Phi(v_{CE})$. In the steady isotonic state, $F_{CE} = F_{A}$ and $v_{CE} = v_{CE, steady}$. This gives:\n$$F_{A} = \\Phi(v_{CE, steady})$$\nThe problem states that $\\Phi$ is a strictly decreasing function. A strictly monotonic function is invertible. Let $\\Phi^{-1}$ be the inverse function of $\\Phi$. We can solve for the steady-state CE velocity:\n$$v_{CE, steady} = \\Phi^{-1}(F_{A})$$\nTherefore, the steady-state MTU shortening velocity is:\n$$v_{MTU, steady} = \\Phi^{-1}(F_{A})$$\nThis expression for the steady-state shortening velocity depends only on the afterload $F_{A}$ and the intrinsic force-velocity properties of the contractile element (the function $\\Phi$). The series elastic stiffness, $k_{s}$, does not appear in this final expression. The stiffness $k_{s}$ influences the transient dynamics of the contraction (i.e., how quickly the steady state is reached), but not the velocity of the steady state itself.\n\nConclusion for (a): The steady isotonic shortening velocity does not depend on the series elastic stiffness $k_{s}$.\n\n**(b) Derivation of Instantaneous CE Velocity**\n\nFor the second part, we consider the general, non-steady case where the force $F(t)$ may vary with time. The analysis starts again from the fundamental kinematic and constitutive equations, which hold true at every instant in time.\n\nThe kinematic relationship between velocities, as derived previously, is:\n$$v_{MTU}(t) = v_{CE}(t) - \\frac{dx(t)}{dt}$$\nWe must find an expression for $\\frac{dx(t)}{dt}$ in terms of the given quantities. The constitutive law for the SEE is $F(t) = k_{s}x(t)$. Differentiating both sides with respect to time $t$ gives:\n$$\\frac{dF(t)}{dt} = k_{s} \\frac{dx(t)}{dt}$$\nLet $\\dot{F}(t) = \\frac{dF(t)}{dt}$. Then we can write:\n$$\\dot{F}(t) = k_{s} \\frac{dx(t)}{dt}$$\nSolving for $\\frac{dx(t)}{dt}$ yields:\n$$\\frac{dx(t)}{dt} = \\frac{\\dot{F}(t)}{k_{s}}$$\nNow, we substitute this expression for $\\frac{dx(t)}{dt}$ back into the velocity kinematic equation:\n$$v_{MTU}(t) = v_{CE}(t) - \\frac{\\dot{F}(t)}{k_{s}}$$\nThe objective is to find an expression for the instantaneous CE shortening velocity, $v_{CE}(t)$. Rearranging the above equation to solve for $v_{CE}(t)$ gives the required result:\n$$v_{CE}(t) = v_{MTU}(t) + \\frac{\\dot{F}(t)}{k_{s}}$$\nThis equation is a fundamental result in muscle mechanics, often used to correct for the effect of series compliance when measuring the intrinsic properties of the contractile element from experiments on a whole muscle-tendon unit. It provides the instantaneous CE velocity in terms of experimentally measurable quantities of the whole MTU: its shortening velocity $v_{MTU}(t)$, the time rate of change of force $\\dot{F}(t)$, and the stiffness of the series elastic element $k_{s}$.", "answer": "$$\\boxed{v_{MTU}(t) + \\frac{\\dot{F}(t)}{k_{s}}}$$", "id": "2577800"}, {"introduction": "While analytical models provide powerful insights, they often rely on the assumption of perfect homogeneity, which is rarely true in biological systems. This advanced practice moves from analytical equations to a computational simulation to explore how microscopic non-uniformities within a myofibril affect its macroscopic behavior. By implementing a model of a series-chain of heterogeneous half-sarcomeres, you will gain hands-on experience in computational physiology and discover how small variations in individual components can give rise to emergent properties like the broadening of the active length-tension plateau. [@problem_id:2577815]", "problem": "Consider a one-dimensional chain of $N$ identical mechanical elements representing half-sarcomeres arranged in series along a myofibril. Each element $i \\in \\{1,\\dots,N\\}$ has two contributions to force when activated isometrically at steady state: an active force arising from thick–thin filament overlap and a passive elastic force arising from titin and structural elasticity. Assume the following fundamental and well-tested base:\n\n- Hooke’s law for linear elasticity: if an element of instantaneous length $l_i$ has a reference length $l_{r,i}$, its passive force is $F_{\\text{passive},i}(l_i) = k_p \\,(l_i - l_{r,i})$, where $k_p$ is a constant passive stiffness.\n- Series force balance in static equilibrium: in a series chain at steady state, the total force $F$ is equal across all elements, that is $F = F_i$ for all $i$.\n- Cross-bridge overlap produces an active force–length relation that has a finite plateau where maximal overlap is maintained, with linear decreases on ascending and descending limbs when overlap is lost. Let the single half-sarcomere active force be idealized as a piecewise-linear trapezoid centered at its optimal length $L_{0,i}$ with maximal amplitude $A_i F_0$:\n  1. A flat plateau of width $p$ around $L_{0,i}$,\n  2. Linear transitions of width $t$ on either side from amplitude $A_i F_0$ down to zero,\n  3. Zero active force outside the overlap region.\n\nFormally, define $x_i = l_i - L_{0,i}$ and\n$$\nF_{\\text{active},i}(l_i) = A_i F_0 \\times \n\\begin{cases}\n1, & |x_i| \\le \\dfrac{p}{2},\\\\[6pt]\n1 - \\dfrac{|x_i| - \\frac{p}{2}}{t}, & \\dfrac{p}{2} < |x_i| \\le \\dfrac{p}{2} + t,\\\\[6pt]\n0, & |x_i| > \\dfrac{p}{2} + t\n\\end{cases}\n$$\nAssume $k_p$ is chosen sufficiently large such that the total element force\n$$\nf_i(l_i) \\equiv F_{\\text{passive},i}(l_i) + F_{\\text{active},i}(l_i)\n$$\nis strictly increasing in $l_i$ (that is, $\\dfrac{d f_i}{d l_i} > 0$ for all $l_i$), ensuring a unique $l_i$ solves $f_i(l_i)=F$ for any admissible $F$.\n\nAt equilibrium for an imposed total chain length $L_{\\text{tot}}$, the system satisfies\n$$\nF = f_i(l_i)\\quad \\text{for all } i,\\qquad \\sum_{i=1}^{N} l_i = L_{\\text{tot}}.\n$$\nDefine the macroscopic active length–tension curve as $F(L_{\\text{tot}})$ obtained by solving the above equations for each imposed $L_{\\text{tot}}$.\n\nNonuniformity and stochasticity enter as follows:\n- Each element’s optimal active length $L_{0,i}$ is drawn from a normal distribution with mean $\\bar L_0$ and standard deviation $\\sigma_{L_0}$ (small initial heterogeneity in optimal half-sarcomere length).\n- Each element’s active amplitude scale $A_i$ is drawn from a narrow distribution around unity with standard deviation $\\sigma_A$ (lattice spacing variability and stochastic cross-bridge availability).\n- The passive reference length is set to the element’s optimal active length, $l_{r,i}=L_{0,i}$, representing minimal passive force at optimal overlap.\n\nYour task: implement a simulation that, for each parameter set, constructs $F(L_{\\text{tot}})$ over a length range and then quantifies the macroscopic plateau width $W$ defined as the range of average half-sarcomere lengths $\\bar l \\equiv \\dfrac{L_{\\text{tot}}}{N}$ over which $F \\ge \\alpha F_{\\max}$, with $\\alpha \\in (0,1)$ a fixed fraction and $F_{\\max}$ the maximum of $F$ over the sampled range. Use $\\alpha = 0.9$.\n\nUse the following fixed constants for all simulations:\n- $N = 128$,\n- $F_0 = 1$ (dimensionless normalized force units),\n- $\\bar L_0 = 1.10$ (micrometers),\n- $p = 0.10$ (micrometers),\n- $t = 0.20$ (micrometers),\n- $k_p = 20.0$ (dimensionless force per micrometer),\n- Sample the macroscopic curve on a uniform grid of average half-sarcomere lengths $\\bar l$ from $\\bar L_0 - 0.25$ to $\\bar L_0 + 0.25$ with $101$ equally spaced points,\n- Outer and inner root-finding must respect the monotonicity implied by $\\dfrac{d f_i}{d l_i} > 0$ and must not assume any closed-form inversion.\n\nUnits and outputs:\n- Express lengths in micrometers.\n- Forces are dimensionless normalized units.\n- The reported plateau width $W$ must be expressed in micrometers, rounded to six decimal places.\n\nTest suite:\nFor each of the following parameter sets $(\\sigma_{L_0}, \\sigma_A, \\text{seed})$, compute the plateau width $W$:\n- Case $1$: $(0.00, 0.00, 1)$,\n- Case $2$: $(0.02, 0.00, 1)$,\n- Case $3$: $(0.05, 0.00, 1)$,\n- Case $4$: $(0.02, 0.20, 2)$.\n\nImplementation notes:\n- For each imposed $\\bar l$ (that is, for each $L_{\\text{tot}} = N \\bar l$), solve the series equilibrium by finding the unique $F$ such that $\\sum_{i=1}^{N} l_i(F) = L_{\\text{tot}}$, where $l_i(F)$ solves $f_i(l_i)=F$. Because each $f_i$ is strictly increasing in $l_i$, each inversion $l_i(F)$ is well-defined and unique.\n- You may use robust numerical methods such as bisection and Newton’s method; ensure that all iterates remain within biophysically reasonable bounds.\n- The plateau width $W$ is the largest contiguous interval in the sampled $\\bar l$ grid where $F \\ge 0.9 F_{\\max}$; if no samples exceed the threshold, return $0.0$.\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list of the four plateau widths in micrometers, rounded to six decimal places, enclosed in square brackets (for example, $[0.100000,0.123456,0.150000,0.120000]$).", "solution": "The problem requires the implementation of a numerical simulation to compute the macroscopic length-tension curve of a one-dimensional chain of $N$ heterogeneous half-sarcomere elements arranged in series. From this curve, the macroscopic plateau width $W$ must be quantified.\n\n### Problem Validation\n\nFirst, the problem statement is validated against the required criteria.\n\n**1. Extracted Givens:**\n- **Model:** A series chain of $N=128$ half-sarcomere elements.\n- **Total Element Force:** $f_i(l_i) = F_{\\text{passive},i}(l_i) + F_{\\text{active},i}(l_i)$.\n- **Passive Force:** $F_{\\text{passive},i}(l_i) = k_p (l_i - l_{r,i})$, with passive stiffness $k_p = 20.0$.\n- **Active Force:** A piecewise-linear trapezoidal function of length $l_i$ centered at $L_{0,i}$, with maximum amplitude $A_i F_0$ (where $F_0=1$), plateau width $p=0.10 \\mu m$, and transition width $t=0.20 \\mu m$.\n- **Heterogeneity:**\n    - Optimal length $L_{0,i}$ is drawn from $\\mathcal{N}(\\bar{L}_0, \\sigma_{L_0}^2)$, with $\\bar{L}_0 = 1.10 \\mu m$.\n    - Amplitude scale $A_i$ is drawn from $\\mathcal{N}(1, \\sigma_A^2)$.\n    - Passive reference length $l_{r,i} = L_{0,i}$.\n- **Equilibrium Conditions:** For a given total length $L_{\\text{tot}}$, the system is solved for a uniform total force $F$ such that $F = f_i(l_i)$ for all $i=1,\\dots,N$ and $\\sum_{i=1}^{N} l_i = L_{\\text{tot}}$.\n- **Monotonicity:** The condition $\\frac{df_i}{dl_i} > 0$ is assumed. The most negative slope of the active force is $-A_i F_0 / t$. Thus, we require $k_p - A_i F_0/t > 0$, which is $20.0 - A_i \\cdot 1 / 0.2 > 0$, or $A_i < 4$. For the given distributions of $A_i$, this condition holds with very high probability.\n- **Task:** Compute the plateau width $W$, defined as the range of average half-sarcomere lengths $\\bar{l} = L_{\\text{tot}}/N$ where the macroscopic force $F(\\bar{l})$ is at least $90\\%$ of its maximum value ($F \\ge \\alpha F_{\\max}$ with $\\alpha=0.9$).\n- **Simulation Grid:** The curve $F(\\bar{l})$ is sampled at $101$ points over $\\bar{l} \\in [\\bar{L}_0 - 0.25, \\bar{L}_0 + 0.25]$.\n- **Test Cases:** Four sets of $(\\sigma_{L_0}, \\sigma_A, \\text{seed})$ are provided.\n\n**2. Verdict:**\nThe problem is **valid**. It is scientifically grounded in established principles of muscle biophysics, mathematically well-posed, objective, and self-contained. The provided parameters are physically realistic and computationally feasible. The task is a standard problem in computational physiology.\n\n### Solution Methodology\n\nThe core of the problem is to solve a system of $N+1$ coupled nonlinear equations for the unknowns $\\{l_1, \\dots, l_N, F\\}$. The structure of the problem allows this system to be reduced to a single root-finding problem for the total force $F$.\n\nFor a given total length $L_{\\text{tot}}$, we must find the unique force $F$ that satisfies the equilibrium conditions. The procedure is as follows:\n\n1.  **Outer Root-Finding Problem:** We define an error function for the total length of the chain, $\\mathcal{E}(F) = \\left( \\sum_{i=1}^{N} l_i(F) \\right) - L_{\\text{tot}}$. The goal is to find the root $F^*$ such that $\\mathcal{E}(F^*) = 0$. The function $l_i(F)$ represents the length of element $i$ when subjected to force $F$.\n\n2.  **Inner Root-Finding Problem:** To evaluate $\\mathcal{E}(F)$ for a given $F$, we must first determine the length $l_i$ of each element. This requires inverting the total force function for each element, i.e., solving $f_i(l_i) = F$ for $l_i$. Since the problem specifies that $k_p$ is sufficiently large to ensure $f_i(l_i)$ is strictly increasing in $l_i$, its inverse $l_i(F)$ is single-valued and well-defined. This inversion is a root-finding problem in itself for each of the $N$ elements.\n\n3.  **Numerical Solvers:** Both the inner and outer problems are solved using a robust numerical root-finding algorithm, such as the Brent-Dekker method (`brentq` in SciPy), which is suitable for strictly monotonic functions.\n    - For the inner loop (solving for each $l_i$), we seek a root of $f_i(l_i) - F = 0$ within a biophysically plausible range of lengths, for instance, $[0.5 \\mu m, 2.0 \\mu m]$.\n    - For the outer loop (solving for $F$), we seek a root of $\\mathcal{E}(F) = 0$. The function $\\mathcal{E}(F)$ is also strictly increasing because each $l_i(F)$ is an increasing function of $F$. A suitable search bracket for $F$ is chosen based on physical estimates of the minimum and maximum possible forces in the system.\n\n4.  **Macroscopic Curve Construction:** This nested root-finding process is repeated for each of the $101$ prescribed values of average length $\\bar{l}$, yielding a discrete representation of the macroscopic length-tension curve, $F(\\bar{l})$.\n\n5.  **Plateau Width Quantification:** Once the $F(\\bar{l})$ curve is computed, its maximum value, $F_{\\max}$, is found. A threshold of $0.9 F_{\\max}$ is calculated. We then identify all contiguous segments on the $\\bar{l}$ grid where $F(\\bar{l})$ is greater than or equal to this threshold. The plateau width $W$ is the length of the longest such segment, calculated as the difference between the maximum and minimum $\\bar{l}$ values within that segment. This is efficiently implemented using `scipy.ndimage.label`.\n\nThis implemented methodology correctly formalizes and solves the described biophysical system. The use of established numerical techniques ensures a robust and accurate solution.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import brentq\nfrom scipy.ndimage import label, find_objects\n\ndef solve():\n    \"\"\"\n    Main solver function to compute plateau widths for the specified test cases.\n    The implementation follows the methodology of nested root-finding to solve\n    the series equilibrium equations for a chain of heterogeneous half-sarcomeres.\n    \"\"\"\n    \n    # Define constants as specified in the problem statement\n    N = 128\n    F0 = 1.0\n    L0_BAR = 1.10\n    P = 0.10\n    T = 0.20\n    KP = 20.0\n    ALPHA = 0.9\n    N_POINTS = 101\n    L_BAR_RANGE = 0.25\n\n    # Inner function to compute the total force of a single element for a given length\n    # This represents f_i(l_i).\n    def get_element_force(li, L0_i, A_i):\n        # Passive force based on Hooke's law, with l_r,i = L_0,i\n        passive_force = KP * (li - L0_i)\n        \n        # Active force based on the trapezoidal length-tension relationship\n        x_i = li - L0_i\n        abs_x = np.abs(x_i)\n        p_half = P / 2.0\n        \n        active_force = 0.0\n        if abs_x <= p_half:\n            active_force = A_i * F0\n        elif p_half < abs_x <= p_half + T:\n            active_force = A_i * F0 * (1.0 - (abs_x - p_half) / T)\n            \n        return passive_force + active_force\n\n    # Error function for the inner root-finding problem (to find li for a given F)\n    def element_force_error(li, F, L0_i, A_i):\n        return get_element_force(li, L0_i, A_i) - F\n        \n    # Error function for the outer root-finding problem (to find F for a given L_tot)\n    def total_length_error(F, L_tot, L0s, As, l_bounds):\n        l_sum = 0.0\n        l_min_bound, l_max_bound = l_bounds\n        \n        for i in range(N):\n            # To make the root-finder robust, determine if the target force F is\n            # within the range produced by the element within its length bounds.\n            f_at_min = get_element_force(l_min_bound, L0s[i], As[i])\n            f_at_max = get_element_force(l_max_bound, L0s[i], As[i])\n            \n            if F <= f_at_min:\n                li = l_min_bound\n            elif F >= f_at_max:\n                li = l_max_bound\n            else:\n                # If F is within bounds, use a numerical solver to find the exact length.\n                li = brentq(element_force_error, l_min_bound, l_max_bound, args=(F, L0s[i], As[i]))\n            \n            l_sum += li\n            \n        return l_sum - L_tot\n\n    def compute_plateau_width(sigma_L0, sigma_A, seed):\n        # 1. Generate myofibril properties with heterogeneity\n        rng = np.random.default_rng(seed)\n        L0s = rng.normal(loc=L0_BAR, scale=sigma_L0, size=N)\n        As = rng.normal(loc=1.0, scale=sigma_A, size=N)\n        \n        # 2. Define the grid of average half-sarcomere lengths to sample\n        l_bar_grid = np.linspace(L0_BAR - L_BAR_RANGE, L0_BAR + L_BAR_RANGE, N_POINTS)\n        \n        # 3. Compute the macroscopic force-length curve\n        F_curve = np.zeros(N_POINTS)\n        F_bracket = [-20.0, 30.0]  # Search bracket for total force F\n        l_bounds = [0.5, 2.0]     # Search bracket for individual element length li\n\n        for j, l_bar in enumerate(l_bar_grid):\n            L_tot = N * l_bar\n            try:\n                # Outer root-finding: solve for the equilibrium force F\n                F_j = brentq(total_length_error, F_bracket[0], F_bracket[1], args=(L_tot, L0s, As, l_bounds))\n                F_curve[j] = F_j\n            except ValueError:\n                # This block should not be reached due to the robust bracketing for li.\n                # It is included as a safeguard.\n                F_curve[j] = np.nan\n        \n        # 4. Quantify the macroscopic plateau width W\n        if np.any(np.isnan(F_curve)) or len(F_curve) == 0:\n            return 0.0\n\n        F_max = np.max(F_curve)\n        if F_max <= 0: # Handle cases with zero or negative maximum force\n            return 0.0\n        \n        threshold = ALPHA * F_max\n        is_above = F_curve >= threshold\n        \n        if not np.any(is_above):\n            return 0.0\n            \n        # Use scipy.ndimage.label to find contiguous regions above the threshold\n        labels, num_features = label(is_above)\n        if num_features == 0:\n            return 0.0\n            \n        # Find the longest of these regions\n        slices = find_objects(labels)\n        lengths = [s[0].stop - s[0].start for s in slices]\n        max_len_idx = np.argmax(lengths)\n        longest_slice = slices[max_len_idx]\n        \n        start_idx = longest_slice[0].start\n        end_idx = longest_slice[0].stop - 1\n        \n        # The width is the range of l_bar values in this longest region\n        width = l_bar_grid[end_idx] - l_bar_grid[start_idx]\n        \n        return width\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (0.00, 0.00, 1),\n        (0.02, 0.00, 1),\n        (0.05, 0.00, 1),\n        (0.02, 0.20, 2),\n    ]\n\n    results = []\n    for sigma_L0_val, sigma_A_val, seed_val in test_cases:\n        W = compute_plateau_width(sigma_L0_val, sigma_A_val, seed_val)\n        results.append(W)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2577815"}]}