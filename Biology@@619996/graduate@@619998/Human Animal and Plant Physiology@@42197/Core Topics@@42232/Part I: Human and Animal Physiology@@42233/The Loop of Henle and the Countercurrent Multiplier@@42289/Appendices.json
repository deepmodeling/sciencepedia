{"hands_on_practices": [{"introduction": "At its core, the countercurrent multiplier is a metabolically expensive process, consuming a significant portion of the kidney's energy budget. This first exercise provides a practical link between the macroscopic scale of renal filtration and the microscopic, energetic cost of active transport in the thick ascending limb. By calculating the adenosine triphosphate (ATP) demand required to support the medullary gradient, you will develop a quantitative appreciation for the bioenergetics of renal function [@problem_id:2617824].", "problem": "A physiologically normal adult human kidney operates a countercurrent multiplier in the loop of Henle to sustain a corticomedullary osmolality difference of approximately $900\\,\\text{mOsm}$ from cortex to papillary tip. In steady state, suppose the thick ascending limb (TAL) of the loop of Henle reabsorbs a sodium chloride flux equal to a fraction $0.25$ of the filtered sodium load. Assume the following fundamental facts:\n- The filtered load of sodium equals the product of glomerular filtration rate (GFR) and plasma sodium concentration.\n- Chloride follows sodium electrochemically and osmotically in TAL, but the energetic cost is dominated by basolateral sodium extrusion via the sodium–potassium adenosine triphosphatase (sodium–potassium ATPase), which extrudes $3$ sodium ions per adenosine triphosphate (ATP) hydrolyzed.\n- The TAL epithelium is effectively water-impermeable under these conditions, and potassium recycles apically so that the stoichiometric energetic burden can be attributed to sodium extrusion.\n\nGiven a glomerular filtration rate of $120\\,\\text{mL}\\,\\text{min}^{-1}$ and a plasma sodium concentration of $140\\,\\text{mmol}\\,\\text{L}^{-1}$, compute the rate of ATP consumption required by the TAL to reabsorb the specified sodium chloride flux that is sufficient to support the $900\\,\\text{mOsm}$ corticomedullary gradient. Express your final answer in $\\text{mmol}\\,\\text{min}^{-1}$ and round to three significant figures.", "solution": "The problem requires the calculation of the rate of adenosine triphosphate (ATP) consumption by the thick ascending limb (TAL) of the loop of Henle. The problem statement is first subjected to validation.\n\n**Problem Validation**\n\nStep 1: Extract Givens\n- Corticomedullary osmolality difference: approximately $900\\,\\text{mOsm}$.\n- Fraction of filtered sodium load reabsorbed by TAL, $f_{Na, \\text{TAL}}$: $0.25$.\n- Definition of filtered load of sodium: Glomerular filtration rate (GFR) $\\times$ Plasma sodium concentration ($P_{Na}$).\n- Stoichiometry of sodium–potassium ATPase: $3$ sodium ions ($Na^+$) extruded per $1$ ATP hydrolyzed.\n- TAL epithelium is water-impermeable.\n- Glomerular filtration rate, GFR: $120\\,\\text{mL}\\,\\text{min}^{-1}$.\n- Plasma sodium concentration, $P_{Na}$: $140\\,\\text{mmol}\\,\\text{L}^{-1}$.\n\nStep 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, with all provided values (GFR, $P_{Na}$, osmolality gradient) falling within standard physiological ranges for a healthy human. The principles cited, such as the function of the countercurrent multiplier, the role of the TAL, and the stoichiometry of the Na$^+$/K$^+$-ATPase, are fundamental facts of renal physiology and cell biology. The problem is well-posed; it provides a clear objective and all necessary quantitative data to achieve a unique solution. The information regarding the $900\\,\\text{mOsm}$ gradient serves as physiological context, establishing that the specified sodium flux is sufficient to maintain this gradient, but it is not a direct input for the calculation. This does not render the problem incomplete or contradictory. The language is precise and objective. There are no logical inconsistencies, factual errors, or ambiguities.\n\nStep 3: Verdict and Action\nThe problem is deemed **valid**. A solution will be derived.\n\n**Solution Derivation**\n\nThe objective is to compute the rate of ATP consumption in the TAL, denoted as $R_{\\text{ATP, TAL}}$. The solution is derived in three logical steps.\n\nFirst, we calculate the filtered load of sodium, $L_{Na}$. This is defined as the product of the glomerular filtration rate (GFR) and the plasma sodium concentration ($P_{Na}$).\n$$L_{Na} = \\text{GFR} \\times P_{Na}$$\nThe units must be made consistent. The GFR is given as $120\\,\\text{mL}\\,\\text{min}^{-1}$, which is equivalent to $0.120\\,\\text{L}\\,\\text{min}^{-1}$. The plasma sodium concentration is $140\\,\\text{mmol}\\,\\text{L}^{-1}$.\n$$L_{Na} = (0.120\\,\\text{L}\\,\\text{min}^{-1}) \\times (140\\,\\text{mmol}\\,\\text{L}^{-1})$$\n$$L_{Na} = 16.8\\,\\text{mmol}\\,\\text{min}^{-1}$$\n\nSecond, we determine the rate of sodium reabsorption in the TAL, $R_{Na, \\text{TAL}}$. The problem states that this is a fraction, $f_{Na, \\text{TAL}} = 0.25$, of the filtered load.\n$$R_{Na, \\text{TAL}} = f_{Na, \\text{TAL}} \\times L_{Na}$$\nSubstituting the values:\n$$R_{Na, \\text{TAL}} = 0.25 \\times 16.8\\,\\text{mmol}\\,\\text{min}^{-1}$$\n$$R_{Na, \\text{TAL}} = 4.2\\,\\text{mmol}\\,\\text{min}^{-1}$$\n\nThird, we calculate the rate of ATP consumption, $R_{\\text{ATP, TAL}}$. Basolateral transport of sodium out of the TAL cells via the Na$^+$/K$^+$-ATPase is the primary energy-consuming step for transepithelial NaCl reabsorption. The stoichiometry is given as $3$ moles of Na$^+$ transported per mole of ATP hydrolyzed. Therefore, the rate of ATP consumption is one-third of the rate of sodium reabsorption.\n$$R_{\\text{ATP, TAL}} = \\frac{R_{Na, \\text{TAL}}}{3}$$\nSubstituting the calculated rate of sodium reabsorption:\n$$R_{\\text{ATP, TAL}} = \\frac{4.2\\,\\text{mmol}\\,\\text{min}^{-1}}{3}$$\n$$R_{\\text{ATP, TAL}} = 1.4\\,\\text{mmol}\\,\\text{min}^{-1}$$\n\nThe problem requires the final answer to be rounded to three significant figures. The calculated value is $1.4$. To express this with three significant figures, we write it as $1.40$. The final answer is thus $1.40\\,\\text{mmol}\\,\\text{min}^{-1}$.", "answer": "$$\\boxed{1.40}$$", "id": "2617824"}, {"introduction": "Simplified models are powerful tools for understanding how perturbing a single component can affect an entire physiological system. This practice challenges you to use a linear model of the countercurrent multiplier to predict the physiological consequences of administering furosemide, a common loop diuretic [@problem_id:2617889]. You will directly quantify how inhibiting the Sodium–Potassium–2 Chloride Cotransporter type 2 (NKCC2) diminishes the \"single effect\" and, consequently, reduces the kidney's maximum concentrating ability.", "problem": "A thick ascending limb of the loop of Henle actively reabsorbs sodium chloride via the Sodium–Potassium–2 Chloride Cotransporter type 2 (NKCC2) and is effectively water-impermeable, establishing a transverse cortico–medullary “single effect” that is multiplied axially by countercurrent flow. Consider a simplified steady-state model of countercurrent multiplication in which the following hold:\n\n- The cortical interstitium has osmolality $300$ mOsm/kg $\\text{H}_2\\text{O}$.\n- The transverse single-effect magnitude generated by the thick ascending limb in the absence of drug is $\\Delta C_{0} = 205$ mOsm/kg $\\text{H}_2\\text{O}$ at each axial level.\n- The axial extent of the system and loop distribution can be represented by an effective number of countercurrent multiplication repeats $N = 3$ (this is a non-integer proxy for length and mixing that determines how many times the single effect is imposed along the corticomedullary axis).\n- Inner medullary urea recycling contributes an additional $300$ mOsm/kg $\\text{H}_2\\text{O}$ to the papillary interstitium and is unaffected by loop diuretics under the conditions considered.\n- With antidiuretic hormone (ADH) present, the collecting duct equilibrates osmotically with the surrounding interstitium at each level, so the maximal urine osmolality equals the papillary interstitial osmolality.\n\nA dose of furosemide causes a fractional blockade $f = 0.70$ of NKCC2. Assume that, at steady state, the single-effect magnitude $\\Delta C$ is directly proportional to the residual NKCC2 activity, and that other epithelial permeabilities remain unchanged.\n\nUsing only these premises and first principles of countercurrent multiplication, derive how furosemide changes the single effect and how that change propagates to the papillary interstitial osmolality. Then compute the resulting decrease in maximal urine osmolality produced by this dosing regimen.\n\nRound your final numerical answer to four significant figures and express it in mOsm/kg $\\text{H}_2\\text{O}$.", "solution": "The problem as stated is scientifically grounded and well-posed, permitting a direct analytical solution. We proceed by first principles of countercurrent multiplication as described by the provided simplified model.\n\nThe maximal urine osmolality, $U_{osm,max}$, under conditions of antidiuresis, is equal to the osmolality of the papillary interstitium, $C_{papilla}$. This osmolality is the sum of three components as defined by the model:\n$1$. The osmolality of the cortical interstitium, $C_{cortex}$, which is the baseline osmolality of the fluid entering the system.\n$2$. The total osmotic gradient generated by the countercurrent multiplier of the loops of Henle, which is the product of the single effect magnitude, $\\Delta C$, and the effective number of multiplication repeats, $N$.\n$3$. The additional osmotic contribution from urea recycling to the papilla, which we denote as $C_{urea}$.\n\nThus, the governing equation for the maximal urine osmolality is:\n$$U_{osm,max} = C_{papilla} = C_{cortex} + N \\cdot \\Delta C + C_{urea}$$\n\nWe are given the following parameters:\n- Cortical interstitial osmolality: $C_{cortex} = 300$ mOsm/kg $\\text{H}_2\\text{O}$\n- Baseline single-effect magnitude: $\\Delta C_{0} = 205$ mOsm/kg $\\text{H}_2\\text{O}$\n- Effective number of repeats: $N = 3$\n- Urea contribution to papillary osmolality: $C_{urea} = 300$ mOsm/kg $\\text{H}_2\\text{O}$\n\nFirst, we calculate the baseline maximal urine osmolality, $U_{osm,max,0}$, in the absence of any drug. We use the baseline single effect, $\\Delta C_{0}$.\n$$U_{osm,max,0} = C_{cortex} + N \\cdot \\Delta C_{0} + C_{urea}$$\nSubstituting the given values:\n$$U_{osm,max,0} = 300 + (3 \\times 205) + 300$$\n$$U_{osm,max,0} = 300 + 615 + 300 = 1215 \\, \\text{mOsm/kg H}_2\\text{O}$$\n\nNext, we evaluate the effect of furosemide. Furosemide causes a fractional blockade of the NKCC2 transporter, $f = 0.70$. The problem states that the single-effect magnitude, $\\Delta C$, is directly proportional to the residual NKCC2 activity. The residual activity is $(1-f)$. Therefore, the new single-effect magnitude in the presence of furosemide, $\\Delta C_{f}$, is:\n$$\\Delta C_{f} = \\Delta C_{0} \\cdot (1 - f)$$\nSubstituting the values for $\\Delta C_{0}$ and $f$:\n$$\\Delta C_{f} = 205 \\cdot (1 - 0.70) = 205 \\cdot 0.30 = 61.5 \\, \\text{mOsm/kg H}_2\\text{O}$$\n\nNow, we calculate the new maximal urine osmolality, $U_{osm,max,f}$, under the influence of furosemide. The parameters $C_{cortex}$, $N$, and $C_{urea}$ are stated to be unaffected. We use the modified single effect, $\\Delta C_{f}$.\n$$U_{osm,max,f} = C_{cortex} + N \\cdot \\Delta C_{f} + C_{urea}$$\nSubstituting the corresponding values:\n$$U_{osm,max,f} = 300 + (3 \\times 61.5) + 300$$\n$$U_{osm,max,f} = 300 + 184.5 + 300 = 784.5 \\, \\text{mOsm/kg H}_2\\text{O}$$\n\nFinally, the problem requires the computation of the decrease in maximal urine osmolality. This is the difference between the baseline osmolality and the osmolality with furosemide. Let this decrease be $\\Delta U_{osm,max}$.\n$$\\Delta U_{osm,max} = U_{osm,max,0} - U_{osm,max,f}$$\n$$\\Delta U_{osm,max} = 1215 - 784.5 = 430.5 \\, \\text{mOsm/kg H}_2\\text{O}$$\n\nThe result must be rounded to four significant figures. The calculated value of $430.5$ already has four significant figures. Thus, no further rounding is necessary.", "answer": "$$\\boxed{430.5}$$", "id": "2617889"}, {"introduction": "The renal medullary gradient is not static; it responds dynamically to changes in renal blood flow and tubular transport. This final, advanced practice invites you to build and analyze a computational model describing the washout of the interstitial gradient following the cessation of active salt reabsorption [@problem_id:2617861]. By simulating the coupled dynamics of sodium chloride and urea, you will explore the different timescales of their removal and gain insight into the complex interplay that governs the stability and responsiveness of the medullary environment.", "problem": "You are to implement and analyze a minimal, scientifically grounded dynamical model of inner medullary interstitial washout following an abrupt halt of transport via the Sodium-Potassium-2 Chloride Cotransporter (NKCC2). The model tracks two solute species, sodium chloride and urea, represented by interstitial concentrations $C_{\\mathrm{Na}}(t)$ and $C_{\\mathrm{U}}(t)$ in $\\mathrm{mM}$, over time $t$ in $\\mathrm{min}$, within a fixed interstitial volume. The program must compute the relative contributions of sodium chloride and urea to the observed decline in total interstitial osmolality after the NKCC2 stop.\n\nUse the following fundamental bases:\n- Conservation of mass: the rate of change of interstitial solute concentration equals inflow minus outflow scaled per unit volume.\n- Fickian/first-order exchange with vasa recta: a linear sink proportional to the concentration gradient to plasma.\n- A phenomenological, osmolality-dependent urea recycling source that increases with the corticomedullary osmolality difference.\n\nModel equations for $t \\ge 0$:\n1. Sodium chloride dynamics:\n$$\n\\frac{d C_{\\mathrm{Na}}}{d t} \\;=\\; J_{\\mathrm{NKCC2}}(t) \\;-\\; k_{\\mathrm{vr,Na}}\\left(C_{\\mathrm{Na}} - C_{\\mathrm{Na,pl}} \\right),\n$$\nwhere $J_{\\mathrm{NKCC2}}(t)$ is the NKCC2 source term in $\\mathrm{mM}\\,\\mathrm{min}^{-1}$, $k_{\\mathrm{vr,Na}}$ is the vasa recta exchange rate constant for sodium chloride in $\\mathrm{min}^{-1}$, and $C_{\\mathrm{Na,pl}}$ is the plasma sodium chloride concentration in $\\mathrm{mM}$. At $t = 0$, impose an abrupt stop in NKCC2 activity:\n$$\nJ_{\\mathrm{NKCC2}}(t) \\;=\\; 0 \\quad \\text{for all } t \\ge 0.\n$$\n\n2. Urea dynamics with osmolality-dependent recycling:\n$$\n\\frac{d C_{\\mathrm{U}}}{d t} \\;=\\; J_{\\mathrm{U}}\\!\\left(C_{\\mathrm{Na}} + C_{\\mathrm{U}}\\right) \\;-\\; k_{\\mathrm{vr,U}}\\left(C_{\\mathrm{U}} - C_{\\mathrm{U,pl}} \\right),\n$$\nwhere $k_{\\mathrm{vr,U}}$ is the vasa recta exchange rate constant for urea in $\\mathrm{min}^{-1}$, $C_{\\mathrm{U,pl}}$ is the plasma urea concentration in $\\mathrm{mM}$, and the urea recycling source $J_{\\mathrm{U}}$ depends on total interstitial osmolality relative to plasma:\n$$\nJ_{\\mathrm{U}}(C_{\\mathrm{tot}}) \\;=\\; \\alpha \\,\\max\\!\\Big(C_{\\mathrm{tot}} - C_{\\mathrm{tot,pl}},\\, 0\\Big),\n\\quad\nC_{\\mathrm{tot}} \\;=\\; C_{\\mathrm{Na}} + C_{\\mathrm{U}},\n\\quad\nC_{\\mathrm{tot,pl}} \\;=\\; C_{\\mathrm{Na,pl}} + C_{\\mathrm{U,pl}}.\n$$\n\nInitial conditions at $t=0^+$ are the pre-stop steady state $C_{\\mathrm{Na}}(0) = C_{\\mathrm{Na},0}$ and $C_{\\mathrm{U}}(0) = C_{\\mathrm{U},0}$ that had been maintained under constant pre-stop sources. Consistency with a pre-stop steady state means:\n- For sodium chloride at $t0$: the pre-stop NKCC2 source must have balanced vasa recta efflux. Therefore, determine the pre-stop NKCC2 source $J_{\\mathrm{NKCC2,on}}$ from the steady-state condition using the given pre-stop concentrations and parameters.\n- For urea at $t0$: the pre-stop urea recycling source must have balanced vasa recta efflux. Choose $\\alpha$ so that the pre-stop steady-state holds for the given pre-stop concentrations and parameters.\n\nYour program must:\n1. For each test case, compute the pre-stop source parameters that enforce $d C_{\\mathrm{Na}}/dt = 0$ and $d C_{\\mathrm{U}}/dt = 0$ at $t=0^-$, given the specified pre-stop steady concentrations and exchange parameters.\n2. At $t=0$, set $J_{\\mathrm{NKCC2}}(t) = 0$ for all $t \\ge 0$ and hold $\\alpha$ fixed at its pre-stop value.\n3. Integrate the coupled ordinary differential equations forward to time $T_{\\mathrm{end}}$ in $\\mathrm{min}$.\n4. Define the total osmolality drop over $[0, T_{\\mathrm{end}}]$ as\n$$\n\\Delta C_{\\mathrm{tot}} \\;=\\; \\left(C_{\\mathrm{Na},0} - C_{\\mathrm{Na}}(T_{\\mathrm{end}})\\right) \\;+\\; \\left(C_{\\mathrm{U},0} - C_{\\mathrm{U}}(T_{\\mathrm{end}})\\right).\n$$\n5. Quantify the relative contributions by the fractions\n$$\nf_{\\mathrm{Na}} \\;=\\; \\frac{C_{\\mathrm{Na},0} - C_{\\mathrm{Na}}(T_{\\mathrm{end}})}{\\Delta C_{\\mathrm{tot}}}, \n\\qquad\nf_{\\mathrm{U}} \\;=\\; \\frac{C_{\\mathrm{U},0} - C_{\\mathrm{U}}(T_{\\mathrm{end}})}{\\Delta C_{\\mathrm{tot}}},\n$$\nwith the convention that if $\\Delta C_{\\mathrm{tot}} = 0$ then $f_{\\mathrm{Na}} = 0$ and $f_{\\mathrm{U}} = 0$. Report $f_{\\mathrm{Na}}$ and $f_{\\mathrm{U}}$ as unitless decimals rounded to four decimals.\n\nPhysical and numerical units:\n- Concentrations $C_{\\mathrm{Na}}$, $C_{\\mathrm{U}}$, $C_{\\mathrm{Na,pl}}$, $C_{\\mathrm{U,pl}}$ are in $\\mathrm{mM}$.\n- Rate constants $k_{\\mathrm{vr,Na}}$, $k_{\\mathrm{vr,U}}$, and $\\alpha$ are in $\\mathrm{min}^{-1}$.\n- Time $t$ and $T_{\\mathrm{end}}$ are in $\\mathrm{min}$.\n- The output fractions $f_{\\mathrm{Na}}$ and $f_{\\mathrm{U}}$ are dimensionless decimals. Express each as a decimal rounded to four decimals.\n\nTest suite:\nImplement your program to run the following four test cases. For each tuple, the parameters are\n$(C_{\\mathrm{Na,pl}},\\, C_{\\mathrm{U,pl}},\\, k_{\\mathrm{vr,Na}},\\, k_{\\mathrm{vr,U}},\\, C_{\\mathrm{Na},0},\\, C_{\\mathrm{U},0},\\, T_{\\mathrm{end}})$:\n- Case $1$ (general): $(140,\\, 5,\\, 0.1,\\, 0.05,\\, 600,\\, 600,\\, 30)$\n- Case $2$ (boundary, no urea washout sink): $(140,\\, 5,\\, 0.1,\\, 0,\\, 600,\\, 600,\\, 30)$\n- Case $3$ (fast washout): $(140,\\, 5,\\, 0.5,\\, 0.5,\\, 600,\\, 600,\\, 10)$\n- Case $4$ (urea-dominant initial state): $(140,\\, 5,\\, 0.1,\\, 0.05,\\, 400,\\, 800,\\, 30)$\n\nFinal output format:\nYour program should produce a single line of output containing a JSON-like array of four items, one per test case, where each item is a two-element array $[f_{\\mathrm{Na}}, f_{\\mathrm{U}}]$ with values rounded to four decimals. For example, the printed line should look like\n$[[0.7000,0.3000],[1.0000,0.0000],[\\dots,\\dots],[\\dots,\\dots]]$\nbut with the actual computed values for the specified test suite.", "solution": "The problem statement is deemed valid. It presents a scientifically grounded, well-posed problem in computational physiology that is free of subjective claims or factual inaccuracies. The model is a standard, albeit simplified, representation of solute dynamics in the renal medulla, based on fundamental principles of mass conservation and biophysical transport. All parameters, initial conditions, and objectives are clearly defined, permitting a unique and meaningful solution.\n\nThe problem requires the numerical solution of a system of coupled ordinary differential equations (ODEs) that model the temporal evolution of sodium chloride ($C_{\\mathrm{Na}}$) and urea ($C_{\\mathrm{U}}$) concentrations in the renal inner medullary interstitium following an abrupt cessation of active salt transport by the NKCC2 cotransporter. Our objective is to determine the relative contribution of each solute to the total washout of interstitial osmolality over a specified time period.\n\nThe governing equations for $t \\ge 0$ are:\n$$\n\\frac{d C_{\\mathrm{Na}}}{d t} = - k_{\\mathrm{vr,Na}}\\left(C_{\\mathrm{Na}} - C_{\\mathrm{Na,pl}} \\right)\n$$\n$$\n\\frac{d C_{\\mathrm{U}}}{d t} = J_{\\mathrm{U}}(C_{\\mathrm{tot}}) - k_{\\mathrm{vr,U}}\\left(C_{\\mathrm{U}} - C_{\\mathrm{U,pl}} \\right)\n$$\nwhere $C_{\\mathrm{tot}} = C_{\\mathrm{Na}} + C_{\\mathrm{U}}$. The urea recycling source term, $J_{\\mathrm{U}}$, is dependent on the total interstitial osmolality gradient against plasma ($C_{\\mathrm{tot,pl}} = C_{\\mathrm{Na,pl}} + C_{\\mathrm{U,pl}}$):\n$$\nJ_{\\mathrm{U}}(C_{\\mathrm{tot}}) = \\alpha \\,\\max\\!\\Big(C_{\\mathrm{tot}} - C_{\\mathrm{tot,pl}},\\, 0\\Big)\n$$\nThe system is integrated from initial conditions $C_{\\mathrm{Na}}(0) = C_{\\mathrm{Na},0}$ and $C_{\\mathrm{U}}(0) = C_{\\mathrm{U},0}$.\n\nA critical first step is to ensure model consistency by determining the parameter $\\alpha$ from the specified pre-stop ($t  0$) steady-state conditions, where $\\frac{dC}{dt}=0$. For urea, the steady state implies that the recycling source must balance the vasa recta efflux:\n$$\n\\alpha \\max(C_{\\mathrm{tot},0} - C_{\\mathrm{tot,pl}}, 0) = k_{\\mathrm{vr,U}}(C_{\\mathrm{U},0} - C_{\\mathrm{U,pl}})\n$$\nwhere $C_{\\mathrm{tot},0} = C_{\\mathrm{Na},0} + C_{\\mathrm{U},0}$. As the medullary concentrations provided ($C_{\\mathrm{tot},0}$) are significantly higher than plasma concentrations ($C_{\\mathrm{tot,pl}}$), the $\\max$ function argument is positive. We can therefore solve for $\\alpha$:\n$$\n\\alpha = \\frac{k_{\\mathrm{vr,U}}(C_{\\mathrm{U},0} - C_{\\mathrm{U,pl}})}{C_{\\mathrm{tot},0} - C_{\\mathrm{tot,pl}}}\n$$\nThis value of $\\alpha$ is calculated for each test case and held constant for the subsequent dynamic simulation ($t \\ge 0$).\n\nThe ODE for $C_{\\mathrm{Na}}$ is linear and can be solved analytically. However, the ODE for $C_{\\mathrm{U}}$ is coupled to $C_{\\mathrm{Na}}$ and contains a non-linear dependence on $C_{\\mathrm{U}}$ within the $\\max$ function, making an analytical solution for the complete system intractable. Therefore, a numerical approach is required. We will employ a robust numerical ODE solver, specifically `scipy.integrate.solve_ivp`, to integrate the system of two equations from $t=0$ to the specified end time, $T_{\\mathrm{end}}$.\n\nThe computational procedure for each test case is as follows:\n1.  Calculate the parameter $\\alpha$ using the pre-stop steady-state formula.\n2.  Define a function representing the system of ODEs for the post-stop phase ($J_{\\mathrm{NKCC2}} = 0$).\n3.  Use `scipy.integrate.solve_ivp` to solve the system over the time interval $[0, T_{\\mathrm{end}}]$ with the given initial concentrations $(C_{\\mathrm{Na},0}, C_{\\mathrm{U},0})$.\n4.  From the solution, extract the final concentrations $C_{\\mathrm{Na}}(T_{\\mathrm{end}})$ and $C_{\\mathrm{U}}(T_{\\mathrm{end}})$.\n5.  Calculate the individual solute concentration drops, $\\Delta C_{\\mathrm{Na}} = C_{\\mathrm{Na},0} - C_{\\mathrm{Na}}(T_{\\mathrm{end}})$ and $\\Delta C_{\\mathrm{U}} = C_{\\mathrm{U},0} - C_{\\mathrm{U}}(T_{\\mathrm{end}})$.\n6.  Compute the total drop $\\Delta C_{\\mathrm{tot}} = \\Delta C_{\\mathrm{Na}} + \\Delta C_{\\mathrm{U}}$.\n7.  Determine the relative fractional contributions, $f_{\\mathrm{Na}} = \\Delta C_{\\mathrm{Na}} / \\Delta C_{\\mathrm{tot}}$ and $f_{\\mathrm{U}} = \\Delta C_{\\mathrm{U}} / \\Delta C_{\\mathrm{tot}}$. A check is included for the case $\\Delta C_{\\mathrm{tot}} = 0$, where fractions are defined as $0$.\n8.  The final results, $f_{\\mathrm{Na}}$ and $f_{\\mathrm{U}}$, are rounded to four decimal places as required. This entire process is iterated for all provided test cases.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef solve():\n    \"\"\"\n    Solves a dynamical model of renal medullary washout for multiple test cases.\n    \"\"\"\n    # Test cases: (C_Na_pl, C_U_pl, k_vr_Na, k_vr_U, C_Na_0, C_U_0, T_end)\n    test_cases = [\n        # Case 1 (general)\n        (140.0, 5.0, 0.1, 0.05, 600.0, 600.0, 30.0),\n        # Case 2 (boundary, no urea washout sink)\n        (140.0, 5.0, 0.1, 0.0, 600.0, 600.0, 30.0),\n        # Case 3 (fast washout)\n        (140.0, 5.0, 0.5, 0.5, 600.0, 600.0, 10.0),\n        # Case 4 (urea-dominant initial state)\n        (140.0, 5.0, 0.1, 0.05, 400.0, 800.0, 30.0)\n    ]\n\n    results = []\n\n    for case in test_cases:\n        C_Na_pl, C_U_pl, k_vr_Na, k_vr_U, C_Na_0, C_U_0, T_end = case\n        \n        # Step 1: Compute the pre-stop parameter alpha\n        C_tot_0 = C_Na_0 + C_U_0\n        C_tot_pl = C_Na_pl + C_U_pl\n        \n        # This term represents the interstitial-plasma osmolality gradient at steady state\n        denominator_alpha = C_tot_0 - C_tot_pl\n        \n        # The numerator represents the total urea sink at steady state\n        numerator_alpha = k_vr_U * (C_U_0 - C_U_pl)\n        \n        # In a valid pre-stop state with a medullary gradient, denominator_alpha  0\n        if denominator_alpha > 1e-9:\n            alpha = numerator_alpha / denominator_alpha\n        else:\n            # If no gradient exists, no urea recycling source is needed to maintain steady state\n            alpha = 0.0\n\n        # Step 2: Define the system of ODEs for t = 0\n        def model(t, y):\n            C_Na, C_U = y\n            \n            # Equation for Sodium Chloride\n            d_C_Na_dt = -k_vr_Na * (C_Na - C_Na_pl)\n            \n            # Equation for Urea\n            total_osmolality = C_Na + C_U\n            urea_recycling_source = alpha * max(total_osmolality - C_tot_pl, 0.0)\n            urea_vasa_recta_sink = k_vr_U * (C_U - C_U_pl)\n            d_C_U_dt = urea_recycling_source - urea_vasa_recta_sink\n            \n            return [d_C_Na_dt, d_C_U_dt]\n\n        # Step 3: Integrate the ODE system\n        y0 = [C_Na_0, C_U_0]\n        t_span = [0, T_end]\n        \n        # Use solve_ivp for robust integration. We only need the solution at T_end.\n        sol = solve_ivp(model, t_span, y0, t_eval=[T_end], method='RK45', rtol=1e-6, atol=1e-6)\n        \n        C_Na_T_end = sol.y[0, -1]\n        C_U_T_end = sol.y[1, -1]\n\n        # Step 4: Calculate final fractions\n        delta_C_Na = C_Na_0 - C_Na_T_end\n        delta_C_U = C_U_0 - C_U_T_end\n        delta_C_tot = delta_C_Na + delta_C_U\n\n        if abs(delta_C_tot)  1e-9: # Handle potential division by zero\n            f_Na = 0.0\n            f_U = 0.0\n        else:\n            f_Na = delta_C_Na / delta_C_tot\n            f_U = delta_C_U / delta_C_tot\n            \n        results.append([f_Na, f_U])\n\n    # Final Step: Format and print the output as specified\n    output_str_parts = []\n    for res in results:\n        # Format each value to four decimal places, ensuring trailing zeros\n        output_str_parts.append(f\"[{res[0]:.4f},{res[1]:.4f}]\")\n    \n    final_output = \"[\" + \",\".join(output_str_parts) + \"]\"\n    print(final_output)\n\nsolve()\n```", "id": "2617861"}]}