{"hands_on_practices": [{"introduction": "The abstract definitions of secondary structure elements become tangible when we analyze experimental data. This first practice places you in the role of a structural biologist tasked with classifying a local chain reversal. Using experimentally measured backbone dihedral angles, you will apply a first-principles statistical model to determine the most probable Î²-turn subtype, connecting the idealized Ramachandran map to the realities of protein structure determination [@problem_id:2614447].", "problem": "A tetrapeptide segment spanning residues $i$ through $i+3$ is suspected to contain a $\\beta$-turn, defined as a local reversal in the polypeptide chain in which the backbone carbonyl oxygen of residue $i$ hydrogen bonds to the backbone amide hydrogen of residue $i+3$. You are given experimental backbone dihedral angles in degrees for the central residues $i+1$ and $i+2$:\n- $i+1$: $\\phi = -65^{\\circ}$, $\\psi = -35^{\\circ}$\n- $i+2$: $\\phi = -88^{\\circ}$, $\\psi = 5^{\\circ}$\n\nAssume the following well-tested facts and modeling assumptions as your fundamental base:\n- $\\beta$-turn subtypes have characteristic centers on the Ramachandran map for residues $i+1$ and $i+2$. Consider the four canonical subtypes $\\mathrm{I}$, $\\mathrm{II}$, $\\mathrm{I'}$, and $\\mathrm{II'}$ with mean angle vectors (in degrees) for $(\\phi_{i+1}, \\psi_{i+1}, \\phi_{i+2}, \\psi_{i+2})$:\n  - $\\mu_{\\mathrm{I}} = \\left(-60^{\\circ}, -30^{\\circ}, -90^{\\circ}, 0^{\\circ}\\right)$\n  - $\\mu_{\\mathrm{II}} = \\left(-60^{\\circ}, 120^{\\circ}, 80^{\\circ}, 0^{\\circ}\\right)$\n  - $\\mu_{\\mathrm{I'}} = \\left(60^{\\circ}, 30^{\\circ}, 90^{\\circ}, 0^{\\circ}\\right)$\n  - $\\mu_{\\mathrm{II'}} = \\left(60^{\\circ}, -120^{\\circ}, -80^{\\circ}, 0^{\\circ}\\right)$\n- Backbone dihedral fluctuations about these means are modeled as independent, identically distributed normal variables with standard deviation $\\sigma = 20^{\\circ}$ for each of the four components.\n- Priors over subtypes are equal.\n- Dihedral angles are circular variables; deviations must be computed as the minimal signed angular difference on the circle (in degrees), that is, between $-180^{\\circ}$ and $180^{\\circ}$ inclusive.\n\nUsing a first-principles Bayesian decision rule under these assumptions and an appropriate treatment of angular periodicity, determine the most likely $\\beta$-turn subtype. To make your final answer a single number, use the index function $n(T)$ defined by\n- $n(\\mathrm{I}) = 1$, $n(\\mathrm{II}) = 2$, $n(\\mathrm{I'}) = 3$, $n(\\mathrm{II'}) = 4$.\n\nProvide the integer $n(T)$ corresponding to the subtype that maximizes the posterior probability. Angles are in degrees. No rounding is required. Report only the index as the final answer without units.", "solution": "The problem requires the determination of the most probable $\\beta$-turn subtype for a tetrapeptide segment given a set of experimentally measured backbone dihedral angles. This is a classical classification problem that can be solved using a Bayesian decision rule.\n\nLet $T$ be the random variable representing the $\\beta$-turn subtype, which can take one of the four values in the set $\\{\\mathrm{I}, \\mathrm{II}, \\mathrm{I'}, \\mathrm{II'}\\}$. Let $X$ be the vector of observed experimental dihedral angles, $X = (\\phi_{i+1}, \\psi_{i+1}, \\phi_{i+2}, \\psi_{i+2})$. The given data is $X_{obs} = (-65^{\\circ}, -35^{\\circ}, -88^{\\circ}, 5^{\\circ})$.\n\nOur goal is to find the subtype $T$ that maximizes the posterior probability $P(T|X_{obs})$. According to Bayes' theorem, the posterior probability is given by:\n$$\nP(T|X_{obs}) = \\frac{P(X_{obs}|T) P(T)}{P(X_{obs})}\n$$\nwhere $P(X_{obs}|T)$ is the likelihood of observing the data given the subtype $T$, $P(T)$ is the prior probability of subtype $T$, and $P(X_{obs}) = \\sum_{T'} P(X_{obs}|T')P(T')$ is the marginal probability of the data, which serves as a normalization constant.\n\nTo find the most probable subtype (the Maximum a Posteriori or MAP estimate), we need to find the subtype $T$ that maximizes the posterior probability:\n$$\nT_{MAP} = \\arg\\max_{T} P(T|X_{obs}) = \\arg\\max_{T} \\frac{P(X_{obs}|T) P(T)}{P(X_{obs})}\n$$\nSince $P(X_{obs})$ is constant for all subtypes $T$, it does not affect the maximization. Thus, we can simplify the problem to:\n$$\nT_{MAP} = \\arg\\max_{T} P(X_{obs}|T) P(T)\n$$\nThe problem states that the prior probabilities for all four subtypes are equal, i.e., $P(T=\\mathrm{I}) = P(T=\\mathrm{II}) = P(T=\\mathrm{I'}) = P(T=\\mathrm{II'}) = \\frac{1}{4}$. Since the prior $P(T)$ is a constant, it can also be removed from the maximization. This reduces the MAP estimation to a Maximum Likelihood Estimation (MLE):\n$$\nT_{MLE} = \\arg\\max_{T} P(X_{obs}|T)\n$$\nThe problem models the fluctuations of the four dihedral angles as independent and identically distributed normal variables with a common standard deviation $\\sigma = 20^{\\circ}$. For a given subtype $T$, the mean angle vector is denoted by $\\mu_{T} = (\\mu_{T,1}, \\mu_{T,2}, \\mu_{T,3}, \\mu_{T,4})$. The likelihood function is the product of the probability densities of the individual angles:\n$$\nP(X_{obs}|T) = \\prod_{j=1}^{4} \\frac{1}{\\sqrt{2\\pi}\\sigma} \\exp\\left( -\\frac{[d(X_{obs,j}, \\mu_{T,j})]^2}{2\\sigma^2} \\right)\n$$\nHere, $d(a, b)$ is the minimal signed angular difference between angles $a$ and $b$, defined on the interval $[-180^{\\circ}, 180^{\\circ}]$. Maximizing the likelihood $P(X_{obs}|T)$ is equivalent to maximizing its natural logarithm, the log-likelihood $\\ln(P(X_{obs}|T))$, which simplifies computation by converting products into sums:\n$$\n\\ln(P(X_{obs}|T)) = \\sum_{j=1}^{4} \\left( -\\ln(\\sqrt{2\\pi}\\sigma) - \\frac{[d(X_{obs,j}, \\mu_{T,j})]^2}{2\\sigma^2} \\right) = -4\\ln(\\sqrt{2\\pi}\\sigma) - \\frac{1}{2\\sigma^2} \\sum_{j=1}^{4} [d(X_{obs,j}, \\mu_{T,j})]^2\n$$\nTo maximize this expression, we must minimize the term that depends on $T$, which is the sum of the squared angular differences. Let us define this sum as $S^2_T$:\n$$\nS^2_T = \\sum_{j=1}^{4} [d(X_{obs,j}, \\mu_{T,j})]^2\n$$\nThe subtype $T$ with the minimum value of $S^2_T$ will be the most likely one.\nThe minimal angular difference $d(a, b)$ is computed as $(a-b)$ adjusted to be in the range $[-180^\\circ, 180^\\circ]$. For example, if $a-b = 200^\\circ$, the difference is $200^\\circ - 360^\\circ = -160^\\circ$.\n\nWe now compute $S^2_T$ for each of the four canonical subtypes.\nThe observed data vector is $X_{obs} = (-65^{\\circ}, -35^{\\circ}, -88^{\\circ}, 5^{\\circ})$.\n\nFor subtype \\textbf{I}, $\\mu_{\\mathrm{I}} = (-60^{\\circ}, -30^{\\circ}, -90^{\\circ}, 0^{\\circ})$:\nThe differences are:\n- $d(\\phi_{i+1}, \\mu_{\\mathrm{I},\\phi_{i+1}}) = -65^{\\circ} - (-60^{\\circ}) = -5^{\\circ}$\n- $d(\\psi_{i+1}, \\mu_{\\mathrm{I},\\psi_{i+1}}) = -35^{\\circ} - (-30^{\\circ}) = -5^{\\circ}$\n- $d(\\phi_{i+2}, \\mu_{\\mathrm{I},\\phi_{i+2}}) = -88^{\\circ} - (-90^{\\circ}) = 2^{\\circ}$\n- $d(\\psi_{i+2}, \\mu_{\\mathrm{I},\\psi_{i+2}}) = 5^{\\circ} - 0^{\\circ} = 5^{\\circ}$\nThe sum of squares is:\n$S^2_{\\mathrm{I}} = (-5)^2 + (-5)^2 + (2)^2 + (5)^2 = 25 + 25 + 4 + 25 = 79$\n\nFor subtype \\textbf{II}, $\\mu_{\\mathrm{II}} = (-60^{\\circ}, 120^{\\circ}, 80^{\\circ}, 0^{\\circ})$:\nThe differences are:\n- $d(\\phi_{i+1}, \\mu_{\\mathrm{II},\\phi_{i+1}}) = -65^{\\circ} - (-60^{\\circ}) = -5^{\\circ}$\n- $d(\\psi_{i+1}, \\mu_{\\mathrm{II},\\psi_{i+1}}) = -35^{\\circ} - 120^{\\circ} = -155^{\\circ}$\n- $d(\\phi_{i+2}, \\mu_{\\mathrm{II},\\phi_{i+2}}) = -88^{\\circ} - 80^{\\circ} = -168^{\\circ}$\n- $d(\\psi_{i+2}, \\mu_{\\mathrm{II},\\psi_{i+2}}) = 5^{\\circ} - 0^{\\circ} = 5^{\\circ}$\nThe sum of squares is:\n$S^2_{\\mathrm{II}} = (-5)^2 + (-155)^2 + (-168)^2 + (5)^2 = 25 + 24025 + 28224 + 25 = 52299$\n\nFor subtype \\textbf{I'}, $\\mu_{\\mathrm{I'}} = (60^{\\circ}, 30^{\\circ}, 90^{\\circ}, 0^{\\circ})$:\nThe differences are:\n- $d(\\phi_{i+1}, \\mu_{\\mathrm{I'},\\phi_{i+1}}) = -65^{\\circ} - 60^{\\circ} = -125^{\\circ}$\n- $d(\\psi_{i+1}, \\mu_{\\mathrm{I'},\\psi_{i+1}}) = -35^{\\circ} - 30^{\\circ} = -65^{\\circ}$\n- $d(\\phi_{i+2}, \\mu_{\\mathrm{I'},\\phi_{i+2}}) = -88^{\\circ} - 90^{\\circ} = -178^{\\circ}$\n- $d(\\psi_{i+2}, \\mu_{\\mathrm{I'},\\psi_{i+2}}) = 5^{\\circ} - 0^{\\circ} = 5^{\\circ}$\nThe sum of squares is:\n$S^2_{\\mathrm{I'}} = (-125)^2 + (-65)^2 + (-178)^2 + (5)^2 = 15625 + 4225 + 31684 + 25 = 51559$\n\nFor subtype \\textbf{II'}, $\\mu_{\\mathrm{II'}} = (60^{\\circ}, -120^{\\circ}, -80^{\\circ}, 0^{\\circ})$:\nThe differences are:\n- $d(\\phi_{i+1}, \\mu_{\\mathrm{II'},\\phi_{i+1}}) = -65^{\\circ} - 60^{\\circ} = -125^{\\circ}$\n- $d(\\psi_{i+1}, \\mu_{\\mathrm{II'},\\psi_{i+1}}) = -35^{\\circ} - (-120^{\\circ}) = 85^{\\circ}$\n- $d(\\phi_{i+2}, \\mu_{\\mathrm{II'},\\phi_{i+2}}) = -88^{\\circ} - (-80^{\\circ}) = -8^{\\circ}$\n- $d(\\psi_{i+2}, \\mu_{\\mathrm{II'},\\psi_{i+2}}) = 5^{\\circ} - 0^{\\circ} = 5^{\\circ}$\nThe sum of squares is:\n$S^2_{\\mathrm{II'}} = (-125)^2 + (85)^2 + (-8)^2 + (5)^2 = 15625 + 7225 + 64 + 25 = 22939$\n\nComparing the sums of squared differences:\n$S^2_{\\mathrm{I}} = 79$\n$S^2_{\\mathrm{II}} = 52299$\n$S^2_{\\mathrm{I'}} = 51559$\n$S^2_{\\mathrm{II'}} = 22939$\nThe minimum value is $S^2_{\\mathrm{I}} = 79$. Therefore, the most likely subtype is $\\mathrm{I}$.\n\nThe problem requires the answer to be the index $n(T)$ for the determined subtype. The index function is given as $n(\\mathrm{I})=1$, $n(\\mathrm{II})=2$, $n(\\mathrm{I'})=3$, and $n(\\mathrm{II'})=4$.\nSince the most likely subtype is $\\mathrm{I}$, the corresponding index is $n(\\mathrm{I}) = 1$.", "answer": "$$\\boxed{1}$$", "id": "2614447"}, {"introduction": "Protein design is an iterative process of creation and refinement, where correcting structural flaws is as important as the initial design. This exercise presents a scenario where a designed protein contains an unintended Î²-bulge, a common type of irregularity. Your challenge is to diagnose the molecular causes of this defectârooted in residue propensities and aberrant interactionsâand devise a mutational strategy to restore a regular, stable Î²-sheet structure while maintaining the hydrophobic core [@problem_id:2614436].", "problem": "A designed antiparallel $\\beta$-sheet protein contains an unintended local irregularity diagnosed as a classic $\\beta$-bulge. The sheet comprises $4$ strands ($S1$â$S4$) forming a small hydrophobic core. In strand $S2$, the segment around positions $i-1$ to $i+2$ is ValâGlyâAsnâAla, and Nuclear Magnetic Resonance (NMR) indicates that residues at positions $i$ and $i+1$ both attempt to hydrogen bond to the same partner on strand $S3$ at position $j$, consistent with a registry disruption typical of a $\\beta$-bulge. The side chain at position $i$ points into the hydrophobic core, as does the side chain at position $j$. The residue at $j$ is Ser. Additional data show that Asn at $i+1$ makes a local side chainâbackbone hydrogen bond to the $i$ or $i+1$ main chain that is compatible with the bulged geometry. No backbone insertions or deletions are permitted; only point mutations are allowed. The fold, topology, and hydrogen bond polarity must be preserved. The design objective is to eliminate the $\\beta$-bulge and restore a regular one-to-one hydrogen bonding pattern between residues $i$ and $j$ without compromising $\\beta$-sheet stability or the hydrophobic core.\n\nFrom first principles, consider that: (i) canonical $\\beta$-strand dihedrals cluster near $\\phi \\approx -135^\\circ$ and $\\psi \\approx 135^\\circ$; (ii) the stability of $\\beta$-sheets derives from a regular backbone hydrogen bond network plus side-chain packing and the hydrophobic effect; (iii) glycine and proline have low $\\beta$-strand propensities, with glycine often enabling unusual $\\phi,\\psi$ that tolerate bulges, and proline breaking backbone hydrogen bonding; (iv) $\\beta$-branched residues (e.g., valine, isoleucine, threonine) favor extended $\\beta$ conformations; and (v) burying polar side chains without compensatory hydrogen bonding is unfavorable.\n\nWhich mutational strategy best achieves the stated objective?\n\nA. Replace Gly at $i$ with Val and Asn at $i+1$ with Ala to eliminate the side chainâbackbone âtrap,â and replace Ser at $j$ with Leu to maintain hydrophobic complementarity in the core, leaving the strand registry unchanged.\n\nB. Replace Gly at $i$ with Pro to rigidify the backbone and suppress the local flexibility that permits bulging; leave other positions unchanged to minimize perturbations.\n\nC. Insert an additional residue in $S3$ adjacent to $j$ to match the extra residue effectively present in the bulged $S2$ segment, thereby restoring registry symmetrically across the sheet.\n\nD. Replace Gly at $i$ with Asn to introduce a favorable side chainâbackbone hydrogen bond that locks the backbone, and replace Ser at $j$ with Asp to form a cross-strand salt bridge in the sheet interior that compensates for any destabilization.\n\nE. Replace Asn at $i+1$ with Asp to strengthen the local Asx-mediated hydrogen bond, and replace Ser at $j$ with Gly to reduce steric clash, allowing the sheet to âflattenâ without changing hydrophobic packing.\n\nChoose the single best option.", "solution": "The problem statement will first be subjected to a rigorous validation process.\n\nStep 1: Extraction of Givens\n- **Protein Structure**: Designed antiparallel $\\beta$-sheet with $4$ strands ($S1$â$S4$) and a small hydrophobic core.\n- **Structural Flaw**: A classic $\\beta$-bulge is present.\n- **Flaw Location**: Strand $S2$, segment around positions $i-1$ to $i+2$ has the sequence ValâGlyâAsnâAla. Thus, residue $i$ is Gly, and residue $i+1$ is Asn.\n- **NMR Evidence**: Residues at $S2$ positions $i$ and $i+1$ both hydrogen bond to the same residue at $S3$ position $j$. This defines the registry disruption of the $\\beta$-bulge.\n- **Side Chain Orientations**: The side chains at position $i$ (on $S2$) and position $j$ (on $S3$) both point into the hydrophobic core.\n- **Residue Identity**: The residue at position $j$ is Ser.\n- **Additional Structural Data**: The Asn at position $i+1$ forms a local side chainâbackbone hydrogen bond, stabilizing the bulged geometry.\n- **Design Objective**: Eliminate the $\\beta$-bulge and restore a regular one-to-one hydrogen bonding pattern between residue $i$ and residue $j$.\n- **Constraints**:\n    1.  Only point mutations are allowed; no backbone insertions or deletions.\n    2.  The overall fold, topology, and hydrogen bond polarity of the antiparallel sheet must be preserved.\n    3.  The stability of the $\\beta$-sheet and the hydrophobic core must not be compromised.\n- **Provided First Principles**:\n    1.  Canonical $\\beta$-strand dihedrals are $\\phi \\approx -135^\\circ$ and $\\psi \\approx 135^\\circ$.\n    2.  $\\beta$-sheet stability originates from the backbone H-bond network, side-chain packing, and the hydrophobic effect.\n    3.  Glycine (Gly) and Proline (Pro) have low $\\beta$-strand propensities. Gly is conformationally flexible. Pro breaks backbone H-bonding.\n    4.  $\\beta$-branched residues (Val, Ile, Thr) favor extended $\\beta$-strand conformations.\n    5.  Burying polar side chains (like Ser, Asn) in a hydrophobic environment is energetically unfavorable unless their polar groups form stabilizing hydrogen bonds.\n\nStep 2: Validation of the Problem Statement\nThe problem is well-defined and scientifically grounded in the principles of protein structure and engineering.\n- **Scientific Soundness**: The description of a classic $\\beta$-bulge, with two residues on one strand ($i, i+1$) partnering with a single residue on the adjacent strand ($j$), is accurate. The role of glycine's conformational flexibility in permitting such non-canonical structures is a well-established principle. The stabilizing effect of a local side chain-backbone hydrogen bond from an Asn residue (an Asx-turn motif) is also a known structural feature often associated with turns or irregularities.\n- **Consistency**: The givens are internally consistent. The initial design is flawed, which is the premise of the corrective task. A glycine at position $i$ and a buried polar serine at position $j$ represent a structurally and energetically suboptimal state, justifying the need for redesign. The objective and constraints are clear and non-contradictory.\n- **Posedness**: The problem is well-posed. It presents a specific structural defect and asks for the best corrective strategy from a set of options, based on a given set of rules and first principles.\n\nStep 3: Verdict and Action\nThe problem statement is valid. It is a standard and realistic problem in protein design. The solution process may proceed.\n\nDerivation of Solution from First Principles\nThe objective is to remove a $\\beta$-bulge and restore a regular antiparallel $\\beta$-sheet structure. We must analyze the sources of the defect and devise mutations that correct them while respecting all constraints.\n\n1.  **Analysis of the Defect**:\n    - **Backbone Conformation**: The presence of glycine at position $i$ is the principal cause of the bulge. Due to its lack of a side chain, glycine can adopt a wide range of $(\\phi, \\psi)$ dihedral angles, including those incompatible with a regular $\\beta$-strand (where $\\phi \\approx -135^\\circ, \\psi \\approx 135^\\circ$). This flexibility allows the backbone to deviate and form a bulge.\n    - **Bulge Stabilization**: The Asn at $i+1$ further stabilizes this non-canonical, bulged conformation through a local side chain-to-backbone hydrogen bond. This acts as a \"trap,\" locking the backbone in the undesirable state.\n    - **Hydrophobic Core Instability**: The pairing of residues in the hydrophobic core at positions $i$ and $j$ is suboptimal. Position $i$ is Gly, whose side chain is only a hydrogen atom; this creates a cavity and poor van der Waals packing. Position $j$ is Ser, a polar residue. Burying an uncompensated polar hydroxyl group in a hydrophobic environment is highly destabilizing (principle v).\n\n2.  **Strategy for Correction**: A successful strategy must address all three issues simultaneously.\n    - **Force Regular Backbone Geometry**: To eliminate the bulge, the glycine at position $i$ must be replaced with a residue that has a high propensity for the $\\beta$-strand conformation. A $\\beta$-branched amino acid, such as valine (Val), is an ideal candidate (principle iv). Its bulky side chain sterically disfavors the non-canonical dihedral angles required for a bulge and strongly favors the extended conformation of a $\\beta$-strand.\n    - **Remove Bulge Stabilization**: To prevent the bulge from re-forming, its stabilizing interactions must be removed. The Asn at $i+1$ should be mutated to a residue that cannot form the side chain-backbone hydrogen bond. Alanine (Ala) is an excellent choice as it is small, non-polar, has a moderate $\\beta$-sheet propensity, and lacks a polar side chain group capable of forming such a bond.\n    - **Optimize Core Packing**: To stabilize the resulting regular sheet, the hydrophobic core must be properly packed. With Gly($i$)$\\to$Val, the core now has a larger hydrophobic side chain. The interacting partner at position $j$, currently the polar Ser, must be mutated to a complementary hydrophobic residue. Leucine (Leu) is an excellent choice. It is hydrophobic and its side chain packs very well against valine, creating a stable \"knobs-in-holes\" interaction and satisfying the hydrophobic effect (principle ii).\n\nThis multi-part strategyâGly($i$)$\\to$Val, Asn($i+1$)$\\to$Ala, and Ser($j$)$\\to$Leuâsystematically reverses the causes of the defect and creates a stable, regular $\\beta$-sheet, fulfilling all aspects of the design objective.\n\nEvaluation of Provided Options\n\n**A. Replace Gly at $i$ with Val and Asn at $i+1$ with Ala to eliminate the side chainâbackbone âtrap,â and replace Ser at $j$ with Leu to maintain hydrophobic complementarity in the core, leaving the strand registry unchanged.**\nThis option perfectly matches the strategy derived from first principles.\n- Gly($i$)$\\to$Val enforces a regular $\\beta$-strand conformation.\n- Asn($i+1$)$\\to$Ala removes the interaction that stabilizes the bulge.\n- Ser($j$)$\\to$Leu resolves the buried polar group problem and creates a stable hydrophobic core packing with the new Val at $i$.\nThe statement about the registry means that the intended $i \\leftrightarrow j$ partnership is restored, as opposed to being shifted. This set of mutations is the most logical and complete solution.\n**Verdict: Correct.**\n\n**B. Replace Gly at $i$ with Pro to rigidify the backbone and suppress the local flexibility that permits bulging; leave other positions unchanged to minimize perturbations.**\nThis is a fundamentally flawed proposal. Proline's cyclic structure restricts its $\\phi$ dihedral angle to approximately $-60^\\circ$, which is incompatible with the required $\\beta$-strand conformation ($\\phi \\approx -135^\\circ$). Furthermore, proline lacks a main-chain amide proton and cannot act as a hydrogen bond donor, which would break the hydrogen bonding pattern essential for $\\beta$-sheet stability (principle iii). This would destroy the local sheet structure, not repair it.\n**Verdict: Incorrect.**\n\n**C. Insert an additional residue in $S3$ adjacent to $j$ to match the extra residue effectively present in the bulged $S2$ segment, thereby restoring registry symmetrically across the sheet.**\nThis option proposes a backbone insertion. The problem statement explicitly forbids this: \"No backbone insertions or deletions are permitted; only point mutations are allowed.\"\n**Verdict: Incorrect.**\n\n**D. Replace Gly at $i$ with Asn to introduce a favorable side chainâbackbone hydrogen bond that locks the backbone, and replace Ser at $j$ with Asp to form a cross-strand salt bridge in the sheet interior that compensates for any destabilization.**\nThis strategy is counterproductive. Mutating Gly($i$)$\\to$Asn would introduce the very type of interaction (Asx-turn) that is currently stabilizing the bulge at $i+1$; it would likely promote a non-canonical structure at position $i$ rather than a regular strand. Replacing Ser($j$)$\\to$Asp would introduce a negatively charged carboxylate group into the hydrophobic core. This is far more destabilizing than a neutral polar group. The proposed Asn($i$)-Asp($j$) interaction is not a salt bridge (which requires opposite charges) and would involve burying two polar/charged groups, severely destabilizing the core.\n**Verdict: Incorrect.**\n\n**E. Replace Asn at $i+1$ with Asp to strengthen the local Asx-mediated hydrogen bond, and replace Ser at $j$ with Gly to reduce steric clash, allowing the sheet to âflattenâ without changing hydrophobic packing.**\nThis strategy is illogical. The goal is to eliminate the bulge, but the first mutation, Asn($i+1$)$\\to$Asp, would *strengthen* the local hydrogen bonding interaction that stabilizes the bulge, making the problem worse. The second mutation, Ser($j$)$\\to$Gly, would create a Gly($i$)-Gly($j$) pair in the core. This would result in extremely poor packing and a large cavity, which severely destabilizes the protein. The assertion that this allows the sheet to \"flatten\" is unsubstantiated and contrary to the effect of the first mutation.\n**Verdict: Incorrect.**\n\nConclusion\nOnly option A presents a coherent and biochemically sound strategy that addresses all identified structural defects in accordance with the provided first principles and constraints.", "answer": "$$\\boxed{A}$$", "id": "2614436"}, {"introduction": "Moving from analysis to generation, this final practice delves into the computational heart of structural biology: loop modeling. You will implement a fragment-assembly algorithm to construct loop conformations that bridge two fixed anchor points in space. This exercise provides a deep, hands-on understanding of how the fundamental principles of fixed peptide geometry and variable dihedral angles ($\\phi$, $\\psi$) are used in computer simulations to sample stereochemically plausible structures and solve the geometric challenge of loop closure [@problem_id:2614478].", "problem": "Write a complete, runnable program that implements an internal-coordinate fragment-assembly strategy to construct peptide backbone loop conformations that connect two fixed anchor residues while respecting idealized peptide geometry and stereochemical plausibility. The program must use the following physically realistic base assumptions and definitions.\n\n- Use the ideal peptide backbone geometry with fixed bond lengths and bond angles:\n  - Bond lengths (in Angstroms): $r_{\\text{N-CA}} = 1.458$, $r_{\\text{CA-C}} = 1.525$, $r_{\\text{C-N}} = 1.329$.\n  - Bond angles (in degrees): $\\angle \\text{C-N-CA} = 121.7$, $\\angle \\text{N-CA-C} = 110.4$, $\\angle \\text{CA-C-N} = 116.2$.\n  - Peptide bond dihedral $\\omega = 180$ degrees (trans) everywhere.\n\n- Use the standard Z-matrix style internal-to-Cartesian construction. Given three already placed atoms with positions $\\mathbf{A}$, $\\mathbf{B}$, $\\mathbf{C}$ and target internal coordinates $(r,\\theta,\\tau)$, place the new atom $\\mathbf{X}$ by:\n  - Construct unit vectors\n    - $\\mathbf{e}_1 = \\dfrac{\\mathbf{C}-\\mathbf{B}}{\\|\\mathbf{C}-\\mathbf{B}\\|}$,\n    - $\\mathbf{e}_3 = \\dfrac{(\\mathbf{B}-\\mathbf{A}) \\times (\\mathbf{C}-\\mathbf{B})}{\\|(\\mathbf{B}-\\mathbf{A}) \\times (\\mathbf{C}-\\mathbf{B})\\|}$,\n    - $\\mathbf{e}_2 = \\mathbf{e}_3 \\times \\mathbf{e}_1$.\n  - Using right-handed convention, place\n    $$\\mathbf{X} \\;=\\; \\mathbf{C} \\;+\\; \\big(-r\\cos\\theta\\big)\\,\\mathbf{e}_1 \\;+\\; \\big(r\\sin\\theta\\cos\\tau\\big)\\,\\mathbf{e}_2 \\;+\\; \\big(r\\sin\\theta\\sin\\tau\\big)\\,\\mathbf{e}_3,$$\n    where $\\theta$ and $\\tau$ are in radians in the computation.\n\n- Backbone construction sequence with dihedral definitions:\n  - For residue index $i \\in \\{1,\\dots,L\\}$, the variable dihedrals are $\\phi_i$ and $\\psi_i$. The fixed peptide dihedrals are $\\omega_{i-1} = 180$ degrees.\n  - Atom placement order and internal coordinates:\n    1. $N_i = \\operatorname{place}(N_{i-1}, C_{\\alpha\\,i-1}, C_{i-1}; r_{\\text{C-N}}, \\angle\\text{CA-C-N}, \\psi_{i-1})$,\n    2. $C_{\\alpha\\,i} = \\operatorname{place}(C_{\\alpha\\,i-1}, C_{i-1}, N_i; r_{\\text{N-CA}}, \\angle\\text{C-N-CA}, \\omega_{i-1})$,\n    3. $C_i = \\operatorname{place}(C_{i-1}, N_i, C_{\\alpha\\,i}; r_{\\text{CA-C}}, \\angle\\text{N-CA-C}, \\phi_i)$.\n  - The loop terminus (residue $L+1$) is defined analogously by\n    1. $N_{L+1} = \\operatorname{place}(N_L, C_{\\alpha\\,L}, C_L; r_{\\text{C-N}}, \\angle\\text{CA-C-N}, \\psi_L)$,\n    2. $C_{\\alpha\\,L+1} = \\operatorname{place}(C_{\\alpha\\,L}, C_L, N_{L+1}; r_{\\text{N-CA}}, \\angle\\text{C-N-CA}, \\omega_{L})$,\n    3. $C_{L+1} = \\operatorname{place}(C_L, N_{L+1}, C_{\\alpha\\,L+1}; r_{\\text{CA-C}}, \\angle\\text{N-CA-C}, \\phi_{L+1})$.\n  - To uniquely define the chain termini, you must use a fixed boundary dihedral $\\psi_0$ at the start anchor and a fixed boundary dihedral $\\phi_{L+1}$ at the end anchor, specified per test case below.\n\n- Stereochemical plausibility constraint (Ramachandran-style admissible basins for non-glycine, non-proline):\n  - Allowed basins are modeled as the union of two circular regions in the $(\\phi,\\psi)$ plane (in degrees), each of radius $40$ centered at:\n    - Right-handed $\\alpha$-helix basin center $(-60,-45)$,\n    - Extended $\\beta$ basin center $(-135,135)$.\n  - A torsion pair $(\\phi,\\psi)$ is admissible if\n    $$\\min\\left\\{\\sqrt{(\\phi+60)^2+(\\psi+45)^2}, \\;\\sqrt{(\\phi+135)^2+(\\psi-135)^2}\\right\\} \\le 40.$$\n\n- Closure objective:\n  - Given a target end anchor triad $\\{\\mathbf{N}_{L+1}^{\\text{(anch)}}, \\mathbf{C}_{\\alpha\\,L+1}^{\\text{(anch)}}, \\mathbf{C}_{L+1}^{\\text{(anch)}}\\}$ and a constructed triad $\\{\\mathbf{N}_{L+1}, \\mathbf{C}_{\\alpha\\,L+1}, \\mathbf{C}_{L+1}\\}$ from a candidate torsion set, define the closure error as the root-mean-square deviation\n    $$E = \\sqrt{\\frac{1}{3}\\left(\\|\\mathbf{N}_{L+1}-\\mathbf{N}_{L+1}^{\\text{(anch)}}\\|^2 + \\|\\mathbf{C}_{\\alpha\\,L+1}-\\mathbf{C}_{\\alpha\\,L+1}^{\\text{(anch)}}\\|^2 + \\|\\mathbf{C}_{L+1}-\\mathbf{C}_{L+1}^{\\text{(anch)}}\\|^2\\right)}.$$\n\nFragment assembly strategy specification to implement:\n- Treat each loop residue as a fragment contributing an admissible $(\\phi,\\psi)$ pair drawn from the union of basins defined above.\n- Use deterministic pseudo-random sampling with a fixed seed to generate $K$ independent candidates per test case. For each candidate, draw each residueâs $(\\phi,\\psi)$ uniformly within one of the two disks (choose basin labels with equal probability and sample uniformly within the disk). Angles are in degrees for sampling; convert to radians for geometry.\n- Always include, in addition to the $K$ random candidates, one deterministic candidate where all loop residues take $(\\phi,\\psi)$ equal to the designated âmotif centerâ for that test case (defined below). This guarantees at least one stereochemically canonical fragment assembly per case.\n- Reject any candidate where any residueâs $(\\phi,\\psi)$ falls outside the admissible union. Only evaluate $E$ for admissible candidates.\n- Report the minimal $E$ (in Angstroms) among all admissible candidates considered per test case.\n\nAnchor definitions, initial frame, and test suite:\n- Initial anchor triad for residue index $0$ is defined in the $xy$-plane:\n  - $\\mathbf{N}_0 = (0,0,0)$,\n  - $\\mathbf{C}_{\\alpha\\,0} = (1.458, 0, 0)$,\n  - $\\mathbf{C}_0 = \\mathbf{C}_{\\alpha\\,0} + r_{\\text{CA-C}}\\,[\\cos(\\pi - \\theta_{\\text{N-CA-C}}),\\; \\sin(\\pi - \\theta_{\\text{N-CA-C}}),\\; 0]$, where $\\theta_{\\text{N-CA-C}} = 110.4$ degrees and trigonometric functions use radians internally.\n- For each test case, the target end anchor triad is defined by forward construction from the initial anchor using the geometry rules above with uniform loop torsions equal to a specified motif center, and fixed boundary torsions $\\psi_0$ and $\\phi_{L+1}$ equal to that same motif centerâs $\\psi$ and $\\phi$, respectively. The third test case then applies a rigid translation to the end triad to produce an inconsistent target.\n\nUse the following test suite. Angles listed in degrees; distances in Angstroms.\n- Case A (happy path): $L = 4$, motif center $(-60,-45)$, fixed $\\psi_0 = -45$, fixed $\\phi_{L+1} = -60$. Target end anchor is the forward-constructed triad with all loop residues at $(-60,-45)$.\n- Case B (alternative basin): $L = 3$, motif center $(-135,135)$, fixed $\\psi_0 = 135$, fixed $\\phi_{L+1} = -135$. Target end anchor is the forward-constructed triad with all loop residues at $(-135,135)$.\n- Case C (infeasible closure by translation): Start from Case Aâs target end anchor and apply a rigid translation by $(0,0,10)$ to all three atoms to define a new target. Use $L = 2$, motif center $(-60,-45)$, fixed $\\psi_0 = -45$, fixed $\\phi_{L+1} = -60$.\n\nSampling protocol and determinism:\n- Use $K = 20000$ admissible random candidates per test case and a fixed pseudo-random seed $s = 12345$. In addition, include the one deterministic motif-center candidate per test case as described above.\n- All angular units in the programâs inputs and outputs are in degrees; internal trigonometric calculations must convert to radians. All distances and the final $E$ values must be in Angstroms.\n\nRequired program output:\n- The program must produce a single line containing a Python-style list of three floats corresponding to the minimal closure errors for Cases A, B, and C, respectively, each rounded to exactly three digits after the decimal point, in Angstroms. For example: \"[0.000,0.123,9.876]\".", "solution": "The problem presented is a well-defined exercise in computational structural biology, specifically focusing on the conformational sampling of peptide loops. It requires the implementation of a fragment-assembly strategy based on fundamental principles of stereochemistry and three-dimensional geometry. The problem is valid, scientifically grounded, and contains all necessary information for a deterministic solution. We will proceed with a systematic, principle-based implementation.\n\nThe solution is constructed in the following logical steps:\n1.  Establishment of the physical model: This includes defining the idealized peptide geometry and the mathematical framework for constructing a molecular chain from internal coordinates.\n2.  Implementation of the chain construction algorithm: This involves writing a function that iteratively places atoms to build a peptide backbone of a specified length and torsion angle sequence.\n3.  Definition of the target conformations: For each test case, we must first construct the target coordinate frame that our sampled loops will be compared against.\n4.  Development of the conformational sampling strategy: This includes implementing the pseudo-random sampling of backbone dihedral angles from specified, stereochemically plausible regions (Ramachandran basins).\n5.  Evaluation and optimization: For each test case, we generate a large ensemble of candidate loop conformations, evaluate their fit to the target using a specified error metric (Root-Mean-Square Deviation), and identify the conformation with the minimum error.\n\nLet us detail each step.\n\nFirst, we define the constants of our idealized peptide model. All angular values must be converted from degrees to radians for trigonometric calculations.\n- Bond lengths (in Angstroms):\n  - $r_{\\text{N-CA}} = 1.458$\n  - $r_{\\text{CA-C}} = 1.525$\n  - $r_{\\text{C-N}} = 1.329$\n- Bond angles (in radians):\n  - $\\theta_{\\text{C-N-CA}} = 121.7^\\circ \\rightarrow \\mathrm{rad}(121.7)$\n  - $\\theta_{\\text{N-CA-C}} = 110.4^\\circ \\rightarrow \\mathrm{rad}(110.4)$\n  - $\\theta_{\\text{CA-C-N}} = 116.2^\\circ \\rightarrow \\mathrm{rad}(116.2)$\n- The trans-peptide bond dihedral angle:\n  - $\\omega = 180^\\circ \\rightarrow \\pi$ radians\n\nSecond, we implement the core geometric construction specified by the Z-matrix procedure. Given the Cartesian coordinates of three preceding atoms $\\mathbf{A}$, $\\mathbf{B}$, and $\\mathbf{C}$, a new atom $\\mathbf{X}$ is placed according to a bond length $r = \\|\\mathbf{X}-\\mathbf{C}\\|$, a bond angle $\\theta = \\angle \\mathbf{B-C-X}$, and a dihedral angle $\\tau$ defined by the plane of atoms $(\\mathbf{A, B, C})$ and the plane of atoms $(\\mathbf{B, C, X})$. The problem provides a specific formula for this transformation, which we must implement precisely. A local coordinate frame $(\\mathbf{e}_1, \\mathbf{e}_2, \\mathbf{e}_3)$ is established at atom $\\mathbf{C}$:\n$$ \\mathbf{e}_1 = \\frac{\\mathbf{C}-\\mathbf{B}}{\\|\\mathbf{C}-\\mathbf{B}\\|} $$\n$$ \\mathbf{e}_3 = \\frac{(\\mathbf{B}-\\mathbf{A}) \\times (\\mathbf{C}-\\mathbf{B})}{\\|(\\mathbf{B}-\\mathbf{A}) \\times (\\mathbf{C}-\\mathbf{B})\\|} $$\n$$ \\mathbf{e}_2 = \\mathbf{e}_3 \\times \\mathbf{e}_1 $$\nThe position of the new atom $\\mathbf{X}$ is then given by:\n$$ \\mathbf{X} = \\mathbf{C} + (-r\\cos\\theta)\\mathbf{e}_1 + (r\\sin\\theta\\cos\\tau)\\mathbf{e}_2 + (r\\sin\\theta\\sin\\tau)\\mathbf{e}_3 $$\nwhere the angles $\\theta$ and $\\tau$ must be in radians. This function is fundamental to our entire procedure.\n\nThird, we construct the full peptide chain. The process starts from a fixed initial frame for a hypothetical \"residue 0\". Its key atoms are defined as:\n- $\\mathbf{N}_0 = (0, 0, 0)$\n- $\\mathbf{C}_{\\alpha\\,0} = (r_{\\text{N-CA}}, 0, 0) = (1.458, 0, 0)$\n- $\\mathbf{C}_0 = \\mathbf{C}_{\\alpha\\,0} + (r_{\\text{CA-C}} \\cos(\\pi - \\theta_{\\text{N-CA-C}}), r_{\\text{CA-C}} \\sin(\\pi - \\theta_{\\text{N-CA-C}}), 0)$\nThis completely specifies the reference frame for building the first residue of the loop.\n\nThe chain is extended residue-by-residue for $i = 1, \\dots, L$. The variable dihedral angles for each residue $i$ are $\\phi_i$ and $\\psi_i$. The atom placement proceeds in a specific sequence, using the Z-matrix function:\n1.  Place $N_i$ based on $(N_{i-1}, C_{\\alpha, i-1}, C_{i-1})$ using bond length $r_{\\text{C-N}}$, angle $\\theta_{\\text{CA-C-N}}$, and dihedral $\\psi_{i-1}$.\n2.  Place $C_{\\alpha,i}$ based on $(C_{\\alpha, i-1}, C_{i-1}, N_i)$ using $r_{\\text{N-CA}}$, $\\theta_{\\text{C-N-CA}}$, and dihedral $\\omega_{i-1} = \\pi$.\n3.  Place $C_i$ based on $(C_{i-1}, N_i, C_{\\alpha,i})$ using $r_{\\text{CA-C}}$, $\\theta_{\\text{N-CA-C}}$, and dihedral $\\phi_i$.\n\nAfter building all $L$ loop residues, the three atoms of the C-terminal anchor (residue $L+1$) are constructed using the same logic to provide the final frame for comparison.\n\nFourth, we address the conformational sampling. The problem mandates a fragment-assembly approach where each residue's $(\\phi, \\psi)$ dihedral pair is sampled from a simplified Ramachandran space. This space consists of two circular basins of radius $R=40^\\circ$:\n- The $\\alpha$-helical basin, centered at $(\\phi, \\psi) = (-60^\\circ, -45^\\circ)$.\n- The extended $\\beta$ basin, centered at $(\\phi, \\psi) = (-135^\\circ, 135^\\circ)$.\nTo generate a random, admissible $(\\phi, \\psi)$ pair, we first select one of the two basins with equal probability ($50\\%$). Then, we sample a point uniformly from within the chosen circular disk. This is correctly done in polar coordinates by sampling a radius $r \\in [0, R]$ and an angle $\\alpha \\in [0, 2\\pi)$. The correct distribution for $r$ is not uniform; we must sample $r$ as $R \\sqrt{u_1}$ and $\\alpha$ as $2\\pi u_2$, where $u_1, u_2$ are uniform random variates in $[0,1)$. The resulting point in the $(\\phi, \\psi)$ plane is found by converting from polar to Cartesian coordinates relative to the basin's center. We use a pseudo-random number generator with a fixed seed of $s=12345$ for reproducibility.\n\nFor each test case, we generate $K=20000$ random candidates. Each candidate is a set of $L$ $(\\phi, \\psi)$ pairs, one for each loop residue. In addition, we must create one deterministic candidate where all $L$ residues adopt the $(\\phi, \\psi)$ angles of the \"motif center\" for that case.\n\nFifth, we perform the evaluation. For each test case, we first generate the target coordinates $\\{\\mathbf{N}_{L+1}^{\\text{(anch)}}, \\mathbf{C}_{\\alpha\\,L+1}^{\\text{(anch)}}, \\mathbf{C}_{L+1}^{\\text{(anch)}}\\}$. For Cases A and B, this is done by building a chain with all torsions set to the motif center. For Case C, the target is derived from Case A's target by a simple translation, creating a challenging closure problem.\n\nFor each of the $K+1$ candidate torsion sets, we build the corresponding chain and obtain the generated terminal coordinates $\\{\\mathbf{N}_{L+1}, \\mathbf{C}_{\\alpha\\,L+1}, \\mathbf{C}_{L+1}\\}$. We then compute the closure error $E$ as the root-mean-square deviation (RMSD) between the generated and target anchor triads:\n$$ E = \\sqrt{\\frac{1}{3}\\left(\\|\\mathbf{N}_{L+1}-\\mathbf{N}_{L+1}^{\\text{(anch)}}\\|^2 + \\|\\mathbf{C}_{\\alpha\\,L+1}-\\mathbf{C}_{\\alpha\\,L+1}^{\\text{(anch)}}\\|^2 + \\|\\mathbf{C}_{L+1}-\\mathbf{C}_{L+1}^{\\text{(anch)}}\\|^2\\right)} $$\nWe maintain a running minimum of this error across all candidates. The final result for each case is this minimum error, reported in Angstroms.\n\nThe three test cases are designed to validate the implementation. Cases A and B are \"happy paths\" where the deterministic candidate is constructed identically to the target, so the minimum error must be $0$. This serves as a critical internal control. Case C is designed to be infeasible for a perfect closure ($E=0$), testing the algorithm's ability to find the best possible non-trivial solution.\n\nThe program logic will integrate these components into a main function that iterates through the test cases, performs the sampling and evaluation for each, and formats the final results as specified.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main solver function to implement the fragment-assembly loop modeling.\n    \"\"\"\n    # Define constants from the problem statement\n    CONSTANTS = {\n        'bond_lengths': {\n            'N_CA': 1.458,\n            'CA_C': 1.525,\n            'C_N': 1.329,\n        },\n        'bond_angles_deg': {\n            'C_N_CA': 121.7,\n            'N_CA_C': 110.4,\n            'CA_C_N': 116.2,\n        },\n        'dihedrals_deg': {\n            'omega': 180.0,\n        },\n        'sampling': {\n            'K': 20000,\n            'seed': 12345,\n            'ramachandran_radius_deg': 40.0,\n            'basin_centers_deg': {\n                'alpha': np.array([-60.0, -45.0]),\n                'beta': np.array([-135.0, 135.0]),\n            }\n        }\n    }\n\n    # Convert degrees to radians for internal calculations\n    bond_angles_rad = {k: np.deg2rad(v) for k, v in CONSTANTS['bond_angles_deg'].items()}\n    dihedrals_rad = {k: np.deg2rad(v) for k, v in CONSTANTS['dihedrals_deg'].items()}\n    ramachandran_radius_rad = np.deg2rad(CONSTANTS['sampling']['ramachandran_radius_deg'])\n    basin_centers_rad = {k: np.deg2rad(v) for k, v in CONSTANTS['sampling']['basin_centers_deg'].items()}\n\n\n    def place_atom(atom_A, atom_B, atom_C, r, theta_rad, tau_rad):\n        \"\"\"\n        Places a new atom based on three previous atoms and internal coordinates.\n        Implements the Z-matrix transformation as specified in the problem.\n        \"\"\"\n        # Ensure input vectors are numpy arrays\n        A, B, C = np.array(atom_A), np.array(atom_B), np.array(atom_C)\n\n        # Vector from C to B\n        v_CB = B - C\n        \n        # Build the local coordinate system\n        e1 = C - B\n        norm_e1 = np.linalg.norm(e1)\n        if norm_e1 < 1e-6: return None # Collinear atoms\n        e1 = e1 / norm_e1\n        \n        # Normal vector to the plane B-A, C-B\n        e3__vec = np.cross(B - A, C - B)\n        norm_e3 = np.linalg.norm(e3__vec)\n        if norm_e3 < 1e-6: return None # Collinear atoms\n        e3 = e3__vec / norm_e3\n\n        e2 = np.cross(e3, e1)\n\n        # Calculate position of new atom X\n        # X = C + disp_vec\n        disp_vec = (-r * np.cos(theta_rad)) * e1 + \\\n                   (r * np.sin(theta_rad) * np.cos(tau_rad)) * e2 + \\\n                   (r * np.sin(theta_rad) * np.sin(tau_rad)) * e3\n        \n        return C + disp_vec\n\n    def build_chain(torsions, L, psi_0_deg, phi_Lp1_deg):\n        \"\"\"\n        Constructs a peptide chain of length L given a set of torsions.\n        \"\"\"\n        r = CONSTANTS['bond_lengths']\n        theta = bond_angles_rad\n        omega = dihedrals_rad['omega']\n\n        psi_0_rad = np.deg2rad(psi_0_deg)\n        phi_Lp1_rad = np.deg2rad(phi_Lp1_deg)\n\n        # Initial anchor triad (residue 0)\n        coords = {}\n        coords['N_0'] = np.array([0.0, 0.0, 0.0])\n        coords['CA_0'] = np.array([r['N_CA'], 0.0, 0.0])\n        theta_N_CA_C_rad = theta['N_CA_C']\n        disp = r['CA_C'] * np.array([np.cos(np.pi - theta_N_CA_C_rad), np.sin(np.pi - theta_N_CA_C_rad), 0.0])\n        coords['C_0'] = coords['CA_0'] + disp\n        \n        all_psi = [psi_0_rad] + [np.deg2rad(p[1]) for p in torsions]\n        all_phi = [np.deg2rad(p[0]) for p in torsions] + [phi_Lp1_rad]\n\n        # Build loop residues 1 to L\n        for i in range(1, L + 1):\n            # Place N_i\n            coords[f'N_{i}'] = place_atom(coords[f'N_{i-1}'], coords[f'CA_{i-1}'], coords[f'C_{i-1}'], \n                                           r['C_N'], theta['CA_C_N'], all_psi[i-1])\n            # Place CA_i\n            coords[f'CA_{i}'] = place_atom(coords[f'CA_{i-1}'], coords[f'C_{i-1}'], coords[f'N_{i}'],\n                                            r['N_CA'], theta['C_N_CA'], omega)\n            # Place C_i\n            coords[f'C_{i}'] = place_atom(coords[f'C_{i-1}'], coords[f'N_{i}'], coords[f'CA_{i}'],\n                                           r['CA_C'], theta['N_CA_C'], all_phi[i-1])\n\n        # Build terminal anchor (residue L+1)\n        i = L + 1\n        coords[f'N_{i}'] = place_atom(coords[f'N_{i-1}'], coords[f'CA_{i-1}'], coords[f'C_{i-1}'], \n                                       r['C_N'], theta['CA_C_N'], all_psi[i-1])\n        coords[f'CA_{i}'] = place_atom(coords[f'CA_{i-1}'], coords[f'C_{i-1}'], coords[f'N_{i}'],\n                                        r['N_CA'], theta['C_N_CA'], omega)\n        coords[f'C_{i}'] = place_atom(coords[f'C_{i-1}'], coords[f'N_{i}'], coords[f'CA_{i}'],\n                                       r['CA_C'], theta['N_CA_C'], all_phi[i-1])\n\n        return coords[f'N_{L+1}'], coords[f'CA_{L+1}'], coords[f'C_{L+1}']\n\n    def sample_torsions(rng):\n        \"\"\"\n        Samples a single (phi, psi) pair uniformly from one of the two allowed basins.\n        \"\"\"\n        radius_deg = CONSTANTS['sampling']['ramachandran_radius_deg']\n        \n        # Choose basin\n        if rng.random() < 0.5:\n            center_deg = CONSTANTS['sampling']['basin_centers_deg']['alpha']\n        else:\n            center_deg = CONSTANTS['sampling']['basin_centers_deg']['beta']\n\n        # Sample uniformly from disk\n        r = radius_deg * np.sqrt(rng.uniform())\n        alpha = 2 * np.pi * rng.uniform()\n        \n        phi_offset = r * np.cos(alpha)\n        psi_offset = r * np.sin(alpha)\n        \n        return center_deg[0] + phi_offset, center_deg[1] + psi_offset\n\n    def calculate_rmsd(gen_atoms, target_atoms):\n        \"\"\"\n        Calculates the RMSD between two sets of three atoms.\n        \"\"\"\n        gen_N, gen_CA, gen_C = gen_atoms\n        tgt_N, tgt_CA, tgt_C = target_atoms\n        \n        d2_N = np.sum((gen_N - tgt_N)**2)\n        d2_CA = np.sum((gen_CA - tgt_CA)**2)\n        d2_C = np.sum((gen_C - tgt_C)**2)\n        \n        return np.sqrt((d2_N + d2_CA + d2_C) / 3.0)\n\n    test_cases = [\n        # Case A\n        {'L': 4, 'motif_center': (-60.0, -45.0), 'psi_0': -45.0, 'phi_Lp1': -60.0, 'target_op': None, 'target_L': 4},\n        # Case B\n        {'L': 3, 'motif_center': (-135.0, 135.0), 'psi_0': 135.0, 'phi_Lp1': -135.0, 'target_op': None, 'target_L': 3},\n        # Case C\n        {'L': 2, 'motif_center': (-60.0, -45.0), 'psi_0': -45.0, 'phi_Lp1': -60.0, 'target_op': lambda atoms: [a + np.array([0,0,10]) for a in atoms], 'target_L': 4},\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        L = case['L']\n        motif_center = case['motif_center']\n        psi_0 = case['psi_0']\n        phi_Lp1 = case['phi_Lp1']\n        \n        # Generate target anchor\n        target_L = case['target_L']\n        target_torsions = [motif_center] * target_L\n        \n        if target_L == 4: # Case A and C target generation share this\n             target_atoms_base = build_chain(target_torsions, 4, -45.0, -60.0)\n        else: # Case B target generation\n             target_atoms_base = build_chain(target_torsions, 3, 135.0, -135.0)\n\n        if case['target_op']:\n            target_atoms = case['target_op'](target_atoms_base)\n        else:\n            target_atoms = target_atoms_base\n\n        min_error = float('inf')\n        \n        # 1. Deterministic candidate\n        det_torsions = [motif_center] * L\n        gen_atoms = build_chain(det_torsions, L, psi_0, phi_Lp1)\n        error = calculate_rmsd(gen_atoms, target_atoms)\n        min_error = min(min_error, error)\n        \n        # 2. Random sampling\n        rng = np.random.default_rng(CONSTANTS['sampling']['seed'])\n        K = CONSTANTS['sampling']['K']\n        \n        for _ in range(K):\n            random_torsions = [sample_torsions(rng) for _ in range(L)]\n            gen_atoms = build_chain(random_torsions, L, psi_0, phi_Lp1)\n            error = calculate_rmsd(gen_atoms, target_atoms)\n            min_error = min(min_error, error)\n            \n        results.append(round(min_error, 3))\n\n    # Format output as a Python-style list of floats\n    print(f\"[{','.join(f'{r:.3f}' for r in results)}]\")\n\nsolve()\n```", "id": "2614478"}]}