{"hands_on_practices": [{"introduction": "The dynamic nature of the neuronal cytoskeleton begins with the assembly of its core components. This exercise delves into the fundamental kinetics of microtubule polymerization by modeling it as a series of stochastic addition and loss events at the polymer tip. By applying the principles of mass-action kinetics, you will derive the mean growth velocity from first principles, providing a quantitative link between microscopic rate constants and macroscopic polymer growth [@problem_id:2765339].", "problem": "In a developing axon, microtubules elongate predominantly at their plus ends. Consider a minimal kinetic model for plus-end polymerization in which tubulin heterodimers bind and unbind as independent, memoryless events at the terminal site. Assume the following foundational statements:\n- By mass-action kinetics, the arrival rate of addition events at the plus end is $r_{\\text{on}} = k_{\\text{on}}^{+} C$, where $k_{\\text{on}}^{+}$ is the bimolecular on-rate constant and $C$ is the free tubulin concentration.\n- The departure rate of loss events at the plus end is $r_{\\text{off}} = k_{\\text{off}}^{+}$, where $k_{\\text{off}}^{+}$ is the first-order off-rate constant at the plus end.\n- Each successful addition event advances the axial position of the polymer tip by a fixed increment $\\delta$ along the microtubule axis, and each loss event retracts it by the same amount $\\delta$.\n\nStarting from these principles and without invoking any additional phenomenological formulas, derive an expression for the mean growth velocity $v$ of the microtubule plus end at steady state in terms of $k_{\\text{on}}^{+}$, $k_{\\text{off}}^{+}$, $C$, and $\\delta$. Then evaluate $v$ numerically for a neuronal cytosolic tubulin concentration of $C = 10\\,\\mu\\mathrm{M}$, an on-rate constant $k_{\\text{on}}^{+} = 4\\,\\mu\\mathrm{M}^{-1}\\mathrm{s}^{-1}$, an off-rate constant $k_{\\text{off}}^{+} = 2\\,\\mathrm{s}^{-1}$, and a step size $\\delta = 8\\,\\mathrm{nm}$. \n\nExpress the final numerical value of the velocity in $\\mathrm{nm}\\,\\mathrm{s}^{-1}$, and round your answer to three significant figures.", "solution": "The problem statement is subjected to validation.\n\nStep 1: Extract Givens\n- The model treats tubulin heterodimer addition and removal as independent, memoryless events at the microtubule plus end.\n- The arrival rate of addition events is $r_{\\text{on}} = k_{\\text{on}}^{+} C$.\n- $k_{\\text{on}}^{+}$ is the bimolecular on-rate constant.\n- $C$ is the free tubulin concentration.\n- The departure rate of loss events is $r_{\\text{off}} = k_{\\text{off}}^{+}$.\n- $k_{\\text{off}}^{+}$ is the first-order off-rate constant.\n- Each addition event increases the microtubule length by an increment $\\delta$.\n- Each loss event decreases the microtubule length by an increment $\\delta$.\n- The task is to derive an expression for the mean growth velocity $v$ at steady state.\n- The task is to evaluate $v$ for the following numerical values:\n  - $C = 10\\,\\mu\\mathrm{M}$\n  - $k_{\\text{on}}^{+} = 4\\,\\mu\\mathrm{M}^{-1}\\mathrm{s}^{-1}$\n  - $k_{\\text{off}}^{+} = 2\\,\\mathrm{s}^{-1}$\n  - $\\delta = 8\\,\\mathrm{nm}$\n- The final numerical answer must be in units of $\\mathrm{nm}\\,\\mathrm{s}^{-1}$ and rounded to three significant figures.\n\nStep 2: Validate Using Extracted Givens\nThe problem is scientifically grounded, employing a standard and well-established kinetic model for polymer dynamics (specifically, a two-state master equation model for polymer tip position). The principles of mass-action kinetics are correctly applied. The problem is well-posed, as it requests a mean velocity, a statistically well-defined quantity derivable from the given rates. The parameters are provided, and their units are consistent, leading to a unique and meaningful solution. The problem is objective and free of ambiguity. It does not violate any of the specified invalidity criteria.\n\nStep 3: Verdict and Action\nThe problem is valid. A complete solution will be provided.\n\nThe mean growth velocity, $v$, of the microtubule is defined as the net rate of change of its length. The process is stochastic, governed by probabilistic addition and subtraction events. The mean velocity can be determined by considering the expected change in length over a given time interval.\n\nLet us consider a small time interval $\\Delta t$. The events are modeled as Poisson processes, where the probability of an event occurring in $\\Delta t$ is proportional to the rate and $\\Delta t$. The expected number of addition events in this interval is $N_{\\text{on}} = r_{\\text{on}} \\Delta t$. Correspondingly, the expected number of loss events is $N_{\\text{off}} = r_{\\text{off}} \\Delta t$.\n\nEach addition event contributes a length change of $+\\delta$, and each loss event contributes a length change of $-\\delta$. The total expected change in length, $\\langle \\Delta L \\rangle$, over the interval $\\Delta t$ is the sum of the expected contributions from both types of events:\n$$\n\\langle \\Delta L \\rangle = (N_{\\text{on}}) \\cdot (+\\delta) + (N_{\\text{off}}) \\cdot (-\\delta)\n$$\nSubstituting the expressions for the expected number of events:\n$$\n\\langle \\Delta L \\rangle = (r_{\\text{on}} \\Delta t)\\delta - (r_{\\text{off}} \\Delta t)\\delta\n$$\nThis can be simplified by factoring out the common terms:\n$$\n\\langle \\Delta L \\rangle = (r_{\\text{on}} - r_{\\text{off}})\\delta \\Delta t\n$$\nThe mean velocity $v$ is the expected change in length per unit time. Therefore, we divide $\\langle \\Delta L \\rangle$ by $\\Delta t$:\n$$\nv = \\frac{\\langle \\Delta L \\rangle}{\\Delta t} = \\frac{(r_{\\text{on}} - r_{\\text{off}})\\delta \\Delta t}{\\Delta t}\n$$\n$$\nv = (r_{\\text{on}} - r_{\\text{off}})\\delta\n$$\nThis equation expresses the mean velocity in terms of the fundamental rates of addition and subtraction and the step size. We now substitute the given expressions for the rates, $r_{\\text{on}} = k_{\\text{on}}^{+} C$ and $r_{\\text{off}} = k_{\\text{off}}^{+}$:\n$$\nv = (k_{\\text{on}}^{+} C - k_{\\text{off}}^{+}) \\delta\n$$\nThis is the analytical expression for the mean growth velocity at steady state.\n\nNext, we must evaluate this expression numerically using the provided data:\n$C = 10\\,\\mu\\mathrm{M}$\n$k_{\\text{on}}^{+} = 4\\,\\mu\\mathrm{M}^{-1}\\mathrm{s}^{-1}$\n$k_{\\text{off}}^{+} = 2\\,\\mathrm{s}^{-1}$\n$\\delta = 8\\,\\mathrm{nm}$\n\nFirst, we calculate the rates $r_{\\text{on}}$ and $r_{\\text{off}}$.\nThe rate of addition is:\n$$\nr_{\\text{on}} = k_{\\text{on}}^{+} C = (4\\,\\mu\\mathrm{M}^{-1}\\mathrm{s}^{-1})(10\\,\\mu\\mathrm{M}) = 40\\,\\mathrm{s}^{-1}\n$$\nThe rate of loss is given directly:\n$$\nr_{\\text{off}} = k_{\\text{off}}^{+} = 2\\,\\mathrm{s}^{-1}\n$$\nNow, we substitute these rates and the value of $\\delta$ into the expression for $v$:\n$$\nv = (r_{\\text{on}} - r_{\\text{off}}) \\delta = (40\\,\\mathrm{s}^{-1} - 2\\,\\mathrm{s}^{-1})(8\\,\\mathrm{nm})\n$$\n$$\nv = (38\\,\\mathrm{s}^{-1})(8\\,\\mathrm{nm})\n$$\n$$\nv = 304\\,\\mathrm{nm}\\,\\mathrm{s}^{-1}\n$$\nThe problem requires the answer to be rounded to three significant figures. The calculated value $304$ already has three significant figures. The unit $\\mathrm{nm}\\,\\mathrm{s}^{-1}$ is as required.", "answer": "$$\\boxed{304}$$", "id": "2765339"}, {"introduction": "Beyond their structural role, cytoskeletal filaments form the tracks for axonal transport, a process vital for neuronal health. This practice explores the consequences of impaired transport, a key feature in neurodegenerative diseases like amyotrophic lateral sclerosis (ALS). Using a continuum model based on the principle of mass conservation, you will calculate how a reduction in the net transport speed of neurofilaments leads to their pathological accumulation in the axon [@problem_id:2765230].", "problem": "A large spinal motor neuron exhibits slow axonal transport of neurofilament polymers along microtubules with a net anterograde bias arising from the time-averaged dominance of kinesin-driven over dynein-driven runs. Consider a proximal axonal control volume of length $L$ that is initially at steady state, meaning the total number $N$ of neurofilament polymers within this control volume does not change over time. Let the time-averaged effective drift speed be $v_{0}$ (net anterograde), and let the linear number density of neurofilament polymers (number per unit axonal length) be spatially uniform at $\\lambda_{0}$ within this control volume. Assume that diffusion is negligible relative to drift at the timescale of interest and that degradation is negligible in this region. The soma supplies neurofilament polymers to the control volume at a constant rate $R_{s}$ (in polymers per second), and at steady state this equals the outflow across the distal boundary.\n\nNow suppose that in amyotrophic lateral sclerosis (ALS), disruptions to motor coordination reduce the anterograde bias by $50\\%$, which we model as an instantaneous reduction of the effective drift speed to $v_{1} = 0.5\\,v_{0}$, with no immediate change in $\\lambda$ within the control volume at the instant of perturbation. Using conservation of mass for the polymer number and the definition of flux as drift speed times linear density, compute the instantaneous accumulation rate $\\frac{dN}{dt}$ in the proximal control volume at time $t=0^{+}$ after the reduction in anterograde bias.\n\nUse the following parameter values that characterize the baseline steady state prior to the ALS-linked reduction:\n- Baseline effective drift speed: $v_{0} = 0.0020\\,\\text{μm}\\,\\text{s}^{-1}$.\n- Uniform linear density: $\\lambda_{0} = 50\\,\\text{polymers}\\,\\text{μm}^{-1}$.\n\nAssume the proximal length $L$ is large enough that boundary-layer transients at its ends can be neglected over the instant of interest, and that the soma supply rate $R_{s}$ remains equal to the pre-perturbation outflow at steady state.\n\nExpress the final accumulation rate $\\frac{dN}{dt}$ in polymers per second, and round your answer to three significant figures. Do not include units in your final boxed answer.", "solution": "The problem requires the calculation of the instantaneous accumulation rate of neurofilament polymers in a proximal axonal control volume immediately following a perturbation that reduces the axonal transport drift speed. The fundamental principle governing this process is the conservation of particle number, which can be stated as an integral continuity equation over the control volume of length $L$. For a one-dimensional system, this is:\n$$\n\\frac{dN}{dt} = J_{in} - J_{out}\n$$\nwhere $N$ is the total number of polymers in the control volume, and $J_{in}$ and $J_{out}$ are the fluxes (number of polymers per unit time) entering and leaving the volume, respectively. The flux $J$ at any point is defined as the product of the linear number density $\\lambda$ (polymers per unit length) and the drift speed $v$.\n$$\nJ = \\lambda v\n$$\n\nFirst, we analyze the system at the initial steady state, for time $t < 0$. In this state, the number of polymers $N$ is constant, so $\\frac{dN}{dt} = 0$. This implies that the influx equals the outflux.\n$$\nJ_{in,0} = J_{out,0}\n$$\nThe problem states that the influx is provided by the soma at a constant rate $R_s$. The outflux occurs at the distal end of the control volume. At steady state, the drift speed is $v_0$ and the density is uniform at $\\lambda_0$. Thus, the outflux is $J_{out,0} = \\lambda_0 v_0$. The steady-state condition is therefore:\n$$\nR_s = \\lambda_0 v_0\n$$\n\nNext, we consider the moment immediately after the perturbation, at time $t=0^{+}$. At this instant, the effective drift speed is reduced to $v_1 = 0.5 v_0$. We must calculate the new rate of change of polymer number, $\\frac{dN}{dt}\\big|_{t=0^+}$.\n$$\n\\frac{dN}{dt}\\bigg|_{t=0^+} = J_{in}(t=0^+) - J_{out}(t=0^+)\n$$\n\nWe must determine the influx and outflux terms at $t=0^{+}$.\nThe influx, $J_{in}(t=0^+)$, is the supply rate from the soma, $R_s$. The problem states that this rate remains equal to the pre-perturbation outflow rate. Therefore:\n$$\nJ_{in}(t=0^+) = R_s = \\lambda_0 v_0\n$$\n\nThe outflux, $J_{out}(t=0^+)$, depends on the conditions at the distal boundary at $t=0^+$. The drift speed is now $v_1$. The problem specifies that the linear density $\\lambda$ does not change instantaneously within the control volume. Thus, the density at the distal boundary remains $\\lambda_0$ at $t=0^+$. The outflux is then:\n$$\nJ_{out}(t=0^+) = \\lambda(L, t=0^+) \\cdot v(t=0^+) = \\lambda_0 v_1\n$$\nSubstituting $v_1 = 0.5 v_0$, we get:\n$$\nJ_{out}(t=0^+) = \\lambda_0 (0.5 v_0) = 0.5 \\lambda_0 v_0\n$$\n\nNow we can compute the instantaneous accumulation rate by substituting the expressions for influx and outflux into the conservation equation:\n$$\n\\frac{dN}{dt}\\bigg|_{t=0^+} = \\lambda_0 v_0 - 0.5 \\lambda_0 v_0 = 0.5 \\lambda_0 v_0\n$$\nThe result is positive, indicating a net accumulation of neurofilaments in the control volume, which is a key pathological feature in models of ALS.\n\nFinally, we substitute the given numerical values:\n$v_{0} = 0.0020\\,\\text{μm}\\,\\text{s}^{-1}$\n$\\lambda_{0} = 50\\,\\text{polymers}\\,\\text{μm}^{-1}$\n\n$$\n\\frac{dN}{dt}\\bigg|_{t=0^+} = 0.5 \\times (50\\,\\text{polymers}\\,\\text{μm}^{-1}) \\times (0.0020\\,\\text{μm}\\,\\text{s}^{-1})\n$$\n$$\n\\frac{dN}{dt}\\bigg|_{t=0^+} = 0.5 \\times (0.1\\,\\text{polymers}\\,\\text{s}^{-1})\n$$\n$$\n\\frac{dN}{dt}\\bigg|_{t=0^+} = 0.05\\,\\text{polymers}\\,\\text{s}^{-1}\n$$\nThe problem requires the answer to be rounded to three significant figures. The calculated value of $0.05$ expressed to three significant figures is $0.0500$.", "answer": "$$\\boxed{0.0500}$$", "id": "2765230"}, {"introduction": "Real-world intracellular transport is a complex stochastic process influenced by mixed microtubule polarities, motor protein switching, and physical barriers like dense actin networks. This advanced challenge guides you to construct a comprehensive computational model that captures these critical features using the framework of a continuous-time Markov chain. By performing a first-passage analysis, you will be able to predict key metrics like delivery efficiency and time, gaining insight into how cells ensure reliable cargo routing in a crowded and complex environment [@problem_id:2765328].", "problem": "You are asked to construct, analyze, and implement a minimal graph-based model for intracellular cargo routing along an axon that integrates microtubule polarity, actin-rich compartmental barriers, and motor switching. The axon is partitioned into discrete compartments indexed by integers from $0$ (soma-proximal) to $N$ (distal bouton). The cytoskeletal architecture consists of microtubules and actin filaments: microtubules are polarized with a fraction $p_{+}$ of plus-end-out orientations supporting anterograde motion by kinesin motors and a fraction $p_{-} = 1 - p_{+}$ supporting retrograde motion by dynein motors; actin filaments are enriched in a terminal compartment that creates a barrier to microtubule-based anterograde passage and increases motor switching. Cargos can attach to an anterograde state $\\mathrm{A}$ (kinesin-driven) or a retrograde state $\\mathrm{R}$ (dynein-driven), and can detach into a non-returning state $\\mathrm{X}$.\n\nModel the cargo as a continuous-time Markov chain (CTMC) over states $(i,\\mathrm{A})$ and $(i,\\mathrm{R})$ for $i \\in \\{0,1,\\dots,N-1\\}$; the distal bouton at $i=N$ is an absorbing success state. Detachment $\\mathrm{X}$ is an absorbing failure state. The allowed transitions and their rates are:\n\n- From $(i,\\mathrm{A})$:\n  - To $(i+1,\\mathrm{A})$ with rate $\\lambda_i^{\\mathrm{A}} = k_{+}\\,p_{+}$ for $i \\in \\{0,\\dots,N-2\\}$, and to the absorbing success state $N$ with rate $\\lambda_{N-1}^{\\mathrm{A}} = k_{+}\\,p_{+}$. At an actin-rich barrier index $b \\in \\{1,\\dots,N-1\\}$, anterograde passage is hindered by a barrier factor $\\beta \\in (0,1]$, so $\\lambda_b^{\\mathrm{A}}$ is replaced by $\\beta\\,k_{+}\\,p_{+}$.\n  - To $(i,\\mathrm{R})$ with switching rate $\\sigma_{AR}$, which is increased at the barrier by a factor $\\alpha \\ge 1$; i.e., the effective switching rate at $i=b$ is $\\alpha\\,\\sigma_{AR}$ and elsewhere it is $\\sigma_{AR}$.\n  - To detachment $\\mathrm{X}$ with rate $k_{\\mathrm{off}}$.\n\n- From $(i,\\mathrm{R})$:\n  - To $(i-1,\\mathrm{R})$ with rate $\\lambda_i^{\\mathrm{R}} = k_{-}\\,p_{-}$ for $i \\in \\{1,\\dots,N-1\\}$. At $i=0$ there is no step to $-1$ (reflecting boundary).\n  - To $(i,\\mathrm{A})$ with switching rate $\\sigma_{RA}$, which is increased at the barrier by a factor $\\alpha \\ge 1$; i.e., the effective switching rate at $i=b$ is $\\alpha\\,\\sigma_{RA}$ and elsewhere it is $\\sigma_{RA}$.\n  - To detachment $\\mathrm{X}$ with rate $k_{\\mathrm{off}}$.\n\nAll rates $k_{+}$, $k_{-}$, $\\sigma_{AR}$, $\\sigma_{RA}$, and $k_{\\mathrm{off}}$ are in $\\mathrm{s}^{-1}$. The barrier factors $\\alpha$ and $\\beta$ are dimensionless. You may assume that at most one barrier exists, located at index $b$.\n\nStarting from the initial state $(0,\\mathrm{A})$, define:\n- The delivery efficiency probability $P_{\\mathrm{succ}}$ as the probability that the process reaches the absorbing success state $N$ before detachment $\\mathrm{X}$.\n- The conditional mean delivery time $T_{\\mathrm{cond}}$ as the expected time to absorption in the success state $N$ conditioned on success occurring. Express time in seconds.\n\nYour task is to:\n1. Formulate the generator of the continuous-time Markov chain in terms of the given parameters based on the master equation for continuous-time Markov processes and the definitions above.\n2. Using only general principles of continuous-time Markov chains and first-passage analysis, derive a method to compute $P_{\\mathrm{succ}}$ and $T_{\\mathrm{cond}}$ from the generator without simulation.\n3. Implement a program that, for each parameter set in the test suite below, computes $P_{\\mathrm{succ}}$ and $T_{\\mathrm{cond}}$ starting from $(0,\\mathrm{A})$, and determines whether delivery is efficient under the criterion $P_{\\mathrm{succ}} \\ge P_{\\min}$ and $T_{\\mathrm{cond}} \\le T_{\\max}$, where $P_{\\min}$ and $T_{\\max}$ are given thresholds.\n\nAngle units are not relevant. When reporting times, use seconds. The final program output must be a single line containing a flat list with, for each test case in order, the triple $[P_{\\mathrm{succ}}, T_{\\mathrm{cond}}, \\text{efficient}]$, where $P_{\\mathrm{succ}}$ and $T_{\\mathrm{cond}}$ are rounded to $6$ decimal places, and $\\text{efficient}$ is a boolean. The entire output across all test cases must be a single list with no spaces, for example, $[0.900000,3.250000,True,0.450000,7.125000,False]$ for two cases.\n\nTest Suite (each line specifies $(N,b,k_{+},k_{-},p_{+},\\sigma_{AR},\\sigma_{RA},k_{\\mathrm{off}},\\beta,\\alpha,P_{\\min},T_{\\max})$):\n- Case 1: $(6,5,2.5,2.0,0.85,0.05,0.20,0.05,0.60,2.0,0.70,6.0)$\n- Case 2: $(6,5,2.0,2.5,0.60,0.30,0.10,0.20,0.10,5.0,0.50,10.0)$\n- Case 3: $(7,6,2.0,3.0,0.40,0.25,0.05,0.10,0.70,1.5,0.30,8.0)$\n- Case 4: $(5,4,3.0,2.0,0.90,0.02,0.30,0.00,0.80,1.0,0.95,4.0)$\n- Case 5: $(5,4,2.2,2.2,0.50,0.10,0.10,0.15,0.50,3.0,0.40,7.0)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets in the order of the cases, i.e., $[P_{\\mathrm{succ}}^{(1)},T_{\\mathrm{cond}}^{(1)},\\text{efficient}^{(1)},P_{\\mathrm{succ}}^{(2)},T_{\\mathrm{cond}}^{(2)},\\text{efficient}^{(2)},\\dots]$ where the superscript denotes the case index starting from $1$.", "solution": "The problem proposed is a valid formulation of a stochastic transport process. It is scientifically grounded in the biophysics of axonal transport, modeling it as a continuous-time Markov chain (CTMC), a standard and appropriate method. The problem is well-posed, providing all necessary parameters and boundary conditions to define the CTMC uniquely. It is expressed in objective, mathematical language with no ambiguities. All criteria for a valid problem are met. We may therefore proceed to the solution.\n\nThe solution involves three stages: first, constructing the generator matrix of the CTMC from the given parameters; second, using first-passage analysis to derive equations for the probability of successful delivery and the conditional mean delivery time; and third, implementing a numerical solution to these equations.\n\n**1. Formulation of the Continuous-Time Markov Chain**\n\nThe state of the cargo is described by its position $i \\in \\{0, 1, \\dots, N-1\\}$ and its motor-associated state, either anterograde ($\\mathrm{A}$) or retrograde ($\\mathrm{R}$). This defines a set of $2N$ transient states, which we denote by $\\mathcal{T} = \\{(i, \\mathrm{S}) \\mid i \\in \\{0, \\dots, N-1\\}, \\mathrm{S} \\in \\{\\mathrm{A}, \\mathrm{R}\\}\\}$. There are two absorbing states: the success state $S$ (delivery to compartment $N$) and the failure state $F$ (detachment to state $\\mathrm{X}$).\n\nThe dynamics are governed by the master equation $\\frac{d\\mathbf{p}(t)}{dt} = Q^T \\mathbf{p}(t)$, where $Q$ is the generator matrix of the CTMC. For absorption problems, we focus on the sub-generator matrix for transient states, $Q_{\\mathcal{T}}$, which is a $2N \\times 2N$ matrix. The states are ordered as $(0,\\mathrm{A}), (0,\\mathrm{R}), (1,\\mathrm{A}), (1,\\mathrm{R}), \\dots, (N-1,\\mathrm{A}), (N-1,\\mathrm{R})$. Thus, state $(i,\\mathrm{A})$ corresponds to index $2i$ and state $(i,\\mathrm{R})$ to index $2i+1$.\n\nThe off-diagonal elements $Q_{\\mathcal{T}}[j,k]$ for $j \\neq k$ represent the transition rate from state $j$ to state $k$. The diagonal elements $Q_{\\mathcal{T}}[j,j]$ are the negative sum of all rates out of state $j$, including rates to absorbing states.\n\nLet us define the effective rates, incorporating the barrier effects at index $b$:\n-   Anterograde step rate from $i$: $\\lambda_{i}^{\\mathrm{A}} = \\begin{cases} \\beta k_{+} p_{+} & \\text{if } i=b \\\\ k_{+} p_{+} & \\text{if } i \\neq b \\end{cases}$ for $i \\in \\{0, \\dots, N-1\\}$.\n-   Retrograde step rate from $i$: $\\lambda_{i}^{\\mathrm{R}} = k_{-} p_{-}$ for $i \\in \\{1, \\dots, N-1\\}$, and $0$ for $i=0$. Here $p_{-} = 1-p_{+}$.\n-   Switching rate from $\\mathrm{A}$ to $\\mathrm{R}$ at $i$: $\\sigma_{AR,i} = \\begin{cases} \\alpha \\sigma_{AR} & \\text{if } i=b \\\\ \\sigma_{AR} & \\text{if } i \\neq b \\end{cases}$.\n-   Switching rate from $\\mathrm{R}$ to $\\mathrm{A}$ at $i$: $\\sigma_{RA,i} = \\begin{cases} \\alpha \\sigma_{RA} & \\text{if } i=b \\\\ \\sigma_{RA} & \\text{if } i \\neq b \\end{cases}$.\n-   Detachment rate from any transient state: $k_{\\mathrm{off}}$.\n\nThe non-zero off-diagonal elements of $Q_{\\mathcal{T}}$ are:\n-   Anterograde step: $Q_{\\mathcal{T}}[2i, 2(i+1)] = \\lambda_{i}^{\\mathrm{A}}$ for $i \\in \\{0, \\dots, N-2\\}$.\n-   Retrograde step: $Q_{\\mathcal{T}}[2i+1, 2(i-1)+1] = \\lambda_{i}^{\\mathrm{R}}$ for $i \\in \\{1, \\dots, N-1\\}$.\n-   Switching $\\mathrm{A} \\to \\mathrm{R}$: $Q_{\\mathcal{T}}[2i, 2i+1] = \\sigma_{AR, i}$ for $i \\in \\{0, \\dots, N-1\\}$.\n-   Switching $\\mathrm{R} \\to \\mathrm{A}$: $Q_{\\mathcal{T}}[2i+1, 2i] = \\sigma_{RA, i}$ for $i \\in \\{0, \\dots, N-1\\}$.\n\nThe diagonal elements $Q_{\\mathcal{T}}[k,k]$ are:\n-   For state $(i,\\mathrm{A})$ (index $2i$): $Q_{\\mathcal{T}}[2i, 2i] = -(\\lambda_{i, \\text{out}}^{\\mathrm{A}} + \\sigma_{AR,i} + k_{\\mathrm{off}})$, where $\\lambda_{i, \\text{out}}^{\\mathrm{A}}$ is the rate of any anterograde step, whether to $(i+1, \\mathrm{A})$ or to the success state $S$. Specifically, $\\lambda_{i, \\text{out}}^{\\mathrm{A}} = \\lambda_i^{\\mathrm{A}}$ for all $i \\in \\{0, \\dots, N-1\\}$.\n-   For state $(i,\\mathrm{R})$ (index $2i+1$): $Q_{\\mathcal{T}}[2i+1, 2i+1] = -(\\lambda_{i}^{\\mathrm{R}} + \\sigma_{RA,i} + k_{\\mathrm{off}})$.\n\n**2. First-Passage Analysis for Efficiency and Time**\n\nWe use standard first-passage analysis for absorbing CTMCs to compute $P_{\\mathrm{succ}}$ and $T_{\\mathrm{cond}}$.\n\n**Delivery Efficiency Probability ($P_{\\mathrm{succ}}$):**\nLet $h_j^S$ be the probability of absorption into the success state $S$ given the process starts in transient state $j \\in \\mathcal{T}$. The vector of these probabilities, $\\mathbf{h}^S = (h_j^S)_{j \\in \\mathcal{T}}$, is the solution to the following system of linear equations:\n$$\nQ_{\\mathcal{T}} \\mathbf{h}^S + \\mathbf{r}^S = \\mathbf{0}\n$$\nwhere $\\mathbf{r}^S$ is a column vector whose $j$-th element is the rate of transition from state $j$ directly to the success state $S$. In this model, only state $(N-1, \\mathrm{A})$ transitions to $S$, with rate $\\lambda_{N-1}^{\\mathrm{A}}$. Thus, $\\mathbf{r}^S$ is zero everywhere except for the entry corresponding to state $(N-1, \\mathrm{A})$ (index $2(N-1)$), which is $\\lambda_{N-1}^{\\mathrm{A}}$. The system is solved for $\\mathbf{h}^S$:\n$$\n\\mathbf{h}^S = -Q_{\\mathcal{T}}^{-1} \\mathbf{r}^S\n$$\nSince the process starts at $(0, \\mathrm{A})$, the delivery efficiency is $P_{\\mathrm{succ}} = h_{(0,\\mathrm{A})}^S$, which is the first element of the vector $\\mathbf{h}^S$.\n\n**Conditional Mean Delivery Time ($T_{\\mathrm{cond}}$):**\nTo find the mean time to absorption in $S$, conditioned on this event occurring, we first compute an auxiliary vector $\\mathbf{u}$. The $j$-th element of $\\mathbf{u}$, denoted $u_j$, is the expectation of the product of the absorption time and an indicator function that absorption occurs in $S$, given the process starts in $j$. This vector satisfies the system:\n$$\nQ_{\\mathcal{T}} \\mathbf{u} + \\mathbf{h}^S = \\mathbf{0}\n$$\nSolving for $\\mathbf{u}$ yields:\n$$\n\\mathbf{u} = -Q_{\\mathcal{T}}^{-1} \\mathbf{h}^S = (-Q_{\\mathcal{T}}^{-1})(-Q_{\\mathcal{T}}^{-1} \\mathbf{r}^S) = (Q_{\\mathcal{T}})^{-2} \\mathbf{r}^S\n$$\nThe conditional mean time to absorption in $S$ from state $j$, $\\xi_j$, is given by the ratio $\\xi_j = u_j / h_j^S$. For the starting state $(0, \\mathrm{A})$, this gives:\n$$\nT_{\\mathrm{cond}} = \\frac{u_{(0,\\mathrm{A})}}{h_{(0,\\mathrm{A})}^S} = \\frac{u[0]}{P_{\\mathrm{succ}}}\n$$\nThis requires $P_{\\mathrm{succ}} > 0$, which is assured in this model as all forward rates are positive.\n\n**Computational Algorithm Summary:**\n1.  Construct the $2N \\times 2N$ transient sub-generator matrix $Q_{\\mathcal{T}}$ and the $2N \\times 1$ success-rate vector $\\mathbf{r}^S$ based on the input parameters.\n2.  Solve the linear system $Q_{\\mathcal{T}} \\mathbf{h}^S = -\\mathbf{r}^S$ to find the success probability vector $\\mathbf{h}^S$. The required probability is $P_{\\mathrm{succ}} = \\mathbf{h}^S[0]$.\n3.  Solve the linear system $Q_{\\mathcal{T}} \\mathbf{u} = -\\mathbf{h}^S$ to find the vector $\\mathbf{u}$.\n4.  Calculate the conditional mean time $T_{\\mathrm{cond}} = \\mathbf{u}[0] / P_{\\mathrm{succ}}$.\n5.  Evaluate the efficiency criterion: $(P_{\\mathrm{succ}} \\ge P_{\\min}) \\land (T_{\\mathrm{cond}} \\le T_{\\max})$.\nNumerically, solving linear systems is preferred over explicit matrix inversion for stability and efficiency.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the intracellular cargo routing problem for a suite of test cases.\n    It orchestrates the setup, calculation, and formatting of the final output.\n    \"\"\"\n\n    test_cases = [\n        (6, 5, 2.5, 2.0, 0.85, 0.05, 0.20, 0.05, 0.60, 2.0, 0.70, 6.0),\n        (6, 5, 2.0, 2.5, 0.60, 0.30, 0.10, 0.20, 0.10, 5.0, 0.50, 10.0),\n        (7, 6, 2.0, 3.0, 0.40, 0.25, 0.05, 0.10, 0.70, 1.5, 0.30, 8.0),\n        (5, 4, 3.0, 2.0, 0.90, 0.02, 0.30, 0.00, 0.80, 1.0, 0.95, 4.0),\n        (5, 4, 2.2, 2.2, 0.50, 0.10, 0.10, 0.15, 0.50, 3.0, 0.40, 7.0),\n    ]\n\n    results = []\n    for params in test_cases:\n        p_succ, t_cond, efficient = calculate_delivery_metrics(*params)\n        results.extend([f\"{p_succ:.6f}\", f\"{t_cond:.6f}\", str(efficient)])\n\n    print(f\"[{','.join(results)}]\")\n\ndef calculate_delivery_metrics(N, b, k_plus, k_minus, p_plus, sigma_AR, sigma_RA, k_off, beta, alpha, P_min, T_max):\n    \"\"\"\n    Calculates delivery efficiency and conditional mean time for a single parameter set.\n\n    This function implements the first-passage analysis of the Continuous-Time Markov Chain\n    model of axonal transport.\n\n    Args:\n        N, b, k_plus, k_minus, p_plus, sigma_AR, sigma_RA, k_off, beta, alpha, P_min, T_max:\n        Parameters defining the model and efficiency criteria.\n\n    Returns:\n        A tuple (P_succ, T_cond, efficient) containing the success probability,\n        conditional mean delivery time, and a boolean indicating if delivery is efficient.\n    \"\"\"\n    dim = 2 * N\n    Q_T = np.zeros((dim, dim))\n    r_S = np.zeros(dim)\n    p_minus = 1.0 - p_plus\n\n    for i in range(N):\n        # State (i, A) corresponds to index 2*i\n        # State (i, R) corresponds to index 2*i + 1\n        idx_A = 2 * i\n        idx_R = 2 * i + 1\n\n        # --- Transitions from state (i, A) ---\n        \n        # Anterograde step rate\n        rate_antero = k_plus * p_plus\n        if i == b:\n            rate_antero *= beta\n        \n        if i  N - 1:\n            # Transition to (i+1, A)\n            Q_T[idx_A, 2 * (i + 1)] = rate_antero\n        else: # i == N - 1\n            # Transition to success state N\n            r_S[idx_A] = rate_antero\n\n        # Switching A -> R rate\n        rate_switch_AR = sigma_AR\n        if i == b:\n            rate_switch_AR *= alpha\n        Q_T[idx_A, idx_R] = rate_switch_AR\n\n        # Diagonal element for (i, A)\n        total_exit_rate_A = rate_antero + rate_switch_AR + k_off\n        Q_T[idx_A, idx_A] = -total_exit_rate_A\n\n        # --- Transitions from state (i, R) ---\n        \n        # Retrograde step rate\n        rate_retro = 0.0\n        if i > 0:\n            rate_retro = k_minus * p_minus\n            Q_T[idx_R, 2 * (i - 1) + 1] = rate_retro\n\n        # Switching R -> A rate\n        rate_switch_RA = sigma_RA\n        if i == b:\n            rate_switch_RA *= alpha\n        Q_T[idx_R, idx_A] = rate_switch_RA\n\n        # Diagonal element for (i, R)\n        total_exit_rate_R = rate_retro + rate_switch_RA + k_off\n        Q_T[idx_R, idx_R] = -total_exit_rate_R\n\n    # --- Solve for P_succ and T_cond using first-passage analysis ---\n\n    # 1. Solve for success probabilities h_S: Q_T * h_S = -r_S\n    h_S = np.linalg.solve(Q_T, -r_S)\n    P_succ = h_S[0]  # Start state is (0, A) at index 0\n\n    # 2. Solve for uncentered conditional times u: Q_T * u = -h_S\n    u = np.linalg.solve(Q_T, -h_S)\n    u_0 = u[0]\n\n    # 3. Calculate conditional mean time T_cond\n    if P_succ > 1e-12: # Check for non-zero probability to avoid division by zero\n        T_cond = u_0 / P_succ\n    else:\n        T_cond = float('inf')\n\n    # 4. Check efficiency criterion\n    is_efficient = (P_succ >= P_min) and (T_cond = T_max)\n\n    return P_succ, T_cond, is_efficient\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2765328"}]}