{"hands_on_practices": [{"introduction": "The signaling capacity of any neurotransmitter begins at its source. For unconventional transmitters like nitric oxide (NO), synthesis is not vesicular but enzymatic and on-demand. This exercise [@problem_id:2770512] provides a hands-on opportunity to quantify the production of NO by applying fundamental principles of enzyme kinetics to a realistic cellular scenario. By integrating parameters such as enzyme concentration, activation state, and substrate availability, you will derive the volumetric production flux density, connecting abstract kinetic theory to a concrete physiological output in a postsynaptic spine.", "problem": "Nitric oxide synthase (NOS) in neurons functions as a homodimer with one catalytic active site per monomer. In an activated postsynaptic spine, the neuronal nitric oxide synthase (nNOS) population can be described by a total monomer concentration $[E_T]$, of which a fraction $f_d$ is assembled into catalytically competent dimers (so that the concentration of active sites equals the concentration of monomers present in dimers). Calcium–calmodulin binding gates catalysis with an activation fraction $f_{\\text{act}}$. Substrate and oxygen availability limit the catalytic rate through the usual Michaelis–Menten fractional saturation $\\theta$, defined as $\\theta = \\frac{[S]}{K_M + [S]}$, but here you may take $\\theta$ as a given constant. The turnover number $k_{\\text{cat}}$ is defined as the maximal number of product molecules formed per active site per unit time at saturating substrate. Assume that all other cofactors are not rate limiting and that nitric oxide (NO) consumption and diffusion do not affect the instantaneous production rate on the timescale of interest.\n\nStarting from these definitions, first derive the expression for the volumetric NO production flux density $J$ (molar production rate per unit volume) in terms of $k_{\\text{cat}}$, $[E_T]$, $f_d$, $f_{\\text{act}}$, and $\\theta$. Then, using the following physiologically plausible parameters for an activated postsynaptic spine,\n- total nNOS monomer concentration $[E_T] = 0.25\\ \\mu\\mathrm{M}$,\n- dimerization fraction $f_d = 0.85$,\n- calcium–calmodulin activation fraction $f_{\\text{act}} = 0.70$,\n- fractional substrate saturation $\\theta = 0.75$,\n- turnover number $k_{\\text{cat}} = 15\\ \\mathrm{s^{-1}}$,\ncompute the maximal instantaneous NO production flux density per unit volume.\n\nExpress your final result in $\\mathrm{nM\\ ms^{-1}}$ and round your answer to four significant figures.", "solution": "The problem presented is a well-posed exercise in enzyme kinetics applied to a specific neurobiological system. It is scientifically grounded, logically consistent, and provides all necessary parameters for a unique solution. We shall proceed.\n\nThe task is to derive an expression for the volumetric nitric oxide (NO) production flux density, denoted as $J$, and then to compute its numerical value based on the provided parameters. The quantity $J$ represents the molar production rate per unit volume.\n\nFirst, we must determine the concentration of catalytically active enzyme sites.\nThe total concentration of nitric oxide synthase (nNOS) monomers is given as $[E_T]$.\nAccording to the problem, only monomers assembled into homodimers are catalytically competent. The fraction of monomers present in these dimers is $f_d$. Therefore, the concentration of monomers that are part of a catalytically competent structure is:\n$$ [E]_{\\text{dimerized monomers}} = [E_T] f_d $$\nThe problem states that each monomer possesses one catalytic active site. Thus, the concentration of potential active sites is equal to the concentration of monomers in the dimeric state.\n$$ [E]_{\\text{potential sites}} = [E_T] f_d $$\nHowever, not all these sites are active at any given moment. Catalysis is gated by calcium-calmodulin binding, and the fraction of sites that are actually activated is given by $f_{\\text{act}}$. The concentration of truly active sites, $[E]_{\\text{active}}$, is therefore:\n$$ [E]_{\\text{active}} = [E]_{\\text{potential sites}} \\times f_{\\text{act}} = [E_T] f_d f_{\\text{act}} $$\nNext, we determine the rate of product formation per active site. The turnover number, $k_{\\text{cat}}$, is the maximal rate of product formation per active site, which occurs under saturating substrate conditions. The problem specifies that substrate availability is not saturating and that the actual rate is modulated by the Michaelis-Menten fractional saturation, $\\theta$. The effective catalytic rate per active site is thus the product of the maximal rate and the saturation fraction:\n$$ v_{\\text{site}} = k_{\\text{cat}} \\theta $$\nThe total volumetric production flux density, $J$, is the product of the concentration of active sites and the rate of catalysis per site.\n$$ J = [E]_{\\text{active}} \\times v_{\\text{site}} $$\nSubstituting the expressions we derived for $[E]_{\\text{active}}$ and $v_{\\text{site}}$ gives the final general expression for $J$:\n$$ J = ([E_T] f_d f_{\\text{act}}) \\times (k_{\\text{cat}} \\theta) $$\n$$ J = k_{\\text{cat}} [E_T] f_d f_{\\text{act}} \\theta $$\nThis is the required analytical expression.\n\nNow, we compute the numerical value of $J$ using the given parameters:\n- Total nNOS monomer concentration: $[E_T] = 0.25\\ \\mu\\mathrm{M} = 0.25 \\times 10^{-6}\\ \\mathrm{M}$\n- Dimerization fraction: $f_d = 0.85$\n- Calcium-calmodulin activation fraction: $f_{\\text{act}} = 0.70$\n- Fractional substrate saturation: $\\theta = 0.75$\n- Turnover number: $k_{\\text{cat}} = 15\\ \\mathrm{s^{-1}}$\n\nSubstituting these values into our derived expression:\n$$ J = (15\\ \\mathrm{s^{-1}}) \\times (0.25 \\times 10^{-6}\\ \\mathrm{M}) \\times (0.85) \\times (0.70) \\times (0.75) $$\nPerforming the multiplication of the numerical factors:\n$$ J = (15 \\times 0.25 \\times 0.85 \\times 0.70 \\times 0.75) \\times 10^{-6}\\ \\mathrm{M \\cdot s^{-1}} $$\n$$ J = 1.6734375 \\times 10^{-6}\\ \\mathrm{M \\cdot s^{-1}} $$\nThe problem requires the final answer in units of nanomoles per liter per millisecond ($\\mathrm{nM\\ ms^{-1}}$). We must perform a unit conversion.\nWe have the conversion factors:\n$1\\ \\mathrm{M} = 10^9\\ \\mathrm{nM}$\n$1\\ \\mathrm{s} = 10^3\\ \\mathrm{ms}$\n\nLet us rewrite the expression for $J$ with explicit units and conversion factors:\n$$ J = 1.6734375 \\times 10^{-6}\\ \\frac{\\mathrm{mol}}{\\mathrm{L} \\cdot \\mathrm{s}} \\times \\left(\\frac{10^9\\ \\mathrm{nmol}}{1\\ \\mathrm{mol}}\\right) \\times \\left(\\frac{1\\ \\mathrm{s}}{10^3\\ \\mathrm{ms}}\\right) $$\nThe conversion simplifies the powers of $10$:\n$$ J = 1.6734375 \\times 10^{-6} \\times 10^9 \\times 10^{-3}\\ \\frac{\\mathrm{nmol}}{\\mathrm{L} \\cdot \\mathrm{ms}} $$\n$$ J = 1.6734375 \\times 10^{(-6+9-3)}\\ \\mathrm{nM \\cdot ms^{-1}} $$\n$$ J = 1.6734375 \\times 10^0\\ \\mathrm{nM \\cdot ms^{-1}} $$\n$$ J = 1.6734375\\ \\mathrm{nM \\cdot ms^{-1}} $$\nFinally, we must round this result to four significant figures. The fifth significant figure is $4$, which is less than $5$, so we round down.\n$$ J \\approx 1.673\\ \\mathrm{nM \\cdot ms^{-1}} $$\nThis is the maximal instantaneous NO production flux density under the specified conditions.", "answer": "$$\n\\boxed{1.673}\n$$", "id": "2770512"}, {"introduction": "Unlike classical neurotransmitters confined to a synaptic cleft, NO diffuses freely through tissue, a property that defines its function. A critical question, therefore, is: how far can it travel before being eliminated? This practice [@problem_id:2770565] explores the biophysical principles of reaction-diffusion that govern the spatial reach of NO. By deriving and calculating the characteristic decay length, $\\lambda = \\sqrt{D/k}$, you will gain a quantitative understanding of the volume of influence of an NO source and be able to evaluate its plausibility as a retrograde messenger capable of signaling between cells.", "problem": "Nitric oxide (NO) is an unconventional neurotransmitter that diffuses freely through brain tissue and is removed by first-order reactions with an effective rate constant. In homogeneous, isotropic tissue with no bulk flow, the concentration field of NO, denoted by $C(\\mathbf{r},t)$, obeys a reaction-diffusion equation with diffusion coefficient $D$ and first-order consumption rate constant $k$. Consider a quasi-steady scenario in which a localized region continuously produces NO at a slow, steady rate, so that away from the source region the field satisfies a steady balance between diffusion and first-order consumption. Starting from the steady-state balance implied by diffusion and first-order consumption, derive the characteristic distance over which NO concentration decays by a factor of $1/e$ from its local maximal value along a line extending away from the source in one dimension. Then, using your derived expression, compute this distance given $D = 3.3 \\times 10^{3}$ micrometer$^{2}$ per second and $k = 3.5$ per second. Express the final distance in micrometers and round your numerical answer to three significant figures.\n\nIn your reasoning, briefly comment on how this characteristic distance compares to a typical synaptic separation of $0.5$ micrometers to assess the feasibility of retrograde signaling by NO. The final reported answer must be only the single numerical value for the distance (in micrometers) as specified above.", "solution": "We begin from the fundamental reaction-diffusion description for a freely diffusing species subject to first-order consumption in homogeneous, isotropic medium. The concentration field $C(\\mathbf{r},t)$ satisfies\n$$\n\\frac{\\partial C}{\\partial t} = D \\nabla^{2} C - k C + S(\\mathbf{r},t),\n$$\nwhere $D$ is the diffusion coefficient, $k$ is the first-order consumption rate constant, and $S(\\mathbf{r},t)$ represents sources. In a quasi-steady regime with continuous production localized to a small region, we examine the spatial profile sufficiently far from the source region where $S(\\mathbf{r},t)$ can be neglected and the profile is time-independent. Thus, the steady-state equation away from sources is\n$$\n0 = D \\nabla^{2} C - k C.\n$$\n\nTo extract the characteristic spatial decay scale from first principles, we consider the one-dimensional form along a ray extending away from the source region. Denoting the coordinate by $x$, where $x \\ge 0$, the equation becomes\n$$\nD \\frac{d^{2} C}{d x^{2}} - k C = 0.\n$$\nWe seek a bounded solution that decays as $x \\to \\infty$. A standard approach is to use an exponential trial solution of the form\n$$\nC(x) = A \\exp\\!\\left(-\\frac{x}{\\lambda}\\right),\n$$\nwhere $A$ is a constant reflecting the local maximal value near the source and $\\lambda$ is a positive length scale to be determined. Substituting into the differential equation,\n$$\nD \\frac{d^{2}}{d x^{2}}\\left[A \\exp\\!\\left(-\\frac{x}{\\lambda}\\right)\\right] - k A \\exp\\!\\left(-\\frac{x}{\\lambda}\\right) = 0,\n$$\n$$\nD \\left[A \\left(\\frac{1}{\\lambda^{2}}\\right) \\exp\\!\\left(-\\frac{x}{\\lambda}\\right)\\right] - k A \\exp\\!\\left(-\\frac{x}{\\lambda}\\right) = 0.\n$$\nDividing by $A \\exp(-x/\\lambda)$ (which is nonzero for all $x$) yields\n$$\nD \\frac{1}{\\lambda^{2}} - k = 0 \\quad \\Rightarrow \\quad \\lambda^{2} = \\frac{D}{k}.\n$$\nTherefore, the characteristic length scale is\n$$\n\\lambda = \\sqrt{\\frac{D}{k}}.\n$$\nBy construction of the exponential profile, the concentration decreases by a factor of $1/e$ when $x$ increases by $\\lambda$, since\n$$\n\\frac{C(x+\\lambda)}{C(x)} = \\exp\\!\\left(-\\frac{\\lambda}{\\lambda}\\right) = \\frac{1}{e}.\n$$\nHence, the distance to $1/e$ concentration relative to the local maximal value along the line is $\\lambda$.\n\nWe now compute the numerical value for the given parameters. Using $D = 3.3 \\times 10^{3}$ micrometer$^{2}$ per second and $k = 3.5$ per second,\n$$\n\\lambda = \\sqrt{\\frac{D}{k}} = \\sqrt{\\frac{3.3 \\times 10^{3}}{3.5}} \\;\\text{micrometers}.\n$$\nFirst evaluate the ratio inside the square root:\n$$\n\\frac{3.3 \\times 10^{3}}{3.5} \\approx 9.4285714286 \\times 10^{2}.\n$$\nTaking the square root,\n$$\n\\lambda \\approx \\sqrt{9.4285714286 \\times 10^{2}} \\approx 30.708 \\;\\text{micrometers}.\n$$\nRounding to three significant figures as required gives\n$$\n\\lambda \\approx 30.7 \\;\\text{micrometers}.\n$$\n\nInterpretation relative to synaptic distances: a typical synaptic separation is on the order of $0.5$ micrometers, and a synaptic cleft is about $0.02$ micrometers. The characteristic decay length of approximately $30.7$ micrometers is much larger than these distances. Therefore, under these parameters, nitric oxide can readily span synaptic and near-synaptic distances, supporting the feasibility of retrograde signaling.\n\nPer the instructions, the final reported answer is the single numerical value corresponding to the distance in micrometers, rounded to three significant figures.", "answer": "$$\\boxed{30.7}$$", "id": "2770565"}, {"introduction": "Signaling is an inherently dynamic process involving not just a transmitter, but its downstream effectors. This final practice [@problem_id:2770564] moves from static analysis to dynamic simulation, integrating the entire signaling cascade from an NO pulse to the generation of its key second messenger, cyclic guanosine monophosphate (cGMP). By building a computational model based on coupled ordinary differential equations, you will explore the rise-and-fall kinetics of the cGMP response. This exercise provides critical insight into how the temporal profile of a signal is shaped and how it might be interpreted by the cell to mediate processes like synaptic plasticity.", "problem": "You are asked to construct a program that models the time course of cyclic guanosine monophosphate (cGMP) in a presynaptic bouton in response to a transient nitric oxide (NO) pulse, given first-order NO clearance, soluble guanylyl cyclase (sGC) activation by NO, and first-order degradation by phosphodiesterase (PDE). The goal is to compute the modeled rise–decay kinetics of cGMP and assess whether they are consistent with experimentally observed ranges. The modeling must be expressed and solved as ordinary differential equations grounded in fundamental chemical kinetics.\n\nUse the following modeling assumptions derived from the law of mass action and first-order kinetics:\n- Nitric oxide (NO) concentration, denoted $N(t)$ with units of micromolar ($\\mu\\mathrm{M}$), obeys the first-order balance\n  $$\\frac{dN}{dt} = J(t) - k_{\\mathrm{NO}} N(t),$$\n  where $J(t)$ has units $\\mu\\mathrm{M}\\cdot \\mathrm{s}^{-1}$ and represents a release flux that is constant during a brief pulse and zero otherwise, and $k_{\\mathrm{NO}}$ has units $\\mathrm{s}^{-1}$ and represents effective first-order loss (e.g., by diffusion and scavenging). The NO pulse is specified by\n  $$J(t) = \\begin{cases}\n  J_0 & \\text{for } 0 \\le t \\le T_{\\mathrm{pulse}},\\\\\n  0 & \\text{for } t > T_{\\mathrm{pulse}},\n  \\end{cases}$$\n  with $N(0) = 0$.\n- The fraction of sGC active sites occupied by NO is modeled by the equilibrium binding fraction for a single binding site (Hill-Langmuir isotherm with Hill coefficient $n=1$),\n  $$f\\bigl(N(t)\\bigr) = \\frac{N(t)}{K_{\\mathrm{act}} + N(t)},$$\n  where $K_{\\mathrm{act}}$ is the half-activation concentration (units $\\mu\\mathrm{M}$).\n- The cGMP concentration, denoted $C(t)$ with units $\\mu\\mathrm{M}$, evolves by production from sGC and first-order degradation by PDE:\n  $$\\frac{dC}{dt} = V_{\\mathrm{basal}} + V_{\\max} f\\bigl(N(t)\\bigr) - k_{\\mathrm{PDE}} C(t),$$\n  where $V_{\\mathrm{basal}}$ is the basal cGMP production rate (units $\\mu\\mathrm{M}\\cdot \\mathrm{s}^{-1}$), $V_{\\max}$ is the maximal sGC-mediated cGMP production rate (units $\\mu\\mathrm{M}\\cdot \\mathrm{s}^{-1}$), and $k_{\\mathrm{PDE}}$ is the first-order degradation rate constant (units $\\mathrm{s}^{-1}$). Assume the initial cGMP concentration at $t=0$ equals its steady state under basal production, i.e.,\n  $$C(0) = \\frac{V_{\\mathrm{basal}}}{k_{\\mathrm{PDE}}}.$$\n\nNumerically integrate the coupled system for $N(t)$ and $C(t)$ using a fixed time step from $t=0$ to $t=t_{\\mathrm{end}}$ with step size $\\Delta t$. Use a method that provides at least local truncation error of order greater than or equal to $O(\\Delta t^2)$.\n\nFrom the computed $C(t)$ trace, compute the following kinetic metrics:\n- The baseline $C_{\\mathrm{base}} = C(0)$.\n- The peak value $C_{\\mathrm{peak}}$ and time of peak $t_{\\mathrm{peak}}$.\n- The response amplitude $A = C_{\\mathrm{peak}} - C_{\\mathrm{base}}$.\n- The $10$–$90$ rise time, defined as $t_{90} - t_{10}$, where $t_{10}$ and $t_{90}$ are the first times before $t_{\\mathrm{peak}}$ at which $C(t)$ reaches $C_{\\mathrm{base}} + 0.1 A$ and $C_{\\mathrm{base}} + 0.9 A$, respectively. If such crossings do not occur before $t_{\\mathrm{peak}}$, the rise time is undefined.\n- The decay time constant proxy $\\tau_{\\mathrm{decay}}$, defined as the time after $t_{\\mathrm{peak}}$ needed for $C(t)$ to reach $C_{\\mathrm{base}} + A/e$. If this level is not reached by $t_{\\mathrm{end}}$, then $\\tau_{\\mathrm{decay}}$ is undefined.\n\nDefine a minimum detectable amplitude $C_{\\min}$; if $A < C_{\\min}$, declare the response non-detectable and treat the kinetic metrics as undefined.\n\nAn experimental consistency check is defined as follows. A model trace is deemed consistent if and only if all of the following are true:\n- The response is detectable, i.e., $A \\ge C_{\\min}$.\n- The rise time lies within the interval $\\left[t_{\\mathrm{rise,min}}, t_{\\mathrm{rise,max}}\\right]$ (inclusive).\n- The decay time proxy lies within the interval $\\left[\\tau_{\\min}, \\tau_{\\max}\\right]$ (inclusive).\n\nUse the following fixed numerical settings for all test cases:\n- Time step $\\Delta t = 0.0005\\ \\mathrm{s}$ and simulation horizon $t_{\\mathrm{end}} = 5.0\\ \\mathrm{s}$.\n- Minimum detectable amplitude $C_{\\min} = 0.005\\ \\mu\\mathrm{M}$.\n- Acceptable rise-time window $\\left[t_{\\mathrm{rise,min}}, t_{\\mathrm{rise,max}}\\right] = \\left[0.05\\ \\mathrm{s}, 0.30\\ \\mathrm{s}\\right]$.\n- Acceptable decay window $\\left[\\tau_{\\min}, \\tau_{\\max}\\right] = \\left[0.30\\ \\mathrm{s}, 2.50\\ \\mathrm{s}\\right]$.\n\nImplement and evaluate the following test suite, one line per test case with all parameters given in units as above. Each test case is a $7$-tuple $(J_0, T_{\\mathrm{pulse}}, k_{\\mathrm{NO}}, V_{\\max}, K_{\\mathrm{act}}, V_{\\mathrm{basal}}, k_{\\mathrm{PDE}})$:\n- Case $1$: $(0.50,\\ 0.05,\\ 5.00,\\ 1.00,\\ 0.10,\\ 0.010,\\ 1.00)$\n- Case $2$: $(0.50,\\ 0.05,\\ 5.00,\\ 1.00,\\ 0.10,\\ 0.010,\\ 3.00)$\n- Case $3$: $(0.50,\\ 0.05,\\ 5.00,\\ 1.00,\\ 0.10,\\ 0.010,\\ 0.50)$\n- Case $4$: $(0.020,\\ 0.05,\\ 5.00,\\ 1.00,\\ 0.10,\\ 0.010,\\ 1.00)$\n\nYour program must:\n- Numerically integrate the system for each test case.\n- Extract $t_{10}$, $t_{90}$, and $\\tau_{\\mathrm{decay}}$ as defined above using linear interpolation between time steps when crossings occur.\n- For each case, return a boolean indicating experimental consistency according to the stated rules.\n\nFinal output format requirement:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (for example, \"[True,False,True,False]\"), ordered as Cases $1$ through $4$.", "solution": "The problem as stated is valid. It is scientifically grounded in the principles of chemical kinetics, specifically the law of mass action and first-order decay processes, which are standard for modeling biochemical signaling pathways. The problem is well-posed, providing a complete system of ordinary differential equations with specified initial conditions and all necessary parameters. The language is objective and the requirements are defined with mathematical precision. Therefore, I will proceed with the formulation and solution.\n\nThe core of the problem is to solve the following system of two coupled first-order ordinary differential equations for the concentrations of nitric oxide, $N(t)$, and cyclic guanosine monophosphate, $C(t)$:\n\n$$\n\\frac{dN}{dt} = J(t) - k_{\\mathrm{NO}} N(t)\n$$\n$$\n\\frac{dC}{dt} = V_{\\mathrm{basal}} + V_{\\max} f\\bigl(N(t)\\bigr) - k_{\\mathrm{PDE}} C(t)\n$$\n\nThe functions and parameters are defined as:\n- The NO flux $J(t)$ is a square pulse:\n  $$J(t) = \\begin{cases}\n  J_0 & \\text{for } 0 \\le t \\le T_{\\mathrm{pulse}},\\\\\n  0 & \\text{for } t > T_{\\mathrm{pulse}}.\n  \\end{cases}$$\n- The activation fraction of soluble guanylyl cyclase (sGC) is given by the Hill-Langmuir isotherm:\n  $$f\\bigl(N(t)\\bigr) = \\frac{N(t)}{K_{\\mathrm{act}} + N(t)}$$\n- The initial conditions are $N(0) = 0$ and the pre-stimulus steady-state concentration for cGMP, $C(0) = V_{\\mathrm{basal}} / k_{\\mathrm{PDE}}$.\n\nTo solve this system numerically, a method is required that has a local truncation error of at least order $O(\\Delta t^2)$. While the forward Euler method meets this minimum criterion with a local truncation error of $O(\\Delta t^2)$ (and global error of $O(\\Delta t)$), a more accurate and stable method is preferable and also satisfies the condition. I will employ the second-order Runge-Kutta method, specifically Heun's method (also known as the improved Euler or predictor-corrector method). This method has a local truncation error of $O(\\Delta t^3)$ and a global error of $O(\\Delta t^2)$, robustly satisfying the problem's accuracy requirement.\n\nLet the state vector be $\\mathbf{y}(t) = [N(t), C(t)]^T$. The system of ODEs can be written as $\\frac{d\\mathbf{y}}{dt} = \\mathbf{F}(t, \\mathbf{y})$. Heun's method advances the solution from time $t_n$ to $t_{n+1} = t_n + \\Delta t$ as follows:\n1.  **Predictor step**: A temporary state $\\mathbf{\\tilde{y}}_{n+1}$ is estimated using a simple Euler step.\n    $$ \\mathbf{\\tilde{y}}_{n+1} = \\mathbf{y}_n + \\Delta t \\cdot \\mathbf{F}(t_n, \\mathbf{y}_n) $$\n2.  **Corrector step**: The final state $\\mathbf{y}_{n+1}$ is computed by averaging the slope at the beginning of the interval, $\\mathbf{F}(t_n, \\mathbf{y}_n)$, with the slope at the end of the interval evaluated using the predicted state, $\\mathbf{F}(t_{n+1}, \\mathbf{\\tilde{y}}_{n+1})$.\n    $$ \\mathbf{y}_{n+1} = \\mathbf{y}_n + \\frac{\\Delta t}{2} \\left[ \\mathbf{F}(t_n, \\mathbf{y}_n) + \\mathbf{F}(t_{n+1}, \\mathbf{\\tilde{y}}_{n+1}) \\right] $$\n\nThis integration is performed for each test case from $t=0$ to $t=t_{\\mathrm{end}}$ with a fixed step size $\\Delta t = 0.0005\\ \\mathrm{s}$, generating time series for $N(t)$ and $C(t)$.\n\nFollowing the numerical integration, the cGMP concentration trace $C(t)$ is analyzed to extract kinetic metrics:\n1.  The baseline concentration is $C_{\\mathrm{base}} = C(0)$.\n2.  The peak concentration $C_{\\mathrm{peak}}$ and the time of its occurrence $t_{\\mathrm{peak}}$ are found by identifying the maximum value in the $C(t)$ array.\n3.  The response amplitude is computed as $A = C_{\\mathrm{peak}} - C_{\\mathrm{base}}$.\n4.  A response is deemed non-detectable if $A < C_{\\min}$, where $C_{\\min} = 0.005\\ \\mu\\mathrm{M}$. In such cases, the model is inconsistent, and subsequent metrics are considered undefined.\n5.  If the response is detectable, the $10$–$90$ rise time is calculated. This requires finding the times $t_{10}$ and $t_{90}$ where $C(t)$ first crosses the thresholds $C_{\\mathrm{base}} + 0.1A$ and $C_{\\mathrm{base}} + 0.9A$, respectively, for $t \\le t_{\\mathrm{peak}}$. These crossing times are determined using linear interpolation. If $C(t)$ at a time step $t_i$ first exceeds a threshold $C_{\\mathrm{target}}$ (with $C(t_{i-1}) < C_{\\mathrm{target}}$), the crossing time $t_{\\mathrm{cross}}$ is:\n    $$ t_{\\mathrm{cross}} = t_{i-1} + (t_i - t_{i-1}) \\frac{C_{\\mathrm{target}} - C(t_{i-1})}{C(t_i) - C(t_{i-1})} $$\n    The rise time is $t_{90} - t_{10}$. It is undefined if either threshold is not crossed before $t_{\\mathrm{peak}}$.\n6.  Similarly, the decay time proxy, $\\tau_{\\mathrm{decay}}$, is calculated. This is the time elapsed after $t_{\\mathrm{peak}}$ for $C(t)$ to fall to the level $C_{\\mathrm{base}} + A/e$. The crossing time is found by searching for the first time $t > t_{\\mathrm{peak}}$ where $C(t)$ drops below this threshold, again using linear interpolation. $\\tau_{\\mathrm{decay}}$ is defined as the difference between this crossing time and $t_{\\mathrm{peak}}$. It is undefined if the threshold is not crossed by $t_{\\mathrm{end}}$.\n\nFinally, the experimental consistency for each test case is determined by a boolean AND of a set of conditions:\n- The response must be detectable ($A \\ge C_{\\min}$).\n- The rise time must be defined and lie within the range $[0.05\\ \\mathrm{s}, 0.30\\ \\mathrm{s}]$.\n- The decay time proxy $\\tau_{\\mathrm{decay}}$ must be defined and lie within the range $[0.30\\ \\mathrm{s}, 2.50\\ \\mathrm{s}]$.\n\nA `True` value is returned if all conditions are met; otherwise, `False`. The implementation will proceed exactly as described.\n```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the cGMP signaling model problem for a given set of test cases.\n    \"\"\"\n\n    # Fixed numerical settings\n    dt = 0.0005  # s\n    t_end = 5.0  # s\n    C_min = 0.005  # uM\n    t_rise_min, t_rise_max = 0.05, 0.30  # s\n    tau_min, tau_max = 0.30, 2.50  # s\n\n    # Test cases: (J0, T_pulse, k_NO, V_max, K_act, V_basal, k_PDE)\n    test_cases = [\n        (0.50, 0.05, 5.00, 1.00, 0.10, 0.010, 1.00),\n        (0.50, 0.05, 5.00, 1.00, 0.10, 0.010, 3.00),\n        (0.50, 0.05, 5.00, 1.00, 0.10, 0.010, 0.50),\n        (0.020, 0.05, 5.00, 1.00, 0.10, 0.010, 1.00),\n    ]\n\n    results = []\n    for case in test_cases:\n        result = run_simulation_and_check(case, dt, t_end, C_min, t_rise_min, t_rise_max, tau_min, tau_max)\n        results.append(result)\n\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef run_simulation_and_check(params, dt, t_end, C_min, t_rise_min, t_rise_max, tau_min, tau_max):\n    \"\"\"\n    Runs the simulation for a single test case and performs the consistency check.\n    \"\"\"\n    J0, T_pulse, k_NO, V_max, K_act, V_basal, k_PDE = params\n\n    # Time vector\n    t_steps = int(t_end / dt) + 1\n    t = np.linspace(0, t_end, t_steps)\n\n    # State vectors\n    N = np.zeros(t_steps)\n    C = np.zeros(t_steps)\n\n    # Initial conditions\n    N[0] = 0.0\n    C[0] = V_basal / k_PDE if k_PDE > 0 else 0.0\n\n    # Right-hand side functions for the ODE system\n    def F_N(t_val, N_val, C_val):\n        J_t = J0 if t_val = T_pulse else 0.0\n        return J_t - k_NO * N_val\n\n    def F_C(t_val, N_val, C_val):\n        f_N = N_val / (K_act + N_val) if (K_act + N_val) != 0 else 0.0\n        return V_basal + V_max * f_N - k_PDE * C_val\n        \n    # Heun's method (RK2) integration loop\n    for i in range(t_steps - 1):\n        t_i = t[i]\n        N_i, C_i = N[i], C[i]\n\n        # Predictor step\n        k1_N = F_N(t_i, N_i, C_i)\n        k1_C = F_C(t_i, N_i, C_i)\n        \n        N_tilde = N_i + dt * k1_N\n        C_tilde = C_i + dt * k1_C\n\n        # Corrector step\n        t_i_plus_1 = t[i+1]\n        k2_N = F_N(t_i_plus_1, N_tilde, C_tilde)\n        k2_C = F_C(t_i_plus_1, N_tilde, C_tilde)\n\n        N[i+1] = N_i + (dt / 2.0) * (k1_N + k2_N)\n        C[i+1] = C_i + (dt / 2.0) * (k1_C + k2_C)\n\n    # --- Kinetic Analysis ---\n    C_base = C[0]\n    peak_idx = np.argmax(C)\n    C_peak = C[peak_idx]\n    t_peak = t[peak_idx]\n    \n    A = C_peak - C_base\n    \n    # 1. Check for detectable response\n    if A  C_min:\n        return False\n\n    # Helper for interpolation\n    def find_crossing_time(t_arr, C_arr, target, is_rising):\n        for i in range(1, len(C_arr)):\n            C_prev, C_curr = C_arr[i-1], C_arr[i]\n            t_prev, t_curr = t_arr[i-1], t_arr[i]\n            \n            crosses = (C_prev  target = C_curr) if is_rising else (C_prev > target >= C_curr)\n            \n            if crosses:\n                # Avoid division by zero if C_curr == C_prev\n                if C_curr == C_prev:\n                    return t_curr\n                # Linear interpolation\n                t_cross = t_prev + (t_curr - t_prev) * (target - C_prev) / (C_curr - C_prev)\n                return t_cross\n        return None\n\n    # 2. Calculate 10-90 rise time\n    C10 = C_base + 0.1 * A\n    C90 = C_base + 0.9 * A\n    \n    # Search on the rising phase before the peak\n    rising_indices = peak_idx + 1\n    t10 = find_crossing_time(t[:rising_indices], C[:rising_indices], C10, is_rising=True)\n    t90 = find_crossing_time(t[:rising_indices], C[:rising_indices], C90, is_rising=True)\n\n    if t10 is None or t90 is None:\n        return False # Rise time is undefined\n        \n    rise_time = t90 - t10\n    if not (t_rise_min = rise_time = t_rise_max):\n        return False\n\n    # 3. Calculate decay time proxy\n    C_decay_target = C_base + A / np.e\n    \n    # Search on the decaying phase after the peak\n    decay_start_idx = peak_idx\n    tau_cross_time = find_crossing_time(t[decay_start_idx:], C[decay_start_idx:], C_decay_target, is_rising=False)\n\n    if tau_cross_time is None:\n        return False # Decay time is undefined\n        \n    tau_decay = tau_cross_time - t_peak\n    if not (tau_min = tau_decay = tau_max):\n        return False\n\n    # All checks passed\n    return True\n\nif __name__ == \"__main__\":\n    solve()\n```", "answer": "[True,True,True,False]", "id": "2770564"}]}