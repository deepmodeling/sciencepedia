{"hands_on_practices": [{"introduction": "The Punnett square is an indispensable pedagogical tool for visualizing Mendelian inheritance. However, at its core, it is a graphical representation of fundamental probability theory. This exercise challenges you to move beyond the visual grid and formalize the monohybrid cross using the language of probability, treating gamete fusion as the joint outcome of independent random events [@problem_id:2819168]. By deriving genotype frequencies directly from the laws of segregation and probability, you will solidify your understanding of the mathematical principles that underpin Mendelian genetics.", "problem": "Consider a single autosomal locus with alleles $A$ and $a$ in a diploid organism. Two heterozygous parents mate, so the parental genotypes are $Aa \\times Aa$. Assume classical Mendelian conditions: the Law of Segregation holds so that each heterozygous parent transmits each allele with equal probability, there is random union of gametes, and there is no segregation distortion or differential viability among gametes or zygotes. Using only these fundamental principles together with the addition and multiplication rules of probability, proceed as follows without drawing a Punnett grid: \n\n(1) Define random variables for the maternal and paternal gametic alleles, each taking values in $\\{A,a\\}$. From first principles, formalize the joint distribution of gametic alleles as a $2 \\times 2$ probability matrix whose rows correspond to the paternal gamete allele and whose columns correspond to the maternal gamete allele. \n\n(2) Using that matrix and the definition of genotype as the unordered pair of alleles at this locus, derive the exact values of $P(AA)$, $P(Aa)$, and $P(aa)$ for the offspring. \n\nReport your final answer as a single row matrix $(P(AA),\\,P(Aa),\\,P(aa))$ with entries given as exact fractions. Do not round.", "solution": "Let $M$ be the random variable representing the allele contributed by the maternal gamete, and let $P_{var}$ be the random variable representing the allele contributed by the paternal gamete. Both parents are heterozygous with genotype $Aa$. The sample space for both random variables is the set of alleles, $\\{A, a\\}$.\n\nAccording to the Law of Segregation, a heterozygous parent transmits each of its two alleles with equal probability.\nFor the maternal parent ($Aa$), the probabilities of the alleles in her gametes are:\n$P(M = A) = \\frac{1}{2}$\n$P(M = a) = \\frac{1}{2}$\n\nSimilarly, for the paternal parent ($Aa$), the probabilities of the alleles in his gametes are:\n$P(P_{var} = A) = \\frac{1}{2}$\n$P(P_{var} = a) = \\frac{1}{2}$\n\n**Part (1): Joint Distribution of Gametic Alleles**\nThe problem states there is a random union of gametes. In probabilistic terms, this means that the choice of the maternal allele and the choice of the paternal allele are independent events. The joint probability of a specific paternal allele and a specific maternal allele combining is given by the multiplication rule for independent events:\n$P(P_{var}=i, M=j) = P(P_{var}=i) \\times P(M=j)$ for any alleles $i, j \\in \\{A, a\\}$.\n\nWe can now construct the $2 \\times 2$ joint probability matrix, where rows represent the paternal allele and columns represent the maternal allele.\n-   $P(P_{var}=A, M=A) = P(P_{var}=A) \\times P(M=A) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$.\n-   $P(P_{var}=A, M=a) = P(P_{var}=A) \\times P(M=a) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$.\n-   $P(P_{var}=a, M=A) = P(P_{var}=a) \\times P(M=A) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$.\n-   $P(P_{var}=a, M=a) = P(P_{var}=a) \\times P(M=a) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$.\n\nThe resulting joint probability matrix is:\n$$\n\\begin{array}{c|cc}\n  & M=A & M=a \\\\\n\\hline\nP_{var}=A & \\frac{1}{4} & \\frac{1}{4} \\\\\nP_{var}=a & \\frac{1}{4} & \\frac{1}{4}\n\\end{array}\n$$\n\n**Part (2): Derivation of Offspring Genotype Probabilities**\nThe genotype of the offspring is the unordered pair of alleles inherited from the parents. We use the joint probability matrix and the addition rule for mutually exclusive events to find the probabilities of the three possible genotypes: $AA$, $Aa$, and $aa$.\n\n-   **Probability of genotype $AA$**: This genotype is formed by inheriting an $A$ allele from the father and an $A$ allele from the mother.\n    $$P(AA) = P(P_{var}=A, M=A) = \\frac{1}{4}$$\n\n-   **Probability of genotype $aa$**: This genotype is formed by inheriting an $a$ allele from the father and an $a$ allele from the mother.\n    $$P(aa) = P(P_{var}=a, M=a) = \\frac{1}{4}$$\n\n-   **Probability of genotype $Aa$**: This genotype is formed if the offspring inherits one $A$ allele and one $a$ allele. This can happen in two mutually exclusive ways: (1) inheriting $A$ from the father and $a$ from the mother, or (2) inheriting $a$ from the father and $A$ from the mother.\n    $$P(Aa) = P(P_{var}=A, M=a) + P(P_{var}=a, M=A)$$\n    $$P(Aa) = \\frac{1}{4} + \\frac{1}{4} = \\frac{2}{4} = \\frac{1}{2}$$\n\nThe probabilities of the offspring genotypes are $P(AA) = \\frac{1}{4}$, $P(Aa) = \\frac{1}{2}$, and $P(aa) = \\frac{1}{4}$. The sum of these probabilities is $\\frac{1}{4} + \\frac{1}{2} + \\frac{1}{4} = 1$, as expected.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1}{4} & \\frac{1}{2} & \\frac{1}{4}\n\\end{pmatrix}\n}\n$$", "id": "2819168"}, {"introduction": "Mendelian principles are not confined to autosomal chromosomes. This problem extends your analysis to X-linked inheritance, a common pattern with distinct implications for males and females. Furthermore, it introduces the powerful concept of Bayesian inference, demonstrating how we can update an initial probability in light of new evidence [@problem_id:2819132]. You will calculate a woman's initial risk of being a carrier based on her family history and then refine that probability after observing the phenotype of her son, a process central to genetic counseling.", "problem": "A single-locus X-linked recessive trait is determined by a mutant allele $a$ and a wild-type allele $A$. Under complete penetrance, males with genotype $X^{a}Y$ are affected and males with genotype $X^{A}Y$ are unaffected; females are affected only if $X^{a}X^{a}$, and heterozygous females $X^{A}X^{a}$ are phenotypically unaffected carriers. Assume negligible new mutation and that mating partners are unrelated and unaffected unless stated otherwise.\n\nConsider a woman $W$ whose full brother $B$ is affected and whose father $F$ is unaffected; the mother $M$ is phenotypically unaffected. Part 1: Using only the definitions above and Mendelian segregation for sex chromosomes, compute the prior probability that $W$ is a heterozygous carrier before she has any children. Part 2: $W$ later has exactly one son $S$ with an unrelated, unaffected male partner, and $S$ is phenotypically unaffected. Update the probability that $W$ is a carrier in light of this observation, using first principles of conditional probability grounded in Mendelian segregation.\n\nExpress both the prior and the updated probabilities as exact fractions. Do not round. Provide your final answer as a row vector $\\big(P_{\\text{prior}},\\,P_{\\text{posterior}}\\big)$.", "solution": "Let $A$ denote the wild-type allele and $a$ denote the mutant allele for the X-linked trait. The genotypes and phenotypes are:\n- Males: $X^{A}Y$ (unaffected), $X^{a}Y$ (affected)\n- Females: $X^{A}X^{A}$ (unaffected), $X^{A}X^{a}$ (unaffected carrier), $X^{a}X^{a}$ (affected)\n\nFirst, we determine the genotypes of the parents, mother $M$ and father $F$, from the given family history:\n- The father $F$ is unaffected, so his genotype is $X^{A}Y$.\n- The brother $B$ is affected, so his genotype is $X^{a}Y$. A son inherits his X chromosome from his mother. Therefore, the mother $M$ must possess an $X^{a}$ allele.\n- The mother $M$ is phenotypically unaffected, so her genotype cannot be $X^{a}X^{a}$.\nCombining these facts, we conclude with certainty that the mother's genotype is $X^{A}X^{a}$.\n\n**Part 1: Prior Probability**\n\nWe compute the prior probability that the woman $W$ is a heterozygous carrier ($X^{A}X^{a}$). $W$ is the daughter of mother $M$ (genotype $X^{A}X^{a}$) and father $F$ (genotype $X^{A}Y$).\n\nA daughter inherits one X chromosome from her mother and one from her father:\n- From her father $F$ ($X^{A}Y$), she must inherit the $X^{A}$ chromosome.\n- From her mother $M$ ($X^{A}X^{a}$), she inherits either the $X^{A}$ allele or the $X^{a}$ allele, each with a probability of $\\frac{1}{2}$ due to Mendelian segregation.\n\nThe two possible genotypes for $W$ are:\n1. Inherits $X^{A}$ from mother: Genotype is $X^{A}X^{A}$ (non-carrier). The probability of this is $\\frac{1}{2}$.\n2. Inherits $X^{a}$ from mother: Genotype is $X^{A}X^{a}$ (carrier). The probability of this is $\\frac{1}{2}$.\n\nThus, the prior probability that $W$ is a carrier is:\n$$ P_{\\text{prior}} = P(W \\text{ is } X^{A}X^{a}) = \\frac{1}{2} $$\n\n**Part 2: Posterior Probability**\n\nNow we update this probability using the new evidence ($E$): $W$'s son, $S$, is unaffected. An unaffected son has genotype $X^{A}Y$. Let $C$ be the event that $W$ is a carrier ($X^{A}X^{a}$), and $NC$ be the event she is a non-carrier ($X^{A}X^{A}$). We seek the posterior probability $P(C|E)$ using Bayes' theorem:\n$$ P(C|E) = \\frac{P(E|C) P(C)}{P(E|C) P(C) + P(E|NC) P(NC)} $$\n\nWe have the prior probabilities from Part 1:\n- $P(C) = \\frac{1}{2}$\n- $P(NC) = \\frac{1}{2}$\n\nNext, we need the conditional probabilities (likelihoods):\n- $P(E|C)$: The probability the son is unaffected ($X^{A}Y$), given $W$ is a carrier ($X^{A}X^{a}$). If the mother is a carrier, she passes on $X^{A}$ with probability $\\frac{1}{2}$. So, $P(E|C) = \\frac{1}{2}$.\n- $P(E|NC)$: The probability the son is unaffected ($X^{A}Y$), given $W$ is a non-carrier ($X^{A}X^{A}$). If the mother is a non-carrier, she can only pass on $X^{A}$. Her son is guaranteed to be unaffected. So, $P(E|NC) = 1$.\n\nSubstituting these values into the formula:\n$$ P_{\\text{posterior}} = P(C|E) = \\frac{(\\frac{1}{2}) \\cdot (\\frac{1}{2})}{(\\frac{1}{2}) \\cdot (\\frac{1}{2}) + (1) \\cdot (\\frac{1}{2})} = \\frac{\\frac{1}{4}}{\\frac{1}{4} + \\frac{1}{2}} = \\frac{\\frac{1}{4}}{\\frac{3}{4}} = \\frac{1}{3} $$\n\nThe prior probability of $W$ being a carrier was $\\frac{1}{2}$. After observing her unaffected son, the posterior probability is reduced to $\\frac{1}{3}$. The final answer is the ordered pair $(P_{\\text{prior}}, P_{\\text{posterior}})$.", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{2} & \\frac{1}{3} \\end{pmatrix}}\n$$", "id": "2819132"}, {"introduction": "In the age of bioinformatics, translating biological principles into computational algorithms is an essential skill. This exercise requires you to codify the rules of a monohybrid cross into a functional program that generates a Punnett square and calculates offspring genotype probabilities [@problem_id:2819142]. By thinking algorithmically about gamete formation and random union, you will gain a more rigorous, procedural understanding of Mendelian inheritance and appreciate how these foundational concepts can be automated and scaled for complex genetic analysis.", "problem": "Implement a program that constructs a Punnett square for any bi-allelic monohybrid cross directly from two parental genotypes, and validates the resulting offspring genotype distribution against expected values for a small test suite. Your design must start from the following fundamental principles and definitions: (i) Mendel’s law of segregation, which states that in a heterozygous diploid parent the two alleles segregate such that each gamete receives exactly one allele with equal probability; (ii) random union of gametes at fertilization; (iii) a genotype is an ordered pair of alleles at a single locus, here restricted to a single letter with uppercase denoting the dominant allele and its lowercase counterpart denoting the recessive allele; (iv) a monohybrid cross involves exactly one locus with two alleles. From these, derive a general algorithm that generates a $2 \\times 2$ Punnett square as the Cartesian product of the two parents’ gamete sets and uses the square to compute genotype probabilities.\n\nConstraints and assumptions:\n- Input representation: Each parental genotype is provided as a string of length $2$ over a single letter with case indicating allele state, for example \"AA\", \"Aa\", \"aA\", \"aa\", \"Bb\". Both characters of a genotype must be the same letter ignoring case; the two parents must refer to the same letter ignoring case.\n- Gamete formation: Under Mendel’s law of segregation, a homozygote produces two identical gametes (both the same allele), and a heterozygote produces two different gametes, each with probability $1/2$.\n- Punnett square construction: Always form a $2 \\times 2$ square using the two gametes from the first parent as row headers and the two gametes from the second parent as column headers. Fill each cell by combining the row and column allele into an offspring genotype and canonicalizing it by placing the uppercase allele (if present) first, e.g., \"Aa\" not \"aA\".\n- Probability model: Because each row and each column is selected with probability $1/2$, every cell in the $2 \\times 2$ grid has probability $1/4$. The genotype distribution is the relative frequency of each genotype class: homozygous dominant ($DD$), heterozygous ($DR$), homozygous recessive ($RR$), where $D$ denotes the uppercase allele letter and $R$ its lowercase counterpart.\n- Validation: For each test case, compare the computed distribution against the expected distribution using an absolute tolerance of $10^{-9}$ for each component.\n\nTasks for your program:\n1. Implement a routine that, given two parental genotypes, constructs the $2 \\times 2$ Punnett square and computes the offspring genotype probability distribution as a list of three floating-point numbers in the order $[P(DD), P(DR), P(RR)]$.\n2. Validate the routine on the following test suite, where each case is given as (parent$1$, parent$2$, expected $[P(DD), P(DR), P(RR)]$):\n   - (\"AA\", \"aa\", [$0$, $1$, $0$])\n   - (\"Aa\", \"Aa\", [$0.25$, $0.5$, $0.25$])\n   - (\"Aa\", \"aa\", [$0$, $0.5$, $0.5$])\n   - (\"Aa\", \"AA\", [$0.5$, $0.5$, $0$])\n   - (\"aa\", \"aa\", [$0$, $0$, $1$])\n   - (\"aA\", \"Aa\", [$0.25$, $0.5$, $0.25$])  // order-insensitivity check\n   - (\"Bb\", \"Bb\", [$0.25$, $0.5$, $0.25$])  // non-\"A/a\" allele letter check\n3. Your program should produce a single line of output containing the validation results as a comma-separated list enclosed in square brackets, with one boolean per test case in the same order as above, for example: \"[True,True,False]\" if three tests were run.\n\nAdditional requirements:\n- The program must not request user input and must not read from or write to files.\n- All numeric comparisons for floats must use an absolute tolerance of $10^{-9}$.\n- There are no physical units in this problem.\n- The final output must be exactly one line in the specified format.", "solution": "**Derivation of the Algorithm**\n\nThe task is to construct a computational model for a bi-allelic monohybrid cross, developed systematically from the given principles.\n\n**1. Gamete Formation from Parental Genotypes**\nA parental genotype, denoted $G_p$, is a string of length 2. Per the problem statement, a parent produces two gametes for constructing the $2 \\times 2$ Punnett square, which are the two alleles composing the genotype. Let $G_{p1}$ and $G_{p2}$ be the genotypes of parent 1 and parent 2.\n- The gamete set for parent 1, $S_1$, is $\\{G_{p1}[0], G_{p1}[1]\\}$.\n- The gamete set for parent 2, $S_2$, is $\\{G_{p2}[0], G_{p2}[1]\\}$.\n\n**2. Punnett Square as a Cartesian Product**\nThe Punnett square represents all possible combinations of gametes, which is the Cartesian product of the two gamete sets, $S_1 \\times S_2$. This results in $2 \\times 2 = 4$ potential offspring genotypes. Each cell of the square contains a genotype formed by uniting one gamete from each parent.\n\n**3. Canonicalization of Offspring Genotypes**\nThe problem mandates a canonical representation: the dominant (uppercase) allele must appear first. For example, if the gametes are 'a' and 'A', the combination is canonicalized to \"Aa\".\n\n**4. Probability Calculation**\nEach of the two gametes from a parent's set is selected with probability $1/2$. Due to random union, the probability of any specific cell in the Punnett square is $(1/2) \\times (1/2) = 1/4$. To find the probability of a genotype class (e.g., homozygous dominant, $DD$), we count its occurrences, $C(G_o)$, among the 4 cells and divide by 4.\n$$P(G_o) = \\frac{C(G_o)}{4}$$\nThe final probability distribution is a list of three values: $[P(DD), P(DR), P(RR)]$.\n\n**Algorithmic Synthesis**\n1.  **Input**: Two parental genotype strings, $G_{p1}$ and $G_{p2}$.\n2.  **Identify Alleles**: Determine the dominant ($D$) and recessive ($R$) allele characters from an input genotype.\n3.  **Define Genotype Classes**: Construct the string representations for the three classes: $G_{DD} = D+D$, $G_{DR} = D+R$, $G_{RR} = R+R$.\n4.  **Generate Gametes**: Extract the gametes for each parent: $S_1 = \\text{list}(G_{p1})$, $S_2 = \\text{list}(G_{p2})$.\n5.  **Initialize Counters**: Create counters for each genotype class, initialized to zero: $C_{DD} = 0, C_{DR} = 0, C_{RR} = 0$.\n6.  **Iterate and Classify**: Loop through all 4 combinations of gametes $(g_1, g_2)$ where $g_1 \\in S_1$ and $g_2 \\in S_2$. For each pair, form the canonical offspring genotype string $G_o$ and increment the corresponding counter.\n7.  **Calculate Probabilities**: Compute the final probabilities by dividing each count by 4.0:\n    - $P(DD) = C_{DD} / 4.0$\n    - $P(DR) = C_{DR} / 4.0$\n    - $P(RR) = C_{RR} / 4.0$\n8.  **Output**: Return the list $[P(DD), P(DR), P(RR)]$.\n\nThis algorithm is a direct translation of the problem's specified first principles into a deterministic computational procedure.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef punnett_square_probabilities(parent1_genotype: str, parent2_genotype: str) -> list[float]:\n    \"\"\"\n    Computes offspring genotype probabilities from a bi-allelic monohybrid cross.\n\n    This function implements the principles of Mendelian genetics to derive the\n    probability distribution for offspring genotypes from two parental genotypes.\n\n    Args:\n        parent1_genotype: A string of length 2 representing the first parent's genotype (e.g., \"Aa\").\n        parent2_genotype: A string of length 2 representing the second parent's genotype (e.g., \"aa\").\n\n    Returns:\n        A list of three floats representing the probabilities of homozygous dominant (DD),\n        heterozygous (DR), and homozygous recessive (RR) offspring, in that order.\n    \"\"\"\n    # Principle 1: Gamete Formation\n    # Each parent contributes two gametes, which are the two alleles in its genotype.\n    gametes1 = list(parent1_genotype)\n    gametes2 = list(parent2_genotype)\n\n    # From the genotypes, determine the dominant (D) and recessive (R) allele characters.\n    # We can use the first allele of the first parent, as all alleles for a given\n    # cross must be the same letter.\n    allele_char = parent1_genotype[0]\n    dominant_allele = allele_char.upper()\n    recessive_allele = allele_char.lower()\n\n    # Define the canonical string representations for the three genotype classes.\n    homozygous_dominant_str = dominant_allele + dominant_allele\n    heterozygous_str = dominant_allele + recessive_allele\n    homozygous_recessive_str = recessive_allele + recessive_allele\n\n    # Initialize counters for each of the 4 possible offspring genotypes in the Punnett square.\n    offspring_genotype_counts = {\n        homozygous_dominant_str: 0,\n        heterozygous_str: 0,\n        homozygous_recessive_str: 0\n    }\n\n    # Principle 2 & 3: Punnett Square Construction and Canonicalization\n    # The Punnett square is the Cartesian product of the gamete sets. We iterate through it.\n    for gamete1 in gametes1:\n        for gamete2 in gametes2:\n            # Combine gametes to form an offspring's alleles.\n            offspring_alleles = [gamete1, gamete2]\n            \n            # Canonicalize the genotype string: dominant allele (uppercase) must be first.\n            # sorted() with a key is a clean way to enforce this rule.\n            # str.islower returns True for lowercase, False for uppercase.\n            # Sorting by this value (False=0, True=1) places uppercase letters first.\n            canonical_genotype = \"\".join(sorted(offspring_alleles, key=str.islower))\n            \n            # Increment the counter for the resulting genotype class.\n            if canonical_genotype in offspring_genotype_counts:\n                offspring_genotype_counts[canonical_genotype] += 1\n\n    # Principle 4: Probability Calculation\n    # Each of the 4 cells in the Punnett square has a probability of 1/4.\n    # The probability of a genotype is its count divided by the total number of cells (4).\n    total_outcomes = 4.0\n    prob_dd = offspring_genotype_counts[homozygous_dominant_str] / total_outcomes\n    prob_dr = offspring_genotype_counts[heterozygous_str] / total_outcomes\n    prob_rr = offspring_genotype_counts[homozygous_recessive_str] / total_outcomes\n    \n    return [prob_dd, prob_dr, prob_rr]\n\ndef solve():\n    \"\"\"\n    Runs the validation of the Punnett square routine against the specified test suite.\n    \"\"\"\n    # The test suite provided in the problem statement.\n    # Format: (parent1_genotype, parent2_genotype, expected_probabilities)\n    test_cases = [\n        (\"AA\", \"aa\", [0.0, 1.0, 0.0]),\n        (\"Aa\", \"Aa\", [0.25, 0.5, 0.25]),\n        (\"Aa\", \"aa\", [0.0, 0.5, 0.5]),\n        (\"Aa\", \"AA\", [0.5, 0.5, 0.0]),\n        (\"aa\", \"aa\", [0.0, 0.0, 1.0]),\n        (\"aA\", \"Aa\", [0.25, 0.5, 0.25]),  # Order-insensitivity check\n        (\"Bb\", \"Bb\", [0.25, 0.5, 0.25]),  # Non-\"A/a\" allele letter check\n    ]\n\n    validation_results = []\n    \n    # Absolute tolerance for floating-point comparisons.\n    tolerance = 1e-9\n\n    for case in test_cases:\n        parent1, parent2, expected = case\n        \n        # Calculate the probabilities using the derived function.\n        calculated = punnett_square_probabilities(parent1, parent2)\n        \n        # Validate the calculated distribution against the expected distribution.\n        # np.allclose is used for robust floating-point array comparison.\n        # rtol=0 ensures the comparison is based purely on the absolute tolerance (atol).\n        is_valid = np.allclose(calculated, expected, rtol=0, atol=tolerance)\n        validation_results.append(is_valid)\n\n    # Final print statement must produce the exact required format.\n    print(f\"[{','.join(map(str, validation_results))}]\")\n\nsolve()\n\n```", "id": "2819142"}]}