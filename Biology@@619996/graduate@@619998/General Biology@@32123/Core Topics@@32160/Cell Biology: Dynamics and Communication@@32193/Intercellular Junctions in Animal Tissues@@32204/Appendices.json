{"hands_on_practices": [{"introduction": "The mechanical resilience of epithelial tissues depends on a hierarchical system of anchoring junctions and cytoskeletal filaments. This practice challenges you to think like a biomechanist, dissecting how forces are distributed across the desmosome-intermediate filament and adherens junction-actin networks. By predicting the outcome of a specific molecular disruption, you will learn to apply principles of composite mechanics to understand tissue integrity and disease [@problem_id:2809962].", "problem": "A confluent primary human keratinocyte monolayer is cultured on a collagen-coated glass substrate and subjected to steady laminar flow that imposes a uniform apical shear stress of magnitude $\\tau$. In the experimental condition, cells are transfected with small interfering RNA (siRNA) targeting desmoplakin, yielding a stable reduction of desmoplakin protein such that desmosomes no longer couple effectively to the keratin intermediate filament (IF) network. You may assume the following core, well-tested facts: desmosomes couple neighboring cells and normally anchor the keratin IF network via desmoplakin; adherens junctions (AJ) couple to filamentous actin via the cadherin–catenin complex; tight junctions (TJ) primarily regulate paracellular permeability and have limited intrinsic load-bearing capacity; hemidesmosomes anchor IF to the basal lamina via integrins and plectin family proteins. Using only these fundamentals and basic principles of force balance and load sharing in composite materials, predict the dominant phenotype of the desmoplakin-knockdown monolayer under the applied shear stress $\\tau$, and select the single best option below that captures both the expected outcome and its mechanistic justification at the level of load-bearing architecture.\n\nA. Rapid onset of intercellular tearing with cell–cell gap formation and fragmentation of the sheet under shear; keratin IF retracts from junctions and desmosomal plaques fail to transmit load, shifting stress onto the actomyosin–AJ network, which cannot maintain cohesion at the imposed $\\tau$.\n\nB. Minimal phenotype with preserved cohesion and barrier function; adherens junctions fully compensate for loss of desmoplakin–IF coupling, such that shear resistance is unchanged and the keratin network remains junctionally engaged.\n\nC. Increased resistance to shear because loss of desmoplakin liberates keratin IF to stiffen the cytoplasm globally and enhances actomyosin reinforcement at adherens junctions, reducing cell–cell gap formation at the imposed $\\tau$.\n\nD. Predominant basal detachment from the substrate with blister-like lifting while cell–cell adhesion remains intact; load is preferentially redistributed from desmosomes to hemidesmosomes, causing failure at cell–matrix, not cell–cell, adhesions.\n\nE. Tight junctions assume the primary load-bearing role, resulting in junctional straightening, barrier tightening, and reduced paracellular permeability under shear despite desmoplakin loss.", "solution": "The problem statement will first be validated for scientific soundness and consistency before a solution is attempted.\n\n**Step 1: Extract Givens**\n- **System:** A confluent primary human keratinocyte monolayer.\n- **Substrate:** A collagen-coated glass substrate.\n- **External Load:** A steady laminar flow imposing a uniform apical shear stress of magnitude $\\tau$.\n- **Experimental Perturbation:** Cells are transfected with small interfering RNA (siRNA) targeting desmoplakin.\n- **Consequence of Perturbation:** A stable reduction in desmoplakin protein levels, such that desmosomes no longer couple effectively to the keratin intermediate filament (IF) network.\n- **Provided Fundamental Facts:**\n    1.  Desmosomes couple neighboring cells and normally anchor the keratin IF network via desmoplakin.\n    2.  Adherens junctions (AJ) couple to filamentous actin via the cadherin–catenin complex.\n    3.  Tight junctions (TJ) primarily regulate paracellular permeability and have limited intrinsic load-bearing capacity.\n    4.  Hemidesmosomes anchor IF to the basal lamina (substrate) via integrins and plectin family proteins.\n- **Objective:** Predict the dominant phenotype and its mechanistic basis under the applied shear stress $\\tau$.\n\n**Step 2: Validate Using Extracted Givens**\nThe problem is scientifically grounded. The described system—a keratinocyte monolayer under shear stress—and the molecular components (desmosomes, adherens junctions, tight junctions, hemidesmosomes, desmoplakin, keratin) are standard elements in the field of cell biology and mechanobiology. The function attributed to each component is factually correct. The experimental technique, siRNA knockdown, is a routine method for studying protein function. The problem is well-posed, asking for a qualitative prediction based on a specific, well-defined perturbation. The language is objective and technical. The problem does not violate any fundamental scientific principles, is not incomplete or contradictory, and is not trivial. It requires the application of fundamental mechanical principles (force balance, load sharing in a composite structure) to a biological system.\n\n**Step 3: Verdict and Action**\nThe problem statement is valid. A solution will be derived.\n\n**Derivation of Solution**\nAn epithelial monolayer, such as the described keratinocyte sheet, functions as a cohesive, composite mechanical material. When subjected to an apical shear stress $\\tau$, forces are generated within the plane of the sheet that must be resisted by the intercellular junctions and anchored to the substrate by cell-matrix junctions.\n\n1.  **Force Transmission in a Normal (Wild-Type) Monolayer:** In a healthy keratinocyte monolayer, the applied shear stress is transmitted from cell to cell. The cell-cell junctions and the associated cytoskeleton share this load.\n    -   The keratin intermediate filament (IF) network is a highly robust, mechanically resilient cytoskeletal system. Per the givens, it is anchored at cell-cell borders by desmosomes (via desmoplakin) and at the cell-substrate interface by hemidesmosomes. This creates a continuous, transcellular structural lattice that is exceptionally effective at distributing mechanical stress throughout the entire tissue, preventing localized failure. This desmosome-IF network is the primary load-bearing system in mechanically stressed epithelia.\n    -   The adherens junction (AJ) network, linked to the contractile actomyosin cortex, also participates in resisting force, but it serves more dynamic roles and is generally considered less robust for bearing large, sustained tensile loads compared to the IF scaffold in these cell types.\n    -   Tight junctions (TJs), as stated, have minimal load-bearing capacity.\n\n2.  **Analysis of the Perturbation:** The problem states that siRNA targeting desmoplakin leads to a condition where \"desmosomes no longer couple effectively to the keratin intermediate filament (IF) network.\" This is the critical failure point introduced into the system. Desmoplakin is the essential mechanical linker protein connecting the desmosomal plaque to the keratin IFs. Its loss, functional or physical, severs this connection.\n\n3.  **Application of Mechanical Principles (Load Redistribution):** The principle of load sharing in a composite material dictates that if a primary load-bearing component is compromised, the stress it would have carried is redistributed to the remaining parallel components.\n    -   With the desmosome-IF link broken, the desmosomes are mechanically uncoupled from the cell's strongest structural backbone. They can no longer effectively transmit forces between cells via the keratin network.\n    -   Therefore, the intercellular forces generated by the shear stress $\\tau$, which would have been primarily borne by the desmosome-IF system, are now shunted onto the other cell-cell adhesion systems.\n    -   Given that TJs have limited load-bearing capacity, the vast majority of this redistributed stress must be borne by the adherens junction (AJ)–actomyosin system.\n\n4.  **Prediction of Failure Mode:** The AJ-actomyosin system is now subjected to forces far exceeding its normal physiological load. While this system has its own mechanical integrity, it is not specialized to provide the same level of robust, static resistance as the keratin network. It is therefore the new \"weakest link\" in the series of intercellular connections. The monolayer's ability to resist shear is now dictated by the strength of the AJs alone. At a shear stress $\\tau$ sufficient to challenge a normal epithelium, this overloaded AJ system is expected to fail. Failure of intercellular junctions will manifest as a loss of cell-cell cohesion, causing cells to pull apart. This leads to the formation of intercellular gaps, tearing, and eventual fragmentation of the monolayer. Concurrently, within the cell, the keratin filaments that were once under tension and anchored at desmosomes will now retract from these sites.\n\n**Option-by-Option Analysis**\n\n**A. Rapid onset of intercellular tearing with cell–cell gap formation and fragmentation of the sheet under shear; keratin IF retracts from junctions and desmosomal plaques fail to transmit load, shifting stress onto the actomyosin–AJ network, which cannot maintain cohesion at the imposed $\\tau$.**\nThis option provides a mechanistically precise and accurate description of the expected outcome. It correctly identifies: ($1$) the failure of load transmission by desmosomes due to the desmoplakin knockdown; ($2$) the retraction of unanchored IFs; ($3$) the redistribution of stress onto the AJ-actomyosin network; and ($4$) the subsequent failure of this overloaded system, resulting in intercellular tearing.\n**Verdict: Correct.**\n\n**B. Minimal phenotype with preserved cohesion and barrier function; adherens junctions fully compensate for loss of desmoplakin–IF coupling, such that shear resistance is unchanged and the keratin network remains junctionally engaged.**\nThis is incorrect. It is biologically and mechanically implausible that the AJ system could \"fully compensate\" for the loss of the primary stress-bearing IF network with \"unchanged\" shear resistance. The desmosome-IF system is specialized for mechanical toughness, a role the AJ system cannot completely replicate. Furthermore, the statement that the keratin network \"remains junctionally engaged\" directly contradicts the premise that the desmoplakin-IF coupling is lost at desmosomes.\n**Verdict: Incorrect.**\n\n**C. Increased resistance to shear because loss of desmoplakin liberates keratin IF to stiffen the cytoplasm globally and enhances actomyosin reinforcement at adherens junctions, reducing cell–cell gap formation at the imposed $\\tau$.**\nThis is incorrect. It violates basic principles of mechanics. Breaking a critical structural linkage in a composite material unequivocally weakens it; it does not increase its resistance to failure. Uncoupling the IF network from cell-cell junctions prevents it from contributing to intercellular cohesion, thereby decreasing, not increasing, the monolayer's shear resistance.\n**Verdict: Incorrect.**\n\n**D. Predominant basal detachment from the substrate with blister-like lifting while cell–cell adhesion remains intact; load is preferentially redistributed from desmosomes to hemidesmosomes, causing failure at cell–matrix, not cell–cell, adhesions.**\nThis is incorrect. The experimental perturbation specifically weakens a cell-cell adhesion component. While all forces are ultimately transmitted to the substrate via hemidesmosomes, the primary point of failure will be the component that has been most significantly weakened. Apical shear stress creates tensile and shear forces between cells. With the desmosome-IF link broken, the cell-cell interface is now the weakest point. Therefore, cell-cell tearing is the expected primary failure mode, not cell-substrate detachment.\n**Verdict: Incorrect.**\n\n**E. Tight junctions assume the primary load-bearing role, resulting in junctional straightening, barrier tightening, and reduced paracellular permeability under shear despite desmoplakin loss.**\nThis is incorrect. It directly contradicts one of the provided facts: \"tight junctions (TJ) ... have limited intrinsic load-bearing capacity.\" They cannot assume the primary load-bearing role vacated by the desmosome-IF system. Their function is primarily sealing, not structural resistance.\n**Verdict: Incorrect.**", "answer": "$$\\boxed{A}$$", "id": "2809962"}, {"introduction": "Epithelial tissues act as selective barriers, and this function is finely tuned by the molecular properties of tight junctions. This exercise places you in the role of a biophysicist, using electrophysiological data to probe the ion selectivity of the paracellular pathway. Applying the Goldman-Hodgkin-Katz (GHK) voltage equation to these hypothetical measurements will provide hands-on experience in quantifying a critical aspect of tight junction physiology [@problem_id:2299241].", "problem": "A team of cell biologists is investigating the properties of tight junctions in a newly characterized epithelial cell line. They culture a monolayer of these cells on a permeable filter, effectively creating a barrier that separates an apical (upper) compartment from a basal (lower) compartment. To determine if the paracellular pathway through the tight junctions is selective for cations or anions, they measure the transepithelial potential difference, $\\Delta V = V_{apical} - V_{basal}$, under different ionic conditions.\n\nThey assume the transport across the epithelium is dominated by the passive movement of sodium ($Na^{+}$) and chloride ($Cl^{-}$) ions and can be described by the Goldman-Hodgkin-Katz (GHK) voltage equation:\n\n$$\n\\Delta V = \\frac{RT}{F} \\ln \\left( \\frac{P_{Na^{+}}[Na^{+}]_{basal} + P_{Cl^{-}}[Cl^{-}]_{apical}}{P_{Na^{+}}[Na^{+}]_{apical} + P_{Cl^{-}}[Cl^{-}]_{basal}} \\right)\n$$\n\nwhere $P_{Na^{+}}$ and $P_{Cl^{-}}$ are the permeability coefficients for sodium and chloride ions, respectively, $[X]$ denotes the concentration of ion $X$, $R$ is the ideal gas constant ($8.314 \\text{ J mol}^{-1} \\text{K}^{-1}$), $T$ is the absolute temperature, and $F$ is the Faraday constant ($96485 \\text{ C mol}^{-1}$).\n\nThe experiments are conducted at a constant physiological temperature of $310 \\text{ K}$. The team performs the following experiments and records the steady-state potential differences:\n\n| Experiment | Apical Solution (mM) | Basal Solution (mM) | Measured $\\Delta V$ (mV) |\n| :--- | :--- | :--- | :--- |\n| A | 150 NaCl | 150 NaCl | 0.0 |\n| B | 150 NaCl | 75 NaCl | +7.7 |\n| C | 150 Na-gluconate | 150 NaCl | -33.5 |\n\nAssuming gluconate is an impermeable anion, use the provided data to calculate the permeability ratio of sodium to chloride, $P_{Na^{+}}/P_{Cl^{-}}$. Report your answer as a dimensionless number rounded to two significant figures.", "solution": "We use the stated Goldman-Hodgkin-Katz voltage equation for a membrane with sodium and chloride permeabilities:\n$$\n\\Delta V=\\frac{R T}{F}\\ln\\left(\\frac{P_{Na^{+}}[Na^{+}]_{basal}+P_{Cl^{-}}[Cl^{-}]_{apical}}{P_{Na^{+}}[Na^{+}]_{apical}+P_{Cl^{-}}[Cl^{-}]_{basal}}\\right).\n$$\nDefine the permeability ratio $r=\\frac{P_{Na^{+}}}{P_{Cl^{-}}}$. Factoring $P_{Cl^{-}}$ from numerator and denominator gives\n$$\n\\Delta V=\\frac{R T}{F}\\ln\\left(\\frac{r[Na^{+}]_{basal}+[Cl^{-}]_{apical}}{r[Na^{+}]_{apical}+[Cl^{-}]_{basal}}\\right).\n$$\n\nExperiment A (150 NaCl apical and basal) has $[Na^{+}]_{apical}=[Na^{+}]_{basal}=150$ and $[Cl^{-}]_{apical}=[Cl^{-}]_{basal}=150$, which yields\n$$\n\\Delta V=\\frac{R T}{F}\\ln\\left(\\frac{150 r+150}{150 r+150}\\right)=0,\n$$\nconsistent with the measured $0$ and providing no constraint on $r$.\n\nExperiment B has apical 150 NaCl and basal 75 NaCl, so $[Na^{+}]_{apical}=[Cl^{-}]_{apical}=150$ and $[Na^{+}]_{basal}=[Cl^{-}]_{basal}=75$. Then\n$$\n\\Delta V_{B}=\\frac{R T}{F}\\ln\\left(\\frac{75 r+150}{150 r+75}\\right).\n$$\nExponentiating both sides gives\n$$\n\\exp\\!\\left(\\frac{F\\Delta V_{B}}{R T}\\right)=\\frac{75 r+150}{150 r+75}.\n$$\nLet $E_{B}=\\exp\\!\\left(\\frac{F\\Delta V_{B}}{R T}\\right)$. Solving for $r$:\n$$\nE_{B}(150 r+75)=75 r+150 \\;\\Rightarrow\\; (150 E_{B}-75)r=150-75 E_{B} \\;\\Rightarrow\\; r=\\frac{150-75 E_{B}}{150 E_{B}-75}=\\frac{2-E_{B}}{2 E_{B}-1}.\n$$\nUsing $T=310$ K with the given constants, $\\frac{R T}{F}=\\frac{8.314\\times 310}{96485}\\,\\text{V}\\approx 0.026712\\,\\text{V}$. With $\\Delta V_{B}=+7.7\\times 10^{-3}\\,\\text{V}$,\n$$\nE_{B}=\\exp\\!\\left(\\frac{F\\Delta V_{B}}{R T}\\right)=\\exp\\!\\left(\\frac{0.0077}{0.026712}\\right)\\approx \\exp(0.288)\\approx 1.334,\n$$\nand therefore\n$$\nr_{B}=\\frac{2-1.334}{2(1.334)-1}\\approx \\frac{0.666}{1.668}\\approx 0.399.\n$$\n\nExperiment C has apical 150 Na-gluconate (gluconate impermeable) and basal 150 NaCl, so $[Na^{+}]_{apical}=150$, $[Na^{+}]_{basal}=150$, $[Cl^{-}]_{apical}=0$, and $[Cl^{-}]_{basal}=150$. Then\n$$\n\\Delta V_{C}=\\frac{R T}{F}\\ln\\left(\\frac{150 r+0}{150 r+150}\\right)=\\frac{R T}{F}\\ln\\left(\\frac{r}{r+1}\\right).\n$$\nExponentiating gives\n$$\nE_{C}=\\exp\\!\\left(\\frac{F\\Delta V_{C}}{R T}\\right)=\\frac{r}{r+1}\\;\\Rightarrow\\; r=\\frac{E_{C}}{1-E_{C}}.\n$$\nWith $\\Delta V_{C}=-33.5\\times 10^{-3}\\,\\text{V}$,\n$$\nE_{C}=\\exp\\!\\left(\\frac{-0.0335}{0.026712}\\right)\\approx \\exp(-1.254)\\approx 0.285,\n$$\nso\n$$\nr_{C}=\\frac{0.285}{1-0.285}\\approx \\frac{0.285}{0.715}\\approx 0.399.\n$$\n\nBoth independent determinations agree, giving $P_{Na^{+}}/P_{Cl^{-}}\\approx 0.399$. Rounded to two significant figures, the permeability ratio is $0.40$.", "answer": "$$\\boxed{0.40}$$", "id": "2299241"}, {"introduction": "Direct cell-to-cell communication via gap junctions is essential for coordinating tissue-level behavior. This advanced practice challenges you to construct a computational model of this process from first principles, simulating how a dye spreads through a network of coupled cells. By deriving the diffusion dynamics and implementing the model, you will gain deep insight into the relationship between microscopic parameters, like junctional permeability, and the macroscopic phenomenon of intercellular communication [@problem_id:2809967].", "problem": "You are tasked with designing a computational model of a dye-coupling assay to quantify gap junctional permeability in an epithelial-like sheet of identical animal cells and to simulate the time course of dye spread on a two-dimensional cell lattice. The fundamental base you must use is Fick’s law of diffusion, conservation of mass, and the definitions of permeability and geometric quantities, as follows. Use the following foundational and well-tested principles to derive your model: (i) Fick’s law states that flux is proportional to concentration difference, (ii) total dye amount is conserved in a closed system under zero-flux boundary conditions, (iii) gap junctional permeability per unit area is a constant for a given condition, (iv) all cells have the same volume and identical junctional areas where present, and (v) the two-dimensional lattice is a rectangular grid with nearest-neighbor contacts only.\n\nStarting from these bases, construct a discrete network diffusion model on a two-dimensional rectangular lattice of cells where each cell occupies a node in a grid and each allowable nearest-neighbor contact is a gap junction through which dye flows. Assume that every existing gap junction has the same permeability per unit area and that boundaries are zero-flux (no neighbors beyond the edge). The intercellular geometry is specified by a cell-to-cell center spacing and a junctional area per contact. All cells have identical volume. The initial condition for all simulations is that only the central cell has a nonzero dye concentration, set to unity in arbitrary concentration units, while all other cells have zero concentration.\n\nDefine the microscopic intercellular diffusion coefficient that maps the network dynamics to a continuum diffusion coefficient as the product of the rate constant emerging from combining the permeability per unit area, junctional area, and cell volume with the square of the cell spacing. Explicitly compute this coefficient in micrometer-squared per second using the given physical parameters in each test case. Then simulate the concentration evolution based on the derived network diffusion operator and report, for each test case, the fraction of total dye remaining in the initially loaded central cell at a specified time. Use zero-flux boundary conditions and remove any specified blocked junctions.\n\nYour program must implement the following requirements without requiring any user input:\n\n- Lattice geometry:\n  - Use a rectangular grid of size $n_r \\times n_c$ cells with nearest-neighbor connections (up, down, left, right) when present and not blocked.\n  - Use zero-flux boundaries by omitting neighbors outside the grid.\n- Parameters:\n  - Permeability per unit junctional area $p$ (units micrometer per second).\n  - Junctional area per contact $A$ (units micrometer squared).\n  - Cell volume $V$ (units micrometer cubed).\n  - Cell center-to-center spacing $a$ (units micrometer).\n  - From these, derive a first-order intercellular exchange rate constant $k$ (units per second) using only fundamental definitions and conservation. Then compute the microscopic continuum-mapped diffusion coefficient $D_{\\text{mic}}$ (units micrometer squared per second) from $k$ and $a$.\n- Initial condition:\n  - Central cell concentration $C_0 = 1$ (arbitrary unit), all other cells $0$.\n- Simulation target:\n  - Compute the concentration at time $T$ (units seconds) and report the fraction of total dye that remains in the initially loaded central cell at time $T$. Because dye amount is conserved under zero-flux conditions, this fraction is the central cell concentration normalized by the total dye amount, which begins at $1$ and must remain constant apart from numerical round-off.\n- Blocked junctions:\n  - If a test case specifies blocked junctions, they must be removed from the lattice connectivity (no flux across those specific edges); all other junctions remain present and identical. Where no blocked junctions are specified, all nearest-neighbor junctions are present.\n\nTest Suite. Implement exactly the following four test cases:\n\n- Case $1$ (happy path, intact lattice):\n  - Grid: $n_r = 5$, $n_c = 5$.\n  - Parameters: $p = 0.05$ micrometer/second, $A = 120$ micrometer$^2$, $V = 1800$ micrometer$^3$, $a = 20$ micrometer.\n  - Time: $T = 300$ seconds.\n  - Blocked junctions: none.\n\n- Case $2$ (edge case, zero coupling):\n  - Grid: $n_r = 5$, $n_c = 5$.\n  - Parameters: $p = 0.0$ micrometer/second, $A = 120$ micrometer$^2$, $V = 1800$ micrometer$^3$, $a = 20$ micrometer.\n  - Time: $T = 300$ seconds.\n  - Blocked junctions: none.\n\n- Case $3$ (smaller grid, higher coupling):\n  - Grid: $n_r = 3$, $n_c = 3$.\n  - Parameters: $p = 0.20$ micrometer/second, $A = 90$ micrometer$^2$, $V = 1000$ micrometer$^3$, $a = 18$ micrometer.\n  - Time: $T = 200$ seconds.\n  - Blocked junctions: none.\n\n- Case $4$ (anisotropic connectivity due to a patterned blockade):\n  - Grid: $n_r = 7$, $n_c = 7$.\n  - Parameters: $p = 0.08$ micrometer/second, $A = 110$ micrometer$^2$, $V = 1500$ micrometer$^3$, $a = 20$ micrometer.\n  - Time: $T = 250$ seconds.\n  - Blocked junctions: block every horizontal junction between columns $c$ and $c+1$ where the zero-based column index $c$ is odd (that is, block between $c=1$ and $c=2$, between $c=3$ and $c=4$, between $c=5$ and $c=6$ for all applicable rows). Do not block any vertical junctions.\n\nOutput requirements:\n\n- For each case, compute and return a list of two floats in this order:\n  - The microscopic continuum-mapped diffusion coefficient $D_{\\text{mic}}$ in micrometer squared per second.\n  - The fraction of dye remaining in the central cell at time $T$ (dimensionless), normalized by the total dye amount at time $T$.\n- Your program should produce a single line of output containing the results as a comma-separated list of lists, enclosed in square brackets. Example format: $[[x_1,y_1],[x_2,y_2],[x_3,y_3],[x_4,y_4]]$.\n- All floats in the final output must be rounded to exactly six decimal places.\n- Angles are not involved. No other physical units are to be reported beyond those specified above. Fractions must be expressed as decimals, not as percentages.\n\nScientific realism constraints:\n\n- Use only the bases and definitions stated above; do not import or rely on any target formulas. The derivation and computation must ensure mass conservation and use zero-flux boundaries.\n- The initial amount of dye is $1$ in arbitrary units; confirm through your method that total dye is conserved to within numerical precision in all cases.\n\nYour implementation must be a complete, runnable program and must not require any user input or external data. It must rely solely on the specified test cases and print the final results in the exact format specified above.", "solution": "The problem requires the development of a computational model for dye diffusion through gap junctions in a two-dimensional lattice of cells. The model must be derived from fundamental principles: Fick's law of diffusion and conservation of mass.\n\n**1. Derivation of the Governing Equations**\n\nLet the epithelial sheet be represented by a rectangular grid of $N = n_r \\times n_c$ cells. The concentration of dye in cell $i$ at time $t$ is denoted by $C_i(t)$. All cells have a constant volume $V$. The amount of dye in cell $i$ is thus $N_i(t) = C_i(t) \\cdot V$.\n\nThe rate of change of dye amount in cell $i$ is determined by the net flux from its neighboring cells, denoted by the set $\\mathcal{N}(i)$. According to the principle of mass conservation,\n$$\n\\frac{dN_i}{dt} = \\sum_{j \\in \\mathcal{N}(i)} J_{j \\to i}\n$$\nwhere $J_{j \\to i}$ is the flux of dye amount from cell $j$ to cell $i$.\n\nFick's first law states that flux is proportional to the concentration gradient. In this discrete system, the flux across the junction between cell $j$ and cell $i$ is proportional to the concentration difference, $C_j(t) - C_i(t)$. The problem provides the permeability per unit area, $p$ (units: length/time), and the junctional area, $A$ (units: length$^2$). The total permeability of a single junction is $P = p \\cdot A$ (units: volume/time). The flux of dye amount is therefore:\n$$\nJ_{j \\to i} = p A (C_j(t) - C_i(t))\n$$\nSubstituting this into the mass balance equation gives:\n$$\n\\frac{d(C_i V)}{dt} = \\sum_{j \\in \\mathcal{N}(i)} p A (C_j(t) - C_i(t))\n$$\nSince the cell volume $V$ is constant, we can write:\n$$\nV \\frac{dC_i}{dt} = p A \\sum_{j \\in \\mathcal{N}(i)} (C_j(t) - C_i(t))\n$$\nDividing by $V$, we obtain the rate of change of concentration in cell $i$:\n$$\n\\frac{dC_i}{dt} = \\frac{pA}{V} \\sum_{j \\in \\mathcal{N}(i)} (C_j(t) - C_i(t))\n$$\nThe problem asks to define a first-order intercellular exchange rate constant, $k$. From the derived equation, this constant is naturally defined as:\n$$\nk = \\frac{pA}{V}\n$$\nThe units of $k$ are $(\\text{µm/s} \\cdot \\text{µm}^2) / \\text{µm}^3 = \\text{s}^{-1}$, as expected for a first-order rate constant. The system of equations for all cells becomes:\n$$\n\\frac{dC_i}{dt} = k \\sum_{j \\in \\mathcal{N}(i)} (C_j - C_i) \\quad \\text{for } i = 1, \\dots, N\n$$\n\n**2. Matrix Formulation and Solution**\n\nThis system of $N$ coupled linear ordinary differential equations (ODEs) can be expressed in matrix form. Let $\\mathbf{C}(t)$ be a column vector of size $N$ containing the concentrations of all cells. The system can be written as:\n$$\n\\frac{d\\mathbf{C}}{dt} = -k \\mathbf{L} \\mathbf{C}\n$$\nHere, $\\mathbf{L}$ is the graph Laplacian matrix of the cell connectivity network. The elements $L_{ij}$ of this $N \\times N$ matrix are defined as:\n- $L_{ii} = d_i$, where $d_i$ is the degree of node $i$ (the number of its neighbors).\n- $L_{ij} = -1$ if cells $i$ and $j$ are connected by a gap junction.\n- $L_{ij} = 0$ otherwise.\n\nThe term $(\\mathbf{L}\\mathbf{C})_i = d_i C_i - \\sum_{j \\in \\mathcal{N}(i)} C_j = \\sum_{j \\in \\mathcal{N}(i)} (C_i - C_j)$, which matches the summation in our derived equation with a sign change.\n\nThis is a system of linear ODEs with constant coefficients. Given an initial concentration vector $\\mathbf{C}(0)$, the solution at time $T$ is given by the matrix exponential:\n$$\n\\mathbf{C}(T) = e^{-k \\mathbf{L} T} \\mathbf{C}(0)\n$$\n\n**3. Computational Strategy**\n\nFor each test case, we will perform the following steps:\n1.  **Calculate constants**: Compute the rate constant $k = pA/V$ and the microscopic continuum-mapped diffusion coefficient $D_{\\text{mic}} = k a^2$.\n2.  **Construct the graph**: Define the cell lattice geometry. An $n_r \\times n_c$ grid has $N = n_r n_c$ cells. We map the 2D cell coordinate $(r, c)$ to a 1D index $m = r \\cdot n_c + c$. We then build the adjacency matrix $\\mathbf{A}$ for the graph, where $A_{ij} = 1$ if cells $i$ and $j$ are connected and $0$ otherwise. Zero-flux boundary conditions are implemented by not creating connections for cells at the grid edge. Any specified blocked junctions are handled by setting the corresponding entries in $\\mathbf{A}$ to $0$.\n3.  **Form the Laplacian**: From the adjacency matrix $\\mathbf{A}$, we construct the Laplacian matrix $\\mathbf{L} = \\mathbf{D} - \\mathbf{A}$, where $\\mathbf{D}$ is the diagonal matrix of node degrees.\n4.  **Define initial conditions**: The initial concentration vector $\\mathbf{C}(0)$ is a zero vector, except for the central cell, which has a concentration of $1$. For an $n_r \\times n_c$ grid (with $n_r, n_c$ being odd), the central cell is at $(\\lfloor n_r/2 \\rfloor, \\lfloor n_c/2 \\rfloor)$.\n5.  **Solve for final concentrations**: The final concentration vector $\\mathbf{C}(T)$ is computed by calculating the action of the matrix exponential on the initial vector: $\\mathbf{C}(T) = e^{\\mathbf{M}} \\mathbf{C}(0)$, where $\\mathbf{M} = -k T \\mathbf{L}$. This can be efficiently computed using `scipy.sparse.linalg.expm_multiply` if $\\mathbf{L}$ is represented as a sparse matrix.\n6.  **Extract the result**: The fraction of total dye remaining in the central cell is its concentration $C_{\\text{central}}(T)$, since the total amount of dye corresponds to an initial concentration sum of $1$.\n\nThis procedure ensures mass conservation, as the sum of concentrations remains constant over time because the vector of all ones, $\\mathbf{1}$, is in the null space of $\\mathbf{L}$ ($\\mathbf{L}\\mathbf{1} = \\mathbf{0}$).\n\nFor the specific test cases:\n\n- **Case 1**: A standard $5 \\times 5$ grid. $k = (0.05 \\cdot 120) / 1800 = 1/300 \\, \\text{s}^{-1}$. $D_{\\text{mic}} = (1/300) \\cdot 20^2 = 4/3 \\, \\text{µm}^2/\\text{s}$. The matrix exponent is based on $-k T \\mathbf{L} = -(1/300) \\cdot 300 \\cdot \\mathbf{L} = -\\mathbf{L}$.\n- **Case 2**: Zero permeability ($p=0$) implies $k=0$ and $D_{\\text{mic}}=0$. The system state does not evolve, so the final concentration in the central cell is $1$.\n- **Case 3**: A smaller $3 \\times 3$ grid with higher coupling. $k = (0.20 \\cdot 90) / 1000 = 0.018 \\, \\text{s}^{-1}$. $D_{\\text{mic}} = 0.018 \\cdot 18^2 = 5.832 \\, \\text{µm}^2/\\text{s}$. The exponent matrix is based on $-k T \\mathbf{L} = -0.018 \\cdot 200 \\cdot \\mathbf{L} = -3.6 \\mathbf{L}$.\n- **Case 4**: A $7 \\times 7$ grid with patterned blocked junctions. $k = (0.08 \\cdot 110) / 1500 = 11/1875 \\, \\text{s}^{-1}$. $D_{\\text{mic}} = (11/1875) \\cdot 20^2 = 176/75 \\, \\text{µm}^2/\\text{s}$. The adjacency matrix is modified by removing horizontal connections between columns $c$ and $c+1$ for $c=1,3,5$. The exponent matrix is based on $-k T \\mathbf{L} = -(11/1875) \\cdot 250 \\cdot \\mathbf{L} = -(22/15) \\mathbf{L}$.\n\nThe implementation will use `numpy` for array operations and `scipy.sparse` for efficient construction of the Laplacian and `scipy.sparse.linalg.expm_multiply` for solving the system. The final results will be rounded to six decimal places as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.sparse import lil_matrix\nfrom scipy.sparse.csgraph import laplacian\nfrom scipy.sparse.linalg import expm_multiply\n\ndef solve():\n    \"\"\"\n    Solves the dye-coupling diffusion problem for a suite of test cases.\n    \"\"\"\n    \n    test_cases = [\n        # Case 1 (happy path, intact lattice)\n        {'nr': 5, 'nc': 5, 'p': 0.05, 'A': 120, 'V': 1800, 'a': 20, 'T': 300, 'blocked_junctions': None},\n        # Case 2 (edge case, zero coupling)\n        {'nr': 5, 'nc': 5, 'p': 0.0, 'A': 120, 'V': 1800, 'a': 20, 'T': 300, 'blocked_junctions': None},\n        # Case 3 (smaller grid, higher coupling)\n        {'nr': 3, 'nc': 3, 'p': 0.20, 'A': 90, 'V': 1000, 'a': 18, 'T': 200, 'blocked_junctions': None},\n        # Case 4 (anisotropic connectivity due to a patterned blockade)\n        {'nr': 7, 'nc': 7, 'p': 0.08, 'A': 110, 'V': 1500, 'a': 20, 'T': 250, 'blocked_junctions': 'case4_block'},\n    ]\n\n    results = []\n\n    for case in test_cases:\n        nr, nc = case['nr'], case['nc']\n        p, A, V, a, T = case['p'], case['A'], case['V'], case['a'], case['T']\n        \n        # 1. Calculate constants\n        if V == 0:\n            k = 0.0\n        else:\n            k = p * A / V\n        \n        D_mic = k * a**2\n        \n        if k == 0.0:\n            # No coupling, dye does not spread.\n            fraction = 1.0\n            results.append([D_mic, fraction])\n            continue\n\n        # 2. Construct the graph (adjacency matrix)\n        N = nr * nc\n        adj_matrix = lil_matrix((N, N), dtype=np.float64)\n\n        for r in range(nr):\n            for c in range(nc):\n                idx1 = r * nc + c\n                # Neighbor below\n                if r + 1  nr:\n                    idx2 = (r + 1) * nc + c\n                    adj_matrix[idx1, idx2] = 1\n                    adj_matrix[idx2, idx1] = 1\n                # Neighbor right\n                if c + 1  nc:\n                    idx2 = r * nc + (c + 1)\n                    adj_matrix[idx1, idx2] = 1\n                    adj_matrix[idx2, idx1] = 1\n        \n        # Apply blocked junctions for Case 4\n        if case['blocked_junctions'] == 'case4_block':\n            for r in range(nr):\n                for c_odd in range(1, nc, 2):\n                    if c_odd + 1  nc:\n                        idx1 = r * nc + c_odd\n                        idx2 = r * nc + (c_odd + 1)\n                        adj_matrix[idx1, idx2] = 0\n                        adj_matrix[idx2, idx1] = 0\n        \n        # 3. Form the Laplacian\n        # Convert to csc_matrix for efficient graph algorithms\n        adj_csc = adj_matrix.tocsc()\n        L = laplacian(adj_csc, normed=False)\n\n        # 4. Define initial conditions\n        central_r, central_c = nr // 2, nc // 2\n        central_idx = central_r * nc + central_c\n        C0 = np.zeros(N)\n        C0[central_idx] = 1.0\n\n        # 5. Solve for final concentrations\n        M = -k * T * L\n        C_T = expm_multiply(M, C0)\n        \n        # 6. Extract the result\n        fraction = C_T[central_idx]\n\n        # Sanity check for mass conservation\n        # total_dye = np.sum(C_T)\n        # assert np.isclose(total_dye, 1.0), f\"Mass not conserved: {total_dye}\"\n        \n        results.append([D_mic, fraction])\n\n    # Final print statement in the exact required format.\n    formatted_results = []\n    for res in results:\n        D_mic_rounded = round(res[0], 6)\n        fraction_rounded = round(res[1], 6)\n        formatted_results.append(f\"[{D_mic_rounded:.6f},{fraction_rounded:.6f}]\")\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2809967"}]}