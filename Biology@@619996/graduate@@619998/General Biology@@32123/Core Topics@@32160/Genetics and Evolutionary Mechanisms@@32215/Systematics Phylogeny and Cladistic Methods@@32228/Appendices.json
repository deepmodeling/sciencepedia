{"hands_on_practices": [{"introduction": "The foundation of any character-based phylogenetic analysis lies in the careful scoring of evolutionary changes on a tree. This exercise, [@problem_id:2840512], delves into the practical complexities of interpreting morphological data, forcing you to grapple with common challenges like polymorphism, inapplicable data for dependent characters, and the critical distinction between ordered and unordered character state transformations. By calculating a tree's parsimony score under different assumptions, you will gain a deeper appreciation for how our models of character evolution directly influence our assessment of an evolutionary hypothesis.", "problem": "A researcher is studying the evolution of a cuticular structure across a clade of five taxa labeled $t_{1}$, $t_{2}$, $t_{3}$, $t_{4}$, and $t_{5}$. The initial morphological matrix contains a principal character for the presence of the structure, a dependent character that describes the shape of the structure (only meaningful when the structure is present), and an independent count character. Some taxa exhibit polymorphism in shape, and the shape is inapplicable where the structure is absent.\n\nYou are given the following observations:\n- Principal presence of the cuticular structure ($P$): states encoded as $0$ for absent, $1$ for present.\n  - $t_{1}: 1$, $t_{2}: 1$, $t_{3}: 0$, $t_{4}: 1$, $t_{5}: 0$.\n- Shape of the structure ($S$): a dependent multistate character defined only if $P=1$, with states encoded as $0$ for round, $1$ for elliptical, and $2$ for triangular. Polymorphic states are indicated by a set, and inapplicability arises when $P=0$.\n  - $t_{1}: 0$, $t_{2}: \\{0,1\\}$, $t_{3}$: inapplicable, $t_{4}: 2$, $t_{5}$: inapplicable.\n- Number of marginal spines ($C$): an independent count character with states $0$, $1$, and $2$.\n  - $t_{1}: 0$, $t_{2}: 1$, $t_{3}: 2$, $t_{4}: 2$, $t_{5}: 0$.\n\nAssume the fixed, fully resolved rooted tree topology\n$$\n\\big((t_{1},t_{2}),\\,(t_{3},\\,(t_{4},t_{5}))\\big).\n$$\n\nPerform a reductive recoding of the matrix as follows: retain the principal presence character $P$ in the full matrix; for the dependent shape character $S$, treat inapplicable entries (those taxa with $P=0$) by pruning them from the evaluation of $S$ and scoring steps only on the induced minimal subtree spanning the applicable taxa. Treat polymorphic terminal states as state sets at the tips.\n\nEvaluate parsimony under two schemes:\n- Scheme $\\mathrm{U}$: treat $P$ as unordered binary, $S$ as unordered multistate, and $C$ as ordered multistate.\n- Scheme $\\mathrm{O}$: treat $P$ as unordered binary, $S$ as ordered multistate, and $C$ as ordered multistate.\n\nFor unordered multistate characters, use the standard equal-weights principle of minimizing the count of state changes. For ordered multistate characters, use the Wagner metric with step costs $d(i,j)=|i-j|$. Evaluate the parsimony length of the given tree under each scheme using only the given data and the reductive coding rule for $S$.\n\nReport the quantity $L_{\\mathrm{O}}-L_{\\mathrm{U}}$, where $L_{\\mathrm{U}}$ is the total tree length under Scheme $\\mathrm{U}$ and $L_{\\mathrm{O}}$ is the total tree length under Scheme $\\mathrm{O}$. Express your final answer as a single integer with no units. Provide a brief justification for every coding decision you make in constructing the recoded matrix and character-type assignments.", "solution": "The problem statement is subjected to validation before a solution is attempted.\n\nFirst, the givens are extracted verbatim:\n- Taxa: $t_{1}$, $t_{2}$, $t_{3}$, $t_{4}$, and $t_{5}$.\n- Principal character $P$ (presence): states $0$ (absent), $1$ (present).\n  - Data: $t_{1}: 1$, $t_{2}: 1$, $t_{3}: 0$, $t_{4}: 1$, $t_{5}: 0$.\n- Dependent character $S$ (shape): states $0$ (round), $1$ (elliptical), $2$ (triangular). Polymorphism is indicated by a set. Inapplicability where $P=0$.\n  - Data: $t_{1}: 0$, $t_{2}: \\{0,1\\}$, $t_{3}$: inapplicable, $t_{4}: 2$, $t_{5}$: inapplicable.\n- Independent character $C$ (count): states $0, 1, 2$.\n  - Data: $t_{1}: 0$, $t_{2}: 1$, $t_{3}: 2$, $t_{4}: 2$, $t_{5}: 0$.\n- Tree topology: $\\big((t_{1}, t_{2}),\\,(t_{3},\\,(t_{4}, t_{5}))\\big)$.\n- Reductive recoding rule for $S$: \"treat inapplicable entries ... by pruning them from the evaluation of $S$ and scoring steps only on the induced minimal subtree spanning the applicable taxa. Treat polymorphic terminal states as state sets at the tips.\"\n- Scheme $\\mathrm{U}$: $P$ is unordered binary, $S$ is unordered multistate, $C$ is ordered multistate.\n- Scheme $\\mathrm{O}$: $P$ is unordered binary, $S$ is ordered multistate, $C$ is ordered multistate.\n- Cost function for ordered characters: Wagner metric, $d(i,j) = |i-j|$.\n- Objective: Report the quantity $L_{\\mathrm{O}} - L_{\\mathrm{U}}$.\n\nThe problem is evaluated for validity. It is scientifically grounded, as it describes a standard problem in phylogenetic systematics using established methods (parsimony, Fitch algorithm, Wagner algorithm) and concepts (dependent characters, polymorphism, inapplicable data). The problem is well-posed, providing all necessary data, a fixed topology, and explicit rules for character coding and cost evaluation, leading to a unique, computable solution. The language is objective and precise. The problem is complete and self-contained. It is therefore deemed valid and a solution will be provided.\n\nThe total parsimony length of the tree is the sum of the lengths for each character: $L = L_{P} + L_{S} + L_{C}$. We must calculate the total length under Scheme $\\mathrm{U}$ ($L_{\\mathrm{U}}$) and Scheme $\\mathrm{O}$ ($L_{\\mathrm{O}}$). The character treatments for $P$ and $C$ are identical in both schemes, so we calculate their lengths first.\n\nAnalysis of Character $P$ (Presence):\nThis character is unordered and binary. The parsimony length is calculated using the Fitch algorithm. The state assignments at the tips are $S(t_{1})=\\{1\\}$, $S(t_{2})=\\{1\\}$, $S(t_{3})=\\{0\\}$, $S(t_{4})=\\{1\\}$, $S(t_{5})=\\{0\\}$.\nLet the internal nodes be $v_{1} = (t_{1},t_{2})$, $v_{2} = (t_{4},t_{5})$, $v_{3} = (t_{3}, v_{2})$, and the root $v_{R} = (v_{1}, v_{3})$.\n- Node $v_{1}$: $S(t_{1}) \\cap S(t_{2}) = \\{1\\} \\cap \\{1\\} = \\{1\\}$. The state set is $\\{1\\}$. Length increase is $0$.\n- Node $v_{2}$: $S(t_{4}) \\cap S(t_{5}) = \\{1\\} \\cap \\{0\\} = \\emptyset$. The state set is $S(t_{4}) \\cup S(t_{5}) = \\{0,1\\}$. Length increase is $1$.\n- Node $v_{3}$: $S(t_{3}) \\cap S(v_{2}) = \\{0\\} \\cap \\{0,1\\} = \\{0\\}$. The state set is $\\{0\\}$. Length increase is $0$.\n- Node $v_{R}$: $S(v_{1}) \\cap S(v_{3}) = \\{1\\} \\cap \\{0\\} = \\emptyset$. The state set is $S(v_{1}) \\cup S(v_{3}) = \\{0,1\\}$. Length increase is $1$.\nThe total length for character $P$ is $L_{P} = 0 + 1 + 0 + 1 = 2$.\n\nAnalysis of Character $C$ (Spine Count):\nThis character is ordered and multistate. The length is calculated using the Wagner algorithm, where cost is $d(i,j) = |i-j|$. We represent the state sets at nodes as intervals.\n- Tip states: $I(t_{1})=[0,0]$, $I(t_{2})=[1,1]$, $I(t_{3})=[2,2]$, $I(t_{4})=[2,2]$, $I(t_{5})=[0,0]$.\n- Node $v_{1}$: Children states are $[0,0]$ and $[1,1]$. The intervals do not overlap. The cost is $\\min_{i \\in [0,0], j \\in [1,1]} |i-j| = |1-0| = 1$. The new nodal state interval is $[0,1]$.\n- Node $v_{2}$: Children states are $[2,2]$ and $[0,0]$. The intervals do not overlap. The cost is $|2-0|=2$. The new nodal state interval is $[0,2]$.\n- Node $v_{3}$: Children states are $[2,2]$ (from $t_{3}$) and $[0,2]$ (from $v_{2}$). The intersection is $[2,2]$. The cost is $0$. The new nodal state interval is $[2,2]$.\n- Node $v_{R}$: Children states are $[0,1]$ (from $v_{1}$) and $[2,2]$ (from $v_{3}$). The intervals do not overlap. The cost is $\\min_{i \\in [0,1], j \\in [2,2]} |i-j| = |2-1|=1$.\nThe total length for character $C$ is $L_{C} = 1 + 2 + 0 + 1 = 4$.\n\nAnalysis of Character $S$ (Shape):\nThis is a dependent character. As per the reductive recoding rule, we identify the taxa for which this character is applicable, which are those where $P=1$: taxa $t_{1}$, $t_{2}$, and $t_{4}$. The minimal subtree connecting these three taxa is $\\big((t_{1},t_{2}), t_{4}\\big)$. The length of character $S$ is calculated on this reduced three-taxon tree. The states are $t_{1}: 0$, $t_{2}: \\{0,1\\}$, $t_{4}: 2$.\n\nUnder Scheme $\\mathrm{U}$, $S$ is unordered multistate. We use the Fitch algorithm.\n- Tip state sets: $S(t_{1})=\\{0\\}$, $S(t_{2})=\\{0,1\\}$ (polymorphism treated as a state set), $S(t_{4})=\\{2\\}$.\n- Let the internal node be $v_{S1} = (t_{1}, t_{2})$. $S(t_{1}) \\cap S(t_{2}) = \\{0\\} \\cap \\{0,1\\} = \\{0\\}$. The set is non-empty, so $S(v_{S1}) = \\{0\\}$. Length increase is $0$.\n- At the root node $v_{SR} = (v_{S1}, t_{4})$, we have $S(v_{S1}) \\cap S(t_{4}) = \\{0\\} \\cap \\{2\\} = \\emptyset$. The set is empty, so $S(v_{SR}) = S(v_{S1}) \\cup S(t_{4}) = \\{0,2\\}$. Length increase is $1$.\nThe total length for character $S$ under Scheme $\\mathrm{U}$ is $L_{S, \\mathrm{U}} = 0 + 1 = 1$.\n\nUnder Scheme $\\mathrm{O}$, $S$ is ordered multistate. We use the Wagner algorithm on the same reduced tree. The polymorphism at $t_2$ is treated as the interval $[0,1]$.\n- Tip state intervals: $I(t_{1})=[0,0]$, $I(t_{2})=[0,1]$, $I(t_{4})=[2,2]$.\n- At node $v_{S1} = (t_{1}, t_{2})$, the child intervals are $[0,0]$ and $[0,1]$. Their intersection is $[0,0]$, which is non-empty. The cost is $0$. The new nodal interval is $[0,0]$.\n- At the root node $v_{SR} = (v_{S1}, t_{4})$, the child intervals are $[0,0]$ and $[2,2]$. These do not overlap. The cost is $\\min_{i \\in [0,0], j \\in [2,2]} |i-j| = |2-0| = 2$.\nThe total length for character $S$ under Scheme $\\mathrm{O}$ is $L_{S, \\mathrm{O}} = 0 + 2 = 2$.\n\nFinal Calculation:\nThe total tree length under Scheme $\\mathrm{U}$ is given by:\n$$L_{\\mathrm{U}} = L_{P} + L_{S, \\mathrm{U}} + L_{C} = 2 + 1 + 4 = 7$$\nThe total tree length under Scheme $\\mathrm{O}$ is given by:\n$$L_{\\mathrm{O}} = L_{P} + L_{S, \\mathrm{O}} + L_{C} = 2 + 2 + 4 = 8$$\nThe required quantity is the difference between these two lengths:\n$$L_{\\mathrm{O}} - L_{\\mathrm{U}} = 8 - 7 = 1$$\nThe difference arises solely from the treatment of the shape character $S$. Treating it as ordered ($0 \\to 1 \\to 2$) imposes a greater penalty for the change from state set $\\{0\\}$ to state $\\{2\\}$ on the reduced tree than treating it as unordered.", "answer": "$$\n\\boxed{1}\n$$", "id": "2840512"}, {"introduction": "While character-based methods analyze each data column individually, distance-based methods first summarize all genetic or morphological variation into a single matrix of pairwise distances. The challenge then becomes choosing the right algorithm to build a tree from this matrix. This practice, [@problem_id:2840492], provides a direct, hands-on comparison of two classic algorithms: UPGMA, which assumes a strict molecular clock, and Neighbor-Joining, which assumes a more relaxed property called additivity. By applying both methods to the same dataset and quantifying their success, you will see firsthand why understanding an algorithm's underlying assumptions is crucial for accurate phylogenetic inference.", "problem": "Consider four taxa $\\{A,B,C,D\\}$ with a symmetric pairwise distance matrix $D$ (interpretable as expected substitutions per site):\n$$\nD \\;=\\; \\begin{pmatrix}\n0 & 0.17 & 0.26 & 0.29\\\\\n0.17 & 0 & 0.27 & 0.22\\\\\n0.26 & 0.27 & 0 & 0.39\\\\\n0.29 & 0.22 & 0.39 & 0\n\\end{pmatrix}.\n$$\nThis matrix is nearly but not exactly ultrametric in the sense of the three-point condition. Starting only from core definitions in phylogenetic systematics and distance-based tree reconstruction, do the following:\n\n- Using the Unweighted Pair Group Method with Arithmetic Mean (UPGMA), construct the rooted ultrametric tree for $\\{A,B,C,D\\}$, including all intermediate merge heights and terminal branch lengths implied by the algorithm, and compute the sum of squared errors $\\mathrm{SSE}_{\\mathrm{UPGMA}}$ between the path distances in this UPGMA tree and the entries of $D$.\n\n- Using neighbor-joining (NJ), construct the unrooted additive tree for $\\{A,B,C,D\\}$, including the identification of the first joined pair, the interim reduced distances, and the final branch lengths, and compute the sum of squared errors $\\mathrm{SSE}_{\\mathrm{NJ}}$ between the path distances in this NJ tree and the entries of $D$.\n\n- Explain, using the definitions of ultrametricity and the algorithmic criteria of UPGMA and NJ, why UPGMA fails to recover the correct grouping on these data while NJ succeeds.\n\nFinally, compute the difference\n$$ \\Delta = \\mathrm{SSE}_{\\mathrm{UPGMA}} - \\mathrm{SSE}_{\\mathrm{NJ}} $$\nReport $\\Delta$ as a real number. Round your answer to four significant figures. Do not include any units.", "solution": "The problem requires the construction and evaluation of phylogenetic trees for four taxa $\\{A, B, C, D\\}$ using two distinct distance-based methods, UPGMA and Neighbor-Joining, based on a provided pairwise distance matrix $D$. First, we validate the problem. The givens are the set of taxa and the symmetric distance matrix $D$:\n$$\nD = \\begin{pmatrix}\n0 & 0.17 & 0.26 & 0.29 \\\\\n0.17 & 0 & 0.27 & 0.22 \\\\\n0.26 & 0.27 & 0 & 0.39 \\\\\n0.29 & 0.22 & 0.39 & 0\n\\end{pmatrix}\n$$\nThe problem is scientifically grounded, well-posed, and objective. It is a standard exercise in phylogenetic reconstruction. The data and methods are standard in the field of general biology, specifically systematics. The problem is valid. We proceed with the solution.\n\nFirst, we analyze the properties of the matrix $D$. The matrix is not ultrametric. For example, for the triplet $\\{A, C, D\\}$, the distances are $d(A,C)=0.26$, $d(A,D)=0.29$, and $d(C,D)=0.39$. The two largest distances, $0.39$ and $0.29$, are not equal, violating the three-point condition.\nHowever, the matrix is perfectly additive. For the four taxa, we check the four-point condition. Let the sums of opposing pairs of distances be $S_1 = d(A,B)+d(C,D)$, $S_2 = d(A,C)+d(B,D)$, and $S_3 = d(A,D)+d(B,C)$.\n$S_1 = 0.17 + 0.39 = 0.56$\n$S_2 = 0.26 + 0.22 = 0.48$\n$S_3 = 0.29 + 0.27 = 0.56$\nSince $S_1 = S_3 > S_2$, the matrix is additive and corresponds to the unrooted tree topology $((A,C),(B,D))$.\n\n**Unweighted Pair Group Method with Arithmetic Mean (UPGMA)**\n\nUPGMA is a hierarchical clustering algorithm that assumes a molecular clock, i.e., ultrametric data.\n**Iteration 1:** The initial clusters are $\\{A\\}, \\{B\\}, \\{C\\}, \\{D\\}$. The smallest distance in $D$ is $d(A,B) = 0.17$. We merge $A$ and $B$ into a new cluster $(AB)$. The height of the node connecting them is $h_{(AB)} = \\frac{d(A,B)}{2} = \\frac{0.17}{2} = 0.085$.\nThe distances from this new cluster to $C$ and $D$ are computed:\n$d((AB), C) = \\frac{d(A,C) + d(B,C)}{2} = \\frac{0.26 + 0.27}{2} = 0.265$\n$d((AB), D) = \\frac{d(A,D) + d(B,D)}{2} = \\frac{0.29 + 0.22}{2} = 0.255$\nThe new distance matrix is:\n$$\nD_1 = \\begin{array}{c|ccc}\n & (AB) & C & D \\\\ \\hline\n(AB) & 0 & 0.265 & 0.255 \\\\\nC & 0.265 & 0 & 0.39 \\\\\nD & 0.255 & 0.39 & 0\n\\end{array}\n$$\n**Iteration 2:** The smallest distance in $D_1$ is $d((AB), D) = 0.255$. We merge cluster $(AB)$ with $D$ to form $((AB)D)$. The height of this new node is $h_{((AB)D)} = \\frac{d((AB),D)}{2} = \\frac{0.255}{2} = 0.1275$.\n\n**Iteration 3:** The remaining clusters are $((AB)D)$ and $C$. The distance is:\n$d(((AB)D), C) = \\frac{d(A,C) + d(B,C) + d(D,C)}{3} = \\frac{0.26 + 0.27 + 0.39}{3} = \\frac{0.92}{3}$.\nWe merge them. The height of the root node is $h_{root} = \\frac{1}{2} d(((AB)D), C) = \\frac{1}{2} \\frac{0.92}{3} = \\frac{0.46}{3}$.\n\nThe resulting UPGMA tree has the topology $((A,B),D),C$. The path distances in this tree, $D_{\\mathrm{UPGMA}}$, are given by twice the height of the most recent common ancestor.\n$d_{\\mathrm{UPGMA}}(A,B) = 2 h_{(AB)} = 2(0.085) = 0.17$\n$d_{\\mathrm{UPGMA}}(A,D) = d_{\\mathrm{UPGMA}}(B,D) = 2 h_{((AB)D)} = 2(0.1275) = 0.255$\n$d_{\\mathrm{UPGMA}}(A,C) = d_{\\mathrm{UPGMA}}(B,C) = d_{\\mathrm{UPGMA}}(D,C) = 2 h_{root} = 2 (\\frac{0.46}{3}) = \\frac{0.92}{3}$\n\nThe sum of squared errors is $\\mathrm{SSE}_{\\mathrm{UPGMA}} = \\sum_{i<j} (D_{ij} - (D_{\\mathrm{UPGMA}})_{ij})^2$.\n$\\mathrm{SSE}_{\\mathrm{UPGMA}} = (0.17 - 0.17)^2 + (0.26 - \\frac{0.92}{3})^2 + (0.29 - 0.255)^2 + (0.27 - \\frac{0.92}{3})^2 + (0.22 - 0.255)^2 + (0.39 - \\frac{0.92}{3})^2$\n$= 0 + (\\frac{0.78 - 0.92}{3})^2 + (0.035)^2 + (\\frac{0.81 - 0.92}{3})^2 + (-0.035)^2 + (\\frac{1.17 - 0.92}{3})^2$\n$= (\\frac{-0.14}{3})^2 + (0.035)^2 + (\\frac{-0.11}{3})^2 + (-0.035)^2 + (\\frac{0.25}{3})^2$\n$= \\frac{0.0196}{9} + 0.001225 + \\frac{0.0121}{9} + 0.001225 + \\frac{0.0625}{9}$\n$= \\frac{0.0196+0.0121+0.0625}{9} + 2(0.001225) = \\frac{0.0942}{9} + 0.00245 = 0.010466... + 0.00245 = 0.0129166...$\nUsing fractions for precision: $\\mathrm{SSE}_{\\mathrm{UPGMA}} = (\\frac{-7}{150})^2 + (\\frac{7}{200})^2 + (\\frac{-11}{300})^2 + (\\frac{-7}{200})^2 + (\\frac{1}{12})^2 = \\frac{31}{2400}$.\n\n**Neighbor-Joining (NJ)**\n\nNJ is designed to reconstruct additive trees.\n**Iteration 1:** For $N=4$ taxa, we compute $r_i = \\sum_{k \\ne i} d(i,k)$.\n$r_A=0.17+0.26+0.29=0.72$\n$r_B=0.17+0.27+0.22=0.66$\n$r_C=0.26+0.27+0.39=0.92$\n$r_D=0.29+0.22+0.39=0.90$\nThe selection criterion is to minimize $Q_{ij} = (N-2)d(i,j) - r_i - r_j = 2d(i,j) - r_i - r_j$.\n$Q_{AC} = 2(0.26) - 0.72 - 0.92 = 0.52 - 1.64 = -1.12$\n$Q_{BD} = 2(0.22) - 0.66 - 0.90 = 0.44 - 1.56 = -1.12$\nThe other $Q$ values are all $-1.04$. The minimum value is $-1.12$, corresponding to pairs $(A,C)$ and $(B,D)$. This is consistent with the four-point condition. We choose to join $(A,C)$ first; this is the first identified pair. A new node $U$ is created.\nThe branch lengths to the new node $U$ are:\n$v_A = d(A,U) = \\frac{1}{2}d(A,C) + \\frac{1}{2(N-2)}(r_A-r_C) = \\frac{0.26}{2} + \\frac{0.72-0.92}{4} = 0.13 - 0.05 = 0.08$.\n$v_C = d(C,U) = d(A,C) - v_A = 0.26 - 0.08 = 0.18$.\nThe interim reduced distances to the new node $U$ from $B$ and $D$ are:\n$d(B,U) = \\frac{1}{2}(d(A,B)+d(C,B)-d(A,C)) = \\frac{1}{2}(0.17+0.27-0.26) = 0.09$.\n$d(D,U) = \\frac{1}{2}(d(A,D)+d(C,D)-d(A,C)) = \\frac{1}{2}(0.29+0.39-0.26) = 0.21$.\n\n**Iteration 2:** The remaining taxa are $\\{B,D,U\\}$, and their distances are $d(B,D)=0.22$, $d(B,U)=0.09$, $d(D,U)=0.21$. This defines the final tree, with a central node $V$ connecting $B,D,U$. The final three branch lengths are:\n$v_B = d(B,V) = \\frac{1}{2}(d(B,D)+d(B,U)-d(D,U)) = \\frac{1}{2}(0.22+0.09-0.21) = 0.05$.\n$v_D = d(D,V) = \\frac{1}{2}(d(B,D)+d(D,U)-d(B,U)) = \\frac{1}{2}(0.22+0.21-0.09) = 0.17$.\n$v_{UV} = d(U,V) = \\frac{1}{2}(d(B,U)+d(D,U)-d(B,D)) = \\frac{1}{2}(0.09+0.21-0.22) = 0.04$.\nThe final branch lengths are: $v_A=0.08$, $v_C=0.18$, $v_B=0.05$, $v_D=0.17$, and the internal branch length is $v_{UV}=0.04$. The topology is $((A,C),(B,D))$.\nThe path distances in the NJ tree, $D_{\\mathrm{NJ}}$, perfectly match the original matrix $D$:\n$d_{\\mathrm{NJ}}(A,C) = v_A+v_C = 0.08+0.18 = 0.26$.\n$d_{\\mathrm{NJ}}(B,D) = v_B+v_D = 0.05+0.17 = 0.22$.\n$d_{\\mathrm{NJ}}(A,B) = v_A+v_{UV}+v_B = 0.08+0.04+0.05 = 0.17$.\n$d_{\\mathrm{NJ}}(C,D) = v_C+v_{UV}+v_D = 0.18+0.04+0.17 = 0.39$.\nSince $D_{\\mathrm{NJ}} = D$, the sum of squared errors is $\\mathrm{SSE}_{\\mathrm{NJ}} = 0$.\n\n**Explanation of UPGMA Failure and NJ Success**\n\nUPGMA fails because it operates under the molecular clock assumption, which requires the distance matrix to be ultrametric. The algorithm's criterion is to greedily merge the pair of clusters with the minimum distance at each step. For the given matrix $D$, the globally smallest distance is $d(A,B)=0.17$. UPGMA thus incorrectly pairs $A$ and $B$, forcing the topology $((A,B),...)$, which contradicts the true additive structure revealed by the four-point condition. The underlying data is not ultrametric, as shown by violation of the three-point condition, meaning evolutionary rates have varied among lineages.\n\nNJ succeeds because its objective is to find the tree that best fits an additive distance matrix. The data provided is perfectly additive, satisfying the four-point condition for the topology $((A,C),(B,D))$. NJ's selection criterion, minimizing the $Q_{ij}$ values, is mathematically constructed to identify true neighbors in an additive tree. Consequently, it correctly identifies the pairs $(A,C)$ and $(B,D)$ as neighbors and reconstructs the correct tree topology and branch lengths, resulting in a perfect fit to the data ($\\mathrm{SSE}_{\\mathrm{NJ}}=0$). NJ does not assume a molecular clock and accommodates lineage-specific rate variation.\n\n**Final Calculation**\n\nThe difference in the sum of squared errors is:\n$\\Delta = \\mathrm{SSE}_{\\mathrm{UPGMA}} - \\mathrm{SSE}_{\\mathrm{NJ}} = \\frac{31}{2400} - 0 = \\frac{31}{2400} \\approx 0.0129166...$\nRounding to four significant figures, we get $\\Delta = 0.01292$.", "answer": "$$\\boxed{0.01292}$$", "id": "2840492"}, {"introduction": "Phylogenetic inference is rarely a process with a single, certain outcome; more often, it yields a collection of plausible trees, especially when using resampling techniques like the bootstrap to assess uncertainty. The final, critical step is to synthesize this collection of topologies into a summary that reflects consensus and conflict. This exercise, [@problem_id:2840470], walks you through this essential skill, guiding you to calculate clade support frequencies from a set of bootstrap replicate trees and use them to construct both strict and majority-rule consensus trees, which are the standard tools for communicating the statistical support for relationships in a final publication.", "problem": "You are given a collection of rooted, fully bifurcating phylogenetic trees on the same taxon set $\\{A,B,C,D,E\\}$, where $E$ is the fixed outgroup (rooting was performed by designating $E$ as the outgroup in all trees). The collection consists of $100$ nonparametric bootstrap replicates summarized as $5$ unique topologies with their replicate counts (supports). The trees are written in Newick format as follows, with the replicate count for each topology in parentheses:\n\n- $((A,B),(C,D),E)$ with count $(40)$, meaning the rooted tree $(((A,B),(C,D)),E)$.\n- $(A,(B,(C,D)),E)$ with count $(25)$, meaning the rooted tree $((A,(B,(C,D))),E)$.\n- $(((A,B),C),D,E)$ with count $(20)$, meaning the rooted tree $((((A,B),C),D),E)$.\n- $((A,(B,C)),D,E)$ with count $(10)$, meaning the rooted tree $(((A,(B,C)),D),E)$.\n- $((A,D),(B,C),E)$ with count $(5)$, meaning the rooted tree $(((A,D),(B,C)),E)$.\n\nTasks:\n\n1) Using the bootstrap replicate counts as weights, compute the frequency (as a decimal between $0$ and $1$) of every distinct nontrivial clade observed across the $100$ trees. Here, a nontrivial clade is any proper subset of $\\{A,B,C,D,E\\}$ with size at least $2$ that corresponds to a node in at least one of the rooted trees; do not count singleton leaves or the full set $\\{A,B,C,D,E\\}$. Explicitly list each such clade and its frequency.\n\n2) Derive the strict consensus tree by including exactly those clades that occur in all trees (frequency $1$). Identify any polytomies (nodes with more than $2$ direct descendants) required by lack of unanimous resolution, and state how many polytomies the strict consensus contains.\n\n3) Derive the majority-rule consensus tree by including all clades with frequency strictly greater than $0.5$. Verify compatibility of those clades by using the definition that two clades are compatible if one is a subset of the other or they are disjoint with respect to their complements in the full taxon set. Identify any polytomies in the majority-rule consensus, and state how many polytomies it contains.\n\nFinally, let $P$ be the total number of polytomies across both consensus trees combined, and let $S_{\\mathrm{maj}}$ be the sum of the frequencies of the nontrivial clades included in the majority-rule consensus tree. Compute the product $R = P \\times S_{\\mathrm{maj}}$. Express the final numerical value of $R$; no units are required and no rounding is necessary.", "solution": "The problem presented is scientifically grounded, well-posed, and objective. It is based on established, formal methods in the field of phylogenetics, specifically the construction and interpretation of consensus trees from bootstrap replicates. The data provided are self-consistent and sufficient to derive a unique solution. The problem is therefore valid.\n\nThe task is to analyze a set of $100$ bootstrap replicate trees on the taxon set $\\{A,B,C,D,E\\}$, where $E$ is the outgroup. We must compute clade frequencies, derive strict and majority-rule consensus trees, and perform a final calculation based on these results.\n\n**Step 1: Identify all distinct nontrivial clades and calculate their frequencies.**\nA nontrivial clade is a proper subset of $\\{A,B,C,D,E\\}$ containing at least $2$ taxa. The total number of replicates is $N_{total} = 100$. The frequencies are calculated as the sum of counts for trees containing a given clade, divided by $N_{total}$.\n\nThe $5$ unique topologies and their counts are:\n1.  Topology $T_1$: `(((A,B),(C,D)),E)`, count $n_1 = 40$. Nontrivial clades: $\\{A,B\\}$, $\\{C,D\\}$, $\\{A,B,C,D\\}$.\n2.  Topology $T_2$: `((A,(B,(C,D))),E)`, count $n_2 = 25$. Nontrivial clades: $\\{C,D\\}$, $\\{B,C,D\\}$, $\\{A,B,C,D\\}$.\n3.  Topology $T_3$: `((((A,B),C),D),E)`, count $n_3 = 20$. Nontrivial clades: $\\{A,B\\}$, $\\{A,B,C\\}$, $\\{A,B,C,D\\}$.\n4.  Topology $T_4$: `(((A,(B,C)),D),E)`, count $n_4 = 10$. Nontrivial clades: $\\{B,C\\}$, $\\{A,B,C\\}$, $\\{A,B,C,D\\}$.\n5.  Topology $T_5$: `(((A,D),(B,C)),E)`, count $n_5 = 5$. Nontrivial clades: $\\{A,D\\}$, $\\{B,C\\}$, $\\{A,B,C,D\\}$.\n\nNow, we list all unique nontrivial clades and sum their supporting counts:\n-   Clade $\\{A,B,C,D\\}$: Present in $T_1, T_2, T_3, T_4, T_5$. Count = $n_1+n_2+n_3+n_4+n_5 = 40+25+20+10+5 = 100$.\n    Frequency $f_{\\{A,B,C,D\\}} = \\frac{100}{100} = 1.0$.\n-   Clade $\\{C,D\\}$: Present in $T_1, T_2$. Count = $n_1+n_2 = 40+25 = 65$.\n    Frequency $f_{\\{C,D\\}} = \\frac{65}{100} = 0.65$.\n-   Clade $\\{A,B\\}$: Present in $T_1, T_3$. Count = $n_1+n_3 = 40+20 = 60$.\n    Frequency $f_{\\{A,B\\}} = \\frac{60}{100} = 0.60$.\n-   Clade $\\{A,B,C\\}$: Present in $T_3, T_4$. Count = $n_3+n_4 = 20+10 = 30$.\n    Frequency $f_{\\{A,B,C\\}} = \\frac{30}{100} = 0.30$.\n-   Clade $\\{B,C,D\\}$: Present in $T_2$. Count = $n_2 = 25$.\n    Frequency $f_{\\{B,C,D\\}} = \\frac{25}{100} = 0.25$.\n-   Clade $\\{B,C\\}$: Present in $T_4, T_5$. Count = $n_4+n_5 = 10+5 = 15$.\n    Frequency $f_{\\{B,C\\}} = \\frac{15}{100} = 0.15$.\n-   Clade $\\{A,D\\}$: Present in $T_5$. Count = $n_5 = 5$.\n    Frequency $f_{\\{A,D\\}} = \\frac{5}{100} = 0.05$.\n\n**Step 2: Derive the strict consensus tree and count its polytomies.**\nA strict consensus tree includes only those clades with a frequency of $1.0$. From our analysis, only one nontrivial clade meets this criterion: $\\{A,B,C,D\\}$. This clade defines the ingroup, separated from the outgroup $E$. Since no other clades are present in all $100$ trees, the relationships among the taxa $A, B, C, D$ are unresolved.\nThis results in a tree where the root splits into the outgroup $E$ and a node representing the common ancestor of the ingroup. This ingroup node then splits simultaneously into the four taxa $A, B, C, D$. Such a node with more than two descendants is a polytomy. The Newick representation is `((A,B,C,D),E)`.\nThe node ancestral to $\\{A,B,C,D\\}$ has four children ($A,B,C,D$), and thus constitutes a polytomy. The root node has two children (the ingroup node and taxon $E$), and is therefore bifurcating.\nThe total number of polytomies in the strict consensus tree is $1$.\n\n**Step 3: Derive the majority-rule consensus tree and count its polytomies.**\nA majority-rule consensus tree includes all clades with a frequency strictly greater than $0.5$. From our list of frequencies:\n-   $\\{A,B,C,D\\}$: frequency $1.0 > 0.5$\n-   $\\{C,D\\}$: frequency $0.65 > 0.5$\n-   $\\{A,B\\}$: frequency $0.60 > 0.5$\n\nAll other clades have frequencies $\\le 0.5$. We must check if these three clades are compatible. Two clades $C_1, C_2$ are compatible if one is a subset of the other ($C_1 \\subset C_2$ or $C_2 \\subset C_1$) or they are disjoint ($C_1 \\cap C_2 = \\emptyset$).\n-   Let $C_1 = \\{A,B,C,D\\}$, $C_2 = \\{A,B\\}$, $C_3 = \\{C,D\\}$.\n-   Comparing $C_2$ and $C_1$: $C_2 \\subset C_1$. They are compatible.\n-   Comparing $C_3$ and $C_1$: $C_3 \\subset C_1$. They are compatible.\n-   Comparing $C_2$ and $C_3$: $C_2 \\cap C_3 = \\{A,B\\} \\cap \\{C,D\\} = \\emptyset$. They are compatible.\nSince all clades are mutually compatible, they can be represented on a single tree.\n-   The clade $\\{A,B,C,D\\}$ separates the ingroup from the outgroup $E$.\n-   Within the ingroup, the disjoint clades $\\{A,B\\}$ and $\\{C,D\\}$ form a partition, implying that the common ancestor of $\\{A,B,C,D\\}$ splits into a common ancestor of $\\{A,B\\}$ and a common ancestor of $\\{C,D\\}$.\nThis defines a fully resolved, bifurcating tree with the Newick representation `(((A,B),(C,D)),E)`. In this tree, every internal node has exactly two descendants. Therefore, there are no polytomies.\nThe total number of polytomies in the majority-rule consensus tree is $0$.\n\n**Step 4: Compute the final value $R$.**\nFirst, we find $P$, the total number of polytomies across both consensus trees.\n$$P = (\\text{polytomies in strict tree}) + (\\text{polytomies in majority-rule tree}) = 1 + 0 = 1$$\nNext, we find $S_{\\mathrm{maj}}$, the sum of the frequencies of the nontrivial clades included in the majority-rule consensus tree. These clades are $\\{A,B,C,D\\}$, $\\{C,D\\}$, and $\\{A,B\\}$.\n$$S_{\\mathrm{maj}} = f_{\\{A,B,C,D\\}} + f_{\\{C,D\\}} + f_{\\{A,B\\}} = 1.0 + 0.65 + 0.60 = 2.25$$\nFinally, we compute the product $R = P \\times S_{\\mathrm{maj}}$.\n$$R = 1 \\times 2.25 = 2.25$$", "answer": "$$\\boxed{2.25}$$", "id": "2840470"}]}