{"hands_on_practices": [{"introduction": "Cell cycle transitions, like the entry into mitosis, are often sharp, switch-like events. This exercise explores the biochemical mechanism of \"zero-order ultrasensitivity,\" which can generate such decisive responses. By analyzing the Cdk1 activation circuit controlled by Wee1 and Cdc25, you will derive how saturating enzyme kinetics can produce a response far steeper than predicted by simple binding equilibria, a key principle in biological signal processing [@problem_id:2782168].", "id": "2782168", "problem": "Cyclin-dependent kinase 1 (Cdk1) activity governs the G2/M transition and is controlled by a push–pull cycle in which the Wee1 protein kinase inhibits Cdk1 by phosphorylating a conserved tyrosine, while the Cell division cycle 25 (Cdc25) phosphatase activates Cdk1 by removing this phosphate. Let the total concentration of Cdk1 complex be conserved at $S_T$, partitioned into an active, dephosphorylated form $A$ and an inactive, phosphorylated form $I$, so that $A + I = S_T$. Assume quasi-steady-state, single-substrate Michaelis–Menten kinetics for the two opposing enzymes with maximal velocities $V_{\\mathrm{W}}$ (Wee1) and $V_{\\mathrm{C}}$ (Cdc25), and Michaelis constants $K_{\\mathrm{W}}$ and $K_{\\mathrm{C}}$, respectively. The inactivation flux is $v_{\\mathrm{W}} = \\dfrac{V_{\\mathrm{W}} A}{K_{\\mathrm{W}} + A}$ and the activation flux is $v_{\\mathrm{C}} = \\dfrac{V_{\\mathrm{C}} I}{K_{\\mathrm{C}} + I}$. Define the active fraction $x \\equiv A/S_T$ and the dimensionless saturation parameters $J_{\\mathrm{W}} \\equiv K_{\\mathrm{W}}/S_T$ and $J_{\\mathrm{C}} \\equiv K_{\\mathrm{C}}/S_T$.\n\nTreat the ratio of enzyme capacities $\\alpha \\equiv V_{\\mathrm{C}}/V_{\\mathrm{W}}$ as the control parameter modulated by checkpoint surveillance (e.g., damage signaling biases $\\alpha$ toward Wee1 by suppressing Cdc25). At steady state $v_{\\mathrm{W}} = v_{\\mathrm{C}}$. Starting only from these definitions and Michaelis–Menten kinetics, perform the following:\n\n1. Derive an implicit steady-state relation $F(x,\\alpha; J_{\\mathrm{W}}, J_{\\mathrm{C}}) = 0$ for $x$ as a function of $\\alpha$ and the saturation parameters.\n2. Using implicit differentiation, obtain the local logarithmic sensitivity $s \\equiv \\dfrac{d x}{d \\ln \\alpha}$ evaluated at the midpoint $x = \\dfrac{1}{2}$. Show that in the zero-order (enzyme-saturating) regime, defined by $J_{\\mathrm{W}} \\ll 1$ and $J_{\\mathrm{C}} \\ll 1$, the apparent Hill coefficient at midpoint, defined by $n_{\\mathrm{app}} \\equiv 4 s$ for the input–output relation $x(\\alpha)$, reduces to a simple closed-form expression in terms of $J_{\\mathrm{W}}$ and $J_{\\mathrm{C}}$.\n3. Using $S_T = 10~\\mu\\mathrm{M}$, $K_{\\mathrm{W}} = 0.10~\\mu\\mathrm{M}$, and $K_{\\mathrm{C}} = 0.15~\\mu\\mathrm{M}$, compute the numerical value of $n_{\\mathrm{app}}$ using your closed-form expression from step 2. Provide your final answer as a single number with no units and do not round.", "solution": "The supplied problem will first be subjected to a rigorous validation procedure.\n\n### Step 1: Extract Givens\n- Total concentration of Cdk1 complex is conserved: $A + I = S_T$.\n- $A$ is the concentration of the active, dephosphorylated form of Cdk1.\n- $I$ is the concentration of the inactive, phosphorylated form of Cdk1.\n- Inactivation flux (by Wee1 kinase): $v_{\\mathrm{W}} = \\dfrac{V_{\\mathrm{W}} A}{K_{\\mathrm{W}} + A}$, where $V_{\\mathrm{W}}$ is the maximal velocity and $K_{\\mathrm{W}}$ is the Michaelis constant.\n- Activation flux (by Cdc25 phosphatase): $v_{\\mathrm{C}} = \\dfrac{V_{\\mathrm{C}} I}{K_{\\mathrm{C}} + I}$, where $V_{\\mathrm{C}}$ is the maximal velocity and $K_{\\mathrm{C}}$ is the Michaelis constant.\n- The system is at steady state: $v_{\\mathrm{W}} = v_{\\mathrm{C}}$.\n- Dimensionless variables and parameters are defined as:\n  - Active fraction: $x \\equiv A/S_T$.\n  - Saturation parameter for Wee1: $J_{\\mathrm{W}} \\equiv K_{\\mathrm{W}}/S_T$.\n  - Saturation parameter for Cdc25: $J_{\\mathrm{C}} \\equiv K_{\\mathrm{C}}/S_T$.\n  - Ratio of enzyme capacities (control parameter): $\\alpha \\equiv V_{\\mathrm{C}}/V_{\\mathrm{W}}$.\n- The problem asks for three tasks:\n  1. Derive an implicit steady-state relation $F(x,\\alpha; J_{\\mathrm{W}}, J_{\\mathrm{C}}) = 0$.\n  2. Derive a closed-form expression for the apparent Hill coefficient $n_{\\mathrm{app}} \\equiv 4s$ at midpoint $x = 1/2$ in the zero-order regime ($J_{\\mathrm{W}} \\ll 1$ and $J_{\\mathrm{C}} \\ll 1$), where $s \\equiv \\dfrac{d x}{d \\ln \\alpha}$.\n  3. Compute the numerical value of $n_{\\mathrm{app}}$ using the given values: $S_T = 10~\\mu\\mathrm{M}$, $K_{\\mathrm{W}} = 0.10~\\mu\\mathrm{M}$, and $K_{\\mathrm{C}} = 0.15~\\mu\\mathrm{M}$.\n\n### Step 2: Validate Using Extracted Givens\n- **Scientifically Grounded:** The problem is based on the well-established Michaelis–Menten model for enzyme kinetics, applied to a known biological regulatory motif (the Cdk1 activation switch). This is a standard and scientifically sound approach in systems biology.\n- **Well-Posed:** The problem provides all necessary definitions, equations, and constraints to derive a unique solution for each part. The questions are mathematically precise.\n- **Objective:** The problem is stated in objective, formal language, free of subjective claims or ambiguity.\n\n### Step 3: Verdict and Action\nThe problem is valid. It is scientifically sound, well-posed, and objective. A solution will be derived.\n\n### Solution Derivation\n\n**Part 1: Implicit Steady-State Relation**\n\nThe analysis begins with the steady-state condition, where the rate of Cdk1 inactivation by Wee1 equals the rate of Cdk1 activation by Cdc25.\n$$v_{\\mathrm{W}} = v_{\\mathrm{C}}$$\nSubstituting the given Michaelis–Menten expressions for the fluxes yields:\n$$\\dfrac{V_{\\mathrm{W}} A}{K_{\\mathrm{W}} + A} = \\dfrac{V_{\\mathrm{C}} I}{K_{\\mathrm{C}} + I}$$\nWe utilize the conservation law $A + I = S_T$, which implies $I = S_T - A$. Let us substitute this into the equation:\n$$\\dfrac{V_{\\mathrm{W}} A}{K_{\\mathrm{W}} + A} = \\dfrac{V_{\\mathrm{C}} (S_T - A)}{K_{\\mathrm{C}} + (S_T - A)}$$\nTo non-dimensionalize the equation, we divide both numerator and denominator of the left side by $S_T$ and likewise for the right side:\n$$\\dfrac{V_{\\mathrm{W}} (A/S_T)}{(K_{\\mathrm{W}}/S_T) + (A/S_T)} = \\dfrac{V_{\\mathrm{C}} (1 - A/S_T)}{(K_{\\mathrm{C}}/S_T) + (1 - A/S_T)}$$\nNow, we introduce the dimensionless quantities defined in the problem: $x = A/S_T$, $J_{\\mathrm{W}} = K_{\\mathrm{W}}/S_T$, and $J_{\\mathrm{C}} = K_{\\mathrm{C}}/S_T$.\n$$\\dfrac{V_{\\mathrm{W}} x}{J_{\\mathrm{W}} + x} = \\dfrac{V_{\\mathrm{C}} (1 - x)}{J_{\\mathrm{C}} + 1 - x}$$\nBy dividing both sides by $V_{\\mathrm{W}}$ (which must be non-zero for the system to function) and introducing $\\alpha = V_{\\mathrm{C}}/V_{\\mathrm{W}}$, we obtain:\n$$\\dfrac{x}{J_{\\mathrm{W}} + x} = \\dfrac{\\alpha (1 - x)}{J_{\\mathrm{C}} + 1 - x}$$\nTo express this as an implicit function $F(x,\\alpha; J_{\\mathrm{W}}, J_{\\mathrm{C}}) = 0$, we cross-multiply and rearrange the terms:\n$$x(J_{\\mathrm{C}} + 1 - x) = \\alpha (1 - x)(J_{\\mathrm{W}} + x)$$\n$$x(J_{\\mathrm{C}} + 1 - x) - \\alpha (1 - x)(J_{\\mathrm{W}} + x) = 0$$\nThis is the required implicit steady-state relation.\n\n**Part 2: Apparent Hill Coefficient in the Zero-Order Regime**\n\nThe local logarithmic sensitivity is defined as $s \\equiv \\dfrac{d x}{d \\ln \\alpha}$. We can calculate it as $s = \\left(\\dfrac{d \\ln \\alpha}{d x}\\right)^{-1}$. From the steady-state relation, we first express $\\alpha$ as a function of $x$:\n$$\\alpha(x) = \\frac{x}{1-x} \\cdot \\frac{J_{\\mathrm{C}} + 1 - x}{J_{\\mathrm{W}} + x}$$\nTaking the natural logarithm of both sides:\n$$\\ln \\alpha = \\ln x - \\ln(1-x) + \\ln(J_{\\mathrm{C}} + 1 - x) - \\ln(J_{\\mathrm{W}} + x)$$\nDifferentiating $\\ln \\alpha$ with respect to $x$:\n$$\\frac{d \\ln \\alpha}{d x} = \\frac{1}{x} - \\frac{-1}{1-x} + \\frac{-1}{J_{\\mathrm{C}} + 1 - x} - \\frac{1}{J_{\\mathrm{W}} + x}$$\n$$\\frac{d \\ln \\alpha}{d x} = \\frac{1}{x} + \\frac{1}{1-x} - \\frac{1}{J_{\\mathrm{C}} + 1 - x} - \\frac{1}{J_{\\mathrm{W}} + x}$$\nWe must evaluate this derivative at the midpoint, $x = 1/2$:\n$$\\left.\\frac{d \\ln \\alpha}{d x}\\right|_{x=1/2} = \\frac{1}{1/2} + \\frac{1}{1-1/2} - \\frac{1}{J_{\\mathrm{C}} + 1 - 1/2} - \\frac{1}{J_{\\mathrm{W}} + 1/2}$$\n$$\\left.\\frac{d \\ln \\alpha}{d x}\\right|_{x=1/2} = 2 + 2 - \\frac{1}{J_{\\mathrm{C}} + 1/2} - \\frac{1}{J_{\\mathrm{W}} + 1/2} = 4 - \\frac{1}{J_{\\mathrm{C}} + 1/2} - \\frac{1}{J_{\\mathrm{W}} + 1/2}$$\nThe problem specifies the zero-order (enzyme-saturating) regime, where $J_{\\mathrm{W}} \\ll 1$ and $J_{\\mathrm{C}} \\ll 1$. This implies that the substrate concentrations $A$ and $I$ are much larger than their respective Michaelis constants. We can use the first-order Taylor expansion $(1+z)^{-1} \\approx 1 - z$ for small $z$. Let's rewrite the fractions:\n$$\\frac{1}{J_{\\mathrm{W}} + 1/2} = \\frac{2}{2J_{\\mathrm{W}} + 1} = 2(1 + 2J_{\\mathrm{W}})^{-1}$$\nFor $J_{\\mathrm{W}} \\ll 1$, we have $2J_{\\mathrm{W}} \\ll 1$, so the approximation applies:\n$$2(1 + 2J_{\\mathrm{W}})^{-1} \\approx 2(1 - 2J_{\\mathrm{W}}) = 2 - 4J_{\\mathrm{W}}$$\nSimilarly, for $J_{\\mathrm{C}}$:\n$$\\frac{1}{J_{\\mathrm{C}} + 1/2} \\approx 2 - 4J_{\\mathrm{C}}$$\nSubstituting these approximations back into the expression for the derivative:\n$$\\left.\\frac{d \\ln \\alpha}{d x}\\right|_{x=1/2} \\approx 4 - (2 - 4J_{\\mathrm{C}}) - (2 - 4J_{\\mathrm{W}}) = 4 - 2 + 4J_{\\mathrm{C}} - 2 + 4J_{\\mathrm{W}} = 4(J_{\\mathrm{W}} + J_{\\mathrm{C}})$$\nThe logarithmic sensitivity $s$ at $x=1/2$ is the reciprocal of this value:\n$$s = \\left(\\left.\\frac{d \\ln \\alpha}{d x}\\right|_{x=1/2}\\right)^{-1} \\approx \\frac{1}{4(J_{\\mathrm{W}} + J_{\\mathrm{C}})}$$\nThe apparent Hill coefficient at the midpoint is defined as $n_{\\mathrm{app}} \\equiv 4s$. Therefore:\n$$n_{\\mathrm{app}} \\approx 4 \\left( \\frac{1}{4(J_{\\mathrm{W}} + J_{\\mathrm{C}})} \\right) = \\frac{1}{J_{\\mathrm{W}} + J_{\\mathrm{C}}}$$\nThis result is the classic formula for zero-order ultrasensitivity.\n\n**Part 3: Numerical Calculation of the Apparent Hill Coefficient**\n\nWe are given the following values: $S_T = 10~\\mu\\mathrm{M}$, $K_{\\mathrm{W}} = 0.10~\\mu\\mathrm{M}$, and $K_{\\mathrm{C}} = 0.15~\\mu\\mathrm{M}$. First, we compute the dimensionless saturation parameters $J_{\\mathrm{W}}$ and $J_{\\mathrm{C}}$.\n$$J_{\\mathrm{W}} = \\frac{K_{\\mathrm{W}}}{S_T} = \\frac{0.10~\\mu\\mathrm{M}}{10~\\mu\\mathrm{M}} = 0.01$$\n$$J_{\\mathrm{C}} = \\frac{K_{\\mathrm{C}}}{S_T} = \\frac{0.15~\\mu\\mathrm{M}}{10~\\mu\\mathrm{M}} = 0.015$$\nThe conditions for the zero-order approximation, $J_{\\mathrm{W}} = 0.01 \\ll 1$ and $J_{\\mathrm{C}} = 0.015 \\ll 1$, are satisfied. We can now use the derived closed-form expression for $n_{\\mathrm{app}}$:\n$$n_{\\mathrm{app}} = \\frac{1}{J_{\\mathrm{W}} + J_{\\mathrm{C}}}$$\nSubstituting the numerical values:\n$$n_{\\mathrm{app}} = \\frac{1}{0.01 + 0.015} = \\frac{1}{0.025}$$\nTo compute the final value:\n$$n_{\\mathrm{app}} = \\frac{1}{1/40} = 40$$\nThe apparent Hill coefficient is $40$.", "answer": "$$\\boxed{40}$$"}, {"introduction": "While deterministic models provide powerful insights, many cellular processes are fundamentally stochastic. This practice delves into the probabilistic nature of the Spindle Assembly Checkpoint (SAC), which ensures chromosomal stability. Using a simple yet powerful hazard model, you will explore the critical trade-off between the speed of mitotic progression and the accuracy of chromosome segregation, quantifying how a \"leaky\" checkpoint under partial BubR1 depletion can compromise genomic integrity [@problem_id:2782188].", "id": "2782188", "problem": "A central premise of mitotic surveillance is that the Spindle Assembly Checkpoint (SAC) halts anaphase until all kinetochores achieve correct bipolar attachment, with Bubbling Uninhibited by Benzimidazole Related 1 (BubR1) as a core component that both sustains checkpoint signaling and couples error status to Anaphase-Promoting Complex/Cyclosome (APC/C) inhibition. Consider a simplified stochastic model of kinetochore-microtubule error correction during metaphase in which the following widely used assumptions hold: (i) each erroneous kinetochore attachment corrects independently with a constant hazard (rate) per error, reflecting a Poisson process with an exponential waiting time; (ii) under intact SAC, anaphase onset occurs only when the number of erroneous attachments reaches zero; (iii) partial depletion of BubR1 weakens checkpoint signaling, which we approximate as introducing a constant, error-independent “leak” hazard for premature APC/C activation while any errors remain; and (iv) once the number of errors reaches zero, anaphase onset is immediate in both conditions.\n\nSuppose the cell enters metaphase with $N_{0}=4$ erroneous kinetochore attachments. Each erroneous attachment independently corrects with rate $k=0.3\\,\\text{min}^{-1}$. Under intact SAC (control), there is no leak hazard, so $v_{\\text{ctrl}}=0$. Under partial BubR1 depletion, the weakened checkpoint is represented by a constant premature anaphase leak hazard $v_{\\text{dep}}=0.05\\,\\text{min}^{-1}$ that is active whenever at least one error remains.\n\nUsing only the definitions above and the memoryless property of exponential waiting times, derive from first principles and compute:\n- the ratio $R$ of the expected metaphase duration under BubR1 depletion to that under control, $R=\\mathbb{E}[T_{\\text{dep}}]/\\mathbb{E}[T_{\\text{ctrl}}]$; and\n- the anaphase accuracy under BubR1 depletion, defined as the probability $P$ that the cell reaches zero errors before a premature anaphase leak event.\n\nReport your final answer as a two-entry row matrix with entries in the order $R$ and $P$. Express both $R$ and $P$ as dimensionless decimals. Round your entries to four significant figures.", "solution": "The problem statement is critically evaluated for validity.\n\nStep 1: Extract Givens.\n- The system is a stochastic model of kinetochore-microtubule error correction during metaphase.\n- Initial number of erroneous attachments: $N_{0}=4$.\n- Correction rate per erroneous attachment (a constant hazard): $k=0.3\\,\\text{min}^{-1}$. This process is Poisson with an exponential waiting time.\n- Corrections for each error are independent.\n- Control condition (intact Spindle Assembly Checkpoint, SAC): Anaphase onset occurs only when the number of errors reaches zero. The premature anaphase leak hazard is $v_{\\text{ctrl}}=0$.\n- BubR1 depletion condition: A weakened checkpoint introduces a constant, error-independent leak hazard for premature anaphase, $v_{\\text{dep}}=0.05\\,\\text{min}^{-1}$, which is active as long as the number of errors is greater than zero.\n- Anaphase onset is immediate once the number of errors reaches zero in both conditions.\n- Required calculations:\n  1. The ratio $R = \\mathbb{E}[T_{\\text{dep}}]/\\mathbb{E}[T_{\\text{ctrl}}]$, where $\\mathbb{E}[T_{\\text{dep}}]$ is the expected metaphase duration under BubR1 depletion and $\\mathbb{E}[T_{\\text{ctrl}}]$ is the expected duration under control.\n  2. The anaphase accuracy $P$ under BubR1 depletion, defined as the probability that the cell reaches zero errors before a premature anaphase leak event.\n- Final answer format: A two-entry row matrix $(R, P)$, with entries as decimals rounded to four significant figures.\n\nStep 2: Validate Using Extracted Givens.\n- **Scientifically Grounded**: The problem uses a simplified but standard and scientifically valid model of the Spindle Assembly Checkpoint. The components (BubR1, APC/C), concepts (error correction, checkpoint leak), and modeling assumptions (Poisson processes, competing risks) are fundamental to quantitative cell biology. The statement is free of pseudoscience.\n- **Well-Posed**: The problem is well-posed. It provides a complete set of parameters ($N_0$, $k$, $v_{\\text{dep}}$) and clearly defines the quantities to be derived. The assumptions of independent exponential processes ensure that a unique, stable, and meaningful solution exists and can be derived from first principles.\n- **Objective**: The problem is stated in precise, objective language without ambiguity or subjective claims.\n\nStep 3: Verdict and Action.\nThe problem is valid. A rigorous solution will be constructed from first principles as demanded.\n\nThe state of the system at any time $t$ can be described by the number of erroneous kinetochore attachments, $n$, where $n \\in \\{0, 1, ..., N_0\\}$. The process starts in state $n=N_0=4$. Metaphase ends when the system enters the absorbing state $n=0$ (successful correction) or when a premature anaphase leak occurs.\n\n**1. Calculation of Expected Metaphase Duration in Control, $\\mathbb{E}[T_{\\text{ctrl}}]$**\n\nIn the control condition, the leak hazard $v_{\\text{ctrl}}=0$. The only possible transition is the correction of an error, moving the system from state $n$ to state $n-1$. Since each of the $n$ errors corrects independently with rate $k$, the total rate of leaving state $n$ is the sum of the individual rates: $\\lambda_n = n \\times k$. This is a property of parallel, independent Poisson processes.\n\nThe time $T_n$ spent in any state $n$ is an exponentially distributed random variable with rate $\\lambda_n$. The expected time spent in state $n$ is therefore $\\mathbb{E}[T_n] = \\frac{1}{\\lambda_n} = \\frac{1}{nk}$.\n\nThe total duration of metaphase, $T_{\\text{ctrl}}$, is the sum of the times spent in each state from $n=N_0$ down to $n=1$. Due to the memoryless property of the exponential distribution, the time to transition from $n$ to $n-1$ is independent of the time spent in previous states. By linearity of expectation, the total expected duration is the sum of the expected times in each state:\n$$\n\\mathbb{E}[T_{\\text{ctrl}}] = \\sum_{n=1}^{N_0} \\mathbb{E}[T_n] = \\sum_{n=1}^{N_0} \\frac{1}{nk} = \\frac{1}{k} \\sum_{n=1}^{N_0} \\frac{1}{n}\n$$\nThe sum $\\sum_{n=1}^{N_0} \\frac{1}{n}$ is the $N_0$-th harmonic number, $H_{N_0}$.\nWith $N_0=4$ and $k=0.3\\,\\text{min}^{-1}$:\n$$\nH_4 = 1 + \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} = \\frac{12+6+4+3}{12} = \\frac{25}{12}\n$$\n$$\n\\mathbb{E}[T_{\\text{ctrl}}] = \\frac{1}{0.3} \\left(\\frac{25}{12}\\right) = \\frac{10}{3} \\times \\frac{25}{12} = \\frac{250}{36} = \\frac{125}{18}\\,\\text{min}\n$$\n\n**2. Calculation of Anaphase Accuracy under Depletion, $P$**\n\nUnder BubR1 depletion, when the system is in state $n > 0$, there are two competing exponential processes:\n1. Error correction: One of the $n$ errors is corrected, leading to state $n-1$. The total rate for this is $\\lambda_{\\text{corr}, n} = nk$.\n2. Premature anaphase (leak): The anaphase checkpoint is bypassed. The rate for this is $v_{\\text{dep}}$.\n\nThe probability that the next event is an error correction, given the system is in state $n$, is the ratio of the correction rate to the total rate of all events:\n$$\np_{\\text{corr}, n} = \\frac{\\lambda_{\\text{corr}, n}}{\\lambda_{\\text{corr}, n} + v_{\\text{dep}}} = \\frac{nk}{nk + v_{\\text{dep}}}\n$$\nFor the cell to achieve anaphase accuracy, it must successfully transition from state $n$ to $n-1$ for all $n$ from $N_0$ down to $1$, without any leak events. Since each step is an independent probabilistic event (due to the memoryless property), the total probability of success $P$ is the product of the individual probabilities of successful correction at each step:\n$$\nP = \\prod_{n=1}^{N_0} p_{\\text{corr}, n} = \\prod_{n=1}^{N_0} \\frac{nk}{nk + v_{\\text{dep}}}\n$$\nWith $N_0=4$, $k=0.3\\,\\text{min}^{-1}$, and $v_{\\text{dep}}=0.05\\,\\text{min}^{-1}$:\n$$\nP = \\left(\\frac{4 \\times 0.3}{4 \\times 0.3 + 0.05}\\right) \\times \\left(\\frac{3 \\times 0.3}{3 \\times 0.3 + 0.05}\\right) \\times \\left(\\frac{2 \\times 0.3}{2 \\times 0.3 + 0.05}\\right) \\times \\left(\\frac{1 \\times 0.3}{1 \\times 0.3 + 0.05}\\right)\n$$\n$$\nP = \\left(\\frac{1.2}{1.25}\\right) \\times \\left(\\frac{0.9}{0.95}\\right) \\times \\left(\\frac{0.6}{0.65}\\right) \\times \\left(\\frac{0.3}{0.35}\\right)\n$$\n$$\nP = \\left(\\frac{24}{25}\\right) \\times \\left(\\frac{18}{19}\\right) \\times \\left(\\frac{12}{13}\\right) \\times \\left(\\frac{6}{7}\\right) = \\frac{31104}{43225} \\approx 0.719618\n$$\n\n**3. Calculation of Expected Metaphase Duration under Depletion, $\\mathbb{E}[T_{\\text{dep}}]$**\n\nThe total expected duration is the sum of the expected times spent in each transient state $n \\in \\{1, ..., N_0\\}$. The expected time spent in state $n$ is the product of the probability of ever visiting state $n$, $P(\\text{visit } n)$, and the mean sojourn time in that state, $\\mathbb{E}[\\text{sojourn time in } n]$.\n\nThe sojourn time in state $n$ is exponentially distributed with a total rate $\\lambda_{\\text{total}, n} = nk + v_{\\text{dep}}$. Thus, $\\mathbb{E}[\\text{sojourn time in } n] = \\frac{1}{nk + v_{\\text{dep}}}$.\n\nThe process starts in state $N_0$, so $P(\\text{visit } N_0)=1$. The probability of visiting state $n-1$ is contingent on successfully correcting an error in state $n$. Therefore, the probability of visiting any state $n < N_0$ is the probability of having survived all prior steps from $N_0$ down to $n+1$:\n$$\nP(\\text{visit } n) = \\prod_{j=n+1}^{N_0} p_{\\text{corr}, j} = \\prod_{j=n+1}^{N_0} \\frac{jk}{jk + v_{\\text{dep}}}\n$$\nThe total expected metaphase duration is then:\n$$\n\\mathbb{E}[T_{\\text{dep}}] = \\sum_{n=1}^{N_0} P(\\text{visit } n) \\times \\mathbb{E}[\\text{sojourn time in } n] = \\sum_{n=1}^{N_0} \\left( \\left( \\prod_{j=n+1}^{N_0} \\frac{jk}{jk + v_{\\text{dep}}} \\right) \\frac{1}{nk + v_{\\text{dep}}} \\right)\n$$\nwhere the product term is $1$ for $n=N_0$.\nFor $N_0=4$:\n$\\mathbb{E}[T_{\\text{dep}}] = \\frac{1}{4k+v_{\\text{dep}}} + \\frac{4k}{4k+v_{\\text{dep}}}\\frac{1}{3k+v_{\\text{dep}}} + \\frac{4k}{4k+v_{\\text{dep}}}\\frac{3k}{3k+v_{\\text{dep}}}\\frac{1}{2k+v_{\\text{dep}}} + \\frac{4k}{4k+v_{\\text{dep}}}\\frac{3k}{3k+v_{\\text{dep}}}\\frac{2k}{2k+v_{\\text{dep}}}\\frac{1}{k+v_{\\text{dep}}}$\n\nLet's substitute the values $k=0.3$, $v_{\\text{dep}}=0.05$:\n$$\n\\mathbb{E}[T_{\\text{dep}}] = \\frac{1}{1.25} + \\frac{1.2}{1.25}\\frac{1}{0.95} + \\frac{1.2}{1.25}\\frac{0.9}{0.95}\\frac{1}{0.65} + \\frac{1.2}{1.25}\\frac{0.9}{0.95}\\frac{0.6}{0.65}\\frac{1}{0.35}\n$$\n$$\n\\mathbb{E}[T_{\\text{dep}}] = \\frac{4}{5} + \\frac{24}{25}\\frac{20}{19} + \\frac{24}{25}\\frac{18}{19}\\frac{20}{13} + \\frac{24}{25}\\frac{18}{19}\\frac{12}{13}\\frac{20}{7}\n$$\n$$\n\\mathbb{E}[T_{\\text{dep}}] = \\frac{4}{5} + \\frac{96}{95} + \\frac{1728}{1235} + \\frac{20736}{8645} = \\frac{6916+8736+12096+20736}{8645} = \\frac{48484}{8645}\\,\\text{min}\n$$\n$\\mathbb{E}[T_{\\text{dep}}] \\approx 5.60833\\,\\text{min}$.\n\n**4. Calculation of the Ratio $R$**\nThe ratio $R$ is $\\mathbb{E}[T_{\\text{dep}}] / \\mathbb{E}[T_{\\text{ctrl}}]$:\n$$\nR = \\frac{48484/8645}{125/18} = \\frac{48484 \\times 18}{8645 \\times 125} = \\frac{872712}{1080625} \\approx 0.807600\n$$\n\n**5. Final Answer Assembly**\nThe two required values are $R$ and $P$. Rounding to four significant figures:\n- $R \\approx 0.8076$\n- $P \\approx 0.7196$\n\nThe final answer is presented as a row matrix.", "answer": "$$\n\\boxed{\\begin{pmatrix} 0.8076 & 0.7196 \\end{pmatrix}}\n$$"}, {"introduction": "Connecting quantitative models to experimental data is a cornerstone of modern systems biology. This final practice is a hands-on computational exercise where you will fit a dose-response model to synthetic data representing the activation of the DNA damage sensor kinase, ATM. By writing a program to estimate key parameters like the half-activation dose ($K_{1/2}$) and cooperativity ($n$), you will learn how to extract mechanistic insights from quantitative measurements of checkpoint signaling pathways [@problem_id:2782198].", "id": "2782198", "problem": "You will write a complete, runnable program that estimates the parameters governing the activation of Ataxia Telangiectasia Mutated (ATM) kinase autophosphorylation as a function of ionizing radiation dose, under the assumption that the activation follows a normalized, saturating, monotonic, cooperative dose–response. The activation fraction is dimensionless and bounded between $0$ and $1$, equals $0$ at dose $0$, and approaches $1$ as dose grows large. The model has two unknown positive parameters: a half-activation dose $K_{1/2}$ (in Gray, abbreviated Gy) and a cooperativity exponent $n$ (unitless). The half-activation dose $K_{1/2}$ is defined by the dose at which the expected activation fraction equals $1/2$. The exponent $n$ controls the steepness of the transition from low to high activation with increasing dose. You will estimate $K_{1/2}$ and $n$ by minimizing the sum of squared residuals between the observed activation fractions and the model’s predictions, under the constraints $K_{1/2} > 0$ and $n > 0$.\n\nScientific and mechanistic foundation: In the DNA damage response, ionizing radiation produces double-strand breaks and associated DNA end-structures whose expected number per cell increases approximately linearly with dose under standard exposure conditions. The fraction of ATM molecules that become autophosphorylated and active rises with increasing lesion load due to multivalent recruitment and assembly at damage foci. Cooperative assembly at clustered lesions yields sigmoidal dose–responses whose half-activation and steepness reflect, respectively, the lesion load needed to engage sufficient recruitment and the degree of cooperative clustering.\n\nData generation specification to be reproduced exactly by your program:\n- For each test case, synthetic observations are generated from the following procedure:\n  1. Define a vector of nonnegative doses in Gray (Gy) as specified below for the case.\n  2. Compute the noise-free activation fraction at each dose using a normalized, saturating, monotonic, cooperative function with parameters $K_{1/2}$ and $n$ that equals $0$ at dose $0$, approaches $1$ as dose goes to infinity, and equals $1/2$ at dose $K_{1/2}$.\n  3. Add independent, identically distributed Gaussian noise with mean $0$ and standard deviation $\\sigma$ to each value.\n  4. Clip each noisy value to the interval $[0, 1]$.\n  5. All randomness must be reproducible using the given integer seed for a modern pseudorandom number generator.\n\nParameter estimation task:\n- Given the doses and the corresponding synthetic observations, estimate $K_{1/2}$ (in Gy) and $n$ (unitless) by minimizing the sum of squared residuals. Enforce bounds $K_{1/2} \\in (0, +\\infty)$ and $n \\in (0, +\\infty)$. You may use any smooth, consistent algorithm that returns a local minimizer.\n\nAnswer formatting requirements:\n- For each test case, output two numbers: the estimated $K_{1/2}$ (in Gy) and $n$ (unitless), each rounded to three decimal places.\n- Units: Report $K_{1/2}$ in Gy and $n$ as unitless. Do not print unit strings, only the numbers.\n- Final output format: Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, where each element is a two-element list in the order $[K_{1/2}, n]$ corresponding to one test case, for all test cases in the order given below. For example, the output should look like \"[[a,b],[c,d],...]\" without any extra spaces or text.\n\nTest suite to cover typical, low-cooperativity, high-cooperativity, and sub-cooperative edge cases:\n- Case A (typical cooperative response):\n  - True $K_{1/2}$: $1.2$ Gy\n  - True $n$: $2.5$\n  - Noise standard deviation $\\sigma$: $0.03$\n  - Random seed: $42$\n  - Doses (Gy): $0.0$, $0.1$, $0.2$, $0.4$, $0.8$, $1.2$, $1.6$, $2.4$, $3.2$, $4.0$\n- Case B (approximately noncooperative response):\n  - True $K_{1/2}$: $0.5$ Gy\n  - True $n$: $1.0$\n  - Noise standard deviation $\\sigma$: $0.02$\n  - Random seed: $123$\n  - Doses (Gy): $0.0$, $0.05$, $0.1$, $0.2$, $0.3$, $0.5$, $0.7$, $1.0$, $1.5$, $2.0$\n- Case C (highly cooperative response):\n  - True $K_{1/2}$: $2.0$ Gy\n  - True $n$: $6.0$\n  - Noise standard deviation $\\sigma$: $0.03$\n  - Random seed: $2023$\n  - Doses (Gy): $0.0$, $0.2$, $0.4$, $0.8$, $1.2$, $1.6$, $2.0$, $2.4$, $3.2$, $4.0$\n- Case D (sub-cooperative or heterogeneous response):\n  - True $K_{1/2}$: $0.8$ Gy\n  - True $n$: $0.7$\n  - Noise standard deviation $\\sigma$: $0.05$\n  - Random seed: $7$\n  - Doses (Gy): $0.0$, $0.1$, $0.2$, $0.4$, $0.6$, $0.8$, $1.0$, $1.4$, $2.0$, $3.0$\n\nScientific realism constraints:\n- The mapping from dose to expected lesion load is monotone nondecreasing and approximately linear within the given dose ranges, consistent with low-to-moderate ionizing radiation exposures.\n- The activation fraction remains within $[0, 1]$ and is dimensionless.\n\nYour program must implement the data generation exactly as specified, fit the model to the generated data, and produce the final output line in the exact format described. The answers for each case must be two floats rounded to three decimal places, in the order of the test suite.", "solution": "The problem statement is scientifically sound, well-posed, and objective. It presents a formalizable task based on established principles of biophysical modeling and statistical parameter estimation. All necessary data, constraints, and definitions required for deriving a unique and meaningful solution are provided. We may therefore proceed with the solution.\n\nThe problem requires us to estimate two parameters, the half-activation dose $K_{1/2}$ and the cooperativity exponent $n$, for a model describing the activation of Ataxia Telangiectasia Mutated (ATM) kinase in response to ionizing radiation. This constitutes a standard nonlinear regression problem.\n\n**1. Model Specification**\nThe dose-response relationship is described as a normalized, saturating, monotonic, and cooperative function. A function that rigorously meets these criteria is the Hill equation, which is a cornerstone for modeling cooperative phenomena in biochemistry and pharmacology. The activation fraction, $A$, as a function of radiation dose, $D$, is given by the following expression:\n$$\nA(D; K_{1/2}, n) = \\frac{D^n}{K_{1/2}^n + D^n}\n$$\nIn this model, the parameter $K_{1/2}$ represents the dose at which the activation is half-maximal, i.e., $A(K_{1/2}; K_{1/2}, n) = 1/2$. The parameter $n$ is the Hill coefficient, which quantifies the steepness of the response and thus reflects the degree of cooperativity. The problem specifies the physical constraints $K_{1/2} > 0$ and $n > 0$.\n\n**2. Synthetic Data Generation**\nFor each test case defined in the problem, synthetic experimental data must be generated. This process follows a precise, reproducible protocol. Given a vector of doses $\\{D_i\\}$, the true underlying parameters $K_{1/2, \\text{true}}$ and $n_{\\text{true}}$, a noise standard deviation $\\sigma$, and an integer random seed:\n1.  The noise-free activation values, $A_{i}^{\\text{true}}$, are calculated for each dose $D_i$ using the Hill equation: $A_{i}^{\\text{true}} = A(D_i; K_{1/2, \\text{true}}, n_{\\text{true}})$.\n2.  Independent and identically distributed Gaussian noise, $\\epsilon_i \\sim \\mathcal{N}(0, \\sigma^2)$, is added to each true activation value. The random number generator is seeded to ensure reproducibility. This yields the noisy values $A_{i}^{\\text{noisy}} = A_{i}^{\\text{true}} + \\epsilon_i$.\n3.  These noisy values are then clipped to the physically valid interval $[0, 1]$, as an activation fraction cannot be negative or greater than unity. The final observable data points are $y_i = \\text{clip}(A_i^{\\text{noisy}}, 0, 1)$.\n\n**3. Parameter Estimation via Optimization**\nThe central task is to find the parameter estimates, $(\\hat{K}_{1/2}, \\hat{n})$, that cause the model's predictions to best match the synthetic observations $(D_i, y_i)$. \"Best fit\" is defined in the sense of least squares. We minimize the sum of squared residuals (SSR), which serves as the objective function $\\mathcal{L}$:\n$$\n\\mathcal{L}(K_{1/2}, n) = \\sum_{i} \\left( y_i - A(D_i; K_{1/2}, n) \\right)^2\n$$\nThe parameters are estimated by finding the values that minimize this objective function, subject to the positivity constraints on the parameters:\n$$\n(\\hat{K}_{1/2}, \\hat{n}) = \\underset{K_{1/2} > 0, n > 0}{\\arg\\min} \\mathcal{L}(K_{1/2}, n)\n$$\nThis is a nonlinear, constrained optimization problem. It is solved computationally using a numerical optimization algorithm. The `scipy.optimize.minimize` function from the SciPy library is an appropriate tool. We employ the 'L-BFGS-B' method, a quasi-Newton algorithm that is well-suited for this task as it efficiently handles the simple box constraints (in this case, lower bounds) on the parameters. The lower bounds for $K_{1/2}$ and $n$ are set to a small positive value, such as $10^{-9}$, to numerically enforce the strict positivity $K_{1/2} > 0$ and $n > 0$.\n\n**4. Program Implementation**\nThe complete Python program executes this entire procedure. It is structured to first define the necessary functions for the Hill model, data generation, and the objective function. A primary `solve` function iterates through the four specified test cases. For each case:\n- It generates the synthetic dose-response data using the provided true parameters, noise level, and random seed.\n- It then calls `scipy.optimize.minimize`, providing the objective function, an initial guess for the parameters, and the positivity bounds, to find the optimal $(\\hat{K}_{1/2}, \\hat{n})$.\n- The resulting estimated parameters are rounded to three decimal places.\nFinally, the collection of results from all test cases is formatted into a single string as specified—a list of two-element lists—and printed to standard output.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import minimize\n\ndef hill_model(d, K, n):\n    \"\"\"\n    Computes the Hill equation for activation fraction.\n    This form is numerically stable for a wide range of n.\n    A(D; K, n) = D^n / (K^n + D^n) = 1 / (1 + (K/D)^n)\n    \n    Args:\n        d (np.ndarray): Array of doses.\n        K (float): Half-activation dose (K_1/2).\n        n (float): Cooperativity exponent.\n        \n    Returns:\n        np.ndarray: Array of activation fractions.\n    \"\"\"\n    # Handle the d=0 case to avoid division by zero.\n    # Where d is 0, K/d is infinity, and the result is 1/(1+inf) = 0.\n    ratio = np.divide(K, d, out=np.full_like(d, np.inf, dtype=float), where=d!=0)\n    activation = 1.0 / (1.0 + ratio**n)\n    return activation\n\ndef generate_data(doses, true_K, true_n, sigma, seed):\n    \"\"\"\n    Generates synthetic dose-response data with Gaussian noise.\n    \n    Args:\n        doses (np.ndarray): Doses at which to generate data.\n        true_K (float): True K_1/2 for data generation.\n        true_n (float): True n for data generation.\n        sigma (float): Standard deviation of Gaussian noise.\n        seed (int): Seed for the random number generator.\n        \n    Returns:\n        np.ndarray: Observed activation fractions, clipped to [0, 1].\n    \"\"\"\n    rng = np.random.default_rng(seed)\n    \n    # Calculate noise-free activation\n    true_activations = hill_model(doses, true_K, true_n)\n    \n    # Add Gaussian noise\n    noise = rng.normal(loc=0.0, scale=sigma, size=doses.shape)\n    noisy_activations = true_activations + noise\n    \n    # Clip to the valid range [0, 1]\n    observed_activations = np.clip(noisy_activations, 0.0, 1.0)\n    \n    return observed_activations\n\ndef estimate_parameters(doses, observations):\n    \"\"\"\n    Estimates K_1/2 and n by minimizing the sum of squared residuals.\n    \n    Args:\n        doses (np.ndarray): Dose values.\n        observations (np.ndarray): Observed activation fractions.\n        \n    Returns:\n        tuple[float, float]: Estimated K_1/2 and n.\n    \"\"\"\n    \n    def objective_function(params, D, y_obs):\n        \"\"\"SSR objective function for optimization.\"\"\"\n        K, n = params\n        y_pred = hill_model(D, K, n)\n        ssr = np.sum((y_obs - y_pred)**2)\n        return ssr\n\n    # Provide a reasonable initial guess for the optimizer.\n    # Guess K is the dose at which the observation is closest to 0.5.\n    try:\n        initial_K_guess = doses[np.argmin(np.abs(observations - 0.5))]\n        if initial_K_guess < 1e-6:  # Avoid a zero guess\n            initial_K_guess = np.median(doses[doses > 0])\n    except (ValueError, IndexError): # Fails if doses is empty or all doses are 0\n        initial_K_guess = 1.0\n    \n    initial_n_guess = 1.5\n    initial_guess = [initial_K_guess, initial_n_guess]\n    \n    # Define bounds to enforce K > 0 and n > 0.\n    # A small positive float is used for the lower bound for numerical stability.\n    bounds = [(1e-9, None), (1e-9, None)]\n    \n    result = minimize(\n        objective_function,\n        initial_guess,\n        args=(doses, observations),\n        method='L-BFGS-B',\n        bounds=bounds\n    )\n    \n    K_est, n_est = result.x\n    return K_est, n_est\n\ndef solve():\n    \"\"\"\n    Main function to run the analysis for all test cases and print results.\n    \"\"\"\n    test_cases = [\n        # Case A (typical cooperative response)\n        (1.2, 2.5, 0.03, 42, np.array([0.0, 0.1, 0.2, 0.4, 0.8, 1.2, 1.6, 2.4, 3.2, 4.0])),\n        # Case B (approximately noncooperative response)\n        (0.5, 1.0, 0.02, 123, np.array([0.0, 0.05, 0.1, 0.2, 0.3, 0.5, 0.7, 1.0, 1.5, 2.0])),\n        # Case C (highly cooperative response)\n        (2.0, 6.0, 0.03, 2023, np.array([0.0, 0.2, 0.4, 0.8, 1.2, 1.6, 2.0, 2.4, 3.2, 4.0])),\n        # Case D (sub-cooperative or heterogeneous response)\n        (0.8, 0.7, 0.05, 7, np.array([0.0, 0.1, 0.2, 0.4, 0.6, 0.8, 1.0, 1.4, 2.0, 3.0])),\n    ]\n\n    all_results_str = []\n    for true_K, true_n, sigma, seed, doses in test_cases:\n        # 1. Generate synthetic data\n        observations = generate_data(doses, true_K, true_n, sigma, seed)\n        \n        # 2. Estimate parameters\n        K_est, n_est = estimate_parameters(doses, observations)\n        \n        # 3. Round and format results\n        K_rounded = round(K_est, 3)\n        n_rounded = round(n_est, 3)\n        \n        all_results_str.append(f\"[{K_rounded},{n_rounded}]\")\n        \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(all_results_str)}]\")\n\nsolve()\n```"}]}