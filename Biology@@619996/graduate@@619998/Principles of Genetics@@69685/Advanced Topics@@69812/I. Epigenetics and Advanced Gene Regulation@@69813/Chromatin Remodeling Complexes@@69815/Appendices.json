{"hands_on_practices": [{"introduction": "Chromatin remodeling complexes are essential molecular machines that regulate gene expression by altering nucleosome architecture. At the heart of their function lie two primary mechanisms: sliding nucleosomes to new positions or evicting them from DNA entirely. This exercise challenges you to think like an experimentalist by designing a way to distinguish between these hypotheses [@problem_id:1475093]. You will explore how Chromatin Immunoprecipitation followed by Sequencing (ChIP-seq), a cornerstone technique in modern epigenetics, can provide unambiguous evidence for one mechanism over the other at an inducible gene promoter.", "problem": "A molecular biologist is investigating the mechanism of a newly discovered ATP-dependent chromatin remodeling complex, which they name \"Activator Recruitment Complex\" (ARC). ARC is known to be essential for the activation of a specific inducible gene, `GeneZ`, in response to a hormonal signal. The promoter of `GeneZ` is characterized by a single, well-positioned nucleosome, Nuc-P, which directly occludes the binding site for a critical transcription factor. The recruitment of ARC to the `GeneZ` promoter upon hormone stimulation is a prerequisite for transcription initiation.\n\nTwo competing hypotheses describe ARC's function at this promoter:\n1.  **The Eviction Hypothesis**: ARC completely removes the Nuc-P histone octamer from the DNA, thereby exposing the transcription factor binding site.\n2.  **The Sliding Hypothesis**: ARC pushes the Nuc-P nucleosome along the DNA to a new position, uncovering the binding site without detaching the histone octamer from the DNA molecule.\n\nTo differentiate between these two hypotheses, the researcher performs Chromatin Immunoprecipitation followed by Sequencing (ChIP-seq) using a high-affinity antibody against the core histone protein H3. This experiment is conducted on cell cultures both before (uninduced state) and after (induced state) a 30-minute treatment with the hormone. The resulting data is plotted as sequencing read depth versus genomic position centered on the `GeneZ` promoter. In the uninduced state, the H3 ChIP-seq data shows a single, sharp peak corresponding to the location of Nuc-P.\n\nWhich of the following potential outcomes for the H3 ChIP-seq data from the induced cell sample would provide the most unambiguous support for the Sliding Hypothesis?\n\nA. The H3 ChIP-seq peak corresponding to Nuc-P disappears entirely, and no new H3 peaks appear within 1000 base pairs of the promoter.\n\nB. The H3 ChIP-seq peak corresponding to Nuc-P is reduced in height by approximately 90%, while its position remains unchanged.\n\nC. The H3 ChIP-seq peak corresponding to Nuc-P disappears, and a new, distinct H3 ChIP-seq peak of similar total signal intensity appears centered 150 base pairs downstream of the original peak's location.\n\nD. The H3 ChIP-seq peak corresponding to Nuc-P remains identical in both position and intensity compared to the uninduced state.\n\nE. The single H3 ChIP-seq peak corresponding to Nuc-P is replaced by several small, broad peaks distributed across the entire promoter region.", "solution": "Define $S_{\\text{H3}}(x)$ as the ChIP-seq read-depth signal for histone H3 as a function of genomic coordinate $x$ centered on the promoter. In the uninduced state, a single sharp peak at $x_{0}$ reflects the well-positioned nucleosome Nuc-P over the transcription factor site.\n\nUnder the Eviction Hypothesis, ARC removes the histone octamer at Nuc-P. The predicted outcome is a loss of H3 signal at $x_{0}$ with no compensatory gain nearby; within a local promoter window $W$ the integrated signal decreases:\n$$\n\\int_{W} S_{\\text{H3}}^{\\text{induced}}(x)\\,dx \\ll \\int_{W} S_{\\text{H3}}^{\\text{uninduced}}(x)\\,dx,\n$$\nwith no new distinct peak appearing near the promoter.\n\nUnder the Sliding Hypothesis, ARC repositions Nuc-P along the same DNA without detachment. The predicted outcome is a shift of the H3 peak from $x_{0}$ to a new position $x_{1}$, with the original peak disappearing and a new distinct peak arising at $x_{1}$. Because the histone octamer remains bound within the promoter region, the integrated signal in $W$ is approximately conserved:\n$$\n\\int_{W} S_{\\text{H3}}^{\\text{induced}}(x)\\,dx \\approx \\int_{W} S_{\\text{H3}}^{\\text{uninduced}}(x)\\,dx,\n$$\nand the new peak’s total area (and typically its height and shape) is similar to that of the original, merely translated by a distance consistent with nucleosome repositioning.\n\nEvaluating the options:\nA shows disappearance with no nearby new peak, which matches eviction, not sliding.\nB shows a reduced peak at the same position, consistent with partial eviction or reduced occupancy, not with translational repositioning.\nC shows disappearance of the original peak and the appearance of a new, distinct H3 peak of similar total signal intensity at a position downstream by approximately one nucleosome footprint, which is the unambiguous signature of sliding with conservation of H3 occupancy in the promoter region.\nD shows no change, implying no remodeling.\nE shows diffuse, multiple small peaks, which is ambiguous (could reflect nucleosome fuzziness, partial eviction, or mixed repositioning), not a clear single sliding event.\n\nTherefore, the most unambiguous support for the Sliding Hypothesis is the outcome described in option C.", "answer": "$$\\boxed{C}$$", "id": "1475093"}, {"introduction": "Having established how to experimentally observe nucleosome remodeling, we now turn to a quantitative description of the sliding process itself. This practice delves into the biophysical engine driving a remodeler, challenging you to construct a mathematical model from first principles [@problem_id:2933156]. By integrating concepts of equilibrium binding, Michaelis-Menten enzyme kinetics, and the directional bias of a stochastic motor, you will derive the average velocity of a nucleosome, connecting molecular parameters to a macroscopic rate of action.", "problem": "An adenosine triphosphate (ATP)-dependent chromatin remodeling enzyme translocates DNA past the histone octamer in single-base-pair increments when bound to a nucleosome. Assume the following mechanistic features, all of which are consistent with well-established models for Superfamily $2$ helicase-like remodelers: (i) when the enzyme is bound to a nucleosome, each ATP hydrolysis event generates a forward step of size $1$ base pair with probability $p_{f}$, a backward step of size $1$ base pair with probability $p_{b}$, and no net displacement with probability $p_{0}$, with $p_{f}+p_{b}+p_{0}=1$; (ii) the ATPase is strongly stimulated by nucleosome binding such that the catalytic cycle follows Michaelis–Menten kinetics only in the bound state; and (iii) enzyme–nucleosome binding reaches rapid pre-equilibrium on the timescale of stepping, so that the fraction of time a representative nucleosome is occupied by the enzyme equals its equilibrium fractional occupancy.\n\nYou are given the following parameter values: total enzyme concentration $E_{T}=20$ nM, total nucleosome concentration $N_{T}=10$ nM, dissociation constant for $E+N \\rightleftharpoons EN$ equal to $K_{d}=5$ nM, catalytic turnover number in the bound state $k_{\\text{cat}}=50$ s$^{-1}$, Michaelis constant $K_{m}=0.10$ mM, ATP concentration $[\\text{ATP}]=0.50$ mM, and stepping probabilities $p_{f}=0.80$, $p_{b}=0.10$, $p_{0}=0.10$. Assume the step size per mechanochemical event is $1$ base pair and that ATP hydrolysis in the unbound state is negligible.\n\nStarting only from (a) the law of mass action for $1:1$ binding at equilibrium, (b) the Michaelis–Menten rate law for the bound-state ATPase cycle, and (c) the definition of velocity as expected displacement per unit time, derive an analytical expression for the mean sliding velocity of a representative nucleosome and then compute the mean time required to reposition a single nucleosome by $50$ base pairs. Round your final numerical answer to three significant figures. Express the final time in seconds.", "solution": "The problem presented is a valid exercise in biophysical chemistry, requiring the synthesis of concepts from binding equilibria, enzyme kinetics, and stochastic process theory. The problem is well-posed, scientifically grounded, and provides all necessary parameters for a unique solution. We shall proceed with the derivation.\n\nThe objective is to derive an expression for the mean sliding velocity of a nucleosome and then calculate the time required for a repositioning of $50$ base pairs ($bp$). The derivation will be built upon the three principles stipulated: the law of mass action, the Michaelis–Menten rate law, and the definition of velocity as expected displacement per unit time.\n\nFirst, we determine the concentration of the enzyme-nucleosome complex, $[EN]$, at equilibrium. The binding reaction is $E + N \\rightleftharpoons EN$. The dissociation constant, $K_d$, is defined by the law of mass action as:\n$$K_d = \\frac{[E][N]}{[EN]}$$\nHere, $[E]$ and $[N]$ are the free concentrations of the enzyme and nucleosome, respectively. The total concentrations, $E_T$ and $N_T$, are conserved:\n$$E_T = [E] + [EN]$$\n$$N_T = [N] + [EN]$$\nSubstituting the expressions for the free concentrations, $[E] = E_T - [EN]$ and $[N] = N_T - [EN]$, into the equation for $K_d$ yields:\n$$K_d = \\frac{(E_T - [EN])(N_T - [EN])}{[EN]}$$\nThis rearranges into a quadratic equation for $[EN]$:\n$$[EN]^2 - (E_T + N_T + K_d)[EN] + E_T N_T = 0$$\nSolving for $[EN]$ using the quadratic formula gives two potential solutions:\n$$[EN] = \\frac{(E_T + N_T + K_d) \\pm \\sqrt{(E_T + N_T + K_d)^2 - 4E_T N_T}}{2}$$\nThe concentration of the complex, $[EN]$, cannot exceed the total concentration of either reactant, i.e., $[EN] \\le N_T$ and $[EN] \\le E_T$. This condition requires selection of the negative root, which is the only physically meaningful solution.\n$$[EN] = \\frac{(E_T + N_T + K_d) - \\sqrt{(E_T + N_T + K_d)^2 - 4E_T N_T}}{2}$$\n\nSecond, we determine the fraction of time a representative nucleosome is occupied by the enzyme. The problem states this is equal to the equilibrium fractional occupancy, $\\theta_N$.\n$$\\theta_N = \\frac{[EN]}{N_T}$$\nSubstituting the expression for $[EN]$:\n$$\\theta_N = \\frac{(E_T + N_T + K_d) - \\sqrt{(E_T + N_T + K_d)^2 - 4E_T N_T}}{2N_T}$$\n\nThird, we determine the rate of ATP hydrolysis, which corresponds to the rate of translocation attempts. This occurs only in the bound state and follows Michaelis–Menten kinetics. The rate of stepping attempts per bound complex, $k_{\\text{step}}$, is given by:\n$$k_{\\text{step}} = \\frac{k_{\\text{cat}}[\\text{ATP}]}{K_m + [\\text{ATP}]}$$\nwhere $k_{\\text{cat}}$ is the turnover number, $K_m$ is the Michaelis constant, and $[\\text{ATP}]$ is the substrate concentration.\n\nFourth, we calculate the expected displacement per mechanochemical event (step). With a forward step probability $p_f$, a backward step probability $p_b$, and a step size of $\\Delta x = 1$ bp, the expected displacement per step, $\\langle \\Delta x \\rangle_{\\text{step}}$, is:\n$$\\langle \\Delta x \\rangle_{\\text{step}} = (+ \\Delta x) p_f + (-\\Delta x) p_b + (0) p_0 = (p_f - p_b)\\Delta x$$\n\nThe mean sliding velocity, $V$, of a representative nucleosome is the product of the average rate of stepping events for that nucleosome and the expected displacement per event. A nucleosome is only active for the fraction of time $\\theta_N$ that it is bound.\n$$V = \\theta_N \\times k_{\\text{step}} \\times \\langle \\Delta x \\rangle_{\\text{step}}$$\nSubstituting the derived expressions gives the full analytical expression for the mean velocity:\n$$V = \\left( \\frac{(E_T + N_T + K_d) - \\sqrt{(E_T + N_T + K_d)^2 - 4E_T N_T}}{2N_T} \\right) \\left( \\frac{k_{\\text{cat}}[\\text{ATP}]}{K_m + [\\text{ATP}]} \\right) (p_f - p_b)\\Delta x$$\n\nNow, we compute the numerical values for each component.\nGiven parameters: $E_T=20$ nM, $N_T=10$ nM, $K_d=5$ nM.\nThe fractional occupancy $\\theta_N$ is:\n$$\\theta_N = \\frac{(20 + 10 + 5) - \\sqrt{(20 + 10 + 5)^2 - 4(20)(10)}}{2(10)} = \\frac{35 - \\sqrt{35^2 - 800}}{20} = \\frac{35 - \\sqrt{1225 - 800}}{20} = \\frac{35 - \\sqrt{425}}{20}$$\nSince $\\sqrt{425} = \\sqrt{25 \\times 17} = 5\\sqrt{17}$,\n$$\\theta_N = \\frac{35 - 5\\sqrt{17}}{20} = \\frac{7 - \\sqrt{17}}{4}$$\n\nGiven parameters for kinetics: $k_{\\text{cat}}=50$ s$^{-1}$, $K_m=0.10$ mM, $[\\text{ATP}]=0.50$ mM.\nThe stepping rate $k_{\\text{step}}$ is:\n$$k_{\\text{step}} = \\frac{50 \\text{ s}^{-1} \\times 0.50 \\text{ mM}}{0.10 \\text{ mM} + 0.50 \\text{ mM}} = \\frac{25}{0.60} \\text{ s}^{-1} = \\frac{125}{3} \\text{ s}^{-1}$$\n\nGiven parameters for stepping: $p_f=0.80$, $p_b=0.10$, and $\\Delta x=1$ bp.\nThe expected displacement per step is:\n$$\\langle \\Delta x \\rangle_{\\text{step}} = (0.80 - 0.10) \\times 1 \\text{ bp} = 0.70 \\text{ bp}$$\n\nThe mean velocity $V$ is:\n$$V = \\left( \\frac{7 - \\sqrt{17}}{4} \\right) \\left( \\frac{125}{3} \\text{ s}^{-1} \\right) (0.70 \\text{ bp})$$\n$$V \\approx (0.71922) \\times (41.667 \\text{ s}^{-1}) \\times (0.70 \\text{ bp}) \\approx 20.978 \\text{ bp s}^{-1}$$\n\nFinally, we compute the mean time, $t$, required to reposition the nucleosome by a distance $D = 50$ bp. Assuming constant velocity:\n$$t = \\frac{D}{V}$$\n$$t = \\frac{50 \\text{ bp}}{V} = \\frac{50}{\\left( \\frac{7 - \\sqrt{17}}{4} \\right) \\left( \\frac{125}{3} \\right) (0.70)} \\text{ s}$$\n$$t = \\frac{50 \\times 4 \\times 3}{(7 - \\sqrt{17})(125)(0.7)} = \\frac{600}{(7 - \\sqrt{17})(87.5)} \\text{ s}$$\nUsing the previously calculated value for $V$:\n$$t \\approx \\frac{50}{20.978} \\text{ s} \\approx 2.3834 \\text{ s}$$\nRounding to three significant figures, the mean time is $2.38$ seconds.", "answer": "$$\\boxed{2.38}$$", "id": "2933156"}, {"introduction": "Our first two practices focused on the actions of remodelers at a single nucleosome. In reality, these complexes regulate thousands of genomic loci. This final exercise bridges the gap between single-molecule biophysics and genome-wide function by placing you in the role of a computational biologist [@problem_id:2796621]. You will implement an analysis pipeline to integrate multiple genome-scale datasets—including ATAC-seq for accessibility and ChIP-seq for histone marks and remodeler occupancy—to identify the direct targets of the SWI/SNF remodeler BRG1, a task central to modern genomics research.", "problem": "You are given a simplified, self-contained quantitative framework for integrating Assay for Transposase-Accessible Chromatin using sequencing (ATAC-seq), Histone H3 Lysine 27 acetylation (H3K27ac) Chromatin Immunoprecipitation sequencing (ChIP-seq), and Brahma-Related Gene 1 (BRG1, also known as SMARCA4) occupancy data in order to infer direct enhancer targets of the SWItch/Sucrose Non-Fermentable (SWI/SNF) chromatin remodeling complex upon BRG1 depletion. Design a program that implements a principled analysis grounded in the following fundamental base:\n\n- Active enhancers are marked by chromatin accessibility and histone acetylation. ATAC-seq read counts at an enhancer approximate its accessibility. H3K27ac ChIP-seq counts at an enhancer approximate its acetylation level.\n- Chromatin remodelers such as BRG1 directly modulate nucleosome positioning, thereby influencing enhancer accessibility and activity. Depleting BRG1 is expected to reduce enhancer accessibility and activity primarily at directly bound sites.\n- To quantify changes, use log-ratios of sequencing counts, stabilized by a positive pseudocount. To quantify association between BRG1 occupancy and enhancer changes across a set of enhancers, use the Pearson correlation coefficient.\n\nDefinitions to implement:\n\n- For an enhancer indexed by $i$, let $C^{A}_i$ and $D^{A}_i$ denote ATAC-seq counts in control and BRG1-depleted conditions, respectively. Let $C^{H}_i$ and $D^{H}_i$ denote H3K27ac ChIP-seq counts in control and BRG1-depleted conditions, respectively. Let $O_i$ denote the BRG1 occupancy score in control (e.g., ChIP-seq signal or peak strength).\n- Given a positive pseudocount $p$, define the base-$2$ log fold-change in accessibility as\n$$\n\\Delta^A_i = \\log_2\\!\\left(\\frac{D^{A}_i + p}{C^{A}_i + p}\\right),\n$$\nand the base-$2$ log fold-change in acetylation as\n$$\n\\Delta^H_i = \\log_2\\!\\left(\\frac{D^{H}_i + p}{C^{H}_i + p}\\right).\n$$\n- Define the Pearson correlation coefficient between two vectors $\\mathbf{x}=(x_i)$ and $\\mathbf{y}=(y_i)$ of equal length $n \\ge 2$ as\n$$\nr(\\mathbf{x},\\mathbf{y}) = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\left(\\sum_{i=1}^{n} (x_i - \\bar{x})^2\\right)\\left(\\sum_{i=1}^{n} (y_i - \\bar{y})^2\\right)}},\n$$\nwhere $\\bar{x}$ and $\\bar{y}$ are the arithmetic means. If the denominator is zero (i.e., zero variance in either vector), define $r(\\mathbf{x},\\mathbf{y}) = 0$ by convention.\n- Infer a set of putative direct BRG1 targets by thresholding using the following rule: an enhancer $i$ is called a direct target if and only if\n$$\nO_i \\ge \\tau_{\\mathrm{occ}}, \\quad \\Delta^A_i \\le -\\tau_{A}, \\quad \\Delta^H_i \\le -\\tau_{H},\n$$\nwhere $\\tau_{\\mathrm{occ}} > 0$, $\\tau_{A} > 0$, and $\\tau_{H} > 0$ are user-specified thresholds.\n\nYour program must implement the above definitions exactly and compute the following outputs for each test case:\n- The Pearson correlation coefficient between $\\{O_i\\}$ and $\\{\\Delta^A_i\\}$, rounded to three decimal places.\n- The Pearson correlation coefficient between $\\{O_i\\}$ and $\\{\\Delta^H_i\\}$, rounded to three decimal places.\n- The number of inferred direct targets (an integer).\n- The list of zero-based indices of inferred direct targets, in increasing order.\n\nEdge handling:\n- All logarithms are base $2$.\n- Use the provided pseudocount $p$ to avoid division by zero.\n- If the variance of either vector in the Pearson correlation is zero, return $0$ for that correlation.\n\nTest suite:\nProvide a program that hardcodes and evaluates the following three independent test cases. For each test case $t \\in \\{1,2,3\\}$, the input consists of arrays for $C^{A}$, $D^{A}$, $C^{H}$, $D^{H}$, $O$, and the scalars $p$, $\\tau_{\\mathrm{occ}}$, $\\tau_A$, $\\tau_H$. Arrays are aligned by enhancer index and must be treated as zero-indexed.\n\n- Test Case $1$ (general case):\n  - $C^{A} = [180, 240, 95, 160, 210, 130, 75, 300]$\n  - $D^{A} = [90, 200, 70, 120, 140, 110, 60, 260]$\n  - $C^{H} = [1500, 2200, 800, 1200, 2400, 900, 700, 2600]$\n  - $D^{H} = [900, 1800, 700, 900, 1900, 850, 650, 2100]$\n  - $O = [5.2, 7.8, 2.1, 6.0, 8.5, 3.5, 1.0, 9.0]$\n  - $p = 1.0$, $\\tau_{\\mathrm{occ}} = 6.0$, $\\tau_{A} = 0.3$, $\\tau_{H} = 0.25$\n\n- Test Case $2$ (boundary conditions with zeros and threshold ties):\n  - $C^{A} = [0, 50, 100, 0]$\n  - $D^{A} = [0, 25, 200, 0]$\n  - $C^{H} = [0, 400, 800, 0]$\n  - $D^{H} = [0, 200, 1200, 0]$\n  - $O = [6.0, 6.0, 5.9, 10.0]$\n  - $p = 0.5$, $\\tau_{\\mathrm{occ}} = 6.0$, $\\tau_{A} = 0.5$, $\\tau_{H} = 0.5$\n\n- Test Case $3$ (no variation edge case):\n  - $C^{A} = [100, 100, 100, 100]$\n  - $D^{A} = [100, 100, 100, 100]$\n  - $C^{H} = [1000, 1000, 1000, 1000]$\n  - $D^{H} = [1000, 1000, 1000, 1000]$\n  - $O = [3.0, 3.0, 3.0, 3.0]$\n  - $p = 1.0$, $\\tau_{\\mathrm{occ}} = 5.0$, $\\tau_{A} = 0.1$, $\\tau_{H} = 0.1$\n\nFinal output format:\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each test case result must itself be a list of the form $[\\text{corr\\_ATAC}, \\text{corr\\_H3K27ac}, \\text{n\\_direct}, \\text{direct\\_indices}]$, where $\\text{corr\\_ATAC}$ and $\\text{corr\\_H3K27ac}$ are floats rounded to three decimal places, $\\text{n\\_direct}$ is an integer, and $\\text{direct\\_indices}$ is a list of integers. Concretely, your output must look like\n$[[r^A_1, r^H_1, n_1, [\\dots]], [r^A_2, r^H_2, n_2, [\\dots]], [r^A_3, r^H_3, n_3, [\\dots]]]$\nwith the values computed for the above test suite and no additional text.", "solution": "The problem statement has been rigorously evaluated and is deemed valid. It is scientifically grounded in the principles of chromatin biology, mathematically well-posed, and free from any ambiguity, contradiction, or factual unsoundness. The problem provides a clear, quantitative framework for a simplified analysis of epigenomic data, which is a common task in computational biology. We shall, therefore, proceed with the derivation of the solution.\n\nThe objective is to analyze a set of putative enhancers using multimodal sequencing data to infer direct targets of the BRG1 chromatin remodeler. This is accomplished by implementing a series of precise computational steps for each provided test case.\n\nThe methodology is structured as follows:\n\n1.  **Computation of Log-Fold Changes**: For each enhancer, indexed by $i$, the change in chromatin accessibility and histone acetylation upon BRG1 depletion is quantified. We are given the base-$2$ log fold-change formulas:\n    -   Change in accessibility: $\\Delta^A_i = \\log_2\\!\\left(\\frac{D^{A}_i + p}{C^{A}_i + p}\\right)$\n    -   Change in acetylation: $\\Delta^H_i = \\log_2\\!\\left(\\frac{D^{H}_i + p}{C^{H}_i + p}\\right)$\n\n    Here, $C^{A}_i$ and $C^{H}_i$ are the ATAC-seq and H3K27ac ChIP-seq counts in the control condition, respectively. $D^{A}_i$ and $D^{H}_i$ are the corresponding counts in the BRG1-depleted condition. A positive pseudocount, $p$, is added to each term to stabilize the ratio, preventing division by zero and mitigating the impact of noise at low count values. These calculations produce two vectors, $\\mathbf{\\Delta}^A = \\{\\Delta^A_i\\}$ and $\\mathbf{\\Delta}^H = \\{\\Delta^H_i\\}$, representing the response of each enhancer to BRG1 depletion.\n\n2.  **Computation of Pearson Correlation Coefficients**: We must quantify the association between BRG1 occupancy at enhancers and the observed changes in accessibility and acetylation. This is achieved using the Pearson correlation coefficient, $r$. We compute two such coefficients:\n    -   $r(\\mathbf{O}, \\mathbf{\\Delta}^A)$: The correlation between the BRG1 occupancy vector $\\mathbf{O} = \\{O_i\\}$ and the accessibility change vector $\\mathbf{\\Delta}^A$.\n    -   $r(\\mathbf{O}, \\mathbf{\\Delta}^H)$: The correlation between the BRG1 occupancy vector $\\mathbf{O}$ and the acetylation change vector $\\mathbf{\\Delta}^H$.\n\n    The formula for the Pearson correlation coefficient between two vectors $\\mathbf{x}$ and $\\mathbf{y}$ of length $n$ is:\n    $$\n    r(\\mathbf{x},\\mathbf{y}) = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\left(\\sum_{i=1}^{n} (x_i - \\bar{x})^2\\right)\\left(\\sum_{i=1}^{n} (y_i - \\bar{y})^2\\right)}}\n    $$\n    where $\\bar{x}$ and $\\bar{y}$ are the sample means. As per the problem's explicit instruction, if the variance of either $\\mathbf{x}$ or $\\mathbf{y}$ is zero (making the denominator zero), the correlation $r(\\mathbf{x},\\mathbf{y})$ is defined to be $0$. The final values must be rounded to three decimal places.\n\n3.  **Identification of Direct Targets**: A set of criteria is provided to classify an enhancer as a \"direct target\". This classification is based on the premise that direct targets of BRG1 should have high BRG1 occupancy and exhibit a significant reduction in both accessibility and acetylation upon BRG1 depletion. An enhancer $i$ is classified as a direct target if and only if all three of the following conditions are met:\n    $$\n    O_i \\ge \\tau_{\\mathrm{occ}}, \\quad \\Delta^A_i \\le -\\tau_{A}, \\quad \\Delta^H_i \\le -\\tau_{H}\n    $$\n    where $\\tau_{\\mathrm{occ}}$, $\\tau_A$, and $\\tau_H$ are given positive thresholds for occupancy, accessibility reduction, and acetylation reduction, respectively. Note that a reduction corresponds to a negative log-fold change, hence the conditions $\\Delta^A_i \\le -\\tau_{A}$ and $\\Delta^H_i \\le -\\tau_{H}$.\n\n4.  **Assembly of Results**: For each test case, the final output is compiled into a list containing four elements:\n    -   The computed correlation $r(\\mathbf{O}, \\mathbf{\\Delta}^A)$, rounded.\n    -   The computed correlation $r(\\mathbf{O}, \\mathbf{\\Delta}^H)$, rounded.\n    -   The total number of enhancers identified as direct targets, an integer.\n    -   A list of the zero-based indices of these direct targets, sorted in increasing order.\n\nThe implementation will apply this sequence of operations to each of the three specified test cases to generate the final, formatted output. The use of vectorized operations, as provided by a library such as `NumPy`, is the most efficient and direct way to implement these calculations.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the chromatin remodeling analysis problem for the three given test cases.\n    \"\"\"\n    \n    test_cases = [\n        {\n            \"C_A\": [180, 240, 95, 160, 210, 130, 75, 300],\n            \"D_A\": [90, 200, 70, 120, 140, 110, 60, 260],\n            \"C_H\": [1500, 2200, 800, 1200, 2400, 900, 700, 2600],\n            \"D_H\": [900, 1800, 700, 900, 1900, 850, 650, 2100],\n            \"O\": [5.2, 7.8, 2.1, 6.0, 8.5, 3.5, 1.0, 9.0],\n            \"p\": 1.0, \"tau_occ\": 6.0, \"tau_A\": 0.3, \"tau_H\": 0.25\n        },\n        {\n            \"C_A\": [0, 50, 100, 0],\n            \"D_A\": [0, 25, 200, 0],\n            \"C_H\": [0, 400, 800, 0],\n            \"D_H\": [0, 200, 1200, 0],\n            \"O\": [6.0, 6.0, 5.9, 10.0],\n            \"p\": 0.5, \"tau_occ\": 6.0, \"tau_A\": 0.5, \"tau_H\": 0.5\n        },\n        {\n            \"C_A\": [100, 100, 100, 100],\n            \"D_A\": [100, 100, 100, 100],\n            \"C_H\": [1000, 1000, 1000, 1000],\n            \"D_H\": [1000, 1000, 1000, 1000],\n            \"O\": [3.0, 3.0, 3.0, 3.0],\n            \"p\": 1.0, \"tau_occ\": 5.0, \"tau_A\": 0.1, \"tau_H\": 0.1\n        }\n    ]\n\n    def calculate_pearson_r(x, y):\n        \"\"\"\n        Calculates the Pearson correlation coefficient. Returns 0 if variance of either input is 0.\n        \"\"\"\n        if x.std() == 0 or y.std() == 0:\n            return 0.0\n        return np.corrcoef(x, y)[0, 1]\n\n    results = []\n    for case in test_cases:\n        # Convert lists to numpy arrays for vectorized operations\n        C_A = np.array(case[\"C_A\"])\n        D_A = np.array(case[\"D_A\"])\n        C_H = np.array(case[\"C_H\"])\n        D_H = np.array(case[\"D_H\"])\n        O = np.array(case[\"O\"])\n        p = case[\"p\"]\n        tau_occ = case[\"tau_occ\"]\n        tau_A = case[\"tau_A\"]\n        tau_H = case[\"tau_H\"]\n\n        # Step 1: Calculate log fold-changes\n        delta_A = np.log2((D_A + p) / (C_A + p))\n        delta_H = np.log2((D_H + p) / (C_H + p))\n\n        # Step 2: Calculate Pearson correlation coefficients\n        corr_ATAC = calculate_pearson_r(O, delta_A)\n        corr_H3K27ac = calculate_pearson_r(O, delta_H)\n\n        # Round to three decimal places\n        corr_ATAC_rounded = round(corr_ATAC, 3)\n        corr_H3K27ac_rounded = round(corr_H3K27ac, 3)\n\n        # Step 3: Identify direct targets\n        target_indices = np.where(\n            (O >= tau_occ) & \n            (delta_A <= -tau_A) & \n            (delta_H <= -tau_H)\n        )[0]\n        \n        n_direct = len(target_indices)\n        direct_indices_list = target_indices.tolist()\n\n        # Step 4: Assemble results for the case\n        case_result = [\n            corr_ATAC_rounded,\n            corr_H3K27ac_rounded,\n            n_direct,\n            direct_indices_list\n        ]\n        results.append(case_result)\n\n    # Format the final output string to remove spaces for compact representation\n    # e.g., '[1, 2, [3, 4]]' -> '[1,2,[3,4]]'\n    final_output_str = f\"[{','.join(str(item).replace(' ', '') for item in results)}]\"\n    \n    print(final_output_str)\n\nsolve()\n```", "id": "2796621"}]}