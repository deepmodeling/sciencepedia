{"hands_on_practices": [{"introduction": "We begin with a foundational skill for any cancer genomicist: interpreting sequencing data from a tumor biopsy. A tumor sample is a mixture of cancer and normal cells, further complicated by copy number alterations and subclonal heterogeneity. This exercise guides you through deriving the mathematical relationship between these biological parameters and the variant allele frequency ($v$), a key metric measured by DNA sequencing, providing the essential framework for quantitatively interpreting genomic data from mixed tumor samples [@problem_id:2858056].", "problem": "A tumor biopsy is a mixture of cancer and normal cells. Let $p$ denote the tumor purity, defined as the fraction of cells in the sample that are cancer cells, so the fraction of normal cells is $(1 - p)$. Assume normal cells are diploid at the locus of interest with total copy number $2$, and that they do not harbor the mutation. In the cancer cell population, the local total copy number at the locus is $C$ (assume all cancer cells share this local total copy number), and a Single-Nucleotide Variant (SNV) is heterozygous in each cancer cell that carries it, meaning exactly one of the $C$ chromosomal copies carries the mutant allele in those cells. Let $\\phi$ denote the Cancer Cell Fraction (CCF), the fraction of cancer cells that carry the SNV; in a clonal case $\\phi = 1$, whereas subclonal cases have $0 < \\phi < 1$. The Variant Allele Frequency (VAF), denoted $v$, is defined as the expected fraction of sequencing reads covering the locus that carry the SNV, under the assumptions of unbiased sampling across cells and alleles and no allele-specific amplification bias.\n\nStarting from these definitions and fundamental counting of allele copies contributed by each compartment of the sample, derive an expression for the expected VAF $v$ as a function of $p$, $C$, and $\\phi$. Express your final answer as a single simplified analytic expression in terms of $p$, $C$, and $\\phi$. No numerical approximation or rounding is required, and no units should be reported.", "solution": "The problem statement has been analyzed for validity and is determined to be a well-posed, scientifically grounded problem in quantitative biology. It is free of contradiction, ambiguity, and pseudoscience. We shall now proceed with its formal derivation.\n\nThe Variant Allele Frequency, $v$, is defined as the expected fraction of all alleles at a specific genomic locus that carry the mutant allele. Assuming unbiased sampling, this frequency can be expressed as the ratio of the total number of mutant alleles to the total number of alleles at that locus within the entire cell sample population.\n$$v = \\frac{N_{\\text{mutant}}}{N_{\\text{total}}}$$\nwhere $N_{\\text{mutant}}$ is the total count of mutant alleles and $N_{\\text{total}}$ is the total count of all alleles (mutant and wild-type) at the locus.\n\nTo derive an expression for $v$, we will consider a representative tissue sample comprising an arbitrary total of $N$ cells. This quantity $N$ is a scaling factor that will, and must, be eliminated from the final expression, as $v$ is an intensive property.\n\nThe sample consists of two distinct cell populations: normal cells and cancer cells.\nThe number of normal cells in the sample is given by $N_{\\text{normal}} = (1 - p)N$, where $p$ is the tumor purity.\nThe number of cancer cells is given by $N_{\\text{cancer}} = pN$.\n\nFirst, we will compute the denominator, $N_{\\text{total}}$. This is the sum of alleles contributed by the normal and cancer cell compartments.\nNormal cells are specified to be diploid at the locus of interest, meaning each normal cell contributes $2$ alleles. The total number of alleles from the normal cell population is:\n$$N_{\\text{alleles, normal}} = N_{\\text{normal}} \\times 2 = (1 - p)N \\times 2 = 2(1 - p)N$$\nCancer cells are specified to have a total copy number of $C$ at this locus. Therefore, each cancer cell contributes $C$ alleles. The total number of alleles from the cancer cell population is:\n$$N_{\\text{alleles, cancer}} = N_{\\text{cancer}} \\times C = (pN) \\times C = pCN$$\nThe total number of alleles in the entire sample, $N_{\\text{total}}$, is the sum of these two contributions:\n$$N_{\\text{total}} = N_{\\text{alleles, normal}} + N_{\\text{alleles, cancer}} = 2(1 - p)N + pCN = N(2(1 - p) + pC)$$\n\nNext, we will compute the numerator, $N_{\\text{mutant}}$. This is the total number of alleles carrying the Single-Nucleotide Variant (SNV).\nThe problem states that normal cells do not harbor the mutation. Thus, their contribution to the count of mutant alleles is zero.\nMutant alleles are found only within a subpopulation of the cancer cells. The fraction of cancer cells carrying the SNV is denoted by the Cancer Cell Fraction, $\\phi$. The absolute number of cancer cells with the SNV is:\n$$N_{\\text{cancer, with SNV}} = N_{\\text{cancer}} \\times \\phi = pN\\phi$$\nIn each of these SNV-carrying cancer cells, the mutation is heterozygous. This is defined to mean that precisely one of the $C$ chromosomal copies carries the mutant allele. Therefore, each of these $N_{\\text{cancer, with SNV}}$ cells contributes exactly $1$ mutant allele to the total count.\nThe total number of mutant alleles in the sample is:\n$$N_{\\text{mutant}} = N_{\\text{cancer, with SNV}} \\times 1 = pN\\phi$$\n\nFinally, we construct the ratio for $v$:\n$$v = \\frac{N_{\\text{mutant}}}{N_{\\text{total}}} = \\frac{pN\\phi}{N(2(1 - p) + pC)}$$\nThe arbitrary total cell count $N$ cancels from the expression, yielding the relationship between the VAF and the intrinsic biological parameters of the sample:\n$$v = \\frac{p\\phi}{2(1 - p) + pC}$$\nThis is the required simplified analytical expression. It provides a fundamental model for interpreting variant allele frequencies in the context of tumor purity, copy number alterations, and subclonal architecture.", "answer": "$$\\boxed{\\frac{p\\phi}{2(1 - p) + pC}}$$", "id": "2858056"}, {"introduction": "The loss of function of tumor suppressor genes is a hallmark of cancer, often described by Knudson's \"two-hit\" hypothesis. This practice moves beyond a static view to model tumorigenesis as a dynamic, stochastic process. By using a continuous-time Markov chain, you will quantify how mechanisms like Loss of Heterozygosity (LOH) dramatically accelerate the rate of biallelic inactivation, providing a powerful demonstration of why these events are a common route to cancer [@problem_id:2858011].", "problem": "A tumor suppressor gene requires $2$ independent \"hits\" to achieve biallelic inactivation. Consider a single proliferating cell lineage in which mutational and chromosomal events occur as independent Poisson processes per cell division with small hazard rates. Use the following foundational base:\n\n- The two-hit model for tumor suppressor inactivation: biallelic loss requires $2$ independent events.\n- Central Dogma of Molecular Biology and Mendelian segregation are assumed, but only as background; focus on event hazard rates and genotype transitions.\n- Rare-event Poisson processes imply exponential waiting times with memoryless property.\n- Loss of heterozygosity (LOH) includes two mechanistic classes: copy-neutral loss of heterozygosity (CN-LOH) via mitotic recombination, and deletion LOH via segmental deletion.\n\nModel the genotype dynamics as a continuous-time Markov process with states: $S_0$ (homozygous wild-type, $AA$), $S_1$ (heterozygous, $Aa$), $S_h$ (hemizygous wild-type, $A-$), and $S_2$ (biallelically inactivated, $aa$ or $a-$), which is absorbing. Assume symmetry between homologs and the following per-division hazard rates:\n\n- Point mutation inactivating a functional allele: per-allele rate $\\mu$.\n- CN-LOH at the locus in a heterozygote that renders the locus homozygous: per-locus rate $\\rho$, yielding $aa$ with probability $1/2$ and $AA$ with probability $1/2$.\n- Deletion LOH at the locus: per-locus rate $\\delta$. In a heterozygote, with probability $1/2$ it deletes the wild-type homolog (immediately yielding biallelic inactivation), and with probability $1/2$ it deletes the mutant homolog (yielding $S_h$). In a wild-type cell, deletion LOH yields $S_h$. In $S_h$, a single mutation at rate $\\mu$ completes inactivation.\n\nTransitions and their hazards are thus:\n- $S_0 \\to S_1$ at rate $2\\mu$.\n- $S_0 \\to S_h$ at rate $\\delta$.\n- $S_1 \\to S_2$ at rates $\\mu$ (second point mutation), $\\rho/2$ (CN-LOH completes), and $\\delta/2$ (deletion completes); and $S_1 \\to S_h$ at rate $\\delta/2$ (deletion removes the mutant homolog).\n- $S_h \\to S_2$ at rate $\\mu$.\n\nStarting in $S_0$, define the mean first passage time to $S_2$ as $\\mathbb{E}[T]$ and the effective biallelic inactivation rate as $\\lambda_{\\mathrm{eff}} = 1/\\mathbb{E}[T]$. Let $\\lambda_{\\mathrm{eff}}^{(0)}$ denote the effective rate when LOH is absent (set $\\rho = 0$ and $\\delta = 0$). Derive $\\lambda_{\\mathrm{eff}}$ from first principles using the Markov property and conditioning on the first event, and interpret how LOH increases the effective rate by altering the hazard of the second hit. Then, for the quantitative comparison of LOH mechanisms, compute the relative contribution of CN-LOH versus deletion to the second-hit hazard from $S_1$.\n\nUse the following parameter values (per division): $\\mu = 1.0 \\times 10^{-7}$, $\\rho = 1.5 \\times 10^{-6}$, and $\\delta = 4.0 \\times 10^{-7}$. Define the acceleration factor $A = \\lambda_{\\mathrm{eff}} / \\lambda_{\\mathrm{eff}}^{(0)}$. Report only $A$ as your final answer, rounded to three significant figures. The final answer is unitless.", "solution": "The problem presents a valid, well-posed, and scientifically grounded model of tumorigenesis based on the two-hit hypothesis for a tumor suppressor gene. It is a standard application of continuous-time Markov chains to calculate the mean time to an event of interest, in this case, biallelic inactivation. We shall proceed with the derivation.\n\nThe system is modeled by a continuous-time Markov process with four states: $S_0$ (wild-type, $AA$), $S_1$ (heterozygous, $Aa$), $S_h$ (hemizygous, $A-$), and $S_2$ (inactivated, $aa$ or $a-$), which is the absorbing state. The goal is to find the mean first passage time (MFPT) to state $S_2$, starting from state $S_0$. Let $T_i$ be the MFPT to $S_2$ starting from state $S_i$. By definition, $T_2 = 0$. For any other state $S_i$, the MFPT can be found by conditioning on the first transition out of $S_i$. This yields the following system of linear equations:\n$$T_i = \\frac{1}{\\lambda_i} + \\sum_{j \\neq i} \\frac{q_{ij}}{\\lambda_i} T_j$$\nwhere $q_{ij}$ is the transition rate from state $S_i$ to $S_j$, and $\\lambda_i = \\sum_{j \\neq i} q_{ij}$ is the total exit rate from state $S_i$.\n\nThe transition rates are given as follows:\n-   From $S_0$: $q_{01} = 2\\mu$, $q_{0h} = \\delta$. The total exit rate is $\\lambda_0 = 2\\mu + \\delta$.\n-   From $S_1$: $q_{12} = \\mu + \\frac{\\rho}{2} + \\frac{\\delta}{2}$, $q_{1h} = \\frac{\\delta}{2}$. The total exit rate is $\\lambda_1 = q_{12} + q_{1h} = \\mu + \\frac{\\rho}{2} + \\delta$.\n-   From $S_h$: $q_{h2} = \\mu$. The total exit rate is $\\lambda_h = \\mu$.\n\nWe can now write the specific equations for $T_0$, $T_1$, and $T_h$:\nFor $S_h$:\n$$T_h = \\frac{1}{\\lambda_h} + \\frac{q_{h2}}{\\lambda_h} T_2 = \\frac{1}{\\mu} + \\frac{\\mu}{\\mu}(0) \\implies T_h = \\frac{1}{\\mu}$$\nThis is the mean waiting time in the hemizygous state before the final inactivating mutation occurs.\n\nFor $S_1$:\n$$T_1 = \\frac{1}{\\lambda_1} + \\frac{q_{12}}{\\lambda_1} T_2 + \\frac{q_{1h}}{\\lambda_1} T_h = \\frac{1}{\\mu + \\frac{\\rho}{2} + \\delta} + 0 + \\frac{\\delta/2}{\\mu + \\frac{\\rho}{2} + \\delta} T_h$$\nSubstituting $T_h = 1/\\mu$, we get:\n$$T_1 = \\frac{1}{\\mu + \\frac{\\rho}{2} + \\delta} \\left( 1 + \\frac{\\delta}{2\\mu} \\right) = \\frac{2\\mu + \\delta}{2\\mu (\\mu + \\frac{\\rho}{2} + \\delta)}$$\n\nFor $S_0$:\n$$T_0 = \\frac{1}{\\lambda_0} + \\frac{q_{01}}{\\lambda_0} T_1 + \\frac{q_{0h}}{\\lambda_0} T_h = \\frac{1}{2\\mu + \\delta} + \\frac{2\\mu}{2\\mu + \\delta} T_1 + \\frac{\\delta}{2\\mu + \\delta} T_h$$\nRearranging gives $(2\\mu + \\delta)T_0 = 1 + 2\\mu T_1 + \\delta T_h$. Substituting the expressions for $T_1$ and $T_h$:\n$$(2\\mu + \\delta)T_0 = 1 + 2\\mu \\left( \\frac{2\\mu + \\delta}{2\\mu (\\mu + \\frac{\\rho}{2} + \\delta)} \\right) + \\delta \\left( \\frac{1}{\\mu} \\right)$$\n$$(2\\mu + \\delta)T_0 = 1 + \\frac{2\\mu + \\delta}{\\mu + \\frac{\\rho}{2} + \\delta} + \\frac{\\delta}{\\mu}$$\nThe mean first passage time from the initial state $S_0$ is $\\mathbb{E}[T] = T_0$:\n$$T_0 = \\frac{1}{2\\mu + \\delta} \\left( 1 + \\frac{2\\mu + \\delta}{\\mu + \\frac{\\rho}{2} + \\delta} + \\frac{\\delta}{\\mu} \\right)$$\nThe effective biallelic inactivation rate is $\\lambda_{\\mathrm{eff}} = 1/T_0$.\n\nTo interpret the effect of Loss of Heterozygosity (LOH), we consider the hazard of the second hit. If the first hit is a point mutation, the cell enters state $S_1$. Without LOH ($\\rho=0, \\delta=0$), the only path to inactivation is another point mutation, with rate $\\mu$. With LOH, the total rate of inactivation from $S_1$ is $h_2 = \\mu + \\rho/2 + \\delta/2$. Using the given parameters, $\\mu = 1.0 \\times 10^{-7}$, $\\rho = 1.5 \\times 10^{-6}$, and $\\delta = 4.0 \\times 10^{-7}$, the second-hit hazard is $h_2 = (1.0 \\times 10^{-7}) + (1.5 \\times 10^{-6})/2 + (4.0 \\times 10^{-7})/2 = (1.0 + 7.5 + 2.0) \\times 10^{-7} = 1.05 \\times 10^{-6}$. This is a factor of $1.05 \\times 10^{-6} / (1.0 \\times 10^{-7}) = 10.5$ greater than the rate by mutation alone. LOH thus dramatically accelerates the second hit, and this is its primary role in tumor suppression.\n\nThe relative contribution of CN-LOH versus deletion LOH to the second-hit hazard from $S_1$ is the ratio of their respective rates: $\\frac{\\rho/2}{\\delta/2} = \\frac{\\rho}{\\delta}$. Numerically, this is $\\frac{1.5 \\times 10^{-6}}{4.0 \\times 10^{-7}} = 3.75$. This indicates that CN-LOH is $3.75$ times more likely to cause the second hit than deletion LOH, given a heterozygous cell.\n\nNext, we calculate the effective rate in the absence of LOH, $\\lambda_{\\mathrm{eff}}^{(0)}$, by setting $\\rho=0$ and $\\delta=0$. The pathway becomes a simple two-step process $S_0 \\xrightarrow{2\\mu} S_1 \\xrightarrow{\\mu} S_2$. The mean time is the sum of the mean waiting times for each step: $T_0^{(0)} = \\frac{1}{2\\mu} + \\frac{1}{\\mu} = \\frac{3}{2\\mu}$. Thus, $\\lambda_{\\mathrm{eff}}^{(0)} = \\frac{1}{T_0^{(0)}} = \\frac{2\\mu}{3}$.\n\nFinally, we compute the acceleration factor $A = \\lambda_{\\mathrm{eff}} / \\lambda_{\\mathrm{eff}}^{(0)}$. This is equivalent to $T_0^{(0)} / T_0$.\nFirst, we compute the numerical value of $T_0$ with the given parameters:\n$2\\mu + \\delta = 2(1.0 \\times 10^{-7}) + 4.0 \\times 10^{-7} = 6.0 \\times 10^{-7}$.\n$\\mu + \\rho/2 + \\delta = 1.0 \\times 10^{-7} + (1.5 \\times 10^{-6})/2 + 4.0 \\times 10^{-7} = 1.25 \\times 10^{-6}$.\n$\\delta/\\mu = (4.0 \\times 10^{-7}) / (1.0 \\times 10^{-7}) = 4$.\n$$T_0 = \\frac{1}{6.0 \\times 10^{-7}} \\left( 1 + \\frac{6.0 \\times 10^{-7}}{1.25 \\times 10^{-6}} + 4 \\right) = \\frac{1}{6.0 \\times 10^{-7}} (1 + 0.48 + 4) = \\frac{5.48}{6.0 \\times 10^{-7}}$$\nNow, we compute $T_0^{(0)}$:\n$$T_0^{(0)} = \\frac{3}{2\\mu} = \\frac{3}{2(1.0 \\times 10^{-7})} = \\frac{3}{2.0 \\times 10^{-7}}$$\nThe acceleration factor is:\n$$A = \\frac{T_0^{(0)}}{T_0} = \\frac{3/(2.0 \\times 10^{-7})}{5.48/(6.0 \\times 10^{-7})} = \\frac{3}{2.0} \\times \\frac{6.0}{5.48} = \\frac{18}{10.96} = \\frac{9}{5.48}$$\n$$A \\approx 1.642335...$$\nRounding to three significant figures, we get $A = 1.64$. This quantifies the overall speed-up of tumorigenesis due to the LOH pathways in this model. The factor is modest because the first-hit rate is also affected by LOH (via the deletion pathway to $S_h$) and the overall rate is a weighted average over all possible pathways to inactivation.", "answer": "$$\n\\boxed{1.64}\n$$", "id": "2858011"}, {"introduction": "Mutations in cancer are not always random; they are often sculpted by specific mutational processes that leave behind characteristic \"signatures.\" This computational exercise challenges you to write a program that sifts through genomic data to identify one such signature: localized hypermutation events known as kataegis. You will then implement a statistical model to estimate the contribution of a specific enzymatic source, the APOBEC family, to these clusters, bridging the gap between theoretical models and practical data analysis [@problem_id:2857997].", "problem": "You are given, for each test case, a sequence of inter-mutation genomic distances in base pairs (bp) and the corresponding sequence of trinucleotide contexts for each mutation, normalized to the pyrimidine-centered convention (the middle base is the mutated base on the pyrimidine strand). You must implement a program that identifies kataegis events and estimates the fraction of clustered mutations attributable to Apolipoprotein B mRNA Editing Catalytic Polypeptide-like (APOBEC) enzymes.\n\nFundamental base and assumptions to use:\n- Under a baseline uniform random mutation process along a genome, mutation events along a coordinate axis can be modeled as a Poisson point process. The inter-event distances are independent and identically distributed as exponential random variables. Hence, sustained runs of short inter-mutation distances are evidence for localized hypermutation.\n- A kataegis cluster is operationally defined by a minimum cluster size threshold and a maximum inter-mutation distance threshold.\n- APOBEC-catalyzed cytosine deamination produces a characteristic enrichment of mutations in specific trinucleotide contexts. In pyrimidine-centered representation, the APOBEC-associated contexts are defined here as the two motifs \"TCA\" and \"TCT\". Any other context, including those not centered on \"C\", is considered non-APOBEC for the purposes of this problem.\n- Let the probability that a clustered mutation has an APOBEC context be determined by a mixture of two processes: APOBEC-driven with probability parameter $p_A$ and background with probability parameter $p_B$, with $p_A \\gt p_B$. If the fraction of clustered mutations generated by APOBEC is $f \\in [0,1]$, then the mixture implies that the marginal probability that a clustered mutation exhibits an APOBEC context is $q(f) = f \\, p_A + (1-f) \\, p_B$.\n\nRequired tasks:\n1. Kataegis cluster identification:\n   - Let there be $N$ mutations along a chromosome segment, with inter-mutation distances $d_1, d_2, \\ldots, d_{N-1}$ in base pairs. You are given these distances and the corresponding $N$ trinucleotide contexts.\n   - Given a maximum distance threshold $d_0$ (in base pairs) and a minimum cluster size $m$ (in mutations), define a cluster as any maximal contiguous block of mutations of length $L \\ge m$ such that all internal inter-mutation distances within the block are $\\le d_0$. Equivalently, a block spanning mutation indices $i$ through $j$ (inclusive, zero-based) is a cluster if and only if $j - i + 1 \\ge m$ and $d_k \\le d_0$ for all $k \\in \\{i, i+1, \\ldots, j-1\\}$, and the block cannot be extended to the left or right without violating the distance condition or merging with another block. Only count maximal non-overlapping blocks that satisfy this property.\n   - Count the total number of clusters.\n\n2. Estimation of the APOBEC-attributable fraction:\n   - Pool all mutations that lie inside all identified clusters. Let $n$ be the total count of clustered mutations and let $k$ be the number among them whose contexts are \"TCA\" or \"TCT\".\n   - Assume conditional independence of APOBEC-context indicators across clustered mutations, and construct the binomial likelihood of observing $k$ APOBEC-context mutations out of $n$ under the mixture probability $q(f) = f \\, p_A + (1-f) \\, p_B$ with $f \\in [0,1]$, $p_A \\in (0,1)$, and $p_B \\in (0,1)$ with $p_A \\gt p_B$. Estimate $f$ by maximizing this likelihood subject to $f \\in [0,1]$. If $n = 0$, define the estimate to be $0$ by convention.\n\nInput specifications for each test case:\n- An array of inter-mutation distances in base pairs: $[d_1, d_2, \\ldots, d_{N-1}]$, where each $d_i$ is a positive integer in base pairs (bp). The unit for all $d_i$ and $d_0$ is base pairs (bp).\n- A corresponding array of $N$ trinucleotide contexts, one per mutation, each as a string of three uppercase nucleotides. The length must satisfy $N = (\\text{length of distances}) + 1$.\n- A minimum cluster size $m$ (an integer, in mutations).\n- A maximum inter-mutation distance threshold $d_0$ (an integer, in base pairs).\n- Mixture parameters $p_A$ and $p_B$ (real numbers in $(0,1)$ with $p_A \\gt p_B$).\n\nAngle units are not applicable. No physical quantity other than base pairs is involved; all answers are dimensionless counts or fractions. Fractions must be reported as decimals.\n\nYour program must implement the above logic and run on the following test suite. For each test case, produce a pair consisting of the number of clusters and the estimated APOBEC fraction, with the latter rounded to three decimals.\n\nTest suite:\n- Test case $1$:\n  - distances (bp): [$800$, $900$, $700$, $500$, $750$, $5000$, $1200$, $800$, $900$, $700$, $600$, $300$, $200$, $1500$]\n  - contexts (length $15$): [\"TCA\",\"TCT\",\"ACA\",\"TCA\",\"TCG\",\"TCT\",\"GCG\",\"TCA\",\"TCT\",\"TCT\",\"GCG\",\"TCA\",\"TCT\",\"TCA\",\"ACA\"]\n  - $m = 6$\n  - $d_0 = 1000$ bp\n  - $p_A = 0.7$, $p_B = 0.2$\n\n- Test case $2$ (boundary at threshold, exactly minimal cluster size):\n  - distances (bp): [$1000$, $1000$, $1000$, $1000$, $1500$, $999$, $1001$, $1000$]\n  - contexts (length $9$): [\"TCA\",\"TCT\",\"GCG\",\"ACA\",\"TCG\",\"TCA\",\"GCG\",\"TCT\",\"ACA\"]\n  - $m = 5$\n  - $d_0 = 1000$ bp\n  - $p_A = 0.7$, $p_B = 0.2$\n\n- Test case $3$ (no clusters):\n  - distances (bp): [$1500$, $2000$, $3000$]\n  - contexts (length $4$): [\"ACA\",\"GCG\",\"TTA\",\"GCA\"]\n  - $m = 6$\n  - $d_0 = 1000$ bp\n  - $p_A = 0.7$, $p_B = 0.2$\n\n- Test case $4$ (two clusters with moderate APOBEC counts):\n  - distances (bp): [$900$, $900$, $900$, $900$, $900$, $2000$, $900$, $900$, $900$, $900$, $900$]\n  - contexts (length $12$): [\"TCA\",\"GCG\",\"TCT\",\"ACA\",\"TCA\",\"TCG\",\"GCG\",\"ACA\",\"TCT\",\"GCG\",\"TCA\",\"ACA\"]\n  - $m = 6$\n  - $d_0 = 1000$ bp\n  - $p_A = 0.7$, $p_B = 0.2$\n\n- Test case $5$ (edge case: fewer mutations than required to form any cluster):\n  - distances (bp): []\n  - contexts (length $1$): [\"TCA\"]\n  - $m = 3$\n  - $d_0 = 1000$ bp\n  - $p_A = 0.7$, $p_B = 0.2$\n\nOutput specification:\n- For each test case, output a list of two elements: the first is the number of identified clusters (an integer), and the second is the estimated APOBEC fraction $f$ rounded to three decimals (a float).\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, for example: \"[[clusters_1,f_1],[clusters_2,f_2],...]\" where each \"clusters_i\" is an integer and each \"f_i\" is a float rounded to three decimals.", "solution": "The problem statement is assessed to be valid. It is scientifically grounded in the principles of cancer genomics, specifically concerning mutational signatures and hypermutation phenomena like kataegis. The definitions and tasks are mathematically and algorithmically well-posed, providing a clear and objective path to a unique solution. All necessary data and parameters are provided, and there are no internal contradictions or ambiguities. The problem is a non-trivial application of algorithmic data processing and statistical estimation.\n\nThe solution is constructed in two primary stages as required: First, the identification of kataegis clusters, and second, the statistical estimation of the APOBEC-attributable fraction of mutations within those clusters.\n\nA kataegis cluster is defined based on a sequence of $N$ mutations, $M_0, M_1, \\ldots, M_{N-1}$. The genomic locations are not given directly, but the inter-mutation distances are provided as an array $D$ of length $N-1$, where $D[i]$ is the distance in base pairs between mutation $M_i$ and $M_{i+1}$ for $i \\in \\{0, 1, \\ldots, N-2\\}$. A cluster is a maximal contiguous block of mutations $M_i, M_{i+1}, \\ldots, M_j$ where the block size $L = j-i+1$ is at least the minimum cluster size $m$, and all inter-mutation distances within the block, namely $D[k]$ for $k \\in \\{i, i+1, \\ldots, j-1\\}$, are less than or equal to the maximum distance threshold $d_0$.\n\nTo identify these clusters, we first transform the distance array $D$ into a boolean array $B$ where $B[i]$ is true if $D[i] \\le d_0$ and false otherwise. We then identify all maximal contiguous runs of true values in $B$. Each such run, say from index $i$ to $j-1$ in $D$ (or $B$), corresponds to a block of mutations from $M_i$ to $M_j$. The number of mutations in this block is $L = j - i + 1$. If $L \\ge m$, this block qualifies as a kataegis cluster. The algorithm iterates through the distance array, identifying these maximal runs, checking their corresponding mutation counts against $m$, and counting the number of valid, non-overlapping clusters. The use of maximal runs ensures that clusters are not extendable and do not merge.\n\nFor the second task, we estimate the fraction $f$ of clustered mutations attributable to the APOBEC process. All mutations located within the identified clusters are pooled. Let $n$ be the total number of such mutations, and let $k$ be the subset of these mutations that occur in an APOBEC-associated trinucleotide context, defined as \"TCA\" or \"TCT\".\n\nThe problem posits a two-component mixture model for the probability that a clustered mutation has an APOBEC signature. This probability, $q(f)$, is a linear combination of the probability of an APOBEC context arising from the APOBEC process, $p_A$, and from a background process, $p_B$:\n$$q(f) = f \\cdot p_A + (1-f) \\cdot p_B$$\nwhere $f \\in [0, 1]$ is the fraction of clustered mutations due to APOBEC. We are given $p_A > p_B$. The number of observed APOBEC-context mutations $k$ among the $n$ clustered mutations is assumed to follow a binomial distribution, $k \\sim \\text{Binomial}(n, q(f))$.\n\nThe likelihood of observing $k$ successes in $n$ trials is:\n$$L(f; k, n) = \\binom{n}{k} [q(f)]^k [1-q(f)]^{n-k}$$\nTo find the Maximum Likelihood Estimate (MLE) for $f$, we maximize the log-likelihood function, $\\ell(f) = \\log L(f; k, n)$:\n$$\\ell(f) = \\text{const} + k \\log(q(f)) + (n-k) \\log(1-q(f))$$\nThe derivative of $\\ell(f)$ with respect to $f$ is:\n$$\\frac{d\\ell}{df} = k \\frac{q'(f)}{q(f)} - (n-k) \\frac{q'(f)}{1-q(f)} = (p_A - p_B) \\left( \\frac{k}{q(f)} - \\frac{n-k}{1-q(f)} \\right)$$\nwhere $q'(f) = p_A - p_B$. Since $p_A > p_B$, setting the derivative to zero implies:\n$$\\frac{k}{q(f)} = \\frac{n-k}{1-q(f)} \\implies k(1-q(f)) = (n-k)q(f) \\implies k = n q(f)$$\nThis gives the standard result that the MLE of the binomial probability parameter is the sample proportion, $\\hat{q} = k/n$. We can then solve for the estimate of $f$, denoted $\\hat{f}$:\n$$f p_A + (1-f) p_B = k/n \\implies \\hat{f} = \\frac{k/n - p_B}{p_A - p_B}$$\nThis unconstrained estimate must be projected onto the valid interval $[0, 1]$. The function $q(f)$ is monotonic in $f$, mapping $[0, 1]$ to $[p_B, p_A]$.\n- If the observed proportion $k/n \\le p_B$, the likelihood is maximized at the boundary, so $\\hat{f} = 0$.\n- If $k/n \\ge p_A$, the likelihood is maximized at the other boundary, so $\\hat{f} = 1$.\n- Otherwise, the unconstrained estimate lies within $[0, 1]$ and is the valid MLE.\n\nThus, the final estimator for $f$ is:\n$$\\hat{f}_{MLE} = \\max\\left(0, \\min\\left(1, \\frac{k/n - p_B}{p_A - p_B}\\right)\\right)$$\nIf no clusters are found, then $n=0$. In this case, as per the problem convention, we define $\\hat{f} = 0$.\n\nThis two-part procedure is implemented for each test case to produce the required output.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test suite.\n    \"\"\"\n    test_cases = [\n        {\n            \"distances\": [800, 900, 700, 500, 750, 5000, 1200, 800, 900, 700, 600, 300, 200, 1500],\n            \"contexts\": [\"TCA\", \"TCT\", \"ACA\", \"TCA\", \"TCG\", \"TCT\", \"GCG\", \"TCA\", \"TCT\", \"TCT\", \"GCG\", \"TCA\", \"TCT\", \"TCA\", \"ACA\"],\n            \"m\": 6,\n            \"d0\": 1000,\n            \"pA\": 0.7,\n            \"pB\": 0.2\n        },\n        {\n            \"distances\": [1000, 1000, 1000, 1000, 1500, 999, 1001, 1000],\n            \"contexts\": [\"TCA\", \"TCT\", \"GCG\", \"ACA\", \"TCG\", \"TCA\", \"GCG\", \"TCT\", \"ACA\"],\n            \"m\": 5,\n            \"d0\": 1000,\n            \"pA\": 0.7,\n            \"pB\": 0.2\n        },\n        {\n            \"distances\": [1500, 2000, 3000],\n            \"contexts\": [\"ACA\", \"GCG\", \"TTA\", \"GCA\"],\n            \"m\": 6,\n            \"d0\": 1000,\n            \"pA\": 0.7,\n            \"pB\": 0.2\n        },\n        {\n            \"distances\": [900, 900, 900, 900, 900, 2000, 900, 900, 900, 900, 900],\n            \"contexts\": [\"TCA\", \"GCG\", \"TCT\", \"ACA\", \"TCA\", \"TCG\", \"GCG\", \"ACA\", \"TCT\", \"GCG\", \"TCA\", \"ACA\"],\n            \"m\": 6,\n            \"d0\": 1000,\n            \"pA\": 0.7,\n            \"pB\": 0.2\n        },\n        {\n            \"distances\": [],\n            \"contexts\": [\"TCA\"],\n            \"m\": 3,\n            \"d0\": 1000,\n            \"pA\": 0.7,\n            \"pB\": 0.2\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        result = _process_case(case)\n        results.append(result)\n\n    # Format the final output string as specified\n    formatted_results = []\n    for res in results:\n        # res is [num_clusters, f_estimate]\n        formatted_results.append(f\"[{res[0]},{res[1]:.3f}]\")\n    print(f\"[{','.join(formatted_results)}]\")\n\ndef _process_case(case_data):\n    \"\"\"\n    Processes a single test case.\n    \"\"\"\n    distances = case_data[\"distances\"]\n    contexts = case_data[\"contexts\"]\n    m = case_data[\"m\"]\n    d0 = case_data[\"d0\"]\n    pA = case_data[\"pA\"]\n    pB = case_data[\"pB\"]\n\n    # --- Part 1: Kataegis Cluster Identification ---\n    cluster_mutation_indices = []\n    num_clusters = 0\n    \n    if distances:\n        is_short = np.array(distances) <= d0\n        # Find contiguous blocks of True values\n        # pad with False to handle edge cases of runs at start/end\n        padded = np.concatenate(([False], is_short, [False]))\n        diff = np.diff(padded.astype(int))\n        run_starts = np.where(diff == 1)[0]\n        run_ends = np.where(diff == -1)[0] - 1\n\n        for start_dist_idx, end_dist_idx in zip(run_starts, run_ends):\n            # A run of short distances from start_dist_idx to end_dist_idx\n            # connects mutations from start_dist_idx to end_dist_idx + 1\n            start_mut_idx = start_dist_idx\n            end_mut_idx = end_dist_idx + 1\n            \n            num_mutations_in_block = end_mut_idx - start_mut_idx + 1\n            \n            if num_mutations_in_block >= m:\n                num_clusters += 1\n                for mut_idx in range(start_mut_idx, end_mut_idx + 1):\n                    cluster_mutation_indices.append(mut_idx)\n\n    # --- Part 2: Estimation of APOBEC-attributable fraction ---\n    n = len(cluster_mutation_indices)\n    \n    if n == 0:\n        f_estimate = 0.0\n    else:\n        k = 0\n        apobec_contexts = {\"TCA\", \"TCT\"}\n        for mut_idx in cluster_mutation_indices:\n            if contexts[mut_idx] in apobec_contexts:\n                k += 1\n        \n        k_div_n = k / n\n        \n        # Calculate f_hat based on MLE, clipped to [0, 1]\n        if k_div_n <= pB:\n            f_estimate = 0.0\n        elif k_div_n >= pA:\n            f_estimate = 1.0\n        else:\n            # This check handles the case where pA == pB, though problem guarantees pA > pB\n            if pA - pB == 0:\n                f_estimate = 0.0 # f is unidentifiable, by convention 0\n            else:\n                f_estimate = (k_div_n - pB) / (pA - pB)\n    \n    return [num_clusters, f_estimate]\n\nif __name__ == '__main__':\n    solve()\n\n```", "id": "2857997"}]}