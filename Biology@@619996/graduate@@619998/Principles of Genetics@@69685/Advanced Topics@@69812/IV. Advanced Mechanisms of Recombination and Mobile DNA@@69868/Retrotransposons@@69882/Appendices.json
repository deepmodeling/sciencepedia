{"hands_on_practices": [{"introduction": "A cornerstone of molecular genetics is the ability to design experiments that specifically report on a biological process of interest. To quantify the activity of retrotransposons like LINE-1, we can build a reporter system that yields a selectable phenotype only when the entire retrotransposition cycle—transcription, splicing, and reverse transcription—is successfully completed. This practice challenges you to think through the logic of an advanced reporter cassette that uses orientation-dependent splicing to distinguish true retrotransposition events from experimental artifacts, a key skill in modern genetic engineering [@problem_id:2846686].", "problem": "You are designing a cell-based reporter to quantify Long Interspersed Nuclear Element-$1$ (LINE-$1$) retrotransposition in mammalian cells using a neomycin phosphotransferase gene (Neo) and selection with Geneticin (G$418$). Start from first principles: the Central Dogma (DNA is transcribed to pre-messenger RNA, introns are removed by spliceosomes using oriented $5'$ donor and $3'$ acceptor sites, and mature messenger RNA is translated), and the mechanism of LINE-$1$ target-primed reverse transcription (TPRT) in which a polyadenylated LINE-$1$ RNA template is reverse-transcribed at a chromosomal nick and inserted as complementary DNA. A valid design must ensure that G$418$-resistant colonies arise only if two conditions are met: (i) the reporter cassette sequence was first transcribed and correctly spliced in the context of the LINE-$1$ RNA, and (ii) that spliced sequence was copied into DNA and integrated via TPRT. You will choose the most rigorous design and justification for achieving this specificity.\n\nWhich option below best satisfies these requirements and correctly explains why G$418$ resistance specifically reports successful TPRT and splicing?\n\nA. Place a Simian Virus $40$ (SV$40$) promoter–Neo–polyadenylation cassette into the LINE-$1$ $3'$ untranslated region in the antisense orientation relative to LINE-$1$ transcription. Interrupt Neo with a synthetic intron that is antisense relative to Neo (so its $5'$ donor/$3'$ acceptor are inverted in Neo’s transcriptional orientation) but sense relative to the LINE-$1$ transcript. The donor plasmid cannot express functional Neo because the antisense intron is not recognized by the spliceosome in the Neo transcriptional direction, leaving the coding sequence disrupted. However, when LINE-$1$ pre-messenger RNA is made, the intron appears in the sense orientation and is spliced out; the spliced LINE-$1$ RNA is then reverse-transcribed and integrated by TPRT, yielding a genomic copy with an intronless, promoter-bearing Neo that confers stable G$418$ resistance.\n\nB. Place an SV$40$ promoter–Neo–polyadenylation cassette antisense to LINE-$1$ with a sense-oriented intron within Neo. Because the intron is in the sense orientation relative to Neo, splicing occurs in transcripts from the donor plasmid, allowing basal expression of functional Neo and thus G$418$ resistance; therefore, any increase in resistant colonies must reflect enhanced TPRT.\n\nC. Place a promoterless Neo interrupted by a sense-oriented intron in the LINE-$1$ $3'$ untranslated region in the sense orientation with respect to LINE-$1$. Only after retrotransposition will a host genomic promoter drive Neo expression, and intron removal is guaranteed because the intron is sense-oriented relative to Neo. Thus, G$418$ resistance specifically marks TPRT.\n\nD. Place an SV$40$ promoter–Neo–polyadenylation cassette in the sense orientation relative to LINE-$1$ and omit any intron to avoid splicing complications. Because Neo is present on the LINE-$1$ messenger RNA, translation will produce Neo protein only if the RNA served as a template for reverse transcription; thus, G$418$ resistance must report TPRT events.", "solution": "We begin from first principles relevant to this genetic reporter design.\n\n1. Transcription and splicing are orientation dependent. Pre-messenger RNA splicing requires that a splice donor at the $5'$ end and an acceptor at the $3'$ end of an intron be presented in the correct orientation relative to the direction of transcription. If an intron is placed in the reverse (antisense) orientation with respect to a transcript, its consensus $5'$ and $3'$ splice signals appear reversed (e.g., canonical GT–AG becomes CT–AC in the transcribed strand) and are not recognized by the spliceosome, so the intron will not be removed.\n\n2. LINE-$1$ retrotransposition by target-primed reverse transcription (TPRT) requires a polyadenylated LINE-$1$ messenger RNA. The LINE-$1$ ribonucleoprotein introduces a single-strand nick in genomic DNA, anneals the messenger RNA poly(A) tail to the T-rich target, and uses the RNA as a template for reverse transcription, generating complementary DNA that is subsequently integrated. Any sequence carried within the LINE-$1$ messenger RNA will be copied into the new complementary DNA insertion, and critically, only sequences present in the processed messenger RNA (that is, after splicing) will be propagated.\n\n3. Selection with Geneticin (G$418$) requires expression of a functional neomycin phosphotransferase open reading frame from a promoter in the nucleus over many cell doublings, implying stable genomic expression. Therefore, to tie G$418$ resistance to TPRT, the design must prevent functional Neo expression from the donor plasmid and from any DNA event that bypasses the RNA intermediate (for example, direct plasmid integration), while permitting expression only from an intronless Neo copy produced from a spliced LINE-$1$ messenger RNA and integrated into the genome.\n\nEvaluate each option:\n\nOption A:\n- Design: The SV$40$ promoter–Neo–poly(A) cassette is inserted into the LINE-$1$ $3'$ untranslated region in the antisense orientation relative to LINE-$1$ transcription. The intron is antisense with respect to Neo but sense with respect to LINE-$1$.\n- Mechanism: Transcripts originating from the SV$40$ promoter on the donor plasmid encounter the intron in the antisense orientation; because the $5'$ donor/$3'$ acceptor signals are inverted, the spliceosome cannot remove the intron. The intron disrupts the Neo coding sequence, and translation yields no functional enzyme; thus, the donor plasmid cannot confer G$418$ resistance. In contrast, the LINE-$1$ pre-messenger RNA includes the cassette sequence in the opposite (complementary) orientation; there, the same intron appears in the sense orientation and is efficiently spliced out. The processed LINE-$1$ messenger RNA, now carrying an intronless Neo sequence, serves as the template for TPRT. After integration, the resulting genomic copy contains an intronless Neo gene with its own SV$40$ promoter and polyadenylation signal, enabling robust transcription and translation of Neo and stable G$418$ resistance. Direct DNA integration of the donor plasmid would not remove the intron and would not yield resistance, preserving specificity for the RNA-mediated TPRT path. This logic satisfies both required conditions: correct splicing in the LINE-$1$ RNA and copying/integration by TPRT.\n- Verdict: Correct.\n\nOption B:\n- Design: The cassette is antisense to LINE-$1$, but the intron is sense relative to Neo.\n- Mechanism: Transcripts driven by the SV$40$ promoter on the donor plasmid will encounter a sense-oriented intron within Neo, which the spliceosome will remove, producing an intronless, functional Neo messenger RNA directly from the plasmid. This yields G$418$ resistance without any requirement for LINE-$1$ transcription, splicing in the LINE-$1$ context, or TPRT. Thus, resistance is not specific for TPRT and violates the requirement to prevent donor-plasmid expression.\n- Verdict: Incorrect.\n\nOption C:\n- Design: Promoterless Neo with a sense-oriented intron is placed in the sense orientation relative to LINE-$1$.\n- Mechanism: After retrotransposition, the genomic copy would carry a promoterless Neo; expression would depend on fortuitous integration downstream of a host promoter. Even if TPRT occurs and the intron is removed in the LINE-$1$ messenger RNA, many genuine retrotransposition events would be unscored due to lack of promoter capture. Conversely, promoter-trap expression from non-TPRT events (for example, random donor plasmid integration into a transcription unit) could produce G$418$ resistance despite the absence of LINE-$1$ RNA processing and TPRT. Therefore, resistance is not a specific readout of TPRT plus splicing.\n- Verdict: Incorrect.\n\nOption D:\n- Design: The cassette is sense relative to LINE-$1$ and lacks an intron entirely.\n- Mechanism: Without an intron, the SV$40$ promoter on the donor plasmid drives immediate expression of functional Neo, causing G$418$ resistance independent of any LINE-$1$ activity. Moreover, equating Neo protein production with TPRT is conceptually incorrect: translation from a messenger RNA does not imply that the RNA was reverse-transcribed and integrated. This violates the requirement to tie resistance strictly to the RNA-to-DNA transition via TPRT and to the occurrence of splicing.\n- Verdict: Incorrect.\n\nTherefore, only Option A provides a design that, by orientation-dependent splicing and inclusion of a dedicated promoter and polyadenylation signal, ensures that G$418$ resistance arises exclusively when the reporter sequence has been (i) correctly spliced in the LINE-$1$ transcript and (ii) captured into the genome via TPRT, while preventing spurious expression from the donor DNA.", "answer": "$$\\boxed{A}$$", "id": "2846686"}, {"introduction": "While retrotransposition drives genomic innovation, most new insertions into functional regions are deleterious and subject to purifying selection. By applying principles of population genetics, we can model the equilibrium between the constant influx of new insertions and their removal from the population. This exercise asks you to derive, from first principles, the expected number of deleterious insertions an individual carries, connecting the molecular insertion rate $\\mu$ with the population-level outcome shaped by selection $s$ [@problem_id:2846661]. This practice bridges the gap between molecular mechanisms and their long-term evolutionary consequences.", "problem": "A retrotransposon insertion in a eukaryotic genome is a mutation event that can occur when a Long Interspersed Nuclear Element (LINE) or a Short Interspersed Nuclear Element (SINE) copies and inserts into a new genomic location. Consider a large, randomly mating diploid population in which each haploid genome experiences an average of $\\mu$ new retrotransposon insertions per generation (per haploid). Assume that a fraction $f$ of the genome is functionally constrained such that any insertion landing within this fraction is deleterious, while insertions outside this fraction are selectively neutral. For deleterious insertions, assume additivity in fitness effects at a site (heterozygous effect $s$ and homozygous effect $2s$ on a multiplicative fitness scale) with $s>0$, free recombination among sites (linkage equilibrium), and no back mutation. Further assume that, conditional on landing in the functional fraction, the selection coefficient $s$ of a new deleterious insertion is an independent draw from a continuous probability density $g(s)$ supported on $s \\in (0,\\infty)$, with $\\int_{0}^{\\infty} g(s)\\,ds = 1$ and finite $\\int_{0}^{\\infty} s^{-1} g(s)\\,ds$. Work in the regime $\\mu \\ll 1$ where insertions are individually rare and in a population size regime where $2N_{e}s \\gg 1$ for the bulk of $g(s)$ so that purifying selection dominates genetic drift for most deleterious insertions.\n\nStarting only from core population-genetic principles (mutation introducing new alleles and deterministic purifying selection removing them at low frequencies under free recombination and multiplicative fitness), derive from first principles the expected equilibrium mean number $\\Lambda$ of deleterious LINE/SINE insertions per haploid genome present in the population at any given time as a function of $\\mu$, $f$, and $g(s)$. Express your final answer as a single closed-form analytic expression.\n\nThen, in words, explain how purifying selection shapes the observed polymorphisms of LINE/SINE insertions in population samples, indicating which ranges of $s$ are more likely to be observed among segregating insertions and why.\n\nYour final answer must be a single analytic expression with no units. No numerical approximation is required.", "solution": "The problem statement is subjected to validation.\n\nStep 1: Extract Givens\n- Population: Large, randomly mating, diploid.\n- Population size: Effective size $N_e$.\n- Mutation: Average of $\\mu$ new retrotransposon insertions per generation per haploid genome.\n- Genome structure: A fraction $f$ of the genome is functionally constrained. Insertions in this fraction are deleterious. Insertions outside this fraction are neutral.\n- Fitness model for deleterious insertions:\n  - Multiplicative fitness scale.\n  - Additivity in fitness effects: heterozygote fitness effect $s$, homozygote fitness effect $2s$. This implies relative fitnesses of genotypes with $0$, $1$, and $2$ copies of the insertion are $1$, $1-s$, and $1-2s$ respectively, for a selection coefficient $s > 0$.\n  - Free recombination among sites (linkage equilibrium).\n  - No back mutation.\n- Distribution of selection coefficients: The selection coefficient $s$ for a new deleterious insertion is drawn from a continuous probability density function $g(s)$ on the domain $s \\in (0,\\infty)$.\n- Properties of $g(s)$: $\\int_{0}^{\\infty} g(s)\\,ds = 1$ and a finite value for the integral $\\int_{0}^{\\infty} s^{-1} g(s)\\,ds$.\n- Regime:\n  - $\\mu \\ll 1$: New insertions are rare events at any given site.\n  - $2N_{e}s \\gg 1$ for the bulk of $g(s)$: Purifying selection is strong relative to genetic drift for most deleterious insertions.\n\nStep 2: Validate Using Extracted Givens\n- **Scientifically Grounded**: The problem is based on fundamental principles of population genetics, specifically mutation-selection balance. The concepts of retrotransposons, deleterious mutations, purifying selection, and the distribution of fitness effects are central to modern evolutionary biology. The model, while simplified, is a standard and scientifically sound framework for studying genome evolution.\n- **Well-Posed**: The problem asks for a specific, derivable quantity ($\\Lambda$) under a clear set of assumptions. The provided information ($\\mu$, $f$, $g(s)$, and the fitness model) is sufficient to derive a unique solution. The condition that $\\int_{0}^{\\infty} s^{-1} g(s)\\,ds$ is finite is crucial for ensuring a meaningful, non-divergent result, indicating a well-structured problem. The condition $2N_{e}s \\gg 1$ correctly specifies the deterministic regime in which the problem is to be solved.\n- **Objective**: The problem is stated in precise, quantitative, and unbiased language typical of the physical and mathematical sciences.\n\nStep 3: Verdict and Action\nThe problem is valid. It is a well-defined theoretical problem in population genetics that can be solved from first principles as requested. I will proceed with the derivation.\n\nThe objective is to derive the expected equilibrium mean number, $\\Lambda$, of deleterious LINE/SINE insertions per haploid genome. The equilibrium state is achieved when the rate at which new deleterious insertions are introduced into the population by mutation is exactly balanced by the rate at which they are removed by purifying selection. We can analyze this balance for classes of insertions defined by their selection coefficient, $s$.\n\nLet us consider a large diploid population of effective size $N_e$. The total number of haploid genomes is $2N_e$.\nThe rate of new retrotransposon insertions per haploid genome per generation is $\\mu$. A fraction $f$ of these fall into functionally constrained regions and are thus deleterious. Therefore, the rate of new deleterious insertions per haploid genome per generation is $\\mu_d = \\mu f$.\n\nThese deleterious insertions have a selection coefficient $s$ drawn from the probability density function $g(s)$. The rate of introduction of new deleterious insertions with a selection coefficient in the infinitesimal interval $[s, s+ds]$ is $\\mu f g(s) ds$ per haploid genome per generation.\n\nFor the entire population of $2N_e$ haploid genomes, the total number of new deleterious insertions with selection coefficients in $[s, s+ds]$ introduced each generation is:\n$$ \\text{Input rate} = (2N_e) \\times (\\mu f g(s) ds) $$\n\nNow, consider the removal of these insertions by selection. The problem states $2N_e s \\gg 1$, which means selection is much stronger than genetic drift. We can therefore use a deterministic model for the allele frequency dynamics. Also, since $\\mu \\ll 1$, each new insertion occurs at a unique site not previously polymorphic (the \"infinite sites\" model), and the frequency of any single insertion, $q$, will be very low ($q \\ll 1$).\n\nFor a deleterious insertion with selection coefficient $s$, the relative fitnesses of the non-insertion homozygote, heterozygote, and insertion homozygote are $1$, $1-s$, and $1-2s$, respectively. At low frequencies, the vast majority of insertions will be found in heterozygotes. The frequency of insertion homozygotes, proportional to $q^2$, is negligible. The change in allele frequency per generation due to selection, $\\Delta q_{sel}$, is dominated by selection against heterozygotes.\nThe frequency after selection, $q'$, is approximately $q' \\approx \\frac{q(1-s)}{\\bar{w}}$, where the mean population fitness is $\\bar{w} \\approx 1 - 2qs$.\n$$ \\Delta q_{sel} = q' - q \\approx \\frac{q(1-s)}{1-2qs} - q \\approx q(1-s)(1+2qs) - q \\approx q-qs+2q^2s - q \\approx -qs $$\nThis result indicates that in each generation, a fraction $s$ of the existing copies of the insertion are eliminated by selection.\n\nLet $K(s)ds$ be the total number of copies of deleterious insertions with selection coefficients in $[s, s+ds]$ present at equilibrium in the population. The rate at which these copies are removed by selection is the number of copies multiplied by the fractional loss per generation, $s$.\n$$ \\text{Removal rate} = s \\times K(s)ds $$\n\nAt equilibrium, the input rate must equal the removal rate:\n$$ (2N_e) (\\mu f g(s) ds) = s K(s)ds $$\nSolving for $K(s)$, the equilibrium number of copies of insertions of strength $s$:\n$$ K(s) = \\frac{2N_e \\mu f g(s)}{s} $$\nThis expression gives the density of the total number of segregating deleterious alleles in the population with respect to $s$.\n\nThe problem asks for $\\Lambda$, the mean number of insertions per haploid genome. To find this, we must first find the total number of deleterious insertions in the population by integrating $K(s)ds$ over all possible values of $s$, and then divide by the total number of haploid genomes, $2N_e$.\n\nLet $d\\Lambda$ be the contribution to $\\Lambda$ from insertions with selection coefficients in $[s, s+ds]$. This is given by the number of such copies, $K(s)ds$, divided by $2N_e$:\n$$ d\\Lambda = \\frac{K(s)ds}{2N_e} = \\frac{1}{2N_e} \\left( \\frac{2N_e \\mu f g(s)}{s} \\right) ds = \\frac{\\mu f g(s)}{s} ds $$\nTo find the total mean number of deleterious insertions per haploid genome, $\\Lambda$, we integrate this expression over the entire range of possible $s$ values:\n$$ \\Lambda = \\int_{0}^{\\infty} d\\Lambda = \\int_{0}^{\\infty} \\frac{\\mu f g(s)}{s} ds $$\nFactoring out the constants $\\mu$ and $f$, we arrive at the final expression:\n$$ \\Lambda = \\mu f \\int_{0}^{\\infty} s^{-1} g(s) ds $$\nThe integral $\\int_{0}^{\\infty} s^{-1} g(s) ds$ is the expected value of $s^{-1}$ over the distribution of new mutations, $E[s^{-1}]$. The problem statement guarantees this quantity is finite, ensuring a well-defined equilibrium number of insertions.\n\nRegarding the second part of the question: Purifying selection acts as a powerful filter on the spectrum of mutations that are observed as polymorphisms in a population. The derivation shows that the equilibrium abundance of a class of insertions with selection coefficient $s$ is inversely proportional to $s$. The distribution of deleterious insertions observed at any given time, $p_{obs}(s)$, is not the same as the distribution of newly arising mutations, $g(s)$. Instead, its density is proportional to $g(s)/s$.\n\nThis $1/s$ weighting means that strongly deleterious insertions (large $s$) are removed from the population very efficiently and rapidly. Consequently, their equilibrium frequency is extremely low, and they contribute very little to the standing genetic variation. They are therefore highly unlikely to be found when sampling individuals from the population.\n\nConversely, weakly deleterious or nearly neutral insertions (small $s$) are removed by selection much less efficiently. They can persist in the population for longer periods and reach higher equilibrium frequencies. As a result, they make a much larger contribution to the total number of polymorphic insertions, $\\Lambda$.\n\nTherefore, when we analyze population-genomic data, the observed set of segregating LINE/SINE polymorphisms will be heavily enriched for insertions with small selection coefficients. The most deleterious insertions created by mutation are almost never seen, while the most weakly deleterious ones are the most common polymorphisms. Purifying selection shapes the landscape of variation by systematically purging deleterious elements in proportion to their fitness cost, skewing the observed distribution of polymorphisms toward the nearly neutral end of the spectrum.", "answer": "$$ \\boxed{\\mu f \\int_{0}^{\\infty} s^{-1} g(s) ds} $$", "id": "2846661"}, {"introduction": "The discovery of non-reference retrotransposon insertions from whole-genome sequencing (WGS) data is a fundamental task in computational genomics. This involves identifying specific signatures in the sequencing data, such as split-reads and discordant read pairs, that flag the presence of a novel insertion. This hands-on computational problem guides you through the process of building a robust bioinformatic pipeline, formalizing a series of logical filters to distinguish true biological signals from technical noise and mapping artifacts [@problem_id:2846706]. You will apply this deterministic rule-set to test data, gaining practical experience in the logic of structural variant calling.", "problem": "You are tasked with formalizing a computational calling pipeline for identifying non-reference insertions of Long Interspersed Nuclear Element-1 (L1) and Alu Short Interspersed Nuclear Elements (SINEs) from short-read whole-genome sequencing (WGS) data using split-read and discordant-pair evidence, and implementing explicit filters to reduce false positives in repetitive regions. The pipeline must be expressed as a deterministic decision function that, given a candidate locus summarized by a set of features, outputs one of the labels L1, Alu, or reject. The design must be justified from first principles in genetics and sequencing, but the implementation itself should follow a precise, reproducible rule set defined below.\n\nFoundational context and observable signals:\n- The Central Dogma and genome organization imply that retrotransposon insertions alter the reference genome by creating novel junctions between the reference and an inserted element sequence. Illumina paired-end short reads that span such junctions yield split-read alignments and discordant read-pair signatures. \n- Non-long terminal repeat (non-LTR) retrotransposon insertions, including Long Interspersed Nuclear Element-1 (LINE-1, abbreviated L1) and Alu, are typically characterized by a poly-adenine tail and a short target site duplication at the insertion site due to target-primed reverse transcription.\n- In repetitive regions, mapping ambiguity inflates spurious signals; robust filters must account for mapping quality, repeat context, and signal consistency.\n\nDefine the decision rule with the following variables per candidate locus:\n- Split-read counts: $s_L$, $s_R$ (left and right breakpoints).\n- Discordant-pair counts: $d_L$, $d_R$ (left and right clusters).\n- Median mapping qualities of split reads: $m_L$, $m_R$.\n- Local repetitive or low-mappability fraction in a $1{,}000$ base pair window: $r$, expressed as a real number in $[0,1]$.\n- Proximity to nearest annotated reference transposable element of the same family (in base pairs): $p$, which must be handled in units of base pairs (bp).\n- Orientation consistency flag from read-pair layout: $o \\in \\{\\text{True}, \\text{False}\\}$.\n- Poly-adenine tail length estimate from soft-clipped consensus sequence: $a$ (in base pairs).\n- Target site duplication length estimate: $t$ (in base pairs).\n- Split-clip alignment support to element consensus: $c_{L1}$ (L1 consensus), $c_{Alu}$ (Alu consensus).\n- Breakpoint coherence deviation: $b$ (absolute deviation, in base pairs), representing the absolute difference between inferred left and right breakpoint separation and the target site duplication length.\n\nDefine the pipeline as follows:\n1) Evidence aggregation:\n   - Compute support score $S = s_L + s_R + 0.5 \\times (d_L + d_R)$. Require $S \\ge T$ with $T = 4$.\n2) Split-read side requirement:\n   - Either $s_L \\ge 1$ and $s_R \\ge 1$, or, if at least one side has zero split reads, require $d_L + d_R \\ge 6$.\n3) Mapping quality filter:\n   - For any side with $s_\\cdot > 0$, require the corresponding median mapping quality $m_\\cdot \\ge 20$. If $s_\\cdot = 0$, the corresponding $m_\\cdot$ is ignored.\n4) Repeat content filter:\n   - Require $r \\le 0.6$.\n5) Proximity to reference elements:\n   - Require $p \\ge 100$ base pairs.\n6) Orientation consistency:\n   - Require $o = \\text{True}$.\n7) Poly-adenine tail:\n   - Require $a \\ge 8$.\n8) Breakpoint coherence:\n   - Require $b \\le 10$ base pairs.\n9) General target site duplication range:\n   - Require $t \\in [4,25]$ base pairs.\n10) Family assignment using split-clip alignment support:\n    - If $c_{L1} - c_{Alu} \\ge 2$, assign provisional family $F = \\text{L1}$.\n    - Else if $c_{Alu} - c_{L1} \\ge 2$, assign provisional family $F = \\text{Alu}$.\n    - Else, reject.\n11) Family-specific checks:\n    - If $F = \\text{L1}$, additionally require $a \\ge 12$ and $t \\in [5,25]$ base pairs.\n    - If $F = \\text{Alu}$, additionally require $a \\ge 8$ and $t \\in [7,25]$ base pairs.\nIf a candidate passes all applicable filters, output the assigned family; otherwise, output reject.\n\nImplement a program that applies this exact pipeline to the following test suite of candidate loci. Each test case is provided as an ordered tuple $(s_L,s_R,d_L,d_R,m_L,m_R,r,p,o,a,t,c_{L1},c_{Alu},b)$, with distances in base pairs and $r$ unitless. The boolean $o$ is written as $\\text{True}$ or $\\text{False}$.\n\n- Test case $1$: $(3,2,2,1,60,55,0.2,500,\\text{True},22,12,6,1,3)$\n- Test case $2$: $(2,2,1,1,45,40,0.3,400,\\text{True},11,14,1,5,2)$\n- Test case $3$: $(1,1,4,0,30,25,0.5,120,\\text{True},8,8,0,3,0)$\n- Test case $4$: $(3,2,2,2,50,50,0.75,600,\\text{True},20,10,4,1,3)$\n- Test case $5$: $(0,2,5,4,0,35,0.4,1000,\\text{True},13,10,3,0,4)$\n- Test case $6$: $(2,2,2,1,40,37,0.25,50,\\text{True},10,12,0,3,1)$\n- Test case $7$: $(2,2,2,2,50,50,0.2,300,\\text{True},15,9,2,2,1)$\n- Test case $8$: $(2,2,2,2,45,45,0.2,400,\\text{False},18,10,4,0,2)$\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, with each element being one of the exact strings L1, Alu, or reject without quotation marks. For example: \"[L1,Alu,reject]\".", "solution": "The problem statement is scrutinized and found to be valid. It presents a well-defined, scientifically grounded computational task in the field of bioinformatics, which is a sub-discipline of quantitative biology and computer science. The problem is self-contained, its parameters are realistic, and the decision logic is deterministic and free of contradiction. We may therefore proceed with a formal solution.\n\nThe objective is to construct a computational pipeline that classifies candidate genomic loci as insertions of either Long Interspersed Nuclear Element-1 (L1) or Alu elements, or rejects them as artifacts. This pipeline formalizes the process of interpreting signals from short-read whole-genome sequencing (WGS) data. The provided rules are a simplified but representative model of algorithms used in practice for mobile element insertion discovery. The justification for each step of the pipeline is rooted in the principles of molecular genetics and sequencing technology.\n\nA candidate insertion is defined by a vector of $14$ features: $(s_L,s_R,d_L,d_R,m_L,m_R,r,p,o,a,t,c_{L1},c_{Alu},b)$. We will apply a sequence of filters. Failure at any step results in rejection of the candidate.\n\n**1. Evidence Aggregation Filter**\nThe primary evidence for an insertion is derived from split reads and discordant read pairs. A split read has one part mapping to the reference genome and the other part mapping to the inserted element or being unmapped (soft-clipped). A discordant read pair has an abnormal orientation or insert size, suggesting a structural alteration between the reads.\nThe total support score is defined as $S = s_L + s_R + 0.5 \\times (d_L + d_R)$. The variables $s_L$ and $s_R$ are the counts of split reads supporting the left and right breakpoints, respectively. The variables $d_L$ and $d_R$ are the counts of discordant read pairs. Discordant pairs are weighted by $0.5$ as they are considered less precise evidence than split reads. A candidate must have a minimum aggregate support score:\n$$\nS \\ge T \\quad \\text{where} \\quad T=4\n$$\nThis initial filter removes loci with insufficient evidence to be reliably distinguished from background noise.\n\n**2. Breakpoint Confirmation Filter**\nAn insertion has two breakpoints. Ideally, both are supported by split reads. The rule is:\n$$\n(s_L \\ge 1 \\text{ and } s_R \\ge 1) \\quad \\text{or} \\quad (d_L + d_R \\ge 6)\n$$\nIf split reads do not flank both sides of the insertion, a higher-than-average number of discordant pairs is required to compensate. This handles cases where one breakpoint is in a region recalcitrant to unique read mapping.\n\n**3. Mapping Quality Filter**\nRead mapping ambiguity is a primary source of false positives. Mapping quality ($MQ$) is a PHRED-scaled probability of mapping error. The filter requires high confidence for split-read alignments:\n$$\n\\text{If } s_L > 0, \\text{ then } m_L \\ge 20 \\quad \\text{and} \\quad \\text{If } s_R > 0, \\text{ then } m_R \\ge 20\n$$\nwhere $m_L$ and $m_R$ are the median mapping qualities. A threshold of $20$ corresponds to a $1\\%$ chance of mapping error and is a standard minimum for structural variation analysis.\n\n**4. Repeat Context Filter**\nGenomic regions with high repeat density cause systematic read mis-mapping. We filter out candidates in such problematic regions:\n$$\nr \\le 0.6\n$$\nHere, $r$ is the fraction of a $1,000$ base-pair window around the candidate that is annotated as repetitive or has low mappability.\n\n**5. Proximity Filter**\nSignals near an existing transposable element in the reference genome may be artifacts. To avoid this, a candidate must be sufficiently distant from known elements of the same family:\n$$\np \\ge 100 \\text{ bp}\n$$\nwhere $p$ is the distance to the nearest annotated reference element.\n\n**6. Read-Pair Orientation Filter**\nA canonical retrotransposon insertion creates a characteristic signature in paired-end read data (e.g., increased insert size with forward-reverse orientation). The filter requires this expected signature:\n$$\no = \\text{True}\n$$\nThis helps distinguish true insertions from other structural variants like inversions or translocations.\n\n**7. Poly-Adenine Tail Filter**\nThe mechanism of target-primed reverse transcription (TPRT) that mediates L1 and Alu insertion results in a poly-A tail at the $3'$ end of the new element. The presence of a sufficiently long poly-A tail is strong evidence for a genuine retrotransposition event.\n$$\na \\ge 8 \\text{ bp}\n$$\nwhere $a$ is the estimated length of the poly-A tail.\n\n**8. Breakpoint Coherence Filter**\nThe left and right breakpoints of a simple insertion should be contiguous, separated only by the target site duplication. Imprecise mapping can create a small gap or overlap. Large discrepancies suggest a more complex event or an artifact.\n$$\nb \\le 10 \\text{ bp}\n$$\nwhere $b$ is the absolute deviation between the inferred breakpoint separation and the TSD length.\n\n**9. Target Site Duplication (TSD) Filter**\nTPRT creates a short duplication of the genomic sequence at the insertion site, known as the TSD. The length of the TSD is a hallmark feature.\n$$\nt \\in [4, 25] \\text{ bp}\n$$\nwhere $t$ is the estimated TSD length.\n\n**10. Family Assignment Logic**\nIf a candidate passes all preceding filters, its family is determined by comparing the support from split-read clips aligned to L1 vs. Alu consensus sequences.\n- If $c_{L1} - c_{Alu} \\ge 2$, the provisional family is $F = \\text{L1}$.\n- If $c_{Alu} - c_{L1} \\ge 2$, the provisional family is $F = \\text{Alu}$.\n- Otherwise, the evidence is ambiguous, and the candidate is rejected.\n\n**11. Family-Specific Filters**\nFinally, stricter, family-specific biochemical properties are checked.\n- If $F = \\text{L1}$, we require a longer poly-A tail and a specific TSD range: $a \\ge 12$ and $t \\in [5, 25]$.\n- If $F = \\text{Alu}$, the requirements are slightly different: $a \\ge 8$ and $t \\in [7, 25]$.\n\nA candidate is accepted and labeled 'L1' or 'Alu' only if it passes all general filters and its respective family-specific filters. Otherwise, it is labeled 'reject'.\n\n**Example Walkthrough: Test Case 2**\nInput: $(s_L,s_R,d_L,d_R,m_L,m_R,r,p,o,a,t,c_{L1},c_{Alu},b) = (2,2,1,1,45,40,0.3,400,\\text{True},11,14,1,5,2)$.\n1. Support $S = 2+2+0.5 \\times(1+1) = 5$. $5 \\ge 4$. PASS.\n2. Sides: $s_L=2 \\ge 1$ and $s_R=2 \\ge 1$. PASS.\n3. MQ: $m_L=45 \\ge 20$, $m_R=40 \\ge 20$. PASS.\n4. Repetitiveness: $r=0.3 \\le 0.6$. PASS.\n5. Proximity: $p=400 \\ge 100$. PASS.\n6. Orientation: $o=\\text{True}$. PASS.\n7. Poly-A: $a=11 \\ge 8$. PASS.\n8. Coherence: $b=2 \\le 10$. PASS.\n9. TSD: $t=14 \\in [4,25]$. PASS.\n10. Family: $c_{Alu} - c_{L1} = 5-1 = 4$. $4 \\ge 2$. Provisional family $F = \\text{Alu}$.\n11. Family-specific (Alu):\n    - $a=11 \\ge 8$. PASS.\n    - $t=14 \\in [7,25]$. PASS.\nAll filters pass. The result is **Alu**.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Applies a deterministic decision function to classify candidate retrotransposon\n    insertions based on a set of genomic and sequencing features.\n    \"\"\"\n\n    # Test cases as tuples of (s_L, s_R, d_L, d_R, m_L, m_R, r, p, o, a, t, c_L1, c_Alu, b)\n    test_cases = [\n        (3, 2, 2, 1, 60, 55, 0.2, 500, True, 22, 12, 6, 1, 3),   # TC1\n        (2, 2, 1, 1, 45, 40, 0.3, 400, True, 11, 14, 1, 5, 2),   # TC2\n        (1, 1, 4, 0, 30, 25, 0.5, 120, True, 8, 8, 0, 3, 0),     # TC3\n        (3, 2, 2, 2, 50, 50, 0.75, 600, True, 20, 10, 4, 1, 3), # TC4\n        (0, 2, 5, 4, 0, 35, 0.4, 1000, True, 13, 10, 3, 0, 4),   # TC5\n        (2, 2, 2, 1, 40, 37, 0.25, 50, True, 10, 12, 0, 3, 1),   # TC6\n        (2, 2, 2, 2, 50, 50, 0.2, 300, True, 15, 9, 2, 2, 1),   # TC7\n        (2, 2, 2, 2, 45, 45, 0.2, 400, False, 18, 10, 4, 0, 2), # TC8\n    ]\n\n    results = []\n    for case in test_cases:\n        result = classify_locus(*case)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef classify_locus(s_L, s_R, d_L, d_R, m_L, m_R, r, p, o, a, t, c_L1, c_Alu, b):\n    \"\"\"\n    Implements the full classification pipeline for a single candidate locus.\n    \n    Args:\n        s_L, s_R: split-read counts\n        d_L, d_R: discordant-pair counts\n        m_L, m_R: median mapping qualities of split reads\n        r: local repetitive fraction\n        p: proximity to nearest reference TE\n        o: orientation consistency flag\n        a: poly-adenine tail length estimate\n        t: target site duplication length estimate\n        c_L1, c_Alu: split-clip alignment support for L1/Alu\n        b: breakpoint coherence deviation\n\n    Returns:\n        'L1', 'Alu', or 'reject'\n    \"\"\"\n    \n    # 1) Evidence aggregation\n    T = 4\n    S = s_L + s_R + 0.5 * (d_L + d_R)\n    if S < T:\n        return 'reject'\n\n    # 2) Split-read side requirement\n    if not ((s_L >= 1 and s_R >= 1) or (d_L + d_R >= 6)):\n        return 'reject'\n\n    # 3) Mapping quality filter\n    if (s_L > 0 and m_L < 20) or (s_R > 0 and m_R < 20):\n        return 'reject'\n\n    # 4) Repeat content filter\n    if r > 0.6:\n        return 'reject'\n\n    # 5) Proximity to reference elements\n    if p < 100:\n        return 'reject'\n\n    # 6) Orientation consistency\n    if not o:\n        return 'reject'\n\n    # 7) Poly-adenine tail\n    if a < 8:\n        return 'reject'\n        \n    # 8) Breakpoint coherence\n    if b > 10:\n        return 'reject'\n\n    # 9) General target site duplication range\n    if not (4 <= t <= 25):\n        return 'reject'\n\n    # 10) Family assignment using split-clip alignment support\n    provisional_family = None\n    if c_L1 - c_Alu >= 2:\n        provisional_family = 'L1'\n    elif c_Alu - c_L1 >= 2:\n        provisional_family = 'Alu'\n    else:\n        return 'reject'\n\n    # 11) Family-specific checks\n    if provisional_family == 'L1':\n        if a >= 12 and 5 <= t <= 25:\n            return 'L1'\n        else:\n            return 'reject'\n    elif provisional_family == 'Alu':\n        if a >= 8 and 7 <= t <= 25:\n            return 'Alu'\n        else:\n            return 'reject'\n            \n    # This part should not be reached given the logic, but as a fallback.\n    return 'reject'\n\nsolve()\n```", "id": "2846706"}]}