{"hands_on_practices": [{"introduction": "To effectively use a genetic marker in forensic science, we must first quantify its power to distinguish between individuals. This exercise focuses on two cornerstone metrics of marker informativeness: expected heterozygosity ($H$) and polymorphism information content (PIC). By calculating these values from population allele frequencies, you will gain hands-on practice in evaluating the utility of a Short Tandem Repeat (STR) locus, a foundational skill for understanding why certain markers are chosen for forensic identification panels [@problem_id:2810974].", "problem": "A single-locus Short Tandem Repeat (STR) marker used in forensic identification is typed in a reference population assumed to satisfy Hardy–Weinberg Equilibrium (HWE). The alleles are categorized by their repeat numbers, and the observed population allele frequencies are:\n- repeat $8$: $0.14$\n- repeat $9$: $0.23$\n- repeat $10$: $0.31$\n- repeat $11$: $0.21$\n- repeat $12$: $0.11$\n\nStarting from first principles of HWE and basic probability:\n1) Define the expected heterozygosity $H$ as the probability that two alleles drawn independently from the population gene pool are different, and derive an expression for $H$ in terms of the allele frequencies $\\{p_i\\}$.\n2) Polymorphism Information Content (PIC) for a codominant marker is a population-genetic measure of informativeness that depends only on the allele frequencies. Using its standard definition for codominant markers, express PIC in terms of $\\{p_i\\}$ by first principles reasoning about random mating and genotype formation under HWE, and simplify the expression as far as possible.\n\nCompute numerical values for $H$ and for $\\mathrm{PIC}$ using the frequency data above, then report the single quantity\n$$R \\;=\\; \\frac{\\mathrm{PIC}}{H}.$$\nExpress $R$ as a decimal and round your answer to four significant figures. No units are required.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. All necessary data are provided, and the concepts invoked—Hardy–Weinberg Equilibrium (HWE), expected heterozygosity ($H$), and Polymorphism Information Content ($\\mathrm{PIC}$)—are standard in population genetics. The provided allele frequencies sum to $1.00$, as required for a complete set of alleles at a locus. The problem is therefore valid and permits a rigorous solution. We proceed.\n\nLet the set of alleles at the locus be $\\{A_i\\}$, where $i$ indexes the specific allele (defined by its repeat number). Let the corresponding allele frequencies in the population be $\\{p_i\\}$, where $\\sum_i p_i = 1$. The given frequencies are $p_8 = 0.14$, $p_9 = 0.23$, $p_{10} = 0.31$, $p_{11} = 0.21$, and $p_{12} = 0.11$.\n\nFirst, we address the derivation of the expected heterozygosity, $H$.\n\nBy definition, the expected heterozygosity $H$ is the probability that two alleles drawn independently and randomly from the gene pool are different. It is more direct to first calculate the probability of the complementary event: that two randomly drawn alleles are the same. This quantity is the expected homozygosity, which we will denote as $J$.\n\nFor a specific allele $A_i$ with frequency $p_i$, the probability of drawing it in a single random event is $p_i$. Because the two draws are independent, the probability of drawing allele $A_i$ twice in a row is $p_i \\times p_i = p_i^2$.\n\nThe total probability of drawing two identical alleles, $J$, is the sum of the probabilities of drawing two of each possible allele type. Since the events of drawing a specific pair (e.g., two $A_i$'s) are mutually exclusive for different $i$, we sum over all alleles:\n$$J = \\sum_{i} p_i^2$$\nThe expected heterozygosity $H$ is the probability of the complementary event, so:\n$$H = 1 - J = 1 - \\sum_{i} p_i^2$$\nThis formula defines $H$ in terms of the allele frequencies $\\{p_i\\}$.\n\nSecond, we address the derivation and simplification of the Polymorphism Information Content ($\\mathrm{PIC}$).\n\nThe $\\mathrm{PIC}$ for a codominant, multiallelic marker is a measure of its informativeness for genetic linkage analysis. For a given locus, it is the probability that the genotype of an arbitrary offspring will allow one to deduce which of the two alleles from a parent was transmitted. The standard definition, derived from considering all possible mating types under random mating and HWE, is:\n$$\\mathrm{PIC} = 1 - \\sum_{i} p_i^2 - \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} 2 p_i^2 p_j^2$$\nHere, $n$ is the number of alleles. The term $1 - \\sum_{i} p_i^2$ is simply the expected heterozygosity $H$, representing the probability that a random individual is heterozygous. The double summation term, $2 \\sum_{i<j} p_i^2 p_j^2$, is a correction factor that accounts for matings that are uninformative even when a parent is heterozygous. This occurs, for example, when both parents are identically heterozygous (e.g., $A_i A_j \\times A_i A_j$), making it impossible to determine the parental origin of an $A_i$ or $A_j$ allele in a heterozygous offspring.\n\nTo simplify this expression for calculation, we examine the algebraic structure of the term $\\left(\\sum_i p_i^2\\right)^2$:\n$$\\left(\\sum_{i=1}^{n} p_i^2\\right)^2 = \\left(\\sum_{i=1}^{n} p_i^2\\right) \\left(\\sum_{j=1}^{n} p_j^2\\right) = \\sum_{i=1}^{n} (p_i^2)^2 + \\sum_{i \\neq j} p_i^2 p_j^2$$\nThe second term can be written as $2 \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} p_i^2 p_j^2$. Therefore:\n$$\\left(\\sum_{i=1}^{n} p_i^2\\right)^2 = \\sum_{i=1}^{n} p_i^4 + 2 \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} p_i^2 p_j^2$$\nRearranging this identity gives an expression for the double summation term in the $\\mathrm{PIC}$ formula:\n$$2 \\sum_{i=1}^{n-1} \\sum_{j=i+1}^{n} p_i^2 p_j^2 = \\left(\\sum_{i=1}^{n} p_i^2\\right)^2 - \\sum_{i=1}^{n} p_i^4$$\nSubstituting this back into the original formula for $\\mathrm{PIC}$:\n$$\\mathrm{PIC} = \\left(1 - \\sum_{i} p_i^2\\right) - \\left[ \\left(\\sum_{i} p_i^2\\right)^2 - \\sum_{i} p_i^4 \\right]$$\nThis is the simplified expression for $\\mathrm{PIC}$, which depends only on the sum of squares and the sum of fourth powers of the allele frequencies.\n\nThird, we compute the numerical values for $H$, $\\mathrm{PIC}$, and the ratio $R = \\mathrm{PIC}/H$. The allele frequencies are $p_1=0.14$, $p_2=0.23$, $p_3=0.31$, $p_4=0.21$, $p_5=0.11$.\n\nWe first calculate the sum of squared allele frequencies, $\\sum p_i^2$:\n$$ \\sum_{i} p_i^2 = (0.14)^2 + (0.23)^2 + (0.31)^2 + (0.21)^2 + (0.11)^2 $$\n$$ \\sum_{i} p_i^2 = 0.0196 + 0.0529 + 0.0961 + 0.0441 + 0.0121 = 0.2248 $$\nNow, we can calculate the expected heterozygosity, $H$:\n$$ H = 1 - \\sum_{i} p_i^2 = 1 - 0.2248 = 0.7752 $$\n\nNext, to compute $\\mathrm{PIC}$, we need the sum of the fourth powers of the allele frequencies, $\\sum p_i^4$:\n$$ \\sum_{i} p_i^4 = (0.14)^4 + (0.23)^4 + (0.31)^4 + (0.21)^4 + (0.11)^4 $$\n$$ \\sum_{i} p_i^4 = 0.00038416 + 0.00279841 + 0.00923521 + 0.00194481 + 0.00014641 $$\n$$ \\sum_{i} p_i^4 = 0.014509 $$\nWe also need the square of the sum of squares:\n$$ \\left(\\sum_{i} p_i^2\\right)^2 = (0.2248)^2 = 0.05053504 $$\nNow substitute these values into the simplified formula for $\\mathrm{PIC}$:\n$$ \\mathrm{PIC} = \\left(1 - \\sum_{i} p_i^2\\right) - \\left[ \\left(\\sum_{i} p_i^2\\right)^2 - \\sum_{i} p_i^4 \\right] $$\n$$ \\mathrm{PIC} = H - \\left[ \\left(\\sum_{i} p_i^2\\right)^2 - \\sum_{i} p_i^4 \\right] $$\n$$ \\mathrm{PIC} = 0.7752 - [0.05053504 - 0.014509] $$\n$$ \\mathrm{PIC} = 0.7752 - 0.03602604 = 0.73917396 $$\n\nFinally, we compute the required ratio $R$:\n$$ R = \\frac{\\mathrm{PIC}}{H} = \\frac{0.73917396}{0.7752} \\approx 0.9535269089... $$\nRounding this value to four significant figures gives $0.9535$.", "answer": "$$\\boxed{0.9535}$$", "id": "2810974"}, {"introduction": "Evaluating the strength of a DNA match often involves comparing a suspect's profile to a population database, but what happens when the matching allele is so rare it's not even in the database? This practice confronts the \"rare type match\" problem, guiding you to derive a Likelihood Ratio ($LR$) using a Bayesian framework to properly account for sampling uncertainty [@problem_id:2810945]. By working through this challenging scenario and applying the principle of conservative reporting, you will develop a deeper understanding of how the weight of evidence is calculated in a statistically robust and ethically sound manner.", "problem": "A single-source crime scene trace has a clear homozygous genotype $aa$ at one autosomal short tandem repeat locus. The person of interest has the same genotype $aa$. You are asked to evaluate the Likelihood Ratio (LR) for this single locus under the following hypotheses: $H_p$ (the trace originated from the person of interest) and $H_d$ (the trace originated from a random, unrelated member of a specified population). Assume Hardy–Weinberg Equilibrium (HWE), no allelic dropout or drop-in, no mutation, and no population substructure.\n\nA reference population database comprising $n$ independent alleles at this locus (that is, $n$ chromosomes; for $N$ diploid individuals, $n = 2N$) contains $x = 0$ copies of allele $a$. Let $p$ denote the true population frequency of allele $a$. Model $p$ a priori by a symmetric Beta prior $\\mathrm{Beta}(\\alpha,\\alpha)$, reflecting exchangeability between “$a$” and “not $a$” before seeing the database. Use the database as binomial sampling of size $n$ from $p$ to update this prior.\n\nStarting from first principles and the definition of the LR, derive a closed-form expression for the single-locus LR as a function of $\\alpha$ and $n$. Then, for a database formed by $N = 500$ unrelated individuals (so $n = 1000$), compute the LR for the two choices $\\alpha = 1/2$ (Jeffreys prior) and $\\alpha = 1$ (Laplace’s rule of succession). Based on the principles of conservative reporting in forensic genetics, choose the more conservative of these two and report the corresponding LR. Round your final reported LR to four significant figures and express it as a pure number (no units).", "solution": "The problem requires the derivation and calculation of a Likelihood Ratio (LR) for a single-locus DNA match where the matching allele is not observed in a reference database.\n\nThe Likelihood Ratio is defined as the ratio of the probability of the evidence under two competing hypotheses:\n$$\nLR = \\frac{P(E | H_p)}{P(E | H_d)}\n$$\nHere, the evidence, $E$, is the observation that the crime scene trace has the homozygous genotype $aa$. The hypotheses are:\n- $H_p$: The trace originated from the person of interest (POI).\n- $H_d$: The trace originated from a random, unrelated person in the population.\n\nFirst, we evaluate the numerator, $P(E | H_p)$. Under the prosecution hypothesis, $H_p$, the trace is from the POI. We are given that the POI has the genotype $aa$. Assuming no measurement error (as stated by \"no allelic dropout or drop-in\"), the probability of observing the genotype $aa$ in the trace, given it came from the POI, is certain.\n$$\nP(E | H_p) = 1\n$$\n\nNext, we evaluate the denominator, $P(E | H_d)$. Under the defense hypothesis, $H_d$, the trace is from an unknown individual randomly drawn from the population. The probability of this individual having the genotype $aa$ depends on the frequency of allele $a$ in the population, which we denote by $p$. Under the assumption of Hardy–Weinberg Equilibrium (HWE), the probability of a random individual having the genotype $aa$ is $p^2$.\n\nThe allele frequency $p$ is unknown. We must treat it as a random variable and use a Bayesian approach to infer its value. The problem specifies a symmetric Beta prior for $p$, denoted as $p \\sim \\mathrm{Beta}(\\alpha, \\alpha)$. The probability density function (PDF) of this prior is:\n$$\nf(p; \\alpha, \\alpha) = \\frac{p^{\\alpha-1} (1-p)^{\\alpha-1}}{B(\\alpha, \\alpha)}\n$$\nwhere $B(\\alpha, \\alpha)$ is the Beta function.\n\nThis prior is updated using the data from the reference population database. The database contains $n$ alleles, with $x=0$ observed copies of allele $a$. The sampling of alleles from the population can be modeled as a binomial process. The likelihood of observing $x=0$ counts of allele $a$ in a sample of size $n$ is:\n$$\nL(p | x=0, n) = \\binom{n}{0} p^0 (1-p)^{n-0} \\propto (1-p)^n\n$$\nThe posterior distribution of $p$ is proportional to the product of the prior and the likelihood:\n$$\nf(p | x=0, n, \\alpha) \\propto f(p; \\alpha, \\alpha) \\times L(p | x=0, n)\n$$\n$$\nf(p | x=0, n, \\alpha) \\propto p^{\\alpha-1} (1-p)^{\\alpha-1} \\times (1-p)^n = p^{\\alpha-1} (1-p)^{n+\\alpha-1}\n$$\nThis is the kernel of a Beta distribution with updated parameters $\\alpha' = \\alpha$ and $\\beta' = n+\\alpha$. Therefore, the posterior distribution for $p$ is:\n$$\np | (\\text{data}) \\sim \\mathrm{Beta}(\\alpha, n+\\alpha)\n$$\nThe probability $P(E | H_d)$ is the posterior predictive probability of observing a genotype $aa$. This is the expectation of the genotype probability $p^2$ with respect to the posterior distribution of $p$:\n$$\nP(E | H_d) = E[p^2 | \\text{data}] = \\int_{0}^{1} p^2 f(p | x=0, n, \\alpha) \\,dp\n$$\nFor a random variable $Y \\sim \\mathrm{Beta}(A, B)$, the $k$-th moment is given by $E[Y^k] = \\frac{B(A+k, B)}{B(A, B)}$. Using the identity $B(u, v) = \\frac{\\Gamma(u)\\Gamma(v)}{\\Gamma(u+v)}$, this becomes:\n$$\nE[Y^k] = \\frac{\\Gamma(A+k)\\Gamma(A+B)}{\\Gamma(A)\\Gamma(A+B+k)}\n$$\nUsing the property $\\Gamma(z+1)=z\\Gamma(z)$, this simplifies to $E[Y^k] = \\frac{(A+k-1)\\dots(A)}{(A+B+k-1)\\dots(A+B)}$.\nFor our posterior distribution, $A = \\alpha$ and $B = n+\\alpha$. We need the second moment ($k=2$):\n$$\nP(E | H_d) = E[p^2 | \\text{data}] = \\frac{(\\alpha+1)\\alpha}{(\\alpha + (n+\\alpha) + 1)(\\alpha + (n+\\alpha))} = \\frac{\\alpha(\\alpha+1)}{(n+2\\alpha)(n+2\\alpha+1)}\n$$\nNow, we can write the complete expression for the LR:\n$$\nLR = \\frac{1}{P(E | H_d)} = \\frac{(n+2\\alpha)(n+2\\alpha+1)}{\\alpha(\\alpha+1)}\n$$\nThis is the required closed-form expression for the LR as a function of $\\alpha$ and $n$.\n\nThe problem states there are $N=500$ individuals in the database, so the number of alleles is $n=2N = 1000$. We are asked to compute the LR for two choices of the prior parameter $\\alpha$.\n\nCase 1: Jeffreys prior, $\\alpha = 1/2$.\nSubstituting $n=1000$ and $\\alpha=1/2$ into the LR formula:\n$$\nLR_{\\alpha=1/2} = \\frac{(1000 + 2(1/2))(1000 + 2(1/2) + 1)}{(1/2)(1/2 + 1)} = \\frac{(1000+1)(1000+2)}{(1/2)(3/2)} = \\frac{1001 \\times 1002}{3/4} = \\frac{4 \\times 1003002}{3} = 1337336\n$$\n\nCase 2: Laplace's rule of succession, $\\alpha = 1$.\nSubstituting $n=1000$ and $\\alpha=1$ into the LR formula:\n$$\nLR_{\\alpha=1} = \\frac{(1000 + 2(1))(1000 + 2(1) + 1)}{(1)(1+1)} = \\frac{(1002)(1003)}{2} = 501 \\times 1003 = 502503\n$$\n\nThe principle of conservative reporting in forensic genetics advises that when there is uncertainty or a choice of models, one should report the result that is least prejudicial to the person of interest. In the context of the LR, this means reporting the value that gives less support to the prosecution's hypothesis $H_p$. Since both LR values are greater than $1$, the lower value is the more conservative one.\nComparing the two results:\n$LR_{\\alpha=1} = 502503$\n$LR_{\\alpha=1/2} = 1337336$\nSince $502503 < 1337336$, the more conservative choice is the LR derived using Laplace's rule ($\\alpha=1$).\n\nThe final task is to report this conservative LR rounded to four significant figures.\nThe value is $502503$. To four significant figures, this is $502500$. Expressed in standard scientific notation, this is $5.025 \\times 10^5$.", "answer": "$$\n\\boxed{5.025 \\times 10^5}\n$$", "id": "2810945"}, {"introduction": "Forensic genetics extends beyond identifying individuals to untangling complex questions of biological relatedness. This advanced practice challenges you to move from theory to implementation by building a program to compute pedigree likelihoods using the classic Elston–Stewart algorithm [@problem_id:2810916]. By calculating a likelihood ratio for a putative avuncular (aunt/uncle-niece/nephew) relationship, you will gain invaluable hands-on experience with the computational engine that drives modern forensic kinship analysis.", "problem": "A forensic genetics laboratory seeks to evaluate whether two individuals form an avuncular pair (aunt/uncle and niece/nephew) using autosomal Short Tandem Repeat (STR) markers. Construct and evaluate the pedigree likelihood for this avuncular relationship using Elston–Stewart recursion, under the following general assumptions: autosomal markers, no mutation, random mating, Hardy–Weinberg Equilibrium (HWE), and linkage equilibrium across loci. Your task is to implement a program that computes, for each test case, the combined likelihood ratio comparing the avuncular hypothesis to the alternative of two unrelated individuals.\n\nStart from the following fundamental base:\n- The Mendelian law of segregation: each parent transmits one of its two alleles at a locus to the child with probability $0.5$ for each allele.\n- Hardy–Weinberg Equilibrium (HWE): if allele frequencies at a locus are $\\{p_{a}\\}$, the genotype probability for a founder is $p_{i}^{2}$ for homozygous genotype $\\{i,i\\}$ and $2 p_{i} p_{j}$ for heterozygous genotype $\\{i,j\\}$ with $i \\neq j$.\n- Linkage equilibrium: across loci, joint probabilities factor as products over loci.\n\nPedigree definition for the avuncular hypothesis: let the observed individuals be $A$ (putative aunt/uncle) and $B$ (putative niece/nephew). The pedigree consists of founders $G_{1}$ and $G_{2}$ (grandparents), their children $A$ and $P$ (where $P$ is the parent of $B$), an outbred founder $O$ (the other parent of $B$), and $B$ as the child of $P$ and $O$. All founders are drawn from HWE with the provided allele frequencies, and there is no mutation. All transmissions follow Mendelian segregation.\n\nMathematical objective for a single locus:\n- Let $g_{X}$ denote the unordered genotype of individual $X$ at the locus (e.g., $g_{A} = \\{a_{1},a_{2}\\}$). Under the avuncular hypothesis $\\mathcal{H}_{1}$, the Elston–Stewart (ES) recursion gives a factorization of the pedigree likelihood for the observed genotypes of $A$ and $B$ by peeling unobserved individuals:\n$$\n\\mathcal{L}_{1} = \\sum_{g_{G_{1}}, g_{G_{2}}, g_{O}} \\Big[ \\Pr(g_{G_{1}})\\, \\Pr(g_{G_{2}})\\, \\Pr(g_{O}) \\, \\Pr(g_{A} \\mid g_{G_{1}},g_{G_{2}}) \\, \\sum_{g_{P}} \\Pr(g_{P} \\mid g_{G_{1}},g_{G_{2}})\\, \\Pr(g_{B} \\mid g_{P}, g_{O}) \\Big],\n$$\nwhere $\\Pr(g_{X})$ for founders follows HWE and each conditional $\\Pr(\\cdot \\mid \\cdot)$ follows Mendelian segregation without mutation. Under the unrelated hypothesis $\\mathcal{H}_{0}$, the likelihood factors as\n$$\n\\mathcal{L}_{0} = \\Pr(g_{A}) \\Pr(g_{B}),\n$$\nwith each factor given by HWE. The single-locus likelihood ratio is\n$$\n\\mathrm{LR}_{\\text{locus}} = \\frac{\\mathcal{L}_{1}}{\\mathcal{L}_{0}}.\n$$\nAcross multiple loci, assuming linkage equilibrium, the combined likelihood ratio is the product:\n$$\n\\mathrm{LR}_{\\text{combined}} = \\prod_{\\ell=1}^{L} \\mathrm{LR}_{\\text{locus},\\ell}.\n$$\n\nTransmission model details:\n- If a parent has genotype $\\{x,y\\}$ with $x \\neq y$, it transmits allele $x$ with probability $0.5$ and allele $y$ with probability $0.5$. If the parent is homozygous $\\{x,x\\}$, it transmits $x$ with probability $1$.\n- For two parents with genotypes $\\{x_{1},x_{2}\\}$ and $\\{y_{1},y_{2}\\}$, the child genotype distribution is the distribution of unordered pairs obtained by independently sampling one allele from each parent according to the $0.5/0.5$ (or $1/0$ if homozygous) law and then unordered-pairing them.\n\nInput to your program is fixed by this specification and must be hard-coded according to the test suite below. Your program should implement the recursion as defined and compute the combined likelihood ratio for each test case.\n\nTest suite:\n- Case $1$ (two loci):\n  - Locus $1$: allele frequencies $\\{10: 0.2, 11: 0.3, 12: 0.5\\}$; genotypes $g_{A} = \\{10,11\\}$, $g_{B} = \\{11,12\\}$.\n  - Locus $2$: allele frequencies $\\{8: 0.6, 9: 0.4\\}$; genotypes $g_{A} = \\{8,8\\}$, $g_{B} = \\{8,9\\}$.\n- Case $2$ (one locus):\n  - Locus $1$: allele frequencies $\\{X: 0.7, Y: 0.2, Z: 0.1\\}$; genotypes $g_{A} = \\{X,X\\}$, $g_{B} = \\{X,X\\}$.\n- Case $3$ (two loci; one rare allele):\n  - Locus $1$: allele frequencies $\\{A: 0.49, B: 0.5, R: 0.01\\}$; genotypes $g_{A} = \\{R,B\\}$, $g_{B} = \\{R,R\\}$.\n  - Locus $2$: allele frequencies $\\{M: 0.5, N: 0.5\\}$; genotypes $g_{A} = \\{M,M\\}$, $g_{B} = \\{N,N\\}$.\n\nImplementation and output requirements:\n- Implement the Elston–Stewart recursion exactly as specified above for each locus, and combine across loci by multiplication of locus-specific likelihood ratios.\n- Use no mutation and the stated HWE and segregation assumptions.\n- Your program should produce a single line of output containing the results as a comma-separated list of floats enclosed in square brackets, in the order of Cases $1$, $2$, $3$. Each float must be the combined likelihood ratio for that case, rounded to $6$ decimal places, with no additional text. For example: $[\\text{result}_{1},\\text{result}_{2},\\text{result}_{3}]$.", "solution": "The problem statement has been critically validated and is determined to be valid. It is scientifically grounded in established principles of population and statistical genetics, is well-posed with a clear objective and sufficient data, and is expressed in objective, formal language. There are no identifiable flaws, contradictions, or ambiguities.\n\nThe objective is to compute the combined likelihood ratio ($\\mathrm{LR}$) for an avuncular relationship across one or more genetic loci. The $\\mathrm{LR}$ compares the likelihood of the evidence (the observed genotypes of two individuals, $A$ and $B$) under two competing hypotheses:\n1.  $\\mathcal{H}_1$: Individuals $A$ and $B$ are an avuncular pair (e.g., aunt-niece).\n2.  $\\mathcal{H}_0$: Individuals $A$ and $B$ are unrelated.\n\nThe combined $\\mathrm{LR}$ over multiple loci is the product of the locus-specific likelihood ratios, a consequence of the assumed linkage equilibrium:\n$$\n\\mathrm{LR}_{\\text{combined}} = \\prod_{\\ell=1}^{L} \\mathrm{LR}_{\\text{locus},\\ell} = \\prod_{\\ell=1}^{L} \\frac{\\mathcal{L}_{1,\\ell}}{\\mathcal{L}_{0,\\ell}}\n$$\nwhere $\\mathcal{L}_{1,\\ell}$ and $\\mathcal{L}_{0,\\ell}$ are the likelihoods of the observed genotypes at locus $\\ell$ under $\\mathcal{H}_1$ and $\\mathcal{H}_0$, respectively.\n\nThe solution is designed by implementing a function to calculate this $\\mathrm{LR}$ for each locus and then combining them.\n\n**1. Calculation of the Denominator, $\\mathcal{L}_0$**\n\nUnder the hypothesis $\\mathcal{H}_0$ that individuals $A$ and $B$ are unrelated, their genotypes are independent. The likelihood $\\mathcal{L}_0$ is the product of their individual genotype probabilities, assuming they are drawn from a population in Hardy-Weinberg Equilibrium (HWE):\n$$\n\\mathcal{L}_0 = \\Pr(g_A) \\Pr(g_B)\n$$\nThe probability $\\Pr(g)$ of a genotype under HWE is determined by the allele frequencies $\\{p_a\\}$. For a homozygous genotype $\\{i,i\\}$, the probability is $p_i^2$. For a heterozygous genotype $\\{i,j\\}$ where $i \\neq j$, the probability is $2p_ip_j$. A helper function, `prob_hwe`, is implemented to compute these probabilities based on the provided allele frequencies for each locus.\n\n**2. Calculation of the Numerator, $\\mathcal{L}_1$**\n\nThe calculation of $\\mathcal{L}_1$ is more complex, as it involves the pedigree structure relating $A$ and $B$. The problem provides the formula based on the Elston–Stewart algorithm, which involves summing over all possible genotypes of the unobserved individuals in the pedigree ($G_1, G_2, P, O$):\n$$\n\\mathcal{L}_{1} = \\sum_{g_{G_{1}}, g_{G_{2}}, g_{O}} \\Big[ \\Pr(g_{G_{1}})\\, \\Pr(g_{G_{2}})\\, \\Pr(g_{O}) \\, \\Pr(g_{A} \\mid g_{G_{1}},g_{G_{2}}) \\, \\sum_{g_{P}} \\Pr(g_{P} \\mid g_{G_{1}},g_{G_{2}})\\, \\Pr(g_{B} \\mid g_{P}, g_{O}) \\Big]\n$$\n\nTo implement this computationally, the summation is rearranged to improve efficiency by factoring out terms from inner loops:\n$$\n\\mathcal{L}_{1} = \\sum_{g_{G_{1}}} \\Pr(g_{G_{1}}) \\sum_{g_{G_{2}}} \\Pr(g_{G_{2}}) \\Pr(g_{A} \\mid g_{G_{1}}, g_{G_{2}}) \\left( \\sum_{g_{P}} \\Pr(g_{P} \\mid g_{G_{1}}, g_{G_{2}}) \\left( \\sum_{g_{O}} \\Pr(g_{O}) \\Pr(g_{B} \\mid g_{P}, g_{O}) \\right) \\right)\n$$\nThis structure is implemented using a series of nested loops and helper functions, which we detail below.\n\n**a. The innermost term: Probability of $g_B$ given parent $g_P$ and a random mate**\n\nLet $J(g_P)$ be the innermost term:\n$$\nJ(g_P) = \\sum_{g_{O}} \\Pr(g_{O}) \\Pr(g_{B} \\mid g_{P}, g_{O})\n$$\nThis represents the probability of a child having genotype $g_B$ if one parent has genotype $g_P$ and the other parent, $O$, is drawn randomly from the population. This simplifies to a direct calculation involving allele frequencies and Mendelian transmission probabilities from parent $P$. Let $g_B = \\{b_1, b_2\\}$ and $f(\\cdot)$ be the allele frequency function. Then:\n- If $b_1 = b_2$: $J(g_P) = \\Pr(P \\to b_1) \\times f(b_1)$\n- If $b_1 \\neq b_2$: $J(g_P) = \\Pr(P \\to b_1) \\times f(b_2) + \\Pr(P \\to b_2) \\times f(b_1)$\nwhere $\\Pr(P \\to b)$ is the probability that parent $P$ transmits allele $b$. This probability is $1$ if $P$ is homozygous for $b$, $0.5$ if heterozygous containing $b$, and $0$ otherwise. These $J(g_P)$ values are pre-calculated for all possible genotypes $g_P$ to optimize the main loop.\n\n**b. Mendelian Transmission Probability: $\\Pr(\\text{child} \\mid \\text{parents})$**\n\nThe conditional probabilities, such as $\\Pr(g_A \\mid g_{G_1}, g_{G_2})$, are governed by Mendelian laws of segregation. A function `prob_transmission(child_gt, p1_gt, p2_gt)` is created for this. Given child genotype $\\{c_1, c_2\\}$ and parent genotypes, the probability is:\n- If $c_1 = c_2$: $\\Pr(p1 \\to c_1) \\times \\Pr(p2 \\to c_1)$\n- If $c_1 \\neq c_2$: $\\Pr(p1 \\to c_1) \\times \\Pr(p2 \\to c_2) + \\Pr(p1 \\to c_2) \\times \\Pr(p2 \\to c_1)$\nThese transmission probabilities are calculated on the fly and memoized (cached) to avoid redundant computations, which is crucial given they are called within deeply nested loops.\n\n**c. Assembling $\\mathcal{L}_1$**\n\nThe final computation of $\\mathcal{L}_1$ proceeds algorithmically by iterating over all possible genotypes for the unobserved grandparents, $G_1$ and $G_2$, and the parent $P$.\n1.  All possible genotypes at a locus are generated from its allele set. Unordered genotypes are represented by a canonical sorted tuple, e.g., $\\{10, 11\\}$ becomes `(10, 11)`, to serve as unique dictionary keys.\n2.  The main calculation consists of nested loops iterating through all possible genotypes for $g_{G_1}$ and $g_{G_2}$.\n3.  Inside these loops, the term $\\Pr(g_{G_1}) \\Pr(g_{G_2}) \\Pr(g_A \\mid g_{G_1}, g_{G_2})$ is computed.\n4.  A third, inner loop over all possible genotypes $g_P$ calculates the term $\\sum_{g_P} \\Pr(g_P \\mid g_{G_1}, g_{G_2}) J(g_P)$.\n5.  The product of these components is added to a running sum for $\\mathcal{L}_1$.\n\n**3. Program Structure**\n\nThe program is encapsulated within a `solve()` function. It defines the test cases as specified. For each case, it initializes a combined $\\mathrm{LR}$ to $1.0$ and iterates through the loci. For each locus, it calls a function `calculate_locus_lr` that implements the logic described above to find $\\mathcal{L}_1/\\mathcal{L}_0$. The resulting locus-specific $\\mathrm{LR}$ is multiplied into the running product. Finally, the list of combined $\\mathrm{LR}$ values for all test cases is formatted and printed to standard output as required.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom itertools import combinations_with_replacement\n\ndef normalize_genotype(g):\n    \"\"\"Represents an unordered genotype as a sorted tuple for consistent hashing.\"\"\"\n    return tuple(sorted(g))\n\ndef get_all_genotypes(alleles):\n    \"\"\"Generates all possible unordered genotypes from a list of alleles.\"\"\"\n    return [normalize_genotype(g) for g in combinations_with_replacement(alleles, 2)]\n\ndef prob_hwe(genotype, freqs):\n    \"\"\"Calculates the genotype probability under Hardy-Weinberg Equilibrium.\"\"\"\n    a1, a2 = genotype\n    if a1 == a2:\n        return freqs[a1] ** 2\n    else:\n        return 2 * freqs[a1] * freqs[a2]\n\ndef prob_gamete(parent_gt, allele):\n    \"\"\"Calculates the probability of a parent transmitting a specific allele.\"\"\"\n    p1, p2 = parent_gt\n    if p1 == p2:\n        return 1.0 if allele == p1 else 0.0\n    else:\n        return 0.5 if allele == p1 or allele == p2 else 0.0\n\ndef calculate_J(gp, gB, freqs):\n    \"\"\"\n    Calculates J(g_P) = Pr(child is gB | one parent is gP, other is random mate).\n    This corresponds to the innermost summation over founder O.\n    \"\"\"\n    b1, b2 = gB\n    f_b1 = freqs[b1]\n    f_b2 = freqs[b2]\n    \n    p_P_to_b1 = prob_gamete(gp, b1)\n    p_P_to_b2 = prob_gamete(gp, b2)\n    \n    if b1 == b2:\n        return p_P_to_b1 * f_b1\n    else:\n        return p_P_to_b1 * f_b2 + p_P_to_b2 * f_b1\n\ndef prob_transmission(child_gt, p1_gt, p2_gt, memo):\n    \"\"\"\n    Calculates Pr(child | parent1, parent2) using Mendelian laws.\n    Uses memoization to cache results.\n    \"\"\"\n    # Normalize parent order to reduce cache size\n    key = (child_gt, tuple(sorted((p1_gt, p2_gt))))\n    if key in memo:\n        return memo[key]\n    \n    c1, c2 = child_gt\n    \n    # Probability of transmitting alleles from each parent\n    p1_c1 = prob_gamete(p1_gt, c1)\n    p1_c2 = prob_gamete(p1_gt, c2)\n    p2_c1 = prob_gamete(p2_gt, c1)\n    p2_c2 = prob_gamete(p2_gt, c2)\n    \n    # Combine probabilities for child genotype\n    if c1 == c2:\n        prob = p1_c1 * p2_c1\n    else:\n        prob = p1_c1 * p1_c2 + p1_c2 * p2_c1\n        \n    memo[key] = prob\n    return prob\n\ndef calculate_locus_lr(locus_data):\n    \"\"\"\n    Calculates the likelihood ratio for a single locus.\n    Implements the Elston-Stewart recursion for the avuncular pedigree.\n    \"\"\"\n    freq_map, gA_raw, gB_raw = locus_data\n    \n    gA = normalize_genotype(gA_raw)\n    gB = normalize_genotype(gB_raw)\n    alleles = list(freq_map.keys())\n    all_gts = get_all_genotypes(alleles)\n    \n    # Calculate L0: Likelihood under H0 (unrelated)\n    pr_gA_hwe = prob_hwe(gA, freq_map)\n    pr_gB_hwe = prob_hwe(gB, freq_map)\n    L0 = pr_gA_hwe * pr_gB_hwe\n    \n    if L0 == 0:\n        # If L0 is 0 and L1 is non-zero, LR is infinite. If L1 is also 0, it's undefined.\n        # This problem's data ensures L0 > 0.\n        # Fallback to a large number or handle as appropriate if this case arises.\n        return float('inf')\n\n    # --- Calculate L1: Likelihood under H1 (avuncular) ---\n    \n    # Pre-calculate J(g_P) values for all possible genotypes of parent P\n    J_values = {gp: calculate_J(gp, gB, freq_map) for gp in all_gts}\n    \n    # Pre-calculate HWE probabilities for all founder genotypes\n    hwe_probs = {gt: prob_hwe(gt, freq_map) for gt in all_gts}\n    \n    # Memoization cache for transmission probabilities\n    transmission_memo = {}\n    \n    L1 = 0.0\n    for gG1 in all_gts:\n        pr_gG1 = hwe_probs[gG1]\n        if pr_gG1 == 0: continue\n            \n        for gG2 in all_gts:\n            pr_gG2 = hwe_probs[gG2]\n            if pr_gG2 == 0: continue\n\n            # Probability of observed genotype A given grandparents G1, G2\n            pr_gA_given_parents = prob_transmission(gA, gG1, gG2, transmission_memo)\n            \n            if pr_gA_given_parents == 0:\n                continue\n            \n            # Calculate the inner summation over parent P\n            # I(gG1, gG2) = sum_gP Pr(gP | gG1, gG2) * J(gP)\n            I_val = 0.0\n            for gP in all_gts:\n                pr_gP_given_parents = prob_transmission(gP, gG1, gG2, transmission_memo)\n                \n                if pr_gP_given_parents == 0:\n                    continue\n                \n                I_val += pr_gP_given_parents * J_values[gP]\n\n            term = pr_gG1 * pr_gG2 * pr_gA_given_parents * I_val\n            L1 += term\n            \n    return L1 / L0\n\ndef solve():\n    \"\"\"\n    Main function to orchestrate the calculation for all test cases.\n    \"\"\"\n    test_cases = [\n        # Case 1\n        [\n            ({10: 0.2, 11: 0.3, 12: 0.5}, (10, 11), (11, 12)),\n            ({8: 0.6, 9: 0.4}, (8, 8), (8, 9))\n        ],\n        # Case 2\n        [\n            ({'X': 0.7, 'Y': 0.2, 'Z': 0.1}, ('X', 'X'), ('X', 'X'))\n        ],\n        # Case 3\n        [\n            ({'A': 0.49, 'B': 0.5, 'R': 0.01}, ('R', 'B'), ('R', 'R')),\n            ({'M': 0.5, 'N': 0.5}, ('M', 'M'), ('N', 'N'))\n        ]\n    ]\n\n    results = []\n    for case in test_cases:\n        combined_lr = 1.0\n        for locus_data in case:\n            locus_lr = calculate_locus_lr(locus_data)\n            combined_lr *= locus_lr\n        results.append(combined_lr)\n\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "2810916"}]}