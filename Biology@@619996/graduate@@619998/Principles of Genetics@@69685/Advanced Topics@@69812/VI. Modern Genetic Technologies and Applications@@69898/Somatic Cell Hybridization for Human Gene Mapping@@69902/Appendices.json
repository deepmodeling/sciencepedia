{"hands_on_practices": [{"introduction": "Before embarking on the labor-intensive process of creating a somatic cell hybrid panel, it is crucial to ensure the experimental design is powerful enough to succeed. This practice introduces a fundamental aspect of experimental planning: determining the necessary panel size to achieve a desired 'coverage.' By modeling the stochastic retention of a human chromosome as a series of independent Bernoulli trials, you will derive the mathematical relationship between panel size $N$, retention probability $p$, and the likelihood of capturing the chromosome of interest in at least one hybrid clone [@problem_id:2851993].", "id": "2851993", "problem": "In somatic cell hybridization for human gene mapping, a panel of independently derived somatic cell hybrids is generated by fusing human cells with rodent cells to obtain clones that retain subsets of human chromosomes. For a particular human chromosome that harbors a gene of interest, suppose that each independently derived hybrid retains this chromosome with probability $p$ and fails to retain it with probability $1-p$. Assume that the retention events across hybrids are independent and identically distributed Bernoulli trials and that $0<p<1$.\n\nDefine the panel size as $N$, and define the coverage for the chromosome of interest as the probability that at least one hybrid in the panel retains that chromosome.\n\nStarting only from the independence of hybrids and the Bernoulli model for chromosome retention, derive:\n\n1. A general expression for the coverage as a function of $N$ and $p$.\n2. A general expression for the minimal integer panel size required to achieve a coverage of $0.95$.\n\nProvide your final answer as two closed-form expressions, in terms of $N$ and $p$, with the minimal size written using an appropriate mathematical function that enforces integrality. No numerical substitution is required, and no rounding by significant figures is needed because a symbolic answer is expected. Express $0.95$ as the decimal $0.95$ rather than as a percentage. Provide your final answer as a pair in a single row. Do not include any units in the final answer.", "solution": "The problem will first be subjected to a rigorous validation procedure before any attempt at a solution is made.\n\n### Step 1: Extract Givens\nThe problem statement provides the following information:\n- A panel of somatic cell hybrids is generated.\n- Panel size is denoted by the integer $N$.\n- For a specific human chromosome, each hybrid retains it with probability $p$.\n- Each hybrid fails to retain it with probability $1-p$.\n- The retention events across hybrids are independent and identically distributed Bernoulli trials.\n- The parameter $p$ is constrained by $0<p<1$.\n- Coverage is defined as the probability that at least one hybrid in the panel retains the chromosome.\n- A required coverage level is specified as $0.95$.\n\nThe task is to derive two expressions:\n1.  The coverage as a function of $N$ and $p$.\n2.  The minimal integer panel size $N$ required to achieve a coverage of at least $0.95$.\n\n### Step 2: Validate Using Extracted Givens\nThe problem is assessed against the criteria for validity.\n\n- **Scientific Grounding**: The problem is grounded in the established principles of genetics, specifically somatic cell hybridization for gene mapping. The use of a Bernoulli trial model to represent the stochastic retention of chromosomes is a standard and scientifically sound simplification for such a process. The setup is realistic and free of pseudoscience.\n- **Well-Posedness**: The problem is well-posed. All variables ($N$, $p$) and concepts (coverage, independence) are clearly defined. The objectives are unambiguous: derive two specific mathematical expressions. The constraints provided ($0<p<1$, $N$ is an integer) are sufficient to ensure a unique and meaningful solution.\n- **Objectivity**: The language is precise, quantitative, and objective. It is devoid of subjective claims or ambiguity.\n\nBased on this analysis, the problem exhibits no flaws. It is not scientifically unsound, non-formalizable, incomplete, unrealistic, or ill-posed. It is a standard problem in applied probability.\n\n### Step 3: Verdict and Action\nThe problem is deemed **valid**. A solution will be derived.\n\n### Derivation\nLet $N$ be the panel size, which is a positive integer. Let $p$ be the probability that a single hybrid clone retains the chromosome of interest, where $0 < p < 1$. The probability that a single clone fails to retain the chromosome is thus $1-p$. The retention events for each of the $N$ clones are stipulated to be independent and identically distributed.\n\nLet $C$ denote the event that coverage is achieved. By definition, this is the event that at least one hybrid in the panel of size $N$ retains the chromosome. It is computationally more direct to first calculate the probability of the complementary event, $C^c$, which is the event that *no* hybrid in the panel retains the chromosome. This means that all $N$ hybrids independently fail to retain the chromosome.\n\nLet $E_i$ be the event that the $i$-th hybrid fails to retain the chromosome, for $i \\in \\{1, 2, \\dots, N\\}$. The probability of this event is $P(E_i) = 1-p$. The event $C^c$ is the intersection of all such events for all hybrids in the panel:\n$$C^c = E_1 \\cap E_2 \\cap \\dots \\cap E_N$$\nBecause the events $E_i$ are independent, the probability of their intersection is the product of their individual probabilities:\n$$P(C^c) = P(E_1) \\times P(E_2) \\times \\dots \\times P(E_N)$$\nSince the trials are identically distributed, $P(E_i) = 1-p$ for all $i$. Therefore:\n$$P(C^c) = \\prod_{i=1}^{N} (1-p) = (1-p)^N$$\nThe probability of coverage, $P(C)$, is given by the law of total probability for complementary events:\n$$P(C) = 1 - P(C^c)$$\nSubstituting the expression for $P(C^c)$ yields the general expression for coverage as a function of $N$ and $p$:\n$$\\text{Coverage}(N, p) = 1 - (1-p)^N$$\nThis completes the first part of the task.\n\nFor the second part, we must find the minimal integer panel size, which we will denote $N_{\\min}$, required to achieve a coverage of at least $0.95$. This requirement can be expressed as an inequality:\n$$\\text{Coverage}(N_{\\min}, p) \\ge 0.95$$\nSubstituting the derived expression for coverage:\n$$1 - (1-p)^{N_{\\min}} \\ge 0.95$$\nWe must now solve this inequality for $N_{\\min}$.\n$$1 - 0.95 \\ge (1-p)^{N_{\\min}}$$\n$$0.05 \\ge (1-p)^{N_{\\min}}$$\nTo isolate the exponent $N_{\\min}$, we take the natural logarithm of both sides. It is critical to consider the base of the power, which is $1-p$. Since $0 < p < 1$, it follows that $0 < 1-p < 1$. The natural logarithm of a number in this interval is negative, i.e., $\\ln(1-p) < 0$. When we apply the logarithm to the inequality:\n$$\\ln(0.05) \\ge \\ln\\left((1-p)^{N_{\\min}}\\right)$$\n$$\\ln(0.05) \\ge N_{\\min} \\ln(1-p)$$\nTo solve for $N_{\\min}$, we must divide by $\\ln(1-p)$. As this is a negative quantity, division will reverse the direction of the inequality:\n$$\\frac{\\ln(0.05)}{\\ln(1-p)} \\le N_{\\min}$$\nThis inequality states that $N_{\\min}$ must be an integer greater than or equal to the value $\\frac{\\ln(0.05)}{\\ln(1-p)}$. The minimal integer that satisfies this condition is, by definition, the ceiling of this value.\nTherefore, the minimal integer panel size is:\n$$N_{\\min} = \\left\\lceil \\frac{\\ln(0.05)}{\\ln(1-p)} \\right\\rceil$$\nThis expression provides the general solution for the minimal panel size required.\n\nThe two required expressions have been derived from the stated first principles.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n1 - (1-p)^{N} & \\left\\lceil \\frac{\\ln(0.05)}{\\ln(1-p)} \\right\\rceil\n\\end{pmatrix}\n}\n$$"}, {"introduction": "A powerful technique in molecular biology is to use selection to isolate cells with a desired phenotype, but this power can introduce profound experimental bias if not managed carefully. This thought experiment explores the critical issue of ascertainment bias that arises when the tool used for mapping (survival) is the same as the selective pressure being applied. You will use conditional probability to quantify how selection skews chromosome retention frequencies and learn the importance of decoupling mapping from functional validation to avoid circular reasoning [@problem_id:2851982].", "id": "2851982", "problem": "A laboratory uses somatic cell hybridization between mouse cells and human fibroblasts to map a human gene whose product confers the ability to grow on a defined medium. Foundational facts and definitions for this context are as follows: In somatic cell hybrids, human chromosomes are stochastically lost over passages in culture; in the absence of any selective pressure tied to a specific human gene, each human chromosome is retained with some prior probability $r$ that depends on its size and compatibility with the mouse background. Under the Central Dogma of Molecular Biology, a human gene retained in the hybrid can be transcribed to human messenger ribonucleic acid (mRNA) and translated to its human protein, potentially conferring a selectable phenotype. Under selection, cells that express the human gene product survive at a higher rate than cells that do not, creating differential survival and thereby conditioning the observed chromosome retention among survivors.\n\nA panel of $N$ independent mouse–human hybrids is generated and passaged for $T$ doublings. In a preliminary, nonselective pilot study, the retention probability for each individual human chromosome is approximately $r = 0.20$. The research team seeks to map a human gene $G$ whose product is necessary for growth on a defined medium. They now perform selection directly on newly generated hybrids using that medium. Let the probability that an individual clone survives the selection be $s$ if $G$ is expressed (i.e., if the human chromosome carrying $G$ is retained and $G$ is transcriptionally active) and $\\epsilon$ if $G$ is not expressed (reflecting leaky background survival). Assume that $G$ is on a single human chromosome, that gene expression requires retention of that chromosome, and that prior to selection the event “retains the $G$ chromosome” occurs with probability $r$ independently of other chromosomes. For this experiment, the team estimates $s \\approx 0.90$ and $\\epsilon \\approx 0.05$.\n\nThey plan to karyotype only the surviving clones and infer the chromosomal location of $G$ by correlating human chromosome presence/absence with survival and with an enzymatic assay of the human gene product in those survivors.\n\nWhich option most accurately explains how direct selection on $G$ expression biases the observed retention toward the chromosome harboring $G$, quantitatively justifies the direction and approximate magnitude of that bias under the stated parameters, and proposes a scientifically sound strategy to decouple the selection step from the mapping inference so that retention-based mapping is not circularly biased?\n\nA. Conditioning on survival inflates the posterior retention of the chromosome carrying $G$ from the prior $r$ to a much higher value among survivors because survival is more likely when that chromosome is present. With $r = 0.20$, $s = 0.90$, and $\\epsilon = 0.05$, the expected posterior retention of the $G$ chromosome among survivors is approximately $0.82$, so using only selected clones to correlate survival or enzyme activity with chromosome retention is circularly biased toward the true chromosome. To decouple selection and mapping, first construct and freeze a reference hybrid panel under nonselective conditions, measure each clone’s human chromosome content and the human gene product by a neutral screen that does not affect survival (for example, an immunoassay or enzyme activity assay performed on lysates), and perform the mapping on that neutral panel; use selection only after mapping to validate causality.\n\nB. Because human chromosomes are lost before selection, selection does not change retention frequencies; the posterior retention of the $G$ chromosome among survivors remains $r = 0.20$, so correlating survival with chromosome retention in the selected panel is unbiased. No special decoupling is necessary.\n\nC. The bias from selection can be eliminated by lowering stringency until $s$ and $\\epsilon$ are close; with $s = 0.90$ and $\\epsilon = 0.05$, the expected posterior retention of the $G$ chromosome among survivors is approximately $0.50$. Averaging chromosome retention across many selected clones will remove any remaining bias without needing a separate, nonselective panel.\n\nD. To avoid bias, co-select for a human selectable marker such as hypoxanthine–guanine phosphoribosyltransferase (HPRT) on the donor genome; since HPRT resides on a different human chromosome than most genes of interest, selecting for HPRT guarantees that survival is independent of the unknown $G$ chromosome and therefore that retention-based mapping in the selected panel is unbiased.", "solution": "The problem presented is a valid exercise in quantitative genetics and experimental design. We will approach its resolution by first formalizing the scenario using the principles of conditional probability and then evaluating each proposed option against this formal analysis.\n\nLet $C_{G}$ be the event that a hybrid cell retains the human chromosome carrying gene $G$. Let $C_{G}'$ be the complementary event that the cell does not retain this chromosome. Let $S$ be the event that the clone survives the selection process. The problem provides the following probabilities:\n\n-   The prior probability of retaining the $G$-chromosome before selection: $P(C_{G}) = r = 0.20$.\n-   The prior probability of not retaining the $G$-chromosome: $P(C_{G}') = 1 - r = 1 - 0.20 = 0.80$.\n-   The conditional probability of survival given the presence of the $G$-chromosome (and its expression): $P(S | C_{G}) = s = 0.90$.\n-   The conditional probability of survival given the absence of the $G$-chromosome: $P(S | C_{G}') = \\epsilon = 0.05$.\n\nThe central task is to calculate the posterior probability of retaining the $G$-chromosome *given that the clone has survived* selection. This quantity, $P(C_{G} | S)$, represents the expected frequency of the $G$-chromosome among the surviving clones that the researchers intend to karyotype. We employ Bayes' theorem for this calculation:\n$$P(C_{G} | S) = \\frac{P(S | C_{G}) P(C_{G})}{P(S)}$$\nTo use this formula, we must first compute the total probability of survival, $P(S)$, using the law of total probability, which marginalizes over the state of the $G$-chromosome:\n$$P(S) = P(S | C_{G}) P(C_{G}) + P(S | C_{G}') P(C_{G}')$$\nSubstituting the given numerical values:\n$$P(S) = (s)(r) + (\\epsilon)(1 - r)$$\n$$P(S) = (0.90)(0.20) + (0.05)(0.80)$$\n$$P(S) = 0.18 + 0.04 = 0.22$$\nNow, we can compute the posterior probability $P(C_{G} | S)$:\n$$P(C_{G} | S) = \\frac{(0.90)(0.20)}{0.22} = \\frac{0.18}{0.22} = \\frac{18}{22} = \\frac{9}{11} \\approx 0.8182$$\nThis result demonstrates a profound bias. The selection procedure inflates the frequency of the chromosome carrying gene $G$ from a prior probability of $r = 0.20$ in the initial population to a posterior probability of approximately $0.82$ in the surviving population. If researchers then analyze only these survivors to find a correlation between chromosome presence and the survival phenotype, they will inevitably find a very strong correlation for the correct chromosome. This is not a discovery but a self-fulfilling prophecy; the experimental design suffers from circular reasoning, also known as ascertainment bias.\n\nA scientifically sound methodology must decouple the mapping step from the selection step. The mapping should be performed on a panel of hybrid clones grown under non-selective conditions, where the retention of all chromosomes is governed by the same stochastic process. For each clone in this non-selected panel, one must perform two independent analyses: first, karyotyping to determine the complement of human chromosomes, and second, a neutral assay (such as an immunoassay or an enzyme activity measurement on cell lysates) to determine the presence or absence of the gene $G$ product. The gene is then mapped by correlating the results of the neutral assay with the karyotype data across the panel. The selective medium can subsequently be used on characterized clones to validate the functional link between the identified chromosome and survival.\n\nWith this rigorous foundation, we evaluate the provided options.\n\n**A. Conditioning on survival inflates the posterior retention of the chromosome carrying $G$ from the prior $r$ to a much higher value among survivors because survival is more likely when that chromosome is present. With $r = 0.20$, $s = 0.90$, and $\\epsilon = 0.05$, the expected posterior retention of the $G$ chromosome among survivors is approximately $0.82$, so using only selected clones to correlate survival or enzyme activity with chromosome retention is circularly biased toward the true chromosome. To decouple selection and mapping, first construct and freeze a reference hybrid panel under nonselective conditions, measure each clone’s human chromosome content and the human gene product by a neutral screen that does not affect survival (for example, an immunoassay or enzyme activity assay performed on lysates), and perform the mapping on that neutral panel; use selection only after mapping to validate causality.**\nThis option is entirely correct. It accurately describes the source of bias, correctly quantifies its magnitude ($P(C_{G} | S) \\approx 0.82$, which matches our calculation of $9/11$), and correctly identifies the circularity of the proposed experiment. Furthermore, the proposed solution of using a non-selected panel and a neutral assay is the standard, scientifically valid method for decoupling mapping from selection and avoiding this bias.\nVerdict: **Correct**.\n\n**B. Because human chromosomes are lost before selection, selection does not change retention frequencies; the posterior retention of the $G$ chromosome among survivors remains $r = 0.20$, so correlating survival with chromosome retention in the selected panel is unbiased. No special decoupling is necessary.**\nThis statement is fundamentally flawed. While chromosome loss occurs before selection, selection itself is a process that acts upon the resulting population, differentially removing individuals. It is a classic example of how a conditioning event (survival) changes probabilities. Our calculation explicitly shows that the posterior probability changes from $0.20$ to approximately $0.82$. The premise is false, and therefore the conclusion that the method is unbiased is also false.\nVerdict: **Incorrect**.\n\n**C. The bias from selection can be eliminated by lowering stringency until $s$ and $\\epsilon$ are close; with $s = 0.90$ and $\\epsilon = 0.05$, the expected posterior retention of the $G$ chromosome among survivors is approximately $0.50$. Averaging chromosome retention across many selected clones will remove any remaining bias without needing a separate, nonselective panel.**\nThis option contains multiple errors. First, the quantitative claim that the posterior retention is approximately $0.50$ is incorrect; our calculation shows it is approximately $0.82$. Second, while lowering selection stringency (making $s$ and $\\epsilon$ closer) reduces bias, it does not \"eliminate\" it unless $s = \\epsilon$, at which point there is no selection. Third, the assertion that averaging removes bias is nonsensical. Averaging a large sample of a biased population provides a precise estimate of the biased parameter, it does not recover the unbiased one.\nVerdict: **Incorrect**.\n\n**D. To avoid bias, co-select for a human selectable marker such as hypoxanthine–guanine phosphoribosyltransferase (HPRT) on the donor genome; since HPRT resides on a different human chromosome than most genes of interest, selecting for HPRT guarantees that survival is independent of the unknown $G$ chromosome and therefore that retention-based mapping in the selected panel is unbiased.**\nThis option describes the HAT selection system, which is a method to ensure that hybrid cells retain at least one human chromosome (the one carrying HPRT). However, it does not solve the problem of bias for gene $G$. The mapping of $G$ is based on selection on a defined medium that specifically requires the $G$ product. Adding a second, unrelated selection for HPRT does not make survival independent of the $G$ chromosome. If the cells are subjected to selection for $G$, the bias remains. If they are *not* subjected to selection for $G$, then one must still use a neutral assay to screen for the $G$ product, which returns to the strategy described in option A. This proposal fails to address the core problem of circularity.\nVerdict: **Incorrect**.", "answer": "$$\\boxed{A}$$"}, {"introduction": "After collecting presence-absence data for a gene and all human chromosomes across a hybrid panel, the final challenge is to make a statistically robust assignment. Simply picking the chromosome with the highest number of concordant clones is insufficient and prone to false positives. This comprehensive exercise guides you through implementing a rigorous bioinformatic pipeline that tests each chromosome's association with the gene using Fisher's exact test and, crucially, controls the false discovery rate across all 24 tests using the Benjamini-Hochberg procedure [@problem_id:2851942].", "id": "2851942", "problem": "You are given binary presence/absence data from a somatic cell hybrid panel. For each human chromosome, there is a binary vector indicating whether that chromosome is present in each hybrid cell line. For a gene of interest, there is a binary vector indicating whether the human gene product is detected in each hybrid cell line. The fundamental starting point is the observation that, in somatic cell hybrid mapping, a human gene’s detectable product co-segregates with the presence of the human chromosome that carries that gene. Under the null hypothesis of no mapping relationship, the chromosome presence vector and the gene detection vector are independent across hybrid lines.\n\nFormulate a mathematically well-defined procedure that, for a given gene vector and a fixed set of chromosome vectors, selects the most likely chromosome assignment while controlling the False Discovery Rate (FDR; False Discovery Rate) at a user-specified level. The procedure must satisfy all of the following constraints:\n- For each chromosome $i \\in \\{1,\\dots,m\\}$ with $m = 24$, construct the $2 \\times 2$ contingency table defined by the counts\n  - $a_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 1 \\land c_{i,j} = 1\\}$,\n  - $b_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 1 \\land c_{i,j} = 0\\}$,\n  - $c_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 0 \\land c_{i,j} = 1\\}$,\n  - $d_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 0 \\land c_{i,j} = 0\\}$,\n  where $g \\in \\{0,1\\}^n$ is the gene vector, $c_i \\in \\{0,1\\}^n$ is the chromosome $i$ vector, and $n$ is the number of hybrid lines.\n- For each chromosome $i$, compute a valid one-sided exact $p$-value for testing the null hypothesis of independence against the alternative of positive association (enrichment of co-presence), using the $2 \\times 2$ table with fixed margins.\n- Adjust the set of $m$ $p$-values using the Benjamini–Hochberg step-up procedure to obtain FDR-adjusted $q$-values that control the expected false discovery proportion at level $\\alpha$.\n- Select the chromosome assignment for the gene as the index $k \\in \\{1,\\dots,m\\}$ with the smallest adjusted $q$-value; if that smallest $q$-value exceeds $\\alpha$, return $k = 0$ (no assignment). In the event of a tie for the smallest $q$-value at or below $\\alpha$, choose the smallest chromosome index among the tied minima. If the gene vector has no variation (all entries equal), return $k = 0$ and $q = 1$.\n\nImplement this procedure as a deterministic program that operates on the following fixed test suite. There are $n = 12$ hybrid lines and $m = 24$ human chromosomes with the chromosome-by-line presence matrix $C \\in \\{0,1\\}^{24 \\times 12}$ defined row-wise as:\n- Chromosome $1$: $[\\,1,0,0,1,0,1,0,1,0,0,1,0\\,]$\n- Chromosome $2$: $[\\,0,1,1,0,1,0,1,0,1,0,0,1\\,]$\n- Chromosome $3$: $[\\,1,1,0,0,1,1,0,0,1,0,0,1\\,]$\n- Chromosome $4$: $[\\,0,0,1,1,0,0,1,1,0,1,0,0\\,]$\n- Chromosome $5$: $[\\,1,0,1,1,0,0,1,0,1,0,0,0\\,]$\n- Chromosome $6$: $[\\,0,1,0,0,1,1,0,1,0,1,0,0\\,]$\n- Chromosome $7$: $[\\,1,0,1,0,1,0,1,0,1,0,1,0\\,]$\n- Chromosome $8$: $[\\,0,1,0,1,0,1,0,1,0,1,0,1\\,]$\n- Chromosome $9$: $[\\,1,1,1,0,0,0,1,1,0,0,0,1\\,]$\n- Chromosome $10$: $[\\,0,0,0,1,1,1,0,0,1,1,1,0\\,]$\n- Chromosome $11$: $[\\,1,0,0,0,1,0,0,1,0,0,1,1\\,]$\n- Chromosome $12$: $[\\,1,1,1,0,1,0,1,0,1,0,1,0\\,]$\n- Chromosome $13$: $[\\,0,1,1,1,0,1,0,1,0,1,0,0\\,]$\n- Chromosome $14$: $[\\,1,0,1,0,0,1,1,0,0,1,0,1\\,]$\n- Chromosome $15$: $[\\,0,1,0,1,1,0,0,1,1,0,1,0\\,]$\n- Chromosome $16$: $[\\,1,1,0,1,0,1,0,0,0,1,0,1\\,]$\n- Chromosome $17$: $[\\,0,0,1,0,1,0,1,1,0,0,1,0\\,]$\n- Chromosome $18$: $[\\,1,0,0,1,0,1,0,0,1,0,1,0\\,]$\n- Chromosome $19$: $[\\,0,1,1,0,1,0,0,1,0,1,0,1\\,]$\n- Chromosome $20$: $[\\,1,1,0,1,0,0,1,0,1,0,1,0\\,]$\n- Chromosome $21$: $[\\,0,0,1,1,0,1,0,1,0,1,0,1\\,]$\n- Chromosome $22$: $[\\,1,0,0,0,1,1,1,0,0,1,0,0\\,]$\n- Chromosome $23$: $[\\,0,1,0,0,0,1,1,0,1,0,1,0\\,]$\n- Chromosome $24$: $[\\,1,0,1,0,0,0,1,0,0,0,1,1\\,]$\n\nEvaluate your procedure on the following four gene vectors (each of length $n = 12$), with FDR level $\\alpha = 0.05$:\n- Gene case $1$: $[\\,1,0,1,0,1,0,1,0,1,0,1,0\\,]$\n- Gene case $2$: $[\\,1,1,1,0,1,0,1,0,1,0,1,0\\,]$\n- Gene case $3$: $[\\,0,1,0,1,0,1,0,1,0,1,0,1\\,]$\n- Gene case $4$: $[\\,0,0,0,0,0,0,0,0,0,0,0,0\\,]$\n\nYour program must produce a single line of output containing the results as a comma-separated list enclosed in square brackets. Each gene case must yield a two-element list $[k, q]$, where $k$ is the selected chromosome index in $\\{0,1,\\dots,24\\}$ and $q$ is the smallest adjusted $q$-value for that gene. Report $q$ rounded to exactly $4$ decimal places using standard rounding. The output must therefore be a single line of the form\n$[[k_1,q_1],[k_2,q_2],[k_3,q_3],[k_4,q_4]]$.\n\nNo external input is provided; all data are embedded as above, and there are no physical units. Angles are not involved. All probabilities must be treated as decimals, not percentages.", "solution": "The problem asks for the implementation of a deterministic procedure to map a gene to a human chromosome based on co-segregation data from a somatic cell hybrid panel. The procedure must be grounded in statistical principles, specifically using contingency table analysis, Fisher's exact test for significance, and the Benjamini-Hochberg method for controlling the False Discovery Rate (FDR) in a multiple hypothesis testing context. The problem is scientifically valid, well-posed, and contains all necessary information to construct a solution.\n\nThe core principle of somatic cell hybrid mapping is that a gene and the chromosome on which it resides should be present or absent together in a panel of hybrid cell lines. Due to experimental realities, such as chromosome breakage or measurement error, this concordance is rarely perfect. Statistical methods are therefore required to identify the most likely chromosome assignment.\n\nThe procedure will be implemented step-by-step for each of the four given gene vectors. Let $g \\in \\{0,1\\}^n$ be the gene detection vector across $n=12$ cell lines, and let $C$ be the $m \\times n$ matrix where $C_{i,j}$ is $1$ if chromosome $i$ is present in line $j$ and $0$ otherwise, for $m=24$ chromosomes. The FDR control level is $\\alpha = 0.05$.\n\nFirst, a special case is handled: if a gene vector $g$ shows no variation (all entries are $0$ or all are $1$), no meaningful association analysis can be performed. As per the problem statement, for such a gene, the assigned chromosome index is $k=0$ with an associated $q$-value of $q=1.0$.\n\nFor a gene vector with variation, the following steps are performed:\n\n1.  **Contingency Table Construction**: For each of the $m=24$ chromosomes, we test the hypothesis of association with the gene. For each chromosome $i$, we construct a $2 \\times 2$ contingency table summarizing the co-occurrence counts with the gene vector $g$ across the $n=12$ cell lines:\n    $$\n    \\begin{array}{|c|cc|c|}\n    \\hline\n     & \\text{Chr } i \\text{ Present} & \\text{Chr } i \\text{ Absent} & \\text{Total} \\\\\n    \\hline\n    \\text{Gene Present} & a_i & b_i & a_i+b_i \\\\\n    \\text{Gene Absent} & c_i & d_i & c_i+d_i \\\\\n    \\hline\n    \\text{Total} & a_i+c_i & b_i+d_i & n \\\\\n    \\hline\n    \\end{array}\n    $$\n    The counts are defined as: $a_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 1 \\land c_{i,j} = 1\\}$, $b_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 1 \\land c_{i,j} = 0\\}$, $c_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 0 \\land c_{i,j} = 1\\}$, and $d_i = \\sum_{j=1}^{n} \\mathbf{1}\\{g_j = 0 \\land c_{i,j} = 0\\}$.\n\n2.  **P-value Calculation**: The null hypothesis is that the presence of the gene and the presence of chromosome $i$ are independent. We test this against the alternative of positive association, meaning the gene and chromosome tend to be present together more often than expected by chance. This corresponds to an enrichment of the count $a_i$. For small sample sizes like $n=12$, Fisher's exact test is the appropriate method. It calculates the probability of observing a table at least as extreme as the one observed, given fixed row and column marginal sums. The probability of a specific table configuration $(a,b,c,d)$ is given by the hypergeometric distribution:\n    $$ P(a,b,c,d) = \\frac{(a+b)!(c+d)!(a+c)!(b+d)!}{n! a! b! c! d!} $$\n    The one-sided $p$-value for positive association is the sum of probabilities of all tables with the same margins having a top-left cell count greater than or equal to the observed $a_i$. This will be computed for each chromosome, yielding a set of $m=24$ p-values, $\\{p_1, p_2, \\dots, p_{24}\\}$.\n\n3.  **False Discovery Rate Control**: Performing $24$ statistical tests requires a correction for multiple comparisons. The Benjamini-Hochberg (BH) procedure is used to control the FDR. The procedure converts the raw $p$-values into FDR-adjusted $q$-values. The algorithm is as follows:\n    a.  Sort the $m$ p-values in ascending order: $p_{(1)} \\le p_{(2)} \\le \\dots \\le p_{(m)}$. Let the original chromosome indices corresponding to these sorted p-values be $idx_{(1)}, idx_{(2)}, \\dots, idx_{(m)}$.\n    b.  Calculate an intermediate q-value for each sorted p-value: $q_{(i)} = \\frac{p_{(i)} \\cdot m}{i}$.\n    c.  To ensure that the q-values are monotonically non-decreasing with the p-values, enforce a step-up adjustment. Let $q'_{(m)} = \\min(1, q_{(m)})$. For $i = m-1, m-2, \\dots, 1$, calculate $q'_{(i)} = \\min(1, q_{(i)}, q'_{(i+1)})$. This ensures that if a test with p-value $p_{(i)}$ is deemed significant, all tests with smaller p-values are also significant.\n    d.  The final adjusted q-value for each original chromosome $j$ is the $q'_{(i)}$ where $idx_{(i)} = j$.\n\n4.  **Chromosome Assignment**: The final assignment rule is applied to the set of adjusted $q$-values:\n    a.  Find the minimum adjusted q-value, $q_{min} = \\min_{i} \\{q_i\\}$.\n    b.  If $q_{min} > \\alpha = 0.05$, no chromosome is significantly associated with the gene. The result is chromosome index $k=0$ and the value $q_{min}$.\n    c.  If $q_{min} \\le \\alpha$, a significant association is found. The assigned chromosome is the one corresponding to this minimum $q$-value. If there is a tie (multiple chromosomes share the same minimum $q$-value), the one with the smallest chromosome index is chosen. The result is the selected chromosome index $k \\in \\{1, \\dots, 24\\}$ and the value $q_{min}$.\n    d.  The final reported $q$-value is rounded to four decimal places.\n\nThis entire procedure is encapsulated in a program that processes the given chromosome matrix and the four gene vectors, producing the specified output format.", "answer": "```python\nimport numpy as np\nfrom scipy.stats import fisher_exact\n\ndef solve():\n    \"\"\"\n    Solves the somatic cell hybrid mapping problem by implementing the specified statistical procedure.\n    \"\"\"\n    # Define the fixed test suite data.\n    # Chromosome-by-line presence-absence matrix C (24 chromosomes, 12 lines)\n    C_matrix = np.array([\n        [1,0,0,1,0,1,0,1,0,0,1,0], # Chr 1\n        [0,1,1,0,1,0,1,0,1,0,0,1], # Chr 2\n        [1,1,0,0,1,1,0,0,1,0,0,1], # Chr 3\n        [0,0,1,1,0,0,1,1,0,1,0,0], # Chr 4\n        [1,0,1,1,0,0,1,0,1,0,0,0], # Chr 5\n        [0,1,0,0,1,1,0,1,0,1,0,0], # Chr 6\n        [1,0,1,0,1,0,1,0,1,0,1,0], # Chr 7\n        [0,1,0,1,0,1,0,1,0,1,0,1], # Chr 8\n        [1,1,1,0,0,0,1,1,0,0,0,1], # Chr 9\n        [0,0,0,1,1,1,0,0,1,1,1,0], # Chr 10\n        [1,0,0,0,1,0,0,1,0,0,1,1], # Chr 11\n        [1,1,1,0,1,0,1,0,1,0,1,0], # Chr 12\n        [0,1,1,1,0,1,0,1,0,1,0,0], # Chr 13\n        [1,0,1,0,0,1,1,0,0,1,0,1], # Chr 14\n        [0,1,0,1,1,0,0,1,1,0,1,0], # Chr 15\n        [1,1,0,1,0,1,0,0,0,1,0,1], # Chr 16\n        [0,0,1,0,1,0,1,1,0,0,1,0], # Chr 17\n        [1,0,0,1,0,1,0,0,1,0,1,0], # Chr 18\n        [0,1,1,0,1,0,0,1,0,1,0,1], # Chr 19\n        [1,1,0,1,0,0,1,0,1,0,1,0], # Chr 20\n        [0,0,1,1,0,1,0,1,0,1,0,1], # Chr 21\n        [1,0,0,0,1,1,1,0,0,1,0,0], # Chr 22\n        [0,1,0,0,0,1,1,0,1,0,1,0], # Chr 23\n        [1,0,1,0,0,0,1,0,0,0,1,1], # Chr 24\n    ])\n\n    # Gene vectors for the four test cases\n    gene_vectors = np.array([\n        [1,0,1,0,1,0,1,0,1,0,1,0], # Gene case 1\n        [1,1,1,0,1,0,1,0,1,0,1,0], # Gene case 2\n        [0,1,0,1,0,1,0,1,0,1,0,1], # Gene case 3\n        [0,0,0,0,0,0,0,0,0,0,0,0], # Gene case 4\n    ])\n\n    # FDR level alpha\n    alpha = 0.05\n    # Number of chromosomes (hypotheses)\n    m = C_matrix.shape[0]\n    # Number of cell lines (observations)\n    n = C_matrix.shape[1]\n\n    results = []\n    \n    for g_vec in gene_vectors:\n        # Handle the special case where the gene vector has no variation\n        if len(np.unique(g_vec)) <= 1:\n            results.append([0, 1.0])\n            continue\n\n        p_values = []\n        # For each chromosome, construct the contingency table and compute the p-value\n        for i in range(m):\n            c_vec = C_matrix[i, :]\n            \n            a = np.sum((g_vec == 1) & (c_vec == 1))\n            b = np.sum((g_vec == 1) & (c_vec == 0))\n            c = np.sum((g_vec == 0) & (c_vec == 1))\n            d = np.sum((g_vec == 0) & (c_vec == 0))\n            \n            table = np.array([[a, b], [c, d]])\n            \n            # One-sided Fisher's exact test for positive association ('greater')\n            _, p_val = fisher_exact(table, alternative='greater')\n            p_values.append(p_val)\n\n        # Apply Benjamini-Hochberg procedure to get FDR-adjusted q-values\n        p_values = np.array(p_values)\n        \n        # Sort p-values and keep track of original indices\n        sorted_indices = np.argsort(p_values)\n        sorted_p_values = p_values[sorted_indices]\n        \n        # Calculate initial q-values\n        ranks = np.arange(1, m + 1)\n        q_values_sorted = sorted_p_values * m / ranks\n        \n        # Enforce monotonicity (step-up procedure)\n        q_values_corrected = np.minimum.accumulate(q_values_sorted[::-1])[::-1]\n        q_values_corrected = np.minimum(q_values_corrected, 1.0)\n        \n        # Un-sort q-values to match original chromosome order\n        final_q_values = np.empty(m)\n        final_q_values[sorted_indices] = q_values_corrected\n        \n        # Selection rule\n        min_q = np.min(final_q_values)\n        \n        if min_q > alpha:\n            # No assignment\n            results.append([0, min_q])\n        else:\n            # Find all chromosomes with the minimum q-value\n            min_q_indices = np.where(final_q_values == min_q)[0]\n            # Choose the one with the smallest chromosome index (+1 for 1-based indexing)\n            best_chromo_idx = np.min(min_q_indices) + 1\n            results.append([best_chromo_idx, min_q])\n            \n    # Format the final output string as specified\n    formatted_results = []\n    for res in results:\n        k, q = res\n        q_str = f\"{q:.4f}\"\n        formatted_results.append(f\"[{k},{q_str}]\")\n    \n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```"}]}