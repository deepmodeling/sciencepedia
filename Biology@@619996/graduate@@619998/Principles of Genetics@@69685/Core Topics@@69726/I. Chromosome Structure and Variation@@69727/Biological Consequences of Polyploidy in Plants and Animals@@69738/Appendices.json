{"hands_on_practices": [{"introduction": "To understand the genetics of polyploids, we must first model how they produce gametes. This exercise guides you through a first-principles derivation of gamete frequencies for an autotetraploid, building from a simple model of random chromosome segregation to a more realistic one that includes double reduction [@problem_id:2793967]. Mastering this foundational process is key to predicting inheritance patterns and population-level genetic outcomes in autopolyploids.", "problem": "An autotetraploid individual has genotype $Aaaa$ at a single locus on an autosome. Assume tetrasomic inheritance with random chromosome segregation in meiosis and that gametes are disomic at this locus (each gamete carries $2$ allelic copies drawn from the $4$ homologous chromosomes).\n\nUsing only the following foundational bases:\n- Mendel’s law of segregation generalized to polysomic systems: in the absence of special mechanisms, allelic copies segregate so that each gamete receives the correct ploidy.\n- Under random chromosome segregation in an autotetraploid, in the absence of double reduction, the two allelic copies in a gamete at a locus are contributed by two distinct homologous chromosomes, and each unordered pair of the $4$ homologous chromosomes is equally likely to co-segregate into a gamete.\n- Double reduction is defined as the event that both allelic copies in a gamete at a locus derive from sister chromatids of the same pre-meiotic homolog due to multivalent pairing and crossing over between the locus and the centromere.\n\nTasks:\n1. Derive from first principles the genotype frequencies of the disomic gametes, $\\Pr(AA)$, $\\Pr(Aa)$, and $\\Pr(aa)$, produced by the $Aaaa$ autotetraploid under random chromosome segregation without double reduction.\n2. Extend the derivation to incorporate a per-gamete double reduction rate $\\alpha$, defined as the probability that at the focal locus both allelic copies in a gamete derive from the same pre-meiotic homolog (double reduction). Assume that, conditional on double reduction, each of the $4$ homologous chromosomes is equally likely to be the source of both allelic copies. Use the law of total probability to obtain closed-form expressions for $\\Pr(AA)$, $\\Pr(Aa)$, and $\\Pr(aa)$ as functions of $\\alpha$.\n\nExpress your final answer as a single row vector $\\big[\\Pr(AA)\\;\\;\\Pr(Aa)\\;\\;\\Pr(aa)\\big]$ consisting of simplified exact expressions in terms of $\\alpha$. No rounding is required. Do not include any units.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It presents a standard, formalizable model of polysomic inheritance, providing all necessary definitions and constraints to derive a unique solution. We shall proceed with the derivation.\n\nLet the autotetraploid genotype be $Aaaa$. We can represent the four homologous chromosomes as $C_1, C_2, C_3, C_4$. Without loss of generality, let the allele on chromosome $C_1$ be $A$, and the alleles on chromosomes $C_2, C_3$, and $C_4$ be $a$. A disomic gamete is formed by two alleles drawn from this set of four.\n\nFirst, we address Task $1$: the derivation of gamete genotype frequencies assuming random chromosome segregation and no double reduction.\nThe problem states that without double reduction, a disomic gamete is formed by sampling two distinct homologous chromosomes. The total number of ways to choose an unordered pair of chromosomes from the four available is given by the binomial coefficient $\\binom{4}{2}$.\n$$ \\binom{4}{2} = \\frac{4!}{2!(4-2)!} = \\frac{4 \\times 3}{2} = 6 $$\nThese six equally likely combinations of chromosomes determine the resulting gamete genotypes:\n$1$. $\\{C_1, C_2\\}$, carrying alleles $\\{A, a\\}$, results in an $Aa$ gamete.\n$2$. $\\{C_1, C_3\\}$, carrying alleles $\\{A, a\\}$, results in an $Aa$ gamete.\n$3$. $\\{C_1, C_4\\}$, carrying alleles $\\{A, a\\}$, results in an $Aa$ gamete.\n$4$. $\\{C_2, C_3\\}$, carrying alleles $\\{a, a\\}$, results in an $aa$ gamete.\n$5$. $\\{C_2, C_4\\}$, carrying alleles $\\{a, a\\}$, results in an $aa$ gamete.\n$6$. $\\{C_3, C_4\\}$, carrying alleles $\\{a, a\\}$, results in an $aa$ gamete.\n\nWe count the number of combinations leading to each gamete genotype:\n- To form an $AA$ gamete, two chromosomes carrying $A$ must be chosen. Since there is only one such chromosome ($C_1$), this is impossible. The count is $0$.\n- To form an $Aa$ gamete, one chromosome with $A$ and one with $a$ must be chosen. There is $\\binom{1}{1}$ way to choose the chromosome with $A$ and $\\binom{3}{1}$ ways to choose a chromosome with $a$. The count is $\\binom{1}{1}\\binom{3}{1} = 1 \\times 3 = 3$.\n- To form an $aa$ gamete, two chromosomes with $a$ must be chosen. There are $3$ such chromosomes. The count is $\\binom{3}{2} = 3$.\n\nThe total count is $0 + 3 + 3 = 6$, which matches our total number of combinations. Let $DR^c$ denote the event of no double reduction. The probabilities, conditional on $DR^c$, are:\n$$ \\Pr(AA | DR^c) = \\frac{0}{6} = 0 $$\n$$ \\Pr(Aa | DR^c) = \\frac{3}{6} = \\frac{1}{2} $$\n$$ \\Pr(aa | DR^c) = \\frac{3}{6} = \\frac{1}{2} $$\nThis completes the first task.\n\nNext, we address Task $2$: incorporating a double reduction rate of $\\alpha$.\nWe will use the law of total probability. For any gamete genotype $G \\in \\{AA, Aa, aa\\}$, its total probability is:\n$$ \\Pr(G) = \\Pr(G | DR) \\Pr(DR) + \\Pr(G | DR^c) \\Pr(DR^c) $$\nWe are given that $\\Pr(DR) = \\alpha$, where $DR$ is the event of double reduction. Consequently, $\\Pr(DR^c) = 1 - \\alpha$.\n\nWe must determine the gamete probabilities conditional on double reduction, $\\Pr(G | DR)$. Double reduction is the event that both allelic copies in a gamete derive from the same pre-meiotic homolog. The problem specifies that conditional on $DR$, each of the $4$ homologous chromosomes ($C_1$ with allele $A$; $C_2, C_3, C_4$ with allele $a$) is an equally likely source.\n- If the source homolog is $C_1$ (carrying $A$), the gamete receives two $A$ alleles, forming an $AA$ gamete. The probability of this is $\\frac{1}{4}$.\n- If the source homolog is $C_2, C_3,$ or $C_4$ (each carrying $a$), the gamete receives two $a$ alleles, forming an $aa$ gamete. The probability of this is $\\frac{3}{4}$.\n- It is impossible to form an $Aa$ gamete via double reduction, as it requires alleles from different homologs.\n\nThe probabilities conditional on double reduction are therefore:\n$$ \\Pr(AA | DR) = \\frac{1}{4} $$\n$$ \\Pr(Aa | DR) = 0 $$\n$$ \\Pr(aa | DR) = \\frac{3}{4} $$\n\nWe now substitute these conditional probabilities into the law of total probability for each gamete genotype.\n\nFor the $AA$ gamete:\n$$ \\Pr(AA) = \\Pr(AA | DR) \\alpha + \\Pr(AA | DR^c) (1 - \\alpha) $$\n$$ \\Pr(AA) = \\left(\\frac{1}{4}\\right)\\alpha + (0)(1 - \\alpha) = \\frac{1}{4}\\alpha $$\n\nFor the $Aa$ gamete:\n$$ \\Pr(Aa) = \\Pr(Aa | DR) \\alpha + \\Pr(Aa | DR^c) (1 - \\alpha) $$\n$$ \\Pr(Aa) = (0)\\alpha + \\left(\\frac{1}{2}\\right)(1 - \\alpha) = \\frac{1}{2}(1 - \\alpha) $$\n\nFor the $aa$ gamete:\n$$ \\Pr(aa) = \\Pr(aa | DR) \\alpha + \\Pr(aa | DR^c) (1 - \\alpha) $$\n$$ \\Pr(aa) = \\left(\\frac{3}{4}\\right)\\alpha + \\left(\\frac{1}{2}\\right)(1 - \\alpha) $$\n$$ \\Pr(aa) = \\frac{3}{4}\\alpha + \\frac{1}{2} - \\frac{1}{2}\\alpha = \\frac{1}{2} + \\left(\\frac{3}{4} - \\frac{2}{4}\\right)\\alpha = \\frac{1}{2} + \\frac{1}{4}\\alpha $$\n\nTo verify correctness, we confirm that the probabilities sum to $1$:\n$$ \\Pr(AA) + \\Pr(Aa) + \\Pr(aa) = \\left(\\frac{1}{4}\\alpha\\right) + \\left(\\frac{1}{2} - \\frac{1}{2}\\alpha\\right) + \\left(\\frac{1}{2} + \\frac{1}{4}\\alpha\\right) $$\n$$ = \\left(\\frac{1}{4} - \\frac{2}{4} + \\frac{1}{4}\\right)\\alpha + \\left(\\frac{1}{2} + \\frac{1}{2}\\right) = (0)\\alpha + 1 = 1 $$\nThe derivation is logically consistent. The requested result is the row vector of these three probabilities.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{1}{4}\\alpha & \\frac{1}{2}(1 - \\alpha) & \\frac{1}{2} + \\frac{1}{4}\\alpha\n\\end{pmatrix}\n}\n$$", "id": "2793967"}, {"introduction": "After understanding how polyploid alleles are transmitted, we can explore how these unique inheritance patterns impact a population's evolutionary potential. This practice asks you to derive the additive genetic variance ($V_A$) for a quantitative trait in an autotetraploid population, a crucial parameter that represents the raw material for natural selection [@problem_id:2793981]. By completing this derivation, you will uncover a fundamental reason why polyploidy can alter the response to selection compared to diploidy.", "problem": "An outcrossing autotetraploid species with tetrasomic inheritance has a single diallelic locus affecting a quantitative trait. Let the two alleles be $A$ and $a$, with population allele frequency of $A$ equal to $p$ and of $a$ equal to $q = 1 - p$. Assume random mating in an infinitely large population, no inbreeding, no selection, no mutation, and no double reduction during meiosis. Under these conditions, zygotes are formed by random union of gametes and the allele dosage per zygote at this locus reflects the polysomic pairing characteristic of tetrasomic inheritance. Assume purely additive gene action at this locus: each copy of allele $A$ contributes an increment $a$ to the trait value relative to allele $a$, which contributes $0$. Environmental variance is $0$, and there is no dominance or epistasis.\n\nUsing only foundational definitions from quantitative genetics (that the additive genetic variance is the variance of breeding values in the reference random-mating population) and the consequences of random mating and tetrasomic inheritance stated above, derive an explicit expression for the additive genetic variance $V_A$ at this locus as a function of $p$ and $a$. Express your final answer as a single closed-form analytic expression in terms of $p$ and $a$. No rounding is required.", "solution": "The problem is found to be valid as it is scientifically grounded, well-posed, and objective. It presents a standard problem in quantitative genetics that can be solved using foundational principles.\n\nThe task is to derive the additive genetic variance, $V_A$, for a single diallelic locus in an autotetraploid population under specific assumptions. The problem explicitly states that $V_A$ must be derived as the variance of breeding values.\n\nFirst, we establish the genetic structure of the population. The species is autotetraploid, meaning each individual carries $4$ copies of a chromosome at a given locus. With two alleles, $A$ and $a$, there are five possible genotypes, which can be indexed by the number of $A$ alleles, $i$, where $i \\in \\{0, 1, 2, 3, 4\\}$. The genotypes are $aaaa$ ($i=0$), $Aaaa$ ($i=1$), $AAaa$ ($i=2$), $AAAa$ ($i=3$), and $AAAA$ ($i=4$).\n\nUnder the assumption of random mating in an infinitely large population (a Hardy-Weinberg-like equilibrium for polyploids), the frequencies of these genotypes follow a binomial distribution. Given the frequency of allele $A$ is $p$ and the frequency of allele $a$ is $q=1-p$, the frequency of a genotype with $i$ copies of allele $A$ is given by:\n$$f_i = \\binom{4}{i} p^i q^{4-i}$$\n\nNext, we define the genotypic values. The problem states a purely additive gene action, where each copy of allele $A$ adds an amount $a$ to the trait value, and allele $a$ contributes $0$. Thus, the genotypic value, $P_i$, for an individual with $i$ copies of allele $A$ is:\n$$P_i = i \\cdot a$$\n\nThe additive genetic variance, $V_A$, is defined as the variance of the breeding values ($G_{BV}$) in the population. The breeding value of an individual is the sum of the average effects of the alleles it carries. For a genotype with $i$ copies of allele $A$ and $4-i$ copies of allele $a$, the breeding value is:\n$$G_{BV, i} = i \\cdot \\alpha_A + (4-i) \\cdot \\alpha_a$$\nwhere $\\alpha_A$ and $\\alpha_a$ are the average effects of alleles $A$ and $a$, respectively. These effects are defined as deviations around a mean, such that their weighted average is zero:\n$$p \\cdot \\alpha_A + q \\cdot \\alpha_a = 0$$\n\nThe average effect of gene substitution, $\\alpha$, is defined as the difference between the average effects of the two alleles:\n$$\\alpha = \\alpha_A - \\alpha_a$$\n\nFrom the two preceding equations, we can express $\\alpha_A$ and $\\alpha_a$ in terms of $\\alpha$:\n$\\alpha_A = q\\alpha$\n$\\alpha_a = -p\\alpha$\n\nSubstituting these into the expression for the breeding value gives:\n$$G_{BV, i} = i(q\\alpha) + (4-i)(-p\\alpha) = \\alpha(iq - 4p + ip) = \\alpha(i(p+q) - 4p)$$\nSince $p+q=1$, this simplifies to:\n$$G_{BV, i} = \\alpha(i - 4p)$$\n\nNow we compute the additive variance $V_A = \\text{Var}(G_{BV, i})$. The variance of $G_{BV, i}$ over the population is:\n$$V_A = \\text{Var}(\\alpha(i - 4p)) = \\alpha^2 \\text{Var}(i - 4p)$$\nSince $4p$ is a constant representing the population mean of $i$, $\\text{Var}(i-4p) = \\text{Var}(i)$.\n$$V_A = \\alpha^2 \\text{Var}(i)$$\nThe variable $i$, the number of $A$ alleles in a genotype, follows a binomial distribution $B(n, p)$ with parameters $n=4$ (the ploidy level) and $p$. The variance of a binomial distribution is $npq$. Therefore:\n$$\\text{Var}(i) = 4pq = 4p(1-p)$$\nSubstituting this into the equation for $V_A$:\n$$V_A = \\alpha^2 \\cdot 4p(1-p)$$\n\nThe final step is to determine the value of $\\alpha$. The average effect of gene substitution, $\\alpha$, is equivalent to the slope of the linear regression of the genotypic values ($P_i$) on the number of alleles ($i$). In this problem, the gene action is purely additive, meaning the genotypic value is a perfectly linear function of the number of $A$ alleles:\n$$P_i = i \\cdot a$$\nThe regression of $ia$ on $i$ is a line with a slope that is exactly $a$. Thus, for this specific case of purely additive gene action:\n$$\\alpha = a$$\n\nSubstituting this result into our expression for $V_A$:\n$$V_A = a^2 \\cdot 4p(1-p)$$\nThis is the final expression for the additive genetic variance at this locus as a function of $p$ and $a$.", "answer": "$$ \\boxed{4a^{2}p(1-p)} $$", "id": "2793981"}, {"introduction": "We now turn from population genetics to the long-term evolution of allopolyploid genomes, which are formed from interspecies hybridization. A key process following allopolyploidization is \"biased fractionation,\" where gene loss occurs preferentially from one of the ancestral subgenomes. This coding-based exercise challenges you to implement a rigorous statistical test to detect such a bias from genomic data, providing hands-on experience with the hypothesis testing that drives modern evolutionary genomics [@problem_id:2794031].", "problem": "You are asked to formalize and implement a statistical test for biased gene loss (also called biased fractionation) between two subgenomes in an allopolyploid using genome-wide synteny data. The biological setting is that a whole-genome duplication creates two homeologous copies of each ancestral locus, here indexed as subgenome A and subgenome B. Over time, gene loss events occur. Genome-wide synteny mapping enables classification of each ancestral locus into one of four observable states: retained on A only (singleton on A), retained on B only (singleton on B), retained on both (duplicate), or lost from both (non-observed). To avoid nuisance parameters introduced by the latter two states, you will base the test exclusively on loci observed as singletons.\n\nFundamental base and assumptions:\n- After whole-genome duplication, each ancestral locus yields two homeologous copies, one on subgenome A and one on subgenome B. These homeologous loci are independent across the genome when conditioned on the shared evolutionary process, to a good approximation in many plant allopolyploids.\n- Under a null model of equal loss rates between subgenomes, conditional on the event that exactly one copy is retained at a locus, the probability of retention on subgenome A equals the probability of retention on subgenome B. This implies a symmetric Bernoulli process with success probability $p_{0} = 1/2$ for “A-retained singleton” when considering only singletons.\n- Under an alternative model of biased loss, conditional on being a singleton, the probability that the retained copy lies on subgenome A is an unknown parameter $p \\in (0,1)$.\n\nMathematical formulation:\n- Let there be $m$ synteny blocks. In block $i \\in \\{1,\\dots,m\\}$, you observe $x_{i}$ singletons on subgenome A and $y_{i}$ singletons on subgenome B. Define total counts $X = \\sum_{i=1}^{m} x_{i}$, $Y = \\sum_{i=1}^{m} y_{i}$, and $n = X + Y$.\n- Conditional on $n$, and assuming loci contribute independently and identically in the “singleton-only” subset, the sufficient statistic for $p$ is $X \\sim \\mathrm{Binomial}(n, p)$. The null hypothesis is $H_{0}: p = 1/2$. The alternative hypothesis is $H_{1}: p \\neq 1/2$.\n- The log-likelihood (up to an additive constant that does not depend on $p$) is $\\ell(p) = X \\log p + Y \\log(1-p)$, where $\\log$ is the natural logarithm. The maximum likelihood estimator under $H_{1}$ is $\\widehat{p} = X/n$ for $n > 0$. The likelihood ratio statistic is $\\Lambda = 2\\left[\\ell(\\widehat{p}) - \\ell(p_{0})\\right]$, where $p_{0} = 1/2$. Under $H_{0}$ and standard regularity conditions, $\\Lambda$ is asymptotically $\\chi^{2}$-distributed with $1$ degree of freedom. If $n = 0$, define $\\widehat{p} = 1/2$, $\\Lambda = 0$, and do not reject $H_{0}$.\n\nYour task:\n- Implement a program that, for each test case below, aggregates the block-level counts into $X$, $Y$, and $n$, computes $\\widehat{p}$, computes the likelihood ratio statistic $\\Lambda$, computes the upper-tail $p$-value using the $\\chi^{2}$ distribution with $1$ degree of freedom, and decides whether to reject $H_{0}$ at significance level $\\alpha = 0.05$ (two-sided, as encoded by the $\\chi^{2}$ reference distribution).\n- Numerical details:\n  - Use natural logarithms for $\\log$.\n  - Handle boundary cases $X = 0$ or $Y = 0$ by adopting the convention $0 \\log 0 = 0$ in evaluating $\\ell(\\widehat{p})$.\n  - If $n = 0$, return $\\widehat{p} = 1/2$, $\\Lambda = 0$, $p$-value $= 1$, and decision “do not reject.”\n\nTest suite:\n- Each test case is a list of synteny blocks, where each block is represented by a pair $(x_{i}, y_{i})$ of nonnegative integers. The input data for each test case is embedded directly in the program; no external input is required.\n  1. Balanced genome-wide singleton counts: blocks $= [($10$,$10$),($20$,$20$),($50$,$50$),($5$,$5$),($15$,$15$)]$.\n  2. Strong bias toward subgenome A: blocks $= [($35$,$15$),($40$,$10$),($50$,$20$),($30$,$10$),($45$,$15$)]$.\n  3. Small-sample mild asymmetry: blocks $= [($3$,$1$)]$.\n  4. Boundary with complete skew: blocks $= [($0$,$50$)]$.\n  5. No singletons observed: blocks $= [($0$,$0$)]$.\n\nProgram output specification:\n- For each test case, output a list with four elements: $[\\Lambda,\\ \\widehat{p},\\ \\text{p\\_value},\\ \\text{reject}]$, where $\\Lambda$ is the likelihood ratio statistic as a float, $\\widehat{p}$ is the maximum likelihood estimate as a float, $\\text{p\\_value}$ is the upper-tail $\\chi^{2}$ $p$-value as a float, and $\\text{reject}$ is a boolean indicating whether to reject $H_{0}$ at $\\alpha = 0.05$.\n- All floats must be rounded to exactly $6$ decimal places.\n- Your program should produce a single line of output containing the results for the five test cases as a comma-separated list enclosed in square brackets, for example: $\\text{[}[r_{1}], [r_{2}], [r_{3}], [r_{4}], [r_{5}]\\text{]}$, where each $[r_{k}]$ is the four-element list for test case $k$ in the specified order.", "solution": "The problem presented is a valid and well-posed exercise in applied statistics, specifically within the domain of evolutionary genomics. It requires the implementation of a likelihood ratio test to assess biased gene loss in an allopolyploid genome. The framework is scientifically sound, the assumptions are clearly stated, and the statistical formulation is standard. We will proceed with the derivation and implementation of the solution.\n\nThe core of the problem lies in testing a hypothesis about a proportion parameter $p$ in a binomial distribution. We are given counts of singleton genes on two subgenomes, A and B. Let $X$ be the count of singletons on subgenome A and $Y$ be the count on subgenome B, out of a total of $n = X+Y$ observed singletons. The model posits that the number of singletons on subgenome A, $X$, follows a binomial distribution, $X \\sim \\mathrm{Binomial}(n, p)$, where $p$ is the probability that a singleton gene is retained on subgenome A.\n\nThe null hypothesis, $H_{0}$, posits no bias, meaning the probability of retention is equal for both subgenomes, so $p = p_{0} = 1/2$. The alternative hypothesis, $H_{1}$, posits a bias, meaning $p \\neq 1/2$.\n\nThe likelihood function for the parameter $p$, given the data $X$ and $Y$, is proportional to $L(p) = p^X (1-p)^Y$. It is more convenient to work with the log-likelihood function, $\\ell(p) = \\log L(p)$, which, up to an additive constant, is:\n$$ \\ell(p) = X \\log p + Y \\log(1-p) $$\nwhere $\\log$ denotes the natural logarithm.\n\nThe likelihood ratio test statistic, $\\Lambda$, is defined as twice the difference between the maximum log-likelihood under the alternative hypothesis and the log-likelihood under the null hypothesis:\n$$ \\Lambda = 2 \\left( \\sup_{p \\in (0,1)} \\ell(p) - \\ell(p_{0}) \\right) $$\n\nUnder $H_{1}$, the parameter $p$ is unconstrained within the interval $(0,1)$. The maximum likelihood estimator (MLE) for $p$ is found by maximizing $\\ell(p)$, which yields $\\widehat{p} = X/n$ for $n > 0$. The maximum value of the log-likelihood is therefore $\\ell(\\widehat{p})$:\n$$ \\ell(\\widehat{p}) = X \\log\\left(\\frac{X}{n}\\right) + Y \\log\\left(\\frac{Y}{n}\\right) $$\n\nUnder $H_{0}$, the parameter is fixed at $p_{0} = 1/2$. The log-likelihood is:\n$$ \\ell(p_0) = X \\log\\left(\\frac{1}{2}\\right) + Y \\log\\left(\\frac{1}{2}\\right) = (X+Y) \\log\\left(\\frac{1}{2}\\right) = -n \\log 2 $$\n\nCombining these expressions, the likelihood ratio statistic is:\n$$ \\Lambda = 2 \\left[ \\ell(\\widehat{p}) - \\ell(p_0) \\right] = 2 \\left[ X \\log\\left(\\frac{X}{n}\\right) + Y \\log\\left(\\frac{Y}{n}\\right) - (-n \\log 2) \\right] $$\nThis can be rearranged to a more computationally stable form:\n$$ \\Lambda = 2 \\left[ X \\log X + Y \\log Y - n \\log n + n \\log 2 \\right] $$\nThis statistic is equivalent to the G-test statistic for goodness-of-fit, where the observed counts are $X$ and $Y$ and the expected counts under $H_{0}$ are $n/2$ and $n/2$.\n\nWe must handle boundary cases as specified by the problem statement:\n1.  If $n = 0$, then $X=0$ and $Y=0$. No data are available to test the hypothesis. We define $\\widehat{p} = 1/2$ and $\\Lambda = 0$. The corresponding p-value is $1$, leading to non-rejection of $H_0$.\n2.  If $X=0$ or $Y=0$ (but $n>0$), the expression for $\\ell(\\widehat{p})$ involves a term of the form $0 \\log 0$. Following the standard convention in information theory and statistics, we define $0 \\log 0 = 0$.\n    -   If $X=0$, then $Y=n$ and $\\widehat{p}=0$. The log-likelihood $\\ell(\\widehat{p}) = 0 \\log 0 + n \\log(n/n) = 0$. Then $\\Lambda = 2[0 - (-n \\log 2)] = 2n \\log 2$.\n    -   If $Y=0$, then $X=n$ and $\\widehat{p}=1$. The log-likelihood $\\ell(\\widehat{p}) = n \\log(n/n) + 0 \\log 0 = 0$. Then $\\Lambda = 2[0 - (-n \\log 2)] = 2n \\log 2$.\n    Thus, for the boundary cases where one subgenome has zero singletons, the formula simplifies to $\\Lambda = 2n \\log 2$.\n\nUnder standard regularity conditions, which are met by the binomial model, the statistic $\\Lambda$ asymptotically follows a chi-squared distribution with degrees of freedom equal to the difference in the number of free parameters between $H_{1}$ and $H_{0}$. Here, this is $1-0=1$. So, we test $\\Lambda$ against a $\\chi^2_1$ distribution.\n\nThe p-value is the probability of observing a test statistic at least as extreme as the one computed from the data, assuming $H_{0}$ is true. This corresponds to the upper-tail probability of the $\\chi^2_1$ distribution:\n$$ \\text{p-value} = P(\\chi^2_1 \\ge \\Lambda) $$\nWe will use the survival function (1 - CDF) of the chi-squared distribution for this calculation. The decision rule is to reject $H_{0}$ if the p-value is less than the specified significance level, $\\alpha = 0.05$.\n\nThe implementation will proceed as follows for each test case:\n1.  Aggregate the counts $(x_i, y_i)$ from all synteny blocks to obtain total counts $X = \\sum x_i$ and $Y = \\sum y_i$.\n2.  Compute the total number of singletons, $n = X + Y$.\n3.  Handle the case $n=0$ separately per the problem instructions.\n4.  For $n > 0$, calculate $\\widehat{p}=X/n$ and the statistic $\\Lambda$ using the appropriate formula based on whether $X$ or $Y$ are zero.\n5.  Compute the p-value using the survival function of the $\\chi^2_1$ distribution.\n6.  Determine the boolean decision to reject $H_{0}$ by comparing the p-value with $\\alpha=0.05$.\n7.  Format the results—$\\Lambda$, $\\widehat{p}$, p-value, and the rejection decision—to the specified precision and structure.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import chi2\n\ndef analyze_fractionation(blocks):\n    \"\"\"\n    Computes the likelihood ratio test for biased fractionation.\n\n    Args:\n        blocks (list of tuples): A list where each tuple (x_i, y_i) contains\n                                 the counts of singletons on subgenomes A and B\n                                 for synteny block i.\n\n    Returns:\n        list: A list containing [Lambda, p_hat, p_value, reject_decision].\n    \"\"\"\n    # Step 1: Aggregate counts\n    x_total = sum(b[0] for b in blocks)\n    y_total = sum(b[1] for b in blocks)\n    n_total = x_total + y_total\n\n    # Step 2: Handle the case of no singletons\n    if n_total == 0:\n        p_hat = 0.5\n        lambda_stat = 0.0\n        p_value = 1.0\n        reject = False\n        return [lambda_stat, p_hat, p_value, reject]\n\n    # Step 3: Calculate MLE for p\n    p_hat = x_total / n_total\n\n    # Step 4: Calculate the Likelihood Ratio statistic Lambda\n    # Use the convention 0 * log(0) = 0, which simplifies the formula at boundaries.\n    if x_total == 0 or y_total == 0:\n        # If X=0 or Y=0, ell(p_hat) = 0. Lambda = 2 * (0 - ell(p0)).\n        # ell(p0) = n*log(0.5) = -n*log(2).\n        # So, Lambda = 2 * n * log(2).\n        lambda_stat = 2 * n_total * np.log(2)\n    else:\n        # General formula: Lambda = 2 * (ell(p_hat) - ell(p0))\n        # ell(p_hat) = X*log(X/n) + Y*log(Y/n)\n        # ell(p0) = n*log(0.5)\n        # Lambda = 2 * (X*log(X) + Y*log(Y) - n*log(n) + n*log(2))\n        lambda_stat = 2 * (x_total * np.log(x_total) + \n                             y_total * np.log(y_total) - \n                             n_total * np.log(n_total) +\n                             n_total * np.log(2))\n    \n    # Step 5: Compute the p-value from the chi-squared distribution\n    # Degrees of freedom = 1 (1 parameter 'p' in H1 vs 0 in H0)\n    p_value = chi2.sf(lambda_stat, df=1)\n\n    # Step 6: Make a decision based on the significance level alpha = 0.05\n    alpha = 0.05\n    reject = p_value  alpha\n\n    return [lambda_stat, p_hat, p_value, reject]\n\ndef solve():\n    \"\"\"\n    Main function to run the analysis on the defined test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # 1. Balanced genome-wide singleton counts\n        [ (10, 10), (20, 20), (50, 50), (5, 5), (15, 15) ],\n        # 2. Strong bias toward subgenome A\n        [ (35, 15), (40, 10), (50, 20), (30, 10), (45, 15) ],\n        # 3. Small-sample mild asymmetry\n        [ (3, 1) ],\n        # 4. Boundary with complete skew\n        [ (0, 50) ],\n        # 5. No singletons observed\n        [ (0, 0) ]\n    ]\n\n    all_results = []\n    for case in test_cases:\n        result = analyze_fractionation(case)\n        all_results.append(result)\n\n    # Format the final output string according to the specification.\n    # Floats must be rounded to exactly 6 decimal places.\n    # The output should be a string representation of a list of lists.\n    formatted_parts = []\n    for res_list in all_results:\n        lambda_val, p_hat_val, p_val, reject_val = res_list\n        part_str = (f\"[{lambda_val:.6f}, {p_hat_val:.6f}, \"\n                    f\"{p_val:.6f}, {str(reject_val).lower()}]\")\n        formatted_parts.append(part_str)\n\n    # Final print statement in the exact required format.\n    # This forms a string looking like: [[...], [...], ...]\n    final_output_string = f\"[{','.join(formatted_parts)}]\"\n    print(final_output_string)\n\nsolve()\n```", "id": "2794031"}]}