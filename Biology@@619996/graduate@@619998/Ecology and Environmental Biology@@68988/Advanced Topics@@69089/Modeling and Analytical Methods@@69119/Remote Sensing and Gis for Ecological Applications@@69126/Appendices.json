{"hands_on_practices": [{"introduction": "The ability to detect and quantify ecological patterns from remotely sensed data begins with the sensor itself. This exercise delves into the fundamental physics of signal detection by modeling the interplay between a spectral feature on the ground and the characteristics of the instrument observing it. By working through this problem [@problem_id:2528013], you will develop a first-principles understanding of the critical trade-off between a sensor's spectral resolution and its signal-to-noise ratio, revealing how instrument design directly impacts its suitability for a given ecological application.", "problem": "A hyperspectral imaging instrument is used to map a vegetation pigment absorption feature centered at wavelength $\\lambda_{0}$ for an ecological application (e.g., detecting chlorophyll concentration gradients across a wetland). The sensor’s spectral response function is modeled as a Gaussian\n$$\nR(\\lambda) \\;=\\; \\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big),\n$$\nwhere $\\sigma_{R}$ is the sensor’s spectral standard deviation (a measure of bandwidth). The incident spectral radiance at the sensor is modeled as a continuum radiance $L_{c}$ with a Gaussian absorption dip of relative depth $d$ and ecological feature width $\\sigma_{L}$,\n$$\nL_{\\lambda} \\;=\\; L_{c}\\,\\Big[\\,1 \\;-\\; d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big], \\quad \\text{with } 0<d<1.\n$$\nYou will use the definition of at-sensor band-averaged radiance\n$$\n\\bar{L} \\;=\\; \\frac{\\displaystyle \\int_{-\\infty}^{\\infty} L_{\\lambda}\\,R(\\lambda)\\,d\\lambda}{\\displaystyle \\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda}.\n$$\nTasks:\n- Derive a closed-form expression for $\\bar{L}$ in terms of $L_{c}$, $d$, $\\sigma_{L}$, and $\\sigma_{R}$.\n- To quantify detectability of the ecological absorption feature, assume the instrument is photon shot noise-limited so that the variance of the detected photoelectrons equals the mean. Let the detected photoelectrons be $C \\,=\\, \\kappa \\int_{-\\infty}^{\\infty} L_{\\lambda}\\,R(\\lambda)\\,d\\lambda$, where $\\kappa>0$ is a constant that lumps optical throughput, integration time, and physical constants. Define the Contrast-to-Noise Ratio (CNR) as\n$$\n\\mathrm{CNR} \\;=\\; \\frac{C_{\\mathrm{cont}} - C_{\\mathrm{feat}}}{\\sqrt{C_{\\mathrm{feat}}}},\n$$\nwhere $C_{\\mathrm{cont}}$ is the count with $L_{\\lambda}=L_{c}$ (no feature) and $C_{\\mathrm{feat}}$ is the count with the absorption feature present. Assume $d$ is sufficiently small that $\\sqrt{C_{\\mathrm{feat}}}\\approx \\sqrt{C_{\\mathrm{cont}}}$ when simplifying $\\mathrm{CNR}$. From first principles and well-tested Gaussian integral identities, derive $\\mathrm{CNR}(\\sigma_{R})$ up to multiplicative constants that do not depend on $\\sigma_{R}$, and then determine the value of $\\sigma_{R}$ that maximizes $\\mathrm{CNR}(\\sigma_{R})$.\nReport your final answer as the closed-form analytic expression for the optimal $\\sigma_{R}$, denoted $\\sigma_{R}^{\\star}$, expressed in terms of $\\sigma_{L}$ only. Do not include units in your final reported expression.", "solution": "We begin from the definition of the at-sensor band-averaged radiance,\n$$\n\\bar{L} \\;=\\; \\frac{\\displaystyle \\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda}{\\displaystyle \\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda}.\n$$\nWith\n$$\nR(\\lambda)=\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big),\\quad\nL_{\\lambda}=L_{c}\\Big[1-d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big],\n$$\nthe denominator is the standard Gaussian integral\n$$\n\\int_{-\\infty}^{\\infty} R(\\lambda)\\,d\\lambda \\;=\\; \\int_{-\\infty}^{\\infty} \\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda \\;=\\; \\sqrt{2\\pi}\\,\\sigma_{R}.\n$$\nFor the numerator,\n\\begin{align*}\n\\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda\n&= L_{c}\\int_{-\\infty}^{\\infty}\\Big[1-d\\,\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{L}^{2}}\\Big)\\Big]\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda\\\\\n&= L_{c}\\int_{-\\infty}^{\\infty}\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2\\,\\sigma_{R}^{2}}\\Big)\\,d\\lambda \\;-\\; L_{c}d \\int_{-\\infty}^{\\infty}\\exp\\!\\Big(-\\frac{(\\lambda-\\lambda_{0})^{2}}{2}\\Big[\\frac{1}{\\sigma_{R}^{2}}+\\frac{1}{\\sigma_{L}^{2}}\\Big]\\Big)\\,d\\lambda.\n\\end{align*}\nDefine the combined variance $\\sigma_{C}^{2}$ by\n$$\n\\frac{1}{\\sigma_{C}^{2}} \\;=\\; \\frac{1}{\\sigma_{R}^{2}}+\\frac{1}{\\sigma_{L}^{2}}\n\\quad\\Longrightarrow\\quad\n\\sigma_{C}^{2} \\;=\\; \\frac{\\sigma_{R}^{2}\\sigma_{L}^{2}}{\\sigma_{R}^{2}+\\sigma_{L}^{2}},\\qquad\n\\sigma_{C} \\;=\\; \\frac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n$$\nHence,\n$$\n\\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda \\;=\\; L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R} \\;-\\; L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}.\n$$\nTherefore the band-averaged radiance is\n\\begin{align*}\n\\bar{L}\n&= \\frac{L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}}{\\sqrt{2\\pi}\\,\\sigma_{R}}\n\\;=\\; L_{c}\\Big[1 - d\\,\\frac{\\sigma_{C}}{\\sigma_{R}}\\Big]\n\\;=\\; L_{c}\\Big[1 - d\\,\\frac{\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}\\Big].\n\\end{align*}\nThis expression shows that, as $\\sigma_{R}$ decreases, the feature-induced reduction in $\\bar{L}$ grows, approaching the intrinsic depth $d$ as $\\sigma_{R}\\to 0$; as $\\sigma_{R}\\to\\infty$, the feature is averaged out.\n\nNext, we formalize detectability. The detected photoelectrons under the shot noise model are\n$$\nC \\;=\\; \\kappa \\int_{-\\infty}^{\\infty} L_{\\lambda}R(\\lambda)\\,d\\lambda,\\qquad \\kappa>0,\n$$\nwith variance equal to the mean. The contrast in counts between continuum and feature is\n\\begin{align*}\nS \\;=\\; C_{\\mathrm{cont}} - C_{\\mathrm{feat}}\n&= \\kappa\\Big(\\int L_{c}R\\,d\\lambda - \\int L_{\\lambda}R\\,d\\lambda\\Big)\n= \\kappa \\Big(L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - [L_{c}\\sqrt{2\\pi}\\,\\sigma_{R} - L_{c}d\\sqrt{2\\pi}\\,\\sigma_{C}]\\Big)\\\\\n&= \\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\sigma_{C}\n\\;=\\; \\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\frac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n\\end{align*}\nThe noise standard deviation for the feature measurement is $\\sqrt{C_{\\mathrm{feat}}}$. Under the small-depth approximation ($d$ sufficiently small),\n$$\n\\sqrt{C_{\\mathrm{feat}}} \\;\\approx\\; \\sqrt{C_{\\mathrm{cont}}} \\;=\\; \\sqrt{\\kappa L_{c}\\int R\\,d\\lambda} \\;=\\; \\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R}}.\n$$\nThus the Contrast-to-Noise Ratio (CNR) is\n\\begin{align*}\n\\mathrm{CNR}(\\sigma_{R})\n&= \\frac{S}{\\sqrt{C_{\\mathrm{feat}}}}\n\\;\\approx\\; \\frac{\\kappa L_{c}d\\,\\sqrt{2\\pi}\\,\\dfrac{\\sigma_{R}\\sigma_{L}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}}{\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}\\,\\sigma_{R}}}\\\\\n&= d\\,\\sigma_{L}\\;\\frac{\\sqrt{\\sigma_{R}}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}\\;\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}}.\n\\end{align*}\nThe multiplicative factor $\\sqrt{\\kappa L_{c}\\,\\sqrt{2\\pi}}$ is independent of $\\sigma_{R}$, so maximizing $\\mathrm{CNR}(\\sigma_{R})$ with respect to $\\sigma_{R}$ is equivalent to maximizing\n$$\ng(\\sigma_{R}) \\;=\\; \\frac{\\sqrt{\\sigma_{R}}}{\\sqrt{\\sigma_{R}^{2}+\\sigma_{L}^{2}}}.\n$$\nIt is convenient to maximize $g^{2}(\\sigma_{R})$ instead:\n$$\ng^{2}(\\sigma_{R}) \\;=\\; \\frac{\\sigma_{R}}{\\sigma_{R}^{2}+\\sigma_{L}^{2}}.\n$$\nDifferentiate with respect to $\\sigma_{R}$ and set to zero:\n\\begin{align*}\n\\frac{d}{d\\sigma_{R}} g^{2}(\\sigma_{R})\n&= \\frac{(\\sigma_{R}^{2}+\\sigma_{L}^{2}) - \\sigma_{R}(2\\sigma_{R})}{(\\sigma_{R}^{2}+\\sigma_{L}^{2})^{2}}\n= \\frac{\\sigma_{L}^{2}-\\sigma_{R}^{2}}{(\\sigma_{R}^{2}+\\sigma_{L}^{2})^{2}}\n\\;=\\; 0\n\\quad\\Longrightarrow\\quad \\sigma_{R}^{2} \\;=\\; \\sigma_{L}^{2}.\n\\end{align*}\nThe second derivative test, or inspection of $g^{2}(\\sigma_{R})$, confirms this is a maximum. Therefore,\n$$\n\\sigma_{R}^{\\star} \\;=\\; \\sigma_{L}.\n$$\nInterpretation for ecological signal detectability: decreasing $\\sigma_{R}$ strengthens the feature contrast in $\\bar{L}$ but reduces photon throughput and thus increases shot noise; increasing $\\sigma_{R}$ increases photons but dilutes the spectral feature. These opposing effects produce an optimal bandwidth when the sensor’s spectral standard deviation matches the ecological feature’s spectral standard deviation, maximizing the Contrast-to-Noise Ratio.", "answer": "$$\\boxed{\\sigma_{L}}$$", "id": "2528013"}, {"introduction": "Moving from sensor theory to practical application, this exercise guides you through a complete, end-to-end workflow to address a pressing ecological question: assessing wildfire impacts. This comprehensive problem [@problem_id:2527969] simulates a realistic analysis pipeline, starting with the correction of raw reflectance data for topographic effects, followed by the calculation of a robust burn severity index. By integrating physics-based corrections and statistical validation against field data, you will gain hands-on experience in transforming satellite imagery into a quantitative ecological assessment.", "problem": "You are given small, synthetic raster tiles representing pre-fire and post-fire multispectral reflectance, along with topographic slope and aspect, and solar geometry. Your task is to implement a physically consistent algorithm that performs topographic illumination correction on the reflectance bands, computes a burn-severity metric derived from a normalized difference index change, and validates it against field Composite Burn Index (CBI) plot measurements via calibration and hold-out evaluation.\n\nFoundational principles for this problem are as follows.\n\n- Under the Lambertian surface assumption, the irradiance incident on a tilted facet is proportional to the cosine of the local solar incidence angle. If the solar zenith angle is denoted by $\\theta_{z}$, the terrain slope by $\\alpha$, aspect by $\\gamma$, and the solar azimuth by $\\phi_{s}$, then the cosine of the incidence angle is given by\n$$\n\\cos i \\;=\\; \\cos \\alpha \\,\\cos \\theta_{z} \\;+\\; \\sin \\alpha \\,\\sin \\theta_{z} \\,\\cos(\\phi_{s}-\\gamma).\n$$\nAll angles must be treated in radians in computations. The solar zenith angle is related to solar elevation $\\varepsilon_{s}$ by $\\theta_{z} = \\pi/2 - \\varepsilon_{s}$. Pixels with $\\cos i \\le 0$ are in self-shadow with respect to the sun and must be excluded from further analysis.\n\n- For a Lambertian surface, a simple cosine topographic correction scales an observed reflectance $R_{\\text{obs}}$ to a topographically normalized reflectance $R_{\\text{corr}}$ by\n$$\nR_{\\text{corr}} \\;=\\; R_{\\text{obs}} \\cdot \\frac{\\cos \\theta_{z}}{\\cos i},\n$$\napplied only where $\\cos i > 0$; elsewhere the reflectance for that pixel should be considered invalid.\n\n- A two-band normalized difference index between a near-infrared band $R_{N}$ and a short-wave infrared band $R_{S}$ is defined as\n$$\nI \\;=\\; \\frac{R_{N} - R_{S}}{R_{N} + R_{S}},\n$$\ncomputed only where the denominator is nonzero.\n\n- The inter-temporal index change is $\\Delta I = I_{\\text{pre}} - I_{\\text{post}}$. A relative differenced index that normalizes the change by the pre-event magnitude is obtained as\n$$\nI_{R} \\;=\\; \\frac{\\Delta I}{\\sqrt{\\lvert I_{\\text{pre}} \\rvert + \\epsilon}},\n$$\nwith a small stabilizer $\\epsilon = 10^{-6}$ to avoid division by zero. In this task, $I$ is computed from near-infrared and short-wave infrared reflectances after topographic correction and $I_{R}$ is the burn-severity metric to be validated against Composite Burn Index (CBI).\n\n- To validate $I_{R}$ against CBI, fit a linear model on a calibration subset of plot locations,\n$$\n\\widehat{\\mathrm{CBI}} \\;=\\; a \\, I_{R} \\;+\\; b,\n$$\nby ordinary least squares, and report the hold-out Root Mean Squared Error (RMSE) on a validation subset,\n$$\n\\mathrm{RMSE} \\;=\\; \\sqrt{\\frac{1}{n}\\sum_{k=1}^{n} \\left(\\mathrm{CBI}_{k} - \\widehat{\\mathrm{CBI}}_{k}\\right)^{2}}.\n$$\n\nAngle units and reflectance units.\n\n- All input angles are provided in degrees. Your implementation must convert to radians for trigonometric computations. The required angle unit for any intermediate derivation is radians. Solar elevation and azimuth follow the common remote sensing convention: azimuth is measured clockwise from geographic north, aspect is measured clockwise from north, and slope is the tilt from horizontal.\n- Reflectance values are unitless fractions in $[0,1]$.\n\nNumerical requirements and masking.\n\n- Perform topographic correction independently for the near-infrared and short-wave infrared bands in both pre-fire and post-fire images.\n- Any pixel with $\\cos i \\le 0$, or with a zero denominator in the normalized difference computation, must be treated as invalid; do not include invalid pixels in the plot extraction.\n- Use $\\epsilon = 10^{-6}$ in the relative differenced index normalization.\n\nTest suite.\n\nImplement your program to process the following three cases. Each case provides $3 \\times 3$ arrays for pre-fire and post-fire reflectance in the near-infrared (NIR) and short-wave infrared (SWIR), terrain slope and aspect, scalar solar elevation and azimuth angles, a list of plot locations as zero-based row–column pairs, a corresponding list of CBI values, and a split into calibration and validation subsets.\n\nCase A.\n\n- Pre-fire NIR reflectance $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.45 & 0.42 & 0.40 \\\\\n0.43 & 0.41 & 0.44 \\\\\n0.46 & 0.40 & 0.42\n\\end{bmatrix}\n$$\n- Pre-fire SWIR reflectance $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.14 & 0.15 & 0.16 \\\\\n0.13 & 0.17 & 0.15 \\\\\n0.14 & 0.16 & 0.13\n\\end{bmatrix}\n$$\n- Post-fire NIR reflectance $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.30 & 0.28 & 0.26 \\\\\n0.27 & 0.29 & 0.25 \\\\\n0.28 & 0.26 & 0.24\n\\end{bmatrix}\n$$\n- Post-fire SWIR reflectance $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.22 & 0.24 & 0.23 \\\\\n0.25 & 0.22 & 0.24 \\\\\n0.26 & 0.23 & 0.25\n\\end{bmatrix}\n$$\n- Slope in degrees $\\alpha$:\n$$\n\\begin{bmatrix}\n15 & 20 & 10 \\\\\n25 & 15 & 30 \\\\\n12 & 18 & 22\n\\end{bmatrix}\n$$\n- Aspect in degrees $\\gamma$:\n$$\n\\begin{bmatrix}\n90 & 120 & 150 \\\\\n135 & 180 & 210 \\\\\n60 & 75 & 105\n\\end{bmatrix}\n$$\n- Solar elevation in degrees $\\varepsilon_{s} = 45$, solar azimuth in degrees $\\phi_{s} = 135$.\n- Plot locations in zero-based indices: $\\{(0,0), (0,2), (1,1), (1,2), (2,0), (2,2)\\}$ with CBI values $\\{0.90, 0.80, 1.10, 1.20, 0.85, 1.00\\}$.\n- Calibration subset locations: $\\{(0,0), (0,2), (1,1), (2,2)\\}$. Validation subset locations: $\\{(1,2), (2,0)\\}$.\n\nCase B.\n\n- Pre-fire NIR reflectance $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.50 & 0.48 & 0.47 \\\\\n0.49 & 0.51 & 0.50 \\\\\n0.48 & 0.47 & 0.49\n\\end{bmatrix}\n$$\n- Pre-fire SWIR reflectance $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.12 & 0.13 & 0.12 \\\\\n0.14 & 0.12 & 0.13 \\\\\n0.15 & 0.13 & 0.14\n\\end{bmatrix}\n$$\n- Post-fire NIR reflectance $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.46 & 0.45 & 0.44 \\\\\n0.45 & 0.47 & 0.46 \\\\\n0.46 & 0.44 & 0.45\n\\end{bmatrix}\n$$\n- Post-fire SWIR reflectance $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.13 & 0.14 & 0.13 \\\\\n0.15 & 0.13 & 0.14 \\\\\n0.16 & 0.14 & 0.15\n\\end{bmatrix}\n$$\n- Slope in degrees $\\alpha$:\n$$\n\\begin{bmatrix}\n0 & 0 & 0 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n- Aspect in degrees $\\gamma$:\n$$\n\\begin{bmatrix}\n0 & 0 & 0 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n$$\n- Solar elevation in degrees $\\varepsilon_{s} = 60$, solar azimuth in degrees $\\phi_{s} = 150$.\n- Plot locations: $\\{(0,0), (0,1), (1,0), (1,2), (2,1), (2,2)\\}$ with CBI values $\\{0.35, 0.40, 0.38, 0.45, 0.42, 0.50\\}$.\n- Calibration subset locations: $\\{(0,0), (0,1), (1,0), (2,1)\\}$. Validation subset locations: $\\{(1,2), (2,2)\\}$.\n\nCase C.\n\n- Pre-fire NIR reflectance $R_{N,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.43 & 0.42 & 0.20 \\\\\n0.44 & 0.46 & 0.21 \\\\\n0.45 & 0.47 & 0.22\n\\end{bmatrix}\n$$\n- Pre-fire SWIR reflectance $R_{S,\\text{pre}}$:\n$$\n\\begin{bmatrix}\n0.18 & 0.19 & 0.20 \\\\\n0.17 & 0.18 & 0.21 \\\\\n0.19 & 0.20 & 0.22\n\\end{bmatrix}\n$$\n- Post-fire NIR reflectance $R_{N,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.25 & 0.24 & 0.18 \\\\\n0.26 & 0.27 & 0.19 \\\\\n0.24 & 0.26 & 0.20\n\\end{bmatrix}\n$$\n- Post-fire SWIR reflectance $R_{S,\\text{post}}$:\n$$\n\\begin{bmatrix}\n0.28 & 0.30 & 0.22 \\\\\n0.29 & 0.27 & 0.23 \\\\\n0.30 & 0.28 & 0.24\n\\end{bmatrix}\n$$\n- Slope in degrees $\\alpha$:\n$$\n\\begin{bmatrix}\n50 & 60 & 70 \\\\\n65 & 75 & 80 \\\\\n55 & 45 & 70\n\\end{bmatrix}\n$$\n- Aspect in degrees $\\gamma$:\n$$\n\\begin{bmatrix}\n200 & 220 & 180 \\\\\n200 & 160 & 140 \\\\\n220 & 200 & 110\n\\end{bmatrix}\n$$\n- Solar elevation in degrees $\\varepsilon_{s} = 30$, solar azimuth in degrees $\\phi_{s} = 200$.\n- Plot locations: $\\{(0,0), (0,1), (1,0), (1,1), (2,1), (2,2)\\}$ with CBI values $\\{2.20, 2.00, 2.40, 1.80, 2.10, 1.60\\}$.\n- Calibration subset locations: $\\{(0,0), (0,1), (1,0), (1,1)\\}$. Validation subset locations: $\\{(2,1), (2,2)\\}$.\n\nProgram requirements.\n\n- Implement the Lambertian cosine topographic correction as described, using radians in trigonometry. Exclude pixels where $\\cos i \\le 0$.\n- Compute the normalized difference index from the corrected bands for pre-fire and post-fire images. Compute the inter-temporal change and the relative differenced metric $I_{R}$ using $\\epsilon = 10^{-6}$.\n- For each case, extract $I_{R}$ values at the specified plot locations, fit a linear model on the calibration subset by least squares, and compute the RMSE on the validation subset.\n- Your program should produce a single line of output containing the three RMSE values for Cases A, B, and C, respectively, each rounded to four decimal places, as a comma-separated list enclosed in square brackets (for example, $\\left[\\mathrm{r}_{A},\\mathrm{r}_{B},\\mathrm{r}_{C}\\right]$).\n\nThe final output must strictly follow the format: a single line with one list of three floats in square brackets, and nothing else.", "solution": "The problem statement is subjected to rigorous validation and is determined to be scientifically sound, well-posed, objective, and self-contained. It describes a standard workflow in quantitative remote sensing for ecological applications, specifically burn severity assessment. The physical principles, mathematical formulations, and data processing steps are all based on established methods. The provided data are complete and consistent for the task. Therefore, a solution is warranted.\n\nThe solution proceeds systematically through several stages: topographic modeling, radiometric correction, spectral index calculation, and statistical validation. Each stage is applied to the provided raster data for each test case.\n\n**1. Preliminary Setup and Angle Conversion**\n\nThe initial step is to prepare the geometric parameters for calculation. All angles provided in degrees must be converted to radians, as trigonometric functions in computational libraries operate on radians. Let $\\alpha_{\\text{deg}}$, $\\gamma_{\\text{deg}}$, $\\varepsilon_{s, \\text{deg}}$, and $\\phi_{s, \\text{deg}}$ be the input slope, aspect, solar elevation, and solar azimuth in degrees. The conversion is:\n$$ \\alpha = \\alpha_{\\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\gamma = \\gamma_{\\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\varepsilon_{s} = \\varepsilon_{s, \\text{deg}} \\cdot \\frac{\\pi}{180}, \\quad \\phi_{s} = \\phi_{s, \\text{deg}} \\cdot \\frac{\\pi}{180} $$\nThe solar zenith angle $\\theta_{z}$ is derived from the solar elevation $\\varepsilon_{s}$:\n$$ \\theta_{z} = \\frac{\\pi}{2} - \\varepsilon_{s} $$\nThese calculations are performed for each pixel in the case of slope and aspect, and as scalar values for the solar angles.\n\n**2. Illumination Modeling and Topographic Correction**\n\nThe core of the physical correction lies in modeling the solar illumination on a tilted surface. Assuming a Lambertian surface, the local irradiance is proportional to the cosine of the solar incidence angle, $\\cos i$. This is computed for every pixel using the formula:\n$$ \\cos i = \\cos \\alpha \\cos \\theta_{z} + \\sin \\alpha \\sin \\theta_{z} \\cos(\\phi_{s} - \\gamma) $$\nA critical condition is that pixels are only illuminated if $\\cos i > 0$. Pixels where $\\cos i \\le 0$ are in self-shadow and must be excluded from analysis. These invalid pixels are flagged, for instance, by assigning them a `Not a Number` (`NaN`) value.\n\nFor all valid (illuminated) pixels, the observed reflectance $R_{\\text{obs}}$ is corrected to normalize for the topographic effect. The corrected reflectance, $R_{\\text{corr}}$, simulates the reflectance as if the surface were flat. The formula for this cosine correction is:\n$$ R_{\\text{corr}} = R_{\\text{obs}} \\cdot \\frac{\\cos \\theta_{z}}{\\cos i} $$\nThis correction is applied independently to each of the four input reflectance bands: pre-fire near-infrared ($R_{N,\\text{pre}}$), pre-fire short-wave infrared ($R_{S,\\text{pre}}$), post-fire near-infrared ($R_{N,\\text{post}}$), and post-fire short-wave infrared ($R_{S,\\text{post}}$). The reflectance values for shadowed pixels are set to `NaN`.\n\n**3. Burn Severity Index Calculation**\n\nWith topographically corrected reflectance values, we can compute spectral indices that are more robust to terrain effects. A normalized difference index, $I$, is calculated for both pre-fire and post-fire periods using the corrected near-infrared ($R_{N,\\text{corr}}$) and short-wave infrared ($R_{S,\\text{corr}}$) bands.\n$$ I_{\\text{pre}} = \\frac{R_{N,\\text{pre,corr}} - R_{S,\\text{pre,corr}}}{R_{N,\\text{pre,corr}} + R_{S,\\text{pre,corr}}} $$\n$$ I_{\\text{post}} = \\frac{R_{N,\\text{post,corr}} - R_{S,\\text{post,corr}}}{R_{N,\\text{post,corr}} + R_{S,\\text{post,corr}}} $$\nAny pixel where the denominator $(R_{N,\\text{corr}} + R_{S,\\text{corr}})$ is zero, or where input reflectances were `NaN`, will produce a `NaN` result, ensuring invalid data is propagated.\n\nFrom these indices, the change due to fire, $\\Delta I$, is computed:\n$$ \\Delta I = I_{\\text{pre}} - I_{\\text{post}} $$\nTo create the final burn-severity metric, $I_{R}$, this change is normalized relative to the pre-fire index magnitude. A small stabilizer, $\\epsilon = 10^{-6}$, is added to prevent division by zero or near-zero values.\n$$ I_{R} = \\frac{\\Delta I}{\\sqrt{|I_{\\text{pre}}| + \\epsilon}} $$\nThe resulting $I_R$ raster is the primary input for validation against field data.\n\n**4. Statistical Validation with Field Data**\n\nThe final stage is to validate the derived $I_R$ metric against the ground-truth Composite Burn Index (CBI) measurements. For each test case, we are provided with a set of plot locations, their corresponding CBI values, and a partition into calibration and validation subsets.\n\nFirst, the $I_R$ value and CBI value are extracted for each plot location. If any plot location corresponds to a pixel with a `NaN` value in the $I_R$ raster, that plot is discarded from the analysis as per the problem specification.\n\nNext, a simple linear regression model is fitted using the calibration subset of data:\n$$ \\widehat{\\mathrm{CBI}} = a \\cdot I_{R} + b $$\nThe coefficients $a$ (slope) and $b$ (intercept) are determined by ordinary least squares (OLS). This establishes a predictive relationship between our remote sensing metric and the field-measured burn severity.\n\nFinally, the performance of this model is evaluated on the hold-out validation subset. The fitted model is used to predict CBI values ($\\widehat{\\mathrm{CBI}}_{k}$) for each validation point $k$ based on its $I_{R,k}$ value. The Root Mean Squared Error (RMSE) is then calculated to quantify the prediction error:\n$$ \\mathrm{RMSE} = \\sqrt{\\frac{1}{n} \\sum_{k=1}^{n} (\\mathrm{CBI}_{k} - \\widehat{\\mathrm{CBI}}_{k})^{2}} $$\nwhere $n$ is the number of valid points in the validation set. This RMSE value serves as the final result for each case, providing a quantitative measure of the algorithm's accuracy. The entire procedure is repeated for each of the three test cases.", "answer": "```python\nimport numpy as np\nfrom scipy.stats import linregress\n\ndef solve():\n    \"\"\"\n    Main function to process all test cases and print the final results.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A\n        {\n            \"R_n_pre\": np.array([[0.45, 0.42, 0.40], [0.43, 0.41, 0.44], [0.46, 0.40, 0.42]]),\n            \"R_s_pre\": np.array([[0.14, 0.15, 0.16], [0.13, 0.17, 0.15], [0.14, 0.16, 0.13]]),\n            \"R_n_post\": np.array([[0.30, 0.28, 0.26], [0.27, 0.29, 0.25], [0.28, 0.26, 0.24]]),\n            \"R_s_post\": np.array([[0.22, 0.24, 0.23], [0.25, 0.22, 0.24], [0.26, 0.23, 0.25]]),\n            \"slope\": np.array([[15, 20, 10], [25, 15, 30], [12, 18, 22]]),\n            \"aspect\": np.array([[90, 120, 150], [135, 180, 210], [60, 75, 105]]),\n            \"solar_elev\": 45, \"solar_azim\": 135,\n            \"plot_cbi\": {(0, 0): 0.90, (0, 2): 0.80, (1, 1): 1.10, (1, 2): 1.20, (2, 0): 0.85, (2, 2): 1.00},\n            \"cal_locs\": [(0, 0), (0, 2), (1, 1), (2, 2)],\n            \"val_locs\": [(1, 2), (2, 0)],\n        },\n        # Case B\n        {\n            \"R_n_pre\": np.array([[0.50, 0.48, 0.47], [0.49, 0.51, 0.50], [0.48, 0.47, 0.49]]),\n            \"R_s_pre\": np.array([[0.12, 0.13, 0.12], [0.14, 0.12, 0.13], [0.15, 0.13, 0.14]]),\n            \"R_n_post\": np.array([[0.46, 0.45, 0.44], [0.45, 0.47, 0.46], [0.46, 0.44, 0.45]]),\n            \"R_s_post\": np.array([[0.13, 0.14, 0.13], [0.15, 0.13, 0.14], [0.16, 0.14, 0.15]]),\n            \"slope\": np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]]),\n            \"aspect\": np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]]),\n            \"solar_elev\": 60, \"solar_azim\": 150,\n            \"plot_cbi\": {(0, 0): 0.35, (0, 1): 0.40, (1, 0): 0.38, (1, 2): 0.45, (2, 1): 0.42, (2, 2): 0.50},\n            \"cal_locs\": [(0, 0), (0, 1), (1, 0), (2, 1)],\n            \"val_locs\": [(1, 2), (2, 2)],\n        },\n        # Case C\n        {\n            \"R_n_pre\": np.array([[0.43, 0.42, 0.20], [0.44, 0.46, 0.21], [0.45, 0.47, 0.22]]),\n            \"R_s_pre\": np.array([[0.18, 0.19, 0.20], [0.17, 0.18, 0.21], [0.19, 0.20, 0.22]]),\n            \"R_n_post\": np.array([[0.25, 0.24, 0.18], [0.26, 0.27, 0.19], [0.24, 0.26, 0.20]]),\n            \"R_s_post\": np.array([[0.28, 0.30, 0.22], [0.29, 0.27, 0.23], [0.30, 0.28, 0.24]]),\n            \"slope\": np.array([[50, 60, 70], [65, 75, 80], [55, 45, 70]]),\n            \"aspect\": np.array([[200, 220, 180], [200, 160, 140], [220, 200, 110]]),\n            \"solar_elev\": 30, \"solar_azim\": 200,\n            \"plot_cbi\": {(0, 0): 2.20, (0, 1): 2.00, (1, 0): 2.40, (1, 1): 1.80, (2, 1): 2.10, (2, 2): 1.60},\n            \"cal_locs\": [(0, 0), (0, 1), (1, 0), (1, 1)],\n            \"val_locs\": [(2, 1), (2, 2)],\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        rmse = process_case(case)\n        results.append(f\"{rmse:.4f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef process_case(case):\n    \"\"\"\n    Processes a single test case from data preparation to RMSE calculation.\n    \"\"\"\n    epsilon = 1e-6\n\n    # 1. Convert angles to radians and calculate solar zenith\n    slope_rad = np.deg2rad(case[\"slope\"])\n    aspect_rad = np.deg2rad(case[\"aspect\"])\n    solar_elev_rad = np.deg2rad(case[\"solar_elev\"])\n    solar_azim_rad = np.deg2rad(case[\"solar_azim\"])\n    solar_zenith_rad = np.pi / 2 - solar_elev_rad\n    \n    # 2. Illumination modeling\n    cos_i = (np.cos(slope_rad) * np.cos(solar_zenith_rad) +\n             np.sin(slope_rad) * np.sin(solar_zenith_rad) * np.cos(solar_azim_rad - aspect_rad))\n\n    # Mask for shadowed areas\n    valid_mask = cos_i > 0\n    \n    # 3. Topographic correction function\n    def correct_reflectance(r_obs):\n        r_corr = np.full_like(r_obs, np.nan, dtype=np.float64)\n        corr_factor = np.cos(solar_zenith_rad) / cos_i[valid_mask]\n        r_corr[valid_mask] = r_obs[valid_mask] * corr_factor\n        return r_corr\n\n    r_n_pre_corr = correct_reflectance(case[\"R_n_pre\"])\n    r_s_pre_corr = correct_reflectance(case[\"R_s_pre\"])\n    r_n_post_corr = correct_reflectance(case[\"R_n_post\"])\n    r_s_post_corr = correct_reflectance(case[\"R_s_post\"])\n\n    # 4. Normalized difference index calculation function\n    def calculate_ndi(r_n, r_s):\n        denominator = r_n + r_s\n        # Suppress division by zero warning, as we handle it\n        with np.errstate(divide='ignore', invalid='ignore'):\n            ndi = (r_n - r_s) / denominator\n        # Set to NaN where denominator is zero or inputs were NaN\n        ndi[denominator == 0] = np.nan\n        return ndi\n\n    i_pre = calculate_ndi(r_n_pre_corr, r_s_pre_corr)\n    i_post = calculate_ndi(r_n_post_corr, r_s_post_corr)\n\n    # 5. Burn severity metric calculation\n    delta_i = i_pre - i_post\n    # Suppress invalid value warning from sqrt of negative number\n    with np.errstate(invalid='ignore'):\n        i_r = delta_i / np.sqrt(np.abs(i_pre) + epsilon)\n\n    # 6. Extract data and perform validation\n    cal_ir, cal_cbi = [], []\n    for r, c in case[\"cal_locs\"]:\n        ir_val = i_r[r, c]\n        if not np.isnan(ir_val):\n            cal_ir.append(ir_val)\n            cal_cbi.append(case[\"plot_cbi\"][(r, c)])\n    \n    val_ir, val_cbi = [], []\n    for r, c in case[\"val_locs\"]:\n        ir_val = i_r[r, c]\n        if not np.isnan(ir_val):\n            val_ir.append(ir_val)\n            val_cbi.append(case[\"plot_cbi\"][(r, c)])\n\n    cal_ir, cal_cbi = np.array(cal_ir), np.array(cal_cbi)\n    val_ir, val_cbi = np.array(val_ir), np.array(val_cbi)\n\n    if len(cal_ir) < 2 or len(val_ir) == 0:\n        return np.nan # Not enough data to fit model or validate\n\n    # 7. Linear regression on calibration data\n    slope, intercept, _, _, _ = linregress(cal_ir, cal_cbi)\n    \n    # 8. Predict on validation data and compute RMSE\n    pred_cbi = slope * val_ir + intercept\n    rmse = np.sqrt(np.mean((val_cbi - pred_cbi)**2))\n    \n    return rmse\n\nif __name__ == '__main__':\n    solve()\n```", "id": "2527969"}, {"introduction": "A classified land cover map is a powerful tool, but it is a model of reality and inherently contains error; therefore, the areas reported by the map pixels are often biased. This practice [@problem_id:2527995] introduces the essential statistical methods to move beyond a simple accuracy percentage and produce scientifically defensible area estimates. Using a confusion matrix from a reference sample, you will apply the principles of stratified estimation to adjust mapped areas for classification error and, crucially, to quantify the uncertainty of those estimates by calculating standard errors and confidence intervals.", "problem": "A regional habitat map produced from satellite Earth observation and analyzed in a Geographic Information System (GIS) partitions a landscape of total area $A = 25000$ $\\mathrm{km^2}$ into $K = 4$ mapped classes: Forest, Agriculture, Wetland, and Urban. The mapped areas are $M_{\\text{Forest}} = 12000$ $\\mathrm{km^2}$, $M_{\\text{Agriculture}} = 9000$ $\\mathrm{km^2}$, $M_{\\text{Wetland}} = 3000$ $\\mathrm{km^2}$, and $M_{\\text{Urban}} = 1000$ $\\mathrm{km^2}$. An accuracy assessment employs stratified random sampling with the mapped class as the stratum. Within each stratum, an independent simple random sample of reference locations is interpreted from very high resolution imagery. The sample sizes by mapped class are $n_{\\text{Forest}} = 200$, $n_{\\text{Agriculture}} = 150$, $n_{\\text{Wetland}} = 120$, and $n_{\\text{Urban}} = 80$. The resulting confusion matrix of counts $n_{ij}$ (row $i$ = mapped class, column $j$ = reference class) is:\n- Mapped Forest: $n_{\\text{Forest},\\text{Forest}} = 178$, $n_{\\text{Forest},\\text{Agriculture}} = 12$, $n_{\\text{Forest},\\text{Wetland}} = 8$, $n_{\\text{Forest},\\text{Urban}} = 2$.\n- Mapped Agriculture: $n_{\\text{Agriculture},\\text{Forest}} = 9$, $n_{\\text{Agriculture},\\text{Agriculture}} = 126$, $n_{\\text{Agriculture},\\text{Wetland}} = 10$, $n_{\\text{Agriculture},\\text{Urban}} = 5$.\n- Mapped Wetland: $n_{\\text{Wetland},\\text{Forest}} = 6$, $n_{\\text{Wetland},\\text{Agriculture}} = 16$, $n_{\\text{Wetland},\\text{Wetland}} = 92$, $n_{\\text{Wetland},\\text{Urban}} = 6$.\n- Mapped Urban: $n_{\\text{Urban},\\text{Forest}} = 1$, $n_{\\text{Urban},\\text{Agriculture}} = 5$, $n_{\\text{Urban},\\text{Wetland}} = 3$, $n_{\\text{Urban},\\text{Urban}} = 71$.\n\nAssume the following design and modeling assumptions:\n- The mapped classes define $K$ strata with stratum weights $W_i = M_i / A$.\n- Within each stratum $i$, the sample is a simple random sample of size $n_i$, and reference labels for a given target reference class $j$ can be modeled as independent Bernoulli trials with success probability $p_{ij}$.\n- Strata are independent for variance calculations.\n- When constructing a two-sided confidence interval for an adjusted area using the normal approximation, use the standard normal quantile $z_{0.975} = 1.96$.\n\nFrom first principles of stratified random sampling, compute the adjusted area estimates and their standard errors for all $4$ reference classes. Then, focusing on the Wetland class, construct the $95\\%$ two-sided confidence interval for its adjusted area.\n\nReport as your final answer only the lower $95\\%$ confidence limit of the adjusted Wetland area, expressed in $\\mathrm{km^2}$ and rounded to four significant figures. Do not include units in your final answer box.", "solution": "The supplied problem is a well-posed and scientifically grounded exercise in the statistical analysis of remote sensing data, specifically the accuracy assessment of a categorical map using stratified random sampling. All provided data are internally consistent and sufficient for a unique solution. The problem is valid.\n\nThe objective is to estimate the true area of different land cover classes based on a sample of reference data, correcting for classification errors in the original map. This is achieved using the principles of stratified estimation, where the mapped classes serve as the strata.\n\nLet $K$ be the number of classes, which is $4$ in this problem. We denote the mapped classes (strata) by the index $i$ and the reference classes by the index $j$, where $i, j \\in \\{1, 2, 3, 4\\}$ corresponding to Forest, Agriculture, Wetland, and Urban.\n\nThe given data are:\nTotal landscape area, $A = 25000$ $\\mathrm{km^2}$.\nMapped area for stratum $i$, $M_i$.\n$M_1 = 12000$ $\\mathrm{km^2}$, $M_2 = 9000$ $\\mathrm{km^2}$, $M_3 = 3000$ $\\mathrm{km^2}$, $M_4 = 1000$ $\\mathrm{km^2}$.\nThe stratum weight for stratum $i$ is $W_i = \\frac{M_i}{A}$.\n$W_1 = \\frac{12000}{25000} = 0.48$, $W_2 = \\frac{9000}{25000} = 0.36$, $W_3 = \\frac{3000}{25000} = 0.12$, $W_4 = \\frac{1000}{25000} = 0.04$.\nThe sample size within each stratum $i$ is $n_i$.\n$n_1 = 200$, $n_2 = 150$, $n_3 = 120$, $n_4 = 80$.\nThe confusion matrix counts are given by $n_{ij}$, representing the number of sample points in stratum $i$ (mapped class) that were identified as class $j$ (reference class).\n\nThe first step is to estimate the proportion of each reference class $j$ within each mapped stratum $i$. This proportion, denoted $\\hat{p}_{ij}$, is estimated from the sample counts as:\n$$ \\hat{p}_{ij} = \\frac{n_{ij}}{n_i} $$\nThis term represents the estimated probability that a randomly chosen point within the area mapped as class $i$ truly belongs to class $j$.\n\nThe total area of reference class $j$, denoted $\\hat{A}_j$, is estimated by summing the area contributions from each stratum. The area contribution from stratum $i$ to reference class $j$ is the mapped area of stratum $i$, $M_i$, multiplied by the estimated proportion $\\hat{p}_{ij}$. Therefore, the total adjusted area for class $j$ is:\n$$ \\hat{A}_j = \\sum_{i=1}^{K} M_i \\hat{p}_{ij} $$\n\nWe now calculate the adjusted area for each of the $K=4$ reference classes.\n\nFor Forest ($j=1$):\n$$ \\hat{A}_{\\text{Forest}} = (12000 \\times \\frac{178}{200}) + (9000 \\times \\frac{9}{150}) + (3000 \\times \\frac{6}{120}) + (1000 \\times \\frac{1}{80}) $$\n$$ \\hat{A}_{\\text{Forest}} = 10680 + 540 + 150 + 12.5 = 11382.5 \\text{ km}^2 $$\n\nFor Agriculture ($j=2$):\n$$ \\hat{A}_{\\text{Agriculture}} = (12000 \\times \\frac{12}{200}) + (9000 \\times \\frac{126}{150}) + (3000 \\times \\frac{16}{120}) + (1000 \\times \\frac{5}{80}) $$\n$$ \\hat{A}_{\\text{Agriculture}} = 720 + 7560 + 400 + 62.5 = 8742.5 \\text{ km}^2 $$\n\nFor Wetland ($j=3$):\n$$ \\hat{A}_{\\text{Wetland}} = (12000 \\times \\frac{8}{200}) + (9000 \\times \\frac{10}{150}) + (3000 \\times \\frac{92}{120}) + (1000 \\times \\frac{3}{80}) $$\n$$ \\hat{A}_{\\text{Wetland}} = 480 + 600 + 2300 + 37.5 = 3417.5 \\text{ km}^2 $$\n\nFor Urban ($j=4$):\n$$ \\hat{A}_{\\text{Urban}} = (12000 \\times \\frac{2}{200}) + (9000 \\times \\frac{5}{150}) + (3000 \\times \\frac{6}{120}) + (1000 \\times \\frac{71}{80}) $$\n$$ \\hat{A}_{\\text{Urban}} = 120 + 300 + 150 + 887.5 = 1457.5 \\text{ km}^2 $$\n\nThe sum of the adjusted areas is $11382.5 + 8742.5 + 3417.5 + 1457.5 = 25000$ km$^2$, which correctly equals the total area $A$.\n\nNext, we calculate the standard error for each adjusted area estimate. Since the samples from different strata are independent, the variance of the total estimated area $\\hat{A}_j$ is the sum of the variances of the area estimates from each stratum.\n$$ V(\\hat{A}_j) = V\\left(\\sum_{i=1}^{K} M_i \\hat{p}_{ij}\\right) = \\sum_{i=1}^{K} M_i^2 V(\\hat{p}_{ij}) $$\nThe variance of the sample proportion $\\hat{p}_{ij}$ from a simple random sample is estimated as:\n$$ \\hat{V}(\\hat{p}_{ij}) = \\frac{\\hat{p}_{ij}(1-\\hat{p}_{ij})}{n_i - 1} $$\nThis uses the unbiased estimator for the variance of a Bernoulli trial process. Therefore, the estimated variance of the adjusted area is:\n$$ \\hat{V}(\\hat{A}_j) = \\sum_{i=1}^{K} M_i^2 \\frac{\\hat{p}_{ij}(1-\\hat{p}_{ij})}{n_i - 1} $$\nThe standard error is the square root of the variance: $SE(\\hat{A}_j) = \\sqrt{\\hat{V}(\\hat{A}_j)}$.\n\nWe are asked to focus on the Wetland class ($j=3$). We will calculate its standard error and confidence interval.\nThe adjusted area is $\\hat{A}_{\\text{Wetland}} = 3417.5$ km$^2$.\nThe variance calculation requires summing four terms, one for each stratum $i$:\nFor stratum $i=1$ (Forest): $M_1 = 12000$, $n_1 = 200$, $\\hat{p}_{13} = \\frac{8}{200} = 0.04$.\n$$ \\text{Term}_1 = (12000)^2 \\frac{0.04(1 - 0.04)}{200 - 1} = 144000000 \\times \\frac{0.0384}{199} \\approx 27803.015 $$\nFor stratum $i=2$ (Agriculture): $M_2 = 9000$, $n_2 = 150$, $\\hat{p}_{23} = \\frac{10}{150} = \\frac{1}{15}$.\n$$ \\text{Term}_2 = (9000)^2 \\frac{(\\frac{1}{15})(1 - \\frac{1}{15})}{150 - 1} = 81000000 \\times \\frac{14/225}{149} \\approx 33833.893 $$\nFor stratum $i=3$ (Wetland): $M_3 = 3000$, $n_3 = 120$, $\\hat{p}_{33} = \\frac{92}{120} = \\frac{23}{30}$.\n$$ \\text{Term}_3 = (3000)^2 \\frac{(\\frac{23}{30})(1 - \\frac{23}{30})}{120 - 1} = 9000000 \\times \\frac{161/900}{119} \\approx 13529.412 $$\nFor stratum $i=4$ (Urban): $M_4 = 1000$, $n_4 = 80$, $\\hat{p}_{43} = \\frac{3}{80} = 0.0375$.\n$$ \\text{Term}_4 = (1000)^2 \\frac{0.0375(1 - 0.0375)}{80 - 1} = 1000000 \\times \\frac{0.03609375}{79} \\approx 456.883 $$\n\nThe total estimated variance for the adjusted Wetland area is:\n$$ \\hat{V}(\\hat{A}_{\\text{Wetland}}) \\approx 27803.015 + 33833.893 + 13529.412 + 456.883 \\approx 75623.203 \\text{ (km}^2)^2 $$\nThe standard error is:\n$$ SE(\\hat{A}_{\\text{Wetland}}) = \\sqrt{75623.203} \\approx 274.99673 \\text{ km}^2 $$\n\nA $95\\%$ two-sided confidence interval for the adjusted area is constructed using the normal approximation:\n$$ CI = \\hat{A}_{\\text{Wetland}} \\pm z_{0.975} \\times SE(\\hat{A}_{\\text{Wetland}}) $$\nUsing the given value $z_{0.975} = 1.96$:\n$$ CI = 3417.5 \\pm 1.96 \\times 274.99673 $$\n$$ CI = 3417.5 \\pm 538.99359 $$\nThe lower confidence limit is:\n$$ LCL = 3417.5 - 538.99359 = 2878.50641 $$\nThe upper confidence limit is:\n$$ UCL = 3417.5 + 538.99359 = 3956.49359 $$\nThe problem asks for the lower $95\\%$ confidence limit of the adjusted Wetland area, rounded to four significant figures.\nThe value is $2878.50641$. The fifth significant digit is $5$, so we round the fourth digit up.\n$$ LCL \\approx 2879 \\text{ km}^2 $$\nThis completes the required calculation. For completeness, the standard errors for the other classes are approximately: $SE(\\hat{A}_{\\text{Forest}}) \\approx 324.52$ km$^2$, $SE(\\hat{A}_{\\text{Agriculture}}) \\approx 351.26$ km$^2$, and $SE(\\hat{A}_{\\text{Urban}}) \\approx 171.94$ km$^2$.", "answer": "$$\n\\boxed{2879}\n$$", "id": "2527995"}]}