{"hands_on_practices": [{"introduction": "The Intermediate Disturbance Hypothesis (IDH) is not just an abstract theory; it is a powerful tool for making qualitative predictions in managed and natural ecosystems. This first practice exercise [@problem_id:1889354] provides a classic scenario to apply the core logic of the IDH to an agricultural system. By treating different soil tilling methods as varying levels of disturbance, you can practice predicting their impact on local weed species richness and solidify your understanding of the fundamental unimodal relationship.", "problem": "An ecologist is investigating the impact of different farming practices on weed species richness in three large, adjacent, and initially identical cornfield plots. The primary difference between the plots is the soil tilling regime, which represents a form of physical disturbance to the weed community. The local weed community is composed of a variety of species that can be broadly categorized: some are excellent colonizers of open ground but are easily outcompeted in established vegetation, while others are strong competitors that, once established in a stable environment, can suppress and eliminate other species.\n\nThe three plots are managed as follows:\n- **Plot A (No-Till):** The soil is left completely undisturbed throughout the year.\n- **Plot B (Intensive-Till):** The soil is tilled frequently, before planting and several times during the growing season to control weeds.\n- **Plot C (Conservation-Till):** The soil is tilled only once, shortly before the corn is planted.\n\nAssuming the experiment runs for a sufficient number of years for the weed communities to stabilize under each regime, which of the following options correctly ranks the plots in order of their expected weed species richness, from lowest to highest?\n\nA. Plot B < Plot A < Plot C\n\nB. Plot A < Plot C < Plot B\n\nC. Plot C < Plot A < Plot B\n\nD. Plot A < Plot B < Plot C\n\nE. Plot B < Plot C < Plot A", "solution": "We model disturbance as a gradient with intensity/frequency denoted by $D$. Let $D_{A}$, $D_{B}$, and $D_{C}$ be the effective disturbance regimes for Plots A, B, and C, respectively. By management description, $D_{A}$ (no-till) is minimal, $D_{B}$ (intensive-till) is maximal, and $D_{C}$ (conservation-till) is intermediate. Thus,\n$$\nD_{A}<D_{C}<D_{B}.\n$$\nLet $S(D)$ denote weed species richness as a function of disturbance. By the Intermediate Disturbance Hypothesis (IDH), $S(D)$ is unimodal with a maximum at some intermediate $D^{*}$; equivalently,\n$$\n\\text{if }D<D^{*},\\ \\frac{dS}{dD}>0,\\quad \\text{and if }D>D^{*},\\ \\frac{dS}{dD}<0.\n$$\nMechanistically, at very low disturbance ($D$ small), strong competitors dominate and exclude inferior competitors via competitive exclusion, reducing richness. At very high disturbance ($D$ large), only rapidly colonizing, disturbance-tolerant species can persist, also yielding low richness. At intermediate disturbance, a coexistence of good colonizers and good competitors is maintained, producing maximal richness.\n\nApplying this to the three plots:\n- Plot A (No-Till): $D_{A}$ is very low, so richness is reduced by competitive exclusion; $S(D_{A})$ is low but above the extreme high-disturbance case.\n- Plot B (Intensive-Till): $D_{B}$ is very high, so richness is very low because only a small subset of disturbance-adapted colonizers persists; thus $S(D_{B})$ is the lowest.\n- Plot C (Conservation-Till): $D_{C}$ is intermediate, closest to $D^{*}$, so $S(D_{C})$ is the highest.\n\nTherefore, the ranking from lowest to highest expected species richness is\n$$\nS(D_{B})<S(D_{A})<S(D_{C}),\n$$\nwhich corresponds to Plot B < Plot A < Plot C, i.e., option A.", "answer": "$$\\boxed{A}$$", "id": "1889354"}, {"introduction": "A deep understanding of any scientific hypothesis requires moving beyond its core prediction to probe its underlying assumptions. The classic unimodal diversity-disturbance pattern is contingent on a life-history trade-off between competitive ability and disturbance tolerance. This thought experiment [@problem_id:1889374] challenges you to reason from first principles by presenting a hypothetical community that violates this trade-off, helping you develop a more robust, mechanistic grasp of when and why the IDH applies.", "problem": "In community ecology, the Intermediate Disturbance Hypothesis (IDH) provides a framework for understanding how species diversity relates to the level of environmental disturbance. The classic model assumes a trade-off where the most competitively dominant species are often the least tolerant to disturbance.\n\nConsider a hypothetical, isolated ecosystem of three perennial plant species (Species A, B, and C) competing for a single limiting resource. The competitive hierarchy is strict: Species A is the strongest competitor, Species B is intermediate, and Species C is the weakest. In this ecosystem, a novel set of traits has evolved that deviates from the classic trade-off assumption. The disturbance tolerance of the species is as follows:\n- **Species A (Competitive Dominant):** High tolerance to disturbance.\n- **Species B (Intermediate Competitor):** Low tolerance to disturbance.\n- **Species C (Weakest Competitor):** High tolerance to disturbance.\n\nBased on the principles of disturbance and competitive exclusion, predict the shape of the curve representing species diversity (measured as species richness) as a function of increasing disturbance frequency and intensity, from zero disturbance to an extreme level that no species can survive.\n\nWhich of the following descriptions best characterizes the predicted relationship?\n\nA. Diversity will be low at low disturbance levels, then increase to a higher stable plateau across intermediate and high disturbance levels, before declining to zero at extreme disturbance levels.\n\nB. Diversity will be low at both low and high disturbance levels, peaking at an intermediate disturbance level, forming a classic unimodal (hump-shaped) curve.\n\nC. Diversity will be highest at the lowest disturbance levels and will show a bimodal pattern, with a second, smaller peak at high disturbance levels.\n\nD. Diversity will be highest at zero disturbance and will monotonically decrease as disturbance increases.\n\nE. Diversity will be low at zero disturbance and will monotonically increase as disturbance increases, until it drops to zero at extreme disturbance levels.", "solution": "Let $D$ denote the disturbance frequency/intensity along a gradient $0 \\leq D \\leq D_{\\text{ext}}$, where $D_{\\text{ext}}$ is an extreme level at which no species can survive. Let $S(D)$ denote species richness (species diversity as species count) at disturbance level $D$.\n\nPrinciples used:\n- Competitive exclusion: With a strict competitive hierarchy and no stabilizing mechanisms, the strongest competitor excludes others at equilibrium when disturbances are absent or insufficient to counter competitive dominance.\n- Disturbance-mediated persistence: Disturbance can prevent the dominant competitor from completely excluding weaker competitors if the affected species are sufficiently tolerant to disturbance; species with low tolerance are disproportionately filtered out as $D$ increases.\n\nGiven trait configuration:\n- Species A (strong competitor) has high disturbance tolerance.\n- Species B (intermediate competitor) has low disturbance tolerance.\n- Species C (weak competitor) has high disturbance tolerance.\n\nStep-by-step reasoning across the gradient $D$:\n1) At $D=0$ (no disturbance), strict competitive hierarchy implies competitive exclusion by the strongest competitor. Therefore, $S(0)=1$ with only Species A persisting at equilibrium.\n\n2) For small $D>0$, because Species A is highly tolerant, disturbance imposes little reduction on A’s ability to dominate. Species B is low-tolerance and thus is disproportionately harmed by even modest disturbance, while Species C is high-tolerance but remains competitively inferior to A. Occasional gaps created by disturbance are rapidly reoccupied by A due to its high tolerance and competitive superiority; thus C cannot maintain a positive long-term growth rate when rare against A under low $D$. Hence, $S(D)$ remains low (effectively $S(D)=1$) for small $D$.\n\n3) As $D$ increases to intermediate levels, there exists a threshold $D_{AC}$ at which disturbance sufficiently limits A’s capacity to achieve complete exclusion everywhere, while both A and C (being high-tolerance) maintain positive growth in the disturbed regime. This enables coexistence of A and C via disturbance-mediated mechanisms (e.g., spatial or temporal niche opportunities created by disturbance that both can exploit, with A’s dominance checked sufficiently to permit C’s persistence). Species B, being low-tolerance, cannot persist as $D$ rises and is filtered out. Therefore, for $D$ in an intermediate range $[D_{AC}, D_{2})$, $S(D)=2$ (A and C).\n\n4) As $D$ increases further toward high but sub-extreme levels, both A and C remain high-tolerance and can continue to persist. Competitive exclusion of B is reinforced by its low tolerance. Thus $S(D)$ remains at a plateau of $2$ across a broad range of intermediate-to-high $D$.\n\n5) At extreme disturbance $D_{\\text{ext}}$, mortality exceeds the tolerance of even A and C, and no species can survive. Hence $S(D_{\\text{ext}})=0$, and $S(D)$ declines to $0$ near $D_{\\text{ext}}$.\n\nPutting these together, $S(D)$ is low at low $D$ (dominated by A alone), increases to a higher plateau (coexistence of A and C) across intermediate and high $D$, and then falls to zero only at extreme $D$ where no species survive. This matches a curve that is low at low disturbance, rises to a stable elevated plateau over intermediate-to-high disturbance, and drops to zero at the extreme. Among the options, this is described by A, not by a unimodal hump (B), not by maximal diversity at zero disturbance (D), not by a bimodal pattern with a high initial peak (C), and not by a strictly monotonically increasing relationship up to near-extreme (E), because the predicted pattern includes a broad plateau rather than continual increase.", "answer": "$$\\boxed{A}$$", "id": "1889374"}, {"introduction": "Translating ecological concepts into testable, quantitative predictions is a cornerstone of modern environmental science. This advanced practice [@problem_id:2537636] guides you through the process of analyzing a formal, mechanistic model of the Intermediate Disturbance Hypothesis. By implementing a sensitivity analysis, you will gain hands-on experience in using computational methods to determine which ecological parameters most strongly influence biodiversity outcomes, a critical skill for prioritizing data collection in real-world research.", "problem": "You are tasked with designing and implementing a program that conducts a local sensitivity analysis of a mechanistic formulation of the Intermediate Disturbance Hypothesis (IDH) to identify which parameters most strongly affect the location and the height of the species richness peak, and to prioritize data collection accordingly. The program must operate purely on the mathematical specification below and must not rely on any external data.\n\nFundamental ecological base and model specification: Use the steady-state occupancy formulation from colonization–extinction balance. Let the expected species richness be $S(D; \\boldsymbol{\\theta}) = P \\, p^{\\ast}(D)$, where $P$ is the size of the regional species pool and $p^{\\ast}(D)$ is the steady-state occupancy probability at disturbance level $D$. Assume that $p^{\\ast}(D)$ is given by the ratio of a disturbance-dependent colonization rate $c(D)$ to the sum of colonization and extinction rates, $c(D) + e(D)$, that is, $p^{\\ast}(D) = \\dfrac{c(D)}{c(D) + e(D)}$. Model the disturbance dependence of colonization and extinction as saturating functions:\n- $c(D) = m + \\alpha \\, \\dfrac{D}{D + K_c}$,\n- $e(D) = \\mu + \\beta \\, \\dfrac{D}{D + K_e}$.\n\nAll parameters are strictly positive: $P, m, \\alpha, K_c, \\mu, \\beta, K_e \\in \\mathbb{R}_{>0}$. The disturbance variable $D$ is a nonnegative, dimensionless control variable. This formulation is scientifically grounded in the widely used colonization–extinction balance with disturbance-modulated rates and yields a hump-shaped richness–disturbance relationship for appropriate parameter combinations.\n\nDefinitions of analysis targets:\n- The peak location $D^{\\ast}$ is the value of $D$ that maximizes $S(D; \\boldsymbol{\\theta})$ over a closed, bounded interval $[0, D_{\\max}]$.\n- The peak height $S^{\\ast}$ is the corresponding maximal richness, $S^{\\ast} = \\max_{D \\in [0, D_{\\max}]} S(D; \\boldsymbol{\\theta})$.\n\nOptimization details to implement:\n- Evaluate $S(D; \\boldsymbol{\\theta})$ on a uniform grid of $N_D$ points over $[0, D_{\\max}]$ (inclusive of both endpoints).\n- Identify the index of the maximum via an exhaustive search (argmax). If there are ties, select the smallest $D$ that achieves the maximum (i.e., the leftmost maximizer on the grid).\n- Return $D^{\\ast}$ as the grid value at the selected index and $S^{\\ast}$ as the associated richness.\n\nSensitivity analysis to implement:\n- For each scalar output $Y \\in \\{D^{\\ast}, S^{\\ast}\\}$ and for each parameter $\\theta_i \\in \\boldsymbol{\\theta} = [P, m, \\alpha, K_c, \\mu, \\beta, K_e]$, compute a local, central-difference, normalized sensitivity (elasticity) coefficient around the baseline $\\boldsymbol{\\theta}$:\n  $$s_i^{(Y)} = \\left|\\frac{Y(\\boldsymbol{\\theta}^{+}) - Y(\\boldsymbol{\\theta}^{-})}{2 \\, \\varepsilon \\, Y(\\boldsymbol{\\theta})}\\right|,$$\n  where $\\boldsymbol{\\theta}^{\\pm}$ equals $\\boldsymbol{\\theta}$ except for the $i$-th component, which is scaled multiplicatively as $\\theta_i^{\\pm} = \\theta_i \\, (1 \\pm \\varepsilon)$ with $\\varepsilon \\in \\mathbb{R}_{>0}$ small.\n- If $Y(\\boldsymbol{\\theta}) = 0$, instead compute the unnormalized central-difference sensitivity:\n  $$\\tilde{s}_i^{(Y)} = \\left|\\frac{Y(\\boldsymbol{\\theta}^{+}) - Y(\\boldsymbol{\\theta}^{-})}{2 \\, \\varepsilon}\\right|.$$\n- Rank parameters for each $Y$ by descending sensitivity value. Break ties using an absolute tolerance $\\tau$ by preferring the smaller index if $|s_i^{(Y)} - s_j^{(Y)}| \\le \\tau$ (or the corresponding unnormalized values when $Y = 0$). Use the parameter index ordering defined below.\n\nParameter indexing:\n- The parameter vector is ordered as $\\boldsymbol{\\theta} = [\\theta_0, \\theta_1, \\theta_2, \\theta_3, \\theta_4, \\theta_5, \\theta_6] = [P, m, \\alpha, K_c, \\mu, \\beta, K_e]$.\n- Report rankings as lists of integers corresponding to these indices.\n\nNumerical and formatting requirements:\n- Use the same uniform $D$ grid and the same $(D_{\\max}, N_D)$ when recomputing $Y(\\boldsymbol{\\theta}^{\\pm})$ for sensitivity calculations, so that changes in $Y$ are solely due to parameter perturbations.\n- Use a symmetric relative perturbation size $\\varepsilon$ for all parameters.\n- Use $\\tau = 10^{-12}$ for tie breaking.\n- Express all floating-point outputs rounded to six decimal places.\n- No physical units are required since $D$ is dimensionless and all rates enter as dimensionless ratios.\n\nTest suite:\nYour program must compute results for each of the following four test cases. Each test case is defined by the tuple $(P, m, \\alpha, K_c, \\mu, \\beta, K_e, D_{\\max}, N_D, \\varepsilon)$:\n\n1. Baseline hump-shaped case:\n   - $(P, m, \\alpha, K_c, \\mu, \\beta, K_e, D_{\\max}, N_D, \\varepsilon) = (50.0, 0.2, 1.2, 0.5, 0.05, 2.5, 1.0, 10.0, 10001, 0.01)$.\n\n2. Peak shifted to higher disturbance:\n   - $(P, m, \\alpha, K_c, \\mu, \\beta, K_e, D_{\\max}, N_D, \\varepsilon) = (80.0, 0.1, 0.3, 1.0, 0.05, 1.5, 2.0, 10.0, 10001, 0.01)$.\n\n3. Edge case with maximum at boundary (low disturbance favored):\n   - $(P, m, \\alpha, K_c, \\mu, \\beta, K_e, D_{\\max}, N_D, \\varepsilon) = (40.0, 0.1, 0.05, 2.0, 0.08, 0.5, 0.5, 10.0, 10001, 0.01)$.\n\n4. Balanced responses with sharp intermediate peak:\n   - $(P, m, \\alpha, K_c, \\mu, \\beta, K_e, D_{\\max}, N_D, \\varepsilon) = (60.0, 0.15, 0.8, 0.2, 0.07, 0.9, 0.3, 10.0, 10001, 0.01)$.\n\nRequired final output format:\n- For each test case, produce a list with four elements: $[D^{\\ast}, S^{\\ast}, \\text{rank\\_D\\_list}, \\text{rank\\_S\\_list}]$, where $D^{\\ast}$ and $S^{\\ast}$ are floats (rounded to six decimals), and each ranking is a list of integers in descending order of sensitivity.\n- Aggregate the results from all four test cases into a single list in the same order as given above.\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, e.g., a JSON-like single line string:\n  \"[$[D^{\\ast}_1,S^{\\ast}_1,[...],[...]]$, $[D^{\\ast}_2,S^{\\ast}_2,[...],[...]]$, $[D^{\\ast}_3,S^{\\ast}_3,[...],[...]]$, $[D^{\\ast}_4,S^{\\ast}_4,[...],[...]]$]\".", "solution": "The problem requires a local sensitivity analysis of a mechanistic model of the Intermediate Disturbance Hypothesis (IDH). The objective is to determine which model parameters most significantly influence the location and height of the peak in the species richness-disturbance relationship. The analysis is based purely on the provided mathematical formulation and numerical procedures.\n\nThe problem is scientifically and mathematically well-defined. It is based on a standard colonization-extinction model from theoretical ecology. All components of the model, the analysis targets, and the numerical methods are specified with sufficient precision to permit a unique and verifiable solution. The problem is self-contained, consistent, and requires a non-trivial implementation of numerical optimization and sensitivity analysis. Therefore, the problem is deemed valid and a full solution will be provided.\n\nThe solution is designed based on the following principles and methods:\n\n**1. Model Formulation**\nThe core of the problem is the relationship between species richness, $S$, and the level of environmental disturbance, $D$. This is given by:\n$$S(D; \\boldsymbol{\\theta}) = P \\cdot p^{\\ast}(D)$$\nwhere $P$ is the size of the regional species pool, and $p^{\\ast}(D)$ is the steady-state occupancy probability of a site at disturbance level $D$. The vector $\\boldsymbol{\\theta}$ represents the set of all model parameters.\n\nThe occupancy probability $p^{\\ast}(D)$ arises from the balance between colonization and extinction rates, defined as:\n$$p^{\\ast}(D) = \\frac{c(D)}{c(D) + e(D)}$$\nThe colonization rate, $c(D)$, and extinction rate, $e(D)$, are modeled as functions of disturbance $D$:\n$$c(D) = m + \\alpha \\frac{D}{D + K_c}$$\n$$e(D) = \\mu + \\beta \\frac{D}{D + K_e}$$\nHere, $m$ and $\\mu$ are the baseline colonization and extinction rates, respectively, in the absence of disturbance ($D = 0$). The parameters $\\alpha$ and $\\beta$ control the maximum increase in these rates due to disturbance, while $K_c$ and $K_e$ are half-saturation constants that determine how quickly the rates respond to increasing $D$. The complete parameter vector is $\\boldsymbol{\\theta} = [P, m, \\alpha, K_c, \\mu, \\beta, K_e]$. All parameters are strictly positive real numbers ($\\mathbb{R}_{>0}$), which ensures that the rates $c(D)$ and $e(D)$ are always positive for non-negative disturbance $D \\ge 0$, and thus the denominator $c(D) + e(D)$ is never zero.\n\n**2. Numerical Optimization**\nThe analysis targets are the peak location $D^{\\ast}$ and peak height $S^{\\ast}$ of the species richness curve. These are defined as:\n$$S^{\\ast} = \\max_{D \\in [0, D_{\\max}]} S(D; \\boldsymbol{\\theta})$$\n$$D^{\\ast} = \\arg\\max_{D \\in [0, D_{\\max}]} S(D; \\boldsymbol{\\theta})$$\nTo find these values numerically, the continuous domain $[0, D_{\\max}]$ is discretized into a uniform grid of $N_D$ points. An exhaustive search is then performed on this grid. The function $S(D)$ is evaluated at each grid point, and the maximum value is identified. The corresponding disturbance value $D$ and richness value $S$ are taken as $D^{\\ast}$ and $S^{\\ast}$. If multiple grid points yield the same maximum richness, the one corresponding to the smallest disturbance level $D$ is chosen, ensuring a unique solution for $D^{\\ast}$.\n\n**3. Sensitivity Analysis**\nA local sensitivity analysis is conducted to quantify the influence of each parameter $\\theta_i$ on the outputs $Y \\in \\{D^{\\ast}, S^{\\ast}\\}$. The sensitivity is measured by a normalized, central-difference coefficient, which approximates the elasticity:\n$$s_i^{(Y)} = \\left|\\frac{Y(\\boldsymbol{\\theta}^{+}) - Y(\\boldsymbol{\\theta}^{-})}{2 \\varepsilon Y(\\boldsymbol{\\theta})}\\right|$$\nHere, $\\boldsymbol{\\theta}$ is the baseline parameter vector, and $\\boldsymbol{\\theta}^{\\pm}$ are perturbed vectors where the $i$-th parameter is multiplicatively scaled: $\\theta_i^{\\pm} = \\theta_i (1 \\pm \\varepsilon)$. The term $\\varepsilon$ is a small, positive relative perturbation size. This formula measures the fractional change in the output $Y$ for a fractional change in the input parameter $\\theta_i$.\n\nA special case is defined for when the baseline output $Y(\\boldsymbol{\\theta})$ is zero, to avoid division by zero. In this situation, an unnormalized sensitivity is calculated:\n$$\\tilde{s}_i^{(Y)} = \\left|\\frac{Y(\\boldsymbol{\\theta}^{+}) - Y(\\boldsymbol{\\theta}^{-})}{2 \\varepsilon}\\right|$$\nThis could occur for $D^{\\ast}$ if the maximum richness is at $D=0$. Since all parameters are positive, $c(D)>0$ and $P>0$, so $S(D)>0$ for all $D \\geq 0$, meaning $S^{\\ast}$ can never be zero.\n\n**4. Parameter Ranking**\nFor each output, $D^{\\ast}$ and $S^{\\ast}$, the parameters are ranked in descending order of their sensitivity coefficients. A tie-breaking rule is specified to handle cases where sensitivities are very close. If the absolute difference between two sensitivity values, $|s_i^{(Y)} - s_j^{(Y)}|$, is less than or equal to a tolerance $\\tau = 10^{-12}$, the parameter with the smaller index (e.g., $i < j$ in the ordered vector $\\boldsymbol{\\theta}$) is ranked higher.\n\n**5. Algorithmic Design**\nThe implementation translates these steps into a computational workflow.\n1.  A primary function iterates through the provided test cases.\n2.  For each case, a helper function (`calculate_outputs`) is defined to compute $S(D)$ over the disturbance grid and find $D^{\\ast}$ and $S^{\\ast}$ for a given parameter vector. This function leverages vectorized operations for efficiency.\n3.  The baseline values $D^{\\ast}(\\boldsymbol{\\theta})$ and $S^{\\ast}(\\boldsymbol{\\theta})$ are computed.\n4.  A loop iterates through each of the $7$ parameters. In each iteration, the parameter is perturbed up and down by $\\varepsilon$, the `calculate_outputs` function is called for each perturbed vector, and the sensitivity coefficient is computed using the appropriate formula.\n5.  After computing all $7$ sensitivity coefficients for $D^{\\ast}$ and $S^{\\ast}$, they are stored as tuples of (value, index).\n6.  A custom comparison function, implementing the specified ranking and tie-breaking logic, is used to sort the lists of sensitivities. The parameter indices are then extracted to form the final rank lists.\n7.  The final results for each test case—$D^{\\ast}$, $S^{\\ast}$, and the two rank lists—are formatted into a string as specified, with floating-point numbers rounded to six decimal places.\n8.  The results from all test cases are aggregated into a single comma-separated list enclosed in brackets for the final output.", "answer": "```python\nimport numpy as np\nfrom functools import cmp_to_key\n\ndef solve():\n    \"\"\"\n    Main function to conduct sensitivity analysis for the IDH model\n    for a suite of test cases.\n    \"\"\"\n    # Test cases defined by:\n    # (P, m, alpha, K_c, mu, beta, K_e, D_max, N_D, epsilon)\n    test_cases = [\n        # 1. Baseline hump-shaped case\n        (50.0, 0.2, 1.2, 0.5, 0.05, 2.5, 1.0, 10.0, 10001, 0.01),\n        # 2. Peak shifted to higher disturbance\n        (80.0, 0.1, 0.3, 1.0, 0.05, 1.5, 2.0, 10.0, 10001, 0.01),\n        # 3. Edge case with maximum at boundary (low disturbance favored)\n        (40.0, 0.1, 0.05, 2.0, 0.08, 0.5, 0.5, 10.0, 10001, 0.01),\n        # 4. Balanced responses with sharp intermediate peak\n        (60.0, 0.15, 0.8, 0.2, 0.07, 0.9, 0.3, 10.0, 10001, 0.01),\n    ]\n\n    all_results_str = []\n    tau = 1e-12\n\n    def calculate_outputs(params, D_grid):\n        \"\"\"\n        Calculates D* and S* for a given parameter set and disturbance grid.\n        \n        Args:\n            params (list or np.ndarray): Parameter vector [P, m, alpha, K_c, mu, beta, K_e].\n            D_grid (np.ndarray): Array of disturbance values.\n\n        Returns:\n            tuple: (D_star, S_star)\n        \"\"\"\n        P, m, alpha, K_c, mu, beta, K_e = params\n        D = D_grid\n\n        # Handle potential division by zero if D = -K_c or -K_e which is not\n        # possible since D >= 0 and parameters are positive.\n        c_D = m + alpha * D / (D + K_c)\n        e_D = mu + beta * D / (D + K_e)\n        \n        # Denominator c_D + e_D is always positive because all parameters are positive.\n        p_star = c_D / (c_D + e_D)\n        S_vals = P * p_star\n        \n        # np.argmax returns the index of the first occurrence of the maximum.\n        max_idx = np.argmax(S_vals)\n        D_star = D_grid[max_idx]\n        S_star = S_vals[max_idx]\n        \n        return D_star, S_star\n\n    def compare_sens(item1, item2):\n        \"\"\"\n        Custom comparator for sorting sensitivities according to problem specification.\n        Sorts by sensitivity descending, breaking ties by index ascending.\n        \"\"\"\n        s1, idx1 = item1\n        s2, idx2 = item2\n        \n        if abs(s1 - s2) > tau:\n            return -1 if s1 > s2 else 1\n        else: # Tie-breaking\n            return -1 if idx1 < idx2 else 1\n\n    for case in test_cases:\n        P, m, alpha, K_c, mu, beta, K_e, D_max, N_D, epsilon = case\n        base_params = [P, m, alpha, K_c, mu, beta, K_e]\n        \n        D_grid = np.linspace(0, D_max, N_D)\n        \n        # 1. Calculate baseline outputs\n        D_star_base, S_star_base = calculate_outputs(base_params, D_grid)\n\n        sensitivities_D = []\n        sensitivities_S = []\n\n        # 2. Perform sensitivity analysis for each parameter\n        for i in range(len(base_params)):\n            # Perturb parameter i\n            params_plus = list(base_params)\n            params_minus = list(base_params)\n            \n            params_plus[i] *= (1 + epsilon)\n            params_minus[i] *= (1 - epsilon)\n\n            # Calculate outputs for perturbed parameters\n            D_star_p, S_star_p = calculate_outputs(params_plus, D_grid)\n            D_star_m, S_star_m = calculate_outputs(params_minus, D_grid)\n\n            # Calculate sensitivity for D*\n            if D_star_base == 0:\n                sens_D = abs((D_star_p - D_star_m) / (2 * epsilon))\n            else:\n                sens_D = abs((D_star_p - D_star_m) / (2 * epsilon * D_star_base))\n            sensitivities_D.append((sens_D, i))\n\n            # Calculate sensitivity for S*\n            # S_star_base is guaranteed to be > 0 given problem constraints\n            sens_S = abs((S_star_p - S_star_m) / (2 * epsilon * S_star_base))\n            sensitivities_S.append((sens_S, i))\n\n        # 3. Rank parameters\n        sensitivities_D.sort(key=cmp_to_key(compare_sens))\n        sensitivities_S.sort(key=cmp_to_key(compare_sens))\n\n        rank_D_list = [item[1] for item in sensitivities_D]\n        rank_S_list = [item[1] for item in sensitivities_S]\n\n        # 4. Format results\n        d_str = f\"{D_star_base:.6f}\"\n        s_str = f\"{S_star_base:.6f}\"\n        rank_d_str = f\"[{','.join(map(str, rank_D_list))}]\"\n        rank_s_str = f\"[{','.join(map(str, rank_S_list))}]\"\n        \n        result_str = f\"[{d_str},{s_str},{rank_d_str},{rank_s_str}]\"\n        all_results_str.append(result_str)\n\n    # Final print statement in the exact required format\n    print(f\"[{','.join(all_results_str)}]\")\n\nsolve()\n```", "id": "2537636"}]}