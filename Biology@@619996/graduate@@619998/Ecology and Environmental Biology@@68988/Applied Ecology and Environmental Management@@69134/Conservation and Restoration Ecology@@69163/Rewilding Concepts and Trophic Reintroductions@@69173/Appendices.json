{"hands_on_practices": [{"introduction": "Understanding the dynamics of a rewilding project begins with the fundamental interaction between predator and prey. This exercise guides you through the derivation of a predator's functional response, which describes the per capita rate of consumption as a function of prey density, $N$. By building both a Type II (saturating) and a Type III (sigmoidal) response from first principles based on a predator's time budget, you will gain a deeper appreciation for how underlying behavioral assumptions shape population dynamics [@problem_id:2529170].", "problem": "A rewilding project reintroduces a solitary apex predator into a fenced savanna reserve where medium-sized ungulate prey are present. The management team wants to anticipate how the predator’s per capita predation rate changes if the prey density doubles during the first year following reintroduction. Assume a single predator and a single focal prey, homogeneous mixing, and that the functional response emerges from a time-budget of the predator’s foraging.\n\nUse the following fundamental base and assumptions:\n- The predator alternates between searching and handling, with a constant handling time per prey of $h$.\n- While searching, encounters that lead to successful attacks occur at a rate proportional to prey density $N$ with coefficient $a$.\n- For a saturating response (Type II), treat the encounter coefficient as constant in $N$.\n- For an accelerating-at-low-density response (Type III), assume that attack efficiency increases linearly with $N$ near low density so that the effective encounter coefficient is proportional to $N$.\n\nStarting only from these principles and the definition that the per capita intake rate is the number of prey consumed per predator per unit time, derive the per capita intake rate as a function of $N$ for both the Type II and Type III cases. Let the initial prey density be $N_0 = 1$ animals per square kilometer, the encounter coefficient be $a = 0.1$ square kilometers per predator per day, and the handling time be $h = 1$ day per prey.\n\nDefine the fold-change in per capita predation rate due to doubling prey density as $F \\equiv \\frac{f(2N_0)}{f(N_0)}$. Compute $F_{\\mathrm{II}}$ for the Type II case and $F_{\\mathrm{III}}$ for the Type III case, and then compute the single summary quantity\n$$R \\equiv \\frac{F_{\\mathrm{II}}}{F_{\\mathrm{III}}}.$$\nProvide your final answer for $R$ as a single dimensionless number. If an exact value is available, report it exactly; otherwise, round your answer to four significant figures.", "solution": "The problem asks for the derivation and comparison of two types of predator functional responses, based on a time-budget model, and the calculation of a specific ratio describing their behavior as prey density doubles. The problem is scientifically grounded in established ecological theory and is well-posed. We shall proceed with the derivation from first principles.\n\nLet $T$ be the total time available for foraging. This time is partitioned into time spent searching for prey, $T_s$, and time spent handling prey, $T_h$. The time budget is thus given by the equation:\n$$T = T_s + T_h$$\nThe total number of prey items consumed during this time, $N_e$, is by definition related to the per capita intake rate, $f(N)$, by $N_e = f(N)T$. The total handling time is the product of the number of prey consumed and the handling time per prey item, $h$:\n$$T_h = N_e h = f(N) T h$$\nSubstituting this into the time budget equation allows us to express the search time as:\n$$T = T_s + f(N) T h \\implies T_s = T(1 - f(N)h)$$\nThe number of prey consumed, $N_e$, must also equal the number of successful encounters that occur during the search time, $T_s$. The rate of these encounters per unit of search time, which we denote as the attack rate $\\mathcal{A}(N)$, is a function of the prey density $N$. Thus:\n$$N_e = \\mathcal{A}(N) T_s$$\nBy equating the two expressions for $N_e$, we have:\n$$f(N)T = \\mathcal{A}(N) T_s$$\nSubstituting the expression for $T_s$:\n$$f(N)T = \\mathcal{A}(N) T(1 - f(N)h)$$\nAssuming $T > 0$, we can divide by $T$ to obtain a general relationship between the intake rate $f(N)$ and the attack rate $\\mathcal{A}(N)$:\n$$f(N) = \\mathcal{A}(N) (1 - f(N)h) = \\mathcal{A}(N) - \\mathcal{A}(N) f(N) h$$\nSolving for $f(N)$:\n$$f(N) (1 + \\mathcal{A}(N)h) = \\mathcal{A}(N) \\implies f(N) = \\frac{\\mathcal{A}(N)}{1 + h\\mathcal{A}(N)}$$\nWe now apply this general formula to the two specified cases.\n\nFor the Type II functional response, the problem states that successful attacks during search occur at a rate proportional to prey density $N$ with a constant coefficient $a$. This corresponds to an attack rate per unit search time of:\n$$\\mathcal{A}(N) = aN$$\nSubstituting this into the general formula for $f(N)$ yields the Holling Type II functional response:\n$$f_{\\mathrm{II}}(N) = \\frac{aN}{1 + ahN}$$\n\nFor the Type III functional response, the problem states that the effective encounter coefficient is proportional to $N$. In our framework, the attack rate is $\\mathcal{A}(N) = a_{\\mathrm{eff}}(N) \\cdot N$, where $a_{\\mathrm{eff}}(N)$ is the encounter coefficient. The condition is that $a_{\\mathrm{eff}}(N)$ is proportional to $N$, so we write $a_{\\mathrm{eff}}(N) = cN$ for some constant of proportionality $c$. This leads to an attack rate per unit search time with quadratic dependence on $N$:\n$$\\mathcal{A}(N) = cN^2$$\nSubstituting this into the general formula for $f(N)$ yields the Holling Type III functional response:\n$$f_{\\mathrm{III}}(N) = \\frac{cN^2}{1 + chN^2}$$\nThe problem provides a value for the parameter $a$ but not for $c$. To make the two models comparable and the problem well-defined, we must establish a relationship between $c$ and $a$. A logical assumption is to calibrate the Type III model such that at the initial, reference prey density $N_0$, the effective encounter coefficient $a_{\\mathrm{eff}}(N_0)$ is equal to the constant coefficient $a$ from the Type II model.\n$$a_{\\mathrm{eff}}(N_0) = cN_0 = a \\implies c = \\frac{a}{N_0}$$\nThis sets the attack efficiency of the two models to be equivalent at the initial density. Substituting this expression for $c$ into the Type III equation gives:\n$$f_{\\mathrm{III}}(N) = \\frac{(a/N_0)N^2}{1 + (a/N_0)hN^2}$$\nNow we compute the fold-change $F \\equiv \\frac{f(2N_0)}{f(N_0)}$ for both cases.\n\nFor the Type II response:\n$$F_{\\mathrm{II}} = \\frac{f_{\\mathrm{II}}(2N_0)}{f_{\\mathrm{II}}(N_0)} = \\frac{\\frac{a(2N_0)}{1 + ah(2N_0)}} {\\frac{aN_0}{1 + ahN_0}} = \\frac{2aN_0}{1 + 2ahN_0} \\cdot \\frac{1 + ahN_0}{aN_0} = 2 \\frac{1 + ahN_0}{1 + 2ahN_0}$$\n\nFor the Type III response:\n$$F_{\\mathrm{III}} = \\frac{f_{\\mathrm{III}}(2N_0)}{f_{\\mathrm{III}}(N_0)} = \\frac{\\frac{c(2N_0)^2}{1 + ch(2N_0)^2}} {\\frac{c(N_0)^2}{1 + ch(N_0)^2}} = \\frac{4cN_0^2}{1 + 4chN_0^2} \\cdot \\frac{1 + chN_0^2}{cN_0^2} = 4 \\frac{1 + chN_0^2}{1 + 4chN_0^2}$$\nNow, we substitute $c=a/N_0$ into the expression for $F_{\\mathrm{III}}$:\n$$F_{\\mathrm{III}} = 4 \\frac{1 + (a/N_0)hN_0^2}{1 + 4(a/N_0)hN_0^2} = 4 \\frac{1 + ahN_0}{1 + 4ahN_0}$$\n\nFinally, we compute the ratio $R \\equiv \\frac{F_{\\mathrm{II}}}{F_{\\mathrm{III}}}$:\n$$R = \\frac{2 \\frac{1 + ahN_0}{1 + 2ahN_0}}{4 \\frac{1 + ahN_0}{1 + 4ahN_0}} = \\frac{2}{4} \\cdot \\frac{1 + ahN_0}{1 + 2ahN_0} \\cdot \\frac{1 + 4ahN_0}{1 + ahN_0}$$\nThe term $(1 + ahN_0)$ cancels out:\n$$R = \\frac{1}{2} \\cdot \\frac{1 + 4ahN_0}{1 + 2ahN_0}$$\nThis is the general symbolic expression for the required ratio. Now we substitute the given numerical values: $a = 0.1$, $h = 1$, and $N_0 = 1$. The units are consistent, making the product $ahN_0$ dimensionless:\n$$ahN_0 = (0.1 \\text{ km}^2/\\text{day}) \\cdot (1 \\text{ day}/\\text{prey}) \\cdot (1 \\text{ prey}/\\text{km}^2) = 0.1$$\nSubstituting this value into the expression for $R$:\n$$R = \\frac{1}{2} \\cdot \\frac{1 + 4(0.1)}{1 + 2(0.1)} = \\frac{1}{2} \\cdot \\frac{1 + 0.4}{1 + 0.2} = \\frac{1}{2} \\cdot \\frac{1.4}{1.2} = \\frac{1}{2} \\cdot \\frac{14}{12} = \\frac{1}{2} \\cdot \\frac{7}{6} = \\frac{7}{12}$$\nThe result is an exact rational number.", "answer": "$$\\boxed{\\frac{7}{12}}$$", "id": "2529170"}, {"introduction": "The reintroduction of apex predators can restore ecosystems not just by reducing herbivore numbers, but also by changing their behavior—a concept known as the \"ecology of fear.\" This practice provides a quantitative framework to disentangle these two pathways: the density-mediated and behaviorally-mediated effects of a trophic cascade. By analyzing hypothetical field data, you will learn to implement a standard decomposition that attributes vegetation recovery to its underlying drivers, a critical skill for evaluating the success of rewilding interventions [@problem_id:2529126].", "problem": "A rewilding program has reintroduced a top predator into a temperate ecosystem, altering herbivore behavior and density. You are given pre- and post-reintroduction field estimates of herbivore density, the fraction of time spent vigilant, and the per-capita bite rate when actively browsing. Assume the following foundational principles:\n\n- Time-budget identity: The fraction of time available for feeding is the complement of vigilance, so the effective per-capita browsing rate is the active bite rate multiplied by the fraction of time not vigilant.\n- Herbivory mass-action: Total browsing pressure equals herbivore density times the per-capita browsing rate.\n- Short-interval vegetation response: Over a short, fixed monitoring interval, vegetation recovery is proportional to the reduction in total browsing pressure, with a constant of proportionality that is the same for pre- and post-reintroduction conditions and therefore cancels when taking ratios.\n\nUse these to construct a decomposition of vegetation recovery into a density-mediated component (due solely to the change in herbivore density) and a behaviorally mediated component (due solely to the change in vigilance and active bite rate, holding post-reintroduction density constant). Estimate the proportion of vegetation recovery attributable to behaviorally mediated effects as the ratio of the behaviorally mediated component to the total recovery. If the total recovery is zero or negative, report the proportion as $0$.\n\nLet $N_{\\text{pre}}$ and $N_{\\text{post}}$ denote herbivore density in $\\text{individuals}\\,\\text{ha}^{-1}$ before and after reintroduction, respectively. Let $v_{\\text{pre}}$ and $v_{\\text{post}}$ denote the fraction of time vigilant (unitless, decimal) before and after reintroduction, respectively. Let $b_{\\text{pre}}$ and $b_{\\text{post}}$ denote the per-capita bite rate when actively browsing in $\\text{g}\\,\\text{h}^{-1}\\,\\text{ind}^{-1}$ before and after reintroduction, respectively. The effective per-capita browsing rates are then $I_{\\text{pre}} = (1 - v_{\\text{pre}})\\,b_{\\text{pre}}$ and $I_{\\text{post}} = (1 - v_{\\text{post}})\\,b_{\\text{post}}$, and total browsing pressures are $B_{\\text{pre}} = N_{\\text{pre}} I_{\\text{pre}}$ and $B_{\\text{post}} = N_{\\text{post}} I_{\\text{post}}$. The density-only counterfactual browsing pressure, holding behavior at pre-reintroduction values but density at post-reintroduction values, is $B_{\\text{dens}} = N_{\\text{post}} I_{\\text{pre}}$. Use these quantities to compute the requested proportion.\n\nImplement a program that, for each test case below, computes the behaviorally mediated proportion as a decimal rounded to six digits after the decimal point. Units must be used exactly as specified above.\n\nTest suite (each case is $(N_{\\text{pre}}, v_{\\text{pre}}, b_{\\text{pre}}, N_{\\text{post}}, v_{\\text{post}}, b_{\\text{post}})$):\n- Case A: $(30, 0.1, 120, 20, 0.25, 110)$ where $30$ and $20$ are in $\\text{individuals}\\,\\text{ha}^{-1}$, $0.1$ and $0.25$ are fractions, and $120$ and $110$ are in $\\text{g}\\,\\text{h}^{-1}\\,\\text{ind}^{-1}$.\n- Case B: $(40, 0.2, 100, 25, 0.2, 100)$.\n- Case C: $(30, 0.05, 130, 30, 0.3, 120)$.\n- Case D: $(20, 0.1, 100, 25, 0.05, 95)$.\n- Case E: $(50, 0.1, 150, 40, 0.3, 170)$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., \"[0.123456,0.000000,1.000000]\"), in the order of the test cases A through E. All outputs must be decimals rounded to six digits after the decimal point without units.", "solution": "The problem as stated is scientifically grounded, well-posed, and objective. It is based on established ecological principles of trophic cascades, specifically the distinction between density-mediated and behaviorally-mediated indirect effects of predators on plant communities. All variables, constants, and relationships are clearly defined, allowing for a unique and meaningful solution. The problem is valid.\n\nWe are tasked with decomposing the total change in herbivory, following a predator reintroduction, into components driven by changes in herbivore density versus changes in herbivore behavior. The proportion of the total effect attributable to behavior is the desired quantity.\n\nLet us define the state variables:\n- $N_{\\text{pre}}$ and $N_{\\text{post}}$: herbivore density [individuals $\\cdot$ ha$^{-1}$] pre- and post-reintroduction.\n- $v_{\\text{pre}}$ and $v_{\\text{post}}$: fraction of time spent vigilant [unitless] pre- and post-reintroduction.\n- $b_{\\text{pre}}$ and $b_{\\text{post}}$: per-capita bite rate during active browsing [g $\\cdot$ h$^{-1}$ $\\cdot$ ind$^{-1}$] pre- and post-reintroduction.\n\nFrom the foundational principles provided, we formalize the system dynamics. The fraction of time available for feeding is $(1 - v)$. Therefore, the effective per-capita browsing rate, $I$, is the product of the active bite rate and the time available for browsing.\n$$I = (1 - v) \\cdot b$$\nThe rates for the pre- and post-reintroduction periods are:\n$$I_{\\text{pre}} = (1 - v_{\\text{pre}}) \\cdot b_{\\text{pre}}$$\n$$I_{\\text{post}} = (1 - v_{\\text{post}}) \\cdot b_{\\text{post}}$$\n\nThe total browsing pressure, $B$, which represents the total biomass of vegetation consumed per unit area per unit time, is given by the mass-action law: the product of herbivore density and the effective per-capita browsing rate.\n$$B = N \\cdot I$$\nThus, the total browsing pressures pre- and post-reintroduction are:\n$$B_{\\text{pre}} = N_{\\text{pre}} \\cdot I_{\\text{pre}}$$\n$$B_{\\text{post}} = N_{\\text{post}} \\cdot I_{\\text{post}}$$\n\nVegetation recovery is stated to be proportional to the reduction in total browsing pressure. This total reduction, which we denote $\\Delta B_{\\text{total}}$, is:\n$$\\Delta B_{\\text{total}} = B_{\\text{pre}} - B_{\\text{post}}$$\n\nTo decompose this total effect, we introduce a counterfactual scenario. We define a hypothetical browsing pressure, $B_{\\text{dens}}$, which would occur if herbivore density changed to its post-reintroduction level ($N_{\\text{post}}$) but behavior remained at its pre-reintroduction state (characterized by $I_{\\text{pre}}$).\n$$B_{\\text{dens}} = N_{\\text{post}} \\cdot I_{\\text{pre}}$$\n\nUsing this counterfactual, we partition the total change in browsing pressure by adding and subtracting $B_{\\text{dens}}$:\n$$\\Delta B_{\\text{total}} = (B_{\\text{pre}} - B_{\\text{dens}}) + (B_{\\text{dens}} - B_{\\text{post}})$$\n\nThe first term, $\\Delta B_{\\text{density}} = B_{\\text{pre}} - B_{\\text{dens}}$, represents the density-mediated component of the change. It isolates the effect of the change in herbivore numbers alone, holding behavior constant.\n$$\\Delta B_{\\text{density}} = N_{\\text{pre}}I_{\\text{pre}} - N_{\\text{post}}I_{\\text{pre}} = (N_{\\text{pre}} - N_{\\text{post}})I_{\\text{pre}}$$\n\nThe second term, $\\Delta B_{\\text{behavior}} = B_{\\text{dens}} - B_{\\text{post}}$, represents the behaviorally-mediated component. It isolates the effect of the change in herbivore behavior (vigilance and bite rate), holding density constant at its final, post-reintroduction level.\n$$\\Delta B_{\\text{behavior}} = N_{\\text{post}}I_{\\text{pre}} - N_{\\text{post}}I_{\\text{post}} = N_{\\text{post}}(I_{\\text{pre}} - I_{\\text{post}})$$\n\nThe proportion of vegetation recovery attributable to the behaviorally mediated effect, $P$, is the ratio of the behaviorally-mediated reduction in browsing to the total reduction.\n$$P = \\frac{\\Delta B_{\\text{behavior}}}{\\Delta B_{\\text{total}}} = \\frac{B_{\\text{dens}} - B_{\\text{post}}}{B_{\\text{pre}} - B_{\\text{post}}}$$\nSubstituting the full expressions:\n$$P = \\frac{N_{\\text{post}}((1 - v_{\\text{pre}})b_{\\text{pre}} - (1 - v_{\\text{post}})b_{\\text{post}})}{N_{\\text{pre}}(1 - v_{\\text{pre}})b_{\\text{pre}} - N_{\\text{post}}(1 - v_{\\text{post}})b_{\\text{post}}}$$\n\nA crucial condition is that if the total recovery is zero or negative (i.e., $\\Delta B_{\\text{total}} \\le 0$), the proportion is reported as $0$. This is ecologically sensible, as there is no \"recovery\" to attribute to any cause if browsing pressure has not decreased.\n\nLet us demonstrate the calculation for Case A: $(N_{\\text{pre}}=30, v_{\\text{pre}}=0.1, b_{\\text{pre}}=120, N_{\\text{post}}=20, v_{\\text{post}}=0.25, b_{\\text{post}}=110)$.\n1.  Calculate per-capita rates:\n    $I_{\\text{pre}} = (1 - 0.1) \\cdot 120 = 0.9 \\cdot 120 = 108$\n    $I_{\\text{post}} = (1 - 0.25) \\cdot 110 = 0.75 \\cdot 110 = 82.5$\n2.  Calculate total and counterfactual browsing pressures:\n    $B_{\\text{pre}} = 30 \\cdot 108 = 3240$\n    $B_{\\text{post}} = 20 \\cdot 82.5 = 1650$\n    $B_{\\text{dens}} = 20 \\cdot 108 = 2160$\n3.  Calculate total and behavioral reductions:\n    $\\Delta B_{\\text{total}} = 3240 - 1650 = 1590$. Since $1590 > 0$, we proceed.\n    $\\Delta B_{\\text{behavior}} = 2160 - 1650 = 510$\n4.  Calculate the proportion:\n    $P = \\frac{510}{1590} = \\frac{17}{53} \\approx 0.3207547...$\n    Rounded to six decimal places, the result is $0.320755$.\n\nThe same procedure is applied to all test cases to generate the final output.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the rewilding decomposition problem for a suite of test cases.\n    \"\"\"\n    # Test suite: each case is (N_pre, v_pre, b_pre, N_post, v_post, b_post)\n    test_cases = [\n        # Case A: (N_pre, v_pre, b_pre, N_post, v_post, b_post)\n        (30, 0.1, 120, 20, 0.25, 110),\n        # Case B\n        (40, 0.2, 100, 25, 0.2, 100),\n        # Case C\n        (30, 0.05, 130, 30, 0.3, 120),\n        # Case D\n        (20, 0.1, 100, 25, 0.05, 95),\n        # Case E\n        (50, 0.1, 150, 40, 0.3, 170),\n    ]\n\n    results = []\n    for case in test_cases:\n        n_pre, v_pre, b_pre, n_post, v_post, b_post = case\n\n        # Calculate effective per-capita browsing rates\n        # I = (1 - v) * b\n        i_pre = (1.0 - v_pre) * b_pre\n        i_post = (1.0 - v_post) * b_post\n\n        # Calculate total browsing pressures\n        # B = N * I\n        b_pre_total = n_pre * i_pre\n        b_post_total = n_post * i_post\n\n        # Calculate total reduction in browsing pressure (proportional to total recovery)\n        # delta_B_total = B_pre - B_post\n        delta_b_total = b_pre_total - b_post_total\n\n        # If total recovery is zero or negative, proportion is 0\n        if delta_b_total <= 0:\n            proportion = 0.0\n        else:\n            # Calculate the density-only counterfactual browsing pressure\n            # B_dens = N_post * I_pre\n            b_dens_counterfactual = n_post * i_pre\n\n            # Calculate the behaviorally mediated reduction in browsing pressure\n            # delta_B_behavior = B_dens - B_post\n            delta_b_behavior = b_dens_counterfactual - b_post_total\n\n            # Calculate the proportion of recovery attributable to behavior\n            # P = delta_B_behavior / delta_B_total\n            proportion = delta_b_behavior / delta_b_total\n        \n        # Format the result to six decimal places.\n        results.append(f\"{proportion:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n\n```", "id": "2529126"}, {"introduction": "The long-term success of a reintroduction often depends on more than just local habitat quality; it requires a connected landscape that allows for dispersal, gene flow, and access to resources. This exercise introduces the powerful analogy of circuit theory, a standard method in landscape ecology for modeling animal movement and connectivity. You will apply this framework to calculate how restoring a corridor reduces the \"effective resistance\" of the landscape, providing a quantitative tool for designing and prioritizing conservation actions aimed at reconnecting fragmented habitats [@problem_id:2529132].", "problem": "You are modeling landscape connectivity between two habitat patches under a rewilding intervention that restores a corridor. Using the well-established circuit theory analogy applied to ecological landscapes, each landcover class is assigned a resistance per unit length, and each alternative route between the patches is modeled as a series of segments whose resistances sum. Multiple routes between the same two patches behave as parallel pathways whose conductances add. Resistances per unit length are expressed in resistance units (RU) per kilometer, segment lengths are in kilometers, and effective resistance is in resistance units (RU).\n\nFundamental base:\n- In a series network, resistances add: if a path has segments with resistances $r_{1}, r_{2}, \\ldots, r_{m}$, the total path resistance is $R_{\\text{path}}=\\sum_{j=1}^{m} r_{j}$.\n- In a parallel network of independent paths, conductances add: if path resistances are $R_{1}, R_{2}, \\ldots, R_{n}$, the effective resistance between the two endpoints is\n$$\nR_{\\text{eff}}=\\left(\\sum_{i=1}^{n} \\frac{1}{R_{i}}\\right)^{-1}.\n$$\n- Segment resistance is proportional to length with proportionality given by the landcover class resistance: if segment $j$ belongs to class $c(j)$ with resistance per kilometer $k_{c(j)}$ and has length $L_{j}$ in kilometers, then\n$$\nr_{j} = k_{c(j)} \\cdot L_{j}.\n$$\n\nTask:\nWrite a program that, for each test case, computes the change in effective resistance caused by a restoration that either replaces the landcover class of specific segments within existing paths or adds a new path. Define the change as\n$$\n\\Delta R = R_{\\text{eff}}^{\\text{before}} - R_{\\text{eff}}^{\\text{after}},\n$$\nso that a positive value indicates an improvement (reduction) in effective resistance after restoration. All returned values must be expressed in resistance units (RU), rounded to six decimal places.\n\nInput specification for each test case (embedded in the program; no external input is required):\n- A mapping from landcover class names to resistance per kilometer values $k_{c}$ in RU/km.\n- A list of initial paths, where each path is a list of segments, and each segment is a tuple of the form (class-name, length-in-kilometers).\n- A list of restoration actions, each being either:\n  - A replacement action: (\"replace\", path-index, segment-index, new-class-name), which sets the specified segment’s class to the new class, or\n  - An addition action: (\"add_path\", [segments]), which appends a new path described by a list of segments to the set of parallel paths.\n\nComputation to perform per test case:\n1. Compute each initial path resistance $R_{i}^{\\text{before}}$ using $R_{i}^{\\text{before}}=\\sum_{j} k_{c(j)} L_{j}$.\n2. Compute $R_{\\text{eff}}^{\\text{before}}$ using $R_{\\text{eff}}^{\\text{before}}=\\left(\\sum_{i} \\frac{1}{R_{i}^{\\text{before}}}\\right)^{-1}$. If there is only one path, this reduces to $R_{\\text{eff}}^{\\text{before}}=R_{1}^{\\text{before}}$.\n3. Apply the restoration actions to obtain the modified set of paths.\n4. Compute $R_{\\text{eff}}^{\\text{after}}$ for the modified paths in the same way.\n5. Compute $\\Delta R = R_{\\text{eff}}^{\\text{before}} - R_{\\text{eff}}^{\\text{after}}$.\n\nUnits:\n- Resistances must be reported in resistance units (RU).\n- Segment lengths must be interpreted in kilometers.\n- Report $\\Delta R$ in RU, as decimal values rounded to exactly six decimal places.\n\nTest suite:\nProvide your program with the following four test cases. For each case, compute $\\Delta R$ as specified.\n\n- Test case $1$ (happy path, replacing a high-resistance segment within an existing path):\n  - Classes: {\"forest\": $1$, \"shrub\": $3$, \"agriculture\": $5$, \"urban\": $20$} (RU/km).\n  - Initial paths:\n    - Path A: [(\"forest\", $2.0$), (\"agriculture\", $1.0$)].\n    - Path B: [(\"shrub\", $1.5$), (\"forest\", $1.0$), (\"agriculture\", $0.5$)].\n  - Restoration actions:\n    - (\"replace\", $0$, $1$, \"forest\")  meaning replace the second segment of Path A from \"agriculture\" to \"forest\".\n\n- Test case $2$ (boundary case with a single initial path; restoration adds a new corridor as a new path in parallel):\n  - Classes: {\"forest\": $1$, \"grassland\": $2$, \"road\": $10$} (RU/km).\n  - Initial paths:\n    - Path A: [(\"road\", $0.8$), (\"grassland\", $1.2$)].\n  - Restoration actions:\n    - (\"add_path\", [(\"grassland\", $0.5$), (\"forest\", $0.7$)]).\n\n- Test case $3$ (multiple paths with moderate improvement by converting a high-resistance segment to a lower-resistance class):\n  - Classes: {\"wetland\": $4$, \"meadow\": $1.5$, \"cropland\": $6$, \"urban\": $25$} (RU/km).\n  - Initial paths:\n    - Path A: [(\"cropland\", $0.9$), (\"meadow\", $0.6$)].\n    - Path B: [(\"wetland\", $1.2$), (\"meadow\", $0.3$), (\"cropland\", $0.4$)].\n    - Path C: [(\"urban\", $0.2$), (\"meadow\", $1.0$)].\n  - Restoration actions:\n    - (\"replace\", $1$, $2$, \"meadow\") meaning replace the third segment of Path B from \"cropland\" to \"meadow\".\n\n- Test case $4$ (symmetry case where restoration equalizes two path resistances):\n  - Classes: {\"classA\": $2$, \"classB\": $2$, \"classC\": $5$} (RU/km).\n  - Initial paths:\n    - Path A: [(\"classA\", $1.0$), (\"classB\", $1.0$)].\n    - Path B: [(\"classB\", $1.5$), (\"classC\", $0.5$)].\n  - Restoration actions:\n    - (\"replace\", $1$, $1$, \"classB\") meaning replace the second segment of Path B from \"classC\" to \"classB\".\n\nFinal output format:\nYour program should produce a single line of output containing the four results as a comma-separated list enclosed in square brackets, with each value rounded to exactly six decimal places in RU, for example, \"[x1,x2,x3,x4]\".", "solution": "The problem statement is analyzed and found to be valid. It is scientifically grounded in the established ecological modeling technique of circuit theory, well-posed with a clear objective and sufficient data, and free from internal contradictions or ambiguities. I will therefore proceed with a complete solution.\n\nThe problem requires the computation of the change in effective landscape resistance, denoted $\\Delta R$, resulting from ecological restoration actions. This is framed within the analogy of electrical circuits, where landscapes are treated as resistive networks. The fundamental principles are as follows:\n\n1.  **Segment Resistance**: The resistance of a single, uniform segment of the landscape, denoted $r_j$, is directly proportional to its length $L_j$ and the specific resistance $k_{c(j)}$ of its landcover class $c(j)$. The governing equation is:\n    $$\n    r_{j} = k_{c(j)} \\cdot L_{j}\n    $$\n    Here, $L_j$ is in kilometers (km) and $k_{c(j)}$ is in resistance units per kilometer (RU/km), yielding $r_j$ in resistance units (RU).\n\n2.  **Path Resistance**: A complete path between two habitat patches is a sequence of segments. Analogous to resistors in series, the total resistance of a path, $R_{\\text{path}}$, is the sum of the resistances of its constituent segments:\n    $$\n    R_{\\text{path}} = \\sum_{j=1}^{m} r_{j}\n    $$\n    where the path consists of $m$ segments.\n\n3.  **Effective Resistance**: Multiple independent paths between the same two habitat patches are analogous to a parallel circuit. The total conductivity (the reciprocal of resistance) of the network is the sum of the individual path conductivities. The effective resistance, $R_{\\text{eff}}$, is the reciprocal of the total conductance:\n    $$\n    R_{\\text{eff}} = \\left(\\sum_{i=1}^{n} \\frac{1}{R_i}\\right)^{-1}\n    $$\n    where $R_i$ is the resistance of the $i$-th path among $n$ parallel paths. In the boundary case of a single path ($n=1$), this simplifies to $R_{\\text{eff}} = R_1$. A lower $R_{\\text{eff}}$ signifies better overall landscape connectivity.\n\n4.  **Change in Resistance**: The objective is to quantify the improvement in connectivity due to restoration. This is defined as the difference between the effective resistance before and after the intervention:\n    $$\n    \\Delta R = R_{\\text{eff}}^{\\text{before}} - R_{\\text{eff}}^{\\text{after}}\n    $$\n    A positive $\\Delta R$ indicates a reduction in resistance, corresponding to an ecological improvement.\n\nThe computational procedure involves implementing these principles. For each test case, we first calculate $R_{\\text{eff}}^{\\text{before}}$ using the initial path configuration. We then apply the specified restoration actions—either modifying a segment's landcover class or adding an entirely new path—to produce a new path configuration. Subsequently, we calculate $R_{\\text{eff}}^{\\text{after}}$ for this modified landscape. Finally, we compute their difference, $\\Delta R$, and round the result to six decimal places.\n\nLet us illustrate with Test Case 1:\n-   **Classes**: `{\"forest\": 1, \"shrub\": 3, \"agriculture\": 5, \"urban\": 20}` RU/km.\n-   **Initial paths**:\n    -   Path A: `[(\"forest\", 2.0), (\"agriculture\", 1.0)]`\n    -   Path B: `[(\"shrub\", 1.5), (\"forest\", 1.0), (\"agriculture\", 0.5)]`\n-   **Restoration**: Replace segment $1$ of path $0$ (Path A) with class \"forest\".\n\nFirst, we compute the resistances before restoration:\n-   $R_{A}^{\\text{before}} = (1 \\, \\text{RU/km} \\times 2.0 \\, \\text{km}) + (5 \\, \\text{RU/km} \\times 1.0 \\, \\text{km}) = 2.0 + 5.0 = 7.0$ RU.\n-   $R_{B}^{\\text{before}} = (3 \\, \\text{RU/km} \\times 1.5 \\, \\text{km}) + (1 \\, \\text{RU/km} \\times 1.0 \\, \\text{km}) + (5 \\, \\text{RU/km} \\times 0.5 \\, \\text{km}) = 4.5 + 1.0 + 2.5 = 8.0$ RU.\n\nThe effective resistance before restoration is:\n$$\nR_{\\text{eff}}^{\\text{before}} = \\left(\\frac{1}{7.0} + \\frac{1}{8.0}\\right)^{-1} = \\left(\\frac{8 + 7}{56}\\right)^{-1} = \\left(\\frac{15}{56}\\right)^{-1} = \\frac{56}{15} \\approx 3.733333 \\, \\text{RU}\n$$\n\nNext, we apply the restoration action. The second segment of Path A, `(\"agriculture\", 1.0)`, is changed to `(\"forest\", 1.0)`. Path B is unchanged.\n-   Path A (after): `[(\"forest\", 2.0), (\"forest\", 1.0)]`\n-   $R_{A}^{\\text{after}} = (1 \\, \\text{RU/km} \\times 2.0 \\, \\text{km}) + (1 \\, \\text{RU/km} \\times 1.0 \\, \\text{km}) = 2.0 + 1.0 = 3.0$ RU.\n-   $R_{B}^{\\text{after}} = R_{B}^{\\text{before}} = 8.0$ RU.\n\nThe effective resistance after restoration is:\n$$\nR_{\\text{eff}}^{\\text{after}} = \\left(\\frac{1}{3.0} + \\frac{1}{8.0}\\right)^{-1} = \\left(\\frac{8 + 3}{24}\\right)^{-1} = \\left(\\frac{11}{24}\\right)^{-1} = \\frac{24}{11} \\approx 2.181818 \\, \\text{RU}\n$$\n\nFinally, the change in resistance is calculated:\n$$\n\\Delta R = R_{\\text{eff}}^{\\text{before}} - R_{\\text{eff}}^{\\text{after}} \\approx 3.733333 - 2.181818 = 1.551515 \\, \\text{RU}\n$$\nAfter rounding to six decimal places, $\\Delta R = 1.551515$ RU. This same procedure is systematically applied to all provided test cases.", "answer": "```python\nimport numpy as np\nimport copy\n\ndef solve():\n    \"\"\"\n    Solves the landscape connectivity problem for a suite of test cases.\n    \"\"\"\n    test_cases = [\n        {\n            \"classes\": {\"forest\": 1, \"shrub\": 3, \"agriculture\": 5, \"urban\": 20},\n            \"initial_paths\": [\n                [(\"forest\", 2.0), (\"agriculture\", 1.0)],\n                [(\"shrub\", 1.5), (\"forest\", 1.0), (\"agriculture\", 0.5)],\n            ],\n            \"restoration_actions\": [\n                (\"replace\", 0, 1, \"forest\")\n            ],\n        },\n        {\n            \"classes\": {\"forest\": 1, \"grassland\": 2, \"road\": 10},\n            \"initial_paths\": [\n                [(\"road\", 0.8), (\"grassland\", 1.2)]\n            ],\n            \"restoration_actions\": [\n                (\"add_path\", [(\"grassland\", 0.5), (\"forest\", 0.7)])\n            ],\n        },\n        {\n            \"classes\": {\"wetland\": 4, \"meadow\": 1.5, \"cropland\": 6, \"urban\": 25},\n            \"initial_paths\": [\n                [(\"cropland\", 0.9), (\"meadow\", 0.6)],\n                [(\"wetland\", 1.2), (\"meadow\", 0.3), (\"cropland\", 0.4)],\n                [(\"urban\", 0.2), (\"meadow\", 1.0)],\n            ],\n            \"restoration_actions\": [\n                (\"replace\", 1, 2, \"meadow\")\n            ],\n        },\n        {\n            \"classes\": {\"classA\": 2, \"classB\": 2, \"classC\": 5},\n            \"initial_paths\": [\n                [(\"classA\", 1.0), (\"classB\", 1.0)],\n                [(\"classB\", 1.5), (\"classC\", 0.5)],\n            ],\n            \"restoration_actions\": [\n                (\"replace\", 1, 1, \"classB\")\n            ],\n        },\n    ]\n\n    results = []\n    for case in test_cases:\n        classes = case[\"classes\"]\n        initial_paths = case[\"initial_paths\"]\n        restoration_actions = case[\"restoration_actions\"]\n\n        r_eff_before = _calculate_effective_resistance(initial_paths, classes)\n\n        paths_after = copy.deepcopy(initial_paths)\n        for action in restoration_actions:\n            action_type = action[0]\n            if action_type == \"replace\":\n                _, path_idx, seg_idx, new_class = action\n                # Segments are tuples (class, length). Create a new tuple.\n                original_length = paths_after[path_idx][seg_idx][1]\n                paths_after[path_idx][seg_idx] = (new_class, original_length)\n            elif action_type == \"add_path\":\n                _, new_path_segments = action\n                paths_after.append(new_path_segments)\n\n        r_eff_after = _calculate_effective_resistance(paths_after, classes)\n        \n        delta_r = r_eff_before - r_eff_after\n        results.append(f\"{delta_r:.6f}\")\n    \n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\ndef _calculate_effective_resistance(paths, classes):\n    \"\"\"\n    Calculates the effective resistance of a set of parallel landscape paths.\n    \"\"\"\n    if not paths:\n        return np.inf\n\n    path_resistances = []\n    for path in paths:\n        total_path_resistance = 0.0\n        for segment in path:\n            class_name, length = segment\n            resistance_per_km = classes[class_name]\n            total_path_resistance += resistance_per_km * length\n        path_resistances.append(total_path_resistance)\n\n    # Check for any path with zero resistance, which shorts the circuit\n    if any(r == 0 for r in path_resistances):\n        return 0.0\n\n    # Sum of conductances (1/R)\n    total_conductance = sum(1.0 / r for r in path_resistances)\n    \n    if total_conductance == 0:\n        return np.inf\n\n    return 1.0 / total_conductance\n\nsolve()\n```", "id": "2529132"}]}