{"hands_on_practices": [{"introduction": "We begin our practical exploration with a familiar tool: the deterministic logistic growth model. While fundamental to population ecology for describing density-dependent regulation, its application in risk assessment has critical limitations. This first exercise [@problem_id:2524078] challenges you to calculate a population's trajectory using this model and then critically evaluate its suitability for Population Viability Analysis, revealing why PVA is an inherently stochastic discipline.", "problem": "A closed, single-species population is regulated by density dependence and experiences no immigration or emigration. Let the initial abundance be $N_0 = 200$ individuals, the density-independent finite rate of increase be $\\lambda = 1.05$ per year, and the carrying capacity be $K = 1000$ individuals. Assume births and deaths occur continuously in time and that density regulation operates through the canonical continuous-time logistic mechanism with carrying capacity $K$ and an instantaneous per-capita rate $r$ consistent with the given $\\lambda$ under density independence. \n\nUsing only these premises and standard demographic definitions, derive from first principles an expression for the deterministic abundance $N(t)$ and compute the deterministic expected abundance at time $t = 20$ years. Report the numerical value for $N(20)$ in individuals, rounding to four significant figures.\n\nThen, briefly justify whether using this deterministic trajectory as a baseline in a population viability analysis (PVA) without any estimates of demographic or environmental variance is appropriate, and why or why not. Your justification will not be graded for a numerical value, but your computed abundance must be reported as specified above.", "solution": "The problem statement is scientifically grounded, well-posed, objective, and contains sufficient information for a unique solution. It is a standard problem in theoretical population ecology. Therefore, the problem is deemed valid and a full solution will be provided.\n\nThe problem describes a population whose dynamics follow the continuous-time logistic growth model. The governing differential equation for the population abundance, $N(t)$, as a function of time $t$, is:\n$$\n\\frac{dN}{dt} = rN\\left(1 - \\frac{N}{K}\\right)\n$$\nwhere $r$ is the intrinsic per-capita rate of increase and $K$ is the carrying capacity.\n\nFirst, we must determine the value of $r$ from the given density-independent finite rate of increase, $\\lambda$. The density-independent scenario corresponds to the limit where density effects are negligible, i.e., $N \\to 0$. In this limit, the logistic equation simplifies to the equation for exponential growth:\n$$\n\\frac{dN}{dt} = rN\n$$\nThe solution to this linear ordinary differential equation is $N(t) = N_0 \\exp(rt)$. The finite rate of increase, $\\lambda$, is defined as the factor by which the population size changes over one time unit, so $\\lambda = \\frac{N(t+1)}{N(t)}$. For the continuous exponential model, this becomes:\n$$\n\\lambda = \\frac{N_0 \\exp(r(t+1))}{N_0 \\exp(rt)} = \\frac{\\exp(rt)\\exp(r)}{\\exp(rt)} = \\exp(r)\n$$\nThus, the relationship between the finite rate $\\lambda$ and the instantaneous rate $r$ is $r = \\ln(\\lambda)$. Given $\\lambda = 1.05$, we have:\n$$\nr = \\ln(1.05)\n$$\n\nNext, we derive the expression for $N(t)$ by solving the logistic differential equation using the method of separation of variables:\n$$\n\\frac{dN}{N\\left(1 - \\frac{N}{K}\\right)} = r dt\n$$\nTo integrate the left-hand side, we use partial fraction decomposition. First, rewrite the term:\n$$\n\\frac{1}{N\\left(1 - \\frac{N}{K}\\right)} = \\frac{K}{N(K - N)}\n$$\nWe set up the decomposition:\n$$\n\\frac{K}{N(K - N)} = \\frac{A}{N} + \\frac{B}{K - N}\n$$\nMultiplying by $N(K-N)$ yields $K = A(K-N) + BN$.\nFor $N=0$, we get $K = A(K)$, so $A=1$.\nFor $N=K$, we get $K = B(K)$, so $B=1$.\nThus, the differential equation becomes:\n$$\n\\left(\\frac{1}{N} + \\frac{1}{K - N}\\right)dN = r dt\n$$\nIntegrating both sides gives:\n$$\n\\int \\left(\\frac{1}{N} + \\frac{1}{K - N}\\right)dN = \\int r dt\n$$\n$$\n\\ln|N| - \\ln|K - N| = rt + C\n$$\nwhere $C$ is the constant of integration. Since the population starts at $N_0 < K$ and is growing ($\\lambda > 1$), $N(t)$ will remain between $0$ and $K$, so we can drop the absolute value signs:\n$$\n\\ln\\left(\\frac{N}{K - N}\\right) = rt + C\n$$\nWe use the initial condition $N(0) = N_0$ to find $C$:\n$$\n\\ln\\left(\\frac{N_0}{K - N_0}\\right) = r(0) + C \\implies C = \\ln\\left(\\frac{N_0}{K - N_0}\\right)\n$$\nSubstituting $C$ back into the equation:\n$$\n\\ln\\left(\\frac{N(t)}{K - N(t)}\\right) = rt + \\ln\\left(\\frac{N_0}{K - N_0}\\right)\n$$\nTo solve for $N(t)$, we first exponentiate both sides:\n$$\n\\frac{N(t)}{K - N(t)} = \\exp\\left(rt + \\ln\\left(\\frac{N_0}{K - N_0}\\right)\\right) = \\left(\\frac{N_0}{K - N_0}\\right)\\exp(rt)\n$$\nLet's name the term on the right-hand side $f(t) = \\left(\\frac{N_0}{K-N_0}\\right)\\exp(rt)$ for simplicity. Then $N(t) = (K - N(t))f(t)$.\n$$\nN(t) = K f(t) - N(t)f(t)\n$$\n$$\nN(t) (1 + f(t)) = K f(t)\n$$\n$$\nN(t) = \\frac{K f(t)}{1 + f(t)} = \\frac{K}{1 + \\frac{1}{f(t)}}\n$$\nSubstituting back the expression for $f(t)$:\n$$\nN(t) = \\frac{K}{1 + \\left(\\frac{K - N_0}{N_0}\\right)\\exp(-rt)}\n$$\nThis is the general expression for deterministic logistic growth.\n\nNow we compute the abundance at $t = 20$ years using the given values: $N_0 = 200$, $K = 1000$, $\\lambda = 1.05$, and $t = 20$.\nFirst, the rate $r = \\ln(1.05)$.\n$$\nN(20) = \\frac{1000}{1 + \\left(\\frac{1000 - 200}{200}\\right)\\exp(-\\ln(1.05) \\times 20)}\n$$\n$$\nN(20) = \\frac{1000}{1 + \\left(\\frac{800}{200}\\right)\\exp(-20 \\ln(1.05))}\n$$\n$$\nN(20) = \\frac{1000}{1 + 4 \\exp(\\ln(1.05^{-20}))}\n$$\n$$\nN(20) = \\frac{1000}{1 + 4(1.05)^{-20}}\n$$\nCalculating the numerical value:\n$1.05^{20} \\approx 2.6532977$.\n$(1.05)^{-20} \\approx 0.37688948$.\n$$\nN(20) \\approx \\frac{1000}{1 + 4(0.37688948)} = \\frac{1000}{1 + 1.50755792} = \\frac{1000}{2.50755792} \\approx 398.7945\n$$\nRounding to four significant figures, the deterministic abundance at $t = 20$ years is $398.8$ individuals.\n\nFinally, we must justify whether this deterministic trajectory is appropriate as a baseline for a population viability analysis (PVA) without variance estimates. It is fundamentally inappropriate. The core purpose of a PVA is to estimate the probability of extinction, which is an inherently stochastic phenomenon. Extinction risk arises from random fluctuations, categorized as demographic stochasticity (chance events in individual survival and reproduction), environmental stochasticity (fluctuations in environmental conditions affecting all individuals), genetic stochasticity (e.g., inbreeding depression), and catastrophes. A deterministic model, by its very definition, contains no stochastic elements. It predicts a single, certain trajectory for the population. In this case, the deterministic trajectory approaches the carrying capacity $K=1000$, implying a zero probability of extinction. This is a biologically unrealistic conclusion, as even a population with a positive average growth rate can be driven to extinction by a sequence of unfavorable random events, especially when its size is small. A meaningful PVA absolutely requires the estimation and incorporation of variances (demographic and/or environmental) to simulate a distribution of possible future trajectories and thereby compute a non-trivial extinction probability. Using a deterministic model alone is misleading and defeats the purpose of viability analysis.", "answer": "$$\n\\boxed{398.8}\n$$", "id": "2524078"}, {"introduction": "Having established the necessity of stochastic models, we now turn to a foundational method for quantifying extinction risk: the Galton-Watson branching process. This model directly addresses demographic stochasticity by treating individual reproduction and survival as random events. By working through this practice [@problem_id:2524077], you will learn to calculate the ultimate probability of extinction and gain a deep intuition for why small populations with positive average growth rates can still be highly vulnerable to disappearing due to chance.", "problem": "Consider a time-homogeneous Galton–Watson branching process beginning with an initial number of founders $N_0 \\in \\{0,1,2,\\dots\\}$. Each individual in a generation produces a random number of offspring in the next generation, independently and identically distributed as a Poisson random variable with mean $m \\ge 0$. The ultimate extinction probability is the probability that the lineage eventually dies out (reaches zero population size at some finite or infinite time).\n\nUse the following fundamental basis:\n- The probability generating function (PGF) of the offspring distribution $X$ is $G(s) = \\mathbb{E}[s^X]$, for $s \\in [0,1]$.\n- For a Galton–Watson process started from a single founder ($N_0 = 1$), the ultimate extinction probability $q$ is the smallest fixed point of the PGF in $[0,1]$, that is, the smallest $q \\in [0,1]$ such that $q = G(q)$.\n- For $N_0 \\ge 1$ independent founders, the ultimate extinction probability is $q^{N_0}$.\n- The PGF of a Poisson distribution with mean $m$ is $G(s) = \\exp(m(s-1))$.\n\nTasks:\n1. Starting from the definitions above, derive the fixed-point equation that characterizes the ultimate extinction probability $q$ for a single founder under Poisson($m$) offspring.\n2. Explain the conditions under which there exists a nontrivial fixed point $q \\in [0,1)$ and when the only fixed point is $q=1$.\n3. Design a robust numerical method to solve for the smallest fixed point $q \\in [0,1]$ for a given $m$, and compute the ultimate extinction probability $q^{N_0}$ for the specified test suite below. Your method must correctly handle boundary cases such as $N_0 = 0$, $m = 0$, $m = 1$, and near-critical cases with $m$ just above $1$.\n4. Provide an interpretation of the magnitude of the extinction probability when $m$ is only slightly larger than $1$ (near-critical). Your interpretation should be grounded in the properties of branching processes and explain why substantial extinction risk can persist even when $m > 1$.\n\nTest suite:\n- Case A: $(N_0, m) = (10, 1.1)$\n- Case B: $(N_0, m) = (10, 0.9)$\n- Case C: $(N_0, m) = (10, 1.0)$\n- Case D: $(N_0, m) = (1, 2.0)$\n- Case E: $(N_0, m) = (2, 2.0)$\n- Case F: $(N_0, m) = (0, 1.1)$\n\nNumerical output requirements:\n- For each case, output the ultimate extinction probability as a real number in $[0,1]$, rounded to six decimal places.\n- Your program should produce a single line of output containing the results in the order A–F as a comma-separated list enclosed in square brackets, with no spaces. For example: \"[0.123456,0.234567,0.345678,0.456789,0.567890,0.678901]\".", "solution": "The problem as stated is subject to validation.\n\n**Step 1: Extraction of Givens**\n- Process: Time-homogeneous Galton–Watson branching process.\n- Initial Population: $N_0 \\in \\{0, 1, 2, \\dots\\}$.\n- Offspring Distribution: Independent and identically distributed Poisson random variable with mean $m \\ge 0$.\n- Ultimate Extinction Probability: Probability of the lineage reaching a population size of zero.\n- Probability Generating Function (PGF): $G(s) = \\mathbb{E}[s^X]$ for $s \\in [0,1]$.\n- Extinction Probability for $N_0 = 1$: Smallest fixed point $q \\in [0,1]$ of the PGF, satisfying $q = G(q)$.\n- Extinction Probability for $N_0 \\ge 1$: $q^{N_0}$.\n- PGF for Poisson($m$): $G(s) = \\exp(m(s-1))$.\n\n**Step 2: Validation of Givens**\nThe problem is scientifically grounded, drawing upon the established mathematical theory of Galton-Watson branching processes, a cornerstone of stochastic population dynamics. The premises, definitions, and constants are standard in this field. The problem is well-posed, providing all necessary information to determine a unique, meaningful solution for the specified parameters. The language used is objective, precise, and devoid of ambiguity or non-formalizable concepts. The problem does not violate any of the criteria for invalidity. It represents a standard, albeit comprehensive, exercise in applied probability.\n\n**Step 3: Verdict**\nThe problem is valid. A solution will be constructed.\n\n**Solution Derivation**\n\nThe solution will be developed by addressing the four tasks specified in the problem statement.\n\n**Task 1: Derivation of the Fixed-Point Equation**\n\nThe offspring distribution is a Poisson distribution with mean $m$. The probability generating function (PGF) for this distribution is given as $G(s) = \\exp(m(s-1))$.\n\nThe ultimate extinction probability for a lineage starting with a single founder, denoted by $q$, is the smallest non-negative root of the fixed-point equation $s = G(s)$ in the interval $[0,1]$.\n\nBy substituting the specific PGF for the Poisson distribution into this general equation, we obtain the fixed-point equation for this particular process:\n$$q = \\exp(m(q-1))$$\nThis is the transcendental equation that must be solved for $q$.\n\n**Task 2: Conditions for a Nontrivial Fixed Point**\n\nWe analyze the existence of solutions to the equation $s = G(s)$ in the interval $s \\in [0,1]$. Let us define a function $f(s) = G(s) - s$. We are looking for the roots of $f(s)=0$.\n\nThe function $G(s) = \\exp(m(s-1))$ is a convex function for all $s$, as its second derivative $G''(s) = m^2 \\exp(m(s-1))$ is non-negative.\n\nA fixed point at $s=1$ always exists, since $G(1) = \\exp(m(1-1)) = \\exp(0) = 1$.\n\nThe existence of another fixed point $q \\in [0,1)$ depends on the behavior of the function $G(s)$ near $s=1$. This is determined by the slope of the PGF at $s=1$, which is given by $G'(1)$. The derivative of the PGF is $G'(s) = m \\exp(m(s-1))$.\nEvaluating at $s=1$:\n$$G'(1) = m \\exp(m(1-1)) = m$$\nIn the theory of branching processes, $G'(1)$ is the expected number of offspring, which is indeed $m$ for this Poisson distribution.\n\nThere are two distinct cases:\n1.  **Subcritical and Critical Cases ($m \\le 1$):**\n    If $m \\le 1$, then the slope of the PGF at $s=1$ is less than or equal to the slope of the line $y=s$ (which is $1$). Since $G(s)$ is convex and $G(1)=1$, the graph of $y=G(s)$ must lie entirely above the line $y=s$ for $s \\in [0,1)$, except for the point of tangency at $s=1$ if $m=1$. Thus, the only solution to $s = G(s)$ in the interval $[0,1]$ is $s=1$. The smallest fixed point is $q=1$. Extinction is certain.\n\n2.  **Supercritical Case ($m > 1$):**\n    If $m > 1$, then the slope of the PGF at $s=1$ is greater than $1$. Since $G(s)$ is convex, $G(1)=1$, and $G(0) = \\exp(-m) > 0$, the curve $y=G(s)$ must cross the line $y=s$ from below at some point $q \\in [0,1)$. This intersection point is the smallest non-negative fixed point. In this case, there are two fixed points in $[0,1]$: $q$ and $1$. The ultimate extinction probability is the smaller of these two, so a nontrivial fixed point $q \\in [0,1)$ exists. Extinction is not certain.\n\nIn summary, a nontrivial extinction probability $q < 1$ exists if and only if the mean number of offspring $m$ is greater than $1$. If $m \\le 1$, the extinction probability is $q=1$.\n\n**Task 3: Numerical Method Design**\n\nTo solve for the ultimate extinction probability $P_{\\text{ext}} = q^{N_0}$, we must first compute $q$.\n\nThe algorithm proceeds as follows:\n1.  **Handle Boundary Cases:**\n    - If the initial number of founders $N_0 = 0$, the population is already extinct. The probability is $1$.\n    - If the mean offspring $m \\le 1$, based on the analysis in Task 2, the extinction probability for a single founder is $q=1$. For $N_0 > 0$, the total extinction probability is $1^{N_0} = 1$. The case $m=0$ is a subset of this, where extinction is immediate, yielding $q=1$.\n\n2.  **Numerical Solution for Supercritical Case ($m > 1$):**\n    - For $m > 1$, we must numerically solve the equation $q = \\exp(m(q-1))$ for the smallest root in $[0,1]$.\n    - A robust and theoretically sound method is fixed-point iteration. We can define an iterative sequence:\n      $$q_{k+1} = G(q_k) = \\exp(m(q_k - 1))$$\n    - It is a known result from branching process theory that starting with $q_0 = 0$, this iterative sequence is monotonically increasing and converges to the smallest fixed point $q$.\n    - The iteration is performed until the change between successive values is below a specified tolerance, e.g., $|q_{k+1} - q_k| < 10^{-12}$.\n    - Once the single-founder extinction probability $q$ is found, the final answer for $N_0$ founders is calculated as $q^{N_0}$.\n\n**Task 4: Interpretation for Near-Critical Case ($m \\gtrsim 1$)**\n\nWhen $m$ is only slightly greater than $1$, let $m = 1+\\epsilon$ for a small positive $\\epsilon$. We must interpret why the extinction probability remains high.\n\nLet us approximate the solution to $q = G(q)$ near $q=1$. Using a second-order Taylor expansion of $G(q)$ around $q=1$:\n$$G(q) \\approx G(1) + G'(1)(q-1) + \\frac{G''(1)}{2!}(q-1)^2$$\nWe have $G(1)=1$, $G'(1)=m$, and $G''(q) = m^2\\exp(m(q-1))$, so $G''(1)=m^2$. The fixed-point equation $q=G(q)$ becomes:\n$$q \\approx 1 + m(q-1) + \\frac{m^2}{2}(q-1)^2$$\nRearranging the terms gives:\n$$0 \\approx (m-1)(q-1) + \\frac{m^2}{2}(q-1)^2$$\nSince we seek the solution $q \\ne 1$, we can divide by the term $(q-1)$:\n$$0 \\approx (m-1) + \\frac{m^2}{2}(q-1)$$\nSolving for $q$:\n$$q-1 \\approx - \\frac{2(m-1)}{m^2}$$\n$$q \\approx 1 - \\frac{2(m-1)}{m^2}$$\nSubstituting $m=1+\\epsilon$:\n$$q \\approx 1 - \\frac{2\\epsilon}{(1+\\epsilon)^2} \\approx 1 - 2\\epsilon(1 - 2\\epsilon + \\dots) \\approx 1 - 2\\epsilon$$\nThis approximation shows that for a small positive growth factor $\\epsilon = m-1$, the extinction probability $q$ is approximately $1-2\\epsilon$, which is a value very close to $1$.\n\n**Interpretation:** The persistence of a high extinction risk, even when the population is expected to grow on average ($m>1$), is a fundamental consequence of **demographic stochasticity**. In the early generations, when the total population size is small, the fate of the entire lineage is highly sensitive to random fluctuations in the number of offspring produced by a few individuals. A small number of \"unlucky\" generations where the realized number of offspring is below average can be sufficient to drive the population to zero. The process is akin to a random walk with a slight positive drift. While the expectation is to move away from the origin (extinction), there remains a substantial probability of hitting the absorbing boundary at zero, especially when the drift (proportional to $m-1$) is small. The lineage must survive this initial, high-risk phase to reach a large enough size where the law of large numbers mitigates the effects of individual-level randomness and the population's growth trajectory aligns with its positive expectation.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves for the ultimate extinction probability in a Galton-Watson process\n    with a Poisson offspring distribution for a given set of test cases.\n    \"\"\"\n\n    def calculate_extinction_prob(N0, m):\n        \"\"\"\n        Calculates the ultimate extinction probability for a given N0 and m.\n\n        Args:\n            N0 (int): The initial number of founders.\n            m (float): The mean of the Poisson offspring distribution.\n\n        Returns:\n            float: The ultimate extinction probability.\n        \"\"\"\n        # Case 1: Initial population is zero. Extinction is a certain event.\n        if N0 == 0:\n            return 1.0\n\n        # Case 2: Subcritical or critical process (m <= 1).\n        # The ultimate extinction probability for a single founder is q=1.\n        # For N0 founders, the probability is 1^N0 = 1.\n        if m <= 1.0:\n            return 1.0\n\n        # Case 3: Supercritical process (m > 1).\n        # We must numerically find the smallest fixed point q in [0,1] of\n        # the PGF G(s) = exp(m*(s-1)). The equation is q = exp(m*(q-1)).\n        # We use fixed-point iteration, q_{k+1} = G(q_k), starting at q_0 = 0.\n        # This is guaranteed to converge to the smallest fixed point.\n        q = 0.0  # Initial guess for the single-founder extinction probability\n        tolerance = 1e-12\n        max_iterations = 1000\n\n        for _ in range(max_iterations):\n            q_next = np.exp(m * (q - 1.0))\n            if np.abs(q_next - q) < tolerance:\n                q = q_next\n                break\n            q = q_next\n        \n        # The total extinction probability for N0 independent founders is q^N0.\n        # Using np.power is robust for float exponents.\n        return np.power(q, N0)\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (N0, m)\n        (10, 1.1),  # Case A\n        (10, 0.9),  # Case B\n        (10, 1.0),  # Case C\n        (1, 2.0),   # Case D\n        (2, 2.0),   # Case E\n        (0, 1.1),   # Case F\n    ]\n\n    results = []\n    for case in test_cases:\n        N0, m = case\n        prob = calculate_extinction_prob(N0, m)\n        # Format to 6 decimal places as required.\n        results.append(f\"{prob:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2524077"}, {"introduction": "Real-world populations are not uniform; they are structured by age, size, or developmental stage, with vital rates varying among classes. Lefkovitch matrix models are the standard tool for capturing this complexity, forming the backbone of many sophisticated PVAs. This practice [@problem_id:2524056] provides hands-on experience in constructing a stage-based matrix and calculating its fundamental properties—the long-term population growth rate ($\\lambda$) and the stable stage distribution, which are essential for understanding the dynamics of structured populations.", "problem": "You are given a discrete-time, stage-structured population model appropriate for Population Viability Analysis (PVA). The population is partitioned into $3$ stages: stage $1$ (newborns or seedlings), stage $2$ (juveniles or subadults), and stage $3$ (adults). The population projection at time step $t \\to t+1$ is described by the linear system\n$$\n\\mathbf{n}_{t+1} = \\mathbf{A}\\,\\mathbf{n}_t,\n$$\nwhere $\\mathbf{n}_t \\in \\mathbb{R}_{\\ge 0}^3$ is the population vector at time $t$, and $\\mathbf{A} \\in \\mathbb{R}_{\\ge 0}^{3 \\times 3}$ is the $3$-stage Lefkovitch matrix. The matrix $\\mathbf{A}$ has the form\n$$\n\\mathbf{A} = \\begin{bmatrix}\nF_1 & F_2 & F_3\\\\\ns_1 & s_2(1-g_2) & 0\\\\\n0 & s_2 g_2 & s_3\n\\end{bmatrix},\n$$\nconstructed under a pre-breeding census and the following assumptions:\n- Stage $1$ does not persist in stage $1$ across time steps; all survivors in stage $1$ transition to stage $2$ by the next census (that is, conditional forward transition for stage $1$ is $1$).\n- Stage $2$ survivors either remain in stage $2$ with conditional probability $(1-g_2)$ or transition forward to stage $3$ with conditional probability $g_2$.\n- Stage $3$ survivors remain in stage $3$ (no forward stage exists).\n- All fecundities $F_1, F_2, F_3$ produce new stage $1$ individuals.\n- All survival probabilities $s_1, s_2, s_3$ and the conditional forward transition probability $g_2$ are unitless numbers in $[0,1]$ expressed as decimals (do not use the percentage sign).\n\nLet $\\lambda$ denote the dominant long-term growth rate of the population, defined as the spectral radius of $\\mathbf{A}$, and let $\\mathbf{w}$ denote the corresponding stable stage distribution, defined as the unique right eigenvector of $\\mathbf{A}$ associated with $\\lambda$ whose entries are nonnegative and normalized to sum to $1$.\n\nTask:\n- For each parameter set below, construct $\\mathbf{A}$ from the given survival and transition probabilities and fecundities.\n- Compute $\\lambda$ and $\\mathbf{w}$ numerically without using any closed-form eigenvalue formulas, relying only on the fundamental definition of the dominant eigenvalue and stable stage distribution for nonnegative matrices.\n- Report $\\lambda$ and $\\mathbf{w}$ with each value rounded to $6$ decimal places. All outputs must be decimals.\n\nTest suite (four parameter sets):\n$1.$ $(F_1,F_2,F_3) = (0.0, 1.2, 2.8)$, $(s_1,s_2,s_3) = (0.4, 0.7, 0.85)$, $g_2 = 0.6$.\n$2.$ $(F_1,F_2,F_3) = (0.0, 0.5, 1.2)$, $(s_1,s_2,s_3) = (0.3, 0.6, 0.8)$, $g_2 = 0.5$.\n$3.$ $(F_1,F_2,F_3) = (0.2, 0.0, 4.0)$, $(s_1,s_2,s_3) = (0.5, 0.75, 0.9)$, $g_2 = 0.9$.\n$4.$ $(F_1,F_2,F_3) = (0.0, 0.8, 0.0)$, $(s_1,s_2,s_3) = (0.6, 0.65, 0.7)$, $g_2 = 0.05$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets.\n- Each test case result should be a two-element list: the first element is $\\lambda$ (a float), and the second element is the stable stage distribution $\\mathbf{w}$ as a list of $3$ floats. For example:\n[[\\lambda_1,[w_{1,1},w_{1,2},w_{1,3}]],[\\lambda_2,[w_{2,1},w_{2,2},w_{2,3}]],[\\lambda_3,[w_{3,1},w_{3,2},w_{3,3}]],[\\lambda_4,[w_{4,1},w_{4,2},w_{4,3}]]].\n- All numeric values must be rounded to $6$ decimal places.", "solution": "The problem is determined to be valid. It presents a standard, well-posed problem in mathematical ecology concerning a stage-structured population model. All parameters are provided and are physically and biologically consistent. The task is to compute the dominant eigenvalue and its corresponding eigenvector for a series of Lefkovitch matrices.\n\nThe problem requires a numerical solution that relies on the fundamental definition of the dominant eigenvalue ($\\lambda$) and stable stage distribution ($\\mathbf{w}$). This requirement directly implies the use of the Power Iteration method. This method simulates the long-term projection of the population, which naturally converges to a state where the population vector's direction becomes constant—this is the stable stage distribution—and the population's total size grows by a constant factor each time step—this is the dominant eigenvalue.\n\nFor a non-negative, irreducible, and primitive matrix $\\mathbf{A}$, as is the case for viable population models, the Perron-Frobenius theorem guarantees the existence of a unique, simple, positive dominant eigenvalue equal to the spectral radius of $\\mathbf{A}$. The corresponding right eigenvector is also unique (up to scaling) and can be chosen to have all positive entries. The Power Iteration method is guaranteed to converge to this dominant eigenpair. Even in the case of a reducible matrix (as in test case $4$), if there is a unique dominant eigenvalue strictly greater in magnitude than all others, the power method will still converge correctly.\n\nThe algorithm to be implemented for each parameter set is as follows:\n\n1.  Construct the $3 \\times 3$ Lefkovitch matrix $\\mathbf{A} \\in \\mathbb{R}_{\\ge 0}^{3 \\times 3}$ using the provided parameters for fecundities ($F_i$), survival probabilities ($s_i$), and the transition probability ($g_2$). The matrix has the specified form:\n    $$\n    \\mathbf{A} = \\begin{bmatrix}\n    F_1 & F_2 & F_3\\\\\n    s_1 & s_2(1-g_2) & 0\\\\\n    0 & s_2 g_2 & s_3\n    \\end{bmatrix}\n    $$\n2.  Initialize an arbitrary non-negative population vector, which will serve as the first estimate of the stable stage distribution, $\\mathbf{w}^{(0)}$. This vector must be normalized such that its elements sum to $1$ (i.e., its $L_1$ norm is $1$). A uniform distribution, such as $\\mathbf{w}^{(0)} = [1/3, 1/3, 1/3]^T$, is a suitable starting point. An initial estimate for the eigenvalue, $\\lambda^{(0)}$, can be set to $0$.\n\n3.  Iteratively update the population vector and the eigenvalue estimate. For iteration $k=0, 1, 2, \\dots$:\n    a. Project the current stage distribution one time step forward: $\\mathbf{y}^{(k+1)} = \\mathbf{A} \\mathbf{w}^{(k)}$.\n    b. The $L_1$ norm of the resulting vector, $\\|\\mathbf{y}^{(k+1)}\\|_1 = \\sum_i |\\mathbf{y}^{(k+1)}_i|$, provides the subsequent estimate for the dominant eigenvalue, $\\lambda^{(k+1)}$. Since all entries are non-negative, this is simply the sum of the elements.\n    c. The new estimate for the stable stage distribution is obtained by normalizing the projected vector using its $L_1$ norm: $\\mathbf{w}^{(k+1)} = \\mathbf{y}^{(k+1)} / \\lambda^{(k+1)}$.\n\n4.  The iteration continues until the process converges. Convergence is achieved when the change in the eigenvalue estimate between successive iterations, $|\\lambda^{(k+1)} - \\lambda^{(k)}|$, falls below a prescribed numerical tolerance, $\\epsilon$ (e.g., $10^{-9}$). A maximum number of iterations is also set to prevent an infinite loop.\n\n5.  Upon convergence, the final values for $\\lambda$ and each component of $\\mathbf{w}$ are rounded to $6$ decimal places as specified in the problem statement. The results for all test cases are then aggregated and formatted into the required output string.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to solve the population viability analysis problem for all test cases.\n    \"\"\"\n\n    test_cases = [\n        # (F1, F2, F3, s1, s2, s3, g2)\n        (0.0, 1.2, 2.8, 0.4, 0.7, 0.85, 0.6),\n        (0.0, 0.5, 1.2, 0.3, 0.6, 0.8, 0.5),\n        (0.2, 0.0, 4.0, 0.5, 0.75, 0.9, 0.9),\n        (0.0, 0.8, 0.0, 0.6, 0.65, 0.7, 0.05)\n    ]\n\n    results = []\n    for params in test_cases:\n        F1, F2, F3, s1, s2, s3, g2 = params\n\n        # Construct the Lefkovitch matrix A\n        A = np.array([\n            [F1, F2, F3],\n            [s1, s2 * (1 - g2), 0],\n            [0, s2 * g2, s3]\n        ])\n\n        lambda_val, w_vec = _power_iteration(A)\n        \n        # Round results to 6 decimal places as required\n        rounded_lambda = round(lambda_val, 6)\n        rounded_w = [round(x, 6) for x in w_vec]\n        \n        results.append([rounded_lambda, rounded_w])\n\n    # Format and print the final output string\n    # Using map(str, ...) converts each result list (e.g., [1.2, [0.1, 0.2, 0.3]])\n    # into its string representation. Joining with ',' creates the final format.\n    print(f\"[{','.join(map(str, results))}]\")\n\ndef _power_iteration(A, tol=1e-12, max_iter=10000):\n    \"\"\"\n    Calculates the dominant eigenvalue (lambda) and its corresponding\n    eigenvector (stable stage distribution w) of matrix A using the\n    Power Iteration method with L1 normalization.\n\n    Args:\n        A (np.ndarray): The square matrix.\n        tol (float): The tolerance for convergence.\n        max_iter (int): The maximum number of iterations.\n\n    Returns:\n        tuple[float, np.ndarray]: A tuple containing the dominant eigenvalue\n                                  and the corresponding eigenvector.\n    \"\"\"\n    # Initialize a non-zero starting vector for the population distribution.\n    # We use a uniform distribution, normalized to sum to 1.\n    n = A.shape[0]\n    w = np.ones(n) / n\n    \n    lambda_val = 0.0\n\n    for _ in range(max_iter):\n        # Project the population forward by one time step\n        w_next = A @ w\n        \n        # The new eigenvalue estimate is the L1 norm (total population size)\n        lambda_next = np.linalg.norm(w_next, 1)\n        \n        # Normalize the projected vector to get the new stage distribution\n        w = w_next / lambda_next\n        \n        # Check for convergence\n        if abs(lambda_next - lambda_val) < tol:\n            break\n        \n        lambda_val = lambda_next\n        \n    return lambda_val, w\n\nsolve()\n```", "id": "2524056"}]}