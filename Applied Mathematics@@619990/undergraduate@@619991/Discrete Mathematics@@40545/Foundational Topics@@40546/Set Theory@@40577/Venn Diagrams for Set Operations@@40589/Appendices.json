{"hands_on_practices": [{"introduction": "This first practice is a classic application of a core counting principle in set theory. We will use the Principle of Inclusion-Exclusion to determine the total size of the union of two sets, a foundational skill for avoiding the common pitfall of double-counting in surveys and data analysis [@problem_id:1414043]. This exercise provides a concrete example of how to combine information about individual groups and their overlap to find the total number of unique members.", "problem": "A technology company conducted an internal survey to assess the programming skills of its software development team. The survey focused on two popular languages: Python and JavaScript. The results indicated that 127 developers are proficient in Python and 153 developers are proficient in JavaScript. Among these developers, 45 reported being proficient in both Python and JavaScript.\n\nWhat is the total number of developers who are proficient in either Python or JavaScript or both?", "solution": "Let $P$ be the set of developers proficient in Python and $J$ be the set of developers proficient in JavaScript. The given data are $|P| = 127$, $|J| = 153$, and $|P \\cap J| = 45$. The total number of developers proficient in either Python or JavaScript or both is the size of the union $|P \\cup J|$, which by the inclusion-exclusion principle satisfies\n$$\n|P \\cup J| = |P| + |J| - |P \\cap J|.\n$$\nSubstituting the given values:\n$$\n|P \\cup J| = 127 + 153 - 45.\n$$\nCompute step by step:\n$$\n127 + 153 = 280,\n$$\n$$\n280 - 45 = 235.\n$$\nTherefore, the total number of developers proficient in either Python or JavaScript or both is $235$.", "answer": "$$\\boxed{235}$$", "id": "1414043"}, {"introduction": "Moving beyond simple counting, this exercise challenges you to translate a logical condition—belonging to \"exactly one\" of three sets—into the precise language of set operations. Mastering this translation from a visual or conceptual idea to a formal expression is crucial for building and analyzing complex models in fields like database logic and algorithm design [@problem_id:1414066]. This is a key step in using set theory to define and query specific subsets of data.", "problem": "Let $U$ be a universal set, and let $A$, $B$, and $C$ be three subsets of $U$. An element can belong to any combination of these three sets. Using only the operations of union ($\\cup$), intersection ($\\cap$), and complement (denoted by a superscript $c$, e.g., $A^c$ for the complement of $A$), which of the following expressions correctly represents the set of elements that belong to **exactly one** of the sets $A, B,$ or $C$?\n\nA. $(A \\cup B \\cup C) \\setminus (A \\cap B \\cap C)$\n\nB. $(A \\cap B^c \\cap C^c) \\cup (A^c \\cap B \\cap C^c) \\cup (A^c \\cap B^c \\cap C)$\n\nC. $(A \\cap B \\cap C^c) \\cup (A \\cap B^c \\cap C) \\cup (A^c \\cap B \\cap C)$\n\nD. $(A \\setminus B) \\cup (B \\setminus C) \\cup (C \\setminus A)$\n\nE. $(A \\cup B \\cup C)^c$\n\n(Note: The set difference operation $X \\setminus Y$ is equivalent to $X \\cap Y^c$.)", "solution": "Let's analyze the condition that an element belongs to \"exactly one\" of the sets $A, B,$ or $C$. This condition can be broken down into three mutually exclusive cases:\n1.  The element is in set $A$ but not in set $B$ and not in set $C$.\n2.  The element is in set $B$ but not in set $A$ and not in set $C$.\n3.  The element is in set $C$ but not in set $A$ and not in set $B$.\n\nWe can translate each of these cases into the language of set theory.\n\nCase 1: The element is in $A$, and not in $B$, and not in $C$.\nThe set of elements in $A$ is denoted by $A$.\nThe set of elements not in $B$ is the complement of $B$, denoted by $B^c$.\nThe set of elements not in $C$ is the complement of $C$, denoted by $C^c$.\nThe condition \"in $A$ AND not in $B$ AND not in $C$\" corresponds to the intersection of these three sets:\n$$S_1 = A \\cap B^c \\cap C^c$$\n\nCase 2: The element is in $B$, and not in $A$, and not in $C$.\nSimilarly, this corresponds to the set:\n$$S_2 = B \\cap A^c \\cap C^c$$\nWhich can be rewritten to maintain alphabetical order as:\n$$S_2 = A^c \\cap B \\cap C^c$$\n\nCase 3: The element is in $C$, and not in $A$, and not in $B$.\nThis corresponds to the set:\n$$S_3 = C \\cap A^c \\cap B^c$$\nWhich can be rewritten as:\n$$S_3 = A^c \\cap B^c \\cap C$$\n\nThe overall set of elements satisfying the condition \"exactly one of the sets\" is the union of the sets from these three cases, since an element can be in the first case OR the second case OR the third case.\nThus, the final expression is $S_1 \\cup S_2 \\cup S_3$:\n$$(A \\cap B^c \\cap C^c) \\cup (A^c \\cap B \\cap C^c) \\cup (A^c \\cap B^c \\cap C)$$\n\nThis expression matches option B.\n\nLet's briefly examine why the other options are incorrect:\n-   **A. $(A \\cup B \\cup C) \\setminus (A \\cap B \\cap C)$**: This represents the set of elements that are in at least one of the sets, but not in all three. This includes elements that are in exactly two sets (e.g., an element in $A \\cap B \\cap C^c$), which violates the \"exactly one\" condition.\n-   **C. $(A \\cap B \\cap C^c) \\cup (A \\cap B^c \\cap C) \\cup (A^c \\cap B \\cap C)$**: This expression represents the set of elements belonging to exactly two of the sets. For example, $A \\cap B \\cap C^c$ is the set of elements in both $A$ and $B$, but not in $C$.\n-   **D. $(A \\setminus B) \\cup (B \\setminus C) \\cup (C \\setminus A)$**: This is equivalent to $(A \\cap B^c) \\cup (B \\cap C^c) \\cup (C \\cap A^c)$. Consider an element that is in $A$ and $C$, but not in $B$. This element is in two sets. It is part of the term $A \\cap B^c$ (since it is in $A$ and not in $B$). Therefore, this expression includes elements that are in two sets, making it incorrect.\n-   **E. $(A \\cup B \\cup C)^c$**: This represents the set of elements that are not in $A$, not in $B$, and not in $C$. That is, elements belonging to none of the three sets.", "answer": "$$\\boxed{B}$$", "id": "1414066"}, {"introduction": "This final practice demonstrates how the principles of set cardinality can be used to solve optimization problems, a powerful extension of simple counting. By reasoning about the fundamental constraints on the sizes of overlapping sets, you will determine a minimum possible outcome, showcasing how set theory provides tools for strategic decision-making [@problem_id:1414056]. Note that this problem involves a hypothetical scenario designed to help you explore the mathematical limits of set intersections.", "problem": "A data science team at a large e-commerce company is analyzing customer feedback. They have a dataset of $N = 1,000,000$ customer reviews. Three different Natural Language Processing (NLP) models, let's call them M1, M2, and M3, are used to scan these reviews for \"urgent issues\". Let $S_1$, $S_2$, and $S_3$ be the sets of reviews flagged by models M1, M2, and M3, respectively. The analysis reveals the following statistics:\n- The number of reviews flagged by M1 is $|S_1| = 650,000$.\n- The number of reviews flagged by M2 is $|S_2| = 750,000$.\n- The number of reviews flagged by M3 is $|S_3| = 850,000$.\n\nThe company classifies the flagged reviews for human verification based on the number of models that flagged them:\n- **High-Priority**: A review flagged by all three models. Verification cost is $C_H = \\$5.00$ per review.\n- **Medium-Priority**: A review flagged by exactly two models. Verification cost is $C_M = \\$2.00$ per review.\n- **Low-Priority**: A review flagged by exactly one model. Verification cost is $C_L = \\$1.00$ per review.\n- Reviews not flagged by any model are discarded with no cost.\n\nAssuming the sets of reviews flagged by the models can be configured in any way that is consistent with the given cardinalities, what is the minimum possible total cost for verifying all the flagged reviews in the dataset? Express your answer in dollars.", "solution": "Let $x_{1}, x_{2}, x_{3}$ denote the numbers of reviews flagged by exactly one, exactly two, and all three models, respectively. Then\n$$\nx_{1} + 2 x_{2} + 3 x_{3} = T, \\quad \\text{where } T = |S_{1}| + |S_{2}| + |S_{3}|,\n$$\nand the union size satisfies\n$$\nx_{1} + x_{2} + x_{3} = U \\leq N.\n$$\nThe total verification cost is\n$$\n\\text{Cost} = C_{L} x_{1} + C_{M} x_{2} + C_{H} x_{3} = 1 \\cdot x_{1} + 2 \\cdot x_{2} + 5 \\cdot x_{3}.\n$$\nUsing $x_{1} = T - 2 x_{2} - 3 x_{3}$, we rewrite the cost as\n$$\n\\text{Cost} = (T - 2 x_{2} - 3 x_{3}) + 2 x_{2} + 5 x_{3} = T + 2 x_{3}.\n$$\nThus, minimizing the cost is equivalent to minimizing $x_{3}$.\n\nA lower bound on $x_{3}$ follows from\n$$\nT - 2 U = (x_{1} + 2 x_{2} + 3 x_{3}) - 2(x_{1} + x_{2} + x_{3}) = -x_{1} + x_{3} \\leq x_{3},\n$$\nand since $U \\leq N$,\n$$\nx_{3} \\geq T - 2 U \\geq T - 2 N.\n$$\nTherefore, the minimal possible triple intersection is $x_{3,\\min} = T - 2 N$, achieved when $U = N$ and $x_{1} = 0$.\n\nCompute the quantities:\n$$\nT = 650000 + 750000 + 850000 = 2250000, \\quad N = 1000000,\n$$\nso\n$$\nx_{3,\\min} = 2250000 - 2 \\cdot 1000000 = 250000.\n$$\nThe corresponding minimum cost is\n$$\n\\text{Cost}_{\\min} = T + 2 x_{3,\\min} = 2250000 + 2 \\cdot 250000 = 2750000.\n$$\n\nIt remains to verify feasibility with the given $|S_{1}|,|S_{2}|,|S_{3}|$. Set $x_{1} = 0$, $x_{3} = 250000$, and write the pairwise-only region sizes $d = |S_{1} \\cap S_{2} \\setminus S_{3}|$, $e = |S_{1} \\cap S_{3} \\setminus S_{2}|$, $f = |S_{2} \\cap S_{3} \\setminus S_{1}|$. They must satisfy\n$$\nd + e = |S_{1}| - x_{3}, \\quad d + f = |S_{2}| - x_{3}, \\quad e + f = |S_{3}| - x_{3}.\n$$\nSolving gives\n$$\nd = \\frac{|S_{1}| + |S_{2}| - |S_{3}| - x_{3}}{2} = 150000,\\quad\ne = \\frac{|S_{1}| + |S_{3}| - |S_{2}| - x_{3}}{2} = 250000,\\quad\nf = \\frac{|S_{2}| + |S_{3}| - |S_{1}| - x_{3}}{2} = 350000,\n$$\nall nonnegative, and $d + e + f = 750000 = N - x_{3}$, so $U = N$. Hence the configuration is feasible and achieves the lower bound.\n\nTherefore, the minimum possible total verification cost is $2750000$ dollars.", "answer": "$$\\boxed{2750000}$$", "id": "1414056"}]}