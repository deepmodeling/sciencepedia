{"hands_on_practices": [{"introduction": "The formal definition of a function rests on two essential conditions: every input from the domain must have a corresponding output in the codomain, and this output must be unique. This exercise challenges you to apply this definition rigorously by examining several rules that map positive integers to other integers. By determining which of these rules satisfy both the existence and uniqueness criteria, you will build a foundational skill for identifying valid functions in any mathematical context [@problem_id:1361889].", "problem": "Let $\\mathbb{Z}^+$ denote the set of positive integers and let $\\mathbb{Z}$ denote the set of all integers. A rule of assignment from a domain $D$ to a codomain $C$ defines a function if and only if it satisfies two conditions:\n1.  The rule assigns an output in $C$ to every input in $D$.\n2.  The rule assigns exactly one output in $C$ to each input in $D$.\n\nConsider the following rules of assignment from the domain $\\mathbb{Z}^+$ to the codomain $\\mathbb{Z}$. Select all options that describe a valid function.\n\nA. The rule that maps an integer $n \\in \\mathbb{Z}^+$ to the product of its distinct prime factors. For $n=1$, this product is defined to be 1.\n\nB. The rule that maps an integer $n \\in \\mathbb{Z}^+$ to an integer $y \\in \\mathbb{Z}$ such that $y^2 = n$.\n\nC. The rule that maps an integer $n \\in \\mathbb{Z}^+$ to a prime number $p \\in \\mathbb{Z}$ such that $p$ divides $n$.\n\nD. The rule that maps an integer $n \\in \\mathbb{Z}^+$ to the number of its positive divisors.\n\nE. The rule that maps an integer $n \\in \\mathbb{Z}^+$ to an integer $y \\in \\mathbb{Z}$ such that $|y|  n-1$.", "solution": "A rule from $D=\\mathbb{Z}^{+}$ to $C=\\mathbb{Z}$ defines a function if and only if (i) for every $n \\in D$ there exists an output $y \\in C$, and (ii) for each $n \\in D$ this output is unique.\n\nAnalyze each option:\n\nA. For $n \\in \\mathbb{Z}^{+}$, let $n=\\prod_{i=1}^{k} p_{i}^{\\alpha_{i}}$ be its prime factorization (with $k \\geq 0$, and by convention $k=0$ for $n=1$). The rule outputs $\\prod_{i=1}^{k} p_{i}$, and for $n=1$ outputs $1$. By the Fundamental Theorem of Arithmetic, the multiset of distinct primes $\\{p_{1},\\ldots,p_{k}\\}$ is uniquely determined, hence the product $\\prod_{i=1}^{k} p_{i}$ is uniquely determined. Existence holds for all $n$ (explicit output given), and uniqueness holds. Therefore A defines a function.\n\nB. The rule requires $y \\in \\mathbb{Z}$ with $y^{2}=n$. If $n$ is not a perfect square, there is no such $y$, violating existence. If $n=m^{2}$ for some $m \\in \\mathbb{Z}^{+}$, then both $y=m$ and $y=-m$ satisfy $y^{2}=n$, violating uniqueness. Therefore B does not define a function.\n\nC. The rule requires a prime $p$ dividing $n$. For $n=1$, there is no prime $p$ with $p \\mid 1$, violating existence. For $n$ with at least two distinct prime divisors (e.g., $n=6$), there are multiple valid primes, violating uniqueness. Therefore C does not define a function.\n\nD. The rule outputs the number of positive divisors of $n$, commonly denoted $d(n)$. For each $n \\in \\mathbb{Z}^{+}$, the set of positive divisors is well defined and finite, and its cardinality is a unique integer. Thus existence and uniqueness both hold. Therefore D defines a function.\n\nE. The rule requires an integer $y$ with $|y|n-1$. For $n=1$, this is $|y|0$, which has no integer solutions, violating existence. For $n \\geq 3$, there are multiple integers satisfying $|y|n-1$ (e.g., $y=0$ and $y=1$), violating uniqueness. Therefore E does not define a function.\n\nHence the valid options are A and D.", "answer": "$$\\boxed{AD}$$", "id": "1361889"}, {"introduction": "Does a mapping that assigns an area to every polygon define a function? This question guides you to explore a common point of confusion: the difference between a mapping being a function and it being one-to-one (injective). While many different polygons can share the same area, the crucial test is whether any single polygon maps to more than one area value. This geometric thought experiment solidifies your understanding that a function must provide a unique output for each input, but does not require that different inputs produce different outputs [@problem_id:1361902].", "problem": "Consider a mapping, which we will call $M$, from a set $D$ to a set $C$. The domain $D$ is defined as the set of all possible simple polygons in a two-dimensional Cartesian plane ($\\mathbb{R}^2$). A simple polygon is a polygon that does not intersect itself. The codomain $C$ is the set of all non-negative real numbers, $\\mathbb{R}_{\\ge 0}$.\n\nThe rule for the mapping $M$ is as follows: for any given simple polygon $P$ in the domain $D$, the mapping assigns to it its geometric area.\n\nIs the mapping $M: D \\to C$ a well-defined function?\n\nA. Yes, because every simple polygon has a unique, well-defined area.\n\nB. No, because two or more different polygons can have the same area.\n\nC. No, because there exist non-negative real numbers which are not the area of any simple polygon.\n\nD. Yes, because for every possible non-negative area value, there is a polygon that has that area.\n\nE. No, because it is impossible to calculate the area for polygons with an infinite number of vertices.", "solution": "We are given a mapping $M:D\\to C$ where $D$ is the set of all simple polygons in $\\mathbb{R}^{2}$ and $C=\\mathbb{R}_{\\ge 0}$, defined by assigning to each polygon $P\\in D$ its geometric area, denoted $M(P)=\\operatorname{Area}(P)$.\n\nTo determine whether $M$ is a well-defined function, recall the criterion: a mapping $M:D\\to C$ is a well-defined function if and only if for every $P\\in D$ there exists a unique value $M(P)\\in C$ assigned by the rule.\n\nFor a simple polygon $P$ (a non-self-intersecting polygon with finitely many sides), the geometric area is well-defined via standard planar area (Jordan measure) and can be computed, for instance, by the shoelace formula from the ordered list of its vertices. Crucially, the area is independent of the particular representation of $P$ (e.g., vertex ordering aside from orientation), and hence is uniquely determined by $P$ itself. Therefore, for each $P\\in D$, there exists exactly one real number $\\operatorname{Area}(P)\\in \\mathbb{R}_{\\ge 0}$. This establishes that $M$ assigns to every element of $D$ a unique element of $C$, so $M$ is a well-defined function.\n\nNow assess the choices:\n- Option A states that $M$ is a function because every simple polygon has a unique, well-defined area. This directly matches the definition of a well-defined function and is correct.\n- Option B claims non-functionality because distinct polygons can share the same area. That only challenges injectivity, not well-definedness; injectivity is not required for being a function. Hence B is incorrect.\n- Option C claims non-functionality because some non-negative reals are not realized as areas. Even if some values in $C$ (for instance, possibly $0$ if one excludes degenerate polygons) are not attained, surjectivity is not required for well-definedness. Hence C is incorrect as a reason to deny well-definedness.\n- Option D asserts surjectivity (every non-negative real is an area). This is not necessary for well-definedness and may be false under standard non-degenerate definitions (e.g., $0$). Thus D is not the correct justification.\n- Option E is irrelevant because polygons, by definition, have finitely many vertices; in any case, the existence and uniqueness of area for simple polygons are established, so E is incorrect.\n\nTherefore, the correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "1361902"}, {"introduction": "Moving into the realm of computer science, this problem uses the practical scenario of a software build system to explore the function definition in a more abstract setting. You'll consider a relation that maps a set of module dependencies (a partial order) to a valid compilation sequence (a linear order, or topological sort). The core question is whether this mapping consistently produces a single, unique build plan for any given dependency structure. This practice demonstrates how the mathematical rigor of the function definition is essential for analyzing the behavior and predictability of algorithms [@problem_id:1361908].", "problem": "In the context of a large-scale software project, a build system is responsible for compiling a set of modules in an order that respects their dependencies. Let $V = \\{A, B, C, D\\}$ be a set of four software modules. A \"dependency structure\" on $V$ is a partial order, which we can denote by $R$. Here, $(X, Y) \\in R$ signifies that module $X$ must be compiled before module $Y$. A \"build plan\" is a linear ordering of the modules in $V$, representing the sequence in which they will be compiled. A build plan is considered \"valid\" for a given dependency structure if it is a valid topological sort of the corresponding partially ordered set.\n\nLet $\\mathbf{P}(V)$ be the set of all possible dependency structures (all partial orders) on $V$, and let $\\mathbf{L}(V)$ be the set of all possible build plans (all linear orderings) on $V$. Consider the relation $\\mathcal{F}$ that maps each dependency structure in $\\mathbf{P}(V)$ to a corresponding valid build plan in $\\mathbf{L}(V)$.\n\nDoes this relation $\\mathcal{F}$ qualify as a function from $\\mathbf{P}(V)$ to $\\mathbf{L}(V)$? Choose the correct option below.\n\nA. Yes, because for any given set of dependencies, a valid build plan can always be found.\n\nB. Yes, because the concept of a topological sort defines a unique deterministic algorithm.\n\nC. No, because there exists at least one dependency structure on $V$ that corresponds to more than one distinct valid build plan.\n\nD. No, because for some complex dependency structures on $V$, no valid build plan may exist.\n\nE. The question cannot be answered because a build plan (linear ordering) is a specific type of dependency structure (partial order), making the domain and codomain non-disjoint.", "solution": "We formalize the objects and the relation. Let $V=\\{A,B,C,D\\}$. Let $\\mathbf{P}(V)$ denote the set of all partial orders on $V$, and let $\\mathbf{L}(V)$ denote the set of all linear orders on $V$. Define the relation $\\mathcal{F} \\subseteq \\mathbf{P}(V) \\times \\mathbf{L}(V)$ by declaring $(R,L) \\in \\mathcal{F}$ if and only if $L$ is a valid topological ordering (linear extension) of the partial order $R$.\n\nTo decide whether $\\mathcal{F}$ is a function from $\\mathbf{P}(V)$ to $\\mathbf{L}(V)$, we use the definition:\n$$\n\\mathcal{F} \\text{ is a function } \\iff (\\forall R \\in \\mathbf{P}(V))(\\exists!\\, L \\in \\mathbf{L}(V))\\,((R,L) \\in \\mathcal{F}).\n$$\nThus two properties must hold for each $R$: existence and uniqueness of $L$ with $(R,L) \\in \\mathcal{F}$.\n\nExistence holds for every finite partial order: every finite poset admits at least one linear extension. Equivalently, every directed acyclic graph admits a topological ordering. Therefore, for all $R \\in \\mathbf{P}(V)$, there exists at least one $L \\in \\mathbf{L}(V)$ with $(R,L) \\in \\mathcal{F}$.\n\nUniqueness, however, fails in general. Provide a counterexample: take $R_{0} \\in \\mathbf{P}(V)$ to be the partial order with no precedence constraints (i.e., no pairs $(X,Y)$ with $X \\neq Y$ are required). Then any linear order on $V$ is a valid topological sort of $R_{0}$. In particular, let $L_{1}$ be the linear order placing the modules as $A \\prec B \\prec C \\prec D$ and let $L_{2}$ be the linear order $A \\prec C \\prec B \\prec D$. Both $L_{1}$ and $L_{2}$ are distinct elements of $\\mathbf{L}(V)$ and both satisfy $(R_{0},L_{1}) \\in \\mathcal{F}$ and $(R_{0},L_{2}) \\in \\mathcal{F}$. Hence uniqueness fails:\n$$\n\\neg(\\exists!\\, L \\in \\mathbf{L}(V))\\,((R_{0},L) \\in \\mathcal{F}).\n$$\nTherefore, $\\mathcal{F}$ is not a function.\n\nEvaluating the options:\n- A is incorrect as a justification for being a function because existence alone does not imply uniqueness.\n- B is incorrect because a topological sort need not be unique; determinism of an algorithm does not resolve mathematical non-uniqueness of outputs.\n- C is correct: there exist dependency structures with more than one valid build plan.\n- D is false because every finite partial order has at least one linear extension.\n- E is irrelevant; functions do not require disjoint domain and codomain.\n\nThus the correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1361908"}]}