{"hands_on_practices": [{"introduction": "In logic, it's crucial to distinguish between a conclusion that *could* be true and one that *must* be true based on the evidence. This exercise [@problem_id:1398016] challenges us to analyze an argument that sounds plausible but is built on a common logical error. Learning to spot this kind of flawed reasoning is a critical skill for avoiding invalid conclusions in technical debugging and everyday arguments.", "problem": "A lead programmer at a video game studio is debugging a persistent issue where player characters sometimes pass through solid objects. After a team meeting, the following two statements are recorded as established facts:\n\n1.  If the physics engine has a bug, then player characters clip through walls.\n2.  If the collision detection module is disabled, then player characters clip through walls.\n\nBased on these two facts, a junior programmer proposes the following conclusion: \"Therefore, if the physics engine has a bug, it must mean the collision detection module is disabled.\"\n\nYour task is to analyze the logical structure of this argument. Let the propositions be defined as:\n-   $p$: The physics engine has a bug.\n-   $q$: Player characters clip through walls.\n-   $r$: The collision detection module is disabled.\n\nIs the junior programmer's argument logically valid?\n\nA. The argument is valid.\n\nB. The argument is invalid.\n\nC. The argument's validity depends on whether player characters are actually clipping through walls.\n\nD. The argument's validity cannot be determined from the given information.", "solution": "Define the propositions as given: $p$: the physics engine has a bug; $q$: players clip through walls; $r$: the collision detection module is disabled. The two premises are $p \\rightarrow q$ and $r \\rightarrow q$. The proposed conclusion is $p \\rightarrow r$.\n\nAttempting a derivation:\n- Premise 1: $p \\rightarrow q$.\n- Premise 2: $r \\rightarrow q$.\n- To test whether $p \\rightarrow r$ follows, assume $p$.\n- From $p$ and $p \\rightarrow q$, infer $q$ by modus ponens.\n- To conclude $r$ from $q$, one would need $q \\rightarrow r$. However, the second premise provides $r \\rightarrow q$, not $q \\rightarrow r$. Inferring $r$ from $q$ using $r \\rightarrow q$ would be the fallacy of affirming the consequent. Therefore, no valid rule allows deriving $r$ from the given premises, and thus $p \\rightarrow r$ is not entailed.\n\nProvide a countermodel (valuation) showing the premises can be true while the conclusion is false:\n- Let $p=\\text{T}$, $q=\\text{T}$, $r=\\text{F}$.\n- Then $p \\rightarrow q$ evaluates to $\\text{T}$ because $\\text{T} \\rightarrow \\text{T}$ is $\\text{T}$.\n- Also $r \\rightarrow q$ evaluates to $\\text{T}$ because $\\text{F} \\rightarrow \\text{T}$ is $\\text{T}$.\n- But $p \\rightarrow r$ evaluates to $\\text{F}$ because $\\text{T} \\rightarrow \\text{F}$ is $\\text{F}$.\n\nSince there exists a valuation where both premises are true and the conclusion is false, the argument is not logically valid. It does not depend on whether $q$ actually occurs; validity concerns form, not factual occurrence, so options C and D are incorrect. Hence the correct choice is that the argument is invalid.", "answer": "$$\\boxed{B}$$", "id": "1398016"}, {"introduction": "Once we can identify invalid arguments, the next step is to build our own valid deductions. This practice [@problem_id:1398022] demonstrates how to translate a practical scenario into the language of propositional logic and then apply a chain of fundamental inference rules. By sequentially using well-established rules like Modus Ponens and Modus Tollens, we can uncover new conclusions that are guaranteed to be true if our initial premises are true.", "problem": "The safety logic of an experimental autonomous drone is governed by a set of precise rules. To formalize these rules, we define three basic propositions:\n\n- $O$: The drone's downward-facing optical flow sensor detects an unstable landing surface.\n- $P$: The drone's flight controller is permitted to decrease altitude.\n- $H$: The drone's hovering protocol is activated.\n\nThe drone's core safety directive is encoded by the following rule: If the optical flow sensor detects an unstable landing surface, then it must be the case that if the flight controller is permitted to decrease altitude, the hovering protocol is activated.\n\nOn a particular test flight, system logs record two simultaneous facts at a specific moment in time: the optical flow sensor did indeed detect an unstable landing surface, and a system diagnostic confirmed that the hovering protocol was not activated.\n\nBased exclusively on the safety directive and the logged facts, which one of the following statements about the drone's state at that specific moment is a necessary logical consequence?\n\nA. The flight controller was permitted to decrease altitude.\n\nB. The drone's hovering protocol was activated.\n\nC. The flight controller was not permitted to decrease altitude.\n\nD. The optical flow sensor did not detect an unstable landing surface.\n\nE. The drone's hovering protocol was activated, but the flight controller was not permitted to decrease altitude.", "solution": "Let $O$ denote \"the optical flow sensor detects an unstable landing surface,\" $P$ denote \"the flight controller is permitted to decrease altitude,\" and $H$ denote \"the hovering protocol is activated.\"\n\nThe safety directive states:\n$$O \\rightarrow (P \\rightarrow H).$$\n\nThe system logs record:\n$$O \\quad \\text{and} \\quad \\neg H.$$\n\nStep 1: From $O$ and $O \\rightarrow (P \\rightarrow H)$, apply Modus Ponens to infer:\n$$P \\rightarrow H.$$\n\nStep 2: From $P \\rightarrow H$ and $\\neg H$, apply Modus Tollens to infer:\n$$\\neg P.$$\n\nThus, it is a necessary logical consequence that the flight controller was not permitted to decrease altitude. This corresponds to option C. Options A and E contradict $\\neg P$, and options B and D contradict the logged facts $\\neg H$ and $O$, respectively.", "answer": "$$\\boxed{C}$$", "id": "1398022"}, {"introduction": "Logical arguments in computer science and mathematics are often presented as structured, multi-step formal proofs. This final exercise [@problem_id:1398073] focuses on the anatomy of such a proof, asking you to identify the specific rules of inference that justify key steps. This practice sharpens your ability to both understand and construct complex logical arguments by seeing how different rules, such as the Constructive Dilemma and Modus Tollens, work together to reach a valid conclusion.", "problem": "A systems administrator is analyzing the logic of an automated failover system. The behavior of the system is described by a set of propositions and a formal proof is constructed to determine the system's state under certain conditions. The propositions are defined as follows:\n\n- $p$: The primary server fails.\n- $q$: The backup server is activated.\n- $r$: The network switch fails.\n- $s$: The redundant network path is used.\n- $t$: The system sends an email alert.\n\nBelow is an eight-step formal proof that derives a conclusion from five initial premises. However, the justifications for steps 4 and 7 are missing.\n\n| Step | Proposition | Justification |\n| :--- | :--- | :--- |\n| 1. | $p \\to q$ | Premise |\n| 2. | $r \\to s$ | Premise |\n| 3. | $p \\lor r$ | Premise |\n| 4. | $q \\lor s$ | ??? |\n| 5. | $q \\to t$ | Premise |\n| 6. | $\\neg t$ | Premise |\n| 7. | $\\neg q$ | ??? |\n| 8. | $s$ | Disjunctive Syllogism (4, 7) |\n\nYour task is to identify the correct rules of inference that justify steps 4 and 7, respectively. From the options below, select the one that lists the correct pair of justifications.\n\nA. Modus Ponens; Modus Tollens\n\nB. Hypothetical Syllogism; Disjunctive Syllogism\n\nC. Constructive Dilemma; Modus Tollens\n\nD. Destructive Dilemma; Modus Ponens\n\nE. Addition; Simplification", "solution": "The goal is to determine the correct rules of inference for steps 4 and 7 of the given formal proof. We will analyze each step independently.\n\n**Analysis of Step 4:**\n\nThe proposition at step 4 is $q \\lor s$. To find its justification, we must identify which preceding propositions are used as premises for the inference. The rule must combine these premises to logically derive $q \\lor s$.\n\nLet's examine the propositions from steps 1, 2, and 3:\n- Step 1: $p \\to q$\n- Step 2: $r \\to s$\n- Step 3: $p \\lor r$\n\nWe are looking for a rule of inference that takes premises of the form $(P \\to Q)$, $(R \\to S)$, and $(P \\lor R)$ and yields the conclusion $(Q \\lor S)$. This pattern perfectly matches the rule known as **Constructive Dilemma**. The logic is as follows: we know that either $p$ is true or $r$ is true (from step 3).\n- If $p$ is true, then by Modus Ponens with step 1, $q$ must be true.\n- If $r$ is true, then by Modus Ponens with step 2, $s$ must be true.\nSince one of $p$ or $r$ must be true, it follows that one of $q$ or $s$ must be true. Therefore, $q \\lor s$ is the valid conclusion.\n\nSo, the justification for step 4 is **Constructive Dilemma**.\n\n**Analysis of Step 7:**\n\nThe proposition at step 7 is $\\neg q$. We need to find the rule and premises that lead to this conclusion. The premises must be drawn from steps 1 through 6.\n\nLet's examine the propositions from steps 5 and 6:\n- Step 5: $q \\to t$\n- Step 6: $\\neg t$\n\nWe are looking for a rule of inference that takes a conditional statement $(P \\to Q)$ and the negation of its consequent, $\\neg Q$, to conclude the negation of its antecedent, $\\neg P$. This is the definition of the rule of inference **Modus Tollens**. In this case, $P$ is $q$ and $Q$ is $t$. The premises are $q \\to t$ and $\\neg t$, so the valid conclusion is $\\neg q$.\n\nSo, the justification for step 7 is **Modus Tollens**.\n\n**Conclusion:**\n\nThe justification for step 4 is Constructive Dilemma, and the justification for step 7 is Modus Tollens. This corresponds to the pair (Constructive Dilemma; Modus Tollens). Looking at the given options, this pair is listed as option C.", "answer": "$$\\boxed{C}$$", "id": "1398073"}]}