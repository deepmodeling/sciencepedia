{"hands_on_practices": [{"introduction": "A universally quantified statement, such as $\\forall x P(x)$, makes a bold claim: that a property $P(x)$ holds true for every single element $x$ in a specified domain. The truth of such a statement is therefore critically dependent on that domain. This exercise [@problem_id:1393694] challenges you to think like a logician or a software tester by finding a domain of discourse that contains a counterexample, thereby proving a universal assertion false.", "problem": "A logic module in a new software application is designed to verify assertions over different numerical domains. The core assertion being tested is the universally quantified statement $\\forall x (x^2 > x)$, where the variable $x$ belongs to a specified domain of discourse, $D$. The module is considered to be working correctly if it can identify a domain for which this assertion is false.\n\nYour task is to identify which of the following domains of discourse would cause the assertion $\\forall x (x^2 > x)$ to be false.\n\nA. The set of all integers greater than 1.\n\nB. The set of all negative integers.\n\nC. The set of all real numbers in the open interval $(0, 1)$.\n\nD. The set containing only the integer 2.\n\nE. The empty set, $\\emptyset$.", "solution": "We analyze the universally quantified statement over a domain $D$: the statement is $\\forall x \\in D,\\; x^{2} > x$. Such a universal statement is false precisely when there exists at least one $x \\in D$ such that $x^{2} \\leq x$.\n\nEvaluate each domain:\n\nA. $D=\\{x \\in \\mathbb{Z} : x>1\\}$. For any integer $x \\geq 2$, compute\n$$\nx^{2} - x = x(x-1).\n$$\nSince $x \\geq 2$ and $x-1 \\geq 1$, we have $x(x-1) \\geq 2 \\cdot 1 = 2 > 0$, hence $x^{2} > x$ for all such $x$. Therefore, the universal statement is true on this domain, so it does not make the assertion false.\n\nB. $D=\\{x \\in \\mathbb{Z} : x<0\\}$. Let $x=-k$ with $k \\in \\mathbb{N}$. Then\n$$\nx^{2} - x = k^{2} + k > 0,\n$$\nso $x^{2} > x$ for every negative integer. Thus the universal statement is true on this domain, so it does not make the assertion false.\n\nC. $D=(0,1) \\subset \\mathbb{R}$. For $0 < x < 1$, multiplying the inequality $0 < x < 1$ by the positive $x$ gives $0 < x^{2} < x$, hence\n$$\nx^{2} - x < 0,\n$$\nso $x^{2} > x$ is false for every $x \\in (0,1)$. Therefore, the universal statement is false on this domain.\n\nD. $D=\\{2\\}$. Check the single element: $2^{2} - 2 = 4 - 2 = 2 > 0$, so $2^{2} > 2$. Hence the universal statement is true on this domain.\n\nE. $D=\\emptyset$. A universal statement over the empty set is vacuously true. Therefore, it does not make the assertion false.\n\nConclusion: Only domain C makes the universally quantified assertion false.", "answer": "$$\\boxed{C}$$", "id": "1393694"}, {"introduction": "The power of predicate logic extends far beyond numbers; it allows us to formalize and reason about abstract structures common in computer science and other fields. In this problem, the domain is not a set of numbers but the power set of components for a computer build. This practice [@problem_id:1393698] will enhance your ability to test a universal claim over a discrete, non-numerical domain and evaluate a compound logical condition, a skill essential for system specification and verification.", "problem": "In a simplified model of computer architecture, a basic system is assembled from a set of fundamental components. Let this set of components be $S = \\{\\text{Central Processing Unit (CPU)}, \\text{Random-Access Memory (RAM)}, \\text{Solid-State Drive (SSD)}\\}$.\n\nA \"build configuration\", denoted by the variable $B$, is defined as any possible subset of the component set $S$. The domain for $B$ is therefore the power set of $S$.\n\nA build configuration $B$ is considered \"viable\" if it satisfies the following logical condition:\nThe number of components in $B$ is less than two, OR the build configuration $B$ contains the CPU.\n\nDetermine the truth value of the proposition: \"For every possible build configuration $B$, the configuration is viable.\"\n\nWhich of the following statements is correct?\n\nA. True, because any build configuration that does not contain a CPU will automatically have fewer than two components.\n\nB. False, because the build configuration consisting of only a Random-Access Memory and a Solid-State Drive is not considered viable according to the given condition.\n\nC. True, because the build configuration containing all three components (CPU, RAM, and SSD) is considered viable.\n\nD. False, because a build configuration with no components (the empty set) is not considered viable.", "solution": "Let the set of components be $S = \\{\\text{CPU}, \\text{RAM}, \\text{SSD}\\}$. A build configuration $B$ is a subset of $S$, so the domain of $B$ is the power set of $S$, denoted as $\\mathcal{P}(S)$.\n\nThe condition for a build configuration $B$ to be \"viable\" can be written as a logical predicate, $P(B)$:\n$P(B) \\equiv (|B| < 2) \\lor (\\text{CPU} \\in B)$\n\nThe proposition we need to evaluate is \"For every possible build configuration $B$, the configuration is viable.\" In formal logic, this is a universally quantified statement:\n$\\forall B \\in \\mathcal{P}(S), P(B)$\n\nFor a universally quantified statement to be true, the predicate $P(B)$ must be true for every single element $B$ in the domain $\\mathcal{P}(S)$. If we can find just one element $B$ in $\\mathcal{P}(S)$ for which $P(B)$ is false, this element serves as a counterexample, and the entire universal statement is false.\n\nLet's list all possible build configurations in the domain $\\mathcal{P}(S)$:\nThe size of $S$ is $|S|=3$. The size of the power set $\\mathcal{P}(S)$ is $2^{|S|} = 2^3 = 8$. The elements are:\n1.  $B_1 = \\emptyset$ (the empty set)\n2.  $B_2 = \\{\\text{CPU}\\}$\n3.  $B_3 = \\{\\text{RAM}\\}$\n4.  $B_4 = \\{\\text{SSD}\\}$\n5.  $B_5 = \\{\\text{CPU}, \\text{RAM}\\}$\n6.  $B_6 = \\{\\text{CPU}, \\text{SSD}\\}$\n7.  $B_7 = \\{\\text{RAM}, \\text{SSD}\\}$\n8.  $B_8 = \\{\\text{CPU}, \\text{RAM}, \\text{SSD}\\}$\n\nNow, we test the predicate $P(B) \\equiv (|B| < 2) \\lor (\\text{CPU} \\in B)$ for each of these 8 configurations. A disjunction ($\\lor$, OR) is true if at least one of its operands is true. It is false only if both operands are false.\n\n-   For $B_1 = \\emptyset$: $|B_1|=0$. Since $0 < 2$, the first part of the predicate is true. So, $P(B_1)$ is true.\n-   For $B_2 = \\{\\text{CPU}\\}$: $|B_2|=1$. Since $1 < 2$, the first part is true. So, $P(B_2)$ is true. (The second part is also true, but we only need one).\n-   For $B_3 = \\{\\text{RAM}\\}$: $|B_3|=1$. Since $1 < 2$, the first part is true. So, $P(B_3)$ is true.\n-   For $B_4 = \\{\\text{SSD}\\}$: $|B_4|=1$. Since $1 < 2$, the first part is true. So, $P(B_4)$ is true.\n-   For $B_5 = \\{\\text{CPU}, \\text{RAM}\\}$: $|B_5|=2$. The first part, $|B_5| < 2$, is false. The second part, $\\text{CPU} \\in B_5$, is true. So, $P(B_5)$ is true.\n-   For $B_6 = \\{\\text{CPU}, \\text{SSD}\\}$: $|B_6|=2$. The first part is false. The second part, $\\text{CPU} \\in B_6$, is true. So, $P(B_6)$ is true.\n-   For $B_7 = \\{\\text{RAM}, \\text{SSD}\\}$: $|B_7|=2$. The first part, $|B_7| < 2$, is false. The second part, $\\text{CPU} \\in B_7$, is also false since the CPU is not in this set. Since both parts of the disjunction are false, the predicate $P(B_7)$ is false.\n-   For $B_8 = \\{\\text{CPU}, \\text{RAM}, \\text{SSD}\\}$: $|B_8|=3$. The first part, $|B_8| < 2$, is false. The second part, $\\text{CPU} \\in B_8$, is true. So, $P(B_8)$ is true.\n\nWe have found a counterexample: the build configuration $B_7 = \\{\\text{RAM}, \\text{SSD}\\}$. For this configuration, the \"viable\" condition is not met. Therefore, the statement \"For every possible build configuration $B$, the configuration is viable\" is False.\n\nNow let's analyze the given options:\nA. True, because any build configuration that does not contain a CPU will automatically have fewer than two components. This is incorrect. The counterexample $\\{\\text{RAM}, \\text{SSD}\\}$ does not contain a CPU and has exactly two components, not fewer than two.\nB. False, because the build configuration consisting of only a Random-Access Memory and a Solid-State Drive is not considered viable according to the given condition. This statement is correct. It correctly identifies that the proposition is false and provides the precise counterexample we found.\nC. True, because the build configuration containing all three components (CPU, RAM, and SSD) is considered viable. The proposition is universal. Showing it is true for one case does not prove it is true for all cases. While the reasoning provided is factually correct for that specific build, it does not justify the \"True\" conclusion for the universal statement.\nD. False, because a build configuration with no components (the empty set) is not considered viable. This is incorrect. The empty build has size 0, and since $0 < 2$, it is considered viable by the first part of the condition.\n\nThus, the correct choice is B.", "answer": "$$\\boxed{B}$$", "id": "1393698"}, {"introduction": "When quantifiers are nested, their order is not interchangeableâ€”it dramatically alters the logical meaning. This concept is fundamental to expressing complex relationships in mathematics and computer science. This exercise [@problem_id:1393739] provides a concrete scenario to explore the profound difference between the statements $\\forall n \\exists m P(n,m)$ and $\\exists m \\forall n P(n,m)$, honing your ability to interpret and construct precise, complex logical statements.", "problem": "Let the domain for the variables $n$ and $m$ be the set of integers $S = \\{1, 2, 3, 4, 5, 6, 7, 8, 9, 10\\}$. Consider the predicate $P(n,m)$ which asserts that \"$n+m$ is a perfect square\". Determine which of the following quantified statements is true.\n\nA. $\\forall n \\in S, \\exists m \\in S \\text{ such that } P(n,m)$\n\nB. $\\exists n \\in S, \\forall m \\in S \\text{ such that } P(n,m)$\n\nC. $\\forall n \\in S, \\forall m \\in S \\text{ such that } P(n,m)$\n\nD. $\\exists m \\in S, \\forall n \\in S \\text{ such that } P(n,m)$", "solution": "Let $S=\\{1,2,\\dots,10\\}$ and $P(n,m)$ be the predicate that $n+m$ is a perfect square. Since $n,m\\in S$, the possible sums satisfy $2\\leq n+m\\leq 20$. The only perfect squares in $\\{2,3,\\dots,20\\}$ are $\\{4,9,16\\}$.\n\nAssess A: $\\forall n\\in S,\\ \\exists m\\in S$ such that $P(n,m)$. For each $n\\in S$, choose $m$ as follows:\n- If $1\\leq n\\leq 3$, let $m=4-n$. Then $m\\in\\{1,2,3\\}\\subset S$ and $n+m=4$.\n- If $4\\leq n\\leq 8$, let $m=9-n$. Then $m\\in\\{1,2,3,4,5\\}\\subset S$ and $n+m=9$.\n- If $9\\leq n\\leq 10$, let $m=16-n$. Then $m\\in\\{6,7\\}\\subset S$ and $n+m=16$.\nIn each case $m\\in S$ and $n+m$ is a perfect square. Therefore A is true.\n\nAssess B: $\\exists n\\in S,\\ \\forall m\\in S$ such that $P(n,m)$. For any fixed $n\\in S$, the set $\\{n+m:m\\in S\\}=\\{n+1,n+2,\\dots,n+10\\}$ contains $10$ consecutive integers, but within $[2,20]$ only $3$ of these can be perfect squares, namely $\\{4,9,16\\}$. Hence it is impossible that all $10$ sums are perfect squares, so B is false.\n\nAssess C: $\\forall n\\in S,\\ \\forall m\\in S$ such that $P(n,m)$. Take $n=1$ and $m=1$. Then $n+m=2$, which is not a perfect square. Hence C is false.\n\nAssess D: $\\exists m\\in S,\\ \\forall n\\in S$ such that $P(n,m)$. For any fixed $m\\in S$, the set $\\{n+m:n\\in S\\}=\\{m+1,m+2,\\dots,m+10\\}$ again has $10$ consecutive integers, but only $3$ possible perfect squares in $[2,20]$. Thus it is impossible for all $10$ sums to be perfect squares, so D is false.\n\nTherefore, exactly statement A is true.", "answer": "$$\\boxed{A}$$", "id": "1393739"}]}