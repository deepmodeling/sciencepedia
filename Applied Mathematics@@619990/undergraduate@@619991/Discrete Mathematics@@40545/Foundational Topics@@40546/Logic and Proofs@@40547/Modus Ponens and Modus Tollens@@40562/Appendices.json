{"hands_on_practices": [{"introduction": "Let's begin by applying logical inference to a familiar mathematical context. This exercise uses a basic theorem from number theory to illustrate the power of Modus Tollens, the rule of denying the consequent. Understanding how to use the contrapositive of a statement, as we will do here [@problem_id:1386026], is a fundamental skill for constructing valid arguments and proofs.", "problem": "In the study of number theory, we accept the following theorem as a true statement: \"If an integer is divisible by 10, then its decimal representation must end in a 0.\"\n\nNow, consider a specific integer named $k$. The only fact we are given about $k$ is that its decimal representation ends in the digit 5.\n\nBased exclusively on the theorem and the fact provided, which of the following statements is a logically necessary conclusion?\n\nA. $k$ is divisible by 10.\nB. $k$ is not divisible by 10.\nC. If an integer's decimal representation ends in a 0, then it is divisible by 10.\nD. No conclusion can be drawn about whether $k$ is divisible by 10.\nE. Any integer that is not divisible by 10 must end in a 5.", "solution": "Let $P(n)$ be the statement \"the integer $n$ is divisible by $10$\" and let $Q(n)$ be the statement \"the decimal representation of $n$ ends in $0$.\" The given theorem is the universal implication\n$$\\forall n \\in \\mathbb{Z},\\; P(n) \\Rightarrow Q(n).$$\nA fundamental logical equivalence is that an implication $P \\Rightarrow Q$ is logically equivalent to its contrapositive $\\neg Q \\Rightarrow \\neg P$. Therefore, from the theorem we also have\n$$\\forall n \\in \\mathbb{Z},\\; \\neg Q(n) \\Rightarrow \\neg P(n).$$\n\nWe are given the fact that $k$ ends in $5$. This implies $\\neg Q(k)$, i.e., $k$ does not end in $0$. Applying the contrapositive to $n = k$ yields\n$$\\neg Q(k) \\Rightarrow \\neg P(k),$$\nhence $\\neg P(k)$, which is the statement \" $k$ is not divisible by $10$.\"\n\nTherefore, the necessary conclusion is that $k$ is not divisible by $10$, which corresponds to option B. Options A and D are incompatible with this deduction, C is the converse of the given theorem and is not entailed by it, and E makes an unwarranted universal claim not supported by the premise.", "answer": "$$\\boxed{B}$$", "id": "1386026"}, {"introduction": "Now we move from a purely mathematical domain to a practical scenario that might be faced by a software developer. This problem challenges you to act as a detective, using logical deduction to pinpoint the cause of a system failure. Your task [@problem_id:1386013] is to apply Modus Tollens by carefully selecting the relevant rule from a set of system specifications and pairing it with an observed outcome to find the one necessary conclusion.", "problem": "A junior software developer is debugging a complex legacy system. The system's behavior is governed by a strict set of logical rules documented by the original programmers. The developer must use these rules to determine the cause of a specific session failure.\n\nThe rules are as follows:\n1. If the database connection is successful, the system then proceeds to validate the user's credentials.\n2. If the user's credentials are not valid, the system logs an \"Access Denied\" error message.\n3. If the system does not log an \"Access Denied\" error message, then the user is granted access to the main dashboard.\n\nDuring the analysis of a specific failed session, the developer examines the system's final state and confirms that the user was **not** granted access to the main dashboard.\n\nAssuming the system's rules are followed perfectly, which of the following statements can be logically deduced with absolute certainty from this observation?\n\nA. The database connection was not successful.\nB. The user's credentials were valid.\nC. The system logged an \"Access Denied\" error message.\nD. The database connection was successful.\nE. The database connection was successful, but the user's credentials were not valid.", "solution": "Let the propositions be defined as follows: $D$ denotes that the database connection is successful; $V$ denotes that the system proceeds to validate the user's credentials; $C$ denotes that the user's credentials are valid; $A$ denotes that the system logs an \"Access Denied\" error message; $G$ denotes that the user is granted access to the main dashboard.\n\nTranslate the rules into propositional implications:\n1. From rule 1: $D \\rightarrow V$.\n2. From rule 2: $\\neg C \\rightarrow A$.\n3. From rule 3: $\\neg A \\rightarrow G$.\n\nThe observed final state is that the user was not granted access to the main dashboard, i.e., $\\neg G$.\n\nUse the contrapositive law: for any implication $p \\rightarrow q$, its contrapositive is $\\neg q \\rightarrow \\neg p$, and they are logically equivalent. Apply this to rule 3 with $p = \\neg A$ and $q = G$ to obtain the contrapositive:\n$$\\neg G \\rightarrow A.$$\n\nBy modus ponens, from the observation $\\neg G$ and the contrapositive $\\neg G \\rightarrow A$, deduce:\n$$A.$$\n\nAssess what else follows:\n- From rule 2 we have $\\neg C \\rightarrow A$, whose contrapositive is $\\neg A \\rightarrow C$. Neither $A$ nor these implications allow deducing $C$ or $\\neg C$ from $A$ alone, so neither $C$ nor $\\neg C$ is certain.\n- Rule 1, $D \\rightarrow V$, is independent of $A$ and $G$; from $A$ or $\\neg G$ we cannot infer $D$ or $\\neg D$.\n- Therefore, the only statement that can be concluded with certainty is that the system logged an \"Access Denied\" error message, i.e., $A$.\n\nMapping back to the options, this corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1386013"}, {"introduction": "This final practice demonstrates how simple inference rules are essential in complex, multi-stage reasoning. You will need to synthesize information from different sources, apply a relevant mathematical theorem from poset theory, and then use the established result as a premise in a final Modus Ponens step. This exercise [@problem_id:1386029] showcases how foundational logic underpins advanced problem-solving in fields like computer science and operations research.", "problem": "In the design of a large-scale data processing pipeline, the set of all computational tasks is structured as a Partially Ordered Set (poset), denoted by $(P, \\preceq)$, where for two tasks $t_1$ and $t_2$, $t_1 \\preceq t_2$ means that task $t_1$ must be completed before task $t_2$ can begin.\n\nThe pipeline is to be executed on a cluster of identical processor cores. A single processor core can execute a sequence of tasks $c_1, c_2, \\dots, c_k$ only if they form a **chain**, meaning $c_1 \\preceq c_2 \\preceq \\dots \\preceq c_k$. To run the entire pipeline, the set of all tasks $P$ must be partitioned into a collection of such chains, with each chain being assigned to a different processor core. The minimum number of cores required is therefore the minimum number of chains needed to partition $P$.\n\nAn **antichain** is a set of tasks where no two distinct tasks are related by the $\\preceq$ relation; that is, they are all mutually independent and can, in principle, be run concurrently. A key result in this area is Dilworth's Theorem, which states that for any finite poset, the minimum number of chains required to partition the poset is equal to the size of its largest possible antichain.\n\nConsider the following statements made by the team working on this project:\n1.  **Systems Analyst:** \"I have identified a set of five critical tasks, $\\{T_A, T_B, T_C, T_D, T_E\\}$, and I have formally verified that for any two distinct tasks $T_i, T_j$ from this set, neither $T_i \\preceq T_j$ nor $T_j \\preceq T_i$ holds.\"\n2.  **Lead Architect:** \"Based on my theoretical analysis of the dependency graph, it is impossible for any set of more than five tasks to be mutually independent.\"\n3.  **Lead Developer:** \"If the minimum number of processor cores required for this pipeline is exactly five, then our new resource allocation software is validated.\"\n4.  **Project Manager:** \"If our new resource allocation software is not validated, we must revert to the old, less efficient system.\"\n\nGiven these four statements, which of the following conclusions can be logically derived without ambiguity?\n\nA. The project must revert to the old, less efficient system.\nB. The statements from the Systems Analyst and the Lead Architect are contradictory.\nC. The new resource allocation software is validated.\nD. At least six processor cores are required to run the pipeline.\nE. The minimum number of processor cores required cannot be determined from the given information.", "solution": "We formalize the given notions for the poset $(P,\\preceq)$:\n- A chain is a totally ordered subset under $\\preceq$.\n- An antichain is a subset of pairwise incomparable elements.\n- Let $w(P)$ denote the width of $P$, i.e., the size of a largest antichain.\n- Let $c(P)$ denote the minimum number of chains needed to partition $P$.\n\nBy Dilworth’s Theorem for finite posets, the key structural principle is:\n$$\nc(P)=w(P).\n$$\nInterpretation of the statements:\n1. Systems Analyst: There exists an antichain $\\{T_{A},T_{B},T_{C},T_{D},T_{E}\\}$ of size $5$. Hence,\n$$\nw(P)\\geq 5.\n$$\n2. Lead Architect: No antichain has more than $5$ elements. Hence,\n$$\nw(P)\\leq 5.\n$$\nCombining these,\n$$\nw(P)=5.\n$$\nApplying Dilworth’s Theorem,\n$$\nc(P)=w(P)=5.\n$$\nThus the minimum number of processor cores required is exactly $5$.\n\n3. Lead Developer states: “If the minimum number of processor cores required is exactly five, then our new resource allocation software is validated.” This is a logical implication: if `$c(P)=5$`, then the software is validated. Since `$c(P)=5$` has been established, by modus ponens the software is validated.\n\n4. Project Manager states: “If our new software is not validated, we must revert to the old system.” This implication has antecedent “not validated,” which is false given the conclusion above; therefore, no conclusion about reverting follows, and reverting is not logically entailed.\n\nNow evaluate the options:\n- A is not entailed because validation holds, so reverting is not forced.\n- B is false; the Analyst’s existence of a $5$-element antichain and the Architect’s upper bound of $5$ are consistent and together imply `$w(P)=5$`.\n- C is true by the Lead Developer’s implication and `$c(P)=5$`.\n- D is false because `$c(P)=5$`, not at least $6$.\n- E is false because we determined the exact minimum number of cores.\n\nTherefore, the only conclusion derivable without ambiguity is C.", "answer": "$$\\boxed{C}$$", "id": "1386029"}]}