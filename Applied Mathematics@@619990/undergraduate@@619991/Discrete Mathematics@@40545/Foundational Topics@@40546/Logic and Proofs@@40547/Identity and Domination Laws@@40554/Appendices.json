{"hands_on_practices": [{"introduction": "The principles of logic are not just abstract concepts; they are the bedrock of software development and system design. This first exercise [@problem_id:1374698] places you in the role of a software engineer tasked with optimizing an access control system. By analyzing the operational context, where a user's existence is a given, you can apply the identity law for conjunction ($p \\land \\top \\equiv p$) to simplify a logical permission check, making the underlying code more efficient and readable.", "problem": "In the design of a web application's access control system, a particular function checks if a user is permitted to edit a specific document. The logic for this permission check is implemented as a compound statement: \"the user has 'edit' permissions for the document, AND the user's account exists in the system.\"\n\nThis check is only ever performed for users who are currently logged into the system. A user cannot be logged in without having an account that exists in the system. Given this operational context, determine the most simplified logical equivalent of the original permission check.\n\nSelect the correct simplified statement from the options below:\n\nA. The user has 'edit' permissions for the document.\n\nB. The user's account exists in the system.\n\nC. The permission check is always logically true.\n\nD. The permission check is always logically false.\n\nE. The user has 'edit' permissions for the document, OR the user's account exists in the system.", "solution": "Let $E$ denote \"the user has edit permissions for the document,\" $A$ denote \"the user's account exists in the system,\" and $L$ denote \"the user is logged in.\"\n\nThe original check is the conjunction:\n$$E \\land A.$$\n\nGiven the operational context, the check is only performed when $L$ is true, and the domain constraint states:\n$$L \\implies A.$$\n\nSince the check is evaluated only under the assumption $L$, we can derive $A$ by modus ponens:\n$$L \\text{ and } (L \\implies A) \\;\\Rightarrow\\; A.$$\n\nThus, within this context, $A$ is known to be true. Substituting this fact into the original conjunction yields, by the identity law for conjunction with a true operand:\n$$E \\land \\top \\equiv E.$$\n\nThis is not a tautology (since $E$ can be false), nor is it equivalent to $A$ alone, nor to $E \\lor A$. Therefore, the simplified logical equivalent is \"the user has edit permissions for the document,\" which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1374698"}, {"introduction": "Logical rules, especially in critical systems like network firewalls, can sometimes have unintended and sweeping consequences due to seemingly minor components. This problem [@problem_id:1374720] explores a scenario demonstrating how the domination law for disjunction ($p \\lor \\top \\equiv \\top$) can cause a complex expression to evaluate to a simple, constant result. Mastering this concept is crucial for designing and debugging robust logical systems, ensuring that rules behave as intended without creating security holes or blocking all traffic.", "problem": "A junior network administrator at a data center is configuring a new firewall system. The system's purpose is to \"FLAG\" an incoming data packet for an intensive security scan based on a set of logical conditions. The administrator defines three propositional variables to represent the state of any given packet:\n\n- Let $P$ be the proposition: \"The packet originates from a non-standard IP range.\"\n- Let $Q$ be the proposition: \"The packet's data payload is encrypted.\"\n- Let $R$ be the proposition: \"The packet is a re-transmission of a previously dropped packet.\"\n\nThe administrator combines these into a single \"FLAG\" rule. A packet is flagged if the following logical expression evaluates to true:\n\n$$(P \\land \\neg Q) \\lor (R \\lor \\neg R)$$\n\nWhich of the following statements accurately describes the net effect of this firewall rule on all incoming data packets?\n\nA. A packet is flagged only if it originates from a non-standard IP range and its payload is not encrypted.\n\nB. All incoming packets are flagged, regardless of their origin, encryption status, or re-transmission status.\n\nC. No packets are ever flagged because the rule contains a logical contradiction.\n\nD. A packet is flagged only if it is a re-transmission of a previously dropped packet.\n\nE. A packet is flagged if it originates from a non-standard IP range and has an unencrypted payload, or if it is a re-transmission.", "solution": "We analyze the logical expression for the firewall rule:\n$$(P \\land \\neg Q) \\lor (R \\lor \\neg R).$$\nBy the law of the excluded middle, for any proposition $R$, the disjunction $R \\lor \\neg R$ is always true. Denote this truth value as $\\top$, so we have\n$$R \\lor \\neg R \\equiv \\top.$$\nSubstituting this into the original expression yields\n$$(P \\land \\neg Q) \\lor \\top.$$\nUsing the domination law for disjunction, which states that for any proposition $X$, $X \\lor \\top \\equiv \\top$, we obtain\n$$(P \\land \\neg Q) \\lor \\top \\equiv \\top.$$\nTherefore, the entire expression evaluates to true for all truth values of $P$, $Q$, and $R$. This means every incoming packet is flagged, regardless of its origin, encryption status, or re-transmission status. Hence, the accurate description is option B.", "answer": "$$\\boxed{B}$$", "id": "1374720"}, {"introduction": "The elegance of mathematics lies in how core principles manifest across different domains. The identity laws from propositional logic have direct counterparts in set theory, the language of databases and data analysis. This final practice [@problem_id:1374705] challenges you to apply the identity law for set union ($A \\cup \\emptyset = A$), but with a twist: you must first use deductive reasoning and number theory to discover that one of the sets in a data filtering scenario is, in fact, the empty set.", "problem": "In a data analysis system, a universal set of identifiers is defined as $U = \\{ n \\in \\mathbb{Z} \\mid 1 \\le n \\le 25 \\}$. Two filtering criteria are applied to this set to create two new sets, $P$ and $Q$.\n\nThe first set, $P$, is generated by selecting all integers $x$ from $U$ such that $x  1$ and the only positive integers that divide $x$ are 1 and $x$ itself.\n\nThe second set, $Q$, is generated by selecting all integers $y$ from $U$ such that $y$ is a perfect square and $y+2$ is also a perfect square.\n\nA final report set, $R$, is created by combining these two sets. The set $R$ contains every element that is in set $P$, or in set $Q$, or in both. Which of the following options correctly represents the set $R$?\n\nA. $\\{2, 3, 5, 7, 11, 13, 17, 19, 23\\}$\n\nB. $\\emptyset$\n\nC. $\\{1, 2, 3, 5, 7, 11, 13, 17, 19, 23\\}$\n\nD. $\\{1, 4, 9, 16, 25\\}$\n\nE. $\\{1, 4, 9, 16, 23, 25\\}$", "solution": "The universal set is $U=\\{n\\in \\mathbb{Z}\\mid 1\\leq n\\leq 25\\}$.\n\nSet $P$ selects integers $x\\in U$ such that $x1$ and the only positive divisors of $x$ are $1$ and $x$, which is precisely the definition of a prime number. The primes in $U$ are\n$$P=\\{2,3,5,7,11,13,17,19,23\\}.$$\n\nSet $Q$ selects integers $y\\in U$ such that $y$ is a perfect square and $y+2$ is also a perfect square. Let $y=a^2$ and $y+2=b^2$ for integers $a,b$. Then\n$$b^2-a^2=2 \\implies (b-a)(b+a)=2.$$\nSince $a\\geq 1$ for $y\\in U$, we have $ba\\geq 1$, so $b-a$ and $b+a$ are positive integers. The only positive factor pairs of $2$ are $(1,2)$. However, $b-a$ and $b+a$ must have the same parity, while $1$ and $2$ have opposite parity, so there is no integer solution. Therefore,\n$$Q=\\emptyset.$$\n\nThe report set is the union $R=P\\cup Q=P\\cup \\emptyset=P=\\{2,3,5,7,11,13,17,19,23\\}.$\nThis matches option A.", "answer": "$$\\boxed{A}$$", "id": "1374705"}]}