{"hands_on_practices": [{"introduction": "The first step in building a robust communication system is learning how to encode information. This practice provides a direct, hands-on opportunity to apply the fundamental rules of a $(7,4)$ Hamming code. By manually calculating the parity bits for a given data message, you will construct a complete codeword, gaining an essential understanding of how redundancy is purposefully added to protect data against errors. [@problem_id:1373675]", "problem": "In designing a fault-tolerant communication system for a remote environmental monitoring station, an engineer employs a standard $(7,4)$ Hamming code to encode 4-bit data messages into 7-bit codewords. This process adds redundancy to allow for the detection and correction of single-bit errors that may occur during wireless transmission.\n\nThe encoding scheme is defined as follows:\nA 4-bit message, represented as $(d_1, d_2, d_3, d_4)$, is embedded into a 7-bit codeword, represented as $(c_1, c_2, c_3, c_4, c_5, c_6, c_7)$. The bits are numbered 1 through 7 from left to right.\n- The data bits $(d_1, d_2, d_3, d_4)$ are placed at positions $(3, 5, 6, 7)$ of the codeword, respectively. Thus, $c_3=d_1$, $c_5=d_2$, $c_6=d_3$, and $c_7=d_4$.\n- The remaining positions, which are powers of two $(1, 2, 4)$, are filled with parity bits $(p_1, p_2, p_3)$. Thus, $c_1=p_1$, $c_2=p_2$, and $c_4=p_3$.\n- Each parity bit is calculated to enforce an even parity rule over a specific set of codeword positions. The parity checks use the exclusive OR (XOR, denoted by $\\oplus$) operation, where the result of the XOR sum of the checked bits (including the parity bit itself) must be 0.\n  - $p_1$ governs positions 1, 3, 5, 7.  ($c_1 \\oplus c_3 \\oplus c_5 \\oplus c_7 = 0$)\n  - $p_2$ governs positions 2, 3, 6, 7.  ($c_2 \\oplus c_3 \\oplus c_6 \\oplus c_7 = 0$)\n  - $p_3$ governs positions 4, 5, 6, 7.  ($c_4 \\oplus c_5 \\oplus c_6 \\oplus c_7 = 0$)\n\nA sensor transmits the 4-bit message `1011`. What is the corresponding 7-bit Hamming codeword that is generated?\n\nA. 0110011\n\nB. 1011011\n\nC. 1010101\n\nD. 0010011\n\nE. 1110011", "solution": "Let the message be $(d_{1},d_{2},d_{3},d_{4})=(1,0,1,1)$. Place data bits into the codeword positions: $c_{3}=d_{1}=1$, $c_{5}=d_{2}=0$, $c_{6}=d_{3}=1$, $c_{7}=d_{4}=1$. Let parity bits be $c_{1}=p_{1}$, $c_{2}=p_{2}$, $c_{4}=p_{3}$ and enforce even parity.\n\nFor $p_{1}$ over positions $1,3,5,7$:\n$$c_{1}\\oplus c_{3}\\oplus c_{5}\\oplus c_{7}=0 \\implies c_{1}\\oplus 1\\oplus 0\\oplus 1=0 \\implies c_{1}\\oplus 0=0 \\implies c_{1}=0.$$\n\nFor $p_{2}$ over positions $2,3,6,7$:\n$$c_{2}\\oplus c_{3}\\oplus c_{6}\\oplus c_{7}=0 \\implies c_{2}\\oplus 1\\oplus 1\\oplus 1=0 \\implies c_{2}\\oplus 1=0 \\implies c_{2}=1.$$\n\nFor $p_{3}$ over positions $4,5,6,7$:\n$$c_{4}\\oplus c_{5}\\oplus c_{6}\\oplus c_{7}=0 \\implies c_{4}\\oplus 0\\oplus 1\\oplus 1=0 \\implies c_{4}\\oplus 0=0 \\implies c_{4}=0.$$\n\nThus the codeword is $(c_{1},c_{2},c_{3},c_{4},c_{5},c_{6},c_{7})=(0,1,1,0,0,1,1)$, i.e., $0110011$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1373675"}, {"introduction": "Now that you can encode a message, let's explore the \"magic\" of error correction from the receiver's perspective. This exercise introduces the parity-check matrix $H$ and the concept of the syndrome, a unique signature that reveals the location of an error. You will simulate the process of receiving a corrupted message, calculating its syndrome, and using that information to pinpoint and flip the incorrect bit, thereby restoring the original data. [@problem_id:1373652]", "problem": "In a digital communication system that monitors environmental data, messages are encoded using a systematic (7,4) Hamming code to protect against single-bit errors that may occur during transmission through a noisy channel. A 4-bit data message, denoted as $m = (d_1, d_2, d_3, d_4)$, is encoded into a 7-bit codeword $c = (c_1, c_2, c_3, c_4, c_5, c_6, c_7)$.\n\nThe structure of the codeword is as follows:\n- The data bits are placed at positions that are not powers of two: $c_3 = d_1$, $c_5 = d_2$, $c_6 = d_3$, and $c_7 = d_4$.\n- The parity-check bits, $p_1, p_2, p_3$, are placed at positions that are powers of two: $c_1 = p_1$, $c_2 = p_2$, and $c_4 = p_3$.\n\nA codeword is valid if and only if it satisfies the condition $Hc^T = \\mathbf{0}$, where $\\mathbf{0}$ is the $3 \\times 1$ zero vector and all arithmetic is performed modulo 2. The parity-check matrix $H$ for this specific code is given by:\n$$ H = \\begin{pmatrix} 0 & 0 & 0 & 1 & 1 & 1 & 1 \\\\ 0 & 1 & 1 & 0 & 0 & 1 & 1 \\\\ 1 & 0 & 1 & 0 & 1 & 0 & 1 \\end{pmatrix} $$\nA 7-bit word $r = (0, 0, 0, 1, 0, 0, 1)$ is received from the sensor. Assuming that at most one bit has been flipped during transmission, determine the original 4-bit data message $m = (d_1, d_2, d_3, d_4)$ that was sent.\n\nSelect the correct message from the options below:\n\nA. 0001\n\nB. 0101\n\nC. 1001\n\nD. 0011\n\nE. 1100", "solution": "We use the syndrome decoding rule for a single-error-correcting Hamming code: for a received word $r=(r_{1},\\dots,r_{7})$, the syndrome is $s=Hr^{T}$ over $\\mathbb{F}_{2}$. If exactly one bit is in error at position $j$, then $s$ equals the $j$th column of $H$.\n\nGiven\n$$\nH=\\begin{pmatrix}\n0 & 0 & 0 & 1 & 1 & 1 & 1\\\\\n0 & 1 & 1 & 0 & 0 & 1 & 1\\\\\n1 & 0 & 1 & 0 & 1 & 0 & 1\n\\end{pmatrix},\\qquad\nr=(0,0,0,1,0,0,1),\n$$\ncompute $s=Hr^{T}$ modulo $2$ by row-wise dot products:\n$$\ns_{1}=(0\\cdot 0)+(0\\cdot 0)+(0\\cdot 0)+(1\\cdot 1)+(1\\cdot 0)+(1\\cdot 0)+(1\\cdot 1)\\equiv 0+0+0+1+0+0+1 \\equiv 0 \\pmod{2},\n$$\n$$\ns_{2}=(0\\cdot 0)+(1\\cdot 0)+(1\\cdot 0)+(0\\cdot 1)+(0\\cdot 0)+(1\\cdot 0)+(1\\cdot 1)\\equiv 0+0+0+0+0+0+1 \\equiv 1 \\pmod{2},\n$$\n$$\ns_{3}=(1\\cdot 0)+(0\\cdot 0)+(1\\cdot 0)+(0\\cdot 1)+(1\\cdot 0)+(0\\cdot 0)+(1\\cdot 1)\\equiv 0+0+0+0+0+0+1 \\equiv 1 \\pmod{2}.\n$$\nThus $s=(0,1,1)^{T}$. The columns of $H$ are\n$$\nH_{\\cdot,1}=\\begin{pmatrix}0\\\\0\\\\1\\end{pmatrix},\\;\nH_{\\cdot,2}=\\begin{pmatrix}0\\\\1\\\\0\\end{pmatrix},\\;\nH_{\\cdot,3}=\\begin{pmatrix}0\\\\1\\\\1\\end{pmatrix},\\;\nH_{\\cdot,4}=\\begin{pmatrix}1\\\\0\\\\0\\end{pmatrix},\\;\nH_{\\cdot,5}=\\begin{pmatrix}1\\\\0\\\\1\\end{pmatrix},\\;\nH_{\\cdot,6}=\\begin{pmatrix}1\\\\1\\\\0\\end{pmatrix},\\;\nH_{\\cdot,7}=\\begin{pmatrix}1\\\\1\\\\1\\end{pmatrix}.\n$$\nSince $s=H_{\\cdot,3}$, the single-bit error is at position $3$. Correcting $r$ by flipping $r_{3}$ yields the codeword\n$$\n\\hat{c}=r+e_{3}=(0,0,1,1,0,0,1),\n$$\nwhere $e_{3}$ is the unit vector with a $1$ at position $3$. Extract the data bits using $c_{3}=d_{1}$, $c_{5}=d_{2}$, $c_{6}=d_{3}$, $c_{7}=d_{4}$:\n$$\n(d_{1},d_{2},d_{3},d_{4})=(c_{3},c_{5},c_{6},c_{7})=(1,0,0,1).\n$$\nOption C corresponds to $1001$. A quick check confirms validity: $H\\hat{c}^{T}=\\mathbf{0}$ over $\\mathbb{F}_{2}$.", "answer": "$$\\boxed{C}$$", "id": "1373652"}, {"introduction": "Hamming codes are powerful, but understanding their limitations is just as crucial as knowing their capabilities. This exercise serves as a critical thought experiment to probe the boundaries of the code's single-error correction guarantee. By simulating a scenario with two bit-errors, you will observe how the decoding mechanism can be misled, incorrectly identifying a single error at a different location. This practice underscores the importance of the assumptions underlying error-correcting codes and why they are designed for a specific number of errors. [@problem_id:1373639]", "problem": "A communication system uses a systematic (7,4) Hamming code to transmit 4-bit data words. A 7-bit codeword $c = (c_1, c_2, c_3, c_4, c_5, c_6, c_7)$ is constructed from a 4-bit data word, whose bits are placed at positions 3, 5, 6, and 7 of the codeword. Three parity bits are calculated and placed at positions 1, 2, and 4. The codeword bits are thus arranged as $c = (c_1, c_2, c_3, c_4, c_5, c_6, c_7)$, where $c_1, c_2, c_4$ are the parity bits. The parity bits are calculated using the following even-parity equations, where $\\oplus$ denotes the XOR operation:\n$c_1 \\oplus c_3 \\oplus c_5 \\oplus c_7 = 0$\n$c_2 \\oplus c_3 \\oplus c_6 \\oplus c_7 = 0$\n$c_4 \\oplus c_5 \\oplus c_6 \\oplus c_7 = 0$\n\nUpon receiving a 7-bit word $y = (y_1, y_2, y_3, y_4, y_5, y_6, y_7)$, the receiver computes a 3-bit syndrome $s = (s_1, s_2, s_3)$ as follows:\n$s_1 = y_4 \\oplus y_5 \\oplus y_6 \\oplus y_7$\n$s_2 = y_2 \\oplus y_3 \\oplus y_6 \\oplus y_7$\n$s_3 = y_1 \\oplus y_3 \\oplus y_5 \\oplus y_7$\n\nThe decoding system is designed to correct at most one bit error. If the syndrome $s$ is $(0,0,0)$, the word is accepted as correct. If $s$ is non-zero, it is interpreted as the binary representation of the position of the single erroneous bit, with $s_1$ as the most significant bit. For example, a syndrome of $(1,0,1)$ indicates an error in bit position 5. The decoder then flips the bit at the indicated position to attempt correction.\n\nSuppose the 4-bit data word with bits for positions $(3, 5, 6, 7)$ given by $(1, 0, 1, 1)$ is encoded into its corresponding codeword $c$. During transmission, the codeword is corrupted such that the bits at positions 3 and 6 are flipped. What is the bit position that the receiver's single-error-correcting decoder will identify as being in error?", "solution": "The code is a systematic Hamming code with data bits placed at positions $3,5,6,7$ and parity bits at positions $1,2,4$. The even-parity equations are\n$$c_{1} \\oplus c_{3} \\oplus c_{5} \\oplus c_{7} = 0,$$\n$$c_{2} \\oplus c_{3} \\oplus c_{6} \\oplus c_{7} = 0,$$\n$$c_{4} \\oplus c_{5} \\oplus c_{6} \\oplus c_{7} = 0.$$\nWith data bits $(c_{3},c_{5},c_{6},c_{7})=(1,0,1,1)$, solve for the parity bits:\n$$c_{1} = c_{3} \\oplus c_{5} \\oplus c_{7} = 1 \\oplus 0 \\oplus 1 = 0,$$\n$$c_{2} = c_{3} \\oplus c_{6} \\oplus c_{7} = 1 \\oplus 1 \\oplus 1 = 1,$$\n$$c_{4} = c_{5} \\oplus c_{6} \\oplus c_{7} = 0 \\oplus 1 \\oplus 1 = 0.$$\nThus the transmitted codeword is\n$$(c_{1},c_{2},c_{3},c_{4},c_{5},c_{6},c_{7})=(0,1,1,0,0,1,1).$$\nDuring transmission, positions $3$ and $6$ are flipped, yielding the received word\n$$(y_{1},y_{2},y_{3},y_{4},y_{5},y_{6},y_{7})=(0,1,0,0,0,0,1).$$\nThe syndrome is computed by\n$$s_{1}=y_{4} \\oplus y_{5} \\oplus y_{6} \\oplus y_{7}=0 \\oplus 0 \\oplus 0 \\oplus 1=1,$$\n$$s_{2}=y_{2} \\oplus y_{3} \\oplus y_{6} \\oplus y_{7}=1 \\oplus 0 \\oplus 0 \\oplus 1=0,$$\n$$s_{3}=y_{1} \\oplus y_{3} \\oplus y_{5} \\oplus y_{7}=0 \\oplus 0 \\oplus 0 \\oplus 1=1.$$\nHence $s=(s_{1},s_{2},s_{3})=(1,0,1)$, which, with $s_{1}$ as the most significant bit, is the binary representation of position $5$. Therefore, the single-error-correcting decoder identifies bit position $5$ as being in error.", "answer": "$$\\boxed{5}$$", "id": "1373639"}]}