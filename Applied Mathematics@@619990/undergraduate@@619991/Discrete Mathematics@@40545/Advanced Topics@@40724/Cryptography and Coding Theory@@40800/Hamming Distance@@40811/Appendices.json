{"hands_on_practices": [{"introduction": "The first step in mastering any new concept is to practice its fundamental definition. This exercise provides a direct opportunity to calculate the Hamming distance, which is the number of positions at which two binary strings of equal length differ. By performing this straightforward computation, you will solidify your understanding of this core metric before moving on to more complex applications.[@problem_id:1941052]", "problem": "In digital communication systems, the Hamming distance is a metric for comparing two binary strings of equal length. It is defined as the number of bit positions in which the two strings differ. Consider two 8-bit binary words, Word A and Word B, which are transmitted over a channel.\n\nWord A is represented by the binary string `01000001`.\nWord B is represented by the binary string `01111010`.\n\nCalculate the Hamming distance between Word A and Word B.", "solution": "The Hamming distance between two binary strings of equal length is defined as the number of positions at which the corresponding bits differ. For strings $x$ and $y$ of length $n$, this can be written as\n$$\nd_{H}(x,y)=\\sum_{i=1}^{n} \\mathbf{1}\\{x_{i}\\neq y_{i}\\}=\\text{wt}(x\\oplus y),\n$$\nwhere $\\oplus$ denotes bitwise XOR and $\\text{wt}(\\cdot)$ is the Hamming weight (number of ones).\n\nGiven $A=01000001$ and $B=01111010$, compute the XOR:\n- Bitwise: $0\\oplus 0=0$, $1\\oplus 1=0$, $0\\oplus 1=1$, $0\\oplus 1=1$, $0\\oplus 1=1$, $0\\oplus 0=0$, $0\\oplus 1=1$, $1\\oplus 0=1$.\n- Therefore,\n$$\nA\\oplus B=00111011.\n$$\nCount ones in $00111011$: there are $5$ ones. Hence,\n$$\nd_{H}(A,B)=5.\n$$", "answer": "$$\\boxed{5}$$", "id": "1941052"}, {"introduction": "Moving beyond simple calculation, this practice explores a clever property of the Hamming distance. By comparing a binary string to reference strings composed of all ones or all zeros, you can establish a direct link between Hamming distance and Hamming weight (the number of ones in a string). This thought experiment serves to build a deeper, more intuitive grasp of the structural relationships within the space of binary strings.[@problem_id:1373971]", "problem": "In digital communications and coding theory, the concept of Hamming distance is fundamental for error detection and correction. A binary string is a sequence of characters, where each character is either a 0 or a 1. The Hamming distance between two binary strings of equal length is defined as the number of positions at which the corresponding characters are different.\n\nConsider two reference binary strings, `u = 11111` and `v = 00000`. Your task is to identify a binary string `s` of length 5 that satisfies two conditions simultaneously:\n1. The Hamming distance between `s` and `u` is exactly 2.\n2. The Hamming distance between `s` and `v` is exactly 3.\n\nWhich of the following binary strings is a valid choice for `s`?\n\nA. `10110`\n\nB. `00110`\n\nC. `11110`\n\nD. `01010`", "solution": "Let $u=11111$, $v=00000$, and let $s=s_{1}s_{2}s_{3}s_{4}s_{5}$ be a binary string of length $5$. The Hamming distance between two equal-length binary strings $x$ and $y$ is $d_{H}(x,y)=|\\{i:x_{i}\\neq y_{i}\\}|$.\n\nSince $u_{i}=1$ for all $i$, $d_{H}(s,u)$ equals the number of positions where $s_{i}=0$, i.e., the number of zeros in $s$. Since $v_{i}=0$ for all $i$, $d_{H}(s,v)$ equals the number of positions where $s_{i}=1$, i.e., the number of ones in $s$.\n\nThe conditions are:\n$$d_{H}(s,u)=2 \\implies \\text{number of zeros in } s=2,$$\n$$d_{H}(s,v)=3 \\implies \\text{number of ones in } s=3.$$\nThese are consistent because the length is $5$ and $2+3=5$. Therefore, a valid $s$ must have exactly three $1$'s and two $0$'s.\n\nCheck each option by counting ones and zeros:\n- A: $10110$ has three $1$'s and two $0$'s, so $d_{H}(A,u)=2$ and $d_{H}(A,v)=3$.\n- B: $00110$ has two $1$'s and three $0$'s, so $d_{H}(B,u)=3$ and $d_{H}(B,v)=2$ (fails).\n- C: $11110$ has four $1$'s and one $0$, so $d_{H}(C,u)=1$ and $d_{H}(C,v)=4$ (fails).\n- D: $01010$ has two $1$'s and three $0$'s, so $d_{H}(D,u)=3$ and $d_{H}(D,v)=2$ (fails).\n\nThus, only option A satisfies both conditions.", "answer": "$$\\boxed{A}$$", "id": "1373971"}, {"introduction": "This hands-on practice transitions from theoretical properties to a practical, real-world application of Hamming distance. It introduces a scenario common in digital communications: reconstructing an original message from several corrupted copies. Your task is to find a \"consensus\" string that minimizes the total Hamming distance to all received versions, a foundational technique in error-correction codes and data reconciliation.[@problem_id:1373967]", "problem": "In digital communications and information theory, the Hamming distance is a metric used for comparing two binary strings of equal length. It is defined as the number of positions at which the corresponding symbols (bits) are different.\n\nConsider a simple error-correction scenario where a 5-bit data packet is transmitted through three redundant channels. Due to potential noise during transmission, the three packets received at the destination are not identical. The received packets are:\n$S_1 = 10100$\n$S_2 = 01100$\n$S_3 = 11110$\n\nTo reconstruct the most likely original data packet, a common strategy is to find a \"consensus\" string. This is a 5-bit binary string, let's call it $C$, which minimizes the sum of the Hamming distances to each of the three received strings. That is, we seek to find the string $C$ that minimizes the quantity $d_H(C, S_1) + d_H(C, S_2) + d_H(C, S_3)$.\n\nFind the 5-bit binary consensus string $C$.", "solution": "The Hamming distance between two binary strings $x$ and $y$ of length $5$ is defined as $d_{H}(x,y)$, the number of positions where they differ. The sum we seek to minimize can be decomposed position-wise:\n$$\n\\sum_{i=1}^{3} d_{H}(C,S_{i})=\\sum_{j=1}^{5}\\sum_{i=1}^{3}\\mathbf{1}\\{C_{j}\\neq (S_{i})_{j}\\}.\n$$\nSince the sum separates over positions $j$, the optimal choice of $C_{j}$ at each position minimizes the number of disagreements with the three received bits at that position. Therefore, for each coordinate $j$, $C_{j}$ should equal the majority bit among $\\{(S_{1})_{j},(S_{2})_{j},(S_{3})_{j}\\}$.\n\nWe evaluate each position:\n- Position $1$: bits are $\\{1,0,1\\}$, majority $1$, so $C_{1}=1$.\n- Position $2$: bits are $\\{0,1,1\\}$, majority $1$, so $C_{2}=1$.\n- Position $3$: bits are $\\{1,1,1\\}$, majority $1$, so $C_{3}=1$.\n- Position $4$: bits are $\\{0,0,1\\}$, majority $0$, so $C_{4}=0$.\n- Position $5$: bits are $\\{0,0,0\\}$, majority $0$, so $C_{5}=0$.\n\nHence the consensus string is $C=11100$. The minimal total Hamming distance equals the sum of the counts of minority bits at each position, which here is $1+1+0+1+0=3$, confirming optimality.", "answer": "$$\\boxed{11100}$$", "id": "1373967"}]}