{"hands_on_practices": [{"introduction": "This exercise provides an ideal entry point into the world of recurrence relations. We will model a straightforward scenario where the primary constraint is that no two consecutive elements in a sequence can be the same. This practice helps build foundational skills in identifying how the number of valid sequences of length $n$ can be directly related to the number of sequences of length $n-1$, leading to a simple but powerful first-order linear recurrence relation. [@problem_id:1384944]", "problem": "A remote communication outpost utilizes a special signaling beacon to transmit data. The beacon can flash one of three distinct colors: Amber, Blue, or Cyan. To ensure the signals are easily distinguishable and to prevent sensor fatigue, the system is constrained by a fundamental protocol: no two consecutive flashes can be of the same color. For instance, a sequence of Amber-Blue-Amber is valid, but a sequence of Amber-Amber-Blue is not.\n\nLet $S_n$ represent the total number of distinct, valid signaling sequences of length $n$, where $n$ is a positive integer. Your task is to find a closed-form expression for $S_n$ in terms of $n$.", "solution": "We model each signaling sequence of length $n$ as an ordered $n$-tuple of colors chosen from the set $\\{A,B,C\\}$ corresponding to Amber, Blue, and Cyan, subject to the constraint that no two consecutive entries are equal.\n\nFor the first position, there are $3$ choices, since any of the three colors can be used. For each subsequent position $i$ with $2 \\leq i \\leq n$, the color at position $i$ must differ from the color at position $i-1$. Since there are $3$ colors in total and exactly $1$ is forbidden (the immediately previous color), there are $3-1=2$ valid choices for each such position.\n\nBy the rule of product, the total number of valid sequences is\n$$\nS_{n} = 3 \\cdot \\underbrace{2 \\cdot 2 \\cdots 2}_{n-1\\ \\text{factors}} = 3 \\cdot 2^{n-1}.\n$$\n\nEquivalently, one may express this via a recurrence. Let $S_{1} = 3$, since a single flash can be any of the three colors. For $n \\geq 2$, each valid sequence of length $n-1$ can be extended to a valid sequence of length $n$ in exactly $2$ ways (choosing any color different from the last), yielding\n$$\nS_{n} = 2 S_{n-1}.\n$$\nSolving this first-order linear recurrence gives\n$$\nS_{n} = S_{1} \\cdot 2^{n-1} = 3 \\cdot 2^{n-1}.\n$$\n\nThus, the closed-form expression is $S_{n} = 3 \\cdot 2^{n-1}$.", "answer": "$$\\boxed{3 \\cdot 2^{n-1}}$$", "id": "1384944"}, {"introduction": "Building on the basic principles, this practice explores how to model situations where a final state can be reached from several different previous states. By analyzing the possible last \"move\" or element that completes a sequence, we can formulate a recurrence relation that sums the possibilities from each preceding case. This decomposition strategy is a fundamental and widely applicable technique for solving many combinatorial counting problems. [@problem_id:1384939]", "problem": "In a particular video game, a player can score points by performing three types of moves: a 'Quick Strike' worth 1 point, a 'Heavy Blow' worth 2 points, and a 'Special Move' worth 5 points. A player's total score is the sum of the points from the sequence of moves they perform. The order of the moves matters. For instance, the sequence (Quick Strike, Heavy Blow) is distinct from (Heavy Blow, Quick Strike), even though both result in a total of 3 points. Find the total number of distinct sequences of moves a player can perform to achieve a total score of exactly 10 points.", "solution": "Let $a(n)$ denote the number of distinct ordered sequences of moves whose points sum to $n$, where allowed move values are $1$, $2$, and $5$. Considering the last move in a sequence, any sequence summing to $n$ ends with either a $1$, $2$, or $5$. Removing that last move leaves a valid sequence summing to $n-1$, $n-2$, or $n-5$, respectively. This gives the linear recurrence\n$$\na(n)=a(n-1)+a(n-2)+a(n-5),\n$$\nwith initial conditions $a(0)=1$ (the empty sequence) and $a(n)=0$ for $n<0$.\n\nCompute successively:\n$$\na(1)=a(0)+a(-1)+a(-4)=1+0+0=1,\n$$\n$$\na(2)=a(1)+a(0)+a(-3)=1+1+0=2,\n$$\n$$\na(3)=a(2)+a(1)+a(-2)=2+1+0=3,\n$$\n$$\na(4)=a(3)+a(2)+a(-1)=3+2+0=5,\n$$\n$$\na(5)=a(4)+a(3)+a(0)=5+3+1=9,\n$$\n$$\na(6)=a(5)+a(4)+a(1)=9+5+1=15,\n$$\n$$\na(7)=a(6)+a(5)+a(2)=15+9+2=26,\n$$\n$$\na(8)=a(7)+a(6)+a(3)=26+15+3=44,\n$$\n$$\na(9)=a(8)+a(7)+a(4)=44+26+5=75,\n$$\n$$\na(10)=a(9)+a(8)+a(5)=75+44+9=128.\n$$\nTherefore, the total number of distinct ordered sequences summing to $10$ is $128$.", "answer": "$$\\boxed{128}$$", "id": "1384939"}, {"introduction": "Many real-world systems have rules that depend on the immediate history or \"state\" of the sequence. This practice introduces a more sophisticated modeling method that uses a system of coupled recurrence relations to handle such state-dependent constraints. By classifying sequences into different types based on their terminal element, we can create separate but interconnected recurrence equations that precisely capture complex rules, such as avoiding a forbidden substring. [@problem_id:1384925]", "problem": "A digital communication system encodes messages as sequences of symbols drawn from the alphabet {0, 1, 2}. A specific hardware limitation in the receiver causes it to fail if it encounters the subsequence '12'. Therefore, for a message to be successfully transmitted, its corresponding sequence of symbols must not contain '12' as a contiguous substring.\n\nDetermine the total number of valid sequences of length $n=5$.", "solution": "We count length-$n$ sequences over the alphabet $\\{0,1,2\\}$ that avoid the contiguous substring $12$. The constraint only restricts choosing $2$ immediately after a $1$. It suffices to track whether the last symbol is $1$ or not.\n\nDefine:\n- $s_{n}$: number of valid sequences of length $n$ ending with $1$,\n- $t_{n}$: number of valid sequences of length $n$ ending with a symbol not equal to $1$ (i.e., $0$ or $2$),\n- $f_{n} = s_{n} + t_{n}$: total number of valid sequences of length $n$.\n\nTransitions from step $n$ to $n+1$:\n- From a sequence counted by $s_{n}$ (last symbol is $1$), the next symbol can be $0$ or $1$ (but not $2$). Thus\n$$\ns_{n+1} \\leftarrow s_{n} \\text{ by choosing } 1, \\quad t_{n+1} \\leftarrow s_{n} \\text{ by choosing } 0.\n$$\n- From a sequence counted by $t_{n}$ (last symbol is $0$ or $2$), the next symbol can be $0$, $1$, or $2$. Choosing $1$ leads to $s_{n+1}$, while choosing $0$ or $2$ leads to $t_{n+1}$. Thus\n$$\ns_{n+1} \\leftarrow t_{n} \\text{ by choosing } 1, \\quad t_{n+1} \\leftarrow 2 t_{n} \\text{ by choosing } 0 \\text{ or } 2.\n$$\n\nTherefore, the recurrences and initial conditions are:\n$$\ns_{n+1} = s_{n} + t_{n}, \\quad t_{n+1} = s_{n} + 2 t_{n}, \\quad s_{1} = 1, \\quad t_{1} = 2, \\quad f_{n} = s_{n} + t_{n}.\n$$\n\nCompute iteratively up to $n=5$:\n$$\n\\begin{aligned}\nn=1:&\\quad s_{1}=1,\\quad t_{1}=2,\\quad f_{1}=3.\\\\\nn=2:&\\quad s_{2}=s_{1}+t_{1}=1+2=3,\\quad t_{2}=s_{1}+2t_{1}=1+4=5,\\quad f_{2}=3+5=8.\\\\\nn=3:&\\quad s_{3}=s_{2}+t_{2}=3+5=8,\\quad t_{3}=s_{2}+2t_{2}=3+10=13,\\quad f_{3}=8+13=21.\\\\\nn=4:&\\quad s_{4}=s_{3}+t_{3}=8+13=21,\\quad t_{4}=s_{3}+2t_{3}=8+26=34,\\quad f_{4}=21+34=55.\\\\\nn=5:&\\quad s_{5}=s_{4}+t_{4}=21+34=55,\\quad t_{5}=s_{4}+2t_{4}=21+68=89,\\quad f_{5}=55+89=144.\n\\end{aligned}\n$$\n\nThus, the number of valid sequences of length $5$ is $f_{5}=144$.", "answer": "$$\\boxed{144}$$", "id": "1384925"}]}