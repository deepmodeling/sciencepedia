{"hands_on_practices": [{"introduction": "We begin with a fundamental application of derangements: ensuring no element in a set returns to its original position. This classic problem [@problem_id:1362380] challenges you to count the number of ways to rearrange the letters of a word so that no letter occupies its initial spot. To tackle this, you will apply the powerful principle of inclusion-exclusion, which provides a direct formula for calculating the number of derangements, often denoted as $D_n$ or $!n$.", "problem": "An anagram is a word or phrase formed by rearranging the letters of a different word or phrase. Consider the word `COMPUTER`. We are interested in creating special anagrams from this word where every single letter is moved to a new position. That is, for any resulting arrangement, the first letter is not 'C', the second letter is not 'O', the third is not 'M', and so on, up to the last letter not being 'R'. How many such unique anagrams exist?", "solution": "All letters in the word COMPUTER are distinct, so the required arrangements are exactly the derangements of 8 distinct objects. Let $A_{i}$ be the set of permutations in which the $i$th position is fixed (i.e., the original $i$th letter remains in position $i$). By the inclusion-exclusion principle, the number of permutations with no fixed points (derangements) is\n$$\nD_{8}=\\left|\\overline{A_{1}\\cup \\cdots \\cup A_{8}}\\right|=\\sum_{k=0}^{8}(-1)^{k}\\binom{8}{k}(8-k)!.\n$$\nEquivalently,\n$$\nD_{8}=8!\\sum_{k=0}^{8}\\frac{(-1)^{k}}{k!}.\n$$\nEvaluating the inclusion-exclusion sum term by term,\n$$\nD_{8}=8!-\\binom{8}{1}7!+\\binom{8}{2}6!-\\binom{8}{3}5!+\\binom{8}{4}4!-\\binom{8}{5}3!+\\binom{8}{6}2!-\\binom{8}{7}1!+\\binom{8}{8}0!.\n$$\nCompute each term:\n$$\n8!=40320,\\quad \\binom{8}{1}7!=8\\cdot 5040=40320,\\quad \\binom{8}{2}6!=28\\cdot 720=20160,\n$$\n$$\n\\binom{8}{3}5!=56\\cdot 120=6720,\\quad \\binom{8}{4}4!=70\\cdot 24=1680,\\quad \\binom{8}{5}3!=56\\cdot 6=336,\n$$\n$$\n\\binom{8}{6}2!=28\\cdot 2=56,\\quad \\binom{8}{7}1!=8\\cdot 1=8,\\quad \\binom{8}{8}0!=1\\cdot 1=1.\n$$\nSumming with alternating signs:\n$$\n40320-40320+20160-6720+1680-336+56-8+1=14833.\n$$\nTherefore, the number of anagrams of COMPUTER in which no letter remains in its original position is $D_{8}=14833$.", "answer": "$$\\boxed{14833}$$", "id": "1362380"}, {"introduction": "While the inclusion-exclusion principle offers a direct formula, combinatorial structures often reveal elegant recursive patterns. This practice [@problem_id:1362405] introduces the recurrence relation for derangements, $D_n = (n-1)(D_{n-1} + D_{n-2})$, which constructs the solution for $n$ items from the solutions for smaller cases. By working through this relatable scenario of a coffee shop mix-up, you will develop a deeper intuition for the combinatorial logic that underpins derangements.", "problem": "A barista has prepared 6 distinct and personalized coffee orders for 6 specific customers. In a moment of confusion, he randomly assigns the 6 orders to the 6 customers. A complete mix-up occurs if and only if every single customer receives an order that is not their own. It is known from previous, smaller-scale mishaps that for 4 customers, there are 9 possible ways for a complete mix-up to occur, and for 5 customers, there are 44 possible ways. Based on this information, calculate the total number of ways a complete mix-up can occur for the 6 customers.", "solution": "Let $D_{n}$ denote the number of derangements (complete mix-ups) of $n$ distinct items. The standard recurrence for derangements, derived by conditioning on the position of item $1$, is\n$$\nD_{n}=(n-1)\\big(D_{n-1}+D_{n-2}\\big).\n$$\nJustification: item $1$ must go to some position $j\\neq 1$, giving $(n-1)$ choices. If the item originally intended for position $j$ goes to position $1$, then the remaining $n-2$ items must be deranged, contributing $D_{n-2}$. If it does not go to position $1$, then positions $1$ and $j$ enter a structure equinumerous with a derangement of the remaining $n-1$ items, contributing $D_{n-1}$. Summing these cases yields the recurrence.\n\nWe are given $D_{4}=9$ and $D_{5}=44$. Applying the recurrence with $n=6$,\n$$\nD_{6}=(6-1)\\big(D_{5}+D_{4}\\big)=5\\big(44+9\\big)=5\\times 53=265.\n$$\nTherefore, the total number of ways a complete mix-up can occur for $6$ customers is $265$.", "answer": "$$\\boxed{265}$$", "id": "1362405"}, {"introduction": "Moving beyond simple enumeration, we can explore the deeper algebraic properties of derangements. This exercise [@problem_id:1362383] connects derangements to the concept of permutation parity, asking you to distinguish between 'even' and 'odd' derangements. By analyzing the possible cycle structures of permutations, you will gain a more nuanced understanding of how derangements fit within the broader theory of permutation groups and their underlying symmetries.", "problem": "A robotics company is testing a new pathing algorithm for a fleet of four identical-looking but uniquely identified autonomous robots, labeled $R_1, R_2, R_3, R_4$. These robots start at four distinct charging stations, labeled $S_1, S_2, S_3, S_4$, such that robot $R_i$ is initially at station $S_i$ for $i=1, 2, 3, 4$.\n\nAfter completing a task, the robots return to the charging stations. A final configuration is an assignment of each robot to exactly one station. A key safety protocol requires that upon their return, every robot must occupy a different charging station than the one it started from.\n\nThe control system evaluates each valid final configuration based on its \"pathing parity\". A configuration is defined as an \"even-path\" configuration if the permutation mapping the initial robot positions to the final robot positions can be achieved by an even number of pairwise swaps. Otherwise, it is an \"odd-path\" configuration.\n\nHow many distinct \"odd-path\" final configurations are possible that also satisfy the safety protocol?", "solution": "Model the return assignment as a permutation $\\sigma$ on $\\{1,2,3,4\\}$ sending each robot $R_{i}$ from its initial station $S_{i}$ to the final station $S_{\\sigma(i)}$. The safety protocol requires $\\sigma(i) \\neq i$ for all $i$, so $\\sigma$ must be a derangement.\n\nFor $n=4$, the derangements have only two possible cycle types:\n1) A single $4$-cycle.\n2) A product of two disjoint $2$-cycles.\n\nCount and classify the parity of each type:\n- Number of $4$-cycles on $4$ labeled elements is $(4-1)! = 3! = 6$. The sign of a $k$-cycle is $(-1)^{k-1}$, so each $4$-cycle has sign $(-1)^{3}=-1$ (odd). Hence there are $6$ odd derangements of this type.\n- Number of permutations that are a product of two disjoint transpositions equals the number of set partitions of $\\{1,2,3,4\\}$ into two $2$-element blocks, which is\n$$\n\\frac{1}{2}\\binom{4}{2} = \\frac{1}{2}\\cdot 6 = 3.\n$$\nEach transposition has sign $-1$, so the product of two disjoint transpositions has sign $(-1)\\cdot(-1)=+1$ (even). Hence there are $3$ even derangements of this type.\n\nTherefore, the number of odd-path (odd-parity) derangements satisfying the safety protocol is $6$.", "answer": "$$\\boxed{6}$$", "id": "1362383"}]}