{"hands_on_practices": [{"introduction": "Understanding a new concept often begins with applying it to a fundamental structure. This first practice invites you to analyze a complete graph, which models a fully-connected network. By determining the minimum number of monitoring points needed to cover every connection, you will develop a core intuition for the vertex cover problem using a straightforward and elegant argument. This exercise is foundational for grasping the trade-offs involved in network monitoring and resource placement. [@problem_id:1411435]", "problem": "In the field of network cybersecurity, a common architecture for a high-availability cluster is a fully-meshed network. In this design, a total of $n$ server nodes are configured such that every node is directly connected to every other node by a dedicated, bidirectional communication channel. Assume $n \\ge 2$.\n\nTo monitor the integrity of the network, a security agent software must be installed on a selection of these nodes. An agent installed on a specific node has the capability to monitor all communication channels that are directly connected to it. The network is considered fully monitored if every single communication channel between any pair of nodes is being monitored by an agent on at least one of its two endpoint nodes.\n\nYour task is to determine the absolute minimum number of nodes that must have the security agent installed to ensure the entire network is fully monitored. Provide your answer as an expression in terms of $n$.", "solution": "Model the fully-meshed network as the complete graph $K_{n}$ with vertex set $V$ and edge set $E$. Installing the agent on a subset $S \\subseteq V$ allows monitoring all edges incident to any vertex in $S$. The network is fully monitored exactly when every edge in $E$ has at least one endpoint in $S$, which means $S$ is a vertex cover. Thus, the task is to determine the minimum size of a vertex cover in $K_{n}$.\n\nLower bound: Suppose $|S| \\le n-2$. Then the number of unselected vertices is $n - |S| \\ge 2$, so there exist distinct $u, v \\in V \\setminus S$. Because the graph is complete, the edge $\\{u, v\\} \\in E$ exists, and since neither $u$ nor $v$ is in $S$, this edge is not monitored. This contradicts the requirement that $S$ is a vertex cover. Therefore,\n$$\n|S| \\ge n - 1.\n$$\n\nUpper bound: Select any subset $S \\subseteq V$ with $|S| = n - 1$ (i.e., leave exactly one vertex $w$ unselected). For any edge $\\{i, j\\} \\in E$, if one endpoint equals $w$, then the other endpoint lies in $S$, so the edge is monitored. If neither endpoint equals $w$, then both endpoints lie in $S$, so the edge is also monitored. Hence $S$ is a vertex cover, and\n$$\n\\text{minimum size} \\le n - 1.\n$$\n\nCombining both bounds yields that the minimum number of nodes that must have the agent installed to fully monitor the network is\n$$\nn - 1.\n$$", "answer": "$$\\boxed{n-1}$$", "id": "1411435"}, {"introduction": "While finding the exact minimum vertex cover is possible for some special graphs, the problem is computationally difficult for general graphs. This reality leads us to the important field of approximation algorithms. This exercise provides a hands-on walk-through of a classic greedy algorithm that, while not always optimal, guarantees a solution within a factor of two of the true minimum. Tracing its steps on a concrete example will build your skills in algorithmic analysis and highlight a practical approach to solving hard computational problems. [@problem_id:1411443]", "problem": "A vertex cover of an undirected graph is a subset of its vertices such that for every edge in the graph, at least one of its endpoints is in the subset. A common approach to find an approximate solution to the vertex cover problem is the following greedy algorithm:\n\n1.  Initialize the vertex cover, $C$, as an empty set. Let $E'$ be the set of all edges in the graph.\n2.  While $E'$ is not empty:\n    a. Select an edge $(u, v)$ from $E'$.\n    b. Add both vertices $u$ and $v$ to the set $C$.\n    c. Remove from $E'$ every edge that is incident to either $u$ or $v$.\n3.  Return the set $C$.\n\nTo make the algorithm's execution deterministic, the edge selection in step 2a must follow a specific rule: always choose the edge $(u, v)$, with vertex labels ordered such that $u  v$, that is lexicographically smallest among all edges remaining in $E'$. An edge $(u_1, v_1)$ is considered lexicographically smaller than $(u_2, v_2)$ if $u_1  u_2$, or if $u_1 = u_2$ and $v_1  v_2$.\n\nConsider an undirected graph $G = (V, E)$ with vertex set $V = \\{1, 2, 3, 4, 5, 6, 7\\}$ and edge set $E = \\{(1, 5), (1, 6), (2, 5), (2, 7), (3, 6), (3, 7), (4, 5), (4, 6)\\}$.\n\nApply the deterministic algorithm described above to find a vertex cover for the graph $G$. Which of the following sets is the resulting vertex cover $C$?\n\nA. $\\{1, 2, 3, 5, 6, 7\\}$\n\nB. $\\{2, 3, 4, 5, 6, 7\\}$\n\nC. $\\{5, 6, 7\\}$\n\nD. $\\{1, 2, 3, 4\\}$\n\nE. $\\{1, 2, 3, 4, 5, 6, 7\\}$", "solution": "We apply the deterministic greedy algorithm with lexicographic edge selection on the graph with $V=\\{1,2,3,4,5,6,7\\}$ and $E=\\{(1,5),(1,6),(2,5),(2,7),(3,6),(3,7),(4,5),(4,6)\\}$. Initialize $C=\\varnothing$ and $E'=E$. The lexicographic order sorts edges by the first endpoint, then by the second.\n\nIteration 1: The lexicographically smallest edge in $E'$ is $(1,5)$. Update $C:=C\\cup\\{1,5\\}=\\{1,5\\}$. Remove from $E'$ all edges incident to $1$ or $5$, namely $(1,5)$, $(1,6)$, $(2,5)$, $(4,5)$. The remaining set is $E'=\\{(2,7),(3,6),(3,7),(4,6)\\}$.\n\nIteration 2: The lexicographically smallest edge in the current $E'$ is $(2,7)$. Update $C:=C\\cup\\{2,7\\}=\\{1,5,2,7\\}$. Remove from $E'$ all edges incident to $2$ or $7$, namely $(2,7)$ and $(3,7)$. The remaining set is $E'=\\{(3,6),(4,6)\\}$.\n\nIteration 3: The lexicographically smallest edge in the current $E'$ is $(3,6)$. Update $C:=C\\cup\\{3,6\\}=\\{1,2,3,5,6,7\\}$. Remove from $E'$ all edges incident to $3$ or $6$, namely $(3,6)$ and $(4,6)$. The remaining set is $E'=\\varnothing$, so the algorithm terminates.\n\nThus the returned vertex cover is $C=\\{1,2,3,5,6,7\\}$, which matches option A.", "answer": "$$\\boxed{A}$$", "id": "1411443"}, {"introduction": "The difficulty of the vertex cover problem changes dramatically depending on the graph's structure. This final practice explores one such special case: trees. By applying the powerful technique of dynamic programming, you can find the exact minimum vertex cover for any tree-structured network, such as the one described, in a highly efficient manner. This problem illustrates the crucial principle that leveraging specific structural properties can lead to exact and fast solutions for problems that are otherwise intractable. [@problem_id:1411446]", "problem": "A telecommunications company is deploying a new fiber optic network. The network consists of junctions (nodes) and fiber optic cables (edges) connecting them. The overall network architecture forms a rooted tree structure. To ensure network integrity and allow for maintenance, the company must install monitoring hubs at some of the junctions. A hub placed at a junction can monitor every cable that is directly connected to that junction. The company's goal is to minimize the total number of hubs installed while ensuring that every single cable in the entire network is monitored.\n\nThe network is comprised of 13 junctions, numbered 1 through 13. The tree structure is defined by the following parent-child relationships:\n- Junction 1 is the root of the network.\n- Junctions 2, 3, and 4 are the children of junction 1.\n- Junctions 5 and 6 are the children of junction 2.\n- Junction 7 is the child of junction 3.\n- Junctions 8, 9, and 10 are the children of junction 4.\n- Junction 11 is the child of junction 6.\n- Junction 12 is the child of junction 9.\n- Junction 13 is the child of junction 10.\n- Junctions 5, 7, 8, 11, 12, and 13 have no children.\n\nWhat is the absolute minimum number of monitoring hubs the company must install to cover all fiber optic cables in the network?", "solution": "Interpret each junction as a vertex and each cable as an edge of a tree. Placing a hub at a junction monitors (covers) all incident edges. Thus, the task is the minimum vertex cover problem on a tree: choose the minimum number of vertices so that every edge has at least one endpoint chosen.\n\nUse tree dynamic programming. Root the tree at junction 1 as given. For each node $u$, define:\n- $I(u)$: the minimum size of a vertex cover of the subtree rooted at $u$ when $u$ is included.\n- $E(u)$: the minimum size of a vertex cover of the subtree rooted at $u$ when $u$ is excluded.\n\nThe standard recurrences follow from edge coverage requirements:\n$$\nI(u)=1+\\sum_{v \\in \\mathrm{children}(u)} \\min\\{I(v),E(v)\\},\n\\qquad\nE(u)=\\sum_{v \\in \\mathrm{children}(u)} I(v).\n$$\nFor a leaf $\\ell$, there are no children, so\n$$\nI(\\ell)=1,\\qquad E(\\ell)=0.\n$$\n\nIdentify leaves: $5,7,8,11,12,13$. Hence for these,\n$$\nI(5)=I(7)=I(8)=I(11)=I(12)=I(13)=1,\\quad E(5)=E(7)=E(8)=E(11)=E(12)=E(13)=0.\n$$\n\nCompute upward:\n\nFor node $6$ with child $11$,\n$$\nI(6)=1+\\min\\{I(11),E(11)\\}=1+\\min\\{1,0\\}=1,\\qquad E(6)=I(11)=1.\n$$\n\nFor node $2$ with children $5,6$,\n$$\nI(2)=1+\\min\\{I(5),E(5)\\}+\\min\\{I(6),E(6)\\}=1+\\min\\{1,0\\}+\\min\\{1,1\\}=2,\n$$\n$$\nE(2)=I(5)+I(6)=1+1=2.\n$$\n\nFor node $3$ with child $7$,\n$$\nI(3)=1+\\min\\{I(7),E(7)\\}=1+\\min\\{1,0\\}=1,\\qquad E(3)=I(7)=1.\n$$\n\nFor node $9$ with child $12$,\n$$\nI(9)=1+\\min\\{I(12),E(12)\\}=1+\\min\\{1,0\\}=1,\\qquad E(9)=I(12)=1.\n$$\n\nFor node $10$ with child $13$,\n$$\nI(10)=1+\\min\\{I(13),E(13)\\}=1+\\min\\{1,0\\}=1,\\qquad E(10)=I(13)=1.\n$$\n\nFor node $4$ with children $8,9,10$,\n$$\nI(4)=1+\\min\\{I(8),E(8)\\}+\\min\\{I(9),E(9)\\}+\\min\\{I(10),E(10)\\}=1+0+1+1=3,\n$$\n$$\nE(4)=I(8)+I(9)+I(10)=1+1+1=3.\n$$\n\nFinally, for the root node $1$ with children $2,3,4$,\n$$\nI(1)=1+\\min\\{I(2),E(2)\\}+\\min\\{I(3),E(3)\\}+\\min\\{I(4),E(4)\\}=1+2+1+3=7,\n$$\n$$\nE(1)=I(2)+I(3)+I(4)=2+1+3=6.\n$$\n\nTherefore, the minimum size of a vertex cover (minimum number of hubs) is\n$$\n\\min\\{I(1),E(1)\\}=\\min\\{7,6\\}=6.\n$$\n\nAs a tight lower bound confirmation, observe that the network (a tree) is bipartite, so by Kőnig's theorem the size of a minimum vertex cover equals the size of a maximum matching. A matching of size $6$ is given by the disjoint edges\n$$\n\\{(2,5),(6,11),(3,7),(9,12),(10,13),(1,4)\\},\n$$\nso any vertex cover has size at least $6$. Combined with the construction above achieving $6$, the absolute minimum is $6$.", "answer": "$$\\boxed{6}$$", "id": "1411446"}]}