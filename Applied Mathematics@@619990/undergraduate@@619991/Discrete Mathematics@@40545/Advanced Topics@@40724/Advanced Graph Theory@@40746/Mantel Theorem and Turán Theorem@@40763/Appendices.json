{"hands_on_practices": [{"introduction": "The journey into extremal graph theory often begins with a beautifully simple yet profound question: how many connections a network can have before a three-person group with mutual connections is guaranteed to exist? This problem provides a hands-on entry point by applying Mantel's Theorem, the foundational case of Turán's Theorem for triangles ($K_3$). By working through this scenario [@problem_id:1382593], you will see how a simple count of vertices and edges can lead to a definitive conclusion about a graph's structure.", "problem": "A technology company is analyzing the collaborative structure of a research department comprised of 20 scientists. The company models this structure as a network where each scientist is a node. A direct, two-way communication link, represented as an edge, exists between any two scientists if they have co-authored a publication in the last year. The analysis reveals that there are exactly 101 such communication links within the department.\n\nThe management is interested in whether \"research triangles\" must exist. A research triangle is defined as a group of three distinct scientists, say Scientist 1, Scientist 2, and Scientist 3, where Scientist 1 has a link with Scientist 2, Scientist 2 has a link with Scientist 3, and Scientist 3 has a link with Scientist 1.\n\nBased solely on the number of scientists and the number of communication links, what can be definitively concluded about the existence of at least one such research triangle?\n\nA. The network of scientists must contain at least one research triangle.\nB. The network of scientists is guaranteed to have no research triangles.\nC. The information is insufficient; the network might or might not contain a research triangle.\nD. A network with 20 scientists and 101 communication links is impossible to construct.", "solution": "Model the department as a simple undirected graph with $n=20$ vertices and $m=101$ edges. A research triangle corresponds to a $3$-cycle, i.e., a copy of $K_{3}$. By Mantel's theorem (the $K_{3}$ case of Turán's theorem), the maximum number of edges in a triangle-free graph on $n$ vertices is\n$$\n\\left\\lfloor \\frac{n^{2}}{4} \\right\\rfloor.\n$$\nSubstituting $n=20$ gives\n$$\n\\left\\lfloor \\frac{20^{2}}{4} \\right\\rfloor=\\left\\lfloor \\frac{400}{4} \\right\\rfloor=100.\n$$\nTherefore, any triangle-free graph on $20$ vertices has at most $100$ edges. Since the given network has $m=101>100$ edges, assuming it has no triangle would contradict Mantel's bound. Hence, the network must contain at least one triangle.\n\nIt is also clear that such a network is constructible (for example, any simple graph with $101$ edges on $20$ vertices), so impossibility is not an issue, and the conclusion is definitive based solely on $n$ and $m$.\n\nThus, the correct choice is that the network must contain at least one research triangle.", "answer": "$$\\boxed{A}$$", "id": "1382593"}, {"introduction": "Having seen how to guarantee the existence of a triangle, we now generalize this concept. What if we want to avoid larger, more tightly-knit groups, such as a complete clique of four members ($K_4$)? This is where the full power of Turán's Theorem comes into play. This practice [@problem_id:1382574] challenges you to determine the maximum number of edges in a graph that is free of a $K_4$, which requires understanding the specific structure of the extremal graph, known as the Turán graph $T(n, r)$.", "problem": "A company is designing a professional networking platform for a small, exclusive group of 10 members. A connection on this platform is a mutual link between two members. To promote broader networking and prevent the formation of overly tight-knit, exclusionary groups, the platform's rules forbid any set of 4 members from all being mutually connected to each other. In graph theory terms, this means the graph representing the network connections must not contain a complete subgraph on 4 vertices ($K_4$). What is the absolute maximum number of connections the platform can support under this constraint?", "solution": "Let $G$ be a simple graph on $n=10$ vertices with no $K_{4}$. We seek the maximum number of edges $e(G)$ under this constraint.\n\nBy Turán's theorem, for forbidding $K_{r}$, the maximum number of edges is achieved by the Turán graph $T_{r-1}(n)$, which is the complete $(r-1)$-partite graph with part sizes as equal as possible. Here $r=4$, so we consider $T_{3}(10)$.\n\nWrite $n$ in the form $n=3q+s$ with $0 \\leq s < 3$. For $n=10$, we have\n$$\n10=3\\cdot 3 + 1 \\quad\\Rightarrow\\quad q=3,\\; s=1.\n$$\nThus $T_{3}(10)$ has $s=1$ part of size $q+1=4$ and $3-s=2$ parts of size $q=3$, i.e., part sizes $(4,3,3)$.\n\nIn a complete tripartite graph with part sizes $n_{1},n_{2},n_{3}$, the number of edges is the number of cross-part pairs:\n$$\ne=\\sum_{1\\leq i<j\\leq 3} n_{i}n_{j}=\\frac{1}{2}\\left(\\left(\\sum_{i=1}^{3} n_{i}\\right)^{2}-\\sum_{i=1}^{3} n_{i}^{2}\\right).\n$$\nSubstituting $n_{1}=4$, $n_{2}=3$, $n_{3}=3$, we obtain\n$$\n\\sum_{i=1}^{3} n_{i}=10,\\quad \\sum_{i=1}^{3} n_{i}^{2}=4^{2}+3^{2}+3^{2}=16+9+9=34,\n$$\nhence\n$$\ne=\\frac{1}{2}\\left(10^{2}-34\\right)=\\frac{1}{2}\\cdot 66=33.\n$$\n\nBy Turán's theorem, any $K_{4}$-free graph on $10$ vertices has at most this many edges, and the bound is attained by $T_{3}(10)$. Therefore, the absolute maximum number of connections is $33$.", "answer": "$$\\boxed{33}$$", "id": "1382574"}, {"introduction": "Turán's Theorem guarantees that a graph with enough edges *must* contain a clique of a certain size, but it doesn't immediately tell us how to *find* it. This final practice bridges the gap between theoretical existence and practical construction. Delving into the logic of a common proof for Turán's Theorem, you will evaluate an algorithm designed to locate a $K_{r+1}$ clique [@problem_id:1382596]. This exercise illuminates the constructive nature of many mathematical proofs and enhances your problem-solving toolkit by connecting abstract theory to algorithmic thinking.", "problem": "In graph theory, a simple graph $G=(V,E)$ on $n$ vertices is said to contain a clique of size $k$, denoted $K_k$, if there is a subset of $k$ vertices in $V$ where every two distinct vertices are connected by an edge. The Turán number, $ex(n, K_{r+1})$, represents the maximum number of edges in any simple graph on $n$ vertices that does not contain a $K_{r+1}$ as a subgraph.\n\nYou are given a simple graph $G$ with $n$ vertices and an integer $r \\ge 2$. You are guaranteed that the number of edges $|E|$ in $G$ satisfies the strict inequality $|E| > ex(n, K_{r+1})$. By Turán's theorem, this condition ensures that $G$ must contain at least one clique of size $r+1$.\n\nYour task is to identify which one of the following algorithmic procedures will correctly and reliably find a clique of size $r+1$ in $G$ in polynomial time. In the options below, $N(v)$ denotes the set of neighbors of a vertex $v$, and $G[S]$ denotes the subgraph induced by the vertex set $S$.\n\nA.\n1. Initialize a vertex set $S \\leftarrow V$ and a clique set $C \\leftarrow \\emptyset$.\n2. For $i$ from 1 to $r$:\n   a. Select a vertex $v_i$ from $S$ that has the maximum degree in the subgraph $G[S]$.\n   b. Add $v_i$ to $C$.\n   c. Update $S \\leftarrow N(v_i) \\cap S$.\n3. Select any vertex $v_{r+1}$ from the final (guaranteed non-empty) set $S$.\n4. Add $v_{r+1}$ to $C$. The set $C$ is the desired $K_{r+1}$.\n\nB.\n1. Initialize a vertex set $S \\leftarrow V$ and a clique set $C \\leftarrow \\emptyset$.\n2. For $i$ from 1 to $r$:\n   a. Select a vertex $v_i$ from $S$ that has the minimum degree in the subgraph $G[S]$.\n   b. Add $v_i$ to $C$.\n   c. Update $S \\leftarrow N(v_i) \\cap S$.\n3. Select any vertex $v_{r+1}$ from the final set $S$.\n4. Add $v_{r+1}$ to $C$. The set $C$ is the desired $K_{r+1}$.\n\nC.\n1. Select a vertex $v$ with the maximum degree in the entire graph $G$.\n2. Let $S = V \\setminus (N(v) \\cup \\{v\\})$ be the set of non-neighbors of $v$.\n3. Recursively apply a correct $K_{r+1}$-finding algorithm to the subgraph $G[S]$.\n\nD.\n1. Initialize a vertex set $S \\leftarrow V$ and a clique set $C \\leftarrow \\emptyset$.\n2. For $i$ from 1 to $r$:\n   a. Select an arbitrary vertex $v_i$ from $S$.\n   b. Add $v_i$ to $C$.\n   c. Update $S \\leftarrow N(v_i) \\cap S$.\n3. Select any vertex $v_{r+1}$ from the final set $S$.\n4. Add $v_{r+1}$ to $C$. The set $C$ is the desired $K_{r+1}$.", "solution": "We are given a simple graph $G=(V,E)$ on $n$ vertices with $|E|>ex(n,K_{r+1})$. By Turán’s theorem, $G$ contains a $K_{r+1}$. The task is to determine which stated procedure correctly and reliably finds such a $K_{r+1}$ in polynomial time.\n\nWe analyze each option for correctness and reliability, and we will use the following standard facts:\n\n- If a graph $H$ on $m$ vertices has minimum degree strictly greater than $\\left(1-\\frac{1}{r}\\right)m$, then $H$ contains a $K_{r+1}$, and a $K_{r+1}$ can be found greedily in polynomial time by iteratively intersecting neighborhoods.\n- For a vertex $v$, let $N(v)$ be its open neighborhood. If $G$ contains a $K_{r+1}$ that includes $v$, then $G[N(v)]$ contains a $K_{r}$.\n- The greedy intersection method succeeds if, at each step, the induced subgraph on the current set $S$ has edges exceeding the appropriate Turán threshold for the next clique size.\n\nOption A:\nDefine $S \\leftarrow V$. For $i=1,2,\\dots,r$, let $v_{i}$ be a vertex of maximum degree in $G[S]$, update $C \\leftarrow C \\cup \\{v_{i}\\}$, and $S \\leftarrow N(v_{i}) \\cap S$. Finally, pick any $v_{r+1} \\in S$ and return $C \\cup \\{v_{r+1}\\}$.\n\nWe justify correctness by induction on $r$.\n\nBase case $r=1$: The condition $|E|>ex(n,K_{2})=0$ implies $G$ has an edge. Picking $v_{1}$ of maximum degree yields $S=N(v_{1})\\neq\\emptyset$, so choosing any $v_{2} \\in S$ gives a $K_{2}$.\n\nInduction step: Assume the procedure works whenever the input graph $H$ satisfies $|E(H)|>ex(|V(H)|,K_{r})$ and the loop runs $r-1$ times to produce $K_{r}$. Now suppose $|E(G)|>ex(n,K_{r+1})$ and execute the first choice $v_{1}$ as a maximum-degree vertex in $G$. Let $d_{1}=|N(v_{1})|$, and consider the induced subgraph $G[N(v_{1})]$. If $G[N(v_{1})]$ had at most $ex(d_{1},K_{r})$ edges, then a standard degree-partitioning upper bound (obtained by splitting edges according to whether both endpoints lie in $N(v_{1})$, one endpoint in $N(v_{1})$, or both outside it, and using that $v_{1}$ has maximum degree) would force $|E(G)|\\le ex(n,K_{r+1})$, contradicting $|E(G)|>ex(n,K_{r+1})$. Therefore,\n$$\n|E(G[N(v_{1})])|>ex(d_{1},K_{r}).\n$$\nBy the induction hypothesis applied to $G[N(v_{1})]$ with parameter $r-1$, the same greedy-maximum-degree intersection restricted to $G[N(v_{1})]$ runs for $r-1$ iterations and finds a $K_{r}$ inside $N(v_{1})$. The stated algorithm’s steps exactly match this restriction: after setting $S \\leftarrow N(v_{1})$, at each iteration it selects a maximum-degree vertex in $G[S]$ and intersects with its neighborhood. Hence after $r$ iterations total, the final $S$ is non-empty, and picking any $v_{r+1} \\in S$ yields a set $C \\cup \\{v_{r+1}\\}$ of $r+1$ mutually adjacent vertices. The work per iteration is polynomial in $n$, so the overall time is polynomial. Thus A is correct and reliable.\n\nOption B:\nChoosing minimum-degree vertices within $G[S]$ can immediately get stuck even in graphs containing many $K_{r+1}$’s: selecting a low-degree vertex may collapse $S$ to $\\emptyset$ well before $r$ steps, producing failure. There is no guarantee this avoids bad choices, so it is not reliable.\n\nOption C:\nLetting $v$ be of maximum degree and recursing on the non-neighborhood $S=V\\setminus(N(v)\\cup\\{v\\})$ is not justified. Even if $G$ has a $K_{r+1}$, it need not lie fully inside the set of non-neighbors of a maximum-degree vertex, and there is no preservation of the condition $|E(G[S])|>ex(|S|,K_{r+1})$. Hence this does not reliably find a $K_{r+1}$.\n\nOption D:\nPicking arbitrary vertices and intersecting neighborhoods is not reliable: arbitrary choices can immediately make $S$ empty regardless of the presence of many cliques. No correctness guarantee is available.\n\nTherefore, among the options, only A is correct and reliable in polynomial time under the stated condition.\n\nComplexity note: In A, each iteration computes degrees in $G[S]$ and updates $S$ by intersection with a neighborhood, both doable in polynomial time. The loop runs for $r$ iterations, and $r \\le n$, so the procedure is polynomial.\n\nConclusion: The correct choice is A.", "answer": "$$\\boxed{A}$$", "id": "1382596"}]}