{"hands_on_practices": [{"introduction": "The Floyd-Warshall algorithm is built upon a simple yet powerful dynamic programming recurrence. This practice focuses on applying this core update rule, $d_{ij}^{(k)} = \\min(d_{ij}^{(k-1)}, d_{ik}^{(k-1)} + d_{kj}^{(k-1)})$, for a single path calculation, which forms the building block for the entire process [@problem_id:1370950]. By manually tracing the improvement of a path through a specific set of intermediate vertices, you will gain a concrete understanding of how the algorithm incrementally finds shorter routes.", "problem": "In a small, experimental data center, five processing nodes, labeled $N_1, N_2, N_3, N_4, N_5$, are interconnected. The performance of the network is characterized by the latency, in milliseconds (ms), for sending a data packet directly from one node to another. Due to specialized hardware optimizations, some direct links can have a negative latency, effectively reducing the total time of a multi-hop data transfer.\n\nThe known direct latencies are as follows:\n- From $N_1$ to $N_2$: 3 ms\n- From $N_1$ to $N_3$: 8 ms\n- From $N_1$ to $N_5$: -2 ms\n- From $N_2$ to $N_4$: 1 ms\n- From $N_2$ to $N_5$: 7 ms\n- From $N_3$ to $N_2$: 4 ms\n- From $N_4$ to $N_1$: 2 ms\n- From $N_4$ to $N_3$: -5 ms\n- From $N_5$ to $N_4$: 6 ms\n\nIf a direct path between two nodes is not listed, it is considered to have an infinitely large latency. The latency from any node to itself is 0 ms.\n\nA path from a source node $N_i$ to a destination node $N_j$ can route through a set of intermediate nodes. Let's define $L(i, j, k)$ as the minimum possible latency for a path from node $N_i$ to node $N_j$ that is only allowed to use nodes from the set $\\{N_1, N_2, \\dots, N_k\\}$ as intermediate stops. A direct path from $N_i$ to $N_j$ has no intermediate stops.\n\nCalculate the value of $L(4, 2, 3)$. Express your final answer in milliseconds.", "solution": "We use the standard Floyd–Warshall dynamic programming for shortest paths with restricted intermediate nodes. Let $w(i,j)$ be the direct latency from $N_{i}$ to $N_{j}$, with $w(i,j)=\\infty$ if not listed and $w(i,i)=0$. Define\n$$\nL(i,j,0)=w(i,j), \\quad L(i,j,k)=\\min\\big(L(i,j,k-1),\\,L(i,k,k-1)+L(k,j,k-1)\\big),\n$$\nwhich restricts intermediate nodes to the set $\\{N_{1},\\dots,N_{k}\\}$.\n\nWe need $L(4,2,3)$. First, from the data:\n$$\nw(1,2)=3,\\quad w(1,3)=8,\\quad w(1,5)=-2,\\quad w(2,4)=1,\\quad w(2,5)=7,\n$$\n$$\nw(3,2)=4,\\quad w(4,1)=2,\\quad w(4,3)=-5,\\quad w(5,4)=6,\n$$\nand all other $w(i,j)=\\infty$ except $w(i,i)=0$.\n\nInitialization ($k=0$) for needed pairs:\n$$\nL(4,2,0)=\\infty,\\quad L(4,1,0)=2,\\quad L(1,2,0)=3,\\quad L(4,3,0)=-5,\\quad L(3,2,0)=4.\n$$\n\nStep $k=1$ (allowing $N_{1}$ as intermediate):\n$$\nL(4,2,1)=\\min\\big(L(4,2,0),\\,L(4,1,0)+L(1,2,0)\\big)=\\min(\\infty,\\,2+3)=5,\n$$\nand for later use,\n$$\nL(4,3,1)=\\min(-5,\\,2+8)=-5,\\quad L(3,2,1)=\\min(4,\\,\\infty+3)=4.\n$$\n\nStep $k=2$ (allowing $\\{N_{1},N_{2}\\}$ as intermediates):\n$$\nL(4,2,2)=\\min\\big(L(4,2,1),\\,L(4,2,1)+L(2,2,1)\\big)=\\min(5,\\,5+0)=5,\n$$\nand for later use,\n$$\nL(4,3,2)=\\min\\big(L(4,3,1),\\,L(4,2,1)+L(2,3,1)\\big)=\\min(-5,\\,5+\\infty)=-5,\n$$\n$$\nL(3,2,2)=\\min\\big(L(3,2,1),\\,L(3,2,1)+L(2,2,1)\\big)=\\min(4,\\,4+0)=4.\n$$\n\nStep $k=3$ (allowing $\\{N_{1},N_{2},N_{3}\\}$ as intermediates):\n$$\nL(4,2,3)=\\min\\big(L(4,2,2),\\,L(4,3,2)+L(3,2,2)\\big)=\\min(5,\\,-5+4)=-1.\n$$\n\nTherefore, the minimum possible latency from $N_{4}$ to $N_{2}$ using only $\\{N_{1},N_{2},N_{3}\\}$ as intermediate nodes is $-1$ ms.", "answer": "$$\\boxed{-1}$$", "id": "1370950"}, {"introduction": "Building on the single update step, this exercise scales up the process to a full iteration of the Floyd-Warshall algorithm [@problem_id:1370977]. You will compute the entire distance matrix $D^{(1)}$ from the initial matrix $D^{(0)}$, considering vertex 1 as the first potential intermediate vertex. This practice illustrates how a single pivot vertex can systematically update path estimates across the entire graph in one go.", "problem": "A small-scale datacenter consists of four servers, labeled 1, 2, 3, and 4. The network administrator has measured the direct communication latency (in milliseconds) between certain pairs of servers. The latencies are represented by a weighted directed graph where an edge from server $i$ to server $j$ has a weight equal to the latency. The initial matrix of direct latencies, $D^{(0)}$, is given below. An entry of $\\infty$ indicates that there is no direct connection between the servers.\n\n$$\nD^{(0)} = \\begin{pmatrix}\n0  8  \\infty  1 \\\\\n\\infty  0  1  \\infty \\\\\n4  \\infty  0  \\infty \\\\\n\\infty  2  9  0\n\\end{pmatrix}\n$$\n\nTo find the shortest communication time between all pairs of servers, the administrator uses the Floyd-Warshall algorithm. The algorithm iteratively computes a sequence of matrices $D^{(k)}$, where the entry $D^{(k)}_{ij}$ represents the shortest path from server $i$ to server $j$ using only intermediate servers from the set $\\{1, 2, \\dots, k\\}$.\n\nDetermine the matrix $D^{(1)}$ that results from the first full iteration (i.e., for $k=1$) of the Floyd-Warshall algorithm. Your answer should be the complete $4 \\times 4$ matrix.", "solution": "We apply the Floyd–Warshall update for $k=1$. The recurrence is\n$$\nD^{(1)}_{ij}=\\min\\!\\left(D^{(0)}_{ij},\\,D^{(0)}_{i1}+D^{(0)}_{1j}\\right).\n$$\n- For $i=1$, since $D^{(0)}_{11}=0$, we have $D^{(0)}_{11}+D^{(0)}_{1j}=D^{(0)}_{1j}$ for all $j$, hence $D^{(1)}_{1j}=D^{(0)}_{1j}$. Thus row $1$ remains $\\big(0,\\,8,\\,\\infty,\\,1\\big)$.\n- For $i=2$, $D^{(0)}_{21}=\\infty$, so $D^{(0)}_{21}+D^{(0)}_{1j}=\\infty$ for all $j$, hence $D^{(1)}_{2j}=D^{(0)}_{2j}$. Thus row $2$ remains $\\big(\\infty,\\,0,\\,1,\\,\\infty\\big)$.\n- For $i=3$, $D^{(0)}_{31}=4$ is finite, so compute each $j$:\n$$\n\\begin{aligned}\nD^{(1)}_{31}=\\min\\!\\big(4,\\,4+0\\big)=4,\\\\\nD^{(1)}_{32}=\\min\\!\\big(\\infty,\\,4+8\\big)=12,\\\\\nD^{(1)}_{33}=\\min\\!\\big(0,\\,4+\\infty\\big)=0,\\\\\nD^{(1)}_{34}=\\min\\!\\big(\\infty,\\,4+1\\big)=5.\n\\end{aligned}\n$$\nThus row $3$ becomes $\\big(4,\\,12,\\,0,\\,5\\big)$.\n- For $i=4$, $D^{(0)}_{41}=\\infty$, so $D^{(1)}_{4j}=D^{(0)}_{4j}$. Thus row $4$ remains $\\big(\\infty,\\,2,\\,9,\\,0\\big)$.\n\nTherefore,\n$$\nD^{(1)}=\\begin{pmatrix}\n0  8  \\infty  1\\\\\n\\infty  0  1  \\infty\\\\\n4  12  0  5\\\\\n\\infty  2  9  0\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\n0  8  \\infty  1\\\\\n\\infty  0  1  \\infty\\\\\n4  12  0  5\\\\\n\\infty  2  9  0\n\\end{pmatrix}}$$", "id": "1370977"}, {"introduction": "The true power of the Floyd-Warshall algorithm lies in its iterative progression, where shortest paths are gradually uncovered as more vertices are permitted as intermediaries. This problem challenges you to trace the algorithm's state over multiple iterations to pinpoint the exact moment a specific path is first optimized [@problem_id:1370958]. Completing this exercise will deepen your understanding of how the expanding set of intermediate vertices enables the discovery of optimal paths, which may only become apparent in later stages of the computation.", "problem": "Consider a directed graph with 5 vertices, labeled {1, 2, 3, 4, 5}. The initial weight matrix for the shortest paths between these vertices, denoted as $D^{(0)}$, is given below. An entry of $\\infty$ indicates that there is no direct path between the corresponding vertices.\n\n$$\nD^{(0)} = \\begin{pmatrix}\n0  \\infty  \\infty  \\infty  5 \\\\\n3  0  1  \\infty  \\infty \\\\\n\\infty  \\infty  0  2  \\infty \\\\\n\\infty  6  \\infty  0  \\infty \\\\\n\\infty  \\infty  \\infty  4  0\n\\end{pmatrix}\n$$\n\nThe Floyd-Warshall algorithm is used to find all-pairs shortest paths by iteratively improving path estimates. It generates a sequence of matrices $D^{(0)}, D^{(1)}, D^{(2)}, \\dots, D^{(5)}$. An entry in the matrix, denoted by its row $i$ and column $j$ as the $(i,j)$-entry, is said to be updated for the first time at iteration $k$ (where $k \\ge 1$) if its value in matrix $D^{(k)}$ is smaller than its value in $D^{(k-1)}$, and its value had not changed in any previous iterations (i.e., its value in $D^{(m)}$ was the same as in $D^{(m-1)}$ for all $1 \\le m  k$).\n\nWhich of the following entries is updated for the very first time during the $k=3$ iteration of the algorithm?\n\nA. The $(2,5)$-entry\n\nB. The $(4,1)$-entry\n\nC. The $(4,3)$-entry\n\nD. The $(2,4)$-entry\n\nE. The $(1,2)$-entry", "solution": "The Floyd–Warshall recurrence is\n$$\nD^{(k)}_{ij}=\\min\\left(D^{(k-1)}_{ij},\\,D^{(k-1)}_{i k}+D^{(k-1)}_{k j}\\right),\n$$\nmeaning at iteration $k$ we allow intermediate vertices only from $\\{1,\\dots,k\\}$.\n\nStarting from the given $D^{(0)}$, consider $k=1$ (intermediate vertex $1$). We use column $1$ and row $1$ of $D^{(0)}$:\n- For $i=2$, $D^{(0)}_{21}=3$ and $D^{(0)}_{1 5}=5$, so\n$$\nD^{(1)}_{25}=\\min\\left(D^{(0)}_{25},\\,D^{(0)}_{21}+D^{(0)}_{15}\\right)=\\min\\left(\\infty,\\,3+5\\right)=8,\n$$\na first-time update. All other pairs via $1$ remain unchanged because either $D^{(0)}_{i1}=\\infty$ or $D^{(0)}_{1j}=\\infty$.\n\nThus after $k=1$,\n$$\nD^{(1)}=\\begin{pmatrix}\n0  \\infty  \\infty  \\infty  5\\\\\n3  0  1  \\infty  8\\\\\n\\infty  \\infty  0  2  \\infty\\\\\n\\infty  6  \\infty  0  \\infty\\\\\n\\infty  \\infty  \\infty  4  0\n\\end{pmatrix}.\n$$\n\nFor $k=2$ (intermediate vertex $2$), use column $2$ and row $2$ of $D^{(1)}$. With $D^{(1)}_{42}=6$ and row $2$ equal to $(3,0,1,\\infty,8)$, we obtain\n$$\nD^{(2)}_{41}=\\min\\left(\\infty,\\,6+3\\right)=9,\\quad\nD^{(2)}_{43}=\\min\\left(\\infty,\\,6+1\\right)=7,\\quad\nD^{(2)}_{45}=\\min\\left(\\infty,\\,6+8\\right)=14,\n$$\nall first-time updates. No other pair improves via $2$. Hence\n$$\nD^{(2)}=\\begin{pmatrix}\n0  \\infty  \\infty  \\infty  5\\\\\n3  0  1  \\infty  8\\\\\n\\infty  \\infty  0  2  \\infty\\\\\n9  6  7  0  14\\\\\n\\infty  \\infty  \\infty  4  0\n\\end{pmatrix}.\n$$\n\nFor $k=3$ (intermediate vertex $3$), use column $3$ and row $3$ of $D^{(2)}$. We have $D^{(2)}_{23}=1$ and row $3$ is $(\\infty,\\infty,0,2,\\infty)$. Then\n$$\nD^{(3)}_{24}=\\min\\left(D^{(2)}_{24},\\,D^{(2)}_{23}+D^{(2)}_{34}\\right)=\\min\\left(\\infty,\\,1+2\\right)=3,\n$$\nwhich is a first-time update. For all other listed candidates at $k=3$, no improvement occurs: $(2,5)$ was already updated at $k=1$, $(4,1)$ and $(4,3)$ at $k=2$, and $(1,2)$ does not improve via $3$ since $D^{(2)}_{13}=\\infty$ or $D^{(2)}_{32}=\\infty$.\n\nTherefore, the only listed entry first updated at iteration $k=3$ is the $(2,4)$-entry.", "answer": "$$\\boxed{D}$$", "id": "1370958"}]}