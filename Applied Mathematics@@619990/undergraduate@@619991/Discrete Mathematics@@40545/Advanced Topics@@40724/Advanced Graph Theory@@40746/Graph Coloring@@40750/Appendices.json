{"hands_on_practices": [{"introduction": "A natural first thought when coloring a graph is that the number of colors needed must be determined by the largest group of mutually connected vertices, known as a clique. This exercise challenges that intuition by exploring the relationship between the chromatic number, $\\chi(G)$, and the clique number, $\\omega(G)$. This practice is designed to help you construct and identify a graph that is triangle-free ($\\omega(G) = 2$) but still requires three colors to be properly colored, illustrating a fundamental and often surprising principle in graph theory [@problem_id:1372127].", "problem": "In graph theory, a **coloring** of a graph is an assignment of a label, traditionally called a \"color,\" to each vertex such that no two adjacent vertices have the same color. The **chromatic number** of a graph $G$, denoted $\\chi(G)$, is the minimum number of colors needed for a valid coloring of $G$. A graph is said to be **triangle-free** if it contains no set of three vertices that are all mutually adjacent to each other (i.e., it does not contain the complete graph $K_3$ as a subgraph).\n\nYour task is to identify which of the following graphs is both triangle-free and has a chromatic number of exactly 3.\n\nA. A **path graph** on 5 vertices, which consists of 5 vertices $v_1, v_2, v_3, v_4, v_5$ and edges $(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5)$.\n\nB. The **complete graph** on 4 vertices, denoted $K_4$, in which every pair of distinct vertices is connected by an edge.\n\nC. A **cycle graph** on 5 vertices, which consists of 5 vertices $v_1, v_2, v_3, v_4, v_5$ and edges $(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5), (v_5, v_1)$.\n\nD. A **cycle graph** on 6 vertices, which consists of 6 vertices connected in a single loop.\n\nE. The **wheel graph** $W_5$, which is formed by connecting a single central vertex to all 4 vertices of a cycle graph on 4 vertices.", "solution": "We must identify graphs that are both triangle-free (contain no subgraph isomorphic to $K_{3}$) and have chromatic number exactly $3$.\n\nAnalyze each option:\n\nA. Path graph on $5$ vertices $P_{5}$. A path is a tree, hence bipartite. A bipartite graph admits a $2$-coloring by assigning colors based on parity of distance from one end; since $P_{5}$ has at least one edge, $\\chi(P_{5})=2$. It is triangle-free but not $3$-chromatic.\n\nB. Complete graph $K_{4}$. By definition, it contains every possible edge between the $4$ vertices, so it contains many triangles $K_{3}$. It is not triangle-free, and also $\\chi(K_{4})=4$.\n\nC. Cycle graph on $5$ vertices $C_{5}$. A cycle has triangles only if its length is $3$, so $C_{5}$ is triangle-free. For chromatic number: even cycles are $2$-colorable, odd cycles are not. In a $2$-coloring attempt for $C_{5}$, alternating colors around the cycle forces the fifth vertex to conflict with its neighbors, so $2$ colors are impossible; a $3$-coloring is straightforward by using two alternating colors on four consecutive vertices and a third color on the fifth. Therefore $\\chi(C_{5})=3$, and $C_{5}$ is triangle-free.\n\nD. Cycle graph on $6$ vertices $C_{6}$. This is triangle-free, but since the cycle length is even, it is bipartite and hence $\\chi(C_{6})=2$. Not $3$-chromatic.\n\nE. Wheel graph $W_{5}=K_{1}+C_{4}$ (a central hub connected to all $4$ vertices of a $C_{4}$). The hub together with any two adjacent rim vertices forms a triangle, so it is not triangle-free. (Indeed, $W_{5}$ has $\\chi(W_{5})=3$ because the rim $C_{4}$ is $2$-colorable and the hub requires a third color, but the presence of triangles disqualifies it.)\n\nOnly option C satisfies both properties: triangle-free and chromatic number exactly $3$.", "answer": "$$\\boxed{C}$$", "id": "1372127"}, {"introduction": "While knowing the chromatic number is valuable, we also need practical methods to actually find a valid coloring. The greedy coloring algorithm is one of the most fundamental and intuitive approaches, but its effectiveness can be deceptive. This hands-on problem demonstrates a critical aspect of algorithmic performance: the greedy algorithm is not always optimal and its outcome depends heavily on the chosen order of vertices. By finding an ordering for a simple path graph that forces the algorithm to use more colors than necessary, you will gain a deeper appreciation for the nuances of graph algorithms [@problem_id:1372146].", "problem": "Consider a path graph $P_6$ which consists of six vertices, labeled $v_1, v_2, v_3, v_4, v_5, v_6$, and five edges connecting them in a linear sequence: $(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5), (v_5, v_6)$. A vertex coloring of this graph is an assignment of a color to each vertex such that no two adjacent vertices share the same color.\n\nThe greedy coloring algorithm is a method for coloring a graph. It processes the vertices in a specified sequence. The colors are represented by the set of positive integers $\\{1, 2, 3, \\dots\\}$. For each vertex in the sequence, the algorithm assigns it the smallest positive integer (color) that has not already been assigned to any of its adjacent vertices that have been colored earlier in the sequence.\n\nWhich one of the following vertex orderings, when followed by the greedy coloring algorithm, will result in a coloring of $P_6$ that uses exactly three distinct colors?\n\nA. $(v_1, v_2, v_3, v_4, v_5, v_6)$\n\nB. $(v_1, v_3, v_5, v_2, v_4, v_6)$\n\nC. $(v_1, v_6, v_2, v_5, v_3, v_4)$\n\nD. $(v_3, v_4, v_2, v_5, v_1, v_6)$", "solution": "We apply the greedy coloring rule: when a vertex is processed, assign it the smallest positive integer not used by its already-colored neighbors.\n\nOption A: Ordering $(v_{1},v_{2},v_{3},v_{4},v_{5},v_{6})$.\n- $v_{1}$: no colored neighbors, so color $1$.\n- $v_{2}$: neighbors colored among earlier vertices is $\\{v_{1}\\}$ with color $1$, so assign $2$.\n- $v_{3}$: neighbor among earlier is $v_{2}$ with color $2$, so assign $1$.\n- $v_{4}$: neighbor among earlier is $v_{3}$ with color $1$, so assign $2$.\n- $v_{5}$: neighbor among earlier is $v_{4}$ with color $2$, so assign $1$.\n- $v_{6}$: neighbor among earlier is $v_{5}$ with color $1$, so assign $2$.\nOnly colors $1$ and $2$ are used.\n\nOption B: Ordering $(v_{1},v_{3},v_{5},v_{2},v_{4},v_{6})$.\n- $v_{1}$: no colored neighbors, so color $1$.\n- $v_{3}$: no colored neighbors among earlier, so color $1$.\n- $v_{5}$: no colored neighbors among earlier, so color $1$.\n- $v_{2}$: neighbors among earlier are $v_{1}$ and $v_{3}$, both color $1$, so assign $2$.\n- $v_{4}$: neighbors among earlier are $v_{3}$ and $v_{5}$, both color $1$, so assign $2$.\n- $v_{6}$: neighbor among earlier is $v_{5}$ with color $1$, so assign $2$.\nOnly colors $1$ and $2$ are used.\n\nOption C: Ordering $(v_{1},v_{6},v_{2},v_{5},v_{3},v_{4})$.\n- $v_{1}$: no colored neighbors, so color $1$.\n- $v_{6}$: no colored neighbors, so color $1$.\n- $v_{2}$: neighbor among earlier is $v_{1}$ with color $1$, so assign $2$.\n- $v_{5}$: neighbor among earlier is $v_{6}$ with color $1$, so assign $2$.\n- $v_{3}$: neighbor among earlier is $v_{2}$ with color $2$, so assign $1$ (smallest not used by its colored neighbors).\n- $v_{4}$: neighbors among earlier are $v_{3}$ with color $1$ and $v_{5}$ with color $2$. The forbidden set is $\\{1,2\\}$, so assign $3$.\nExactly three colors $1,2,3$ are used.\n\nOption D: Ordering $(v_{3},v_{4},v_{2},v_{5},v_{1},v_{6})$.\n- $v_{3}$: no colored neighbors, so color $1$.\n- $v_{4}$: neighbor among earlier is $v_{3}$ with color $1$, so assign $2$.\n- $v_{2}$: neighbor among earlier is $v_{3}$ with color $1$, so assign $2$.\n- $v_{5}$: neighbor among earlier is $v_{4}$ with color $2$, so assign $1$.\n- $v_{1}$: neighbor among earlier is $v_{2}$ with color $2$, so assign $1$.\n- $v_{6}$: neighbor among earlier is $v_{5}$ with color $1$, so assign $2$.\nOnly colors $1$ and $2$ are used.\n\nTherefore, only Option C yields exactly three colors under the greedy algorithm.", "answer": "$$\\boxed{C}$$", "id": "1372146"}, {"introduction": "Graph coloring is not just an abstract mathematical puzzle; it is a powerful tool for solving real-world problems. Many practical scenarios, from scheduling exams to assigning frequencies for cell towers, can be modeled as graph coloring problems. This exercise presents a classic application: resource allocation under constraints, framed as a problem of assigning employees to teams [@problem_id:1372158]. By translating the personnel conflicts into a graph, you will see how determining if the graph is 2-colorable (bipartite) provides a direct solution to a logistical challenge.", "problem": "A technology startup is organizing its employees into two teams, \"Team Alpha\" and \"Team Beta\", for a new project. There are eight key employees: Ann, Ben, Chloe, David, Emily, Frank, Grace, and Henry. To avoid resource conflicts and personality clashes, certain pairs of employees cannot be assigned to the same team. The pairs with conflicts are as follows:\n\n- Ann and Ben\n- Ann and David\n- Chloe and Ben\n- Chloe and Frank\n- Emily and David\n- Emily and Henry\n- Grace and Frank\n- Grace and Henry\n\nLet the employees be represented by the first letter of their names: A, B, C, D, E, F, G, H. An assignment is valid if and only if for every pair of employees with a conflict, those two employees are on different teams. Determine which of the following statements correctly describes a valid team assignment.\n\nA. A valid assignment is not possible.\n\nB. Team Alpha: {A, C, E, G}, Team Beta: {B, D, F, H}\n\nC. Team Alpha: {A, B, E, G}, Team Beta: {C, D, F, H}\n\nD. Team Alpha: {A, C, F, G}, Team Beta: {B, D, E, H}\n\nE. Team Alpha: {A, B, C, F}, Team Beta: {D, E, G, H}", "solution": "Let the employees be represented by letters $A,B,C,D,E,F,G,H$. The conflict pairs are $(A,B)$, $(A,D)$, $(C,B)$, $(C,F)$, $(E,D)$, $(E,H)$, $(G,F)$, $(G,H)$. An assignment is valid if, for every conflict pair $(X,Y)$, the employees $X$ and $Y$ are on different teams.\n\nCheck option B: Team Alpha $=\\{A,C,E,G\\}$, Team Beta $=\\{B,D,F,H\\}$. Verify each conflict:\n$(A,B)$: $A$ in Alpha, $B$ in Beta; $(A,D)$: $A$ in Alpha, $D$ in Beta; $(C,B)$: $C$ in Alpha, $B$ in Beta; $(C,F)$: $C$ in Alpha, $F$ in Beta; $(E,D)$: $E$ in Alpha, $D$ in Beta; $(E,H)$: $E$ in Alpha, $H$ in Beta; $(G,F)$: $G$ in Alpha, $F$ in Beta; $(G,H)$: $G$ in Alpha, $H$ in Beta. All conflicts are across teams, so B is valid.\n\nCheck option C: Team Alpha $=\\{A,B,E,G\\}$ contains the conflict pair $(A,B)$ on the same team, so C is invalid.\n\nCheck option D: Team Alpha $=\\{A,C,F,G\\}$ contains the conflict pair $(C,F)$ on the same team, so D is invalid.\n\nCheck option E: Team Alpha $=\\{A,B,C,F\\}$ contains the conflict pair $(A,B)$ on the same team, so E is invalid.\n\nTherefore, only option B describes a valid team assignment. Option A is false because B provides a valid assignment.", "answer": "$$\\boxed{B}$$", "id": "1372158"}]}