{"hands_on_practices": [{"introduction": "Designing efficient networks is a classic application of Minimum Spanning Trees, whether for data, transport, or energy. This exercise gives you a practical scenario to apply Prim's algorithm, a fundamental greedy method for finding an MST. Following the algorithm step-by-step from a designated starting point will solidify your understanding of how it incrementally builds the optimal solution. [@problem_id:1384198]", "problem": "An aerospace engineering firm is tasked with designing a foundational communication network for a new Martian colony. The network must connect six key settlements, ensuring data can be relayed between any two locations, either directly or indirectly. The cost of establishing a direct communication link between any two settlements is given by a \"latency-energy cost index\", a dimensionless quantity that factors in signal travel time, atmospheric interference, and power requirements. A lower index signifies a more efficient link.\n\nThe six settlements are: Ares Prime (A), Valles Marineris Base (B), Olympus Mons Observatory (C), Hellas Planitia Colony (D), Syrtis Major Hub (E), and Elysium Outpost (F).\n\nThe potential communication links and their associated cost indices are as follows:\n- A to B: 5\n- A to C: 6\n- A to D: 4\n- B to C: 2\n- B to E: 9\n- C to D: 2\n- C to E: 5\n- C to F: 8\n- D to F: 7\n- E to F: 3\n\nTo ensure a standardized and verifiable network topology, a construction protocol must be followed. Using Prim's algorithm, starting from the settlement Ares Prime (A), determine the minimum possible total cost index for building a network that connects all six settlements.", "solution": "We model the settlements as vertices of an undirected weighted graph and the potential links as edges with given weights (cost indices). Prim's algorithm builds a minimum spanning tree by starting from a specified vertex and repeatedly adding the minimum-weight edge that connects the current tree to a new vertex.\n\nInitialize with Ares Prime (A): let the current tree vertex set be $S = \\{A\\}$. The edges leaving $S$ are $A\\text{-}B$ with weight $5$, $A\\text{-}C$ with weight $6$, and $A\\text{-}D$ with weight $4$. The smallest is $A\\text{-}D$ with weight $4$, so add $D$. Now $S = \\{A,D\\}$ and the running total is $4$.\n\nFrom $S = \\{A,D\\}$, the candidate edges crossing to $V \\setminus S$ are $A\\text{-}B$ with $5$, $A\\text{-}C$ with $6$, $D\\text{-}C$ with $2$, and $D\\text{-}F$ with $7$. The smallest is $C\\text{-}D$ with weight $2$, so add $C$. Now $S = \\{A,D,C\\}$ and the running total is $4+2$.\n\nFrom $S = \\{A,D,C\\}$, the candidate edges are $C\\text{-}B$ with $2$, $C\\text{-}E$ with $5$, $C\\text{-}F$ with $8$, $D\\text{-}F$ with $7$, and $A\\text{-}B$ with $5$. The smallest is $B\\text{-}C$ with weight $2$, so add $B$. Now $S = \\{A,D,C,B\\}$ and the running total is $4+2+2$.\n\nFrom $S = \\{A,D,C,B\\}$, the candidate edges are $C\\text{-}E$ with $5$, $C\\text{-}F$ with $8$, $D\\text{-}F$ with $7$, and $B\\text{-}E$ with $9$. The smallest is $C\\text{-}E$ with weight $5$, so add $E$. Now $S = \\{A,D,C,B,E\\}$ and the running total is $4+2+2+5$.\n\nFrom $S = \\{A,D,C,B,E\\}$, the remaining candidate edges are $E\\text{-}F$ with $3$, $D\\text{-}F$ with $7$, and $C\\text{-}F$ with $8$. The smallest is $E\\text{-}F$ with weight $3$, so add $F$. Now all six settlements are connected and the algorithm terminates.\n\nThe total minimum cost index is the sum of the selected edge weights:\n$$4 + 2 + 2 + 5 + 3 = 16.$$", "answer": "$$\\boxed{16}$$", "id": "1384198"}, {"introduction": "While algorithms like Kruskal's and Prim's can find an MST for any graph, true mastery comes from recognizing when a deeper principle offers a more elegant path to the solution. This problem features a graph with a highly structured pattern of edge weights, providing an ideal opportunity to apply the fundamental Cut Property. Instead of a mechanical search, you can use logical deduction to directly identify the edges that must belong to the minimum spanning tree. [@problem_id:1384190]", "problem": "Consider a complete graph, denoted as $K_5$, with a set of five vertices labeled $V = \\{1, 2, 3, 4, 5\\}$. The weight of the edge connecting any two distinct vertices $i$ and $j$ from the set $V$ is defined by the function $w(i, j) = |i - j|$. A spanning tree of a graph is a subgraph that is a tree and connects all the vertices together. A minimum spanning tree (MST) is a spanning tree with the minimum possible total edge weight.\n\nDetermine the total weight of a minimum spanning tree for this graph.", "solution": "We are given the complete graph $K_{5}$ on $V=\\{1,2,3,4,5\\}$ with edge weights $w(i,j)=|i-j|$ for $i\\neq j$. A minimum spanning tree (MST) on $5$ vertices has exactly $4$ edges.\n\nFirst, we show by the cut property that the edges between consecutive integers must be in every MST. For each $k\\in\\{1,2,3,4\\}$, consider the cut $\\left(S_{k},V\\setminus S_{k}\\right)$ with $S_{k}=\\{1,2,\\dots,k\\}$. Any edge crossing this cut has endpoints $i\\in S_{k}$ and $j\\in V\\setminus S_{k}$, hence $i\\leq k$ and $j\\geq k+1$, so\n$$\nw(i,j)=|i-j|=j-i\\geq (k+1)-k=1.\n$$\nThe unique edge across this cut attaining weight $1$ is $(k,k+1)$ with $w(k,k+1)=|k-(k+1)|=1$. By the cut property, each $(k,k+1)$ for $k=1,2,3,4$ must belong to every MST.\n\nThese $4$ edges form a tree (a path) connecting all $5$ vertices, so they constitute an MST. Its total weight is\n$$\n\\sum_{k=1}^{4} w(k,k+1)=\\sum_{k=1}^{4} |k-(k+1)|=\\sum_{k=1}^{4} 1=4.\n$$\nAs a corroborating lower bound, any spanning tree has $4$ edges and each edge has weight at least $1$, so the total weight is at least $4$, which is achieved by the path above. Therefore the MST total weight is $4$.", "answer": "$$\\boxed{4}$$", "id": "1384190"}, {"introduction": "A crucial aspect of problem-solving is understanding how a solution's optimality is affected when the underlying parameters change. This exercise moves from computation to analysis, asking you to explore the stability of a Minimum Spanning Tree under a linear transformation of its edge weights. By investigating this scenario, you will uncover a fundamental property of MSTs and understand why the greedy choice remains optimal, a concept with implications far beyond graph theory. [@problem_id:1522153]", "problem": "A telecommunications company is planning to establish a new fiber optic network to connect a set of $N$ cities. The network can be modeled as a connected, undirected graph $G=(V, E)$, where $V$ is the set of cities ($|V| = N$) and $E$ is the set of possible fiber links between pairs of cities. For each potential link $e \\in E$, there is an associated initial cost $w(e) > 0$ to install it. The company builds a network corresponding to a Minimum Spanning Tree (MST) of this graph to connect all cities with the minimum possible total installation cost. The total cost of this initial network is denoted by $W_{MST}$.\n\nBefore construction begins, a new set of regulations and supply chain changes affect the cost structure. The new cost, $w'(e)$, for installing any link $e$ is now a linear function of the original cost: $w'(e) = a \\cdot w(e) + b$, where $a$ and $b$ are real constants with $a > 0$. The company decides to re-evaluate its network plan based on these new costs and will build the new MST corresponding to the weights $w'(e)$.\n\nDetermine the total cost of this new Minimum Spanning Tree. Express your answer as a symbolic expression in terms of $N$, $a$, $b$, and $W_{MST}$.", "solution": "We are given a connected, undirected graph $G=(V,E)$ with $|V|=N$ and positive edge weights $w(e)>0$ for all $e\\in E$. Let $W_{MST}$ denote the total weight of a minimum spanning tree (MST) under the weights $w(e)$. The weights are transformed to $w'(e)=a \\cdot w(e)+b$ with $a>0$ and $b\\in\\mathbb{R}$. We are to find the total cost of the MST under $w'$ in terms of $N$, $a$, $b$, and $W_{MST}$.\n\nFirst, recall the standard facts:\n- Any spanning tree $T$ on $N$ vertices has exactly $N-1$ edges: $|T|=N-1$.\n- The total cost of $T$ under $w$ is $W(T)=\\sum_{e\\in T} w(e)$.\n- The total cost of $T$ under $w'$ is\n$$\nW'(T)=\\sum_{e\\in T} w'(e)=\\sum_{e\\in T}\\big(a \\cdot w(e)+b\\big)=a\\sum_{e\\in T}w(e)+b\\sum_{e\\in T}1=a \\cdot W(T)+b(N-1).\n$$\n\nHence, for any spanning tree $T$,\n$$\nW'(T)=a \\cdot W(T)+b(N-1).\n$$\nMinimizing over all spanning trees, and using that $N$ is fixed so $N-1$ is constant across all trees, we have\n$$\n\\min_{T} W'(T)=\\min_{T}\\big(a \\cdot W(T)+b(N-1)\\big)=a\\min_{T}W(T)+b(N-1)=a \\cdot W_{MST}+b(N-1).\n$$\nSince $a>0$, the minimizer set is preserved (affine increasing transformations preserve the order of total weights), but even without appealing to ordering, the constant term $b(N-1)$ is independent of $T$ and the positive scaling $a$ preserves the minimization of $W(T)$. Therefore, the total cost of the new MST is\n$$\na \\cdot W_{MST}+b(N-1).\n$$", "answer": "$$\\boxed{a \\cdot W_{MST} + b(N-1)}$$", "id": "1522153"}]}