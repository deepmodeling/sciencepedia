{"hands_on_practices": [{"introduction": "Strong induction often serves as the bedrock for proving the existence of certain properties or representations. This first practice explores a fundamental concept in number theory and computer science: expressing any integer in a specific base. You will work with a unique base-3 representation system, where coefficients can be 0, 1, or 2, to see how the principle of strong induction guarantees that such an encoding is universally possible [@problem_id:1402576].", "problem": "A special type of digital memory, known as \"Trit-Memory,\" stores positive integers using a unique encoding scheme. In this scheme, any positive integer $n$ is represented as a sum of powers of 3, where each power can be used at most twice. This means that any integer $n$ can be uniquely written in the form:\n$$n = \\sum_{k=0}^{M} c_k 3^k$$\nwhere the coefficients $c_k$ can only be 0, 1, or 2, and $M$ is the largest integer such that $3^M \\le n$. The \"complexity\" of storing a number $n$ in Trit-Memory is defined as the sum of all the coefficients in its representation. That is, Complexity$(n) = \\sum_{k=0}^{M} c_k$.\n\nFor example, to store the number $n=17$, we find its representation is $17 = 1 \\cdot 3^2 + 2 \\cdot 3^1 + 2 \\cdot 3^0$. The coefficients are $c_2=1, c_1=2, c_0=2$. The complexity of storing 17 is therefore Complexity$(17) = 1 + 2 + 2 = 5$.\n\nFind the complexity of storing the integer $n = 1180$.", "solution": "We use the given base-3-like representation with digits in $\\{0,1,2\\}$, which is the standard base-$3$ expansion. The largest power needed satisfies $3^{6} \\le 1180 < 3^{7}$, so $M=6$. We determine the coefficients $c_{k}$ by the division algorithm, ensuring at each step that $0 \\le c_{k} \\le 2$ because the remainder before choosing $c_{k}$ is always less than $3^{k+1}$.\n\nStart with remainder $r=1180$.\nFor $k=6$:\n$$c_{6}=\\left\\lfloor \\frac{r}{3^{6}} \\right\\rfloor=\\left\\lfloor \\frac{1180}{729} \\right\\rfloor=1,\\quad r \\leftarrow r-c_{6}3^{6}=1180-1\\cdot 729=451.$$\nFor $k=5$:\n$$c_{5}=\\left\\lfloor \\frac{r}{3^{5}} \\right\\rfloor=\\left\\lfloor \\frac{451}{243} \\right\\rfloor=1,\\quad r \\leftarrow 451-1\\cdot 243=208.$$\nFor $k=4$:\n$$c_{4}=\\left\\lfloor \\frac{r}{3^{4}} \\right\\rfloor=\\left\\lfloor \\frac{208}{81} \\right\\rfloor=2,\\quad r \\leftarrow 208-2\\cdot 81=46.$$\nFor $k=3$:\n$$c_{3}=\\left\\lfloor \\frac{r}{3^{3}} \\right\\rfloor=\\left\\lfloor \\frac{46}{27} \\right\\rfloor=1,\\quad r \\leftarrow 46-1\\cdot 27=19.$$\nFor $k=2$:\n$$c_{2}=\\left\\lfloor \\frac{r}{3^{2}} \\right\\rfloor=\\left\\lfloor \\frac{19}{9} \\right\\rfloor=2,\\quad r \\leftarrow 19-2\\cdot 9=1.$$\nFor $k=1$:\n$$c_{1}=\\left\\lfloor \\frac{r}{3^{1}} \\right\\rfloor=\\left\\lfloor \\frac{1}{3} \\right\\rfloor=0,\\quad r \\leftarrow 1-0\\cdot 3=1.$$\nFor $k=0$:\n$$c_{0}=\\left\\lfloor \\frac{r}{3^{0}} \\right\\rfloor=\\left\\lfloor \\frac{1}{1} \\right\\rfloor=1,\\quad r \\leftarrow 1-1\\cdot 1=0.$$\n\nThus,\n$$1180=1\\cdot 3^{6}+1\\cdot 3^{5}+2\\cdot 3^{4}+1\\cdot 3^{3}+2\\cdot 3^{2}+0\\cdot 3^{1}+1\\cdot 3^{0}.$$\nThe complexity is the sum of the coefficients:\n$$\\text{Complexity}(1180)=c_{6}+c_{5}+c_{4}+c_{3}+c_{2}+c_{1}+c_{0}=1+1+2+1+2+0+1=8.$$", "answer": "$$\\boxed{8}$$", "id": "1402576"}, {"introduction": "Many counting problems in combinatorics and computer science are solved by defining a recurrence relation, where a term is defined by one or more preceding terms. Strong induction is the essential tool for rigorously proving that such relations hold. This exercise [@problem_id:1402596] challenges you to count specific types of binary strings, a task that naturally leads to a recurrence requiring knowledge of more than just the single preceding case, powerfully demonstrating the necessity of the 'strong' inductive hypothesis.", "problem": "A certain type of computer memory is designed to store data as binary strings (sequences of 0s and 1s). Due to a physical limitation in the data writing mechanism, it is impossible to write two consecutive '0's. Any binary string that does not contain the substring '00' is considered a 'valid word'. Your task is to determine the total number of distinct valid words of length $n=17$.", "solution": "Let $a_n$ be the number of valid binary strings of length $n$, where a valid string is one that does not contain the substring '00'. We want to find the value of $a_{17}$.\n\nTo solve this problem, we first find a recurrence relation for $a_n$. We begin by establishing the base cases for small values of $n$.\n\nFor $n=1$: The possible strings are \"0\" and \"1\". Neither contains the substring \"00\", so they are both valid. Thus, $a_1 = 2$.\n\nFor $n=2$: The possible binary strings are \"00\", \"01\", \"10\", and \"11\". The string \"00\" is forbidden. The other three strings, \"01\", \"10\", and \"11\", are valid. Thus, $a_2 = 3$.\n\nNow, let's consider a valid string of length $n$, where $n \\geq 3$. We can classify these strings based on their last bit.\n\nCase 1: The string ends with a '1'.\nIf a valid string of length $n$ ends with a '1', the first $n-1$ bits can form any valid string of length $n-1$. Appending a '1' to any valid string will never create the forbidden \"00\" substring. Therefore, the number of valid strings of length $n$ ending in '1' is equal to the total number of valid strings of length $n-1$, which is $a_{n-1}$.\n\nCase 2: The string ends with a '0'.\nIf a valid string of length $n$ ends with a '0', the bit at position $n-1$ cannot be a '0', because that would create the forbidden \"00\" substring. Therefore, the bit at position $n-1$ must be a '1'. This means the string must end with \"10\". The first $n-2$ bits can form any valid string of length $n-2$. Appending \"10\" to any valid string of length $n-2$ will always result in a valid string of length $n$. Therefore, the number of valid strings of length $n$ ending in '0' is equal to the total number of valid strings of length $n-2$, which is $a_{n-2}$.\n\nSince these two cases are mutually exclusive (a string cannot end in both '0' and '1') and exhaustive (a string must end in either '0' or '1'), we can find the total number of valid strings of length $n$ by summing the counts from both cases. This gives us the recurrence relation:\n$$ a_n = a_{n-1} + a_{n-2} $$\nThis relation holds for $n \\geq 3$. The establishment of this recurrence, which depends on two preceding terms, is formally proven using the principle of strong induction, with $a_1$ and $a_2$ serving as the base cases for the induction.\n\nNow we can compute the values of $a_n$ sequentially until we reach $a_{17}$:\n$a_1 = 2$\n$a_2 = 3$\n$a_3 = a_2 + a_1 = 3 + 2 = 5$\n$a_4 = a_3 + a_2 = 5 + 3 = 8$\n$a_5 = a_4 + a_3 = 8 + 5 = 13$\n$a_6 = a_5 + a_4 = 13 + 8 = 21$\n$a_7 = a_6 + a_5 = 21 + 13 = 34$\n$a_8 = a_7 + a_6 = 34 + 21 = 55$\n$a_9 = a_8 + a_7 = 55 + 34 = 89$\n$a_{10} = a_9 + a_8 = 89 + 55 = 144$\n$a_{11} = a_{10} + a_9 = 144 + 89 = 233$\n$a_{12} = a_{11} + a_{10} = 233 + 144 = 377$\n$a_{13} = a_{12} + a_{11} = 377 + 233 = 610$\n$a_{14} = a_{13} + a_{12} = 610 + 377 = 987$\n$a_{15} = a_{14} + a_{13} = 987 + 610 = 1597$\n$a_{16} = a_{15} + a_{14} = 1597 + 987 = 2584$\n$a_{17} = a_{16} + a_{15} = 2584 + 1597 = 4181$\n\nThe total number of distinct valid words of length $n=17$ is 4181.", "answer": "$$\\boxed{4181}$$", "id": "1402596"}, {"introduction": "Beyond verifying properties, strong induction can provide a blueprint for constructing solutions to problems. In this final practice, we turn to graph theory to explore a classic result concerning round-robin tournaments. You will apply the constructive logic inherent in an inductive proof to solve a concrete ranking problem [@problem_id:1402599], directly experiencing how assuming a solution for a smaller case ($n-1$ players) enables you to systematically build a solution for the larger case ($n$ players).", "problem": "In a sports analytics competition, you are tasked with analyzing the results of a round-robin tournament. In this tournament, a set of $n$ players compete, and every player plays against every other player exactly once, with one player winning and one losing (no draws). Such a tournament can be modeled as a \"tournament graph\" where players are vertices and a directed edge from player $u$ to player $v$ means that $u$ beat $v$.\n\nA key task is to find a \"dominance ranking,\" which is a sequence of all $n$ players $(P_1, P_2, \\dots, P_n)$ such that $P_i$ beat $P_{i+1}$ for all $i=1, \\dots, n-1$. In graph theory, this is known as a Hamiltonian path.\n\nA well-known constructive method for finding such a path in a tournament with $n$ players is to start with an existing Hamiltonian path for a subtournament of $n-1$ players and then insert the $n$-th player into the correct position in the sequence.\n\nConsider a tournament with five players: {Anna, Ben, Chloe, David, Emily}. For the four-player subtournament on {Anna, Ben, Chloe, David}, one possible dominance ranking (Hamiltonian path) is (Ben, Anna, David, Chloe). The results of the games involving the fifth player, Emily, are as follows:\n- Emily lost to Anna.\n- Emily lost to Ben.\n- Emily beat Chloe.\n- Emily beat David.\n\nUsing the described constructive method of inserting a new player into an existing path, what is the resulting dominance ranking for the full five-player tournament?\n\nA. (Ben, Anna, Emily, David, Chloe)\n\nB. (Emily, Ben, Anna, David, Chloe)\n\nC. (Ben, Anna, David, Chloe, Emily)\n\nD. (Ben, Emily, Anna, David, Chloe)\n\nE. (Anna, Ben, David, Chloe, Emily)", "solution": "Model the subtournament on {Anna, Ben, Chloe, David} by a Hamiltonian path $B \\to A \\to D \\to C$, meaning Ben beat Anna, Anna beat David, and David beat Chloe.\n\nUse the standard insertion algorithm for tournaments: given a Hamiltonian path $v_{1} \\to v_{2} \\to \\dots \\to v_{k}$ and a new vertex $E$, find the smallest index $j$ such that $E \\to v_{j}$. Insert $E$ immediately before $v_{j}$. If no such $j$ exists, append $E$ at the end. This maintains the Hamiltonian path property because for all $i<j$, $E \\nrightarrow v_{i}$ implies $v_{i} \\to E$, so the predecessor $v_{j-1}$ (when $j>1$) beats $E$, and by choice $E \\to v_{j}$.\n\nApply this to Emily with the given results: Emily lost to Ben and to Anna, so $E \\nrightarrow B$ and $E \\nrightarrow A$. Emily beat David, so $E \\to D$ is the first win encountered while scanning from left to right along $B \\to A \\to D \\to C$. Therefore, insert Emily immediately before David to obtain the path $B \\to A \\to E \\to D \\to C$.\n\nCheck adjacency: Anna beat Emily and Emily beat David, matching the required consecutive-edge directions, and the original edges $B \\to A$ and $D \\to C$ remain intact. Hence the resulting dominance ranking is (Ben, Anna, Emily, David, Chloe), which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1402599"}]}