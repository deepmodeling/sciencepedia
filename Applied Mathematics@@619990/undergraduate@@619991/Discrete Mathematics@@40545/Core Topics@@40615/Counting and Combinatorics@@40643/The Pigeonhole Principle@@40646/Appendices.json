{"hands_on_practices": [{"introduction": "The Pigeonhole Principle is a fundamental tool in computer science, especially for analyzing algorithms and data structures. This first practice problem explores a common scenario in hashing, where we must map a large number of items (files) into a smaller, finite set of slots (hash codes). By applying the Generalized Pigeonhole Principle, you will determine the point at which collisions become inevitable, a crucial consideration for system capacity planning. This exercise sharpens your ability to first precisely define and count the \"pigeonholes\" using other combinatorial rules—in this case, the Principle of Inclusion-Exclusion—before applying the main principle [@problem_id:1409197].", "problem": "A cloud storage provider uses a simple two-character hashing algorithm to initially sort incoming user files. Each file is assigned a hash code consisting of one uppercase English letter (from A to Z) followed by a single digit (from 0 to 9). However, certain hash codes are reserved for internal system processes and cannot be used for user files. The reserved codes are:\n1. Any code where the first character is 'X', 'Y', or 'Z'.\n2. Any code where the second character is '0'.\n\nThe provider wants to determine the capacity limits of this initial sorting system. What is the minimum number of user files that must be received to guarantee that at least three distinct files are assigned to the same hash code? Your answer must be an integer.", "solution": "This problem can be solved using the Generalized Pigeonhole Principle. Let the user files be the \"pigeons\" and the available, non-reserved hash codes be the \"pigeonholes\". We need to find the minimum number of pigeons required to ensure that at least one pigeonhole contains three pigeons.\n\nFirst, we must determine the number of available pigeonholes, which we will denote as $k$.\n\nThe total number of possible hash codes is the product of the number of choices for the first character and the number of choices for the second character. There are 26 uppercase English letters and 10 digits (0-9).\nTotal possible codes = $26 \\times 10 = 260$.\n\nNext, we must calculate the number of reserved hash codes. There are two sets of reserved codes, and they may overlap. We use the Principle of Inclusion-Exclusion to find the total number of unique reserved codes.\nLet $S_1$ be the set of codes where the first character is 'X', 'Y', or 'Z'.\nLet $S_2$ be the set of codes where the second character is '0'.\nThe total number of reserved codes is $|S_1 \\cup S_2| = |S_1| + |S_2| - |S_1 \\cap S_2|$.\n\nThe size of set $S_1$: There are 3 choices for the first letter ('X', 'Y', 'Z') and 10 choices for the digit.\n$|S_1| = 3 \\times 10 = 30$.\n\nThe size of set $S_2$: There are 26 choices for the first letter and 1 choice for the digit ('0').\n$|S_2| = 26 \\times 1 = 26$.\n\nThe size of the intersection, $S_1 \\cap S_2$, consists of codes that satisfy both conditions: the first character is one of {'X', 'Y', 'Z'} AND the second character is '0'. These codes are 'X0', 'Y0', and 'Z0'.\n$|S_1 \\cap S_2| = 3$.\n\nUsing the Principle of Inclusion-Exclusion, the total number of reserved codes is:\n$|S_1 \\cup S_2| = 30 + 26 - 3 = 53$.\n\nNow, we can find the number of available hash codes (pigeonholes), $k$:\n$k = (\\text{Total possible codes}) - (\\text{Total reserved codes}) = 260 - 53 = 207$.\n\nWe want to find the minimum number of files (pigeons), $N$, required to guarantee that at least one hash code (pigeonhole) is assigned to $m=3$ files. The Generalized Pigeonhole Principle states that if $N$ items are placed into $k$ containers, then at least one container must hold at least $\\lceil \\frac{N}{k} \\rceil$ items.\n\nWe want to find the smallest integer $N$ such that $\\lceil \\frac{N}{k} \\rceil \\geq 3$.\nThis inequality is satisfied if $\\frac{N}{k} > 2$.\nSo, $N > 2k$.\nSince $N$ must be an integer, the smallest integer $N$ satisfying this is $N = 2k + 1$.\n\nAlternatively, consider the worst-case scenario. To avoid having three files with the same hash code, we would distribute the files as evenly as possible among the $k=207$ available hash codes. The maximum number of files we can have without guaranteeing three in the same slot is if every single one of the 207 slots has exactly two files.\nNumber of files in this worst-case scenario = $2 \\times k = 2 \\times 207 = 414$.\n\nIf we add just one more file, it must be assigned to one of the 207 hash codes. Since each of them already contains two files, the addition of this next file will cause one hash code to have $2+1=3$ files.\nTherefore, the minimum number of files to guarantee this is:\n$N = 414 + 1 = 415$.\n\nUsing the formula derived from the principle, $N = (m-1)k + 1$, where $k=207$ and $m=3$:\n$N = (3-1) \\times 207 + 1 = 2 \\times 207 + 1 = 414 + 1 = 415$.", "answer": "$$\\boxed{415}$$", "id": "1409197"}, {"introduction": "Beyond simple counting, the Pigeonhole Principle provides a powerful framework for proving abstract properties about structures. In this problem, we model a social network using graph theory, where students are vertices and mutual contacts are edges. You are asked to prove a guaranteed property about the \"contact counts\" (vertex degrees) within the group. The key insight lies not in counting pigeons, but in demonstrating that the number of possible pigeonholes (contact counts) is unexpectedly limited, forcing at least two students into the same hole. This classic problem [@problem_id:1409216] showcases the elegance of the principle in logical deduction and its application in fields like network analysis.", "problem": "A group of 25 computer science students is attending a professional networking workshop. During the event, students can exchange contact information with one another. The exchange of information is always mutual; if student A gets student B's contact information, then student B also gets student A's. No student exchanges contact information with themselves. Let the \"contact count\" for a student be the total number of other students in the workshop they have exchanged information with.\n\nAfter the event, an analyst examines the resulting network of contacts. Which of the following statements about the contact counts of the students is guaranteed to be true, regardless of how the students exchanged information?\n\nA. At least two students in the workshop must have the exact same contact count.\n\nB. There must be at least one student with a contact count of 0 and another student with a contact count of 24.\n\nC. There must be at least one student with a contact count of exactly 12.\n\nD. The total sum of the contact counts of all 25 students must be an odd number.\n\nE. It is possible for all 25 students to have a different contact count.", "solution": "Model the situation as a simple undirected graph on $n=25$ vertices, where each vertex represents a student and each edge represents a mutual contact exchange. The degree of a vertex is the student’s contact count.\n\nFirst, note that for any simple graph on $n$ vertices, each degree $d$ satisfies $0 \\leq d \\leq n-1$. Hence here each degree is in $\\{0,1,\\dots,24\\}$.\n\nAlso, the Handshake Lemma states that the sum of all degrees equals twice the number of edges. If $m$ is the number of edges, then\n$$\n\\sum_{i=1}^{25} d_{i} = 2m,\n$$\nwhich is always an even integer.\n\nWe analyze each statement:\n\nA. At least two students must have the exact same contact count. Proof: Degrees lie in $\\{0,1,\\dots,24\\}$, but a graph cannot simultaneously have a vertex of degree $0$ and a vertex of degree $24$. Indeed, if some vertex has degree $24$, then it is adjacent to every other vertex, so no vertex can have degree $0$. Conversely, if a vertex has degree $0$, then no vertex can have degree $24$. Therefore, at most $24$ distinct degree values can occur among $25$ students. By the pigeonhole principle, at least two students share a contact count. Hence A is guaranteed true.\n\nB. There must be at least one student with a contact count of $0$ and another student with a contact count of $24$. As shown above, these two degrees cannot occur simultaneously. Therefore B is false.\n\nC. There must be at least one student with a contact count of exactly $12$. This is not guaranteed. A counterexample is the empty graph with $m=0$, for which all degrees are $0$, so no student has degree $12$. Therefore C is false.\n\nD. The total sum of the contact counts of all $25$ students must be an odd number. By the Handshake Lemma, the sum is $2m$, which is even. Therefore D is false.\n\nE. It is possible for all $25$ students to have a different contact count. This would require realizing all $25$ values in $\\{0,1,\\dots,24\\}$, but as shown, $0$ and $24$ cannot occur together. Hence at most $24$ distinct degrees can appear, making $25$ distinct contact counts impossible. Therefore E is false.\n\nConsequently, the only statement guaranteed to be true is A.", "answer": "$$\\boxed{A}$$", "id": "1409216"}, {"introduction": "The true power of the Pigeonhole Principle often lies in creatively defining the \"pigeons\" and \"pigeonholes\" to fit a problem. This final practice moves into a geometric context, asking for the minimum number of sensors needed to guarantee a pair is within a certain proximity. Unlike previous problems with discrete categories, here you must cleverly partition a continuous space—a square field—into a finite number of regions (the pigeonholes) such that any two points within the same region satisfy the distance condition. This exercise [@problem_id:1409218] will challenge you to think spatially and construct your own framework to make an otherwise complex geometric problem solvable with a simple, elegant principle.", "problem": "A technology firm, \"Agri-Grid,\" is deploying a network of autonomous environmental sensors over a large agricultural area. The sensors are scattered from a high-altitude drone and can land at any point within a designated square region. The field is a perfect square with a side length of $L = 250$ meters.\n\nFor the network to perform a specific diagnostic self-check, it is required that at least one pair of sensors is located at a distance of no more than $d = 20$ meters from each other. The company wants to determine the minimum number of sensors they must deploy to *guarantee* that this condition is met, regardless of where the sensors land within the square field.\n\nAssuming the sensors are points, what is the minimum integer number of sensors that must be deployed?", "solution": "We want the smallest integer $N$ such that, no matter how $N$ sensors (points) are placed inside a square of side $L=250$, at least one pair is at distance at most $d=20$.\n\nPrinciple used: Pigeonhole principle. If the square is partitioned into $M$ disjoint regions, and $N > M$ points are placed anywhere in the square, then at least one region contains at least two points. If each region has diameter at most $d$, then any two points in the same region are at distance at most $d$.\n\nConstruction of a suitable partition: Partition the $250 \\times 250$ square into smaller congruent squares of side\n$$\na=\\frac{d}{\\sqrt{2}}.\n$$\nThe diameter (maximum distance between two points) of a square of side $a$ is its diagonal, which equals $a\\sqrt{2}=\\frac{d}{\\sqrt{2}}\\sqrt{2}=d$. Hence, any two points lying in the same small square are at distance at most $d$.\n\nCounting the number of small squares per side: The number of small squares along one side is\n$$\nm=\\left\\lceil \\frac{L}{a} \\right\\rceil = \\left\\lceil \\frac{L}{d/\\sqrt{2}} \\right\\rceil = \\left\\lceil \\frac{L\\sqrt{2}}{d} \\right\\rceil.\n$$\nTherefore, the total number of small squares is\n$$\nM=m^{2}=\\left\\lceil \\frac{L\\sqrt{2}}{d} \\right\\rceil^{2}.\n$$\nBy the pigeonhole principle, with $N=M+1$ sensors, at least two sensors must lie in the same small square, hence be within distance at most $d$.\n\nSubstitute $L=250$ and $d=20$:\n$$\nm=\\left\\lceil \\frac{250\\sqrt{2}}{20} \\right\\rceil=\\left\\lceil 12.5\\sqrt{2} \\right\\rceil=18,\n$$\nso\n$$\nM=18^{2}=324,\n$$\nand thus the required number of sensors is\n$$\nN=M+1=325.\n$$", "answer": "$$\\boxed{325}$$", "id": "1409218"}]}