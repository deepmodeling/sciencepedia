{"hands_on_practices": [{"introduction": "The product rule is a cornerstone of combinatorics, offering a powerful method for counting outcomes in multi-stage processes. This first practice problem presents a realistic scenario in system design: creating unique identifiers. By breaking down the identifier into independent segments and analyzing the choices available for each, you'll apply the product rule in its most direct form to calculate the total number of possible combinations [@problem_id:1410460]. This exercise reinforces the fundamental principle that if a task can be broken into a sequence of independent sub-tasks, the total number of ways to complete the task is the product of the number of ways to complete each sub-task.", "problem": "A technology company is designing a new system for generating unique identifiers for its hardware components. Each identifier is a string composed of three distinct segments, formatted as `[SEGMENT_A]-[SEGMENT_B]-[SEGMENT_C]`. The rules for constructing each segment are as follows:\n\n*   **SEGMENT A** consists of a sequence of three uppercase English letters (from 'A' to 'Z'). The first letter in this sequence is not allowed to be 'I', 'O', or 'Q' to avoid visual ambiguity with digits. The second letter must be one of the five vowels: 'A', 'E', 'I', 'O', 'U'. The third letter can be any uppercase English letter without restriction.\n\n*   **SEGMENT B** consists of a sequence of four digits (from '0' to '9'). When interpreted as an integer, this four-digit sequence must represent a number that is strictly greater than 1000 and is divisible by 5.\n\n*   **SEGMENT C** consists of a single special character chosen from the set {`!`, `@`, `#`, `$`, `&`, `*`}.\n\nAssuming that the choice for each segment is independent of the others, how many distinct identifiers can be generated by this system?", "solution": "We count the number of possibilities for each segment independently and then multiply, by the Product Rule.\n\nFor SEGMENT A:\n- The first letter is an uppercase English letter excluding I, O, Q, so there are $26 - 3 = 23$ choices.\n- The second letter must be a vowel from $\\{A, E, I, O, U\\}$, so there are $5$ choices.\n- The third letter can be any uppercase English letter, so there are $26$ choices.\nThus, the number of possibilities for SEGMENT A is\n$$\n23 \\times 5 \\times 26 = 2990.\n$$\n\nFor SEGMENT B:\n- It is a four-digit sequence representing an integer strictly greater than $1000$ and divisible by $5$.\n- The integers satisfying this are the multiples of $5$ in the interval $[1001, 9999]$.\n- The count is\n$$\n\\left\\lfloor \\frac{9999}{5} \\right\\rfloor - \\left\\lfloor \\frac{1000}{5} \\right\\rfloor = 1999 - 200 = 1799.\n$$\nTherefore, there are $1799$ valid choices for SEGMENT B.\n\nFor SEGMENT C:\n- It is one character from the set {!, @, #, $, &, *}, which has $6$ elements.\nThus, there are $6$ choices for SEGMENT C.\n\nBy independence, the total number of identifiers is\n$$\n(23 \\times 5 \\times 26) \\times 1799 \\times 6 = 2990 \\times 1799 \\times 6 = 32,274,060.\n$$", "answer": "$$\\boxed{32274060}$$", "id": "1410460"}, {"introduction": "While the product rule is powerful, some counting problems contain constraints that make direct application difficult. A common example is the \"at least one\" requirement. This practice problem on creating valid identifiers introduces this type of constraint [@problem_id:1410423]. Instead of trying to count all the cases that satisfy the condition directly, we will employ a more elegant and efficient strategy: the principle of inclusion-exclusion, often called counting the complement. You will learn to calculate the total number of possibilities without the constraint and then subtract the number of \"forbidden\" possibilities, a versatile technique in any combinatorialist's toolkit.", "problem": "In the development of a new deep-space communication protocol, the Inter-Stellar Packet Routing Nomenclature (ISPRN), data packets are assigned unique identifiers to manage transmission routes. Each ISPRN identifier is a string of exactly four characters. The character set available for constructing these identifiers consists of the 26 lowercase English letters (`a` through `z`) and the 10 decimal digits (`0` through `9`).\n\nFor an identifier to be considered valid, it must satisfy two specific conditions:\n1. The first character of the identifier must be a letter.\n2. The identifier must contain at least one digit.\n\nGiven these rules, determine the total number of distinct valid ISPRN identifiers that can be created.", "solution": "Let the identifier have positions $1,2,3,4$. There are $26$ letters and $10$ digits, so $36$ allowable characters in total.\n\nCondition 1 requires position $1$ to be a letter. This gives $26$ choices for position $1$.\n\nWithout condition 2, positions $2,3,4$ can each be any of the $36$ characters, giving $36^{3}$ possibilities for these positions. Thus, the total number of strings with the first character a letter is $26 \\cdot 36^{3}$.\n\nCondition 2 requires the identifier to contain at least one digit. Since position $1$ is forced to be a letter, the digit must appear in positions $2,3,$ or $4$. We use the complement principle on positions $2,3,4$:\n- The number of ways for positions $2,3,4$ to have no digits (i.e., all letters) is $26^{3}$.\n- Therefore, the number of ways for positions $2,3,4$ to have at least one digit is $36^{3} - 26^{3}$.\n\nMultiplying by the $26$ choices for position $1$, the total number of valid identifiers is\n$$\n26 \\left(36^{3} - 26^{3}\\right) = 26 \\cdot 36^{3} - 26^{4}.\n$$\nEvaluating,\n$$\n36^{3} = 46656,\\quad 26 \\cdot 46656 = 1213056,\\quad 26^{4} = 456976,\n$$\nso\n$$\n26 \\cdot 36^{3} - 26^{4} = 1213056 - 456976 = 756080.\n$$", "answer": "$$\\boxed{756080}$$", "id": "1410423"}, {"introduction": "Real-world counting problems often involve complex, overlapping constraints where the choices for one stage depend on the choices made in another. In such scenarios, a single, straightforward application of the product rule is not enough. This advanced scheduling problem illustrates how to navigate these dependencies by systematically breaking the problem into smaller, mutually exclusive cases [@problem_id:1410442]. By carefully analyzing the constraints and partitioning the problem space, you can apply the product rule within each case and then sum the results. This method of casework is a critical problem-solving skill for tackling sophisticated combinatorial challenges.", "problem": "A university department is scheduling final exams for five distinct advanced courses: Analysis (A), Mechanics (M), Electrodynamics (E), Thermodynamics (T), and Quantum Physics (Q). The exams are to be held on five consecutive days, from Day 1 to Day 5, with exactly one exam per day. The scheduling must satisfy the following conditions:\n1. The Analysis (A) exam must be scheduled on either Day 1 or Day 2.\n2. The Mechanics (M) exam cannot be scheduled on Day 5.\n3. The Electrodynamics (E) and Thermodynamics (T) exams must be scheduled on consecutive days.\n\nHow many distinct valid schedules are possible?", "solution": "Label the days as positions $1,2,3,4,5$ and the exams as $A,M,E,T,Q$, with exactly one exam per day. The conditions are: $A$ must be on day $1$ or day $2$; $M$ cannot be on day $5$; and $E$ and $T$ must occupy consecutive days in either order.\n\nTreat $E$ and $T$ as a consecutive block occupying one of the adjacent day pairs $(1,2)$, $(2,3)$, $(3,4)$, or $(4,5)$, with internal order either $ET$ or $TE$ (giving a factor of $2$ for each block placement). Because $A$ must be on day $1$ or day $2$, the block cannot be at $(1,2)$ (that would preclude placing $A$ on day $1$ or day $2$). Thus only $(2,3)$, $(3,4)$, and $(4,5)$ are possible.\n\nCase $(2,3)$: The remaining days are $\\{1,4,5\\}$. Since day $2$ is unavailable, $A$ must be on day $1$ (one way). The remaining two days are $4$ and $5$ for $M$ and $Q$, with $M$ not allowed on day $5$, so the only valid assignment is $M$ on day $4$ and $Q$ on day $5$ (one way). The $E,T$ internal order gives a factor $2$. Thus this case contributes $2 \\times 1 \\times 1 = 2$ schedules.\n\nCase $(3,4)$: The remaining days are $\\{1,2,5\\}$. Here $A$ can be on day $1$ or day $2$ (two ways). The two remaining days are then the other of $\\{1,2\\}$ and day $5$. Since $M$ cannot be on day $5$, $M$ must be on the other of $\\{1,2\\}$ and $Q$ on day $5$ (one way for each $A$ choice). With the $2$ internal orders for $E,T$, this case contributes $2 \\times 2 \\times 1 = 4$ schedules.\n\nCase $(4,5)$: The remaining days are $\\{1,2,3\\}$. Here $A$ can be on day $1$ or day $2$ (two ways). The remaining two days are then the other of $\\{1,2\\}$ and day $3$, and since day $5$ is not involved for $M$, the restriction on $M$ is automatically satisfied; thus $M$ and $Q$ can be assigned in $2$ ways. Including the $2$ internal orders for $E,T$, this case contributes $2 \\times 2 \\times 2 = 8$ schedules.\n\nSumming all cases gives\n$$\nN = 2 + 4 + 8 = 14.\n$$\nTherefore, the number of valid schedules is $14$.", "answer": "$$\\boxed{14}$$", "id": "1410442"}]}