{"hands_on_practices": [{"introduction": "Understanding the difference between weak and strong connectivity is the first step toward mastering network analysis. This exercise provides a concrete, small-scale network, challenging you to apply the formal definitions of these two concepts. By analyzing a simple three-node graph [@problem_id:1402294], you will strengthen your ability to distinguish between a graph that is merely held together and one that allows for complete, bidirectional communication between all its nodes.", "problem": "A specialized, small-scale communication network consists of three server nodes: Alpha, Beta, and Gamma. For security reasons, all data links in this network are strictly one-way. The network topology is defined by the following two connections: there is a directed link from server Gamma to server Beta, and another directed link from server Beta to server Alpha. No other data links exist.\n\nFor analyzing such networks, two levels of connectivity are defined:\n- A directed network is considered **weakly connected** if, by treating all its one-way links as two-way, there would be a path of connections between any two servers.\n- A directed network is considered **strongly connected** if there is a directed path of one-way links from every server to every other server.\n\nBased on the configuration of this network, which one of the following statements is true?\n\nA. The network is strongly connected.\n\nB. The network is not weakly connected.\n\nC. A data packet can be sent from Alpha to Gamma.\n\nD. It is possible for a data packet to travel from Gamma to Alpha.\n\nE. Every server can send a data packet to at least one other server.", "solution": "Let the directed network be represented as a directed graph $G=(V,E)$ with $V=\\{\\mathrm{Alpha},\\mathrm{Beta},\\mathrm{Gamma}\\}$ and $E=\\{(\\mathrm{Gamma},\\mathrm{Beta}),(\\mathrm{Beta},\\mathrm{Alpha})\\}$. This forms a directed path $\\mathrm{Gamma}\\to\\mathrm{Beta}\\to\\mathrm{Alpha}$.\n\nTo test weak connectivity, replace each directed edge by an undirected edge. The resulting undirected edges are $\\{\\mathrm{Gamma},\\mathrm{Beta}\\}$ and $\\{\\mathrm{Beta},\\mathrm{Alpha}\\}$, which connect all three vertices in a single chain. Therefore the underlying undirected graph is connected, so the directed graph is weakly connected. Hence the statement “not weakly connected” is false.\n\nTo test strong connectivity, we require that for all ordered pairs $(u,v)\\in V\\times V$ there is a directed path from $u$ to $v$. Vertex $\\mathrm{Alpha}$ has outdegree $0$, so there is no directed path from $\\mathrm{Alpha}$ to either $\\mathrm{Beta}$ or $\\mathrm{Gamma}$. Therefore the graph is not strongly connected, making that statement false.\n\nFor the reachability statements: there is no directed path from $\\mathrm{Alpha}$ to $\\mathrm{Gamma}$, so that statement is false. There is a directed path from $\\mathrm{Gamma}$ to $\\mathrm{Alpha}$ given by $(\\mathrm{Gamma},\\mathrm{Beta}),(\\mathrm{Beta},\\mathrm{Alpha})$, so that statement is true. Finally, not every vertex can send a packet to at least one other, because $\\mathrm{Alpha}$ has outdegree $0$, so that statement is false.\n\nTherefore, the only true statement is that a data packet can travel from $\\mathrm{Gamma}$ to $\\mathrm{Alpha}$.", "answer": "$$\\boxed{D}$$", "id": "1402294"}, {"introduction": "Once we can diagnose connectivity, the next step is to engineer it. This practice moves from analysis to design, asking a fundamental question about system integration. By considering two separate, strongly connected networks [@problem_id:1402298], you will discover the absolute minimum requirement to merge them into a single, fully resilient system, illustrating a core principle of creating robust communication loops between components.", "problem": "Two separate, secure server networks, Network A and Network B, are being merged. Each network can be modeled as a directed graph (digraph) where servers are vertices and one-way data links are directed edges. The set of servers in Network A is $V_A$ and the set in Network B is $V_B$; these two sets are disjoint. Within each individual network, it is possible to send data from any server to any other server by following a sequence of links. In graph theory terms, this means the digraph for Network A, $G_A = (V_A, E_A)$, and the digraph for Network B, $G_B = (V_B, E_B)$, are both strongly connected. Assume that $|V_A| \\ge 1$ and $|V_B| \\ge 1$.\n\nA network engineer needs to add new one-way data links (directed edges) between the two networks to form a single, unified network, $G_{total}$, that is also strongly connected. What is the absolute minimum number of new links that must be added to guarantee that the combined network is strongly connected, regardless of the size or internal structure of the original networks?\n\nA) 1\n\nB) 2\n\nC) 4\n\nD) It is impossible to guarantee with a fixed number; the number depends on $|V_A|$ and $|V_B|$.\n\nE) It is impossible to guarantee with a fixed number; the number depends on the specific edge structure of $G_A$ and $G_B$.", "solution": "Let $G_A=(V_A,E_A)$ and $G_B=(V_B,E_B)$ be strongly connected digraphs with $V_A \\cap V_B=\\varnothing$, and let $G_{total}$ be obtained by adding $k$ directed edges whose endpoints lie in different sets.\n\nNecessity of at least two inter-network edges: Suppose $k=1$. Without loss of generality, let the single added edge be $(u,v)$ with $u \\in V_A$ and $v \\in V_B$. Then there is no directed edge from $V_B$ to $V_A$. Any directed path from a vertex in $V_B$ to a vertex in $V_A$ would need to cross from $V_B$ to $V_A$ at least once, which is impossible because no edge of that orientation exists. Hence $G_{total}$ cannot be strongly connected. The same conclusion holds if the single edge is oriented from $V_B$ to $V_A$. Therefore, $k \\ge 2$ is necessary.\n\nSufficiency of two inter-network edges: Choose arbitrary vertices $a_0,a_1 \\in V_A$ and $b_0,b_1 \\in V_B$. Add the two edges $(a_0,b_0)$ and $(b_1,a_1)$. To see that $G_{total}$ is strongly connected, consider arbitrary vertices $x,y$:\n- If $x,y \\in V_A$ or $x,y \\in V_B$, the original strong connectivity of $G_A$ or $G_B$ provides a directed path between them.\n- If $x \\in V_A$ and $y \\in V_B$, since $G_A$ is strongly connected there is a directed path $x \\to a_0$, then the added edge $(a_0,b_0)$, followed by a directed path $b_0 \\to y$ in $G_B$.\n- If $x \\in V_B$ and $y \\in V_A$, since $G_B$ is strongly connected there is a directed path $x \\to b_1$, then the added edge $(b_1,a_1)$, followed by a directed path $a_1 \\to y$ in $G_A$.\n\nThus two edges, one in each direction between the vertex sets, guarantee that $G_{total}$ is strongly connected. Combining necessity and sufficiency, the absolute minimum number is $2$, independent of $|V_A|$, $|V_B|$, and the internal edge structures of $G_A$ and $G_B$.", "answer": "$$\\boxed{B}$$", "id": "1402298"}, {"introduction": "This final practice bridges theory and application by presenting a realistic engineering challenge: transforming a non-resilient network into a strongly connected one. Starting with a Directed Acyclic Graph (DAG), a common structure in system design, you are tasked with finding the most efficient way to add connections to achieve full connectivity [@problem_id:1402286]. This exercise demonstrates the power of the condensation graph and the associated theorem where the minimum number of edges needed is $\\max(p, q)$, with $p$ being the number of source components and $q$ the number of sink components, providing a practical algorithm for network optimization.", "problem": "In modern cloud computing architectures, systems are often designed as a collection of independent microservices that communicate with each other. The dependency between these services can be modeled as a directed graph where an edge from service `A` to service `B` indicates that `A` can send requests to `B`. For reasons of stability and to prevent infinite loops in request chains, the initial dependency graph for a new system is configured as a Directed Acyclic Graph (DAG).\n\nThe system consists of ten microservices, represented by the set of vertices $V = \\{v_1, v_2, v_3, v_4, v_5, v_6, v_7, v_8, v_9, v_{10}\\}$. The initial set of communication channels is represented by the set of directed edges $E = \\{(v_1, v_4), (v_2, v_4), (v_3, v_5), (v_4, v_6), (v_5, v_6), (v_6, v_7), (v_8, v_9)\\}$.\n\nA new operational requirement mandates that the entire system must be made \"fully resilient,\" which mathematically means the dependency graph must become strongly connected. A directed graph is strongly connected if for every ordered pair of vertices $(u, v)$, there is a path of directed edges from $u$ to $v$. To meet this requirement, system architects must add new communication channels (directed edges) to the graph.\n\nWhat is the minimum number of new edges that must be added to the graph $G = (V, E)$ to make it strongly connected?", "solution": "We model the microservice communication structure as the directed graph $G=(V,E)$ with $V=\\{v_{1},v_{2},\\ldots,v_{10}\\}$ and $E=\\{(v_{1},v_{4}),(v_{2},v_{4}),(v_{3},v_{5}),(v_{4},v_{6}),(v_{5},v_{6}),(v_{6},v_{7}),(v_{8},v_{9})\\}$. The given $G$ is a directed acyclic graph, so every vertex is its own strongly connected component (SCC). The condensation graph is therefore $G$ itself on $10$ SCCs.\n\nFor each vertex, compute indegree and outdegree in the condensation DAG:\n- $v_{1}$: indegree $0$, outdegree $1$ (edge to $v_{4}$).\n- $v_{2}$: indegree $0$, outdegree $1$ (edge to $v_{4}$).\n- $v_{3}$: indegree $0$, outdegree $1$ (edge to $v_{5}$).\n- $v_{4}$: indegree $2$ (from $v_{1},v_{2}$), outdegree $1$ (to $v_{6}$).\n- $v_{5}$: indegree $1$ (from $v_{3}$), outdegree $1$ (to $v_{6}$).\n- $v_{6}$: indegree $2$ (from $v_{4},v_{5}$), outdegree $1$ (to $v_{7}$).\n- $v_{7}$: indegree $1$ (from $v_{6}$), outdegree $0$.\n- $v_{8}$: indegree $0$, outdegree $1$ (to $v_{9}$).\n- $v_{9}$: indegree $1$ (from $v_{8}$), outdegree $0$.\n- $v_{10}$: indegree $0$, outdegree $0$.\n\nHence the number of SCCs with indegree $0$ (sources) is\n$$p=|\\{v_{1},v_{2},v_{3},v_{8},v_{10}\\}|=5,$$\nand the number of SCCs with outdegree $0$ (sinks) is\n$$q=|\\{v_{7},v_{9},v_{10}\\}|=3.$$\n\nA standard result for directed graphs states: if the condensation DAG has more than one SCC, then the minimum number $r$ of new edges required to make the graph strongly connected is\n$$r=\\max(p,q).$$\nJustification: at least $p$ edges are needed so that every source SCC gains an incoming edge, and at least $q$ edges are needed so that every sink SCC gains an outgoing edge, so $r \\geq \\max(p,q)$. Conversely, one can always add $\\max(p,q)$ edges to connect the SCCs into a single directed cycle by appropriately linking sinks to sources (reusing some sinks or sources if necessary), so $r \\leq \\max(p,q)$.\n\nApplying this to the current graph with $p=5$ and $q=3$ gives\n$$r=\\max(5,3)=5.$$\n\nTherefore, the minimum number of new edges required is $5$.", "answer": "$$\\boxed{5}$$", "id": "1402286"}]}