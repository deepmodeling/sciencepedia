{"hands_on_practices": [{"introduction": "This first exercise provides a foundational workout in applying shortest-path algorithms. You will calculate the minimum travel time from a single source server to all other servers in a small network, a common task in network routing and logistics [@problem_id:1400399]. Mastering this direct application of an algorithm like Dijkstra's is the first step toward solving more complex optimization problems.", "problem": "A systems administrator is analyzing the latency in a small, experimental server network. The network consists of six servers, labeled A, B, C, D, E, and F. The connections between these servers are directional, and the time it takes for a data packet to travel from one server to another (the latency) has been measured. Below is a list of all existing direct connections and their associated latencies.\n\n- From A to B: 10 ms\n- From A to C: 3 ms\n- From B to C: 4 ms\n- From B to D: 2 ms\n- From C to B: 1 ms\n- From C to D: 8 ms\n- From C to E: 2 ms\n- From D to E: 5 ms\n- From D to F: 1 ms\n- From E to F: 3 ms\n\nThe administrator needs to determine the optimal routing paths originating from the main gateway server, A. To do this, they must first find the shortest possible travel time (minimum total latency) for a packet starting at server A to reach every other server in the network.\n\nCalculate the sum of the minimum latencies from server A to each of the other five servers (B, C, D, E, and F). Express your final answer as an integer.", "solution": "We model the network as a directed weighted graph with source at server A. All edge latencies are positive, so Dijkstra’s algorithm yields the shortest-path distances. Let the tentative distance from A to a node X be denoted by $d(X)$. Initialize $d(A)=0$ and $d(X)=+\\infty$ for all other nodes. Iteratively select the unsettled node with minimal $d(\\cdot)$ and relax its outgoing edges using\n$$\nd(v) \\leftarrow \\min\\big(d(v),\\, d(u)+w(u,v)\\big),\n$$\nwhere $w(u,v)$ is the latency on edge $u \\to v$.\n\nInitialization and first relaxations from A:\n- $d(A)=0$.\n- Relax $A \\to B$ and $A \\to C$: $d(B)=\\min(+\\infty, 0+10)=10$, $d(C)=\\min(+\\infty, 0+3)=3$.\n\nSettle the smallest tentative:\n- Settle $C$ since $d(C)=3$ is minimal among unsettled nodes.\n\nRelax edges out of $C$:\n- $C \\to B$: $d(B)=\\min(10, 3+1)=4$.\n- $C \\to D$: $d(D)=\\min(+\\infty, 3+8)=11$.\n- $C \\to E$: $d(E)=\\min(+\\infty, 3+2)=5$.\n\nSettle the next smallest:\n- Settle $B$ since $d(B)=4$.\n\nRelax edges out of $B$:\n- $B \\to C$: $d(C)=\\min(3, 4+4)=3$ (no change).\n- $B \\to D$: $d(D)=\\min(11, 4+2)=6$.\n\nSettle the next smallest:\n- Settle $E$ since $d(E)=5$.\n\nRelax edges out of $E$:\n- $E \\to F$: $d(F)=\\min(+\\infty, 5+3)=8$.\n\nSettle the next smallest:\n- Settle $D$ since $d(D)=6$.\n\nRelax edges out of $D$:\n- $D \\to E$: $d(E)=\\min(5, 6+5)=5$ (no change).\n- $D \\to F$: $d(F)=\\min(8, 6+1)=7$.\n\nSettle the last:\n- Settle $F$ since $d(F)=7$.\n\nThus the shortest-path latencies from A are\n$$\nd(B)=4,\\quad d(C)=3,\\quad d(D)=6,\\quad d(E)=5,\\quad d(F)=7.\n$$\nThe required sum is\n$$\nd(B)+d(C)+d(D)+d(E)+d(F)=4+3+6+5+7=25.\n$$", "answer": "$$\\boxed{25}$$", "id": "1400399"}, {"introduction": "Real-world networks are seldom static; routes can be blocked or locations can become inaccessible. This practice problem simulates such a scenario, asking you to find the optimal path while a key location is out of service [@problem_id:1400390]. This exercise teaches the critical skill of adapting the graph model to reflect real-world constraints, a vital step in creating resilient and practical routing solutions.", "problem": "A university campus is installing a network of autonomous delivery robots. The network can be modeled as a weighted, undirected graph where the nodes are key locations and the edge weights represent the travel time in minutes between locations. The campus map has been simplified to the following locations and direct paths:\n\n- **Locations (Nodes):**\n  - A: Main Laboratory\n  - B: Engineering Hall\n  - C: Central Cafeteria\n  - D: Data Center\n  - E: Student Dormitory\n  - F: Campus Library\n\n- **Paths and Travel Times (Edges):**\n  - Main Laboratory (A) to Engineering Hall (B): 10 minutes\n  - Main Laboratory (A) to Central Cafeteria (C): 3 minutes\n  - Engineering Hall (B) to Data Center (D): 2 minutes\n  - Engineering Hall (B) to Student Dormitory (E): 20 minutes\n  - Central Cafeteria (C) to Data Center (D): 4 minutes\n  - Central Cafeteria (C) to Student Dormitory (E): 5 minutes\n  - Data Center (D) to Campus Library (F): 8 minutes\n  - Student Dormitory (E) to Campus Library (F): 6 minutes\n\nA robot needs to travel from the Main Laboratory (A) to the Campus Library (F). However, on the day of the delivery, the Central Cafeteria (C) and all paths leading directly to or from it are closed for maintenance. What is the minimum possible travel time for the robot to complete its delivery under this constraint?\n\nProvide your answer as a single number representing the total travel time. Express the final answer in minutes.", "solution": "We model the campus as a weighted, undirected graph. The closure of the Central Cafeteria node $C$ removes node $C$ and all incident edges $(A,C)$, $(C,D)$, and $(C,E)$. The remaining edges are:\n- $(A,B)$ with weight $10$,\n- $(B,D)$ with weight $2$,\n- $(B,E)$ with weight $20$,\n- $(D,F)$ with weight $8$,\n- $(E,F)$ with weight $6$.\n\nWe seek the minimum travel time from $A$ to $F$ in this reduced graph. This is a shortest path problem. Using Dijkstra’s principle of iterative relaxation:\n\nInitialize distances with $d(A)=0$ and $d(X)=\\infty$ for $X\\in\\{B,D,E,F\\}$. From $A$,\n$$\nd(B)=\\min\\{d(B),\\,d(A)+10\\}=\\min\\{\\infty,\\,0+10\\}=10.\n$$\nSelect the unvisited node with smallest tentative distance, $B$ with $d(B)=10$. Relax its neighbors:\n$$\nd(D)=\\min\\{d(D),\\,d(B)+2\\}=\\min\\{\\infty,\\,10+2\\}=12,\n$$\n$$\nd(E)=\\min\\{d(E),\\,d(B)+20\\}=\\min\\{\\infty,\\,10+20\\}=30.\n$$\nSelect next the node with smallest tentative distance, $D$ with $d(D)=12$. Relax to $F$:\n$$\nd(F)=\\min\\{d(F),\\,d(D)+8\\}=\\min\\{\\infty,\\,12+8\\}=20.\n$$\nAt this point, the best known path to $F$ has cost $20$. For completeness, consider proceeding via $E$:\nfrom $B$ to $E$ gave $d(E)=30$, and then\n$$\nd(F)\\leq d(E)+6=30+6=36,\n$$\nwhich is larger than $20$. Therefore, the shortest route is $A\\to B\\to D\\to F$ with total time\n$$\n10+2+8=20.\n$$\n\nThus, the minimum possible travel time under the constraint is $20$ minutes.", "answer": "$$\\boxed{20}$$", "id": "1400390"}, {"introduction": "Building on pathfinding, this advanced exercise challenges you to think like a network engineer assessing system resilience. Your task is to identify which single link failure would cause the most significant delay between a source and a destination [@problem_id:1400403]. This problem requires a systematic analysis, pushing you to use shortest-path calculations as a tool for deeper strategic insights into network vulnerability.", "problem": "A company is designing a fault-tolerant fiber optic network between two critical data centers, a Source server (S) and a Terminus server (T). The network consists of several routing nodes connected by bidirectional fiber links, where each link has a specific latency (time delay) measured in milliseconds (ms). The engineers need to analyze the network's vulnerability. Specifically, they want to determine the worst-case impact on latency if a single network link fails.\n\nThe network topology is defined by the following nodes and links. The nodes are: Source (S), Terminus (T), Arcadia (A), Brookside (B), Central (C), Downtown (D), Eastwood (E), Fairview (F), and Greenfield (G).\n\nThe bidirectional links and their corresponding latencies are:\n- (Source, Arcadia): 5 ms\n- (Arcadia, Brookside): 5 ms\n- (Brookside, Central): 5 ms\n- (Central, Terminus): 5 ms\n- (Arcadia, Downtown): 7 ms\n- (Downtown, Brookside): 7 ms\n- (Brookside, Eastwood): 6 ms\n- (Eastwood, Central): 6 ms\n- (Source, Fairview): 8 ms\n- (Fairview, Greenfield): 8 ms\n- (Greenfield, Terminus): 20 ms\n\nYour task is to identify the single link in the network whose removal would cause the maximum possible increase in the shortest path latency between the Source (S) and the Terminus (T). What is this maximum possible increase?\n\nExpress your final answer as a single integer, representing the maximum latency increase in ms.", "solution": "Let $G$ be the undirected weighted graph with vertices $S,T,A,B,C,D,E,F,G$ and the given edge latencies. Define $d(S,T)$ as the shortest $S$–$T$ path length.\n\nFirst, compute $d(S,T)$ in the intact network. The path $S \\to A \\to B \\to C \\to T$ has length\n$$5+5+5+5=20.$$\nAlternatives:\n- Using the detour around $A$–$B$: $S \\to A \\to D \\to B \\to C \\to T$ has length $5+7+7+5+5=29$.\n- Using the detour around $B$–$C$: $S \\to A \\to B \\to E \\to C \\to T$ has length $5+5+6+6+5=27$.\n- Using the southern path: $S \\to F \\to G \\to T$ has length $8+8+20=36$.\nThus $d(S,T)=20$ via $S \\to A \\to B \\to C \\to T$.\n\nNow consider the impact of removing each single edge $e$, and let $d_{-e}(S,T)$ be the new shortest path length; the increase is $\\Delta_{e}=d_{-e}(S,T)-20$.\n\n1) Remove $S$–$A$: The path $S \\to A \\to B \\to C \\to T$ is broken at the start. The only remaining route from $S$ to $T$ is $S \\to F \\to G \\to T$ of length $36$. Hence $d_{-SA}(S,T)=36$ and $\\Delta_{SA}=36-20=16$.\n\n2) Remove $A$–$B$: Replace $A$–$B$ with $A \\to D \\to B$ of cost $7+7=14$. A shortest $S$–$T$ path is\n$$S \\to A \\to D \\to B \\to C \\to T,$$\nwith length $5+7+7+5+5=29$. Comparing with $36$ via $S \\to F \\to G \\to T$, we have $d_{-AB}(S,T)=29$ and $\\Delta_{AB}=29-20=9$.\n\n3) Remove $B$–$C$: Replace $B$–$C$ with $B \\to E \\to C$ of cost $6+6=12$. A shortest $S$–$T$ path is\n$$S \\to A \\to B \\to E \\to C \\to T,$$\nwith length $5+5+6+6+5=27$. Since $27<36$, we have $d_{-BC}(S,T)=27$ and $\\Delta_{BC}=27-20=7$.\n\n4) Remove $C$–$T$: The direct link to $T$ from $C$ is gone. The only remaining access to $T$ is via $G$, yielding the path\n$$S \\to F \\to G \\to T,$$\nof length $36$. Any route that goes from $S$ into the $A$–$B$–$C$ subgraph and then returns to $S$ before going to $F \\to G \\to T$ would exceed $36$. Hence $d_{-CT}(S,T)=36$ and $\\Delta_{CT}=36-20=16$.\n\n5) Remove $A$–$D$: The original path $S \\to A \\to B \\to C \\to T$ of length $20$ remains available, so $d_{-AD}(S,T)=20$ and $\\Delta_{AD}=0$.\n\n6) Remove $D$–$B$: The original $20$-length path remains, so $d_{-DB}(S,T)=20$ and $\\Delta_{DB}=0$.\n\n7) Remove $B$–$E$: The original $20$-length path remains, so $d_{-BE}(S,T)=20$ and $\\Delta_{BE}=0$.\n\n8) Remove $E$–$C$: The original $20$-length path remains, so $d_{-EC}(S,T)=20$ and $\\Delta_{EC}=0$.\n\n9) Remove $S$–$F$: The original $20$-length path remains, so $d_{-SF}(S,T)=20$ and $\\Delta_{SF}=0$.\n\n10) Remove $F$–$G$: The original $20$-length path remains, so $d_{-FG}(S,T)=20$ and $\\Delta_{FG}=0$.\n\n11) Remove $G$–$T$: The original $20$-length path remains, so $d_{-GT}(S,T)=20$ and $\\Delta_{GT}=0$.\n\nThe maximum increase over all single-edge removals is\n$$\\max\\{16,9,7,16,0,0,0,0,0,0,0\\}=16.$$\nTherefore, the maximum possible increase in the shortest path latency between $S$ and $T$ due to the failure of a single link is $16$ ms.", "answer": "$$\\boxed{16}$$", "id": "1400403"}]}