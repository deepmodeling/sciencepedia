{"hands_on_practices": [{"introduction": "The most fundamental task when analyzing networks is identifying the connected components themselves. This exercise provides a practical scenario involving a network of outposts, where you will apply a graph traversal algorithm like Breadth-First Search or Depth-First Search to map out a specific sub-network. This practice reinforces the core algorithmic skill of tracing connectivity from a given adjacency list, which is a common representation of graphs in computer science [@problem_id:1359170].", "problem": "A remote research project maintains a network of 26 isolated outposts, labeled 'A' through 'Z'. Communication between outposts is only possible if a direct link exists. The complete network topology is described by the following adjacency list, where each outpost is listed with the other outposts it can directly communicate with. An analyst needs to determine the scope of a broadcast message sent from one of the outposts. The graph is undirected, so if outpost X is linked to Y, then Y is also linked to X.\n\nThe adjacency list is as follows:\n- A: E\n- B:\n- C: G\n- D:\n- E: A, I\n- F:\n- G: C, K\n- H:\n- I: E, O\n- J:\n- K: G, X\n- L:\n- M:\n- N:\n- O: I, U\n- P:\n- Q: X, W\n- R:\n- S: T\n- T: S, Z\n- U: O, Y\n- V:\n- W: Q\n- X: K, Q\n- Y: U\n- Z: T\n\nDetermine the total number of outposts that belong to the same communication sub-network as outpost 'C'. Note that an outpost is considered part of its own sub-network.", "solution": "The problem asks for the size of the connected component (communication sub-network) containing outpost C in an undirected graph defined by the given adjacency list. Two vertices are in the same component if there exists a path between them.\n\nUse a breadth-first search starting from C, maintaining a visited set. Initialize the visited set and frontier as\n$$\nS_{0}=\\{C\\},\\quad F_{0}=\\{C\\}.\n$$\n\nExpand from C. The neighbors of C are\n$$\nN(C)=\\{G\\}.\n$$\nUpdate the visited set and frontier:\n$$\nS_{1}=\\{C,G\\},\\quad F_{1}=\\{G\\}.\n$$\n\nExpand from G. The neighbors of G are\n$$\nN(G)=\\{C,K\\}.\n$$\nC is already visited; add K:\n$$\nS_{2}=\\{C,G,K\\},\\quad F_{2}=\\{K\\}.\n$$\n\nExpand from K. The neighbors of K are\n$$\nN(K)=\\{G,X\\}.\n$$\nG is already visited; add X:\n$$\nS_{3}=\\{C,G,K,X\\},\\quad F_{3}=\\{X\\}.\n$$\n\nExpand from X. The neighbors of X are\n$$\nN(X)=\\{K,Q\\}.\n$$\nK is already visited; add Q:\n$$\nS_{4}=\\{C,G,K,X,Q\\},\\quad F_{4}=\\{Q\\}.\n$$\n\nExpand from Q. The neighbors of Q are\n$$\nN(Q)=\\{X,W\\}.\n$$\nX is already visited; add W:\n$$\nS_{5}=\\{C,G,K,X,Q,W\\},\\quad F_{5}=\\{W\\}.\n$$\n\nExpand from W. The neighbors of W are\n$$\nN(W)=\\{Q\\},\n$$\nwhich is already visited; no new additions. The frontier becomes empty, so the search terminates.\n\nTherefore, the connected component containing C is\n$$\n\\{C,G,K,X,Q,W\\},\n$$\nand its size is\n$$\n|S_{5}|=6.\n$$", "answer": "$$\\boxed{6}$$", "id": "1359170"}, {"introduction": "Beyond simply finding components, a deeper understanding comes from predicting their structure based on a graph's intrinsic properties. This problem explores 2-regular graphs, where every vertex has a degree of exactly two—a simple local constraint with powerful global consequences. By analyzing this property, you'll discover how it forces components to be cycles and how this understanding allows you to determine all possible configurations for the entire graph [@problem_id:1359155].", "problem": "In a graph, a \"connected component\" is a subgraph in which any two vertices are connected to each other by a path, and which is connected to no additional vertices in the larger graph. A graph is called *k-regular* if every vertex in the graph has a degree of exactly $k$.\n\nConsider an undirected, simple graph $G$ with 9 vertices. It is known that $G$ is a 2-regular graph. Which of the following options lists all possible values for the number of connected components in $G$?\n\nA. 1 only\n\nB. 3 only\n\nC. 1, 3\n\nD. 1, 2, 3\n\nE. 1, 2, 3, 4\n\nF. 9", "solution": "A finite undirected simple graph is 2-regular if every vertex has degree exactly 2. In any connected component of such a graph, each vertex has degree 2 within that component, which forces the component to be a cycle. Because the graph is simple, cycles must have length at least 3 (no loops and no multiple edges), so each connected component is a cycle $C_{m}$ with $m \\geq 3$.\n\nLet the graph have $c$ connected components with sizes $n_{1},\\dots,n_{c}$, each satisfying $n_{i} \\geq 3$, and the total number of vertices is\n$$\n\\sum_{i=1}^{c} n_{i} = 9.\n$$\nSince $n_{i} \\geq 3$ for all $i$, we have\n$$\n3c \\leq 9 \\implies c \\leq 3,\n$$\nand clearly $c \\geq 1$. Hence the only possible values for $c$ are $1,2,3$.\n\nEach value is realizable:\n- $c=1$: a single cycle $C_{9}$.\n- $c=2$: disjoint union $C_{6} \\cup C_{3}$.\n- $c=3$: disjoint union $C_{3} \\cup C_{3} \\cup C_{3}$.\n\nTherefore, the set of all possible numbers of connected components is $\\{1,2,3\\}$, corresponding to option D.", "answer": "$$\\boxed{D}$$", "id": "1359155"}, {"introduction": "True mastery of a concept involves using it to solve complex, multi-layered puzzles. This advanced exercise challenges you to reverse-engineer the structure of a network based on a unique design requirement related to how its connectivity changes when a new link is added. To find the solution, you must translate an abstract property into a concrete structural one—that components must be complete graphs—and then apply combinatorial reasoning to determine their exact sizes [@problem_id:1491615].", "problem": "A network testbed is being configured with 8 servers, which can be modeled as vertices in a graph. The network links are the edges of the graph, which is known to be a *simple graph* (no self-loops or multiple edges between the same two vertices). The initial configuration of the network must satisfy two critical design requirements:\n\n1. The graph consists of exactly 3 non-empty *connected components*. (A connected component is a subgraph in which any two vertices are connected to each other by paths, and which is connected to no additional vertices in the supergraph.)\n2. The topology is such that adding any single new edge between any two vertices not already connected by an edge results in a graph with exactly 2 connected components.\n\nIf the total number of edges in this initial configuration is exactly 9, determine the sizes (i.e., the number of vertices) of the three connected components. List the three sizes in non-decreasing order.", "solution": "Let the three connected components have vertex counts $s_{1} \\leq s_{2} \\leq s_{3}$, with $s_{1} + s_{2} + s_{3} = 8$. The total number of edges is the sum of edges inside each component.\n\nThe condition that adding any single missing edge reduces the number of connected components from $3$ to $2$ implies there are no missing edges within any component. Indeed, adding an edge within a component would not change the number of connected components, contradicting the requirement. Therefore, each component must be a complete graph, i.e., the components are cliques $K_{s_{1}}, K_{s_{2}}, K_{s_{3}}$.\n\nHence, the total number of edges is\n$$\n\\binom{s_{1}}{2} + \\binom{s_{2}}{2} + \\binom{s_{3}}{2} = 9.\n$$\nUsing $\\binom{s}{2} = \\frac{s(s-1)}{2}$ and $s_{1} + s_{2} + s_{3} = 8$, we obtain\n$$\n\\binom{s_{1}}{2} + \\binom{s_{2}}{2} + \\binom{s_{3}}{2}\n= \\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - (s_{1} + s_{2} + s_{3})\\right)\n= \\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - 8\\right).\n$$\nSetting this equal to $9$ gives\n$$\n\\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - 8\\right) = 9\n\\quad \\Longrightarrow \\quad\ns_{1}^{2} + s_{2}^{2} + s_{3}^{2} = 26.\n$$\nWe need positive integers $s_{1} \\leq s_{2} \\leq s_{3}$ with $s_{1} + s_{2} + s_{3} = 8$ and $s_{1}^{2} + s_{2}^{2} + s_{3}^{2} = 26$. Try $s_{1} = 1$. Then $s_{2} + s_{3} = 7$ and $s_{2}^{2} + s_{3}^{2} = 25$. Using $(s_{2} + s_{3})^{2} = s_{2}^{2} + s_{3}^{2} + 2 s_{2} s_{3}$ gives\n$$\n49 = 25 + 2 s_{2} s_{3}\n\\quad \\Longrightarrow \\quad\ns_{2} s_{3} = 12,\n$$\nwhose positive integer solutions with $s_{2} \\leq s_{3}$ and $s_{2} + s_{3} = 7$ are $(s_{2}, s_{3}) = (3, 4)$. Therefore $(s_{1}, s_{2}, s_{3}) = (1, 3, 4)$.\n\nFor completeness, checking $s_{1} = 2$ gives $s_{2} + s_{3} = 6$ and $s_{2}^{2} + s_{3}^{2} = 22$, implying $36 = 22 + 2 s_{2} s_{3}$ and $s_{2} s_{3} = 7$, which has no integer solution. Larger $s_{1}$ values are incompatible with the required sums. Hence the only possibility is $(1, 3, 4)$.\n\nFinally, this choice is valid: the components are $K_{1}, K_{3}, K_{4}$, with edge count $0 + 3 + 6 = 9$, and every missing edge lies between different components; adding any such edge merges exactly two components, leaving exactly $2$ connected components, as required.\n\nThus the sizes in non-decreasing order are $1, 3, 4$.", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 3 & 4 \\end{pmatrix}}$$", "id": "1491615"}]}