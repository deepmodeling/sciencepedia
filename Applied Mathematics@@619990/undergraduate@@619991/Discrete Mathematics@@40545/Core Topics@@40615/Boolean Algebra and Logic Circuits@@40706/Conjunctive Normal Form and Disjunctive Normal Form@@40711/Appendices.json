{"hands_on_practices": [{"introduction": "In engineering, we often need to simplify control logic when a system's state changes, such as a sensor failing. This exercise [@problem_id:1358952] simulates this practical scenario, challenging you to simplify a Conjunctive Normal Form (CNF) formula under a fixed input condition. Mastering this process of substitution and simplification is a fundamental skill in digital circuit design and automated reasoning.", "problem": "A logic controller for an industrial process uses a propositional formula, $\\Phi$, to determine if the system is in a 'stable' state. The system is stable if and only if $\\Phi$ evaluates to true. The formula is expressed in Conjunctive Normal Form (CNF), involving four input sensors represented by the propositional variables $p, q, r,$ and $s$. The formula is given by:\n\n$$ \\Phi = (p \\lor \\neg q \\lor r) \\land (\\neg p \\lor q) \\land (q \\lor \\neg r \\lor s) \\land (\\neg q \\lor \\neg s) $$\n\nDuring a routine diagnostic, it is determined that the sensor corresponding to $q$ is faulty and is permanently stuck, always yielding a 'false' signal. Your task is to find the new, simplified logical condition for the system to be stable under this fault. Express this simplified condition in Disjunctive Normal Form (DNF).\n\nWhich of the following expressions represents the simplified condition in DNF?\n\nA. $p \\lor (\\neg r \\land s)$\n\nB. $\\neg p \\land (\\neg r \\lor s)$\n\nC. $(\\neg p \\land \\neg r) \\lor (\\neg p \\land s)$\n\nD. $(p \\land r) \\lor (p \\land \\neg s)$\n\nE. $(p \\land \\neg s) \\lor (r \\land \\neg s)$", "solution": "The problem asks for the simplification of a given propositional formula $\\Phi$ under the condition that the variable $q$ is always false, and to express the result in Disjunctive Normal Form (DNF). The original formula is:\n$$ \\Phi = (p \\lor \\neg q \\lor r) \\land (\\neg p \\lor q) \\land (q \\lor \\neg r \\lor s) \\land (\\neg q \\lor \\neg s) $$\n\nFirst, we substitute the known truth value for $q$. We are given that $q$ is false, which we can represent as $q \\equiv F$. Consequently, its negation, $\\neg q$, is true, so $\\neg q \\equiv T$.\n\nLet's substitute these values into the formula $\\Phi$:\n$$ \\Phi' = (p \\lor T \\lor r) \\land (\\neg p \\lor F) \\land (F \\lor \\neg r \\lor s) \\land (T \\lor \\neg s) $$\n\nNow, we simplify each clause using the identity laws of propositional logic. The relevant laws are the Annihilation Law for disjunction ($X \\lor T \\equiv T$) and the Identity Law for disjunction ($X \\lor F \\equiv X$).\n\nLet's evaluate each of the four clauses:\n1. The first clause is $(p \\lor T \\lor r)$. Since one of the disjuncts is True, the entire clause simplifies to True.\n   $$ (p \\lor T \\lor r) \\equiv T $$\n2. The second clause is $(\\neg p \\lor F)$. Using the identity law, this simplifies to $\\neg p$.\n   $$ (\\neg p \\lor F) \\equiv \\neg p $$\n3. The third clause is $(F \\lor \\neg r \\lor s)$. Using the identity law, this simplifies to $(\\neg r \\lor s)$.\n   $$ (F \\lor \\neg r \\lor s) \\equiv (\\neg r \\lor s) $$\n4. The fourth clause is $(T \\lor \\neg s)$. Since one of the disjuncts is True, the entire clause simplifies to True.\n   $$ (T \\lor \\neg s) \\equiv T $$\n\nNow we substitute these simplified clauses back into the expression for $\\Phi'$:\n$$ \\Phi' = T \\land (\\neg p) \\land (\\neg r \\lor s) \\land T $$\n\nNext, we use the Identity Law for conjunction ($X \\land T \\equiv X$) to simplify the entire expression:\n$$ \\Phi' = \\neg p \\land (\\neg r \\lor s) $$\n\nThis expression is the simplified form of $\\Phi$ in Conjunctive Normal Form (CNF). However, the question requires the answer to be in Disjunctive Normal Form (DNF). To convert this expression to DNF, we apply the distributive law, $A \\land (B \\lor C) \\equiv (A \\land B) \\lor (A \\land C)$.\n\nIn our case, $A = \\neg p$, $B = \\neg r$, and $C = s$. Applying the distributive law gives:\n$$ \\Phi' = (\\neg p \\land \\neg r) \\lor (\\neg p \\land s) $$\n\nThis is the final simplified expression in DNF. We now compare this result with the given options.\n\nA. $p \\lor (\\neg r \\land s)$\nB. $\\neg p \\land (\\neg r \\lor s)$\nC. $(\\neg p \\land \\neg r) \\lor (\\neg p \\land s)$\nD. $(p \\land r) \\lor (p \\land \\neg s)$\nE. $(p \\land \\neg s) \\lor (r \\land \\neg s)$\n\nOur derived expression $(\\neg p \\land \\neg r) \\lor (\\neg p \\land s)$ matches option C.", "answer": "$$\\boxed{C}$$", "id": "1358952"}, {"introduction": "For analysis and standardization, it is often necessary to express a Boolean function in a unique, canonical form like the Principal Disjunctive Normal Form (PDNF). This problem [@problem_id:1358951] uses the familiar concept of a parity bit from error detection schemes to build a PDNF from a functional description. By analyzing the structure of the resulting formula, you will gain a deeper understanding of how a function's properties are directly reflected in its canonical representation.", "problem": "A simple error detection scheme for a 3-bit message is based on a parity check. Let the three bits of the message be represented by the propositional variables $p$, $q$, and $r$. A fourth bit, the parity bit, is added. This system uses an \"odd parity\" scheme, where the parity bit is set to ensure the total number of '1's (or 'true' values) in the resulting 4-bit block (the original 3 bits plus the parity bit) is odd.\n\nLet us define a boolean function $F(p, q, r)$ that determines the value of this parity bit based on the original 3-bit message. The function $F(p, q, r)$ must be 'true' (or 1) if the parity bit needs to be '1' to make the total count of '1's odd, and 'false' (or 0) otherwise. To implement this logic function using a particular type of digital hardware, it must be converted into its full Principal Disjunctive Normal Form (PDNF), which is also known as the sum-of-minterms expansion.\n\nA literal is defined as a propositional variable or its negation (e.g., $p$ or $\\neg p$). Calculate the total number of literals that appear in the full PDNF of the function $F(p, q, r)$.", "solution": "Under an odd-parity scheme, the four-bit block $(p,q,r,F)$ must have an odd number of ones, which is captured by the XOR condition\n$$\np \\oplus q \\oplus r \\oplus F = 1.\n$$\nSolving for $F$ using the property $x \\oplus 1 = \\neg x$ gives\n$$\nF = 1 \\oplus p \\oplus q \\oplus r = \\neg(p \\oplus q \\oplus r).\n$$\nThus $F(p,q,r)=1$ exactly when $p,q,r$ contain an even number of ones. For three variables, the input assignments with an even number of ones are those with Hamming weight $0$ or $2$. The number of such assignments is\n$$\n\\binom{3}{0}+\\binom{3}{2}=1+3=4.\n$$\nThe full Principal Disjunctive Normal Form (sum of minterms) includes one minterm for each such assignment, and each minterm contains exactly $3$ literals (one for each of $p,q,r$, either negated or unnegated). Therefore, the total number of literal occurrences in the full PDNF is\n$$\n4 \\times 3 = 12.\n$$\nFor completeness, the PDNF is\n$$\nF = (\\neg p \\land \\neg q \\land \\neg r)\\ \\lor\\ (\\neg p \\land q \\land r)\\ \\lor\\ (p \\land \\neg q \\land r)\\ \\lor\\ (p \\land q \\land \\neg r),\n$$\nwhich indeed contains $4$ minterms, each with $3$ literals, totaling $12$ literals.", "answer": "$$\\boxed{12}$$", "id": "1358951"}, {"introduction": "Beyond simply determining if a logical formula is satisfiable, we often need to know exactly how many solutions exist. This problem [@problem_id:1358938] introduces a powerful method to answer this question by applying the Principle of Inclusion-Exclusion to a formula in Disjunctive Normal Form (DNF). This practice bridges logic and combinatorics, illustrating a crucial technique used in fields like database query optimization and formal verification.", "problem": "Consider a boolean formula $\\Phi$ defined over a set of five boolean variables $\\{x_1, x_2, x_3, x_4, x_5\\}$. An assignment is a function that maps each variable to either True (1) or False (0). A satisfying assignment for $\\Phi$ is an assignment that makes the entire formula $\\Phi$ evaluate to True.\n\nThe formula $\\Phi$ is given in Disjunctive Normal Form (DNF), which is an OR of one or more clauses, where each clause is an AND of one or more literals (a variable or its negation). The formula is:\n$$ \\Phi = (x_1 \\land x_2) \\lor (\\neg x_2 \\land x_3) \\lor (x_3 \\land x_4 \\land \\neg x_5) \\lor (x_1 \\land x_5) $$\n\nDetermine the total number of distinct satisfying assignments for the formula $\\Phi$.", "solution": "Let $U$ be the set of all assignments to $\\{x_{1},x_{2},x_{3},x_{4},x_{5}\\}$, so $|U|=2^{5}$. Define the clause-sets corresponding to the DNF clauses:\n- $A=\\{u\\in U:\\, x_{1}\\land x_{2}\\text{ is true in }u\\}$,\n- $B=\\{u\\in U:\\, \\neg x_{2}\\land x_{3}\\text{ is true in }u\\}$,\n- $C=\\{u\\in U:\\, x_{3}\\land x_{4}\\land \\neg x_{5}\\text{ is true in }u\\}$,\n- $D=\\{u\\in U:\\, x_{1}\\land x_{5}\\text{ is true in }u\\}$.\n\nWe seek $|A\\cup B\\cup C\\cup D|$, the number of satisfying assignments. By the inclusionâ€“exclusion principle,\n$$\n|A\\cup B\\cup C\\cup D|\n= \\sum |A_{i}| - \\sum |A_{i}\\cap A_{j}| + \\sum |A_{i}\\cap A_{j}\\cap A_{k}| - |A\\cap B\\cap C\\cap D|.\n$$\n\nCompute single-set sizes by fixing the literals in each clause and leaving the remaining variables free:\n$$\n|A|=2^{3}=8 \\quad (x_{1}=1,x_{2}=1),\\qquad\n|B|=2^{3}=8 \\quad (x_{2}=0,x_{3}=1),\n$$\n$$\n|C|=2^{2}=4 \\quad (x_{3}=1,x_{4}=1,x_{5}=0),\\qquad\n|D|=2^{3}=8 \\quad (x_{1}=1,x_{5}=1).\n$$\n\nCompute pairwise intersections:\n- $A\\cap B$: requires $x_{2}=1$ and $x_{2}=0$ simultaneously, hence empty, so $|A\\cap B|=0$.\n- $A\\cap C$: combine $x_{1}=1,x_{2}=1$ with $x_{3}=1,x_{4}=1,x_{5}=0$, yielding exactly one assignment, so $|A\\cap C|=1$.\n- $A\\cap D$: combine $x_{1}=1,x_{2}=1$ with $x_{1}=1,x_{5}=1$, leaving $(x_{3},x_{4})$ free, so $|A\\cap D|=2^{2}=4$.\n- $B\\cap C$: combine $x_{2}=0,x_{3}=1$ with $x_{3}=1,x_{4}=1,x_{5}=0$, leaving $x_{1}$ free, so $|B\\cap C|=2$.\n- $B\\cap D$: combine $x_{2}=0,x_{3}=1$ with $x_{1}=1,x_{5}=1$, leaving $x_{4}$ free, so $|B\\cap D|=2$.\n- $C\\cap D$: requires $x_{5}=0$ and $x_{5}=1$ simultaneously, hence empty, so $|C\\cap D|=0$.\n\nThus\n$$\n\\sum |A_{i}| = 8+8+4+8=28,\\qquad\n\\sum |A_{i}\\cap A_{j}| = 0+1+4+2+2+0=9.\n$$\n\nTriple intersections:\n- Any triple including $A\\cap B$ is empty since $A\\cap B=\\varnothing$.\n- $A\\cap C\\cap D$ is empty because $A\\cap C$ fixes $x_{5}=0$ while $D$ requires $x_{5}=1$.\n- $B\\cap C\\cap D$ is empty because $B\\cap C$ fixes $x_{5}=0$ while $D$ requires $x_{5}=1$.\nHence $\\sum |A_{i}\\cap A_{j}\\cap A_{k}|=0$ and $|A\\cap B\\cap C\\cap D|=0$.\n\nTherefore,\n$$\n|A\\cup B\\cup C\\cup D|=28-9+0-0=19.\n$$\nThis is the total number of satisfying assignments of $\\Phi$.", "answer": "$$\\boxed{19}$$", "id": "1358938"}]}