{"hands_on_practices": [{"introduction": "Every Boolean function has a 'shadow' self—its complement. This first exercise explores the fundamental relationship between a function and its complement, expressed using minterms [@problem_id:1384380]. Mastering this concept is key, as it not only simplifies negation but also serves as the bridge for converting between canonical sum-of-products (SOP) and product-of-sums (POS) forms.", "problem": "In a digital security system, the state of three sensors is represented by the Boolean variables $x, y,$ and $z$. A function $G(x, y, z)$ determines whether an access gate is open (1) or closed (0). The gate is programmed to be open only for specific sensor combinations. The behavior of this function is described by its canonical sum-of-minterms representation:\n$$ G(x, y, z) = \\sum m(1, 2, 7) $$\nwhere the variables are ordered as $(x, y, z)$, with $x$ being the most significant bit.\n\nA secondary system monitors the gate and triggers an alarm whenever the gate is closed. Let the alarm function be $A(x, y, z)$. Which of the following options represents the alarm function $A$ in its canonical sum-of-minterms form?\n\nA. $\\sum m(0, 3, 4, 5, 6)$\n\nB. $\\sum m(1, 2, 7)$\n\nC. $\\prod M(0, 3, 4, 5, 6)$\n\nD. $\\prod M(1, 2, 7)$\n\nE. $\\sum m(0, 3, 4, 5)$", "solution": "The gate function is given in canonical sum-of-minterms form as $G(x,y,z)=\\sum m(1,2,7)$ with variables ordered $(x,y,z)$ and $x$ the most significant bit. By definition of minterms, the indices $0$ through $7$ correspond to all $2^{3}$ input combinations. The alarm triggers when the gate is closed, so $A(x,y,z)=G'(x,y,z)$. For any Boolean function $F=\\sum m(S)$ over the universe $U=\\{0,1,2,3,4,5,6,7\\}$, the complement is $F'=\\sum m(U\\setminus S)$ because minterms where $F$ is $1$ become $0$ and vice versa.\n\nHere $S=\\{1,2,7\\}$, so $U\\setminus S=\\{0,3,4,5,6\\}$. Therefore,\n$$\nA(x,y,z)=G'(x,y,z)=\\sum m(0,3,4,5,6)\n$$.\nThis matches option A.", "answer": "$$\\boxed{A}$$", "id": "1384380"}, {"introduction": "Logic isn't just about single functions; it's about how they interact. This practice elevates our skills by showing how to combine two different functions using logical operations, specifically the exclusive OR (XOR) [@problem_id:1384362]. You will see how a complex operation between functions elegantly translates into a simple set operation on their corresponding minterm indices, a powerful technique in digital logic synthesis.", "problem": "A control system for an automated research biodome monitors three environmental conditions using Boolean sensors: Soil moisture ($S$), Temperature ($T$), and Light intensity ($L$). A sensor reading of 1 signifies a 'high' or 'active' state (e.g., wet soil, high temperature, bright light), while 0 signifies a 'normal' or 'inactive' state. The system's logic operates on minterms derived from the state vector $(S, T, L)$, where $S$ is the most significant bit.\n\nThe system uses two primary logic functions, $F_A$ and $F_B$, to make decisions.\n- The function $F_A$ evaluates to TRUE if and only if exactly one of the three sensors registers a reading of 1.\n- The function $F_B$ is defined in product-of-sums canonical form (maxterm form) as $F_B(S, T, L) = \\prod M(0, 4, 5, 7)$.\n\nA special alert signal, $F_{\\text{alert}}$, is triggered when the outputs of $F_A$ and $F_B$ disagree. This corresponds to the exclusive OR (XOR) operation: $F_{\\text{alert}} = F_A \\oplus F_B$.\n\nWhich of the following expressions represents the function $F_{\\text{alert}}$ in its sum-of-products canonical form (minterm form)?\n\nA. $F_{\\text{alert}} = \\sum m(1, 2)$\n\nB. $F_{\\text{alert}} = \\sum m(3, 4, 6)$\n\nC. $F_{\\text{alert}} = \\sum m(1, 2, 3, 4, 6)$\n\nD. $F_{\\text{alert}} = \\sum m(0, 1, 2, 5, 7)$\n\nE. $F_{\\text{alert}} = \\sum m(4, 5, 7)$", "solution": "We denote each minterm index by interpreting the state vector $(S,T,L)$ as the binary number with $S$ the most significant bit: $m = 4S + 2T + L$.\n\nBy definition, $F_{A}$ is TRUE iff exactly one of $S,T,L$ equals $1$. The assignments with Hamming weight $1$ are:\n- $(S,T,L)=(0,0,1)\\Rightarrow m=1$,\n- $(S,T,L)=(0,1,0)\\Rightarrow m=2$,\n- $(S,T,L)=(1,0,0)\\Rightarrow m=4$.\nHence,\n$$\nF_{A}=\\sum m(1,2,4)\n$$.\n\nThe function $F_{B}$ is given in maxterm form as $F_{B}=\\prod M(0,4,5,7)$, which means $F_{B}=0$ at minterms $0,4,5,7$ and $F_{B}=1$ at the remaining minterms. Therefore,\n$$\nF_{B}=\\sum m(1,2,3,6)\n$$.\n\nThe alert is the XOR: $F_{\\text{alert}} = F_A \\oplus F_B$, which is $1$ exactly on the symmetric difference of the ON-sets of $F_A$ and $F_B$. With\n$$\n\\text{ON}(F_A)=\\{1,2,4\\},\\quad \\text{ON}(F_B)=\\{1,2,3,6\\},\n$$\ntheir intersection is $\\{1,2\\}$ and their union is $\\{1,2,3,4,6\\}$, so the symmetric difference is\n$$\n\\{1,2,3,4,6\\}\\setminus\\{1,2\\}=\\{3,4,6\\}.\n$$\nThus,\n$$\nF_{\\text{alert}}=\\sum m(3,4,6)\n$$,\nwhich corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1384362"}, {"introduction": "Let's zoom out from manipulating specific functions to viewing the entire landscape of possibilities. This final practice applies combinatorial principles to count how many distinct functions share a common structural characteristic—in this case, being composed of a specific number of minterms [@problem_id:1384376]. Answering this question provides a deeper appreciation for the vastness and structure of the space of all Boolean functions.", "problem": "In Boolean algebra, a function of $n$ variables, $f(x_1, x_2, \\dots, x_n)$, maps each of the $2^n$ possible input combinations from $\\{0, 1\\}^n$ to an output in $\\{0, 1\\}$. A *minterm* for $n$ variables is a product (logical AND) of $n$ literals, where each variable appears exactly once, either in its uncomplemented form (e.g., $x_i$) or its complemented form (e.g., $x_i'$).\n\nAny Boolean function can be uniquely expressed in its canonical Disjunctive Normal Form (DNF), which is a sum (logical OR) of all the minterms corresponding to the input combinations for which the function's output is 1. For instance, a function of two variables $f(x, y)$ that is 1 only for $(x, y) = (1, 0)$ is represented by the single minterm $xy'$.\n\nConsider the set of all possible Boolean functions of three variables, $f(x, y, z)$. Determine the total number of distinct functions in this set whose canonical DNF representation consists of a sum of exactly four minterms.", "solution": "A Boolean function of three variables $f(x,y,z)$ assigns a value in $\\{0,1\\}$ to each element of $\\{0,1\\}^{3}$. There are $2^{3}$ distinct input combinations, and correspondingly $2^{3}$ distinct minterms, each uniquely associated with one input combination.\n\nBy definition of the canonical Disjunctive Normal Form (DNF), the function is written as the sum (logical OR) of exactly those minterms corresponding to input combinations for which the output is $1$. Therefore, a function whose canonical DNF has exactly four minterms is precisely a function that is $1$ on exactly four input combinations and $0$ on the remaining four.\n\nThe number of such functions equals the number of ways to choose which four of the $2^{3}$ input combinations yield output $1$, which is the binomial coefficient\n$$\n\\binom{2^{3}}{4}=\\binom{8}{4}=\\frac{8!}{4!\\,4!}=70\n$$.\nThus, there are $70$ distinct Boolean functions of three variables whose canonical DNF consists of exactly four minterms.", "answer": "$$\\boxed{70}$$", "id": "1384376"}]}