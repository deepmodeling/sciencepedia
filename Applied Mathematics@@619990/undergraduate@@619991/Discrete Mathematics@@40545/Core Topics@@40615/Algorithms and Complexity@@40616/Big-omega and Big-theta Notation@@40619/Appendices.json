{"hands_on_practices": [{"introduction": "A deep understanding of Big-Theta notation begins with its formal definition. This exercise will move you beyond intuitive guesses and have you work directly with the definitional constants $c_1$, $c_2$, and $n_0$. By analyzing the bounded, oscillating function $f(n) = 5 + \\cos(n\\pi)$, you will practice pinning down the exact requirements needed to prove that a function is $\\Theta(1)$, providing a solid foundation for more complex analyses [@problem_id:1351964].", "problem": "Let $f(n) = 5 + \\cos(n\\pi)$ for integers $n \\ge 0$.\nA function $f(n)$ is said to be in $\\Theta(g(n))$ if there exist positive constants $c_1$, $c_2$, and a non-negative integer $n_0$ such that for all integers $n \\ge n_0$, the inequality $0 < c_1 g(n) \\le f(n) \\le c_2 g(n)$ holds.\n\nWhich of the following tuples of constants $(c_1, c_2, n_0)$, if any, correctly demonstrate that $f(n)$ is $\\Theta(1)$?\n\nA. $(c_1, c_2, n_0) = (5, 6, 1)$\n\nB. $(c_1, c_2, n_0) = (4, 5, 2)$\n\nC. $(c_1, c_2, n_0) = (3, 7, 0)$\n\nD. $(c_1, c_2, n_0) = (4, 6, 0)$\n\nE. $(c_1, c_2, n_0) = (1, 5, 1)$", "solution": "We are given $f(n)=5+\\cos(n\\pi)$ for integers $n\\ge 0$ and we want to test constants $(c_{1},c_{2},n_{0})$ that certify $f(n)\\in\\Theta(1)$ with $g(n)=1$. By the definition, we need positive constants $c_{1}$, $c_{2}$ and a non-negative integer $n_{0}$ such that for all integers $n\\ge n_{0}$,\n$$\n0<c_{1}\\cdot 1\\le f(n)\\le c_{2}\\cdot 1.\n$$\nThus we require $0<c_{1}\\le f(n)\\le c_{2}$ for all $n\\ge n_{0}$.\n\nCompute $f(n)$ explicitly using $\\cos(n\\pi)=(-1)^{n}$ for integer $n$:\n$$\nf(n)=5+(-1)^{n}=\n\\begin{cases}\n6, & \\text{$n$ even},\\\\\n4, & \\text{$n$ odd}.\n\\end{cases}\n$$\nFor any $n_{0}\\ge 0$, the set of integers $n\\ge n_{0}$ contains both even and odd $n$, so the range of $f(n)$ over $n\\ge n_{0}$ is always the two-point set $\\{4,6\\}$. Therefore, the necessary and sufficient conditions for the inequalities to hold for all $n\\ge n_{0}$ are\n$$\nc_{1}\\le 4\\quad\\text{and}\\quad c_{2}\\ge 6,\n$$\nwith $c_{1}>0$.\n\nNow test each option:\n- Option A: $(5,6,1)$ has $c_{1}=5$, which violates $c_{1}\\le 4$. Invalid.\n- Option B: $(4,5,2)$ has $c_{2}=5$, which violates $c_{2}\\ge 6$. Invalid.\n- Option C: $(3,7,0)$ has $3\\le 4$ and $7\\ge 6$. Valid.\n- Option D: $(4,6,0)$ has $4\\le 4$ and $6\\ge 6$. Valid.\n- Option E: $(1,5,1)$ has $c_{2}=5$, which violates $c_{2}\\ge 6$. Invalid.\n\nHence the correct tuples are Options C and D.", "answer": "$$\\boxed{CD}$$", "id": "1351964"}, {"introduction": "In practice, algorithms are often built from several sequential components, each with its own runtime. This problem simulates that scenario and illustrates a key principle of asymptotic analysis: the \"sum rule\". You will see how the total running time of a multi-phase process is governed by its most computationally intensive part, which is essential for identifying performance bottlenecks and simplifying complexity expressions [@problem_id:1352012].", "problem": "An engineer is analyzing a new algorithm that operates on an input of size $n$. The algorithm is composed of two distinct, sequential phases.\n\nThe running time of the first phase, denoted as $T_1(n)$, has been analyzed and found to have a tight asymptotic bound of $T_1(n) = \\Theta(n)$.\n\nThe running time of the second phase, a more computationally intensive process, is denoted as $T_2(n)$ and has been found to be $T_2(n) = \\Theta(n^2)$.\n\nThe total running time of the algorithm, $T(n)$, is the sum of the running times of the two sequential phases, so $T(n) = T_1(n) + T_2(n)$.\n\nWhich of the following represents the tightest asymptotic bound (big-Theta, $\\Theta$) for the total running time $T(n)$ of the algorithm?\n\nA. $\\Theta(1)$\n\nB. $\\Theta(n)$\n\nC. $\\Theta(n \\log n)$\n\nD. $\\Theta(n^2)$\n\nE. $\\Theta(n^3)$", "solution": "We are given two sequential phases with running times $T_{1}(n)=\\Theta(n)$ and $T_{2}(n)=\\Theta(n^{2})$. By the definition of big-Theta, there exist positive constants $c_{1},c_{2},d_{1},d_{2}$ and $n_{1},n_{2}$ such that for all $n \\geq n_{1}$,\n$$\nc_{1} n \\leq T_{1}(n) \\leq c_{2} n,\n$$\nand for all $n \\geq n_{2}$,\n$$\nd_{1} n^{2} \\leq T_{2}(n) \\leq d_{2} n^{2}.\n$$\nThe total time is $T(n)=T_{1}(n)+T_{2}(n)$. Let $N=\\max\\{n_{1},n_{2},1\\}$. For all $n \\geq N$, we have the lower bound\n$$\nT(n)=T_{1}(n)+T_{2}(n) \\geq T_{2}(n) \\geq d_{1} n^{2}.\n$$\nFor the upper bound, for all $n \\geq N$,\n$$\nT(n)=T_{1}(n)+T_{2}(n) \\leq c_{2} n + d_{2} n^{2} \\leq (c_{2}+d_{2}) n^{2},\n$$\nsince $n \\geq 1$ implies $c_{2} n \\leq c_{2} n^{2}$. Therefore, there exist positive constants $C_{1}=d_{1}$ and $C_{2}=c_{2}+d_{2}$ and $N$ such that for all $n \\geq N$,\n$$\nC_{1} n^{2} \\leq T(n) \\leq C_{2} n^{2}.\n$$\nBy the definition of big-Theta, this establishes $T(n)=\\Theta(n^{2})$. Among the given options, this corresponds to option D.", "answer": "$$\\boxed{D}$$", "id": "1352012"}, {"introduction": "While we can often intuit that a function like $n^3$ grows faster than $n^2$, comparing functions from the same family, such as two different exponentials, requires a more rigorous method. This practice introduces the limit test as a powerful tool to definitively determine the asymptotic relationship between two functions. By applying this test to $4^n$ and $2^n$, you will formally prove that they belong to different complexity classes, clarifying a common point of confusion for students of algorithm analysis [@problem_id:1351959].", "problem": "In the field of computational complexity theory, engineers often compare algorithms to understand their performance scaling with input size. Consider two algorithms, Algorithm A and Algorithm B, designed to solve a particular problem. The number of elementary operations required by Algorithm A for an input of size $n$ is given by the function $T_A(n) = 4^n$, while for Algorithm B, it is $T_B(n) = 2^n$.\n\nTo determine if these two algorithms belong to the same asymptotic complexity class, we can use the Big-Theta ($\\Theta$) notation. A function $f(n)$ is said to be $\\Theta(g(n))$ if $f(n)$ and $g(n)$ grow at the same rate for large $n$. This can be formally decided using the following limit test:\n\n$f(n) = \\Theta(g(n))$ if and only if $\\lim_{n \\to \\infty} \\frac{f(n)}{g(n)} = L$, where $L$ is a constant such that $0 < L < \\infty$.\n\nBased on this definition, which of the following statements correctly describes the relationship between the complexities of Algorithm A and Algorithm B?\n\nA. $T_A(n) = \\Theta(T_B(n))$ because both $T_A(n)$ and $T_B(n)$ are exponential functions.\n\nB. $T_A(n)$ is not $\\Theta(T_B(n))$ because the limit $\\lim_{n \\to \\infty} \\frac{T_A(n)}{T_B(n)}$ is equal to 0.\n\nC. $T_A(n)$ is not $\\Theta(T_B(n))$ because the limit $\\lim_{n \\to \\infty} \\frac{T_A(n)}{T_B(n)}$ is $\\infty$.\n\nD. $T_A(n) = \\Theta(T_B(n))$ because the limit $\\lim_{n \\to \\infty} \\frac{T_B(n)}{T_A(n)}$ is equal to 0.\n\nE. The limit test is not applicable for comparing these two functions.", "solution": "We are given $T_{A}(n)=4^{n}$ and $T_{B}(n)=2^{n}$. To test whether $T_{A}(n)=\\Theta(T_{B}(n))$, use the limit test: $f(n)=\\Theta(g(n))$ if and only if $\\lim_{n\\to\\infty}\\frac{f(n)}{g(n)}=L$ with $0<L<\\infty$.\n\nSet $f(n)=T_{A}(n)$ and $g(n)=T_{B}(n)$. Then\n$$\n\\frac{T_{A}(n)}{T_{B}(n)}=\\frac{4^{n}}{2^{n}}=\\frac{(2^{2})^{n}}{2^{n}}=\\frac{2^{2n}}{2^{n}}=2^{n}.\n$$\nTaking the limit,\n$$\n\\lim_{n\\to\\infty}\\frac{T_{A}(n)}{T_{B}(n)}=\\lim_{n\\to\\infty}2^{n}=\\infty.\n$$\nSince the limit is $\\infty$ and not a positive finite constant, $T_{A}(n)\\neq\\Theta(T_{B}(n))$. Among the options, this corresponds to the statement that $T_{A}(n)$ is not $\\Theta(T_{B}(n))$ because the limit is $\\infty$, which is option C.\n\nFor completeness, note that\n$$\n\\lim_{n\\to\\infty}\\frac{T_{B}(n)}{T_{A}(n)}=\\lim_{n\\to\\infty}\\frac{2^{n}}{4^{n}}=\\lim_{n\\to\\infty}2^{-n}=0,\n$$\nwhich confirms that $T_{B}(n)=o(T_{A}(n))$, not $\\Theta(T_{A}(n))$; thus options A and D are incorrect. The limit test is applicable, so option E is incorrect, and option B is incorrect because it asserts the limit is $0$ in the wrong direction.", "answer": "$$\\boxed{C}$$", "id": "1351959"}]}