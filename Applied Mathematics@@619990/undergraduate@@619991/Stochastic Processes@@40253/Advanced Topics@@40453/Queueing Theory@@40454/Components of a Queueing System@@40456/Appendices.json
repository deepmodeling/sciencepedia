{"hands_on_practices": [{"introduction": "The first step in analyzing any queueing system is to classify it. Kendall's notation provides a standardized, concise \"blueprint\" for a queue by describing its core components. This exercise is a fundamental practice in translating a real-world scenario—a modern ghost kitchen—into this powerful shorthand. By dissecting the problem, you will learn to identify the arrival process, service distribution, number of servers, and, most importantly, the system's total capacity, which is crucial for modeling systems where customers can be turned away [@problem_id:1290525].", "problem": "A modern \"ghost kitchen\" operates a single, highly specialized cooking station for a premium food delivery service. The business model prioritizes quality over quantity. The online ordering system is configured to accept new orders according to a Poisson process. The time required for the single chef to prepare an order and have it ready for a delivery driver is well-approximated by an exponential distribution. To ensure the highest quality, the system does not allow orders to be placed on a waiting list. If an order request is received while the chef is already preparing a meal, the system automatically rejects the new order, and that potential sale is lost.\n\nUsing the standard A/S/c/K form of Kendall's notation, where 'A' represents the arrival distribution, 'S' the service time distribution, 'c' the number of servers, and 'K' the system's total capacity (including those being served), which of the following correctly classifies this queueing system?\n\nA. M/M/1\nB. M/D/1/1\nC. M/M/1/0\nD. M/G/1\nE. M/M/1/1", "solution": "The problem asks us to classify a specific queueing system using the A/S/c/K form of Kendall's notation. We need to determine the correct symbol for each of the four components based on the provided description.\n\n**Step 1: Analyze the Arrival Process (A)**\nThe problem statement specifies that \"new orders arrive according to a Poisson process.\" In the context of Kendall's notation, a Poisson arrival process corresponds to exponentially distributed inter-arrival times. This is represented by the symbol 'M' for Markovian.\nSo, A = M.\n\n**Step 2: Analyze the Service Time Distribution (S)**\nThe problem states that \"the time required for the single chef to prepare an order ... is well-approximated by an exponential distribution.\" An exponential service time distribution is also represented by the symbol 'M' for Markovian.\nSo, S = M.\n\n**Step 3: Determine the Number of Servers (c)**\nThe ghost kitchen has a \"single, highly specialized cooking station\" operated by a \"single chef\". This means there is only one server in the system capable of processing orders.\nSo, c = 1.\n\n**Step 4: Determine the System Capacity (K)**\nThe capacity 'K' in Kendall's notation represents the maximum number of customers (or orders, in this case) that can be in the system at any time. This includes both those being served and those waiting in the queue. The problem explicitly states that \"the system does not allow orders to be placed on a waiting list\" and that \"if an order request is received while the chef is already preparing a meal, the system automatically rejects the new order\". This means the waiting space in the queue is 0. The only slot available is for the single order that is actively being prepared by the chef.\nTherefore, the total system capacity is the number of service spots plus the number of waiting spots.\nK = (Number of servers) + (Queue size) = 1 + 0 = 1.\nSo, K = 1.\n\n**Step 5: Assemble the Notation**\nCombining the symbols for each component, we get the classification in the A/S/c/K format.\nA = M\nS = M\nc = 1\nK = 1\n\nThus, the system is classified as M/M/1/1. This is a classic example of an Erlang loss system where customers who find the system full are lost.\n\n**Step 6: Compare with the Options**\nLet's review the given options:\nA. M/M/1: This notation implies an infinite system capacity (K=∞), which is incorrect because orders are rejected when the server is busy.\nB. M/D/1/1: This implies a deterministic ('D') service time, which contradicts the stated exponential service time distribution.\nC. M/M/1/0: This notation would mean the system has a capacity of zero, which is nonsensical as it implies no orders can ever be processed.\nD. M/G/1: This implies a general ('G') service time distribution and infinite capacity, both of which are incorrect.\nE. M/M/1/1: This correctly identifies the Markovian arrival and service processes, the single server, and the total system capacity of one.\n\nThe correct classification is M/M/1/1, which corresponds to option E.", "answer": "$$\\boxed{E}$$", "id": "1290525"}, {"introduction": "Not all queues involve waiting. In many real-world systems, from self-service checkouts to cloud computing resources, the capacity is so large that customers or jobs are served immediately. This practice explores the concept of an \"infinite-server\" system, where the number of servers $c$ is considered to be $\\infty$. The airport kiosk scenario provides an intuitive context for understanding this model, shifting the focus from analyzing wait times to analyzing resource utilization [@problem_id:1314530].", "problem": "Consider the self-service check-in area at a large international airport. The arrival of passengers at this area can be accurately modeled by a Poisson process. The time each passenger spends using a kiosk is an independent random variable that follows an exponential distribution. The airport has installed a very large number of kiosks, such that for all practical purposes, an arriving passenger can always find a free kiosk immediately and never has to wait in a line. The total population of potential passengers is considered to be effectively infinite.\n\nWhich of the following options correctly represents this queuing system using the standard three-parameter Kendall's notation (A/S/c), where 'A' denotes the arrival process, 'S' denotes the service time distribution, and 'c' denotes the number of servers?\n\nA. M/M/1\nB. M/G/$\\infty$\nC. M/M/$\\infty$\nD. G/M/1\nE. M/M/0", "solution": "Kendall’s notation represents a queueing system as $A/S/c$, where $A$ is the interarrival time distribution, $S$ is the service time distribution, and $c$ is the number of parallel servers.\n\nFirst, the arrivals are described as a Poisson process. In Kendall’s notation, a Poisson arrival process corresponds to exponential interarrival times, denoted by $M$ (Markovian). Therefore, the arrival component is $A=M$.\n\nSecond, each service time is exponentially distributed and independent. In Kendall’s notation, an exponential service time is also denoted by $M$. Therefore, the service component is $S=M$.\n\nThird, the system has a very large number of kiosks such that an arriving passenger can always start service immediately with no waiting. This is modeled as an infinite-server system, so the number of servers is $c=\\infty$.\n\nPutting these together yields the system $M/M/\\infty$.\n\nTo verify the multiple-choice options, $M/M/1$ (option A) is incorrect because it has a single server, which would create waiting when busy. $M/G/\\infty$ (option B) is an infinite-server system but with a general service distribution; since service is exponential, the more specific $M/M/\\infty$ applies. $G/M/1$ (option D) is incorrect because arrivals are not general and there is only one server. $M/M/0$ (option E) would indicate no servers, which is a pure loss system and does not match the scenario. Hence, the correct choice is $M/M/\\infty$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1314530"}, {"introduction": "The basic queueing models often assume an infinite population of potential customers. However, in many practical situations, such as a factory with a fixed number of machines that can break down, the source of \"arrivals\" is finite. This exercise introduces this important distinction by examining the classic machine repair problem, which requires an extended version of Kendall's notation. You will learn to identify the parameter for the finite calling population, $N$, a critical component for accurately modeling such closed-loop systems [@problem_id:1314528].", "problem": "In industrial engineering, the \"machine repair problem\" is a classic scenario modeled using queueing theory. Consider a factory with a fixed fleet of 10 identical machines that operate continuously. When a machine breaks down, it is sent to a single repair technician who services them one at a time. The broken machine effectively \"joins a queue\" to be repaired. This setup is a closed-loop system because the source of \"customers\" (i.e., broken machines) is limited to the 10 machines in the fleet.\n\nTo formally describe such a queueing system, analysts often use the extended six-part Kendall's notation, which takes the form $A/S/c/K/N/D$. Each position in this notation represents a key characteristic of the system:\n- $A$: The probability distribution for the inter-arrival times.\n- $S$: The probability distribution for the service times.\n- $c$: The number of parallel servers.\n- $K$: The capacity of the system (including those in service and in the queue).\n- $N$: The size of the calling population from which customers originate.\n- $D$: The queue discipline (the rule for serving queued customers).\n\nGiven this framework, which component of the six-part Kendall's notation is specifically used to represent the fact that this is a finite source problem, limited to the 10 machines in the fleet?\n\nA. The arrival process distribution ($A$)\nB. The system capacity ($K$)\nC. The number of servers ($c$)\nD. The queue discipline ($D$)\nE. The calling population size ($N$)", "solution": "We identify the queueing model as the finite-source machine repair problem: a closed system with a fixed number of potential customers, namely the 10 machines. In the extended Kendall notation $A/S/c/K/N/D$, each position has a specific meaning: $A$ is the inter-arrival time distribution, $S$ is the service-time distribution, $c$ is the number of parallel servers, $K$ is the system capacity (including those in service and in queue), $N$ is the size of the calling population, and $D$ is the queue discipline.\n\nThe defining feature of a finite-source model is that the number of potential customers is limited. In the extended notation, this is captured explicitly by the calling population size parameter $N$. For the machine repair setting with a fleet of 10 machines, this is represented as $N=10$. While $K$ may numerically equal $N$ in some closed systems because no more than $N$ units can be in system at once, conceptually $K$ denotes the system’s capacity (a buffer or system-size limit), whereas the fact that there are only 10 possible sources of arrivals is specified by $N$. The arrival process parameter $A$ does not encode finiteness of the population; it specifies the inter-arrival distribution. The number of servers $c$ and the discipline $D$ are unrelated to the source size.\n\nTherefore, the component that represents the finite source of 10 machines is the calling population size $N$.", "answer": "$$\\boxed{E}$$", "id": "1314528"}]}