{"hands_on_practices": [{"introduction": "The method of images provides an elegant and intuitive way to construct Green's functions for problems with simple, symmetric boundaries. This exercise introduces the core concept by tackling a classic scenario: finding the response to a point source in a quarter-plane with grounded boundaries (Dirichlet conditions). By strategically placing \"image\" sources outside the domain, you will learn how to build a solution that automatically satisfies the required boundary conditions, turning a complex partial differential equation problem into a geometric puzzle. [@problem_id:2108820]", "problem": "Consider a large, thin conductive plate shaped to occupy the first quadrant of the Cartesian plane ($x \\ge 0, y \\ge 0$). The boundaries of the plate along the positive x-axis and the positive y-axis are maintained at a constant temperature of zero. A single, steady point source of heat is located at the coordinates $\\mathbf{x'} = (a, b)$, where $a > 0$ and $b > 0$.\n\nThe steady-state temperature distribution $T(\\mathbf{x})$ in the plate is described by the two-dimensional Poisson equation, which, in this context, is governed by the Green's function $G(\\mathbf{x}, \\mathbf{x'})$. The Green's function for this system is the solution to the equation $\\nabla^2 G(\\mathbf{x}, \\mathbf{x'}) = \\delta(\\mathbf{x} - \\mathbf{x'})$ within the first quadrant, subject to the homogeneous Dirichlet boundary conditions $G(x, 0) = 0$ for $x > 0$ and $G(0, y) = 0$ for $y > 0$. The fundamental solution to the two-dimensional Laplacian equation in an unbounded domain is proportional to $\\frac{1}{2\\pi}\\ln(|\\mathbf{r}|)$, where $|\\mathbf{r}|$ is the distance from the source.\n\nSuppose the heat source is located at $\\mathbf{x'} = (1, 2)$. Calculate the value of the Green's function, $G(\\mathbf{x}, \\mathbf{x'})$, at the measurement point $\\mathbf{x} = (3, 1)$.\n\nExpress your answer as a single, exact, closed-form analytic expression in terms of $\\pi$ and natural logarithms.", "solution": "We solve for the Green's function in the first quadrant with homogeneous Dirichlet boundary conditions on the positive coordinate axes using the method of images. For the two-dimensional Laplacian with the convention $\\nabla^{2}G(\\mathbf{x},\\mathbf{x}')=\\delta(\\mathbf{x}-\\mathbf{x}')$, the free-space fundamental solution is $\\Phi(\\mathbf{x},\\mathbf{x}')=\\frac{1}{2\\pi}\\ln|\\mathbf{x}-\\mathbf{x}'|$. To enforce $G(x,0)=0$ for $x>0$ and $G(0,y)=0$ for $y>0$, place three image sources at the reflections of $\\mathbf{x}'=(a,b)$ across the axes with alternating signs. This gives\n$$\nG(\\mathbf{x},\\mathbf{x}')=\\frac{1}{2\\pi}\\Big[\\ln|\\mathbf{x}-(a,b)|-\\ln|\\mathbf{x}-(-a,b)|-\\ln|\\mathbf{x}-(a,-b)|+\\ln|\\mathbf{x}-(-a,-b)|\\Big].\n$$\nFor the given points $\\mathbf{x}'=(1,2)$ and $\\mathbf{x}=(3,1)$, compute the four distances:\n$$\nR_{1}=|\\mathbf{x}-(1,2)|=\\sqrt{(3-1)^{2}+(1-2)^{2}}=\\sqrt{5},\\quad\nR_{2}=|\\mathbf{x}-(-1,2)|=\\sqrt{(3+1)^{2}+(1-2)^{2}}=\\sqrt{17},\n$$\n$$\nR_{3}=|\\mathbf{x}-(1,-2)|=\\sqrt{(3-1)^{2}+(1+2)^{2}}=\\sqrt{13},\\quad\nR_{4}=|\\mathbf{x}-(-1,-2)|=\\sqrt{(3+1)^{2}+(1+2)^{2}}=\\sqrt{25}=5.\n$$\nSubstituting into the expression for $G$,\n$$\nG(\\mathbf{x},\\mathbf{x}')=\\frac{1}{2\\pi}\\big[\\ln R_{1}-\\ln R_{2}-\\ln R_{3}+\\ln R_{4}\\big]\n=\\frac{1}{2\\pi}\\ln\\!\\left(\\frac{R_{1}R_{4}}{R_{2}R_{3}}\\right)\n=\\frac{1}{2\\pi}\\ln\\!\\left(\\frac{5\\sqrt{5}}{\\sqrt{221}}\\right).\n$$\nUsing logarithm properties,\n$$\n\\frac{1}{2\\pi}\\ln\\!\\left(\\frac{5\\sqrt{5}}{\\sqrt{221}}\\right)\n=\\frac{1}{4\\pi}\\big(3\\ln 5-\\ln 221\\big)\n=\\frac{1}{4\\pi}\\ln\\!\\left(\\frac{125}{221}\\right).\n$$\nThis is the exact closed-form expression in terms of $\\pi$ and natural logarithms.", "answer": "$$\\boxed{\\frac{1}{4\\pi}\\ln\\!\\left(\\frac{125}{221}\\right)}$$", "id": "2108820"}, {"introduction": "Building upon the basic image method, this practice explores how to handle more complex scenarios involving mixed boundary conditions. You will construct a Green's function for a quarter-plane where one boundary is held at a fixed potential (Dirichlet) and the other is insulated (Neumann). This requires a more sophisticated arrangement of image sources, demonstrating the versatility of the technique and deepening your understanding of how different boundary conditions are physically and mathematically represented. [@problem_id:1157220]", "problem": "The Green's function $G(\\mathbf{r}, \\mathbf{r}')$ for the 2D Laplacian operator $\\nabla^2 = \\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}$ in a domain $\\Omega$ is the solution to the equation $\\nabla^2 G(\\mathbf{r}, \\mathbf{r}') = \\delta(\\mathbf{r} - \\mathbf{r}')$ for source point $\\mathbf{r}'$ and field point $\\mathbf{r}$ both in $\\Omega$, subject to specified boundary conditions on the boundary $\\partial\\Omega$. In an unbounded 2D space, this is the free-space Green's function, $G_0(\\mathbf{r}, \\mathbf{r}') = \\frac{1}{2\\pi} \\ln|\\mathbf{r} - \\mathbf{r}'|$.\n\nThe method of images is a powerful technique for constructing the Green's function in a domain with simple planar boundaries. It involves placing a set of fictitious \"image\" sources outside the domain $\\Omega$. The locations and strengths of these images are chosen such that the superposed potential from the original source and all image sources satisfies the given boundary conditions.\n- For a Dirichlet boundary condition ($G=0$) on a plane, an image source of opposite strength is placed at the mirror-image location of the source across the plane.\n- For a Neumann boundary condition ($\\frac{\\partial G}{\\partial n}=0$, where $\\mathbf{n}$ is the normal vector) on a plane, an image source of the same strength is placed at the mirror-image location.\n\nConsider the first quadrant of the 2D Cartesian plane, defined by $\\Omega = \\{(x, y) \\mid x > 0, y > 0 \\}$. The boundaries of this domain are the positive $x$-axis and the positive $y$-axis. A point source is located at $\\mathbf{r}' = (x', y')$ within this quadrant.\n\nYour task is to derive the Green's function $G(x, y; x', y')$ for the 2D Laplacian in this domain, subject to the following mixed boundary conditions:\n1. A Dirichlet condition on the positive $x$-axis: $G(x, 0; x', y') = 0$ for all $x > 0$.\n2. A Neumann condition on the positive $y$-axis: $\\frac{\\partial G}{\\partial x}(0, y; x', y') = 0$ for all $y > 0$.\n\nProvide the final expression for $G(x, y; x', y')$ in a simplified, closed form.", "solution": "We seek $G(x,y;x',y')$ such that\n$$\n\\nabla^2 G=\\delta(x-x')\\delta(y-y')\\,,\\quad x>0,\\;y>0,\n$$\nwith \n$$\nG(x,0;x',y')=0\\quad(\\text{Dirichlet on }y=0),\n$$ \n$$\n\\frac{\\partial G}{\\partial x}(0,y;x',y')=0\\quad(\\text{Neumann on }x=0).\n$$\n\n1. Free‐space Green’s function in 2D: \n$$\nG_0(\\mathbf{r},\\mathbf{r}')=\\frac{1}{2\\pi}\\ln\\bigl|\\,\\mathbf{r}-\\mathbf{r}'\\bigr|.\n$$\n\n2. Introduce image sources:\n- Dirichlet at $y=0$: image at $(x',-y')$ of charge $-1$.\n- Neumann at $x=0$: image at $(-x',y')$ of charge $+1$.\n- Combined reflection yields image at $(-x',-y')$ of charge $-1$.\n\n3. Superpose:\n$$\nG=\\frac{1}{2\\pi}\\Bigl[\\ln r_1-\\ln r_2+\\ln r_3-\\ln r_4\\Bigr],\n$$\nwhere\n$$\nr_1=\\sqrt{(x-x')^2+(y-y')^2},\\quad\nr_2=\\sqrt{(x-x')^2+(y+y')^2},\n$$\n$$\nr_3=\\sqrt{(x+x')^2+(y-y')^2},\\quad\nr_4=\\sqrt{(x+x')^2+(y+y')^2}.\n$$\n\n4. Combine logarithms:\n$$\nG=\\frac{1}{4\\pi}\\ln\\!\\frac{r_1^2\\,r_3^2}{r_2^2\\,r_4^2}\n=\\frac{1}{4\\pi}\\ln\\!\\left(\\frac{[(x-x')^2+(y-y')^2]\\,[ (x+x')^2+(y-y')^2 ]}{[(x-x')^2+(y+y')^2]\\,[ (x+x')^2+(y+y')^2]}\\right).\n$$", "answer": "$$\\boxed{\\frac{1}{4\\pi}\\ln\\!\\left(\\frac{[(x-x')^2+(y-y')^2]\\,[ (x+x')^2+(y-y')^2 ]}{[(x-x')^2+(y+y')^2]\\,[ (x+x')^2+(y+y')^2]}\\right)}$$", "id": "1157220"}, {"introduction": "While the method of images is powerful for simple geometries, many problems, especially those with periodic boundary conditions, are best solved in Fourier space. This computational practice demonstrates how the Discrete Fourier Transform (DFT) converts a differential equation into a simple algebraic one, making the Green's function straightforward to find. You will implement an algorithm to compute the periodic Green's function for the Helmholtz operator, gaining insight into why Fourier methods are a cornerstone of modern computational science and engineering. [@problem_id:2431131]", "problem": "You are asked to compute the discrete periodic Green's function for the two-dimensional Helmholtz operator using the Discrete Fourier Transform (DFT). Work in a purely mathematical and algorithmic setting, without physical units beyond the dimensionless specification provided here.\n\nConsider a rectangular periodic grid with sizes $N_x$ and $N_y$ on the domain $[0,L_x) \\times [0,L_y)$, with uniform spacings $h_x = L_x / N_x$ and $h_y = L_y / N_y$. Let the discrete Helmholtz operator act on a grid function $u[i,j]$ via the second-order central-difference discrete Laplacian with periodic boundary conditions as\n$$\n\\mathcal{L} u[i,j] = \\alpha^2 u[i,j] - \\left(\\frac{u[i+1,j] - 2u[i,j] + u[i-1,j]}{h_x^2} + \\frac{u[i,j+1] - 2u[i,j] + u[i,j-1]}{h_y^2}\\right),\n$$\nwhere $i \\in \\{0,\\dots,N_x-1\\}$ and $j \\in \\{0,\\dots,N_y-1\\}$, with indices interpreted modulo $N_x$ and $N_y$ for periodicity. Here $\\alpha \\ge 0$ is a constant.\n\nLet $\\delta[i,j]$ be the discrete delta function with $\\delta[0,0] = 1$ and $\\delta[i,j] = 0$ elsewhere. The discrete periodic Green's function $G[i,j]$ for $\\mathcal{L}$ is defined to satisfy\n$$\n\\mathcal{L} G = \\delta\n$$\nfor $\\alpha > 0$. For the degenerate case $\\alpha = 0$ (discrete Poisson equation in a periodic domain), the zero spatial frequency mode is not invertible; in that case define $G$ to satisfy the modified equation\n$$\n\\mathcal{L} G = \\delta - \\frac{1}{N_x N_y},\n$$\nwhich enforces zero mean and makes the problem solvable.\n\nUse the Discrete Fourier Transform (DFT) to diagonalize $\\mathcal{L}$. The DFT of a grid function $u[i,j]$ and its inverse are defined as\n$$\n\\widehat{u}[k,\\ell] = \\sum_{i=0}^{N_x-1} \\sum_{j=0}^{N_y-1} u[i,j] \\exp\\left(-2\\pi \\mathrm{i}\\left(\\frac{k i}{N_x} + \\frac{\\ell j}{N_y}\\right)\\right),\n$$\n$$\nu[i,j] = \\frac{1}{N_x N_y} \\sum_{k=0}^{N_x-1} \\sum_{\\ell=0}^{N_y-1} \\widehat{u}[k,\\ell] \\exp\\left(2\\pi \\mathrm{i}\\left(\\frac{k i}{N_x} + \\frac{\\ell j}{N_y}\\right)\\right).\n$$\nAll angles are in radians. Using these definitions, derive the Fourier representation of $\\mathcal{L}$ and construct $G$ by working in the Fourier domain, taking care of the $(k,\\ell)=(0,0)$ mode for $\\alpha=0$ as specified above.\n\nYour program must:\n- Construct $G$ by computing the inverse DFT of the reciprocal of the Fourier symbol of $\\mathcal{L}$.\n- Verify in real space that applying $\\mathcal{L}$ to $G$ reproduces the target right-hand side (either $\\delta$ for $\\alpha>0$ or $\\delta - 1/(N_x N_y)$ for $\\alpha=0$) using the given finite-difference stencil with periodic boundary conditions.\n- Quantify three diagnostics for each test case:\n  1. The maximum absolute residual error $e_{\\mathrm{res}} = \\max_{i,j} \\left| (\\mathcal{L} G)[i,j] - \\text{target}[i,j] \\right|$.\n  2. The maximum even-symmetry deviation of the real part $e_{\\mathrm{sym}} = \\max_{i,j} \\left| \\Re(G[i,j]) - \\Re(G[-i \\bmod N_x, -j \\bmod N_y]) \\right|$.\n  3. The maximum imaginary magnitude $e_{\\mathrm{imag}} = \\max_{i,j} \\left| \\Im(G[i,j]) \\right|$.\n\nUse $L_x = 1$ and $L_y = 1$ for all cases. Angles in all trigonometric functions are in radians.\n\nImplement the above for the following test suite of parameter values:\n- Case A (general well-conditioned): $N_x=16$, $N_y=16$, $\\alpha=1.0$.\n- Case B (non-square grid): $N_x=12$, $N_y=8$, $\\alpha=2.5$.\n- Case C (near-degenerate small parameter): $N_x=10$, $N_y=9$, $\\alpha=10^{-3}$.\n- Case D (degenerate Poisson case with zero-mean constraint): $N_x=9$, $N_y=7$, $\\alpha=0$.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the following order:\n$$\n[e_{\\mathrm{res}}^{A}, e_{\\mathrm{sym}}^{A}, e_{\\mathrm{imag}}^{A}, e_{\\mathrm{res}}^{B}, e_{\\mathrm{sym}}^{B}, e_{\\mathrm{imag}}^{B}, e_{\\mathrm{res}}^{C}, e_{\\mathrm{sym}}^{C}, e_{\\mathrm{imag}}^{C}, e_{\\mathrm{res}}^{D}, e_{\\mathrm{sym}}^{D}, e_{\\mathrm{imag}}^{D}].\n$$\nAll outputs must be real numbers (floating-point). No physical units are required beyond the dimensionless specification above, and all angles are in radians.", "solution": "The problem statement is subjected to validation.\n\n**Step 1: Extracted Givens**\n- **Domain**: A rectangular periodic grid of size $N_x \\times N_y$ on $[0,L_x) \\times [0,L_y)$.\n- **Grid Spacing**: $h_x = L_x / N_x$, $h_y = L_y / N_y$. All cases use $L_x = L_y = 1$.\n- **Discrete Helmholtz Operator**:\n$$\n\\mathcal{L} u[i,j] = \\alpha^2 u[i,j] - \\left(\\frac{u[i+1,j] - 2u[i,j] + u[i-1,j]}{h_x^2} + \\frac{u[i,j+1] - 2u[i,j] + u[i,j-1]}{h_y^2}\\right)\n$$\nwith indices interpreted modulo $N_x$ and $N_y$.\n- **Green's Function Equation**:\n  - For $\\alpha > 0$: $\\mathcal{L} G = \\delta$, where $\\delta[i,j]$ is the discrete delta function ($\\delta[0,0]=1$, zero otherwise).\n  - For $\\alpha = 0$: $\\mathcal{L} G = \\delta - \\frac{1}{N_x N_y}$.\n- **Discrete Fourier Transform (DFT)**:\n$$\n\\widehat{u}[k,\\ell] = \\sum_{i=0}^{N_x-1} \\sum_{j=0}^{N_y-1} u[i,j] \\exp\\left(-2\\pi \\mathrm{i}\\left(\\frac{k i}{N_x} + \\frac{\\ell j}{N_y}\\right)\\right)\n$$\n- **Inverse DFT (IDFT)**:\n$$\nu[i,j] = \\frac{1}{N_x N_y} \\sum_{k=0}^{N_x-1} \\sum_{\\ell=0}^{N_y-1} \\widehat{u}[k,\\ell] \\exp\\left(2\\pi \\mathrm{i}\\left(\\frac{k i}{N_x} + \\frac{\\ell j}{N_y}\\right)\\right)\n$$\n- **Required Diagnostics**:\n  1. $e_{\\mathrm{res}} = \\max_{i,j} \\left| (\\mathcal{L} G)[i,j] - \\text{target}[i,j] \\right|$\n  2. $e_{\\mathrm{sym}} = \\max_{i,j} \\left| \\Re(G[i,j]) - \\Re(G[-i \\bmod N_x, -j \\bmod N_y]) \\right|$\n  3. $e_{\\mathrm{imag}} = \\max_{i,j} \\left| \\Im(G[i,j]) \\right|$\n- **Test Cases**:\n  - A: $N_x=16$, $N_y=16$, $\\alpha=1.0$\n  - B: $N_x=12$, $N_y=8$, $\\alpha=2.5$\n  - C: $N_x=10$, $N_y=9$, $\\alpha=10^{-3}$\n  - D: $N_x=9$, $N_y=7$, $\\alpha=0$\n\n**Step 2: Validation Using Extracted Givens**\nThe problem is a well-defined exercise in computational physics. It is scientifically grounded in the established theory of finite difference methods and the Discrete Fourier Transform. The operator, boundary conditions, and solution method are standard. The special handling of the degenerate case $\\alpha=0$ by modifying the source term is a standard technique to ensure a well-posed problem (satisfying Fredholm's alternative). All required constants and definitions are provided, and there are no internal contradictions. The problem is formalizable, objective, and its solution is computationally verifiable.\n\n**Step 3: Verdict and Action**\nThe problem is **valid**. A solution will be provided.\n\n**Principle-Based Solution**\n\nThe fundamental principle for solving this problem is that the Discrete Fourier Transform (DFT) diagonalizes linear, shift-invariant operators, such as the specified discrete Helmholtz operator $\\mathcal{L}$ on a periodic grid. This transforms the partial difference equation into a simple algebraic equation in the Fourier domain, which can be solved trivially for each Fourier mode.\n\n**1. Fourier Representation of the Operator**\nWe begin by deriving the Fourier symbol of the operator $\\mathcal{L}$, which represents its eigenvalues in the Fourier basis. The DFT of a shifted function $u[i-a, j-b]$ is related to the DFT of $u[i,j]$ by the shift theorem:\n$$\n\\text{DFT}\\{u[i-a, j-b]\\} = \\widehat{u}[k,\\ell] \\exp\\left(-2\\pi \\mathrm{i} \\left(\\frac{ka}{N_x} + \\frac{\\ell b}{N_y}\\right)\\right)\n$$\nApplying the DFT to the central difference term in the $x$-direction:\n$$\n\\text{DFT}\\left\\{ u[i+1,j] - 2u[i,j] + u[i-1,j] \\right\\} = \\left(e^{2\\pi \\mathrm{i} k/N_x} - 2 + e^{-2\\pi \\mathrm{i} k/N_x}\\right) \\widehat{u}[k,\\ell]\n$$\nUsing Euler's formula, $e^{\\mathrm{i}\\theta} + e^{-\\mathrm{i}\\theta} = 2\\cos(\\theta)$, this simplifies to:\n$$\n= \\left(2\\cos\\left(\\frac{2\\pi k}{N_x}\\right) - 2\\right) \\widehat{u}[k,\\ell]\n$$\nUsing the identity $1 - \\cos(2\\theta) = 2\\sin^2(\\theta)$:\n$$\n= -4\\sin^2\\left(\\frac{\\pi k}{N_x}\\right) \\widehat{u}[k,\\ell]\n$$\nAn analogous result holds for the $y$-direction. Applying the DFT to the entire operator equation $\\mathcal{L}u = f$ yields:\n$$\n\\left(\\alpha^2 + \\frac{4}{h_x^2}\\sin^2\\left(\\frac{\\pi k}{N_x}\\right) + \\frac{4}{h_y^2}\\sin^2\\left(\\frac{\\pi \\ell}{N_y}\\right)\\right) \\widehat{u}[k,\\ell] = \\widehat{f}[k,\\ell]\n$$\nThe term in parentheses is the Fourier symbol, or eigenvalue, of the operator $\\mathcal{L}$ for the mode $(k,\\ell)$:\n$$\n\\widehat{\\mathcal{L}}[k,\\ell] = \\alpha^2 + \\frac{4}{h_x^2}\\sin^2\\left(\\frac{\\pi k}{N_x}\\right) + \\frac{4}{h_y^2}\\sin^2\\left(\\frac{\\pi \\ell}{N_y}\\right)\n$$\n\n**2. Solving for the Green's Function**\nThe problem is to solve $\\mathcal{L}G = S$, where $S$ is the source term. In Fourier space, this is $\\widehat{\\mathcal{L}}[k,\\ell] \\widehat{G}[k,\\ell] = \\widehat{S}[k,\\ell]$, which gives the solution for the Fourier-transformed Green's function:\n$$\n\\widehat{G}[k,\\ell] = \\frac{\\widehat{S}[k,\\ell]}{\\widehat{\\mathcal{L}}[k,\\ell]}\n$$\nWe must determine $\\widehat{S}[k,\\ell]$ for the two cases.\n- **Case 1: $\\alpha > 0$**. The source is $S[i,j] = \\delta[i,j]$. Its DFT is:\n  $$\n  \\widehat{\\delta}[k,\\ell] = \\sum_{i,j} \\delta[i,j] e^{-2\\pi \\mathrm{i}(\\dots)} = \\delta[0,0] \\cdot e^0 = 1\n  $$\n  The symbol $\\widehat{\\mathcal{L}}[k,\\ell]$ is strictly positive for all $(k,\\ell)$ since $\\alpha^2 > 0$ and the sine-squared terms are non-negative. Thus, the division is always well-defined.\n  $$\n  \\widehat{G}[k,\\ell] = \\frac{1}{\\widehat{\\mathcal{L}}[k,\\ell]}\n  $$\n- **Case 2: $\\alpha = 0$**. The symbol becomes $\\widehat{\\mathcal{L}}[k,\\ell] = \\frac{4}{h_x^2}\\sin^2(\\frac{\\pi k}{N_x}) + \\frac{4}{h_y^2}\\sin^2(\\frac{\\pi \\ell}{N_y})$. At the zero-frequency mode $(k,\\ell)=(0,0)$, $\\widehat{\\mathcal{L}}[0,0]=0$, making the operator non-invertible. To resolve this, the source is modified to $S[i,j] = \\delta[i,j] - \\frac{1}{N_x N_y}$, which has a zero-mean. The DFT of this source is:\n  $$\n  \\widehat{S}[k,\\ell] = \\widehat{\\delta}[k,\\ell] - \\text{DFT}\\left\\{\\frac{1}{N_x N_y}\\right\\} = 1 - \\delta_{k,0}\\delta_{\\ell,0}\n  $$\n  where $\\delta_{k,0}$ is the Kronecker delta. At $(k,\\ell)=(0,0)$, both $\\widehat{S}[0,0]$ and $\\widehat{\\mathcal{L}}[0,0]$ are zero. This indeterminate form is resolved by enforcing that the solution $G$ also has a zero mean, which in Fourier space means setting its zero-frequency component to zero, $\\widehat{G}[0,0] = 0$. For all other modes $(k,\\ell) \\neq (0,0)$, $\\widehat{S}[k,\\ell]=1$ and $\\widehat{\\mathcal{L}}[k,\\ell] \\neq 0$. The solution is:\n  $$\n  \\widehat{G}[k,\\ell] = \\begin{cases} 0 & \\text{if } (k,\\ell) = (0,0) \\\\ \\frac{1}{\\widehat{\\mathcal{L}}[k,\\ell]} & \\text{if } (k,\\ell) \\neq (0,0) \\end{cases}\n  $$\n\n**3. Real-Space Solution and Diagnostics**\nOnce $\\widehat{G}[k,\\ell]$ is constructed, the real-space Green's function $G[i,j]$ is obtained by applying the Inverse DFT.\n$$\nG[i,j] = \\text{IDFT}\\{\\widehat{G}[k,\\ell]\\}\n$$\nThe diagnostics are then computed:\n- The residual error $e_{\\mathrm{res}}$ is found by numerically applying the real-space operator $\\mathcal{L}$ to the computed $G[i,j]$ using periodic shifts and comparing the result to the target source $S[i,j]$. This directly verifies the correctness of the solution up to numerical precision.\n- The symbol $\\widehat{\\mathcal{L}}[k,\\ell]$ is real and exhibits even symmetry, i.e., $\\widehat{\\mathcal{L}}[k,\\ell] = \\widehat{\\mathcal{L}}[-k \\bmod N_x, -\\ell \\bmod N_y]$, as $\\sin^2(x)$ is an even function. Consequently, its reciprocal $\\widehat{G}[k,\\ell]$ is also real and even. The IDFT of a real and even spectrum is a purely real and even function. Thus, theoretically, $G[i,j]$ must be real and satisfy $G[i,j] = G[-i \\bmod N_x, -j \\bmod N_y]$. The diagnostics $e_{\\mathrm{imag}}$ and $e_{\\mathrm{sym}}$ measure the deviation from these theoretical properties due to finite-precision arithmetic in the FFT algorithm.\n\n**Algorithmic Procedure**\n1. For each test case $(N_x, N_y, \\alpha)$, define grid spacings $h_x = 1/N_x$, $h_y = 1/N_y$.\n2. Construct 2D arrays of integer Fourier mode indices $k$ and $\\ell$ corresponding to the output of a 2D FFT routine.\n3. Compute the 2D array for the symbol $\\widehat{\\mathcal{L}}[k,\\ell]$.\n4. Compute the 2D array for $\\widehat{G}[k,\\ell]$ based on the value of $\\alpha$, handling the $(k,\\ell)=(0,0)$ mode as described above.\n5. Compute $G[i,j]$ via a 2D Inverse FFT of $\\widehat{G}[k,\\ell]$.\n6. Numerically apply the operator $\\mathcal{L}$ to $G[i,j]$ to obtain $(\\mathcal{L}G)[i,j]$.\n7. Construct the target source array $S[i,j]$ for the given $\\alpha$.\n8. Compute the three required diagnostics: $e_{\\mathrm{res}}$, $e_{\\mathrm{sym}}$, and $e_{\\mathrm{imag}}$, from $G$ and $\\mathcal{L}G$.\n9. Collate the results for all test cases.\n\nThis procedure provides a complete and verifiable solution to the posed problem.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the discrete periodic Green's function for the 2D Helmholtz operator\n    using the DFT and verifies its properties.\n    \"\"\"\n    test_cases = [\n        (16, 16, 1.0),   # Case A\n        (12, 8, 2.5),    # Case B\n        (10, 9, 1e-3),   # Case C\n        (9, 7, 0.0),     # Case D\n    ]\n\n    results = []\n    for nx, ny, alpha in test_cases:\n        lx, ly = 1.0, 1.0\n        hx, hy = lx / nx, ly / ny\n        \n        # 1. Construct the operator symbol in Fourier space.\n        # Integer wavenumbers k and l corresponding to numpy's FFT conventions.\n        k_vals = np.fft.fftfreq(nx) * nx\n        l_vals = np.fft.fftfreq(ny) * ny\n        \n        # Broadcasting k and l to form 2D arrays for term calculation.\n        # Shape (ny, nx) matches numpy's array indexing (row, col).\n        k_grid = k_vals.reshape(1, nx)\n        l_grid = l_vals.reshape(ny, 1)\n\n        sin_k_term = np.sin(np.pi * k_grid / nx)**2\n        sin_l_term = np.sin(np.pi * l_grid / ny)**2\n        \n        laplacian_symbol = (4 / hx**2) * sin_k_term + (4 / hy**2) * sin_l_term\n        helmholtz_symbol = alpha**2 + laplacian_symbol\n\n        # 2. Compute the Green's function in Fourier space (G_hat).\n        if alpha == 0.0:\n            # For the Poisson case, the (0,0) mode is singular.\n            # We set its inverse to 0, which corresponds to a zero-mean solution.\n            with np.errstate(divide='ignore', invalid='ignore'):\n                g_hat = 1.0 / helmholtz_symbol\n            g_hat[0, 0] = 0.0\n        else:\n            # For the Helmholtz case, the operator is always invertible.\n            g_hat = 1.0 / helmholtz_symbol\n            \n        # 3. Compute the real-space Green's function G via Inverse DFT.\n        # numpy's ifft2 includes the 1/(nx*ny) normalization.\n        g = np.fft.ifft2(g_hat)\n\n        # 4. Verification and computation of diagnostics.\n        \n        # 4a. Apply the discrete operator L to the computed G in real space.\n        # Use np.roll for periodic boundary conditions.\n        # Axis 0 corresponds to j (rows, ny), Axis 1 corresponds to i (columns, nx).\n        lap_x = (np.roll(g, -1, axis=1) - 2 * g + np.roll(g, 1, axis=1)) / hx**2\n        lap_y = (np.roll(g, -1, axis=0) - 2 * g + np.roll(g, 1, axis=0)) / hy**2\n        lg = alpha**2 * g - (lap_x + lap_y)\n        \n        # 4b. Construct the target source term S.\n        target_s = np.zeros((ny, nx), dtype=float)\n        target_s[0, 0] = 1.0\n        if alpha == 0.0:\n            target_s -= 1.0 / (nx * ny)\n\n        # 4c. Compute the residual error e_res.\n        # Since lg may be complex due to numerical error, take its real part for comparison.\n        e_res = np.max(np.abs(lg.real - target_s))\n        \n        # 4d. Compute the symmetry deviation e_sym.\n        # G[-i, -j] can be computed by flipping both axes and rolling by 1.\n        g_symmetric_check = np.roll(g[::-1, ::-1], shift=(1, 1), axis=(0, 1))\n        # The theoretical G is real, so we check the symmetry of the real part.\n        e_sym = np.max(np.abs(g.real - g_symmetric_check.real))\n        \n        # 4e. Compute the maximum imaginary magnitude e_imag.\n        # The theoretical G should be purely real.\n        e_imag = np.max(np.abs(g.imag))\n        \n        results.extend([e_res, e_sym, e_imag])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2431131"}]}