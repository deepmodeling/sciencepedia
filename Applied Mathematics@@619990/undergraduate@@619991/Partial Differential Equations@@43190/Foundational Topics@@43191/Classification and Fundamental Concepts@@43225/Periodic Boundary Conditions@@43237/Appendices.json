{"hands_on_practices": [{"introduction": "To build a solid foundation, we begin by exploring the fundamental mathematical properties of periodic systems. This exercise asks you to find the characteristic \"modes\" or standing wave patterns that are physically permissible on a continuous loop, such as a vibrating ring. By determining the specific values of a physical parameter $\\lambda$ that allow these non-trivial patterns to exist, you will uncover the concept of eigenvalues and eigenfunctions for a periodic domain [@problem_id:2124821]. This practice is essential for understanding why Fourier series are the natural language for describing phenomena in periodic systems.", "problem": "Consider a thin, perfectly elastic circular hoop of circumference $L$. The small, transverse, time-independent displacements $y(x)$ of any point on the hoop from its equilibrium circular shape can be described by a coordinate $x$ that runs from $0$ to $L$. The governing equation for these displacements is given by the differential equation:\n$$y''(x) + \\lambda y(x) = 0$$\nwhere $\\lambda$ is a real constant whose value depends on the physical properties of the hoop and the mode of vibration.\n\nSince the hoop is a continuous circle, the displacement and the slope of the displacement must be the same at the beginning and the end of the coordinate interval. This physical requirement imposes the following periodic boundary conditions:\n$$y(0) = y(L) \\quad \\text{and} \\quad y'(0) = y'(L)$$\nFor the hoop to exhibit a stable, non-trivial displacement pattern (i.e., for a solution where $y(x)$ is not identically zero), the constant $\\lambda$ can only take on a specific set of discrete values.\n\nWhich of the following expressions correctly describes all possible non-negative values of $\\lambda$ for which non-trivial solutions exist? In the options below, $n$ is an integer.\n\nA. $\\lambda_n = \\left(\\frac{n\\pi}{L}\\right)^2$, for $n=1, 2, 3, \\ldots$\n\nB. $\\lambda_n = \\left(\\frac{(2n-1)\\pi}{2L}\\right)^2$, for $n=1, 2, 3, \\ldots$\n\nC. $\\lambda_n = \\left(\\frac{2n\\pi}{L}\\right)^2$, for $n=0, 1, 2, \\ldots$\n\nD. $\\lambda_n = \\left(\\frac{n\\pi}{L}\\right)^2$, for $n=0, 1, 2, \\ldots$\n\nE. $\\lambda_n = \\left(\\frac{2n\\pi}{L}\\right)^2$, for $n=1, 2, 3, \\ldots$", "solution": "To find the values of $\\lambda$ that allow for non-trivial solutions to the boundary value problem, we must analyze the general solution of the differential equation for different cases of $\\lambda$. The differential equation is $y''(x) + \\lambda y(x) = 0$ with periodic boundary conditions $y(0) = y(L)$ and $y'(0) = y'(L)$.\n\nCase 1: $\\lambda > 0$\nLet $\\lambda = k^2$ for some $k > 0$. The differential equation becomes $y''(x) + k^2 y(x) = 0$. The general solution is:\n$$y(x) = C_1 \\cos(kx) + C_2 \\sin(kx)$$\nThe derivative is:\n$$y'(x) = -C_1 k \\sin(kx) + C_2 k \\cos(kx)$$\nNow, we apply the boundary conditions.\nFrom $y(0) = y(L)$:\n$$C_1 \\cos(0) + C_2 \\sin(0) = C_1 \\cos(kL) + C_2 \\sin(kL)$$\n$$C_1 = C_1 \\cos(kL) + C_2 \\sin(kL)$$\n$$(1 - \\cos(kL))C_1 - \\sin(kL)C_2 = 0 \\quad (1)$$\nFrom $y'(0) = y'(L)$:\n$$-C_1 k \\sin(0) + C_2 k \\cos(0) = -C_1 k \\sin(kL) + C_2 k \\cos(kL)$$\n$$C_2 k = -C_1 k \\sin(kL) + C_2 k \\cos(kL)$$\nAssuming $k \\neq 0$, we can divide by $k$:\n$$C_2 = -C_1 \\sin(kL) + C_2 \\cos(kL)$$\n$$\\sin(kL)C_1 + (1 - \\cos(kL))C_2 = 0 \\quad (2)$$\nWe have a system of two linear equations for $C_1$ and $C_2$. For a non-trivial solution to exist (i.e., $C_1$ and $C_2$ are not both zero), the determinant of the coefficient matrix must be zero.\n$$\n\\det \\begin{pmatrix} 1-\\cos(kL) & -\\sin(kL) \\\\ \\sin(kL) & 1-\\cos(kL) \\end{pmatrix} = 0\n$$\n$$(1-\\cos(kL))^2 + \\sin^2(kL) = 0$$\n$$1 - 2\\cos(kL) + \\cos^2(kL) + \\sin^2(kL) = 0$$\n$$1 - 2\\cos(kL) + 1 = 0$$\n$$2 - 2\\cos(kL) = 0$$\n$$\\cos(kL) = 1$$\nThis condition is satisfied when $kL = 2n\\pi$ for any integer $n$. Since we assumed $k > 0$ and $L > 0$, we must have $n = 1, 2, 3, \\ldots$.\nSo, $k_n = \\frac{2n\\pi}{L}$ for $n = 1, 2, 3, \\ldots$.\nThe corresponding values for $\\lambda$ are $\\lambda_n = k_n^2 = \\left(\\frac{2n\\pi}{L}\\right)^2$ for $n = 1, 2, 3, \\ldots$.\n\nCase 2: $\\lambda = 0$\nThe differential equation becomes $y''(x) = 0$. The general solution is:\n$$y(x) = C_1 x + C_2$$\nThe derivative is:\n$$y'(x) = C_1$$\nApplying the boundary conditions:\nFrom $y(0) = y(L)$:\n$$C_1(0) + C_2 = C_1 L + C_2$$\n$$C_2 = C_1 L + C_2 \\implies C_1 L = 0$$\nSince $L \\neq 0$, we must have $C_1 = 0$.\nFrom $y'(0) = y'(L)$:\n$$C_1 = C_1$$\nThis condition is always true and provides no new information.\nThe first condition forced $C_1=0$. The solution becomes $y(x) = C_2$. This is a constant function. For any choice of $C_2 \\neq 0$, this is a non-trivial solution.\nTherefore, $\\lambda = 0$ is a valid value that allows for a non-trivial solution.\n\nCase 3: $\\lambda < 0$\nLet $\\lambda = -k^2$ for some $k > 0$. The differential equation becomes $y''(x) - k^2 y(x) = 0$. The general solution is:\n$$y(x) = C_1 \\cosh(kx) + C_2 \\sinh(kx)$$\nThe derivative is:\n$$y'(x) = C_1 k \\sinh(kx) + C_2 k \\cosh(kx)$$\nApplying the boundary conditions $y(0) = y(L)$ and $y'(0) = y'(L)$ leads to a system of equations for $C_1$ and $C_2$. For a non-trivial solution, the determinant of the coefficient matrix must be zero, which requires:\n$$(1-\\cosh(kL))^2 - \\sinh^2(kL) = 0$$\n$$1 - 2\\cosh(kL) + \\cosh^2(kL) - \\sinh^2(kL) = 0$$\n$$1 - 2\\cosh(kL) + 1 = 0$$\n$$2 - 2\\cosh(kL) = 0$$\n$$\\cosh(kL) = 1$$\nSince $k > 0$ and $L > 0$, we have $kL > 0$. The function $\\cosh(x) = 1$ only when $x=0$. Therefore, there is no $k>0$ that satisfies this condition. This means the only solution is the trivial one where $C_1=C_2=0$. There are no non-trivial solutions for $\\lambda < 0$.\n\nCombining the results:\nFrom Case 2, we have $\\lambda_0 = 0$.\nFrom Case 1, we have $\\lambda_n = \\left(\\frac{2n\\pi}{L}\\right)^2$ for $n=1, 2, 3, \\ldots$.\nWe can unify these two sets of results into a single expression by allowing the integer $n$ to be a non-negative integer, i.e., $n=0, 1, 2, \\ldots$. If we plug $n=0$ into the formula from Case 1, we get $\\lambda_0 = \\left(\\frac{2(0)\\pi}{L}\\right)^2 = 0$, which matches the result from Case 2.\nThus, all possible non-negative values of $\\lambda$ are given by:\n$$\\lambda_n = \\left(\\frac{2n\\pi}{L}\\right)^2, \\quad \\text{for } n=0, 1, 2, \\ldots$$\nThis corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "2124821"}, {"introduction": "Building on the concept of eigenfunctions, we now apply these ideas to a classic physical scenario: heat flow on a circular wire. This problem demonstrates how to solve the time-dependent heat equation by representing the solution as a sum of fundamental modes. You will decompose an initial temperature profile into its constituent sine and cosine functions and observe how each mode evolves independently over time [@problem_id:2111482]. This exercise provides a concrete example of the principle of superposition and illustrates how different spatial patterns of heat decay at different rates.", "problem": "A thin, thermally conductive circular wire forms a ring with a circumference of $2\\pi$ units. The wire is laterally insulated, so heat is only permitted to flow along its circumference. We can model the wire's length by an interval of length $2\\pi$. Let $x$ be the spatial coordinate that parameterizes the position on the wire, where $x$ can be taken to range from $-\\pi$ to $\\pi$. The temperature distribution in the wire, denoted by $u(x, t)$, is governed by the one-dimensional heat equation:\n$$\n\\frac{\\partial u}{\\partial t} = k \\frac{\\partial^2 u}{\\partial x^2}\n$$\nwhere $t$ represents time, and the thermal diffusivity of the material is given as $k=4$.\n\nAt the initial time $t=0$, the temperature distribution along the wire is given by the function:\n$$\nu(x, 0) = 5 + \\cos(2x) - 3\\sin(x)\n$$\nAssuming the wire forms a perfect, continuous circle, find the temperature distribution $u(x, t)$ for all times $t \\ge 0$. Express your answer as a single analytic function of $x$ and $t$.", "solution": "We model the circular wire as a one-dimensional domain with periodic boundary conditions of period $2\\pi$. The temperature $u(x,t)$ satisfies the heat equation\n$$\n\\frac{\\partial u}{\\partial t} = k\\frac{\\partial^{2}u}{\\partial x^{2}}, \\quad \\text{with } k=4,\n$$\nwith initial condition\n$$\nu(x,0) = 5+\\cos(2x)-3\\sin(x).\n$$\nOn a $2\\pi$-periodic domain, we use separation of variables by seeking eigenfunctions of the spatial operator $\\frac{\\partial^{2}}{\\partial x^{2}}$ that are $2\\pi$-periodic. The periodic eigenfunctions are $X_{n}(x)=\\cos(nx)$ and $X_{n}(x)=\\sin(nx)$ for integers $n\\ge 1$, with $X_{0}(x)=1$. For each $n\\ge 1$, substituting $u_{n}(x,t)=T_{n}(t)X_{n}(x)$ gives\n$$\n\\frac{T_{n}'(t)}{T_{n}(t)} = k\\frac{X_{n}''(x)}{X_{n}(x)} = -k n^{2},\n$$\nsince $X_{n}''(x)=-n^{2}X_{n}(x)$. Hence\n$$\nT_{n}(t)=C_{n}\\exp(-k n^{2}t).\n$$\nFor the zero mode $X_{0}(x)=1$, we have $X_{0}''(x)=0$, so $T_{0}'(t)=0$ and thus the constant mode is time-independent.\n\nTherefore, the general $2\\pi$-periodic solution is a Fourier series with exponentially decaying modes:\n$$\nu(x,t) = \\frac{a_{0}}{2} + \\sum_{n=1}^{\\infty}\\left[a_{n}\\exp(-k n^{2}t)\\cos(nx)+b_{n}\\exp(-k n^{2}t)\\sin(nx)\\right].\n$$\nThe initial condition $u(x,0)=5+\\cos(2x)-3\\sin(x)$ identifies the Fourier coefficients directly:\n- The constant term gives $\\frac{a_{0}}{2}=5$.\n- The cosine term is only $\\cos(2x)$ with coefficient $a_{2}=1$, and $a_{n}=0$ for $n\\ne 2$.\n- The sine term is only $\\sin(x)$ with coefficient $b_{1}=-3$, and $b_{n}=0$ for $n\\ne 1$.\n\nWith $k=4$, the time dependence of these modes is\n$$\n\\text{for the }\\cos(2x)\\text{ mode: } \\exp(-k\\cdot 2^{2} t)=\\exp(-16 t),\n$$\n$$\n\\text{for the }\\sin(x)\\text{ mode: } \\exp(-k\\cdot 1^{2} t)=\\exp(-4 t).\n$$\nTherefore, the final solution is\n$$\nu(x,t)=5+\\exp(-16 t)\\cos(2x)-3\\exp(-4 t)\\sin(x).\n$$\nThis satisfies the heat equation, is $2\\pi$-periodic, and matches the given initial condition at $t=0$.", "answer": "$$\\boxed{5+\\exp(-16 t)\\cos(2x)-3\\exp(-4 t)\\sin(x)}$$", "id": "2111482"}, {"introduction": "We now advance from analytical problems to a computational challenge that is central to modern scientific simulation. This practice involves solving the two-dimensional Poisson equation, a cornerstone of electrostatics and fluid dynamics, on a periodic domain. You will employ the Fast Fourier Transform (FFT), a powerful algorithm that converts the differential equation into a simple algebraic one in Fourier space [@problem_id:2426531]. This hands-on coding exercise not only equips you with a practical technique for solving PDEs but also reveals the profound connection between the discrete modes of a grid and the efficiency of Fourier-based methods, including critical details like the compatibility condition required for a solution to exist.", "problem": "Consider the two-dimensional Poisson equation on a rectangular domain with periodic boundary conditions, \n$$\\nabla^2 \\phi(x,y) = \\rho(x,y),$$ \nposed on a torus with side lengths $L_x$ and $L_y$. The function $\\phi(x,y)$ is determined up to an additive constant; fix the gauge by requiring that the spatial average of $\\phi(x,y)$ over the domain is zero. Work on a uniform grid of $N_x$ points in the $x$-direction and $N_y$ points in the $y$-direction, with coordinates \n$$x_i = \\frac{i\\,L_x}{N_x},\\quad i=0,1,\\dots,N_x-1,$$ \n$$y_j = \\frac{j\\,L_y}{N_y},\\quad j=0,1,\\dots,N_y-1.$$ \nAll trigonometric function arguments must be interpreted in radians. For the discrete spatial average of a grid function $f_{i,j} = f(x_i,y_j)$, use \n$$\\langle f \\rangle = \\frac{1}{N_x N_y}\\sum_{i=0}^{N_x-1}\\sum_{j=0}^{N_y-1} f_{i,j}.$$\n\nYour task is to write a program that, for each specified test case below, constructs the charge density $\\rho(x,y)$ on the grid, computes a corresponding numerical solution $\\phi_{\\text{comp}}(x,y)$ that satisfies the equation with periodic boundary conditions and the zero-average gauge, and then produces a single scalar result per test case as follows:\n- If the discrete spatial average $\\langle \\rho \\rangle$ is (to within a tolerance) zero, compute the maximum absolute pointwise error between the computed solution and the given analytic solution $\\phi_{\\text{true}}(x,y)$ on the same grid:\n$$E_{\\infty} = \\max_{0\\le i \\le N_x-1,\\;0\\le j \\le N_y-1} \\left| \\phi_{\\text{comp}}(x_i,y_j) - \\phi_{\\text{true}}(x_i,y_j) \\right|.$$\n- If the discrete spatial average $\\langle \\rho \\rangle$ is (to within a tolerance) nonzero, there is no periodic solution; in that case output the diagnostic scalar \n$$D = \\left| \\langle \\rho \\rangle \\right|.$$\n\nUse the zero-mean detection tolerance $\\varepsilon = 10^{-12}$, meaning treat $\\langle \\rho \\rangle$ as zero if $\\left| \\langle \\rho \\rangle \\right| < \\varepsilon$ and as nonzero otherwise.\n\nTest Suite (each item defines $N_x$, $N_y$, $L_x$, $L_y$, the charge density $\\rho(x,y)$, and, when applicable, the analytic solution $\\phi_{\\text{true}}(x,y)$):\n1. Case A (happy path, mixed modes with distinct frequencies): $N_x=64$, $N_y=48$, $L_x=2\\pi$, $L_y=2\\pi$, \n   $$\\rho(x,y) = 2\\sin(x) + 3\\cos(2y),\\quad \\phi_{\\text{true}}(x,y) = -2\\sin(x) - \\frac{3}{4}\\cos(2y).$$\n2. Case B (composite mode testing the combined wavenumber): $N_x=60$, $N_y=45$, $L_x=2\\pi$, $L_y=2\\pi$, \n   $$\\rho(x,y) = \\cos(3x)\\cos(2y),\\quad \\phi_{\\text{true}}(x,y) = -\\frac{1}{3^2+2^2}\\cos(3x)\\cos(2y) = -\\frac{1}{13}\\cos(3x)\\cos(2y).$$\n3. Case C (inconsistency under periodic boundary conditions): $N_x=50$, $N_y=50$, $L_x=2\\pi$, $L_y=2\\pi$, \n   $$\\rho(x,y) = 1 + \\sin(x).$$ In this case, no periodic solution exists because $\\langle \\rho \\rangle \\neq 0$; report $D = \\left| \\langle \\rho \\rangle \\right|$.\n\nFinal Output Format: Your program should produce a single line of output containing the three scalar results for Cases A, B, and C, respectively, as a comma-separated list enclosed in square brackets, for example `[r_A,r_B,r_C]`. Each element must be a floating-point number.", "solution": "The problem presented is to solve the two-dimensional Poisson equation, a fundamental equation of mathematical physics, on a rectangular domain with periodic boundary conditions. The equation is given by\n$$\n\\nabla^2 \\phi(x,y) = \\rho(x,y)\n$$\nwhere $\\phi(x,y)$ is the potential to be determined and $\\rho(x,y)$ is the given source density. The domain is a torus defined by the side lengths $L_x$ and $L_y$, which implies that the solution must satisfy periodic boundary conditions:\n$$\n\\phi(x+L_x, y) = \\phi(x,y)\n$$\n$$\n\\phi(x, y+L_y) = \\phi(x,y)\n$$\nThe problem is discretized on a uniform grid of $N_x \\times N_y$ points. The most efficient and accurate numerical method for this class of problems is a pseudo-spectral method utilizing the Fast Fourier Transform (FFT).\n\nThe theoretical basis for this method lies in the properties of the Fourier series representation of periodic functions. A periodic function $f(x,y)$ on the domain $[0, L_x) \\times [0, L_y)$ can be expressed as a Fourier series:\n$$\nf(x,y) = \\sum_{m=-\\infty}^{\\infty} \\sum_{n=-\\infty}^{\\infty} \\tilde{f}_{m,n} e^{i(k_m x + k_n y)}\n$$\nwhere the wavevectors are quantized due to periodicity: $k_m = \\frac{2\\pi m}{L_x}$ and $k_n = \\frac{2\\pi n}{L_y}$. When the Laplacian operator, $\\nabla^2 = \\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}$, is applied to such a series, each term is simply multiplied by a factor:\n$$\n\\nabla^2 \\left( e^{i(k_m x + k_n y)} \\right) = \\left( (ik_m)^2 + (ik_n)^2 \\right) e^{i(k_m x + k_n y)} = -(k_m^2 + k_n^2) e^{i(k_m x + k_n y)}\n$$\nConsequently, the Poisson partial differential equation is transformed into a simple algebraic equation in Fourier space:\n$$\n-(k_m^2 + k_n^2) \\tilde{\\phi}_{m,n} = \\tilde{\\rho}_{m,n}\n$$\nwhere $\\tilde{\\phi}_{m,n}$ and $\\tilde{\\rho}_{m,n}$ are the Fourier coefficients of $\\phi(x,y)$ and $\\rho(x,y)$, respectively.\n\nA critical aspect of this equation arises for the zero-frequency mode, where $m=0$ and $n=0$. For this mode, the wavevectors $k_0$ and $k_0$ are both zero, leading to the expression:\n$$\n0 \\cdot \\tilde{\\phi}_{0,0} = \\tilde{\\rho}_{0,0}\n$$\nThe Fourier coefficient $\\tilde{\\rho}_{0,0}$ corresponds to the spatial average of the source density, since $\\tilde{\\rho}_{0,0} \\propto \\int_0^{L_y} \\int_0^{L_x} \\rho(x,y) \\,dx\\,dy = \\langle \\rho \\rangle \\cdot L_x L_y$. For a solution to exist, it is necessary that $\\tilde{\\rho}_{0,0} = 0$, meaning the net charge on the domain must be zero. This is a fundamental compatibility condition for the Poisson equation on a closed manifold. If $\\langle \\rho \\rangle \\neq 0$, no periodic solution exists, and the problem correctly specifies that the diagnostic quantity $D = |\\langle \\rho \\rangle|$ should be reported.\n\nIf the compatibility condition $\\langle \\rho \\rangle = 0$ is satisfied, then the equation for the zero-frequency mode becomes $0 \\cdot \\tilde{\\phi}_{0,0} = 0$. This implies that $\\tilde{\\phi}_{0,0}$, the average value of the potential, is not determined by the equation. This reflects the physical reality that the potential is defined only up to an arbitrary additive constant. The problem resolves this ambiguity by imposing a gauge condition: the spatial average of $\\phi(x,y)$ must be zero, $\\langle \\phi \\rangle = 0$. This is equivalent to setting the zero-frequency Fourier coefficient $\\tilde{\\phi}_{0,0}$ to zero.\n\nWith the gauge fixed, the Fourier coefficients of the potential can be uniquely determined:\n$$\n\\tilde{\\phi}_{m,n} = \\begin{cases} 0 & \\text{if } m=0, n=0 \\\\ -\\frac{\\tilde{\\rho}_{m,n}}{k_m^2 + k_n^2} & \\text{otherwise} \\end{cases}\n$$\n\nThe numerical algorithm follows this theoretical framework using discrete Fourier transforms (DFTs) implemented via FFT algorithms:\n\n1.  **Grid and Source Generation**: For each test case, a uniform grid is defined by coordinates $x_i = \\frac{i L_x}{N_x}$ for $i=0, \\dots, N_x-1$ and $y_j = \\frac{j L_y}{N_y}$ for $j=0, \\dots, N_y-1$. The source density $\\rho(x,y)$ is evaluated at each grid point $(x_i, y_j)$ to form the matrix $\\rho_{i,j}$.\n\n2.  **Compatibility Check**: The discrete spatial average $\\langle \\rho \\rangle = \\frac{1}{N_x N_y} \\sum_{i=0}^{N_x-1} \\sum_{j=0}^{N_y-1} \\rho_{i,j}$ is computed. If its absolute value is greater than or equal to a tolerance $\\varepsilon = 10^{-12}$, no solution exists, and the result is $D = |\\langle \\rho \\rangle|$.\n\n3.  **Solution in Fourier Space**: If $|\\langle \\rho \\rangle| < \\varepsilon$, the solution proceeds.\n    a. The 2D DFT of the source density matrix, $\\hat{\\rho}_{k,l} = \\mathcal{F}(\\rho_{i,j})$, is computed using a 2D FFT.\n    b. A corresponding grid of squared discrete wavenumbers, $K^2_{k,l} = k_{x,k}^2 + k_{y,l}^2$, is constructed. The discrete wavenumbers $k_{x,k}$ and $k_{y,l}$ are derived from the standard frequencies returned by FFT libraries, scaled appropriately by factors of $2\\pi$ and the domain sizes $L_x$ and $L_y$.\n    c. The DFT of the potential, $\\hat{\\phi}_{k,l}$, is computed by dividing $\\hat{\\rho}_{k,l}$ by $-K^2_{k,l}$ for all non-zero frequency modes. The zero-frequency mode $\\hat{\\phi}_{0,0}$ is set to $0$ to enforce the gauge condition. A practical implementation involves setting the $(0,0)$ element of the $K^2_{k,l}$ matrix to a non-zero value to avoid division by zero, then explicitly setting $\\hat{\\phi}_{0,0} = 0$.\n\n4.  **Real-Space Solution and Error**: The potential on the grid, $\\phi_{\\text{comp}, i,j}$, is obtained by applying the inverse 2D DFT to $\\hat{\\phi}_{k,l}$. Since the source density $\\rho$ is a real-valued function, the computed potential $\\phi$ must also be real; any residual imaginary part is due to floating-point imprecision and is discarded. For cases where an analytic solution $\\phi_{\\text{true}}(x,y)$ is provided, it is evaluated on the grid, and the final result is the maximum absolute pointwise error:\n$$E_{\\infty} = \\max_{i,j} \\left| \\phi_{\\text{comp}}(x_i,y_j) - \\phi_{\\text{true}}(x_i,y_j) \\right|.$$\nThis provides a measure of the accuracy of the numerical solution.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes solutions to the 2D Poisson equation with periodic boundary conditions\n    for a suite of test cases using a Fourier pseudo-spectral method.\n    \"\"\"\n\n    def compute_case(Nx, Ny, Lx, Ly, rho_func, phi_true_func=None):\n        \"\"\"\n        Solves the Poisson equation for a single test case.\n\n        Args:\n            Nx (int): Number of grid points in the x-direction.\n            Ny (int): Number of grid points in the y-direction.\n            Lx (float): Length of the domain in the x-direction.\n            Ly (float): Length of the domain in the y-direction.\n            rho_func (callable): Function defining the charge density rho(x, y).\n            phi_true_func (callable, optional): Function for the analytic solution.\n\n        Returns:\n            float: The maximum absolute error E_inf if a solution exists,\n                   or the diagnostic scalar D if no solution exists.\n        \"\"\"\n        epsilon = 1e-12\n\n        # 1. Create spatial grid\n        x_coords = (np.arange(Nx) * Lx) / Nx\n        y_coords = (np.arange(Ny) * Ly) / Ny\n        x, y = np.meshgrid(x_coords, y_coords, indexing='ij')\n\n        # 2. Construct the charge density rho on the grid\n        rho_grid = rho_func(x, y)\n\n        # 3. Compute the discrete spatial average of rho\n        avg_rho = np.mean(rho_grid)\n\n        # 4. Check for compatibility: if avg_rho is non-zero, no periodic solution exists\n        if np.abs(avg_rho) >= epsilon:\n            return np.abs(avg_rho)\n\n        # 5. Solve using the FFT-based pseudo-spectral method\n        # 5a. Compute 2D FFT of the charge density\n        rho_hat = np.fft.fft2(rho_grid)\n\n        # 5b. Define wavenumbers in x and y directions\n        kx_vals = 2 * np.pi * np.fft.fftfreq(Nx, d=Lx/Nx)\n        ky_vals = 2 * np.pi * np.fft.fftfreq(Ny, d=Ly/Ny)\n        kx, ky = np.meshgrid(kx_vals, ky_vals, indexing='ij')\n\n        # 5c. Compute squared wavenumber magnitude. Handle k=0 singularity.\n        ksq = kx**2 + ky**2\n        # Set ksq[0, 0] to a non-zero value to avoid division by zero.\n        # The result for this mode will be overridden anyway.\n        ksq[0, 0] = 1.0\n\n        # 5d. Compute the FFT of the potential phi\n        phi_hat = -rho_hat / ksq\n        \n        # 5e. Enforce the zero-average gauge condition by setting the DC component to zero\n        phi_hat[0, 0] = 0.0\n\n        # 5f. Compute the inverse 2D FFT to get the solution in real space.\n        # Discard small imaginary part from numerical noise.\n        phi_comp = np.real(np.fft.ifft2(phi_hat))\n\n        # 6. Compute the maximum absolute error against the true solution\n        # This branch is taken as avg_rho is near zero.\n        if phi_true_func is None:\n            # This should not be reached given the problem structure, but is good practice\n            raise ValueError(\"phi_true_func must be provided for cases with zero-mean rho.\")\n\n        phi_true_grid = phi_true_func(x, y)\n        error_inf = np.max(np.abs(phi_comp - phi_true_grid))\n\n        return error_inf\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case A: Happy path, mixed modes\n        {\n            \"params\": (64, 48, 2*np.pi, 2*np.pi),\n            \"rho\": lambda x, y: 2*np.sin(x) + 3*np.cos(2*y),\n            \"phi_true\": lambda x, y: -2*np.sin(x) - 3/4*np.cos(2*y)\n        },\n        # Case B: Composite mode\n        {\n            \"params\": (60, 45, 2*np.pi, 2*np.pi),\n            \"rho\": lambda x, y: np.cos(3*x)*np.cos(2*y),\n            \"phi_true\": lambda x, y: -1/13*np.cos(3*x)*np.cos(2*y)\n        },\n        # Case C: Inconsistent source, no periodic solution\n        {\n            \"params\": (50, 50, 2*np.pi, 2*np.pi),\n            \"rho\": lambda x, y: 1 + np.sin(x),\n            \"phi_true\": None\n        }\n    ]\n\n    results = []\n    for case in test_cases:\n        Nx, Ny, Lx, Ly = case[\"params\"]\n        rho_func = case[\"rho\"]\n        phi_true_func = case[\"phi_true\"]\n        \n        result = compute_case(Nx, Ny, Lx, Ly, rho_func, phi_true_func)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2426531"}]}