{"hands_on_practices": [{"introduction": "This first exercise goes back to the foundational definitions to build your intuition. By deriving the values of both the Itô and Stratonovich integrals for the simple process $X_t = W_t$ directly from their respective Riemann sums, you will uncover the origin of the famous Itô correction term. This hands-on derivation clarifies exactly why Stratonovich calculus preserves the classical chain rule while Itô calculus does not.", "problem": "Let $W=\\{W_t: t\\ge 0\\}$ be a one-dimensional standard Brownian motion with $W_0=0$. Let $f(x)=x^2$. For a fixed horizon $T>0$, define the Stratonovich integral $S(T):=\\int_0^T W_t \\circ dW_t$ and the Itô integral $I(T):=\\int_0^T W_t\\, dW_t$. Starting only from the following foundational facts:\n- The Stratonovich integral is defined as the limit in probability of the symmetric Riemann sums built on midpoints: for a partition $0=t_0<t_1<\\cdots<t_n=T$ with mesh going to $0$, \n$$\n\\int_0^T X_t \\circ dW_t=\\lim_{\\|\\Pi\\|\\to 0} \\sum_{k=0}^{n-1} X_{(t_k+t_{k+1})/2}\\,\\big(W_{t_{k+1}}-W_{t_k}\\big).\n$$\n- The Itô integral is defined as the limit in probability of the left-point Riemann sums:\n$$\n\\int_0^T X_t \\, dW_t=\\lim_{\\|\\Pi\\|\\to 0} \\sum_{k=0}^{n-1} X_{t_k}\\,\\big(W_{t_{k+1}}-W_{t_k}\\big).\n$$\n- Brownian motion has continuous paths and quadratic variation $[W]_T=T$, meaning $\\sum_{k=0}^{n-1} (W_{t_{k+1}}-W_{t_k})^2 \\to T$ in probability as $\\|\\Pi\\|\\to 0$.\n- The algebraic identity $a^2-b^2=(a+b)(a-b)$ for real numbers $a$ and $b$,\n\nderive, in closed form, the expressions for $S(T)$ and $I(T)$ in terms of $W_T$ and $T$, and hence compute \n$$\nD(T):=S(T)-I(T).\n$$\nExpress your final answer as a single simplified analytic expression for $D(T)$. No rounding is required and no units are involved.", "solution": "The problem is valid as it is mathematically well-posed, scientifically grounded in the theory of stochastic calculus, and provides a complete and consistent set of definitions and properties to derive the requested quantities.\n\nThe objective is to compute the Stratonovich integral $S(T) = \\int_0^T W_t \\circ dW_t$, the Itô integral $I(T) = \\int_0^T W_t\\, dW_t$, and their difference $D(T)=S(T)-I(T)$, starting from their definitions as limits of Riemann sums. We are given a standard Brownian motion $W_t$ with $W_0=0$, a fixed time horizon $T>0$, and the quadratic variation property $[W]_T=T$.\n\nFirst, we will derive the expression for the Itô integral $I(T)$. We start from the algebraic identity $a^2-b^2=(a+b)(a-b)$. For a partition $0=t_0<t_1<\\cdots<t_n=T$, we consider the telescoping sum of squares of the Brownian motion's values at the partition points:\n$$\n\\sum_{k=0}^{n-1} (W_{t_{k+1}}^2 - W_{t_k}^2) = W_{t_n}^2 - W_{t_0}^2\n$$\nSince $t_n=T$ and $t_0=0$, and we are given $W_0=0$, this simplifies to:\n$$\n\\sum_{k=0}^{n-1} (W_{t_{k+1}}^2 - W_{t_k}^2) = W_T^2\n$$\nUsing the provided algebraic identity with $a=W_{t_{k+1}}$ and $b=W_{t_k}$, we can rewrite the term inside the sum:\n$$\nW_{t_{k+1}}^2 - W_{t_k}^2 = (W_{t_{k+1}} + W_{t_k})(W_{t_{k+1}} - W_{t_k})\n$$\nLet $\\Delta W_k = W_{t_{k+1}} - W_{t_k}$. We can express $W_{t_{k+1}}$ as $W_{t_k} + \\Delta W_k$. Substituting this into the term $(W_{t_{k+1}} + W_{t_k})$ gives:\n$$\n( (W_{t_k} + \\Delta W_k) + W_{t_k} ) \\Delta W_k = (2W_{t_k} + \\Delta W_k) \\Delta W_k = 2W_{t_k}\\Delta W_k + (\\Delta W_k)^2\n$$\nSubstituting this back into the sum, we get:\n$$\nW_T^2 = \\sum_{k=0}^{n-1} \\left( 2W_{t_k}\\Delta W_k + (\\Delta W_k)^2 \\right) = 2 \\sum_{k=0}^{n-1} W_{t_k}\\Delta W_k + \\sum_{k=0}^{n-1} (\\Delta W_k)^2\n$$\nNow, we take the limit as the mesh of the partition $\\|\\Pi\\|$ goes to $0$. According to the problem's givens:\nThe first term's limit is, by definition, twice the Itô integral:\n$$\n\\lim_{\\|\\Pi\\|\\to 0} 2 \\sum_{k=0}^{n-1} W_{t_k}\\Delta W_k = 2 \\int_0^T W_t\\, dW_t = 2I(T)\n$$\nThe second term's limit is, by definition, the quadratic variation of the Brownian motion over the interval $[0, T]$:\n$$\n\\lim_{\\|\\Pi\\|\\to 0} \\sum_{k=0}^{n-1} (\\Delta W_k)^2 = \\lim_{\\|\\Pi\\|\\to 0} \\sum_{k=0}^{n-1} (W_{t_{k+1}}-W_{t_k})^2 = [W]_T = T\n$$\nTaking the limit of the entire equation in probability, we obtain:\n$$\nW_T^2 = 2I(T) + T\n$$\nSolving for $I(T)$, we find the closed-form expression for the Itô integral:\n$$\nI(T) = \\frac{1}{2}(W_T^2 - T)\n$$\n\nNext, we directly compute the difference $D(T) = S(T) - I(T)$. We start from the discrete sums that define the integrals. Let $t_k^* = (t_k+t_{k+1})/2$ be the midpoint time.\n$$\nS_n = \\sum_{k=0}^{n-1} W_{t_k^*}(W_{t_{k+1}}-W_{t_k})\n$$\n$$\nI_n = \\sum_{k=0}^{n-1} W_{t_k}(W_{t_{k+1}}-W_{t_k})\n$$\nThe difference is:\n$$\nS_n - I_n = \\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k})(W_{t_{k+1}} - W_{t_k})\n$$\nWe decompose the increment $W_{t_{k+1}} - W_{t_k}$ into two parts using the midpoint:\n$$\nW_{t_{k+1}} - W_{t_k} = (W_{t_{k+1}} - W_{t_k^*}) + (W_{t_k^*} - W_{t_k})\n$$\nSubstituting this into the expression for the difference gives:\n$$\nS_n - I_n = \\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k}) \\left[ (W_{t_{k+1}} - W_{t_k^*}) + (W_{t_k^*} - W_{t_k}) \\right]\n$$\n$$\nS_n - I_n = \\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k})(W_{t_{k+1}} - W_{t_k^*}) + \\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k})^2\n$$\nWe now analyze the limits of these two sums as $\\|\\Pi\\| \\to 0$.\nFor the first sum, each term is a product of increments of the standard Brownian motion over adjacent time intervals, $[t_k, t_k^*]$ and $[t_k^*, t_{k+1}]$. A fundamental property of Brownian motion is that its increments over non-overlapping intervals are independent. Therefore, $W_{t_k^*} - W_{t_k}$ and $W_{t_{k+1}} - W_{t_k^*}$ are independent random variables. Also, for a standard Brownian motion, the expectation of any increment is $0$. Thus, the expectation of each term in the sum is:\n$$\n\\mathbb{E}[(W_{t_k^*} - W_{t_k})(W_{t_{k+1}} - W_{t_k^*})] = \\mathbb{E}[W_{t_k^*} - W_{t_k}] \\mathbb{E}[W_{t_{k+1}} - W_{t_k^*}] = 0 \\cdot 0 = 0\n$$\nThe sum of these terms is a martingale that converges to $0$ in probability.\n\nFor the second sum, $\\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k})^2$, this is a quadratic variation-type sum. The time intervals are $[t_k, t_k^*]$, and their total length is $\\sum_{k=0}^{n-1} (t_k^* - t_k) = \\sum_{k=0}^{n-1} \\frac{t_{k+1}-t_k}{2} = \\frac{1}{2}(t_n-t_0) = \\frac{T}{2}$. The property $[W]_T=T$ implies that the limit of the sum of squared increments converges in probability to the total length of the time interval over which the variation is calculated. Therefore:\n$$\n\\lim_{\\|\\Pi\\|\\to 0} \\sum_{k=0}^{n-1} (W_{t_k^*} - W_{t_k})^2 = [W]_{T/2} = \\frac{T}{2}\n$$\nCombining the limits of the two sums, we find the limit of their difference:\n$$\nD(T) = S(T) - I(T) = \\lim_{\\|\\Pi\\|\\to 0} (S_n - I_n) = 0 + \\frac{T}{2} = \\frac{T}{2}\n$$\nThis is the well-known Itô-Stratonovich correction term for this specific integral.\n\nFinally, we can find the expression for the Stratonovich integral $S(T)$:\n$$\nS(T) = I(T) + D(T) = \\frac{1}{2}(W_T^2 - T) + \\frac{T}{2} = \\frac{1}{2}W_T^2 - \\frac{T}{2} + \\frac{T}{2} = \\frac{1}{2}W_T^2\n$$\nThis result is consistent with the fact that Stratonovich calculus obeys the ordinary rules of calculus; for $f(x)=x^2/2$, we have $f'(x)=x$, and $\\int_0^T f'(W_t) \\circ dW_t = f(W_T) - f(W_0) = W_T^2/2$.\n\nThe problem asks for the expression for $D(T)$, which we have derived to be $T/2$.", "answer": "$$\\boxed{\\frac{T}{2}}$$", "id": "3082133"}, {"introduction": "Building on the foundational difference between the two calculi, this practice moves to a more general and practical task: converting a stochastic differential equation from one form to another. You will take a common model from financial mathematics, the geometric Brownian motion, written in the Stratonovich sense and derive its equivalent Itô representation. This exercise is crucial for developing the flexibility to work with models presented in either convention and for understanding how the underlying noise structure impacts the model's drift.", "problem": "Consider a one-dimensional Stochastic Differential Equation (SDE) in the Stratonovich sense driven by a standard Brownian motion (Wiener process) $W_t$ on a filtered probability space. Let $X_t$ solve the Stratonovich SDE\n$$\ndX_t \\;=\\; \\alpha\\,X_t\\,dt \\;+\\; \\beta\\,X_t \\circ dW_t,\n$$\nwhere $\\alpha$ and $\\beta$ are real constants. Starting from the definitions of the Itô integral (left-point Riemann sums) and the Stratonovich integral (symmetric midpoint Riemann sums), and using only fundamental properties such as quadratic variation of Brownian motion and the classical chain rule applicable to the Stratonovich integral, derive the Itô form\n$$\ndX_t \\;=\\; \\mu(X_t)\\,dt \\;+\\; \\sigma(X_t)\\,dW_t\n$$\nfor this process. Explicitly identify the corrected drift function $\\mu(X_t)$ that arises in the Itô representation.\n\nYour final answer must be the corrected drift $\\mu(X_t)$ as a single, closed-form analytic expression in terms of $\\alpha$, $\\beta$, and $X_t$. Do not include any equations or derivations in the final answer; provide only the expression. No rounding is required and no physical units are involved.", "solution": "The problem asks for the Itô drift term $\\mu(X_t)$ corresponding to a given Stratonovich SDE. We can derive this by using the fundamental Itô-Stratonovich conversion formula.\n\nThe general relationship between a Stratonovich SDE,\n$$\ndX_t = a(X_t) dt + b(X_t) \\circ dW_t\n$$\nand its equivalent Itô form,\n$$\ndX_t = \\mu(X_t) dt + \\sigma(X_t) dW_t\n$$\nis given by the conversion formula for the stochastic term:\n$$\nb(X_t) \\circ dW_t = b(X_t) dW_t + \\frac{1}{2} d[b(X), W]_t\n$$\nHere, $d[b(X), W]_t$ is the differential of the quadratic covariation between the process $b(X_t)$ and the Wiener process $W_t$. Using the rules of Itô calculus, this term is given by $d[b(X), W]_t = b'(X_t) b(X_t) dt$.\n\nSubstituting this back into the conversion formula, we get:\n$$\nb(X_t) \\circ dW_t = b(X_t) dW_t + \\frac{1}{2} b(X_t) b'(X_t) dt\n$$\nNow we can substitute this expression into the original Stratonovich SDE to find its Itô form:\n$$\ndX_t = a(X_t) dt + \\left( b(X_t) dW_t + \\frac{1}{2} b(X_t) b'(X_t) dt \\right)\n$$\nBy grouping the $dt$ terms, we get:\n$$\ndX_t = \\left( a(X_t) + \\frac{1}{2} b(X_t) b'(X_t) \\right) dt + b(X_t) dW_t\n$$\nComparing this with the general Itô form, we can identify the drift and diffusion coefficients:\n$$\n\\mu(X_t) = a(X_t) + \\frac{1}{2} b(X_t) b'(X_t)\n$$\n$$\n\\sigma(X_t) = b(X_t)\n$$\nFor the specific SDE given in the problem, we have the Stratonovich drift $a(X_t) = \\alpha X_t$ and the diffusion $b(X_t) = \\beta X_t$. The derivative of the diffusion coefficient is $b'(X_t) = \\beta$.\n\nPlugging these into the formula for the Itô drift $\\mu(X_t)$:\n$$\n\\mu(X_t) = (\\alpha X_t) + \\frac{1}{2} (\\beta X_t) (\\beta)\n$$\n$$\n\\mu(X_t) = \\alpha X_t + \\frac{1}{2} \\beta^2 X_t\n$$\nFactoring out $X_t$, we obtain the final expression for the corrected drift function:\n$$\n\\mu(X_t) = \\left(\\alpha + \\frac{1}{2} \\beta^2\\right) X_t\n$$", "answer": "$$ \\boxed{\\left(\\alpha + \\frac{1}{2} \\beta^2\\right) X_t} $$", "id": "3082176"}, {"introduction": "This final practice bridges the gap between analytical theory and computational practice, a vital skill for any modern practitioner. You are tasked with simulating the paths of a Stratonovich SDE using two different approaches: one based on converting to an Itô SDE, and another using a native Stratonovich numerical scheme. By implementing and comparing these methods, you will gain concrete insight into the numerical implications of your choice of calculus and the trade-offs between different simulation algorithms in terms of accuracy and implementation complexity.", "problem": "Consider the scalar Stratonovich stochastic differential equation (SDE)\n$$\ndX_t \\;=\\; f_S\\!\\left(X_t\\right)\\,dt \\;+\\; g\\!\\left(X_t\\right)\\,\\circ dW_t,\\quad X_0 = x_0,\n$$\nwhere $W_t$ is a standard Brownian motion and $\\circ$ denotes the Stratonovich integral. Your task is to design and implement a program that simulates sample paths of such an SDE by converting it to the Itô form, time-stepping with the Euler–Maruyama method, and interpreting the path back in the Stratonovich sense. You must also implement a native Stratonovich integrator based on a trapezoidal (Heun) scheme. Then, using both integrators, you will quantify and compare numerical behavior across a small test suite.\n\nBase your derivations and algorithm on the following foundational facts only:\n- The Stratonovich integral is defined as the limit of midpoint Riemann sums. For sufficiently smooth $g$, the Stratonovich chain rule holds: for a smooth function $F$, $dF(X_t) \\,=\\, F'(X_t)\\,\\circ dX_t$.\n- The Itô integral isometry and Itô calculus: the quadratic variation of Brownian motion satisfies $[W]_t \\,=\\, t$ and $dW_t^2 \\,=\\, dt$. For semimartingales, quadratic covariation is bilinear and satisfies $[X,W]_t \\,=\\, \\int_0^t dX_s\\,dW_s$ in the sense of Itô calculus.\n- The Euler–Maruyama method is the explicit time-stepping scheme for an Itô SDE $dX_t = f_I(X_t)\\,dt + g(X_t)\\,dW_t$, given by $X_{n+1} = X_n + f_I(X_n)\\,\\Delta t + g(X_n)\\,\\Delta W_n$, where $\\Delta W_n \\sim \\mathcal{N}(0,\\Delta t)$ and $\\Delta t = T/N$.\n\nFrom these bases alone, you must (i) derive the conversion from the Stratonovich SDE to an Itô SDE, (ii) specify and implement the Euler–Maruyama scheme for the converted Itô SDE, (iii) specify and implement a native Stratonovich Heun scheme that is consistent with the midpoint interpretation of the Stratonovich integral, and (iv) discuss the numerical implications of these two approaches, including strong convergence behavior in representative cases.\n\nYour program must:\n- Fix the pseudorandom number generator seed to $123456$ and use the same Brownian motion increments $\\{\\Delta W_n\\}_{n=0}^{N-1}$ across both integrators for each test case.\n- Implement a function that converts a given Stratonovich SDE to its Itô form using your derived formula and integrates it with Euler–Maruyama.\n- Implement a native Stratonovich Heun method (predictor–corrector with trapezoidal averaging in both drift and diffusion terms).\n- For the geometric Stratonovich SDE $dX_t = a\\,X_t\\,dt + b\\,X_t\\,\\circ dW_t$, use the exact Stratonovich solution $X_T = x_0\\,\\exp(a\\,T + b\\,W_T)$ to compute absolute terminal errors.\n- For a nonlinear trigonometric Stratonovich SDE, numerically assess the Stratonovich chain rule by comparing $F(X_T) - F(X_0)$ to a trapezoidal approximation of $\\int_0^T F'(X_t)\\,f_S(X_t)\\,dt + \\int_0^T F'(X_t)\\,g(X_t)\\,\\circ dW_t$ built consistently with your Heun path.\n\nTest suite:\n- Test A (geometric Stratonovich SDE, “happy path”): $a = 0.25$, $b = 0.6$, $x_0 = 0.9$, $T = 1.3$, $N = 20000$. Compute two floats: the absolute terminal error for the “convert to Itô + Euler–Maruyama” approach, and the absolute terminal error for the native Stratonovich Heun approach, both measured against the exact Stratonovich solution $X_T = x_0\\,\\exp(a\\,T + b\\,W_T)$.\n- Test B (nonlinear trigonometric Stratonovich SDE): $f_S(x) = -k\\,\\sin(x)$, $g(x) = \\sigma\\,\\cos(x)$ with $k = 1.7$, $\\sigma = 1.1$, $x_0 = 0.2$, $T = 0.8$, $N = 15000$. Produce two floats: the absolute difference $|X_T^{(\\text{It\\^o–Euler})} - X_T^{(\\text{Strat–Heun})}|$, and the absolute discrepancy in the Stratonovich chain rule for $F(x) = \\sin(x)$ computed along the Heun path using a trapezoidal rule in both the $dt$ and $\\circ dW$ integrals.\n- Test C (boundary case with no noise): $a = -0.4$, $b = 0$, $x_0 = 1.5$, $T = 1.0$, $N = 1000$, so $dX_t = a\\,X_t\\,dt$. Compute two floats: the absolute terminal error for the “convert to Itô + Euler–Maruyama” approach and for the Stratonovich Heun approach, both measured against the exact deterministic solution $X_T = x_0\\,e^{aT}$.\n\nFinal output format:\n- Your program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets, in the following order: $[\\text{A\\_ItoErr}, \\text{A\\_HeunErr}, \\text{B\\_MethodDiff}, \\text{B\\_ChainRuleResidual}, \\text{C\\_ItoErr}, \\text{C\\_HeunErr}]$. Each entry must be a real number (floating-point). No additional text should be printed.", "solution": "The problem requires the derivation, implementation, and comparison of two numerical integration schemes for a scalar Stratonovich stochastic differential equation (SDE). The analysis will be performed by first validating the problem's integrity and then proceeding to a complete theoretical and computational solution.\n\n### Problem Validation\n\nThe problem statement is a well-posed and scientifically grounded exercise in the field of computational stochastic calculus.\n- **Givens**:\n    - Stratonovich SDE: $dX_t = f_S(X_t)\\,dt + g(X_t)\\,\\circ dW_t$, $X_0 = x_0$.\n    - Foundational principles: Definition of Stratonovich integral via midpoint sums, Stratonovich chain rule, Itô calculus ($[W]_t = t$, $dW_t^2 = dt$), quadratic covariation properties, and the Euler–Maruyama formula for Itô SDEs.\n    - Implementation requirements: Fixed random seed ($123456$), shared Brownian increments, and specific implementations for an Itô-converted scheme and a native Stratonovich scheme.\n    - Test Suite: Three distinct test cases are specified with all necessary parameters:\n        1. Test A: Geometric SDE ($dX_t = a\\,X_t\\,dt + b\\,X_t\\,\\circ dW_t$) with $a=0.25$, $b=0.6$, $x_0=0.9$, $T=1.3$, $N=20000$.\n        2. Test B: Trigonometric SDE ($f_S(x) = -k\\,\\sin(x)$, $g(x) = \\sigma\\,\\cos(x)$) with $k=1.7$, $\\sigma=1.1$, $x_0=0.2$, $T=0.8$, $N=15000$.\n        3. Test C: Deterministic ODE ($dX_t = a\\,X_t\\,dt$) with $a=-0.4$, $b=0$, $x_0=1.5$, $T=1.0$, $N=1000$.\n- **Validation Verdict**: The problem is valid. It is scientifically sound, resting on established mathematical theory. It is well-posed, with all parameters, conditions, and objectives clearly and unambiguously defined. The tasks are formalizable and computationally feasible. The problem does not violate any of the invalidity criteria.\n\n### Theoretical Framework\n\n#### (i) Derivation of the Itô-Stratonovich Conversion Formula\n\nThe relationship between the Stratonovich integral ($\\circ dW_t$) and the Itô integral ($dW_t$) is central to this problem. A formal way to establish this is through the quadratic covariation between the process $g(X_t)$ and the Brownian motion $W_t$. The Stratonovich integral is defined in terms of the Itô integral and their covariation as:\n$$\n\\int_0^t g(X_s) \\circ dW_s = \\int_0^t g(X_s) \\,dW_s + \\frac{1}{2} [g(X), W]_t\n$$\nIn differential form, this is $g(X_t) \\circ dW_t = g(X_t) \\,dW_t + \\frac{1}{2} d[g(X), W]_t$.\n\nOur task is to evaluate the covariation term $d[g(X), W]_t$. Using the properties of quadratic variation and Itô's lemma, we can find the differential of $g(X_t)$:\n$$\ndg(X_t) = g'(X_t) dX_t + \\frac{1}{2} g''(X_t) (dX_t)^2\n$$\nThe covariation $d[g(X), W]_t$ is found by formally multiplying the differentials $dg(X_t)$ and $dW_t$ and applying the rules of Itô calculus ($dt \\cdot dt = 0$, $dt \\cdot dW_t = 0$, $dW_t \\cdot dW_t = dt$). To determine $dX_t$, we must assume an Itô form for the SDE, $dX_t = f_I(X_t) dt + g(X_t) dW_t$.\nSubstituting this into the expression for $dg(X_t)$ gives:\n$$\ndg(X_t) = g'(X_t) (f_I(X_t) dt + g(X_t) dW_t) + \\frac{1}{2} g''(X_t) (g(X_t) dW_t)^2\n$$\n$$\ndg(X_t) = \\left( g'(X_t) f_I(X_t) + \\frac{1}{2} g''(X_t) g(X_t)^2 \\right) dt + g'(X_t) g(X_t) dW_t\n$$\nThe quadratic covariation $d[g(X), W]_t$ isolates the terms from $dg(X_t)$ that covary with $dW_t$. This corresponds to the coefficient of the $dW_t$ term in $dg(X_t)$, multiplied by $dt$. More formally, $d[g(X), W]_t = (g'(X_t) g(X_t) dW_t) \\cdot dW_t = g'(X_t) g(X_t) dt$.\n\nSubstituting this result back into the definition of the Stratonovich differential:\n$$\ng(X_t) \\circ dW_t = g(X_t) \\,dW_t + \\frac{1}{2} g'(X_t) g(X_t) dt\n$$\nNow, we can convert the original Stratonovich SDE, $dX_t = f_S(X_t) dt + g(X_t) \\circ dW_t$, into its Itô equivalent by substituting the expression for $g(X_t) \\circ dW_t$:\n$$\ndX_t = f_S(X_t) dt + \\left( g(X_t) \\,dW_t + \\frac{1}{2} g'(X_t) g(X_t) dt \\right)\n$$\nGrouping the $dt$ terms, we arrive at the Itô form $dX_t = f_I(X_t) dt + g(X_t) dW_t$, where the Itô drift $f_I(X_t)$ is:\n$$\nf_I(X_t) = f_S(X_t) + \\frac{1}{2} g(X_t) g'(X_t)\n$$\nThis is the required conversion formula. The Itô diffusion coefficient remains $g(X_t)$.\n\n#### (ii) Euler–Maruyama Scheme for the Converted Itô SDE\n\nGiven the Itô SDE $dX_t = f_I(X_t) dt + g(X_t) dW_t$, the Euler–Maruyama method discretizes time into steps of size $\\Delta t = T/N$. The state at time $t_{n+1} = (n+1)\\Delta t$ is approximated from the state at $t_n = n\\Delta t$ as follows:\n$$\nX_{n+1} = X_n + f_I(X_n) \\Delta t + g(X_n) \\Delta W_n\n$$\nwhere $\\Delta W_n = W_{t_{n+1}} - W_{t_n}$ are independent random variables drawn from a normal distribution $\\mathcal{N}(0, \\Delta t)$. For our implementation, we use the derived Itô drift $f_I(X_n) = f_S(X_n) + \\frac{1}{2} g(X_n) g'(X_n)$. The algorithm is:\n1. Initialize $X_0 = x_0$.\n2. For $n = 0, 1, \\dots, N-1$:\n   a. Compute the drift $f_I(X_n) = f_S(X_n) + \\frac{1}{2}g(X_n)g'(X_n)$.\n   b. Compute the diffusion $g(X_n)$.\n   c. Update the state: $X_{n+1} = X_n + f_I(X_n) \\Delta t + g(X_n) \\Delta W_n$.\n3. The result is $X_N$, an approximation of $X_T$.\n\n#### (iii) Native Stratonovich Heun Scheme\n\nThe Heun method for Stratonovich SDEs is a predictor-corrector scheme that aligns with the midpoint interpretation of the Stratonovich integral. It can be viewed as applying the trapezoidal rule to both the deterministic and stochastic integrals.\nGiven the Stratonovich SDE $dX_t = f_S(X_t) dt + g(X_t) \\circ dW_t$, the scheme is:\n1. **Predictor Step:** First, an auxiliary state $\\bar{X}_{n+1}$ is estimated using an explicit Euler step.\n   $$\n   \\bar{X}_{n+1} = X_n + f_S(X_n) \\Delta t + g(X_n) \\Delta W_n\n   $$\n2. **Corrector Step:** The final state $X_{n+1}$ is computed by averaging the drift and diffusion functions evaluated at the current state $X_n$ and the predicted state $\\bar{X}_{n+1}$.\n   $$\n   X_{n+1} = X_n + \\frac{f_S(X_n) + f_S(\\bar{X}_{n+1})}{2} \\Delta t + \\frac{g(X_n) + g(\\bar{X}_{n+1})}{2} \\Delta W_n\n   $$\nThe algorithm is:\n1. Initialize $X_0 = x_0$.\n2. For $n = 0, 1, \\dots, N-1$:\n   a. Predict: $\\bar{X}_{n+1} = X_n + f_S(X_n) \\Delta t + g(X_n) \\Delta W_n$.\n   b. Correct: $X_{n+1} = X_n + \\frac{1}{2}(f_S(X_n) + f_S(\\bar{X}_{n+1})) \\Delta t + \\frac{1}{2}(g(X_n) + g(\\bar{X}_{n+1})) \\Delta W_n$.\n3. The result is $X_N \\approx X_T$.\n\n#### (iv) Numerical Implications and Comparison\n\n- **Order of Convergence:** The primary distinction between the two methods is their order of strong convergence. The Euler–Maruyama method has a strong order of $0.5$, meaning the terminal error $|X_T - X_N|$ scales as $\\mathcal{O}(\\sqrt{\\Delta t})$. The Stratonovich Heun scheme has a strong order of $1.0$ for scalar SDEs, so its error scales as $\\mathcal{O}(\\Delta t)$. This implies that for a given step size $\\Delta t$, the Heun method should be substantially more accurate.\n- **Chain Rule and Modeling:** The Stratonovich chain rule mirrors the form of the classical chain rule, $dF(X_t) = F'(X_t) \\circ dX_t$. This is often preferred in physical modeling where the noise term represents a smoothed, physically realistic process rather than a purely mathematical abstraction. In contrast, the Itô chain rule includes a second-order correction term, which can be less intuitive. The \"convert to Itô\" approach effectively hides this complexity within the modified drift term.\n- **Computational Cost:** The Itô-Euler method requires one evaluation of $f_S$, $g$, and $g'$ per step. The Stratonovich-Heun method requires two evaluations of $f_S$ and $g$ per step but does not require the derivative $g'$. Thus, the Heun method's cost per step is roughly double that of Euler's, but its higher accuracy often allows for a larger step size $\\Delta t$ to achieve the same error, potentially making it more efficient overall.\n- **Deterministic Limit:** As seen in Test C where $g(x)=0$, the SDE reduces to an ordinary differential equation (ODE). The Itô-Euler method becomes the forward Euler method (first-order accurate for ODEs), while the Stratonovich-Heun scheme becomes the improved Euler/trapezoidal method (second-order accurate for ODEs). This highlights the higher-order nature of the Heun scheme.\n\n### Application to Test Cases\n\n**Test A: Geometric Stratonovich SDE**\n- SDE: $dX_t = a X_t dt + b X_t \\circ dW_t$.\n- Functions: $f_S(x) = a x$, $g(x) = b x$.\n- Derivative: $g'(x) = b$.\n- Itô drift: $f_I(x) = a x + \\frac{1}{2} (b x)(b) = (a + \\frac{1}{2} b^2) x$.\n- Exact solution: $X_T = x_0 \\exp(a T + b W_T)$, where $W_T = \\sum_{n=0}^{N-1} \\Delta W_n$.\n\n**Test B: Nonlinear Trigonometric SDE**\n- Functions: $f_S(x) = -k \\sin(x)$, $g(x) = \\sigma \\cos(x)$.\n- Derivative: $g'(x) = -\\sigma \\sin(x)$.\n- Itô drift: $f_I(x) = -k \\sin(x) + \\frac{1}{2} (\\sigma \\cos(x))(-\\sigma \\sin(x)) = -k \\sin(x) - \\frac{1}{2} \\sigma^2 \\sin(x) \\cos(x)$.\n- Chain rule test: For $F(x) = \\sin(x)$, $F'(x) = \\cos(x)$. The chain rule implies $F(X_T) - F(X_0) = \\int_0^T \\cos(X_t)(-k \\sin(X_t)) dt + \\int_0^T \\cos(X_t)(\\sigma \\cos(X_t)) \\circ dW_t$. The numerical residual measures the accuracy of approximating this identity using the trapezoidal rule along the Heun path.\n\n**Test C: Deterministic ODE**\n- Functions: $f_S(x) = a x$, $g(x) = 0$.\n- Derivative: $g'(x) = 0$.\n- Itô drift: $f_I(x) = a x + 0 = a x$. $f_I = f_S$.\n- Exact solution: $X_T = x_0 \\exp(a T)$.\n- The Itô-Euler scheme becomes the forward Euler method. The Stratonovich-Heun scheme becomes the trapezoidal (improved Euler) method.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem by implementing and comparing two numerical methods for Stratonovich SDEs\n    across a suite of three test cases.\n    \"\"\"\n    \n    # Global settings\n    RNG_SEED = 123456\n    rng = np.random.default_rng(RNG_SEED)\n\n    def generate_brownian_increments(T, N):\n        \"\"\"Generates Brownian motion increments.\"\"\"\n        delta_t = T / N\n        return rng.normal(0.0, np.sqrt(delta_t), N)\n\n    def solve_ito_euler(f_S, g, g_prime, x0, T, N, delta_W):\n        \"\"\"\n        Solves a Stratonovich SDE by converting it to Itô form and using the Euler-Maruyama method.\n        \"\"\"\n        x = x0\n        delta_t = T / N\n        \n        # Itô drift\n        def f_I(val):\n            return f_S(val) + 0.5 * g(val) * g_prime(val)\n\n        for dW in delta_W:\n            x = x + f_I(x) * delta_t + g(x) * dW\n        return x\n\n    def solve_strat_heun(f_S, g, x0, T, N, delta_W, return_path=False):\n        \"\"\"\n        Solves a Stratonovich SDE using the native Heun (predictor-corrector) method.\n        \"\"\"\n        path = np.zeros(N + 1)\n        path[0] = x0\n        delta_t = T / N\n\n        for i in range(N):\n            # Predictor step\n            x_n = path[i]\n            x_bar = x_n + f_S(x_n) * delta_t + g(x_n) * delta_W[i]\n            \n            # Corrector step\n            f_avg = 0.5 * (f_S(x_n) + f_S(x_bar))\n            g_avg = 0.5 * (g(x_n) + g(x_bar))\n            path[i+1] = x_n + f_avg * delta_t + g_avg * delta_W[i]\n        \n        if return_path:\n            return path\n        return path[-1]\n\n    results = []\n\n    # --- Test A: Geometric Stratonovich SDE ---\n    a_A, b_A, x0_A, T_A, N_A = 0.25, 0.6, 0.9, 1.3, 20000\n    \n    fS_A = lambda x: a_A * x\n    g_A = lambda x: b_A * x\n    g_prime_A = lambda x: b_A\n    \n    delta_W_A = generate_brownian_increments(T_A, N_A)\n    W_T_A = np.sum(delta_W_A)\n\n    x_T_exact_A = x0_A * np.exp(a_A * T_A + b_A * W_T_A)\n\n    x_T_ito_A = solve_ito_euler(fS_A, g_A, g_prime_A, x0_A, T_A, N_A, delta_W_A)\n    x_T_heun_A = solve_strat_heun(fS_A, g_A, x0_A, T_A, N_A, delta_W_A)\n    \n    error_ito_A = np.abs(x_T_ito_A - x_T_exact_A)\n    error_heun_A = np.abs(x_T_heun_A - x_T_exact_A)\n    \n    results.extend([error_ito_A, error_heun_A])\n\n    # --- Test B: Nonlinear Trigonometric SDE ---\n    k_B, sigma_B, x0_B, T_B, N_B = 1.7, 1.1, 0.2, 0.8, 15000\n    \n    fS_B = lambda x: -k_B * np.sin(x)\n    g_B = lambda x: sigma_B * np.cos(x)\n    g_prime_B = lambda x: -sigma_B * np.sin(x)\n\n    delta_W_B = generate_brownian_increments(T_B, N_B)\n    delta_t_B = T_B / N_B\n\n    x_T_ito_B = solve_ito_euler(fS_B, g_B, g_prime_B, x0_B, T_B, N_B, delta_W_B)\n    path_heun_B = solve_strat_heun(fS_B, g_B, x0_B, T_B, N_B, delta_W_B, return_path=True)\n    x_T_heun_B = path_heun_B[-1]\n    \n    method_diff_B = np.abs(x_T_ito_B - x_T_heun_B)\n    \n    # Chain rule verification\n    F = np.sin\n    F_prime = np.cos\n    \n    # LHS of chain rule: F(X_T) - F(X_0)\n    chain_rule_lhs = F(x_T_heun_B) - F(x0_B)\n    \n    # RHS: ∫ F'(X)f_S(X)dt + ∫ F'(X)g(X)∘dW\n    h1 = lambda x: F_prime(x) * fS_B(x) # Integrand for dt\n    h2 = lambda x: F_prime(x) * g_B(x)  # Integrand for ∘dW\n    \n    h1_path = h1(path_heun_B)\n    h2_path = h2(path_heun_B)\n    \n    # Trapezoidal rule for both integrals\n    integral_dt = np.sum(0.5 * (h1_path[:-1] + h1_path[1:]) * delta_t_B)\n    integral_dW = np.sum(0.5 * (h2_path[:-1] + h2_path[1:]) * delta_W_B)\n    \n    chain_rule_rhs = integral_dt + integral_dW\n    chain_rule_residual = np.abs(chain_rule_lhs - chain_rule_rhs)\n\n    results.extend([method_diff_B, chain_rule_residual])\n\n    # --- Test C: Deterministic ODE (boundary case) ---\n    a_C, b_C, x0_C, T_C, N_C = -0.4, 0.0, 1.5, 1.0, 1000\n\n    fS_C = lambda x: a_C * x\n    g_C = lambda x: b_C * x # which is always 0\n    g_prime_C = lambda x: b_C # which is always 0\n    \n    # dW is generated but will be multiplied by 0\n    delta_W_C = generate_brownian_increments(T_C, N_C)\n    \n    x_T_exact_C = x0_C * np.exp(a_C * T_C)\n    \n    x_T_ito_C = solve_ito_euler(fS_C, g_C, g_prime_C, x0_C, T_C, N_C, delta_W_C)\n    x_T_heun_C = solve_strat_heun(fS_C, g_C, x0_C, T_C, N_C, delta_W_C)\n    \n    error_ito_C = np.abs(x_T_ito_C - x_T_exact_C)\n    error_heun_C = np.abs(x_T_heun_C - x_T_exact_C)\n    \n    results.extend([error_ito_C, error_heun_C])\n\n    # Final output formatting\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3082192"}]}