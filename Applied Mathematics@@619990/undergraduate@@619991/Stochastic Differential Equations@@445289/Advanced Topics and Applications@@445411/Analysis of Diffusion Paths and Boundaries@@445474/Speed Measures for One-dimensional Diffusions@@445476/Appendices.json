{"hands_on_practices": [{"introduction": "The first step in working with any new mathematical tool is to become proficient in its fundamental mechanics. This exercise provides a direct application of the core definitions of the scale and speed measures. By starting with the stochastic differential equation for a process with linear drift, you will derive the scale and speed densities from the infinitesimal generator, solidifying your understanding of the relationship between these key objects. [@problem_id:3074935]", "problem": "Consider the one-dimensional diffusion process governed by the stochastic differential equation (SDE) $dX_{t}=\\alpha X_{t}\\,dt+\\sigma\\,dW_{t}$ on the entire real line $\\mathbb{R}$, where $\\alpha\\in\\mathbb{R}$ and $\\sigma0$ are constants, and $W_{t}$ is a standard Brownian motion. Let $\\mathcal{L}$ denote the infinitesimal generator of this diffusion acting on twice continuously differentiable functions $f\\in C^{2}(\\mathbb{R})$. A scale function $s$ is a strictly increasing function with $s\\in C^{2}(\\mathbb{R})$ that satisfies $\\mathcal{L}s=0$. The speed measure $m$ is the unique positive measure (up to a multiplicative constant fixed by the choice of scale) such that the generator can be written in Sturm–Liouville form as $\\mathcal{L}f=\\frac{d}{dm}\\left(\\frac{d}{ds}f\\right)$ for all $f\\in C_{c}^{2}(\\mathbb{R})$, where $\\frac{d}{ds}f=\\frac{f'(x)}{s'(x)}$ and $\\frac{d}{dm}g=\\frac{1}{m'(x)}\\frac{d}{dx}g(x)$ when $m$ has a density $m'(x)$ with respect to the Lebesgue measure.\n\nUsing only these foundational definitions and the generator associated with the given SDE, derive explicit expressions for the derivative of the scale function $s'(x)$ and the speed density $m'(x)$ (the density of $m$ with respect to the Lebesgue measure), under the normalization $s'(0)=1$. Express your final answer as a pair $\\big(s'(x),\\,m'(x)\\big)$ in closed form.", "solution": "The problem is valid as it is scientifically grounded in the theory of stochastic differential equations, well-posed with sufficient and consistent information, and objectively formulated.\n\nThe one-dimensional diffusion process is described by the stochastic differential equation (SDE):\n$$dX_{t} = \\alpha X_{t}\\,dt + \\sigma\\,dW_{t}$$\nThis is an Itô process of the form $dX_t = b(X_t)dt + \\sigma(X_t)dW_t$, with a drift coefficient $b(x) = \\alpha x$ and a constant diffusion coefficient $\\sigma(x) = \\sigma$.\n\nThe infinitesimal generator $\\mathcal{L}$ of this diffusion process, acting on a function $f \\in C^{2}(\\mathbb{R})$, is given by the general formula:\n$$\\mathcal{L}f(x) = b(x)f'(x) + \\frac{1}{2}\\sigma(x)^{2}f''(x)$$\nSubstituting the specific drift and diffusion coefficients yields:\n$$\\mathcal{L}f(x) = \\alpha x f'(x) + \\frac{\\sigma^2}{2} f''(x)$$\n\nThe first step is to find the scale function $s(x)$. The problem defines a scale function as a strictly increasing function $s \\in C^{2}(\\mathbb{R})$ that satisfies the equation $\\mathcal{L}s = 0$. Applying the generator $\\mathcal{L}$ to the scale function $s(x)$, we obtain a second-order ordinary differential equation (ODE):\n$$\\mathcal{L}s(x) = \\alpha x s'(x) + \\frac{\\sigma^2}{2} s''(x) = 0$$\nLet $u(x) = s'(x)$. Then $s''(x) = u'(x)$, and the ODE becomes a first-order linear ODE for $u(x)$:\n$$\\frac{\\sigma^2}{2} u'(x) + \\alpha x u(x) = 0$$\nThis is a separable equation:\n$$\\frac{\\sigma^2}{2} \\frac{du}{dx} = -\\alpha x u$$\n$$\\frac{du}{u} = -\\frac{2\\alpha x}{\\sigma^2} dx$$\nIntegrating both sides gives:\n$$\\int \\frac{1}{u} du = \\int -\\frac{2\\alpha x}{\\sigma^2} dx$$\n$$\\ln|u(x)| = -\\frac{2\\alpha}{\\sigma^2} \\frac{x^2}{2} + C_0 = -\\frac{\\alpha x^2}{\\sigma^2} + C_0$$\nwhere $C_0$ is the constant of integration. Exponentiating both sides, we get:\n$$|u(x)| = \\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2} + C_0\\right) = e^{C_0} \\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2}\\right)$$\nThis implies $u(x) = C \\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2}\\right)$, where $C = \\pm e^{C_0}$ is an arbitrary non-zero constant. Since $u(x) = s'(x)$ and the scale function $s(x)$ must be strictly increasing, we must have $s'(x) > 0$ for all $x \\in \\mathbb{R}$. The exponential term is always positive, so we require $C > 0$.\nThe problem provides a normalization condition $s'(0) = 1$. We apply this to find the constant $C$:\n$$s'(0) = C \\exp\\left(-\\frac{\\alpha(0)^2}{\\sigma^2}\\right) = C \\exp(0) = C$$\nThus, $C = 1$. The derivative of the scale function is:\n$$s'(x) = \\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2}\\right)$$\n\nThe second step is to find the speed density $m'(x)$. The problem states that the generator can be written in the Sturm-Liouville form $\\mathcal{L}f = \\frac{d}{dm}\\left(\\frac{d}{ds}f\\right)$. Using the provided definitions, this becomes:\n$$\\mathcal{L}f(x) = \\frac{1}{m'(x)} \\frac{d}{dx}\\left(\\frac{f'(x)}{s'(x)}\\right)$$\nWe now have two expressions for $\\mathcal{L}f(x)$. Equating them gives:\n$$\\alpha x f'(x) + \\frac{\\sigma^2}{2} f''(x) = \\frac{1}{m'(x)} \\frac{d}{dx}\\left(\\frac{f'(x)}{s'(x)}\\right)$$\nTo find $m'(x)$, we can rearrange this equation:\n$$m'(x)\\left(\\alpha x f'(x) + \\frac{\\sigma^2}{2} f''(x)\\right) = \\frac{d}{dx}\\left(\\frac{f'(x)}{s'(x)}\\right)$$\nUsing the quotient rule on the right-hand side:\n$$\\frac{d}{dx}\\left(\\frac{f'(x)}{s'(x)}\\right) = \\frac{f''(x)s'(x) - f'(x)s''(x)}{[s'(x)]^2} = \\frac{f''(x)}{s'(x)} - \\frac{s''(x)}{[s'(x)]^2}f'(x)$$\nSubstituting this back into the equation:\n$$m'(x)\\alpha x f'(x) + m'(x)\\frac{\\sigma^2}{2} f''(x) = \\frac{1}{s'(x)}f''(x) - \\frac{s''(x)}{[s'(x)]^2}f'(x)$$\nThis equality must hold for any function $f \\in C_c^2(\\mathbb{R})$. This implies that the coefficients of $f'(x)$ and $f''(x)$ on both sides of the equation must be equal.\n\nEquating the coefficients of $f''(x)$:\n$$m'(x)\\frac{\\sigma^2}{2} = \\frac{1}{s'(x)}$$\nSolving for $m'(x)$ directly gives the speed density in terms of the derivative of the scale function:\n$$m'(x) = \\frac{2}{\\sigma^2 s'(x)}$$\nAs a consistency check, we can equate the coefficients of $f'(x)$:\n$$m'(x)\\alpha x = -\\frac{s''(x)}{[s'(x)]^2}$$\nSubstituting $m'(x) = \\frac{2}{\\sigma^2 s'(x)}$ into this equation gives:\n$$\\frac{2\\alpha x}{\\sigma^2 s'(x)} = -\\frac{s''(x)}{[s'(x)]^2}$$\nMultiplying by $[s'(x)]^2$ yields:\n$$\\frac{2\\alpha x}{\\sigma^2} s'(x) = -s''(x)$$\n$$\\frac{\\sigma^2}{2} s''(x) + \\alpha x s'(x) = 0$$\nThis is precisely the ODE for $s'(x)$ that we solved earlier, confirming the consistency of our expressions.\n\nFinally, we substitute the expression for $s'(x)$ into the formula for $m'(x)$:\n$$m'(x) = \\frac{2}{\\sigma^2 s'(x)} = \\frac{2}{\\sigma^2 \\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2}\\right)}$$\n$$m'(x) = \\frac{2}{\\sigma^2} \\exp\\left(\\frac{\\alpha x^2}{\\sigma^2}\\right)$$\nThe required pair is composed of the derivative of the scale function, $s'(x)$, and the speed density, $m'(x)$.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\ns'(x),  m'(x)\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\exp\\left(-\\frac{\\alpha x^2}{\\sigma^2}\\right),  \\frac{2}{\\sigma^2} \\exp\\left(\\frac{\\alpha x^2}{\\sigma^2}\\right)\n\\end{pmatrix}\n}\n$$", "id": "3074935"}, {"introduction": "With the mechanics of calculation in hand, we can now move to a deeper conceptual understanding of what the speed measure represents. This practice challenges you to compare how the speed measure behaves for different canonical diffusions, including Geometric Brownian Motion and the Cox-Ingersoll-Ross process. By analyzing how multiplicative noise affects the speed density, you will develop an intuition for how $m'(x)$ acts as a weighting function, revealing where the process is likely to spend its time. [@problem_id:3074956]", "problem": "Consider one-dimensional Itô diffusions on an interval with absorbing or reflecting boundaries, described by the stochastic differential equation $dX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t$, where $b(x)$ is the drift, $\\sigma(x)$ is the diffusion coefficient, and $W_t$ is standard Brownian Motion. The infinitesimal generator and the forward equation determine the scale function and speed measure, which together encode how the diffusion moves spatially and how time is weighted locally. Using only core definitions of the generator, scale function, and speed measure for one-dimensional diffusions, analyze how the presence of multiplicative noise modifies the speed measure relative to constant-noise diffusions. In particular, examine Geometric Brownian Motion (GBM), defined by $dX_t = \\mu X_t\\,dt + \\sigma X_t\\,dW_t$ on $(0,\\infty)$, and the Cox–Ingersoll–Ross (CIR) process, defined by $dX_t = \\kappa(\\theta - X_t)\\,dt + \\sigma \\sqrt{X_t}\\,dW_t$ on $[0,\\infty)$. Identify the correct statement(s) below about the functional form of the speed measure density $m'(x)$ (up to proportionality constants) and the interpretation of the spatial weighting that $m'(x)$ induces, in comparison with constant-noise diffusions.\n\nA. For Geometric Brownian Motion (GBM) with $dX_t = \\mu X_t\\,dt + \\sigma X_t\\,dW_t$ on $(0,\\infty)$, the speed measure density is $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$. For constant-noise Brownian Motion with zero drift $dY_t = \\sigma\\,dW_t$, the speed measure density is spatially uniform. Interpretation: multiplicative noise in GBM introduces a power-law spatial weighting that down-weights large $x$ unless $\\mu$ is sufficiently large relative to $\\sigma^2$, and up-weights large $x$ when $(2\\mu/\\sigma^2) - 2  0$.\n\nB. Multiplicative noise does not affect the speed measure: both Geometric Brownian Motion (GBM) and Cox–Ingersoll–Ross (CIR) have spatially uniform $m'(x)$, identical to constant-noise diffusions.\n\nC. For the Cox–Ingersoll–Ross (CIR) process with $dX_t = \\kappa(\\theta - X_t)\\,dt + \\sigma \\sqrt{X_t}\\,dW_t$ on $[0,\\infty)$, the speed measure density is $m'(x) \\propto x^{(2\\kappa\\theta/\\sigma^2) - 1}\\,e^{-(2\\kappa/\\sigma^2)x}$. Interpretation: multiplicative square-root noise creates a polynomial factor that increases weighting near $0$ when $2\\kappa\\theta/\\sigma^2  1$ and decreases it when $2\\kappa\\theta/\\sigma^2  1$, while the exponential factor reflects mean reversion away from large $x$.\n\nD. In the Cox–Ingersoll–Ross (CIR) process, the speed measure density is $m'(x) \\propto e^{+(2\\kappa/\\sigma^2)x}$, showing heavier weighting at large $x$ due to multiplicative noise; near $x=0$ there is no special weighting.\n\nE. The speed measure coincides with the stationary distribution density. Therefore Geometric Brownian Motion (GBM) has lognormal $m'(x)$ and Cox–Ingersoll–Ross (CIR) has a Gamma $m'(x)$.\n\nSelect all correct options.", "solution": "The problem statement is first validated for scientific soundness, self-consistency, and clarity.\n\n**Step 1: Extract Givens**\n-   The general form of the one-dimensional Itô diffusion is $dX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t$.\n-   $b(x)$ is the drift coefficient.\n-   $\\sigma(x)$ is the diffusion coefficient.\n-   $W_t$ is a standard Wiener process (Brownian Motion).\n-   The task concerns the scale function and speed measure, which are determined by the infinitesimal generator.\n-   Specific processes to analyze are:\n    1.  Geometric Brownian Motion (GBM) on $(0,\\infty)$: $dX_t = \\mu X_t\\,dt + \\sigma X_t\\,dW_t$.\n    2.  Cox–Ingersoll–Ross (CIR) process on $[0,\\infty)$: $dX_t = \\kappa(\\theta - X_t)\\,dt + \\sigma \\sqrt{X_t}\\,dW_t$.\n-   The question asks for the functional form of the speed measure density, $m'(x)$, and its interpretation in comparison to constant-noise diffusions.\n\n**Step 2: Validate Using Extracted Givens**\n-   **Scientific Grounding**: The problem is grounded in the established mathematical theory of stochastic differential equations. The concepts of drift, diffusion, generator, scale function, and speed measure are standard for one-dimensional diffusions. GBM and CIR are canonical, well-studied models. This is scientifically sound.\n-   **Well-Posedness**: The problem is well-posed. Given the drift $b(x)$ and diffusion $\\sigma(x)$, the scale function and speed measure are uniquely defined up to proportionality constants, allowing for a definite solution.\n-   **Objectivity**: The problem is stated in precise, objective mathematical language.\n-   **Completeness and Consistency**: The problem statement is self-contained for an expert in the field. It relies on the standard definitions of the scale function density and speed measure density, which are assumed known.\n-   No other flaws from the validation checklist are present.\n\n**Step 3: Verdict and Action**\nThe problem is **valid**. The solution will be derived by applying the core definitions to the specified stochastic processes.\n\n**Derivation**\n\nFor a general one-dimensional Itô diffusion $dX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t$, the scale density $s'(x)$ and the speed measure density $m'(x)$ are defined (up to proportionality constants) as follows. The scale density $s'(x)$ is given by:\n$$\ns'(x) \\propto \\exp\\left( - \\int^x \\frac{2b(y)}{\\sigma(y)^2} dy \\right)\n$$\nThe speed measure density $m'(x)$ is then defined in terms of the scale density and the diffusion coefficient:\n$$\nm'(x) \\propto \\frac{1}{\\sigma(x)^2 s'(x)}\n$$\nThe speed measure density is proportional to the stationary distribution of the process, should one exist. It describes the long-term average time the process spends in an infinitesimal neighborhood of a point $x$.\n\n**Case 1: Constant-Noise Brownian Motion (Reference Case)**\nFor a process $dY_t = \\sigma\\,dW_t$, we have drift $b(y)=0$ and diffusion $\\sigma(y)=\\sigma$ (a constant).\nThe scale density is:\n$$\ns'(x) \\propto \\exp\\left( - \\int^x \\frac{2 \\cdot 0}{\\sigma^2} dy \\right) = \\exp(0) = 1\n$$\nThe speed measure density is:\n$$\nm'(x) \\propto \\frac{1}{\\sigma^2 s'(x)} = \\frac{1}{\\sigma^2 \\cdot 1} = \\frac{1}{\\sigma^2}\n$$\nThus, $m'(x) \\propto 1$, meaning the speed measure density is spatially uniform.\n\n**Case 2: Geometric Brownian Motion (GBM)**\nFor GBM, $dX_t = \\mu X_t\\,dt + \\sigma X_t\\,dW_t$, we have drift $b(x) = \\mu x$ and diffusion $\\sigma(x) = \\sigma x$.\nThe integral in the scale density expression is:\n$$\n- \\int^x \\frac{2b(y)}{\\sigma(y)^2} dy = - \\int^x \\frac{2\\mu y}{(\\sigma y)^2} dy = - \\int^x \\frac{2\\mu}{\\sigma^2 y} dy = -\\frac{2\\mu}{\\sigma^2} \\ln(x) = \\ln\\left(x^{-2\\mu/\\sigma^2}\\right)\n$$\nSo, the scale density is $s'(x) \\propto x^{-2\\mu/\\sigma^2}$.\nThe speed measure density is:\n$$\nm'(x) \\propto \\frac{1}{\\sigma(x)^2 s'(x)} \\propto \\frac{1}{(\\sigma x)^2 \\cdot x^{-2\\mu/\\sigma^2}} = \\frac{1}{\\sigma^2 x^2 \\cdot x^{-2\\mu/\\sigma^2}} = \\frac{1}{\\sigma^2} x^{(2\\mu/\\sigma^2) - 2}\n$$\nTherefore, for GBM, $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$.\n\n**Case 3: Cox–Ingersoll–Ross (CIR) Process**\nFor the CIR process, $dX_t = \\kappa(\\theta - X_t)\\,dt + \\sigma \\sqrt{X_t}\\,dW_t$, we have drift $b(x) = \\kappa(\\theta - x)$ and diffusion $\\sigma(x) = \\sigma\\sqrt{x}$.\nThe integral in the scale density expression is:\n$$\n- \\int^x \\frac{2b(y)}{\\sigma(y)^2} dy = - \\int^x \\frac{2\\kappa(\\theta - y)}{(\\sigma \\sqrt{y})^2} dy = - \\frac{2\\kappa}{\\sigma^2} \\int^x \\left(\\frac{\\theta}{y} - 1\\right) dy\n$$\n$$\n= - \\frac{2\\kappa}{\\sigma^2} \\left( \\theta\\ln(x) - x \\right) = \\frac{2\\kappa}{\\sigma^2}x - \\frac{2\\kappa\\theta}{\\sigma^2}\\ln(x) = \\ln\\left(e^{(2\\kappa/\\sigma^2)x}\\right) + \\ln\\left(x^{-2\\kappa\\theta/\\sigma^2}\\right)\n$$\nSo, the scale density is $s'(x) \\propto x^{-2\\kappa\\theta/\\sigma^2} e^{(2\\kappa/\\sigma^2)x}$.\nThe speed measure density is:\n$$\nm'(x) \\propto \\frac{1}{\\sigma(x)^2 s'(x)} \\propto \\frac{1}{(\\sigma\\sqrt{x})^2 \\cdot s'(x)} = \\frac{1}{\\sigma^2 x \\cdot x^{-2\\kappa\\theta/\\sigma^2} e^{(2\\kappa/\\sigma^2)x}}\n$$\n$$\n= \\frac{1}{\\sigma^2} \\frac{1}{x^{1-2\\kappa\\theta/\\sigma^2} e^{(2\\kappa/\\sigma^2)x}} = \\frac{1}{\\sigma^2} x^{(2\\kappa\\theta/\\sigma^2) - 1} e^{-(2\\kappa/\\sigma^2)x}\n$$\nTherefore, for the CIR process, $m'(x) \\propto x^{(2\\kappa\\theta/\\sigma^2) - 1} e^{-(2\\kappa/\\sigma^2)x}$. This is the density of a Gamma distribution.\n\n**Option-by-Option Analysis**\n\nA. For Geometric Brownian Motion (GBM) with $dX_t = \\mu X_t\\,dt + \\sigma X_t\\,dW_t$ on $(0,\\infty)$, the speed measure density is $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$. For constant-noise Brownian Motion with zero drift $dY_t = \\sigma\\,dW_t$, the speed measure density is spatially uniform. Interpretation: multiplicative noise in GBM introduces a power-law spatial weighting that down-weights large $x$ unless $\\mu$ is sufficiently large relative to $\\sigma^2$, and up-weights large $x$ when $(2\\mu/\\sigma^2) - 2 > 0$.\n- The derived formula for GBM is $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$. This matches.\n- The derived formula for constant-noise BM is $m'(x) \\propto 1$, which is spatially uniform. This matches.\n- The interpretation is based on the sign of the exponent $(2\\mu/\\sigma^2) - 2$. If the exponent is negative, $m'(x)$ decreases for large $x$ (down-weighting). If it is positive, $m'(x)$ increases for large $x$ (up-weighting). The condition for up-weighting is precisely $(2\\mu/\\sigma^2) - 2 > 0$. This interpretation is correct.\n- **Verdict: Correct.**\n\nB. Multiplicative noise does not affect the speed measure: both Geometric Brownian Motion (GBM) and Cox–Ingersoll–Ross (CIR) have spatially uniform $m'(x)$, identical to constant-noise diffusions.\n- Our derivations show that the speed measures for both GBM and CIR are functions of $x$ and are not spatially uniform. For GBM, $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$. For CIR, $m'(x) \\propto x^{(\\dots)}e^{-(\\dots)x}$. This statement is patently false.\n- **Verdict: Incorrect.**\n\nC. For the Cox–Ingersoll–Ross (CIR) process with $dX_t = \\kappa(\\theta - X_t)\\,dt + \\sigma \\sqrt{X_t}\\,dW_t$ on $[0,\\infty)$, the speed measure density is $m'(x) \\propto x^{(2\\kappa\\theta/\\sigma^2) - 1}\\,e^{-(2\\kappa/\\sigma^2)x}$. Interpretation: multiplicative square-root noise creates a polynomial factor that increases weighting near $0$ when $2\\kappa\\theta/\\sigma^2  1$ and decreases it when $2\\kappa\\theta/\\sigma^2 > 1$, while the exponential factor reflects mean reversion away from large $x$.\n- The derived formula for the CIR speed measure is $m'(x) \\propto x^{(2\\kappa\\theta/\\sigma^2) - 1} e^{-(2\\kappa/\\sigma^2)x}$. This matches.\n- The interpretation of the polynomial term $x^{(2\\kappa\\theta/\\sigma^2) - 1}$ near $x = 0$: if the exponent $(2\\kappa\\theta/\\sigma^2) - 1  0$ (i.e., $2\\kappa\\theta/\\sigma^2  1$), then $m'(x) \\to \\infty$ as $x \\to 0^+$, indicating high weighting near the origin. If the exponent is positive (i.e., $2\\kappa\\theta/\\sigma^2 > 1$), then $m'(x) \\to 0$ as $x \\to 0^+$, indicating low weighting. This is correct.\n- The exponential factor $e^{-(2\\kappa/\\sigma^2)x}$ causes rapid decay for large $x$, which keeps the process from diverging to infinity. This is a consequence of the mean-reverting drift $b(x) = \\kappa(\\theta-x)$, which pulls the process back towards $\\theta$. The interpretation is correct.\n- **Verdict: Correct.**\n\nD. In the Cox–Ingersoll–Ross (CIR) process, the speed measure density is $m'(x) \\propto e^{+(2\\kappa/\\sigma^2)x}$, showing heavier weighting at large $x$ due to multiplicative noise; near $x=0$ there is no special weighting.\n- The derived formula is $m'(x) \\propto x^{(2\\kappa\\theta/\\sigma^2) - 1} e^{-(2\\kappa/\\sigma^2)x}$. The option presents an incorrect functional form (wrong sign in the exponent, missing polynomial factor). This leads to a completely wrong interpretation.\n- **Verdict: Incorrect.**\n\nE. The speed measure coincides with the stationary distribution density. Therefore Geometric Brownian Motion (GBM) has lognormal $m'(x)$ and Cox–Ingersoll–Ross (CIR) has a Gamma $m'(x)$.\n- The statement that the speed measure *coincides* with the stationary distribution density is imprecise; they are *proportional*, $m'(x) \\propto \\pi(x)$, and the stationary density $\\pi(x)$ must be normalizable (i.e., have a finite integral), which is not a requirement for $m'(x)$.\n- The claim that the speed measure for GBM is lognormal is false. Our derivation shows $m'(x) \\propto x^{(2\\mu/\\sigma^2) - 2}$, which is a power-law form. The distribution of $X_t$ at a fixed time $t$ is lognormal, but this is distinct from the speed measure or the stationary distribution.\n- The claim that the CIR speed measure has a Gamma form is correct, as shown by our derivation.\n- However, since the initial premise is imprecise and the conclusion about GBM is incorrect, the entire statement is flawed.\n- **Verdict: Incorrect.**", "answer": "$$\\boxed{AC}$$", "id": "3074956"}, {"introduction": "The true power of the scale and speed measures lies in their applications, one of the most important being the calculation of first passage times. This hands-on problem guides you through computing the mean exit time for the mean-reverting Ornstein-Uhlenbeck process from a finite interval. You will use the derived speed measure within an integral representation involving a Green's function, bridging the gap from abstract theory to a concrete, computable quantity through numerical implementation. [@problem_id:3074928]", "problem": "Consider the one-dimensional Ornstein–Uhlenbeck diffusion defined by the stochastic differential equation $dX_t = -\\theta X_t\\,dt + \\sigma\\,dW_t$, where $W_t$ is a standard Wiener process, $\\theta  0$ is the mean-reversion rate, and $\\sigma  0$ is the volatility. For a fixed interval $(-L,L)$ with $L  0$ and a starting point $x \\in (-L,L)$, define the exit time $\\tau_{-L,L} = \\inf\\{t \\ge 0 : X_t \\notin (-L,L)\\}$. Your task is to compute the mean exit time $E_x[\\tau_{-L,L}]$ numerically using the speed measure representation.\n\nBase your derivation on the following fundamental definitions and facts for one-dimensional diffusions with generator $\\mathcal{L} f(x) = \\frac{1}{2} a(x) f''(x) + b(x) f'(x)$:\n- The scale density is $s'(x) = \\exp\\left(-\\int^x \\frac{2 b(z)}{a(z)}\\,dz\\right)$, and a scale function is any primitive $s(x) = \\int^x s'(u)\\,du$ (defined up to affine transformations).\n- The speed density is $m'(x) = \\frac{2}{a(x) s'(x)}$ and the speed measure is $m(dy) = m'(y)\\,dy$.\n- For an interval $(l,r)$ with $l  r$ and $x \\in (l,r)$, the Green kernel for the killed diffusion is\n$$\nG(x,y) = \\frac{\\big(s(x \\wedge y)-s(l)\\big)\\big(s(r)-s(x \\vee y)\\big)}{s(r)-s(l)}, \\quad y \\in (l,r),\n$$\nand the mean exit time has the representation\n$$\nE_x[\\tau_{l,r}] = \\int_{l}^{r} G(x,y)\\,m'(y)\\,dy.\n$$\n\nFor the Ornstein–Uhlenbeck process with $a(x) = \\sigma^2$ and $b(x) = -\\theta x$, compute the explicit expressions for the scale density $s'(x)$ and speed density $m'(x)$, then use them to evaluate the integral for $E_x[\\tau_{-L,L}]$. Implement a numerical procedure to compute the integral with the Green kernel $G(x,y)$ defined by the scale function, and the speed density $m'(y)$.\n\nNumerical and implementation requirements:\n- You must implement a program that, given parameter tuples $(\\theta,\\sigma,L,x)$, computes $E_x[\\tau_{-L,L}]$ by numerical integration of $\\int_{-L}^{L} G(x,y)\\,m'(y)\\,dy$.\n- All variables are dimensionless; no physical units are required.\n- Use sufficiently accurate numerical integration to ensure at least six correct decimal digits for each test case.\n- As $L \\to \\infty$, discuss qualitatively in your derivation how $E_x[\\tau_{-L,L}]$ behaves for fixed $x$ and fixed coefficients $(\\theta,\\sigma)$.\n\nTest suite:\nCompute $E_x[\\tau_{-L,L}]$ for the following seven parameter sets $(\\theta,\\sigma,L,x)$:\n1. $(1.0, 1.0, 1.0, 0.0)$\n2. $(1.0, 1.0, 2.0, 0.0)$\n3. $(1.0, 1.0, 2.0, 0.5)$\n4. $(1.0, 1.0, 2.0, 1.9)$\n5. $(1.0, 1.0, 3.0, 0.0)$\n6. $(0.5, 1.0, 2.0, 0.0)$\n7. $(1.0, 0.5, 2.0, 0.0)$\n\nFinal output format:\n- Your program should produce a single line of output containing a comma-separated list of floating-point results rounded to six digits after the decimal point, enclosed in square brackets and in the same order as the test suite. For example: \"[v1,v2,v3,v4,v5,v6,v7]\".", "solution": "The user-provided problem is assessed to be **valid**. It is a well-posed, scientifically grounded, and objective problem from the field of stochastic differential equations. All necessary definitions, parameters, and constraints are provided, and they are internally consistent. The task is to compute a standard quantity, the mean exit time, for a classical stochastic process, the Ornstein-Uhlenbeck process, using a specified representation based on speed and scale measures. This is a standard textbook exercise that is amenable to rigorous mathematical and numerical analysis.\n\n### 1. Identification of Coefficients and Densities\n\nThe Ornstein-Uhlenbeck process is described by the stochastic differential equation (SDE):\n$$dX_t = -\\theta X_t\\,dt + \\sigma\\,dW_t$$\nThis SDE is of the general form $dX_t = b(X_t)dt + \\sqrt{a(X_t)}dW_t$. By comparing the two forms, we identify the drift coefficient $b(x) = -\\theta x$ and the diffusion coefficient function $a(x) = \\sigma^2$. Both $\\theta$ and $\\sigma$ are given as positive constants.\n\nAccording to the provided definitions, we can now compute the scale and speed densities.\n\n**Scale Density $s'(x)$**:\nThe scale density is given by $s'(x) = \\exp\\left(-\\int^x \\frac{2 b(z)}{a(z)}\\,dz\\right)$. Substituting $a(z) = \\sigma^2$ and $b(z) = -\\theta z$:\n$$\n-\\int^x \\frac{2 (-\\theta z)}{\\sigma^2}\\,dz = \\frac{2\\theta}{\\sigma^2} \\int^x z\\,dz = \\frac{\\theta x^2}{\\sigma^2} + C\n$$\nChoosing the constant of integration $C=0$ (as it only results in a multiplicative constant for $s'(x)$, which will cancel out in the final expression for the mean exit time), we obtain the scale density:\n$$\ns'(x) = \\exp\\left(\\frac{\\theta x^2}{\\sigma^2}\\right)\n$$\n\n**Speed Density $m'(x)$**:\nThe speed density is given by $m'(x) = \\frac{2}{a(x) s'(x)}$. Substituting the expressions for $a(x)$ and $s'(x)$:\n$$\nm'(x) = \\frac{2}{\\sigma^2 \\exp\\left(\\frac{\\theta x^2}{\\sigma^2}\\right)} = \\frac{2}{\\sigma^2} \\exp\\left(-\\frac{\\theta x^2}{\\sigma^2}\\right)\n$$\nThis is proportional to the probability density function of a Gaussian distribution with mean $0$ and variance $\\sigma^2/(2\\theta)$, which is the stationary distribution of the Ornstein-Uhlenbeck process.\n\n### 2. Mean Exit Time Representation\n\nThe mean exit time $E_x[\\tau_{-L,L}]$ from the interval $(-L, L)$ starting at $x \\in (-L,L)$ is given by the integral:\n$$\nE_x[\\tau_{-L,L}] = \\int_{-L}^{L} G(x,y)\\,m'(y)\\,dy\n$$\nwhere $G(x,y)$ is the Green kernel for the diffusion killed upon exiting $(-L,L)$:\n$$\nG(x,y) = \\frac{\\big(s(x \\wedge y)-s(-L)\\big)\\big(s(L)-s(x \\vee y)\\big)}{s(L)-s(-L)}\n$$\nHere, $s(x)$ is a scale function, defined as an antiderivative of $s'(x)$. The scale function is defined up to an affine transformation $s(x) \\to c_1 s(x) + c_2$. We can exploit this freedom by choosing a specific primitive for $s(x)$ that simplifies the expression. Let us define $s(x) = \\int_{-L}^x s'(u)\\,du$. This choice implies $s(-L)=0$, simplifying the Green kernel to:\n$$\nG(x,y) = \\frac{s(x \\wedge y)\\big(s(L)-s(x \\vee y)\\big)}{s(L)}\n$$\nTo evaluate the integral for $E_x[\\tau_{-L,L}]$, we can split it at $y=x$:\n$$\nE_x[\\tau_{-L,L}] = \\frac{s(L)-s(x)}{s(L)} \\int_{-L}^{x} s(y) m'(y) \\, dy + \\frac{s(x)}{s(L)} \\int_{x}^{L} \\big(s(L)-s(y)\\big) m'(y) \\, dy\n$$\n\n### 3. Simplification for Numerical Computation\n\nA direct numerical evaluation of this expression is computationally demanding, as it involves nested numerical integrations: the function $s(y) = \\int_{-L}^y s'(u)\\,du$ inside the main integrals. To create an efficient algorithm, we can change the order of integration (via Fubini's theorem).\n\nLet's define the two integral terms as $I_1(x) = \\int_{-L}^{x} s(y) m'(y) \\, dy$ and $I_2(x) = \\int_{x}^{L} \\big(s(L)-s(y)\\big) m'(y) \\, dy$.\n\nFor $I_1(x)$:\n$$\nI_1(x) = \\int_{-L}^{x} \\left( \\int_{-L}^{y} s'(u)\\,du \\right) m'(y)\\,dy\n$$\nThe domain of integration in the $(u,y)$ plane is given by $-L \\le u \\le y \\le x$. Swapping the order of integration gives $-L \\le u \\le x$ and $u \\le y \\le x$:\n$$\nI_1(x) = \\int_{-L}^{x} s'(u) \\left( \\int_{u}^{x} m'(y)\\,dy \\right) du\n$$\n\nFor $I_2(x)$:\n$$\nI_2(x) = \\int_{x}^{L} \\left( \\int_{y}^{L} s'(u)\\,du \\right) m'(y)\\,dy\n$$\nThe domain of integration is $x \\le y \\le u \\le L$. Swapping the order gives $x \\le u \\le L$ and $x \\le y \\le u$:\n$$\nI_2(x) = \\int_{x}^{L} s'(u) \\left( \\int_{x}^{u} m'(y)\\,dy \\right) du\n$$\nThe inner integrals of $m'(y)$ can be expressed using the error function, $\\text{erf}(z) = \\frac{2}{\\sqrt{\\pi}}\\int_0^z e^{-t^2} dt$. Let $\\alpha = \\theta/\\sigma^2$. Then $m'(y) = \\frac{2\\alpha}{\\theta} \\exp(-\\alpha y^2)$.\n$$\n\\int m'(y)\\,dy = \\frac{2\\alpha}{\\theta} \\int e^{-\\alpha y^2}\\,dy = \\frac{2\\alpha}{\\theta} \\frac{\\sqrt{\\pi}}{2\\sqrt{\\alpha}} \\text{erf}(\\sqrt{\\alpha} y) = \\frac{\\sqrt{\\pi\\alpha}}{\\theta} \\text{erf}(\\sqrt{\\alpha} y) = \\frac{\\sqrt{\\pi}}{\\sigma\\sqrt{\\theta}}\\text{erf}\\left(\\sqrt{\\frac{\\theta}{\\sigma^2}}y\\right)\n$$\nThis reduces the problem to single-level numerical integrations. Furthermore, the scale function $s(x)$ can also be expressed analytically using the imaginary error function, $\\text{erfi}(z) = \\frac{2}{\\sqrt{\\pi}}\\int_0^z e^{t^2} dt$:\n$$\ns(x) = \\int_{-L}^{x} e^{\\alpha u^2}\\,du = \\frac{\\sqrt{\\pi}}{2\\sqrt{\\alpha}} (\\text{erfi}(\\sqrt{\\alpha}x) - \\text{erfi}(-\\sqrt{\\alpha}L)) = \\frac{\\sigma\\sqrt{\\pi}}{2\\sqrt{\\theta}}(\\text{erfi}(\\sqrt{\\alpha}x) + \\text{erfi}(\\sqrt{\\alpha}L))\n$$\nWith these analytic forms for $s(x)$ and $\\int m'(y)dy$, the problem reduces to computing two definite integrals numerically, followed by algebraic manipulation. This is the basis for the implementation.\n\n### 4. Qualitative Behaviour for Large Intervals\n\nAs $L \\to \\infty$, the boundaries of the interval $(-L, L)$ recede to infinity. The Ornstein-Uhlenbeck process is mean-reverting due to the drift term $-\\theta x$, which acts as a restoring force pulling the process towards the origin $x=0$. The process has a stationary Gaussian distribution, which implies it is ergodic and positive recurrent. To exit a very large interval, the process must overcome the strong restoring drift and make a large, rare excursion. The expected time for such an event grows very rapidly with the width of the interval. A detailed asymptotic analysis confirms that $E_x[\\tau_{-L,L}]$ grows exponentially with $L^2$. Therefore, we expect $E_x[\\tau_{-L,L}] \\to \\infty$ as $L \\to \\infty$.\n\n### 5. Implementation Strategy\n\nThe numerical solution is implemented as follows:\n1.  For each parameter set $(\\theta, \\sigma, L, x)$, the constant $\\alpha = \\theta/\\sigma^2$ is computed.\n2.  The scale function $s(v)$ is defined using `scipy.special.erfi` based on the derived analytical formula, ensuring $s(-L)=0$. The values $s(x)$ and $s(L)$ are calculated.\n3.  The expressions for $I_1(x)$ and $I_2(x)$, obtained by swapping the integration order, are implemented. This involves numerically integrating functions that depend on `numpy.exp` and `scipy.special.erf` using `scipy.integrate.quad`.\n4.  The final mean exit time $E_x[\\tau_{-L,L}]$ is assembled from these components according to the formula:\n    $$E_x[\\tau_{-L,L}] = \\frac{1}{s(L)} \\left( (s(L)-s(x))I_1(x) + s(x)I_2(x) \\right)$$\n5. The procedure is repeated for all test cases, and the results are formatted as required.", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import quad\nfrom scipy.special import erf, erfi\n\ndef solve():\n    \"\"\"\n    Computes the mean exit time for an Ornstein-Uhlenbeck process from a symmetric interval.\n    The computation is based on the speed measure and scale function representation.\n    \"\"\"\n\n    def calculate_exit_time(theta, sigma, L, x):\n        \"\"\"\n        Calculates E_x[tau_{-L,L}] for a single set of parameters.\n\n        Args:\n            theta (float): The mean-reversion rate.\n            sigma (float): The volatility.\n            L (float): The half-width of the interval (-L, L).\n            x (float): The starting point of the process.\n\n        Returns:\n            float: The computed mean exit time.\n        \"\"\"\n        if not (theta  0 and sigma  0 and L  0 and -L  x  L):\n            raise ValueError(\"Invalid parameters.\")\n\n        alpha = theta / (sigma**2)\n        sqrt_alpha = np.sqrt(alpha)\n\n        # Scale function: s(v) = C * (erfi(sqrt_alpha*v) + erfi(sqrt_alpha*L))\n        # This choice ensures s(-L) = 0.\n        # The constant C = sqrt(pi) / (2*sqrt_alpha) will cancel out in the final expression\n        # for E_x[tau], so we can set it to 1 without loss of generality.\n        def s(v):\n            return erfi(sqrt_alpha * v) + erfi(sqrt_alpha * L)\n\n        s_x = s(x)\n        s_L = s(L)\n        \n        # If s_L is zero or too small, it indicates numerical instability or L is too small.\n        # This shouldn't happen for the test cases.\n        if abs(s_L)  1e-15:\n            # For very small L, the process exits almost instantly.\n            # Analytically, as L - 0 with x=0, mean exit time is proportional to L^2.\n            # Handle this edge case to avoid division by zero.\n            return 0.0\n\n        # Integral of speed density m'(y) from a to b.\n        # m'(y) = (2/sigma^2)*exp(-alpha*y^2)\n        # int(m'(y) dy) = (sqrt(pi)/(sigma*sqrt(theta))) * erf(sqrt_alpha*y)\n        C_m_integral = np.sqrt(np.pi) / (sigma * np.sqrt(theta))\n        def M(a, b):\n            return C_m_integral * (erf(sqrt_alpha * b) - erf(sqrt_alpha * a))\n\n        # We swap the order of integration to avoid nested numerical integrations.\n        # I_1 = integral_{-L to x} s'(u) * (integral_{u to x} m'(y) dy) du\n        def integrand1(u):\n            # s'(u) = exp(alpha * u^2)\n            return np.exp(alpha * u**2) * M(u, x)\n        \n        I1, _ = quad(integrand1, -L, x)\n\n        # I_2 = integral_{x to L} s'(u) * (integral_{x to u} m'(y) dy) du\n        def integrand2(u):\n            # s'(u) = exp(alpha * u^2)\n            return np.exp(alpha * u**2) * M(x, u)\n            \n        I2, _ = quad(integrand2, x, L)\n\n        # E_x[tau] = ( (s_L - s_x) * I1 + s_x * I2 ) / s_L\n        mean_exit_time = ((s_L - s_x) * I1 + s_x * I2) / s_L\n        \n        return mean_exit_time\n\n    # Test suite from the problem statement\n    test_cases = [\n        # (theta, sigma, L, x)\n        (1.0, 1.0, 1.0, 0.0),\n        (1.0, 1.0, 2.0, 0.0),\n        (1.0, 1.0, 2.0, 0.5),\n        (1.0, 1.0, 2.0, 1.9),\n        (1.0, 1.0, 3.0, 0.0),\n        (0.5, 1.0, 2.0, 0.0),\n        (1.0, 0.5, 2.0, 0.0),\n    ]\n\n    results = []\n    for case in test_cases:\n        theta, sigma, L, x = case\n        result = calculate_exit_time(theta, sigma, L, x)\n        # Round to six digits after the decimal point\n        results.append(f\"{result:.6f}\")\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "3074928"}]}