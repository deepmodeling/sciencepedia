{"hands_on_practices": [{"introduction": "The best way to understand a new concept is to apply it. This first exercise provides a direct, hands-on opportunity to practice the rules of total coloring. By modeling a simple network as a path graph, you will determine the minimum number of 'frequencies' needed, which corresponds to the total chromatic number $\\chi''(G)$. This problem [@problem_id:1549929] will guide you in applying the fundamental lower bound $\\chi''(G) \\ge \\Delta(G) + 1$ and then finding an explicit coloring that meets this bound, establishing that the path graph $P_5$ is a Type 1 graph.", "problem": "A small-scale data center network consists of five servers, labeled $S_1, S_2, S_3, S_4, S_5$. The network topology is linear: $S_1$ is connected to $S_2$, $S_2$ is connected to $S_3$, $S_3$ is connected to $S_4$, and $S_4$ is connected to $S_5$. There are no other connections between the servers.\n\nTo prevent interference, the network administrator must assign operating frequencies to the servers and channel frequencies to the communication links between them. This assignment, which we'll call a \"complete frequency assignment,\" must adhere to the following set of rules:\n1.  Any two servers that are directly connected must be assigned different operating frequencies.\n2.  Any two communication links that connect to the same server must be assigned different channel frequencies.\n3.  Any server's operating frequency must be different from the channel frequencies assigned to all communication links connected to it.\n\nAll frequencies, for both servers and links, must be chosen from a common pool of available frequencies. What is the minimum number of distinct frequencies required for a valid complete frequency assignment for this network?", "solution": "Model the network as a path graph $P_{5}$ with vertices $S_{1},S_{2},S_{3},S_{4},S_{5}$ and edges $E_{1,2},E_{2,3},E_{3,4},E_{4,5}$. A complete frequency assignment obeying the three rules is exactly a proper total coloring of this graph: adjacent vertices receive different colors, adjacent edges receive different colors, and each edge receives a color different from its incident vertices.\n\nLet $\\Delta(G)$ denote the maximum degree of the graph $G$. For any graph, the set consisting of a vertex of degree $d$ and its $d$ incident edges must all receive mutually distinct colors in a total coloring. Therefore the total number of colors satisfies the lower bound\n$$\n\\chi''(G)\\ge \\Delta(G)+1.\n$$\nFor $P_{5}$, the maximum degree is $\\Delta(G)=2$ (attained at $S_{2},S_{3},S_{4}$), hence\n$$\n\\chi''(P_{5})\\ge 3.\n$$\n\nIt remains to show that $3$ colors suffice by giving an explicit assignment using three frequencies $f_{1},f_{2},f_{3}$. Assign server (vertex) frequencies by\n$$\nS_{1}=f_{1},\\quad S_{2}=f_{2},\\quad S_{3}=f_{3},\\quad S_{4}=f_{1},\\quad S_{5}=f_{2},\n$$\nand link (edge) frequencies by\n$$\nE_{1,2}=f_{3},\\quad E_{2,3}=f_{1},\\quad E_{3,4}=f_{2},\\quad E_{4,5}=f_{3}.\n$$\nVerification:\n- Adjacent servers differ: along the path $(f_{1},f_{2},f_{3},f_{1},f_{2})$ all neighbors are distinct.\n- Adjacent links differ: $(f_{3},f_{1},f_{2},f_{3})$ has distinct adjacent entries at each shared server.\n- Each link differs from its incident servers: for example, $E_{1,2}=f_{3}\\neq f_{1},f_{2}$; $E_{2,3}=f_{1}\\neq f_{2},f_{3}$; $E_{3,4}=f_{2}\\neq f_{3},f_{1}$; $E_{4,5}=f_{3}\\neq f_{1},f_{2}$.\n\nThus a valid complete frequency assignment exists with $3$ distinct frequencies, and by the lower bound this number is minimal.", "answer": "$$\\boxed{3}$$", "id": "1549929"}, {"introduction": "Having mastered a single instance, we now move to a more general scenario. This practice problem involves a centralized network topology, which can be modeled as a star graph $K_{1,n}$. Your task is to find the minimum number of 'timeslots' required for any number of peripheral devices $n$. This exercise [@problem_id:1549927] challenges you to think abstractly and develop a coloring strategy that is not just a one-off solution, but a general formula proven to be optimal for an entire family of graphs.", "problem": "In designing a small-scale data hub, a network architect is planning a scheduling protocol for maintenance and data transmission. The network consists of a single central server connected to $n$ peripheral devices. No two peripheral devices are connected directly to each other. The system can be modeled as a graph where the server and devices are nodes, and the connections are links.\n\nA \"timeslot\" is a discrete unit of time during which a single operation can be performed. The protocol requires assigning a unique timeslot to each node and each link in the network, subject to the following interference constraints:\n1.  Any two nodes connected by a link must be assigned different timeslots.\n2.  Any two links that connect to the same node must be assigned different timeslots.\n3.  A node and any link connected to it must be assigned different timeslots.\n\nDetermine the absolute minimum number of distinct timeslots required to create a valid schedule for a system with one central server and $n$ peripheral devices, for any integer $n \\geq 2$. Express your answer as a function of $n$.", "solution": "Model the network as the star graph $K_{1,n}$ with central node $v_{0}$ and leaves $v_{1},\\dots,v_{n}$, and edges $e_{i}=v_{0}v_{i}$ for $i \\in \\{1,\\dots,n\\}$. The constraints exactly define a proper total coloring: a function assigning a color (timeslot) to every vertex and edge so that adjacent vertices, adjacent edges, and incident vertex-edge pairs receive distinct colors. The minimum number of colors required is the total chromatic number $\\chi''(K_{1,n})$.\n\nLower bound: The $n$ edges $e_{1},\\dots,e_{n}$ are pairwise adjacent at $v_{0}$, so by constraint 2 they must all receive distinct colors, using at least $n$ colors. By constraint 3, the central node $v_{0}$ must receive a color different from each of its $n$ incident edges, requiring at least one additional color. Hence\n$$\n\\chi''(K_{1,n}) \\geq n+1.\n$$\n\nUpper bound: Construct a total coloring with exactly $n+1$ colors. Let the color set be $\\{1,2,\\dots,n+1\\}$. Assign color $n+1$ to $v_{0}$. Assign color $i$ to edge $e_{i}$ for each $i \\in \\{1,\\dots,n\\}$; these $n$ colors are all distinct, satisfying constraint 2, and each differs from the color of $v_{0}$, satisfying constraint 3. For the leaves, assign for $i \\in \\{1,\\dots,n-1\\}$ the color $i+1$ to $v_{i}$, and assign color $1$ to $v_{n}$. Then, for each $i$, $v_{i}$ differs from $v_{0}$ (constraint 1) and from its incident edge $e_{i}$ (constraint 3). There is no restriction between a leaf and non-incident edges or between different leaves, so all constraints 1â€“3 are satisfied. Therefore\n$$\n\\chi''(K_{1,n}) \\leq n+1.\n$$\n\nCombining the bounds yields $\\chi''(K_{1,n})=n+1$. Thus the absolute minimum number of distinct timeslots required is $n+1$.", "answer": "$$\\boxed{n+1}$$", "id": "1549927"}, {"introduction": "Not all coloring problems have a straightforward solution. This final exercise explores the powerful constraints of total coloring by presenting a scenario where a valid coloring might not exist under given conditions. You will analyze a pre-colored complete bipartite graph $K_{3,3}$ and determine if it's possible to complete it into a total coloring with a limited number of additional colors. This problem [@problem_id:1549915] is designed to sharpen your logical deduction skills, showing that proving impossibility can be as insightful as finding a solution.", "problem": "Consider the complete bipartite graph $K_{3,3}$. Its vertex set can be partitioned into two disjoint sets, $U = \\{u_1, u_2, u_3\\}$ and $W = \\{w_1, w_2, w_3\\}$, such that an edge exists between a vertex $u_i \\in U$ and a vertex $w_j \\in W$ for all $i,j \\in \\{1, 2, 3\\}$.\n\nSuppose the nine edges of this graph are colored with a set of three colors, $\\{C_1, C_2, C_3\\}$. The coloring is defined by the rule that the color of the edge connecting $u_i$ and $w_j$, denoted $c(u_i, w_j)$, is $C_k$ where the index $k$ is given by the formula $k = ((i + j) \\pmod 3) + 1$.\n\nA total coloring of a graph is an assignment of a color to each vertex and each edge such that:\n1.  Any two adjacent vertices have different colors.\n2.  Any two adjacent edges (edges that share a vertex) have different colors.\n3.  Any vertex and any edge incident to it have different colors.\n\nWe are interested in extending the given 3-edge-coloring to a 4-total-coloring by assigning colors to the vertices, using a palette that includes the original three colors plus one additional color, $C_4$. The full set of available colors for the vertices is therefore $\\{C_1, C_2, C_3, C_4\\}$.\n\nHow many distinct, valid ways are there to assign a color from this set to each of the six vertices of $K_{3,3}$ to complete the given edge coloring into a valid total coloring?", "solution": "We analyze the given 3-edge-coloring of $K_{3,3}$ with bipartition $U=\\{u_{1},u_{2},u_{3}\\}$ and $W=\\{w_{1},w_{2},w_{3}\\}$, where the color of edge $u_{i}w_{j}$ is $C_{k}$ with $k=((i+j)\\bmod 3)+1$.\n\nFirst, for any fixed $i$, as $j$ runs over $\\{1,2,3\\}$, the values of $k=((i+j)\\bmod 3)+1$ run through $\\{1,2,3\\}$ exactly once. Therefore, the three edges incident to $u_{i}$ have colors $C_{1}$, $C_{2}$, and $C_{3}$, all distinct. Similarly, for any fixed $j$, as $i$ runs over $\\{1,2,3\\}$, the edges incident to $w_{j}$ also have colors $C_{1}$, $C_{2}$, and $C_{3}$, all distinct.\n\nA total coloring requires:\n1. Adjacent vertices receive different colors.\n2. Adjacent edges receive different colors (already satisfied by the given edge-coloring).\n3. A vertex and any incident edge receive different colors.\n\nConsider any vertex $v\\in U\\cup W$. Since all three incident edges at $v$ are colored $C_{1}$, $C_{2}$, and $C_{3}$, condition 3 forces the color of $v$ to avoid $C_{1}$, $C_{2}$, and $C_{3}$. Given the palette $\\{C_{1},C_{2},C_{3},C_{4}\\}$ for vertices, the only available choice for every vertex is $C_{4}$.\n\nHence every vertex must be colored $C_{4}$. However, every $u_{i}$ is adjacent to every $w_{j}$ in $K_{3,3}$, and condition 1 requires adjacent vertices to receive different colors. Assigning $C_{4}$ to all six vertices violates this condition for every edge $u_{i}w_{j}$.\n\nTherefore, there is no valid assignment of colors to the vertices that extends the given edge-coloring to a 4-total-coloring. The number of distinct valid vertex colorings is $0$.", "answer": "$$\\boxed{0}$$", "id": "1549915"}]}