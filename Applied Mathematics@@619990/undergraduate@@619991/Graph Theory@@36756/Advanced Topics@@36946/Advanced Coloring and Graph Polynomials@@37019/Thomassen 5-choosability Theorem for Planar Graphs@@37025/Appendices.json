{"hands_on_practices": [{"introduction": "Before exploring the depths of Thomassen's theorem, it's crucial to master the fundamentals. This first exercise is a direct application of the definition of list coloring, serving as a practical check on the core concept [@problem_id:1548864]. By evaluating potential colorings against the given lists and graph structure, you will solidify your understanding of the two key constraints every valid list coloring must satisfy: choosing colors from the correct lists and ensuring adjacent vertices have different colors.", "problem": "In graph theory, a list coloring is a special type of graph coloring. Consider a graph $G$ with a set of vertices $V$ and a set of edges $E$. For each vertex $v \\in V$, let $L(v)$ be a list of allowed colors. A function $c: V \\to \\bigcup_{v \\in V} L(v)$ is a valid list coloring of $G$ if it satisfies two conditions:\n1. For every vertex $v \\in V$, the assigned color $c(v)$ is in the list of allowed colors for that vertex, i.e., $c(v) \\in L(v)$.\n2. For every edge $(u, v) \\in E$, the adjacent vertices $u$ and $v$ are assigned different colors, i.e., $c(u) \\neq c(v)$.\n\nNow, consider a specific graph $G$ with five vertices, $V = \\{v_1, v_2, v_3, v_4, v_5\\}$. The set of edges is $E = \\{(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5), (v_5, v_1), (v_1, v_3)\\}$.\n\nThe list of allowed colors for each vertex is given as follows:\n- $L(v_1) = \\{1, 2, 4\\}$\n- $L(v_2) = \\{1, 3, 5\\}$\n- $L(v_3) = \\{2, 3, 4\\}$\n- $L(v_4) = \\{1, 4, 5\\}$\n- $L(v_5) = \\{2, 3, 5\\}$\n\nFour potential colorings are proposed below, where each coloring $c$ is represented by an ordered tuple $(c(v_1), c(v_2), c(v_3), c(v_4), c(v_5))$. Which one of the following is a valid list coloring for the graph $G$ with the given lists?\n\nA. $(1, 3, 2, 4, 5)$\n\nB. $(1, 1, 3, 4, 5)$\n\nC. $(3, 1, 2, 4, 5)$\n\nD. $(2, 1, 2, 4, 5)$", "solution": "We are given a graph with vertex set $V=\\{v_1,v_2,v_3,v_4,v_5\\}$ and edge set $E=\\{(v_1,v_2), (v_2,v_3), (v_3,v_4), (v_4,v_5), (v_5,v_1), (v_1,v_3)\\}$. The list constraints are $L(v_1)=\\{1,2,4\\}$, $L(v_2)=\\{1,3,5\\}$, $L(v_3)=\\{2,3,4\\}$, $L(v_4)=\\{1,4,5\\}$, $L(v_5)=\\{2,3,5\\}$. A valid list coloring $c$ must satisfy: (i) $c(v)\\in L(v)$ for all $v\\in V$; (ii) for each $(u,v)\\in E$, $c(u)\\neq c(v)$.\n\nCheck option A: $(1,3,2,4,5)$.\n- List membership: $1\\in L(v_1)$, $3\\in L(v_2)$, $2\\in L(v_3)$, $4\\in L(v_4)$, $5\\in L(v_5)$; all satisfied.\n- Edge constraints: \n$$c(v_1)=1\\neq 3=c(v_2),\\quad c(v_2)=3\\neq 2=c(v_3),$$\n$$c(v_3)=2\\neq 4=c(v_4),\\quad c(v_4)=4\\neq 5=c(v_5),$$\n$$c(v_5)=5\\neq 1=c(v_1),\\quad c(v_1)=1\\neq 2=c(v_3).$$\nAll edges satisfy distinct colors. Therefore A is valid.\n\nCheck option B: $(1,1,3,4,5)$.\n- List membership: $1\\in L(v_1)$, $1\\in L(v_2)$, $3\\in L(v_3)$, $4\\in L(v_4)$, $5\\in L(v_5)$; all satisfied.\n- Edge constraint for $(v_1,v_2)$: $c(v_1)=1=c(v_2)$, which violates $c(u)\\neq c(v)$. Therefore B is invalid.\n\nCheck option C: $(3,1,2,4,5)$.\n- List membership at $v_1$ fails because $3\\notin L(v_1)=\\{1,2,4\\}$. Therefore C is invalid.\n\nCheck option D: $(2,1,2,4,5)$.\n- List membership: $2\\in L(v_1)$, $1\\in L(v_2)$, $2\\in L(v_3)$, $4\\in L(v_4)$, $5\\in L(v_5)$; all satisfied.\n- Edge constraint for $(v_1,v_3)$: $c(v_1)=2=c(v_3)$, which violates $c(u)\\neq c(v)$. Therefore D is invalid.\n\nThus, only option A satisfies both the list membership and adjacency constraints.", "answer": "$$\\boxed{A}$$", "id": "1548864"}, {"introduction": "Thomassen's theorem guarantees a 5-list-coloring exists for any planar graph, but this doesn't mean finding one is easy. This next practice illustrates how a simple and intuitive greedy algorithm can fail to produce a valid coloring, even with list sizes of five [@problem_id:1548865]. Tracing the algorithm's steps will reveal the hidden complexity that motivates the need for a more sophisticated proof technique and highlights the difference between an existence proof and a simple constructive method.", "problem": "Consider a planar graph $G$ with the vertex set $V = \\{v_0, v_1, v_2, v_3, v_4, v_5\\}$ and the edge set $E = \\{(v_0, v_i) \\mid i \\in \\{1, 2, 3, 4, 5\\}\\} \\cup \\{(v_1, v_2), (v_3, v_4)\\}$.\n\nEach vertex $v \\in V$ is given a list of allowed colors, $L(v)$, as follows:\n- $L(v_0) = \\{1, 2, 3, 4, 5\\}$\n- $L(v_1) = \\{1, 6, 7, 8, 9\\}$\n- $L(v_2) = \\{1, 2, 6, 7, 8\\}$\n- $L(v_3) = \\{3, 6, 7, 8, 9\\}$\n- $L(v_4) = \\{3, 4, 6, 7, 8\\}$\n- $L(v_5) = \\{5, 6, 7, 8, 9\\}$\n\nA simple greedy coloring algorithm attempts to find a proper coloring of the graph. The algorithm processes the vertices in the fixed order $(v_1, v_2, v_3, v_4, v_5, v_0)$. For each vertex in this sequence, it assigns the color with the smallest integer value from the vertex's list that has not already been assigned to any of its previously colored neighbors. If no such color exists, the vertex remains uncolored, and the algorithm proceeds to the next vertex in the sequence.\n\nWhich of the following options correctly describes the set of vertices that remain uncolored after the algorithm terminates?\n\nA. The algorithm provides a valid coloring for all vertices.\n\nB. $\\{v_0\\}$\n\nC. $\\{v_5\\}$\n\nD. $\\{v_2, v_4\\}$\n\nE. $\\{v_0, v_5\\}$", "solution": "We apply the specified greedy algorithm in the fixed order $(v_1, v_2, v_3, v_4, v_5, v_0)$. For each vertex $v$, the algorithm assigns the smallest integer in $L(v)$ that is not already used by any previously colored neighbor.\n\nLet $c(v)$ denote the color assigned to vertex $v$.\n\n1) Vertex $v_1$: Its neighbors are $v_0$ and $v_2$, neither of which is colored yet. Thus no restriction applies. From $L(v_1)=\\{1,6,7,8,9\\}$, the smallest available color is\n$$\nc(v_1)=1.\n$$\n\n2) Vertex $v_2$: Its neighbors are $v_0$ and $v_1$; among previously colored neighbors, only $v_1$ is colored with $1$. From $L(v_2)=\\{1,2,6,7,8\\}$, excluding $1$ leaves $\\{2,6,7,8\\}$, so the smallest available color is\n$$\nc(v_2)=2.\n$$\n\n3) Vertex $v_3$: Its neighbors are $v_0$ and $v_4$; neither is colored yet. From $L(v_3)=\\{3,6,7,8,9\\}$, the smallest available color is\n$$\nc(v_3)=3.\n$$\n\n4) Vertex $v_4$: Its neighbors are $v_0$ and $v_3$; among previously colored neighbors, only $v_3$ is colored with $3$. From $L(v_4)=\\{3,4,6,7,8\\}$, excluding $3$ leaves $\\{4,6,7,8\\}$, so the smallest available color is\n$$\nc(v_4)=4.\n$$\n\n5) Vertex $v_5$: Its only neighbor is $v_0$, which is not yet colored. From $L(v_5)=\\{5,6,7,8,9\\}$, the smallest available color is\n$$\nc(v_5)=5.\n$$\n\n6) Vertex $v_0$: Its neighbors are $v_1,v_2,v_3,v_4,v_5$, which are now colored with\n$$\nc(v_1)=1,\\quad c(v_2)=2,\\quad c(v_3)=3,\\quad c(v_4)=4,\\quad c(v_5)=5.\n$$\nFrom $L(v_0)=\\{1,2,3,4,5\\}$, every color in the list is already used by a previously colored neighbor, so there is no available color for $v_0$. Hence $v_0$ remains uncolored.\n\nTherefore, exactly the vertex $v_0$ remains uncolored, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1548865"}, {"introduction": "To truly appreciate the ingenuity of Thomassen's proof, it helps to understand why simpler lines of reasoning are insufficient. This final exercise challenges you to think like a mathematician by critiquing a plausible but flawed proof that attempts to connect 5-colorability with 5-choosability [@problem_id:1548911]. Identifying the fundamental error in this argument—the failure of a single global permutation to satisfy all local list constraints—will deepen your understanding of the unique challenges posed by list coloring.", "problem": "In graph theory, a *proper k-coloring* of a graph $G=(V, E)$ is a function $f: V \\to \\{1, 2, \\dots, k\\}$ such that $f(u) \\neq f(v)$ for every edge $\\{u, v\\} \\in E$. A graph is *k-colorable* if such a coloring exists.\n\nA related but stronger concept is list coloring. A *list assignment* for a graph $G$ is a function $L$ that assigns to each vertex $v \\in V$ a list of colors $L(v)$. The graph $G$ is *L-colorable* if there exists a proper coloring $f$ such that $f(v) \\in L(v)$ for every vertex $v \\in V$. A graph is said to be *k-choosable* if it is $L$-colorable for every possible list assignment $L$ where $|L(v)| = k$ for all $v \\in V$.\n\nA well-known result, Thomassen's theorem, states that every planar graph is 5-choosable. A student attempts to prove a related (but not identical) statement: \"Any 5-colorable graph is 5-choosable,\" with the following argument:\n\n1.  Let $G = (V, E)$ be a graph that is 5-colorable. By definition, there exists a proper 5-coloring of $G$. Let this coloring be $c: V \\to C_0$, where $C_0 = \\{1, 2, 3, 4, 5\\}$ is the set of five colors used.\n\n2.  Now, consider an arbitrary list assignment $L$ where $|L(v)| = 5$ for every vertex $v \\in V$. Our goal is to find a proper coloring $c'$ where $c'(v) \\in L(v)$ for all $v$.\n\n3.  Let's try to construct $c'$ by transforming the existing coloring $c$. The idea is to find a global permutation $\\pi$ of the color set $C_0$. That is, a bijection $\\pi: C_0 \\to C_0$.\n\n4.  We can then define a new coloring $c'(v) = \\pi(c(v))$. Because $\\pi$ is a permutation, if two adjacent vertices $u$ and $v$ had different colors under $c$ (i.e., $c(u) \\neq c(v)$), they will also have different colors under $c'$ (i.e., $\\pi(c(u)) \\neq \\pi(c(v))$). Therefore, $c'$ is guaranteed to be a proper coloring.\n\n5.  The only remaining task is to ensure that the new coloring respects the lists. This means we must find a permutation $\\pi$ such that for every vertex $v \\in V$, we have $c'(v) = \\pi(c(v)) \\in L(v)$. The student claims that since each list $L(v)$ has size 5 and the color set $C_0$ also has size 5, such a permutation can always be found.\n\nWhich of the following statements most accurately identifies the fundamental flaw in this line of reasoning?\n\nA. The argument assumes that a 5-coloring of a 5-colorable graph can be found efficiently, which is not always true and invalidates the constructive nature of the proof.\n\nB. The claim in step 4 that the new coloring $c'$ is a proper coloring is incorrect. A permutation of colors can cause adjacent vertices to have the same color.\n\nC. The argument fails because a single global permutation $\\pi$ cannot guarantee satisfaction of the local list constraints for all vertices simultaneously. Specifically, two non-adjacent vertices $u$ and $w$ that share the same color under $c$ (i.e., $c(u) = c(w)$) may have disjoint lists ($L(u) \\cap L(w) = \\emptyset$), making it impossible to find a single target color for $\\pi(c(u))$ that is valid for both.\n\nD. The argument is flawed because the union of all colors across all lists, $\\bigcup_{v \\in V} L(v)$, can be a much larger set than $C_0$, so a permutation from $C_0$ to $C_0$ is not general enough. The permutation should be from $C_0$ to the larger set.\n\nE. The argument's logic is sound, but it only proves that 5-colorable graphs are 5-choosable if we are allowed to select the initial 5-coloring $c$ *after* seeing the lists $L(v)$, which violates the definition of choosability.", "solution": "We analyze the student's argument step by step and isolate the precise requirement that the proposed global permutation must satisfy, then identify why this requirement generally fails.\n\nFirst, steps 1 and 2 restate the definitions: a 5-colorable graph admits a proper coloring $c: V \\to C_0$ with $C_0=\\{1,2,3,4,5\\}$, and an arbitrary list assignment $L$ satisfies $|L(v)|=5$ for all $v \\in V$.\n\nStep 4 is correct as stated: if $\\pi: C_0 \\to C_0$ is a bijection and $c$ is proper, then $c'(v)=\\pi(c(v))$ is also proper, because for any edge $\\{u,v\\} \\in E$ with $c(u) \\neq c(v)$, we have $\\pi(c(u)) \\neq \\pi(c(v))$.\n\nThe critical constraint is in step 5. Let $V_i=\\{v \\in V : c(v)=i\\}$ denote the color class of $i \\in C_0$ under $c$. For the permuted coloring $c'(v)=\\pi(c(v))$ to respect the lists, we require, for each $v \\in V$,\n$$\n\\pi(c(v)) \\in L(v).\n$$\nEquivalently, for each $i \\in C_0$, there must exist a single color $\\pi(i)$ such that\n$$\n\\pi(i) \\in \\bigcap_{v \\in V_i} L(v).\n$$\nThus, a necessary and sufficient condition for the existence of such a global permutation $\\pi$ is that every intersection $\\bigcap_{v \\in V_i} L(v)$ be nonempty. The student's claim that a permutation exists merely because $|L(v)|=5$ and $|C_0|=5$ ignores these intersection constraints. In particular, it is entirely possible that there exist two vertices $u,w \\in V_i$ (which need not be adjacent) with $L(u) \\cap L(w)=\\emptyset$, so that no single choice of $\\pi(i)$ lies in both lists. In that case, no global permutation $\\pi$ can satisfy $c'(u),c'(w) \\in L(u),L(w)$ simultaneously.\n\nThis obstruction is independent of algorithmic efficiency (so option A is irrelevant), does not contradict the correctness of step 4 (so option B is false), is not resolved by allowing a larger target color universe (the issue is a single image per original color must fit all lists in that color class, so option D misses the core problem), and is not fixed by choosing $c$ after seeing the lists (there may be no partition of $V$ into five classes such that each class has a nonempty list intersection, so option E overstates what the logic achieves). The fundamental flaw is precisely that one global permutation cannot, in general, meet all local list constraints when vertices sharing an original color have incompatible lists.\n\nTherefore, the correct choice is C.", "answer": "$$\\boxed{C}$$", "id": "1548911"}]}