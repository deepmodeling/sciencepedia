{"hands_on_practices": [{"introduction": "The first step in mastering Turán's theorem is to understand the structure of the graph that represents the extremal case: the Turán graph, denoted $T(n, r)$. This exercise challenges you to construct such a graph for a specific scenario and calculate its number of edges directly. Mastering this calculation is a fundamental skill for applying the theorem in more complex situations. [@problem_id:1551503]", "problem": "A systems architect is designing a communication network with 12 servers. For security and load-balancing reasons, the servers are divided into 4 distinct, non-overlapping groups. The division is made as equitable as possible, meaning the number of servers in any two groups can differ by at most one. A direct communication link (an edge) is established between any two servers if and only if they belong to different groups. No links are established between servers within the same group. What is the total number of communication links in this network?", "solution": "We have a complete 4-partite graph on 12 vertices, with groups as equal as possible. Since 12 is divisible by 4, each group has size 3. Denote the group sizes by $g_{1},g_{2},g_{3},g_{4}$; then $g_{i}=3$ for all $i$.\n\nAn edge is present between two vertices if and only if they lie in different groups. Therefore, the total number of edges equals the number of unordered pairs of vertices minus the number of pairs that lie within the same group:\n$$\nE=\\binom{12}{2}-\\sum_{i=1}^{4}\\binom{g_{i}}{2}.\n$$\nSubstituting $g_{i}=3$ for all $i$ gives\n$$\nE=\\binom{12}{2}-4\\binom{3}{2}.\n$$\nCompute each term:\n$$\n\\binom{12}{2}=\\frac{12\\cdot 11}{2}=66,\\quad \\binom{3}{2}=\\frac{3\\cdot 2}{2}=3,\n$$\nhence\n$$\nE=66-4\\cdot 3=66-12=54.\n$$\nAs a cross-check, using the identity $E=\\sum_{i<j}g_{i}g_{j}$, there are $\\binom{4}{2}=6$ pairs of groups and each pair contributes $3\\cdot 3=9$ edges, yielding $6\\cdot 9=54$.", "answer": "$$\\boxed{54}$$", "id": "1551503"}, {"introduction": "Turán's theorem provides the maximum number of edges a graph can have without containing a complete subgraph $K_{r+1}$. This powerful result can be used to solve practical problems about network modification, as demonstrated in this exercise. Here, you'll apply the theorem to determine the minimum number of connections to remove from a complete network to satisfy a structural constraint, turning a theoretical bound into a concrete quantitative answer. [@problem_id:1551484]", "problem": "A company is managing a secure data center with 9 servers. For maximum redundancy and performance, the network is initially configured as a fully connected system, where every server has a direct, dedicated communication link to every other server. A security audit has identified a potential risk: a \"critical-risk quad\" is defined as any group of 4 servers that are all mutually and directly connected. To mitigate this risk, the network administrator must sever a certain number of communication links. What is the absolute minimum number of links that must be severed to guarantee that the network contains no critical-risk quads?", "solution": "Model the network as a simple undirected graph on $n=9$ vertices. Initially it is $K_{9}$, which has\n$$\n\\binom{9}{2}=36\n$$\nedges. A “critical-risk quad” is a $K_{4}$. We seek the minimum number of edges to delete so that the resulting graph is $K_{4}$-free. This equals the total edges of $K_{9}$ minus the maximum number of edges in a $K_{4}$-free graph on $9$ vertices.\n\nBy Turán’s theorem, the maximum number of edges in a $K_{r+1}$-free graph on $n$ vertices is attained by the Turán graph $T(n,r)$, the complete $r$-partite graph with parts as equal as possible. For $K_{4}$-free, set $r=3$. When $n$ is divisible by $3$, the number of edges is\n$$\n\\left(1-\\frac{1}{r}\\right)\\frac{n^{2}}{2}.\n$$\nFor $n=9$ and $r=3$,\n$$\n\\left(1-\\frac{1}{3}\\right)\\frac{9^{2}}{2}=\\frac{2}{3}\\cdot\\frac{81}{2}=27.\n$$\nEquivalently, partitioning the $9$ vertices into three parts of size $3$ and taking all edges between distinct parts (the graph $K_{3,3,3}$) yields $\\binom{3}{2}=3$ pairs of parts, each contributing $3\\cdot 3=9$ edges, for a total of $3\\cdot 9 = 27$ edges, and the largest clique has size $3$, so it is $K_{4}$-free.\n\nTherefore any $9$-vertex graph with more than $27$ edges contains a $K_{4}$, and the maximum number of edges avoiding $K_{4}$ is $27$. Starting from $36$ edges, the minimum number of edges to sever to eliminate all $K_{4}$ is\n$$\n36-27=9.\n$$\nThis bound is tight, since $K_{3,3,3}$ has no $K_{4}$.", "answer": "$$\\boxed{9}$$", "id": "1551484"}, {"introduction": "While Turán's theorem guarantees the existence of a clique in a sufficiently dense graph, it doesn't immediately tell us how to find one. This practice delves into a constructive proof of the theorem, presented as an algorithm that provides a step-by-step method for locating a clique. By tracing this algorithm, you will move beyond the theorem's existence claim and gain a deeper, procedural understanding of why it holds true. [@problem_id:1551490]", "problem": "In the field of network analysis, identifying a \"clique,\" a subset of nodes where every two distinct nodes are adjacent, is a fundamental problem. A complete graph on $r$ vertices is denoted by $K_r$. Turán's theorem provides a powerful result on the number of edges that guarantees the existence of such a structure. Specifically, any graph with $n$ vertices and more than $t(n, r-1)$ edges must contain a $K_r$ subgraph. The number $t(n, k)$, known as the Turán number, is the maximum number of edges in an $n$-vertex graph that does not contain a $K_{k+1}$ subgraph. This number is realized by the Turán graph $T(n, k)$, a complete $k$-partite graph on $n$ vertices where the partition sizes are as balanced as possible (any two sizes differ by at most 1).\n\nA constructive proof of Turán's theorem yields the following recursive algorithm to find a $K_r$ in a graph $G$ that satisfies the edge density condition.\n\n**Algorithm: `FindClique(G, r)`**\n\n1.  Let $n$ be the number of vertices and $m$ be the number of edges in the input graph `G`. Let `r` be the desired clique size.\n2.  **Base Case:** If $n=r$ and $m = \\binom{r}{2}$ (i.e., `G` is a complete graph), the algorithm returns the set of all vertices in `G`.\n3.  **Vertex Selection:** Identify the vertex `v` in `G` that has the minimum degree. If there is a tie, select the vertex with the smallest integer label.\n4.  **Recursive Step:**\n    a. Let $G' = G - v$ be the graph obtained by removing `v` and all its incident edges.\n    b. If the number of edges in $G'$, $|E(G')|$, is greater than $t(n-1, r-1)$, then the algorithm returns the result of the recursive call `FindClique(G', r)`.\n    c. Otherwise, let $S$ be the set of neighbors of `v`. Let $H=G[S]$ be the subgraph of `G` induced by the vertices in $S$. The algorithm returns $\\{v\\} \\cup \\text{FindClique}(H, r-1)$.\n\n**Your Task:**\n\nConsider a graph $G$ with the vertex set $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$. The graph is nearly a complete graph, missing only the following set of 6 edges: $\\{\\{1,3\\}, \\{2,3\\}, \\{4,5\\}, \\{4,6\\}, \\{5,6\\}, \\{7,8\\}\\}$.\n\nApply the `FindClique` algorithm to this graph $G$ to find a clique of size 4 (a $K_4$). Which of the following sets of vertices is returned by the algorithm?\n\nA. $\\{1, 2, 4, 7\\}$\n\nB. $\\{1, 2, 6, 8\\}$\n\nC. $\\{3, 4, 5, 6\\}$\n\nD. $\\{1, 2, 3, 4\\}$\n\nE. $\\{4, 5, 7, 8\\}$", "solution": "The problem asks us to trace the `FindClique(G, 4)` algorithm on a given graph $G$.\n\nFirst, let's characterize the input graph $G$.\nThe vertex set is $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$, so $n=8$.\nThe total number of possible edges in a graph with 8 vertices is $\\binom{8}{2} = \\frac{8 \\times 7}{2} = 28$.\nThe problem states that 6 specific edges are missing. Therefore, the number of edges in $G$ is $m = 28 - 6 = 22$.\nThe desired clique size is $r=4$.\n\nThe algorithm's guarantee relies on Turán's theorem. We must check if $m > t(n, r-1)$. Here, we need to check if $22 > t(8, 3)$.\nTo calculate $t(8, 3)$, we consider the Turán graph $T(8, 3)$, which is a complete 3-partite graph on 8 vertices with partitions as balanced as possible. We partition 8 vertices into 3 parts: $8 = 3+3+2$.\nThe number of edges in $T(8, 3)$ is the number of edges in the complete graph $K_8$ minus the edges within the partitions.\nThe number of non-edges is $\\binom{3}{2} + \\binom{3}{2} + \\binom{2}{2} = 3 + 3 + 1 = 7$.\nSo, $t(8, 3) = \\binom{8}{2} - 7 = 28 - 7 = 21$.\nSince $m = 22 > 21 = t(8, 3)$, the algorithm is guaranteed to find a $K_4$.\n\nLet's execute the algorithm step-by-step.\n\n**Initial Call: `FindClique(G, 4)`**\n- Input: Graph $G$ with $n=8, m=22$. Integer $r=4$.\n- The base case doesn't apply as $n \\neq r$.\n- **Step 3: Vertex Selection.** We need to find the minimum degree vertex. Let's compute the degrees of all vertices in $G$. The degree of a vertex is $n-1=7$ minus the number of its missing incident edges.\n  - $d(1)$: Missing edge $\\{1,3\\}$. $d(1) = 7-1=6$.\n  - $d(2)$: Missing edge $\\{2,3\\}$. $d(2) = 7-1=6$.\n  - $d(3)$: Missing edges $\\{1,3\\}, \\{2,3\\}$. $d(3) = 7-2=5$.\n  - $d(4)$: Missing edges $\\{4,5\\}, \\{4,6\\}$. $d(4) = 7-2=5$.\n  - $d(5)$: Missing edges $\\{4,5\\}, \\{5,6\\}$. $d(5) = 7-2=5$.\n  - $d(6)$: Missing edges $\\{4,6\\}, \\{5,6\\}$. $d(6) = 7-2=5$.\n  - $d(7)$: Missing edge $\\{7,8\\}$. $d(7) = 7-1=6$.\n  - $d(8)$: Missing edge $\\{7,8\\}$. $d(8) = 7-1=6$.\n  The minimum degree is $\\delta(G)=5$. The vertices with this degree are $\\{3, 4, 5, 6\\}$. According to the tie-breaking rule, we select the one with the smallest label, so $v=3$.\n- **Step 4: Recursive Step.**\n  - Let $G' = G-3$. The new graph has $n-1=7$ vertices. Its number of edges is $|E(G')| = m - d(3) = 22 - 5 = 17$.\n  - We check the condition: Is $|E(G')| > t(7, 3)$?\n    - To calculate $t(7, 3)$, we partition 7 vertices into 3 parts: $7=3+2+2$.\n    - Non-edges in $T(7,3)$ are $\\binom{3}{2} + \\binom{2}{2} + \\binom{2}{2} = 3 + 1 + 1 = 5$.\n    - $t(7, 3) = \\binom{7}{2} - 5 = 21 - 5 = 16$.\n  - The condition is $17 > 16$, which is true. So, the algorithm proceeds to call `FindClique(G', 4)`.\n\n**Recursive Call 1: `FindClique(G', 4)`**\n- Input: Graph $G'$ with $n=7, m=17$. $r=4$. $V(G') = \\{1,2,4,5,6,7,8\\}$.\n- **Step 3: Vertex Selection.** We find the degrees in $G'$. The neighbors of vertex 3 in $G$ were all vertices except 1 and 2. So removing 3 reduces the degree of $\\{4,5,6,7,8\\}$ by 1.\n  - $d_{G'}(1)=6$. $d_{G'}(2)=6$.\n  - $d_{G'}(4)=d_G(4)-1 = 5-1=4$.\n  - $d_{G'}(5)=d_G(5)-1 = 5-1=4$.\n  - $d_{G'}(6)=d_G(6)-1 = 5-1=4$.\n  - $d_{G'}(7)=d_G(7)-1 = 6-1=5$.\n  - $d_{G'}(8)=d_G(8)-1 = 6-1=5$.\n  The min degree in $G'$ is 4, for vertices $\\{4,5,6\\}$. The smallest label is 4, so we pick $v'=4$.\n- **Step 4: Recursive Step.**\n  - Let $G'' = G' - 4$. It has $7-1=6$ vertices. Edge count is $|E(G'')| = 17 - d_{G'}(4) = 17-4 = 13$.\n  - Check condition: Is $|E(G'')| > t(6, 3)$?\n    - $t(6, 3)$: partition 6 as $2+2+2$. Non-edges: $3 \\times \\binom{2}{2} = 3$. $t(6, 3) = \\binom{6}{2} - 3 = 15 - 3 = 12$.\n  - The condition is $13 > 12$, which is true. We call `FindClique(G'', 4)`.\n\n**Recursive Call 2: `FindClique(G'', 4)`**\n- Input: Graph $G''$ with $n=6, m=13$. $r=4$. $V(G'') = \\{1,2,5,6,7,8\\}$.\n- **Step 3: Vertex Selection.** We find degrees in $G''$. Removing 4 (neighbors in $G'$ are all except 3, 5, 6) reduces degrees of $\\{1,2,7,8\\}$.\n  - $d_{G''}(1)=d_{G'}(1)-1 = 6-1=5$.\n  - $d_{G''}(2)=d_{G'}(2)-1 = 6-1=5$.\n  - $d_{G''}(5)=d_{G'}(5)=4$.\n  - $d_{G''}(6)=d_{G'}(6)=4$.\n  - $d_{G''}(7)=d_{G'}(7)-1=5-1=4$.\n  - $d_{G''}(8)=d_{G'}(8)-1=5-1=4$.\n  Min degree is 4, for vertices $\\{5,6,7,8\\}$. Smallest label is 5, so $v''=5$.\n- **Step 4: Recursive Step.**\n  - Let $G''' = G'' - 5$. It has $6-1=5$ vertices. Edge count is $|E(G''')| = 13 - d_{G''}(5) = 13-4 = 9$.\n  - Check condition: Is $|E(G''')| > t(5, 3)$?\n    - $t(5, 3)$: partition 5 as $2+2+1$. Non-edges: $\\binom{2}{2}+\\binom{2}{2}+\\binom{1}{2}=1+1+0=2$. $t(5, 3) = \\binom{5}{2}-2 = 10-2=8$.\n  - The condition is $9>8$, which is true. We call `FindClique(G''', 4)`.\n\n**Recursive Call 3: `FindClique(G''', 4)`**\n- Input: Graph $G'''$ with $n=5, m=9$. $r=4$. $V(G''')=\\{1,2,6,7,8\\}$.\n- **Step 3: Vertex Selection.** Find degrees in $G'''$. Removing 5 (neighbors in $G''$ are all except 3, 4, 6) reduces degrees of $\\{1,2,7,8\\}$.\n  - $d_{G'''}(1)=d_{G''}(1)-1=5-1=4$.\n  - $d_{G'''}(2)=d_{G''}(2)-1=5-1=4$.\n  - $d_{G'''}(6)=d_{G''}(6)=4$.\n  - $d_{G'''}(7)=d_{G''}(7)-1=4-1=3$.\n  - $d_{G'''}(8)=d_{G''}(8)-1=4-1=3$.\n  Min degree is 3, for vertices $\\{7,8\\}$. Smallest label is 7, so $v'''=7$.\n- **Step 4: Recursive Step.**\n  - Let $G'''' = G''' - 7$. It has $5-1=4$ vertices. Edge count is $|E(G'''')| = 9 - d_{G'''}(7) = 9-3=6$.\n  - Check condition: Is $|E(G'''')| > t(4, 3)$?\n    - $t(4, 3)$: partition 4 as $2+1+1$. Non-edges: $\\binom{2}{2}=1$. $t(4, 3) = \\binom{4}{2}-1 = 6-1=5$.\n  - The condition is $6>5$, true. We call `FindClique(G'''', 4)`.\n\n**Recursive Call 4: `FindClique(G'''', 4)`**\n- Input: Graph $G''''$ with $n=4, m=6$. $r=4$. $V(G'''')=\\{1,2,6,8\\}$.\n- **Step 2: Base Case.** We have $n=4$ and $r=4$. We check if $m = \\binom{4}{2}$.\n  - $\\binom{4}{2} = \\frac{4 \\times 3}{2} = 6$.\n  - Indeed, $m=6$. So $G''''$ is a complete graph $K_4$.\n- The base case applies, and the algorithm returns the vertex set $V(G'''') = \\{1, 2, 6, 8\\}$.\n\nThis result is then passed up the chain of recursive calls and is the final output of the initial call. The set of vertices found is $\\{1, 2, 6, 8\\}$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1551490"}]}