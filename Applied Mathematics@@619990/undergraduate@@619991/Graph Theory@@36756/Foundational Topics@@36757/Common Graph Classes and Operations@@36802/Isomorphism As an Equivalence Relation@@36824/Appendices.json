{"hands_on_practices": [{"introduction": "The concept of isomorphism allows us to treat structurally identical graphs as the same, partitioning the infinite set of labeled graphs into a finite number of fundamental \"blueprints\" or equivalence classes. This exercise provides hands-on practice with this core idea by asking you to enumerate all the distinct structural classes for a small network that is constrained to be a tree. By systematically exploring the possibilities, you will gain a concrete understanding of how graph theory classifies complex networks into a manageable set of non-isomorphic forms [@problem_id:1515152].", "problem": "In the field of network science, engineers are designing small-scale, fault-tolerant communication systems. A fundamental unit of these systems is a \"network configuration,\" which consists of a set of nodes and the connections between them. A valid configuration must adhere to three specific rules:\n1.  **Simplicity**: Each connection links a distinct pair of nodes. There are no connections from a node to itself, and no more than one connection exists between any two nodes.\n2.  **Connectivity**: It must be possible to trace a path of connections from any node to any other node in the network.\n3.  **Acyclicity**: There are no closed loops; one cannot start at a node, follow a sequence of unique connections, and return to the starting node.\n\nTwo network configurations are considered \"structurally equivalent\" if there is a one-to-one correspondence between their nodes such that the pattern of connections is preserved. That is, if node A is connected to node B in the first network, then the corresponding nodes in the second network must also be connected. This concept of structural equivalence partitions the set of all possible configurations into distinct equivalence classes.\n\nConsider the set of all possible valid network configurations that have exactly 5 nodes. How many distinct structural equivalence classes are there for this set?\n\nA. 2\n\nB. 3\n\nC. 4\n\nD. 5\n\nE. 6", "solution": "Interpret each network configuration as a simple graph. The three rules (simplicity, connectivity, acyclicity) together define a tree. Structural equivalence is graph isomorphism. Therefore, the task is to count the number of non-isomorphic trees on exactly 5 vertices.\n\nFor any tree on $n$ vertices, the number of edges is $n-1$, and the degree sum satisfies\n$$\n\\sum_{v} \\deg(v) = 2(n-1).\n$$\nWith $n=5$, we have\n$$\n\\sum_{v} \\deg(v) = 2(5-1) = 8.\n$$\nLet $L$ be the number of leaves (vertices of degree $1$), let $s$ be the number of vertices of degree $2$, and let there be $t$ vertices of degree at least $3$ with degrees $m_{1},\\dots,m_{t}$, each $m_{i} \\geq 3$. Using\n$$\n\\sum_{v} (\\deg(v)-2) = -2\n$$\nand partitioning the vertex set by degree, we get\n$$\n(-1)L + 0 \\cdot s + \\sum_{i=1}^{t} (m_{i}-2) = -2,\n$$\nhence\n$$\nL = 2 + \\sum_{i=1}^{t} (m_{i}-2).\n$$\nAlso,\n$$\nn = L + s + t.\n$$\n\nEnumerate possibilities for $n=5$:\n\n1) $t=0$. Then $L=2$ and all remaining vertices have degree $2$. Thus the degree multiset is $\\{2,2,2,1,1\\}$, which is the path $P_{5}$.\n\n2) $t=1$ with the unique high-degree vertex having degree $m \\geq 3$. Then\n$$\nL = 2 + (m-2) = m,\n$$\nand\n$$\n5 = n = L + s + t = m + s + 1 \\implies s = 4 - m.\n$$\nSince $s \\geq 0$, we must have $m \\in \\{3,4\\}$, yielding two non-isomorphic trees:\n- For $m=3$: degree multiset $\\{3,2,1,1,1\\}$.\n- For $m=4$: degree multiset $\\{4,1,1,1,1\\}$ (the star $K_{1,4}$).\n\n3) $t \\geq 2$. The minimal case $t=2$ with $m_{1}=m_{2}=3$ gives\n$$\nL = 2 + (3-2) + (3-2) = 4,\n$$\nand then\n$$\nn = L + s + t = 4 + s + 2 \\geq 6,\n$$\nwhich contradicts $n=5$. Larger $t$ only increases $n$, so no such trees exist.\n\nTherefore, there are exactly three non-isomorphic trees on 5 vertices: $P_{5}$, the tree with degree multiset $\\{3,2,1,1,1\\}$, and $K_{1,4}$. This corresponds to choice B.", "answer": "$$\\boxed{B}$$", "id": "1515152"}, {"introduction": "While proving two graphs are isomorphic requires finding an explicit vertex mapping, proving they are *not* isomorphic is often simpler: we just need to find a structural property that they do not share. These properties, known as graph invariants, include familiar metrics like the number of vertices and edges, as well as more subtle ones like the degree sequence or chromatic number. This problem [@problem_id:1515179] challenges you to act as a detective, using a collection of invariants to distinguish between graphs that may appear similar on the surface.", "problem": "In graph theory, two simple graphs $G_1 = (V_1, E_1)$ and $G_2 = (V_2, E_2)$ are said to be **isomorphic** if there exists a bijection $f: V_1 \\to V_2$ such that any two vertices $u$ and $v$ of $V_1$ are adjacent in $G_1$ if and only if $f(u)$ and $f(v)$ are adjacent in $G_2$. The **chromatic number** of a graph, denoted $\\chi(G)$, is the minimum number of colors needed to color the vertices of $G$ so that no two adjacent vertices share the same color.\n\nConsider the following five simple graphs, defined by their vertex sets ($V$) and edge sets ($E$).\n\n*   **Graph A:** $V_A = \\{1, 2, 3, 4, 5\\}$, $E_A = \\{\\{1,2\\}, \\{2,3\\}, \\{3,1\\}, \\{1,4\\}, \\{4,5\\}\\}$\n*   **Graph B:** $V_B = \\{p, q, r, s, t\\}$, $E_B = \\{\\{p,q\\}, \\{q,r\\}, \\{r,p\\}, \\{p,s\\}, \\{q,t\\}\\}$\n*   **Graph C:** $V_C = \\{1, 2, 3, 4, 5\\}$, $E_C = \\{\\{1,2\\}, \\{2,3\\}, \\{3,4\\}, \\{4,5\\}, \\{5,1\\}\\}$\n*   **Graph D:** $V_D = \\{a, b, c, d, e\\}$, $E_D = \\{\\{a,b\\}, \\{b,c\\}, \\{c,d\\}, \\{d,e\\}, \\{e,a\\}, \\{a,c\\}\\}$\n*   **Graph E:** $V_E = \\{v_1, v_2, v_3, v_4, v_5\\}$, $E_E = \\{\\{v_1,v_2\\}, \\{v_2,v_3\\}, \\{v_3,v_4\\}, \\{v_4,v_1\\}, \\{v_1,v_5\\}\\}$\n\nWhich of the following options presents a pair of graphs, $G_X$ and $G_Y$, that are non-isomorphic, but both have a vertex count $|V|=5$, an edge count $|E|=5$, and a chromatic number $\\chi(G)=3$?\n\nA. The pair (Graph A, Graph D)\n\nB. The pair (Graph C, Graph E)\n\nC. The pair (Graph A, Graph B)\n\nD. The pair (B, D)\n\nE. The pair (A, E)", "solution": "We begin by recording the vertex and edge counts and computing the chromatic number for each graph, using standard invariants and properties.\n\nFor Graph A: $|V_{A}|=5$ and $|E_{A}|=5$ since $E_{A}$ contains $5$ edges. The subgraph induced by $\\{1,2,3\\}$ is a triangle $K_{3}$, which implies $\\chi(G_{A}) \\geq 3$. A $3$-coloring exists by assigning distinct colors to $1,2,3$ and then coloring $4$ with the color of either $2$ or $3$ (since $4$ is adjacent only to $1$ and $5$), and finally coloring $5$ with any color different from that of $4$. Hence $\\chi(G_{A})=3$. The degree sequence is $d(G_{A})=(3,2,2,2,1)$.\n\nFor Graph B: $|V_{B}|=5$ and $|E_{B}|=5$. The subgraph induced by $\\{p,q,r\\}$ is $K_{3}$, so $\\chi(G_{B}) \\geq 3$. A $3$-coloring exists by coloring the triangle with three distinct colors and then coloring $s$ with a color different from that of $p$ and coloring $t$ with a color different from that of $q$, so $\\chi(G_{B})=3$. The degree sequence is $d(G_{B})=(3,3,2,1,1)$.\n\nFor Graph C: $|V_{C}|=5$ and $|E_{C}|=5$. It is a cycle $C_{5}$, an odd cycle, which has $\\chi(C_{5})=3$. The degree sequence is $d(G_{C})=(2,2,2,2,2)$.\n\nFor Graph D: $|V_{D}|=5$ and $|E_{D}|=6$ because it is a $5$-cycle with an extra chord $\\{a,c\\}$. Although it contains a triangle and thus has $\\chi(G_{D})=3$, it fails the $|E|=5$ requirement.\n\nFor Graph E: $|V_{E}|=5$ and $|E_{E}|=5$. It consists of a $4$-cycle with a pendant vertex attached at $v_{1}$, which is bipartite, hence $\\chi(G_{E})=2$. The degree sequence is $d(G_{E})=(3,2,2,1,1)$.\n\nWe now test the options against the requirements: both graphs in the pair must have $|V|=5$, $|E|=5$, and $\\chi(G)=3$, and be non-isomorphic.\n\nOption A (A, D) fails because $|E_{D}|=6$.\n\nOption B (C, E) fails because $\\chi(G_{E})=2$.\n\nOption C (A, B) satisfies $|V|=5$, $|E|=5$, and $\\chi=3$ for both graphs. To confirm non-isomorphism, we use the degree sequence as an isomorphism invariant: $d(G_{A})=(3,2,2,2,1)$ is different from $d(G_{B})=(3,3,2,1,1)$, hence $G_{A} \\not\\cong G_{B}$.\n\nOption D (B, D) fails because $|E_{D}|=6$.\n\nOption E (A, E) fails because $\\chi(G_{E})=2$.\n\nTherefore, the correct pair is (Graph A, Graph B), i.e., option C.", "answer": "$$\\boxed{C}$$", "id": "1515179"}, {"introduction": "Isomorphism is not just for comparing different graphs; it also reveals the internal symmetries of a single graph. An isomorphism from a graph to itself is called an automorphism, and the number of such automorphisms quantifies the graph's structural symmetryâ€”a graph with more automorphisms is more symmetric. This practice [@problem_id:1515174] invites you to calculate the number of structure-preserving relabelings for a simple cycle graph, providing a tangible link between the abstract algebraic concept of an automorphism group and the intuitive geometric idea of symmetry.", "problem": "Consider a simple, undirected graph defined by a set of four vertices, $V = \\{v_1, v_2, v_3, v_4\\}$, arranged in a cycle. The set of edges is $E = \\{\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\{v_3, v_4\\}, \\{v_4, v_1\\}\\}$. We are interested in the number of ways to relabel the vertices of this graph while preserving its adjacency structure.\n\nA relabeling is a function $\\phi: V \\to V$ that is a bijection (i.e., a permutation of the vertices). A relabeling $\\phi$ is said to be structure-preserving if for any two vertices $u, w \\in V$, the edge $\\{u, w\\}$ exists in the original graph if and only if the edge $\\{\\phi(u), \\phi(w)\\}$ also exists.\n\nCalculate the total number of distinct structure-preserving relabelings. This count should include the identity relabeling where each vertex is mapped to itself.", "solution": "Let the graph be $G = (V, E)$, where $V = \\{v_1, v_2, v_3, v_4\\}$ and $E = \\{\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\{v_3, v_4\\}, \\{v_4, v_1\\}\\}$. We are looking for the number of bijections $\\phi: V \\to V$ such that $\\{u, w\\} \\in E$ if and only if $\\{\\phi(u), \\phi(w)\\} \\in E$. Such a bijection is also known as an automorphism of the graph.\n\nLet us determine the mapping $\\phi$ by considering the image of each vertex sequentially.\n\nFirst, consider the vertex $v_1$. Since the graph is a cycle, all vertices are structurally identical. This means that for any vertex $v_i$, we can find a structure-preserving relabeling that maps $v_1$ to $v_i$. Therefore, we have 4 possible choices for the image of $v_1$ under $\\phi$: it can be $v_1, v_2, v_3,$ or $v_4$.\n\nLet's fix one of these choices and see how many ways we can complete the mapping. Let us assume we map $v_1$ to a specific vertex. Without loss of generality, let's analyze the case where $\\phi(v_1) = v_1$. The total number of relabelings will be 4 times the number of possibilities we find for this specific case, due to the symmetry of the graph.\n\nThe neighbors of $v_1$ in the graph are $v_2$ and $v_4$. The property of being structure-preserving means that the images of the neighbors of $v_1$ must be the neighbors of the image of $v_1$.\nThe neighbors of $\\phi(v_1) = v_1$ are also $v_2$ and $v_4$.\nTherefore, the set of images of the neighbors of $v_1$, which is $\\{\\phi(v_2), \\phi(v_4)\\}$, must be equal to the set of neighbors of $\\phi(v_1)$, which is $\\{v_2, v_4\\}$.\nThis leaves us with two possibilities for mapping the neighbors of $v_1$:\n\nCase 1: The neighbors are mapped to themselves.\n$\\phi(v_2) = v_2$ and $\\phi(v_4) = v_4$.\nNow we must determine the image of the last vertex, $v_3$. The vertex $v_3$ is the only vertex adjacent to both $v_2$ and $v_4$. For the mapping to be structure-preserving, $\\phi(v_3)$ must be the only vertex adjacent to both $\\phi(v_2)$ and $\\phi(v_4)$.\nSince $\\phi(v_2) = v_2$ and $\\phi(v_4) = v_4$, $\\phi(v_3)$ must be adjacent to both $v_2$ and $v_4$. The unique vertex with this property is $v_3$.\nSo, we must have $\\phi(v_3) = v_3$.\nThis gives the mapping $\\phi(v_1)=v_1, \\phi(v_2)=v_2, \\phi(v_3)=v_3, \\phi(v_4)=v_4$, which is the identity relabeling. This is one valid relabeling.\n\nCase 2: The neighbors are swapped.\n$\\phi(v_2) = v_4$ and $\\phi(v_4) = v_2$.\nAgain, we determine the image of $v_3$. The vertex $\\phi(v_3)$ must be the unique vertex adjacent to both $\\phi(v_2) = v_4$ and $\\phi(v_4) = v_2$. The unique vertex adjacent to both $v_4$ and $v_2$ is $v_3$.\nSo, we must have $\\phi(v_3) = v_3$.\nThis gives the mapping $\\phi(v_1)=v_1, \\phi(v_2)=v_4, \\phi(v_3)=v_3, \\phi(v_4)=v_2$. This relabeling corresponds to a reflection of the cycle across the diagonal axis passing through $v_1$ and $v_3$. This is a second valid relabeling.\n\nSo, for the initial choice of $\\phi(v_1) = v_1$, there are exactly 2 possible structure-preserving relabelings.\n\nAs established earlier, there are 4 initial choices for the image of $v_1$. The argument for the number of subsequent choices is identical for each of these initial choices due to the symmetry of the cycle graph.\nFor example, if we had chosen $\\phi(v_1) = v_2$, its neighbors $\\{v_2, v_4\\}$ would have to be mapped to the neighbors of $v_2$, which are $\\{v_1, v_3\\}$. This gives 2 choices, and each choice would uniquely determine the full mapping.\n\nTherefore, the total number of distinct structure-preserving relabelings is the number of choices for the image of $v_1$ multiplied by the number of ways to map its neighbors for each choice.\n\nTotal number = (Choices for $\\phi(v_1)$) $\\times$ (Choices for mapping the neighbors of $v_1$)\nTotal number = $4 \\times 2 = 8$.\n\nThe 8 relabelings correspond to the elements of the dihedral group $D_4$, which is the group of symmetries of a square. These are 4 rotations (including the 0-degree rotation, which is the identity) and 4 reflections.", "answer": "$$\\boxed{8}$$", "id": "1515174"}]}