{"hands_on_practices": [{"introduction": "Understanding the concept of connected components begins with the practical ability to identify them within a given graph. This first exercise presents a concrete scenario—a communication network of isolated outposts—and challenges you to map out a single sub-network by tracing its connections. By applying a systematic graph traversal method, such as Breadth-First Search (BFS) or Depth-First Search (DFS), you will translate the abstract definition of a connected component into a tangible, algorithmic skill that is essential for any form of network analysis [@problem_id:1359170].", "problem": "A remote research project maintains a network of 26 isolated outposts, labeled 'A' through 'Z'. Communication between outposts is only possible if a direct link exists. The complete network topology is described by the following adjacency list, where each outpost is listed with the other outposts it can directly communicate with. An analyst needs to determine the scope of a broadcast message sent from one of the outposts. The graph is undirected, so if outpost X is linked to Y, then Y is also linked to X.\n\nThe adjacency list is as follows:\n- A: E\n- B:\n- C: G\n- D:\n- E: A, I\n- F:\n- G: C, K\n- H:\n- I: E, O\n- J:\n- K: G, X\n- L:\n- M:\n- N:\n- O: I, U\n- P:\n- Q: X, W\n- R:\n- S: T\n- T: S, Z\n- U: O, Y\n- V:\n- W: Q\n- X: K, Q\n- Y: U\n- Z: T\n\nDetermine the total number of outposts that belong to the same communication sub-network as outpost 'C'. Note that an outpost is considered part of its own sub-network.", "solution": "The problem asks for the size of the connected component (communication sub-network) containing outpost C in an undirected graph defined by the given adjacency list. Two vertices are in the same component if there exists a path between them.\n\nUse a breadth-first search starting from C, maintaining a visited set. Initialize the visited set and frontier as\n$$\nS_{0}=\\{C\\},\\quad F_{0}=\\{C\\}.\n$$\n\nExpand from C. The neighbors of C are\n$$\nN(C)=\\{G\\}.\n$$\nUpdate the visited set and frontier:\n$$\nS_{1}=\\{C,G\\},\\quad F_{1}=\\{G\\}.\n$$\n\nExpand from G. The neighbors of G are\n$$\nN(G)=\\{C,K\\}.\n$$\nC is already visited; add K:\n$$\nS_{2}=\\{C,G,K\\},\\quad F_{2}=\\{K\\}.\n$$\n\nExpand from K. The neighbors of K are\n$$\nN(K)=\\{G,X\\}.\n$$\nG is already visited; add X:\n$$\nS_{3}=\\{C,G,K,X\\},\\quad F_{3}=\\{X\\}.\n$$\n\nExpand from X. The neighbors of X are\n$$\nN(X)=\\{K,Q\\}.\n$$\nK is already visited; add Q:\n$$\nS_{4}=\\{C,G,K,X,Q\\},\\quad F_{4}=\\{Q\\}.\n$$\n\nExpand from Q. The neighbors of Q are\n$$\nN(Q)=\\{X,W\\}.\n$$\nX is already visited; add W:\n$$\nS_{5}=\\{C,G,K,X,Q,W\\},\\quad F_{5}=\\{W\\}.\n$$\n\nExpand from W. The neighbors of W are\n$$\nN(W)=\\{Q\\},\n$$\nwhich is already visited; no new additions. The frontier becomes empty, so the search terminates.\n\nTherefore, the connected component containing C is\n$$\n\\{C,G,K,X,Q,W\\},\n$$\nand its size is\n$$\n|S_{5}|=6.\n$$", "answer": "$$\\boxed{6}$$", "id": "1359170"}, {"introduction": "Once we can identify components, a natural and fundamental question arises in graph theory: for a given number of vertices and a target number of components, what are the structural limits of the graph? This problem asks you to explore these boundaries by determining the minimum and maximum number of edges possible under such constraints. This exercise encourages you to think about the most 'economical' way to form connections (a forest) versus the most 'dense' configuration (a large complete graph with isolated vertices), revealing core principles used in network design and optimization [@problem_id:1359173].", "problem": "A new social networking platform is modeled as a simple graph where users are vertices and friendships are edges. At its initial launch, the platform has $n$ registered users but no friendships have been formed yet. The graph is therefore an empty graph, consisting of $n$ vertices and no edges.\n\nThe platform's engineers want to add edges (friendships) to the graph. Their goal is for the final graph to have exactly $k$ distinct social circles, where a social circle is defined as a connected component. Assume that $n$ and $k$ are integers such that $n  k \\geq 1$.\n\nYou are tasked with finding the minimum and maximum number of edges the graph can have while satisfying this condition. Let $E_{min}$ be the minimum number of edges and $E_{max}$ be the maximum number of edges.\n\nProvide the analytic expressions for $E_{min}$ and $E_{max}$ in terms of $n$ and $k$. Your answer should be presented as a row matrix containing the expressions for $E_{min}$ and $E_{max}$, in that order.", "solution": "We consider a simple graph on $n$ labeled vertices. Initially there are no edges, so there are $n$ connected components. Each time we add an edge, the number of connected components can decrease by at most $1$: if the edge connects two vertices already in the same component, the number of components does not change; if it connects vertices in two different components, the number of components decreases by exactly $1$.\n\nTo achieve exactly $k$ connected components starting from $n$ components, we must reduce the number of components by $n-k$. Therefore, at least $n-k$ edges are required, and hence\n$$\nE_{\\min}\\geq n-k.\n$$\nThis bound is achievable by constructing a forest with exactly $k$ tree components. If the sizes of the $k$ components are $n_{1},\\dots,n_{k}$ with $\\sum_{i=1}^{k}n_{i}=n$, then taking each component to be a tree uses $(n_{i}-1)$ edges in component $i$, for a total of\n$$\n\\sum_{i=1}^{k}(n_{i}-1)=\\left(\\sum_{i=1}^{k}n_{i}\\right)-k=n-k.\n$$\nThus\n$$\nE_{\\min}=n-k.\n$$\n\nFor the maximum number of edges with exactly $k$ connected components, let the component sizes be $n_{1},\\dots,n_{k}$ with $\\sum_{i=1}^{k}n_{i}=n$ and $n_{i}\\geq 1$. Within each component, the number of edges is maximized when the component is complete, contributing $\\binom{n_{i}}{2}$ edges. Therefore the total number of edges is at most\n$$\n\\sum_{i=1}^{k}\\binom{n_{i}}{2}.\n$$\nWe maximize this sum subject to $\\sum_{i=1}^{k}n_{i}=n$. Since the function $x\\mapsto \\binom{x}{2}$ is convex for $x\\geq 0$, the sum is maximized by making one component as large as possible and the others as small as possible. Concretely, take $n_{1}=n-k+1$ and $n_{2}=\\cdots=n_{k}=1$, which yields\n$$\nE_{\\max}=\\binom{n-k+1}{2}+(k-1)\\binom{1}{2}=\\binom{n-k+1}{2}.\n$$\n\nTherefore, the required expressions are $E_{\\min}=n-k$ and $E_{\\max}=\\binom{n-k+1}{2}$, which we present as a row matrix in the specified order.", "answer": "$$\\boxed{\\begin{pmatrix} n-k  \\binom{n-k+1}{2} \\end{pmatrix}}$$", "id": "1359173"}, {"introduction": "More advanced graph analysis often requires deducing a network's static structure from its dynamic properties or behavior under small changes. This final practice is a compelling puzzle where a specific constraint on adding new edges reveals a critical, non-obvious property about the internal structure of the existing components. To solve this, you must synthesize your understanding of connectivity and realize that the given condition implies each component is 'maximally connected'—that is, a complete graph. This problem sharpens your deductive reasoning and provides deep insight into the interplay between local and global graph properties [@problem_id:1491615].", "problem": "A network testbed is being configured with 8 servers, which can be modeled as vertices in a graph. The network links are the edges of the graph, which is known to be a *simple graph* (no self-loops or multiple edges between the same two vertices). The initial configuration of the network must satisfy two critical design requirements:\n\n1. The graph consists of exactly 3 non-empty *connected components*. (A connected component is a subgraph in which any two vertices are connected to each other by paths, and which is connected to no additional vertices in the supergraph.)\n2. The topology is such that adding any single new edge between any two vertices not already connected by an edge results in a graph with exactly 2 connected components.\n\nIf the total number of edges in this initial configuration is exactly 9, determine the sizes (i.e., the number of vertices) of the three connected components. List the three sizes in non-decreasing order.", "solution": "Let the three connected components have vertex counts $s_{1} \\leq s_{2} \\leq s_{3}$, with $s_{1} + s_{2} + s_{3} = 8$. The total number of edges is the sum of edges inside each component.\n\nThe condition that adding any single missing edge reduces the number of connected components from $3$ to $2$ implies there are no missing edges within any component. Indeed, adding an edge within a component would not change the number of connected components, contradicting the requirement. Therefore, each component must be a complete graph, i.e., the components are cliques $K_{s_{1}}, K_{s_{2}}, K_{s_{3}}$.\n\nHence, the total number of edges is\n$$\n\\binom{s_{1}}{2} + \\binom{s_{2}}{2} + \\binom{s_{3}}{2} = 9.\n$$\nUsing $\\binom{s}{2} = \\frac{s(s-1)}{2}$ and $s_{1} + s_{2} + s_{3} = 8$, we obtain\n$$\n\\binom{s_{1}}{2} + \\binom{s_{2}}{2} + \\binom{s_{3}}{2}\n= \\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - (s_{1} + s_{2} + s_{3})\\right)\n= \\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - 8\\right).\n$$\nSetting this equal to $9$ gives\n$$\n\\frac{1}{2}\\left(s_{1}^{2} + s_{2}^{2} + s_{3}^{2} - 8\\right) = 9\n\\quad \\Longrightarrow \\quad\ns_{1}^{2} + s_{2}^{2} + s_{3}^{2} = 26.\n$$\nWe need positive integers $s_{1} \\leq s_{2} \\leq s_{3}$ with $s_{1} + s_{2} + s_{3} = 8$ and $s_{1}^{2} + s_{2}^{2} + s_{3}^{2} = 26$. Try $s_{1} = 1$. Then $s_{2} + s_{3} = 7$ and $s_{2}^{2} + s_{3}^{2} = 25$. Using $(s_{2} + s_{3})^{2} = s_{2}^{2} + s_{3}^{2} + 2 s_{2} s_{3}$ gives\n$$\n49 = 25 + 2 s_{2} s_{3}\n\\quad \\Longrightarrow \\quad\ns_{2} s_{3} = 12,\n$$\nwhose positive integer solutions with $s_{2} \\leq s_{3}$ and $s_{2} + s_{3} = 7$ are $(s_{2}, s_{3}) = (3, 4)$. Therefore $(s_{1}, s_{2}, s_{3}) = (1, 3, 4)$.\n\nFor completeness, checking $s_{1} = 2$ gives $s_{2} + s_{3} = 6$ and $s_{2}^{2} + s_{3}^{2} = 22$, implying $36 = 22 + 2 s_{2} s_{3}$ and $s_{2} s_{3} = 7$, which has no integer solution. Larger $s_{1}$ values are incompatible with the required sums. Hence the only possibility is $(1, 3, 4)$.\n\nFinally, this choice is valid: the components are $K_{1}, K_{3}, K_{4}$, with edge count $0 + 3 + 6 = 9$, and every missing edge lies between different components; adding any such edge merges exactly two components, leaving exactly $2$ connected components, as required.\n\nThus the sizes in non-decreasing order are $1, 3, 4$.", "answer": "$$\\boxed{\\begin{pmatrix} 1  3  4 \\end{pmatrix}}$$", "id": "1491615"}]}