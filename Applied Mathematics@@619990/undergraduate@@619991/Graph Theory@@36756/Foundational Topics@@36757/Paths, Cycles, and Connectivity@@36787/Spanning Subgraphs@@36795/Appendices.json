{"hands_on_practices": [{"introduction": "Understanding spanning subgraphs begins with mastering the fundamental definitions. This first exercise moves beyond the common example of spanning trees to explore other structural properties. You will apply the precise definitions of a spanning subgraph and a $k$-regular graph to a complete bipartite graph, a common structure in modeling relationships between two distinct groups. This practice helps solidify your understanding of graph properties by identifying a specific configuration known as a perfect matching [@problem_id:1536778].", "problem": "Consider a complete bipartite graph, denoted as $K_{m,n}$. This graph has a vertex set $W$ that is partitioned into two disjoint sets, $U$ and $V$, where $|U|=m$ and $|V|=n$. The edge set of $K_{m,n}$ consists of all possible edges connecting a vertex in $U$ to a vertex in $V$. There are no edges connecting two vertices within the same partition.\n\nFor this problem, let's focus on the specific graph $K_{4,4}$. Its vertex set is partitioned into $U = \\{u_1, u_2, u_3, u_4\\}$ and $V = \\{v_1, v_2, v_3, v_4\\}$.\n\nA subgraph is called a *spanning subgraph* if it includes all vertices from the original graph. A graph is called *k-regular* if every vertex in the graph has a degree of exactly $k$.\n\nYour task is to identify which of the following sets of edges defines a 1-regular spanning subgraph of $K_{4,4}$.\n\nA. $\\{(u_1, v_2), (u_2, v_4), (u_3, v_1), (u_4, v_3)\\}$\n\nB. $\\{(u_1, v_1), (u_1, v_2), (u_2, v_3), (u_3, v_4)\\}$\n\nC. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_3)\\}$\n\nD. $\\{(u_1, u_2), (u_3, u_4), (v_1, v_2), (v_3, v_4)\\}$\n\nE. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_4), (u_4, v_3), (u_1, v_2)\\}$", "solution": "We work in the complete bipartite graph $K_{4,4}$ with bipartition $U=\\{u_1, u_2, u_3, u_4\\}$ and $V=\\{v_1, v_2, v_3, v_4\\}$. A subgraph is 1-regular and spanning if and only if it contains all vertices and every vertex has degree exactly $1$. In a bipartite graph, such a subgraph is precisely a perfect matching: exactly $4$ disjoint edges, each between $U$ and $V$, covering all $8$ vertices.\n\nCheck each option against the two conditions:\n1) All edges must lie between $U$ and $V$ (subgraph of $K_{4,4}$).\n2) Every vertex $u_i$ and $v_j$ must satisfy $\\deg(u_i)=1$ and $\\deg(v_j)=1$.\n\nA. $\\{(u_1, v_2), (u_2, v_4), (u_3, v_1), (u_4, v_3)\\}$. Each $u_i$ appears exactly once and each $v_j$ appears exactly once; there are $4$ edges, all between $U$ and $V$. Hence it is a perfect matching: spanning and 1-regular.\n\nB. $\\{(u_1, v_1), (u_1, v_2), (u_2, v_3), (u_3, v_4)\\}$. Here $\\deg(u_1)=2$ and $\\deg(u_4)=0$, so it is not 1-regular.\n\nC. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_3)\\}$. Vertices $u_4$ and $v_4$ have degree $0$, so it is not 1-regular (and does not cover all vertices with degree $1$).\n\nD. $\\{(u_1, u_2), (u_3, u_4), (v_1, v_2), (v_3, v_4)\\}$. These edges are within $U$ or within $V$, which are not edges of $K_{4,4}$; therefore this is not a subgraph of $K_{4,4}$.\n\nE. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_4), (u_4, v_3), (u_1, v_2)\\}$. Here $\\deg(u_1)=2$ and $\\deg(v_2)=2$, so it is not 1-regular.\n\nTherefore, only option A defines a 1-regular spanning subgraph of $K_{4,4}$.", "answer": "$$\\boxed{A}$$", "id": "1536778"}, {"introduction": "One of the most powerful applications of spanning subgraphs is in network optimization, where the goal is to connect all nodes with minimum cost. This corresponds to finding a Minimum Spanning Tree (MST). This problem presents a realistic scenario where you must not only find the minimum cost but also determine how many distinct network layouts achieve this optimal cost. This requires you to look beyond simply running an algorithm and understand the conditions under which multiple MSTs can exist [@problem_id:1533904].", "problem": "A technology startup, ConnectAll, is planning to build a fiber optic network to connect four of its main data centers, located in the cities of Aethelburg (A), Baelcroft (B), Cyningtun (C), and Daenholm (D). The company's goal is to ensure all data centers are connected (either directly or indirectly) while minimizing the total construction cost. The cost, in millions of dollars, to establish a direct link between any two cities has been estimated as follows:\n\n*   Aethelburg to Baelcroft: 10\n*   Aethelburg to Cyningtun: 30\n*   Aethelburg to Daenholm: 20\n*   Baelcroft to Cyningtun: 20\n*   Baelcroft to Daenholm: 30\n*   Cyningtun to Daenholm: 20\n\nA network layout is defined by the set of direct links that are built. A layout is considered 'optimal' if it connects all four data centers at the minimum possible total cost. How many distinct optimal network layouts are possible?", "solution": "Model the four data centers as vertices $A,B,C,D$ of a weighted, undirected graph with edge weights:\n$w(AB)=10$, $w(AC)=30$, $w(AD)=20$, $w(BC)=20$, $w(BD)=30$, $w(CD)=20$.\nAn optimal network layout corresponds to a minimum spanning tree (MST). By the cut property of MSTs, for any cut, the lightest edge crossing the cut must be in every MST. Consider the cut $\\{A\\}\\mid\\{B,C,D\\}$; the crossing edges have weights $10,20,30$, with the unique minimum $AB=10$, so $AB$ is in every MST.\n\nA spanning tree on $4$ vertices uses exactly $3$ edges, so after including $AB$, we must select exactly two more edges that keep the graph acyclic and connected while minimizing total weight. The remaining edges of minimum weight are the three edges of weight $20$: $\\{AD,BC,CD\\}$. Any tree including a $30$-edge would have total weight at least $10+20+30=60$, while using two edges of weight $20$ yields total weight $10+20+20=50$, which is strictly smaller; hence every MST uses exactly two edges among $\\{AD,BC,CD\\}$.\n\nWe must count the choices of two edges from $\\{AD,BC,CD\\}$ that, together with $AB$, form a spanning tree (i.e., are acyclic and connect all four vertices). There are $\\binom{3}{2}=3$ such pairs, namely $\\{AD,BC\\}$, $\\{AD,CD\\}$, and $\\{BC,CD\\}$, and each yields a connected, acyclic graph with all four vertices. Therefore, there are exactly $3$ distinct optimal network layouts.\n\nHence, the number of distinct MSTs (optimal layouts) is $3$.", "answer": "$$\\boxed{3}$$", "id": "1533904"}, {"introduction": "Theoretical constraints often reveal deep and elegant properties of mathematical structures. This problem presents a puzzle: is it possible to construct a spanning tree where every single vertex has an odd number of connections? Rather than asking you to build such a tree, this exercise challenges you to determine for which network sizes this is even theoretically possible. By combining the definition of a tree with the fundamental Handshaking Lemma, you can uncover a simple but powerful rule governing network architecture [@problem_id:1533895].", "problem": "A technology firm is designing a series of new server networks. Each network must connect a set of data centers. For reliability, the network topology must be a spanning tree, which is a network that connects all data centers with the minimum possible number of links without forming any cycles.\n\nFor a specialized routing protocol they are developing, the engineers are investigating network designs where every data center (vertex) in the spanning tree has an odd number of direct connections (degree) to other data centers within that tree.\n\nThe firm is considering proposals for networks of different sizes. From the list of options below, identify the only number of data centers for which it is theoretically possible to construct such a specialized network (a spanning tree where every vertex has an odd degree).\n\nA. 9 data centers\n\nB. 11 data centers\n\nC. 13 data centers\n\nD. 14 data centers\n\nE. 15 data centers", "solution": "Let $T$ be a tree on $n$ vertices with vertex set $V$ and edge set $E$. By the definition of a tree, $|E|=n-1$. By the Handshaking Lemma,\n$$\n\\sum_{v \\in V} \\deg(v) = 2|E| = 2(n-1).\n$$\nSuppose every vertex has odd degree. Then the left-hand side is the sum of $n$ odd integers, so\n$$\n\\sum_{v \\in V} \\deg(v) \\equiv \\sum_{i=1}^{n} 1 \\equiv n \\pmod{2}.\n$$\nBut $2(n-1) \\equiv 0 \\pmod{2}$, hence $n \\equiv 0 \\pmod{2}$. Therefore, a necessary condition is that $n$ is even.\n\nTo show sufficiency for even $n$, consider the star $K_{1,n-1}$. It is a tree on $n$ vertices with degree sequence $(n-1, 1, 1, \\dots, 1)$. If $n$ is even, then $n-1$ is odd, and all leaf degrees are $1$ (odd), so every vertex has odd degree. Thus, for every even $n$, such a tree exists.\n\nAmong the options given, the only even number is $14$, so it is the only feasible size.", "answer": "$$\\boxed{D}$$", "id": "1533895"}]}