{"hands_on_practices": [{"introduction": "Before we can analyze a graph, we must first ensure it can exist. A \"graphic sequence\" is a list of numbers that can legitimately represent the degrees of vertices in a simple graph. This first practice task [@problem_id:1509390] challenges you to determine a missing value in a potential degree sequence, making it a valid one. To solve this, you'll need to apply two key tools: the fundamental handshaking lemma concerning the sum of degrees, and the more comprehensive Erdős-Gallai theorem for a definitive check.", "problem": "A systems architect is designing a small-scale, direct communication network between 7 servers. A simple graph will model this network, where servers are vertices and direct communication links are edges. The degree of a vertex represents the number of direct links a server has. The proposed degree sequence for the 7 servers is $(k, 4, 4, 1, 1, 1, 1)$, where $k$ is a configurable parameter representing the number of connections for a primary server. The architect must choose a non-negative integer value for $k$ such that the resulting sequence is graphic, meaning it can be realized by a simple graph. To minimize costs, the architect wants to use the smallest possible value for $k$. What is this minimum value of $k$?", "solution": "Let the degree sequence be $\\left(k,4,4,1,1,1,1\\right)$ on $n=7$ vertices. For a simple graph on $n$ vertices, each degree must lie in $\\{0,1,\\ldots,n-1\\}$, so $0 \\leq k \\leq 6$. By the handshaking lemma, the sum of the degrees must be even. The sum is\n$k+12$, so $k$ must be even. Therefore the smallest candidate is $k=0$; if that fails, try $k=2$.\n\nTest $k=0$. Sort the sequence nonincreasingly to apply the Erdős-Gallai theorem: $\\left(4,4,1,1,1,1,0\\right)$. The sum is $12$, which is even. The Erdős-Gallai theorem requires that for every $r \\in \\{1,\\ldots,7\\}$:\n$$\n\\sum_{i=1}^{r} d_{i} \\leq r(r-1)+\\sum_{i=r+1}^{7} \\min(d_{i},r).\n$$\nFor $r=1$:\n$$\n\\sum_{i=1}^{1} d_{i}=4,\\quad r(r-1)=0,\\quad \\sum_{i=2}^{7} \\min(d_{i},1)=1+1+1+1+1+0=5\n$$\nso $4 \\leq 5$ holds. For $r=2$:\n$$\n\\sum_{i=1}^{2} d_{i}=8,\\quad r(r-1)=2,\\quad \\sum_{i=3}^{7} \\min(d_{i},2)=1+1+1+1+0=4\n$$\nso the right-hand side equals $2+4=6$, and $8 \\leq 6$ fails. Hence $k=0$ is not graphic.\n\nNext test $k=2$. The sorted sequence is $\\left(4,4,2,1,1,1,1\\right)$ with sum $14$ (even). Check Erdős-Gallai for all $r$:\nFor $r=1$:\n$$\n\\sum_{i=1}^{1} d_{i}=4,\\quad r(r-1)=0,\\quad \\sum_{i=2}^{7} \\min(d_{i},1)=1+1+1+1+1+1=6,\\quad 4 \\leq 6.\n$$\nFor $r=2$:\n$$\n\\sum_{i=1}^{2} d_{i}=8,\\quad r(r-1)=2,\\quad \\sum_{i=3}^{7} \\min(d_{i},2)=2+1+1+1+1=6,\\quad 8 \\leq 2+6=8.\n$$\nFor $r=3$:\n$$\n\\sum_{i=1}^{3} d_{i}=10,\\quad r(r-1)=6,\\quad \\sum_{i=4}^{7} \\min(d_{i},3)=1+1+1+1=4,\\quad 10 \\leq 6+4=10.\n$$\nFor $r=4$:\n$$\n\\sum_{i=1}^{4} d_{i}=11,\\quad r(r-1)=12,\\quad \\sum_{i=5}^{7} \\min(d_{i},4)=1+1+1=3,\\quad 11 \\leq 12+3=15.\n$$\nFor $r=5$:\n$$\n\\sum_{i=1}^{5} d_{i}=12,\\quad r(r-1)=20,\\quad \\sum_{i=6}^{7} \\min(d_{i},5)=1+1=2,\\quad 12 \\leq 20+2=22.\n$$\nFor $r=6$:\n$$\n\\sum_{i=1}^{6} d_{i}=13,\\quad r(r-1)=30,\\quad \\sum_{i=7}^{7} \\min(d_{i},6)=1,\\quad 13 \\leq 30+1=31.\n$$\nFor $r=7$:\n$$\n\\sum_{i=1}^{7} d_{i}=14,\\quad r(r-1)=42,\\quad \\text{RHS}=42,\\quad 14 \\leq 42.\n$$\nAll inequalities hold, so the sequence is graphic for $k=2$.\n\nSince $k$ must be even and $k=0$ fails while $k=2$ succeeds, the minimum feasible $k$ is $2$.", "answer": "$$\\boxed{2}$$", "id": "1509390"}, {"introduction": "Knowing a sequence is graphic is just the beginning; what does the corresponding graph actually look like? This exercise [@problem_id:1509393] shifts our focus from pure verification to active construction using the Havel-Hakimi algorithm. It delves into a subtle but crucial point: a single graphic sequence can be realized by graphs with different properties, such as being connected or disconnected. By following a deterministic construction algorithm, you will uncover how algorithmic choices can lead to specific structural outcomes.", "problem": "In graph theory, a finite sequence of non-negative integers is called a \"graphic sequence\" if it is the degree sequence of some simple graph. The Havel-Hakimi algorithm is a recursive procedure not only for determining if a sequence is graphic, but also for constructing a graph with that sequence if one exists. The constructive version of the algorithm works by repeatedly connecting the vertex with the current highest degree to a set of other vertices with the highest available degrees.\n\nLet's define the \"standard constructive Havel-Hakimi algorithm\" as follows:\n1. Start with a set of $n$ vertices, with initial degrees given by the sequence $D = (d_1, d_2, ..., d_n)$.\n2. If all degrees are zero, the construction is complete.\n3. Select a vertex $v$ with the current maximum degree. If there is a tie, select the vertex with the smallest index.\n4. Let the degree of $v$ be $k$. Select the $k$ vertices (other than $v$) with the current highest degrees. If there is a tie, select the vertices with the smallest indices. Add edges connecting $v$ to these $k$ vertices.\n5. Update the degrees of the affected vertices and repeat from step 2 for the remaining subproblem.\n\nWhile a graphic sequence can often be realized as both a connected and a disconnected graph, the specific graph generated by this deterministic algorithm will be either one or the other. Your task is to analyze the following degree sequences for graphs on 6 vertices.\n\nWhich one of the following sequences is graphic, is known to have at least one connected realization, yet results in a **disconnected** graph when constructed using the standard constructive Havel-Hakimi algorithm described above?\n\nA. $(4, 3, 2, 1, 1, 0)$\nB. $(2, 2, 1, 1, 1, 1)$\nC. $(3, 2, 2, 2, 2, 1)$\nD. $(3, 3, 3, 3, 1, 1)$", "solution": "We analyze each option for three properties: graphicness (via the Handshaking Lemma and Havel-Hakimi), existence of at least one connected realization, and the outcome of the standard constructive Havel-Hakimi algorithm (with the given deterministic tie-breaking), checking whether the constructed graph is connected or disconnected.\n\nBy the Handshaking Lemma, a sequence is graphic only if the sum of its entries is even.\n\nOption A: $(4, 3, 2, 1, 1, 0)$. The degree sum is $4+3+2+1+1+0=11$, which is odd. Hence this sequence is not graphic and cannot satisfy the requirements.\n\nOption B: $(2, 2, 1, 1, 1, 1)$. The degree sum is $2+2+1+1+1+1=8$, which is even, so it may be graphic. A connected graph on $n$ vertices has at least $n-1$ edges, so on $6$ vertices it must have at least $5$ edges, i.e., the sum of degrees at least $10$. Here the sum is $8$, so no connected realization exists. For completeness, we run the standard constructive Havel-Hakimi:\n- Start with vertices $v_{1},\\dots,v_{6}$ of degrees $(2,2,1,1,1,1)$. Select $v_{1}$ with $k=2$, connect to the two highest among the others: $v_{2}$ (degree $2$) and then $v_{3}$ (among the degree-$1$ vertices, smallest index). After adding $(1,2)$ and $(1,3)$, the updated degrees are\n$(0,1,0,1,1,1)$.\n- Next select $v_{2}$ with $k=1$, connect to the highest available (smallest index among degree $1$), namely $v_{4}$. After adding $(2,4)$, degrees become\n$(0,0,0,0,1,1)$.\n- Next select $v_{5}$ with $k=1$, connect to $v_{6}$. After adding $(5,6)$, all degrees are zero.\nThe constructed edges are $(1,2),(1,3),(2,4),(5,6)$, which yields two components $\\{1,2,3,4\\}$ and $\\{5,6\\}$, i.e., a disconnected realization. However, since no connected realization exists for this sequence, it does not satisfy the problem’s requirement.\n\nOption C: $(3, 2, 2, 2, 2, 1)$. The degree sum is $3+2+2+2+2+1=12$, even. Run the standard constructive Havel-Hakimi:\n- Start with $(3,2,2,2,2,1)$. Select $v_{1}$ with $k=3$, connect to the three highest among others $v_{2},v_{3},v_{4}$. After adding $(1,2),(1,3),(1,4)$, degrees update to\n$(0,1,1,1,2,1)$.\n- Next select $v_{5}$ with $k=2$, connect to the two highest among others, $v_{2}$ and $v_{3}$. After adding $(5,2),(5,3)$, degrees update to\n$(0,0,0,1,0,1)$.\n- Next select $v_{4}$ with $k=1$, connect to $v_{6}$. After adding $(4,6)$, degrees become all zero.\nThe constructed edges are $(1,2),(1,3),(1,4),(5,2),(5,3),(4,6)$. This graph is connected (for example, $5\\text{--}2\\text{--}1\\text{--}4\\text{--}6$ connects all vertices), so Option C does not meet the requirement.\n\nOption D: $(3, 3, 3, 3, 1, 1)$. The degree sum is $3+3+3+3+1+1=14$, even. Run the standard constructive Havel-Hakimi:\n- Start with $(3,3,3,3,1,1)$. Select $v_{1}$ with $k=3$, connect to $v_{2},v_{3},v_{4}$. After adding $(1,2),(1,3),(1,4)$, degrees update to\n$(0,2,2,2,1,1)$.\n- Next select $v_{2}$ with $k=2$, connect to $v_{3}$ and $v_{4}$. After adding $(2,3),(2,4)$, degrees update to\n$(0,0,1,1,1,1)$.\n- Next select $v_{3}$ with $k=1$, connect to $v_{4}$. After adding $(3,4)$, degrees update to\n$(0,0,0,0,1,1)$.\n- Next select $v_{5}$ with $k=1$, connect to $v_{6}$. After adding $(5,6)$, degrees become all zero.\nThe constructed edges are $(1,2),(1,3),(1,4),(2,3),(2,4),(3,4),(5,6)$, i.e., a $K_4$ on $\\{1,2,3,4\\}$ plus the edge $(5,6)$, which is disconnected.\n\nWe must still verify that Option D has at least one connected realization. Construct explicitly: take a $4$-cycle on vertices $A,B,C,D$ with edges $(A,B),(B,C),(C,D),(D,A)$ so each has degree $2$, attach leaf $E$ to $A$ and leaf $F$ to $C$ to raise degrees of $A$ and $C$ to $3$, then add the edge $(B,D)$ to raise degrees of $B$ and $D$ to $3$. The resulting degrees are $(3,3,3,3,1,1)$ and the graph is connected. Therefore Option D satisfies all criteria: it is graphic, has a connected realization, and yet the standard constructive Havel-Hakimi algorithm yields a disconnected graph.\n\nTherefore, the correct choice is D.", "answer": "$$\\boxed{D}$$", "id": "1509393"}, {"introduction": "True mastery of an algorithm comes not just from applying it, but from understanding its inner workings and limits. This advanced practice [@problem_id:1509388] challenges you to think like an algorithm designer about the Havel-Hakimi process. Instead of simply running the algorithm, your goal is to construct an initial degree sequence that forces the algorithm to run for the maximum possible number of steps. This \"reverse-engineering\" approach is a powerful way to solidify your understanding of its recursive structure.", "problem": "A sequence of non-negative integers $S = (d_1, d_2, \\ldots, d_n)$ is called **graphic** if it is the degree sequence of some simple graph on $n$ vertices. A simple graph is one that has no loops or multiple edges between the same two vertices.\n\nThe Havel-Hakimi algorithm is a procedure to determine if a given sequence is graphic. The algorithm proceeds as follows:\n\nLet $S$ be a sequence of $k$ non-negative integers.\n1.  Sort the sequence $S$ in non-increasing order. If at any point an element of the sequence becomes negative, the original sequence is not graphic, and the algorithm terminates.\n2.  If the sequence consists entirely of zeros, it is graphic, and the algorithm terminates.\n3.  Let the sorted sequence be $(d_1, d_2, \\ldots, d_k)$. If $d_1 \\ge k$, the sequence is not graphic, and the algorithm terminates.\n4.  If the algorithm has not terminated, create a new sequence $S'$ of length $k-1$ by removing $d_1$ and subtracting 1 from each of the next $d_1$ elements of the sequence.\n5.  Replace $S$ with $S'$ and return to Step 1.\n\nAn \"iteration\" of the algorithm is defined as a single application of Step 4. For a given number of vertices $n$, the number of iterations required for a sequence to terminate can vary.\n\nYour task is to find a graphic sequence for $n=8$ vertices, $S = (d_1, d_2, \\ldots, d_8)$, that requires the maximum possible number of iterations of the Havel-Hakimi algorithm before terminating. Present your answer as a sequence of eight integers, sorted in non-increasing order.", "solution": "Let the initial sequence be $S_0$ of length $n$. Each iteration of the Havel-Hakimi algorithm reduces the length of the sequence by one. Specifically, a sequence of length $k$ is transformed into a sequence of length $k-1$. The algorithm terminates when the sequence becomes all zeros.\n\nFor a sequence of length $n=8$, the sequence of lengths during the execution of the algorithm will be $8 \\to 7 \\to 6 \\to 5 \\to 4 \\to 3 \\to 2 \\to 1$. A sequence of length 1 must be $(0)$ to be graphic. To get from a length 8 sequence to a length 1 sequence requires $8-1=7$ iterations. This is the maximum possible number of iterations, as any fewer would mean the process terminated prematurely (e.g., reaching an all-zero sequence of length greater than 1).\n\nWe want to construct a sequence $S_0$ of length 8 that requires exactly 7 iterations. We can work backward from the final state. Let $S_k$ be the sequence after $k$ iterations. $S_k$ will have length $n-k = 8-k$.\n\nThe process must end with a graphic sequence. After 7 iterations, we have a sequence $S_7$ of length $8-7=1$. For it to be graphic, it must be $S_7=(0)$.\n\nNow, we find the sequence $S_6$ of length 2 that reduces to $S_7=(0)$ in one iteration. Let $S_6=(d_1, d_2)$ be sorted non-increasingly. According to the algorithm, $d_1$ must be less than the length of the sequence, so $d_1 < 2$, which means $d_1 \\le 1$. Since the sequence is non-zero, $d_1=1$. The algorithm forms a new sequence by removing $d_1$ and subtracting 1 from the next $d_1=1$ term. The new sequence is $(d_2-1)$. We require this to be $S_7=(0)$, so $d_2-1=0 \\implies d_2=1$. Since the sequence is sorted, we must have $d_1 \\ge d_2$, which is satisfied ($1 \\ge 1$). Thus, $S_6=(1,1)$.\n\nNext, we find the sequence $S_5$ of length 3 that reduces to $S_6=(1,1)$. Let $S_5=(d_1, d_2, d_3)$ be sorted. We have $d_1 < 3$, so $d_1 \\in \\{1, 2\\}$.\n- If $d_1=1$, the new sequence is $(d_2-1, d_3)$. We require this to be $(1,1)$ after sorting. This implies $\\{d_2-1, d_3\\}=\\{1,1\\}$, which gives $(d_2, d_3)=(2,1)$. Thus, $S_5$ would be $(1,2,1)$, which sorts to $(2,1,1)$. If we apply the algorithm to $(2,1,1)$, we get $(1-1, 1-1)=(0,0)$, not $(1,1)$. So this case fails.\n- If $d_1=2$, the new sequence is $(d_2-1, d_3-1)$. We require this to be $(1,1)$ after sorting. This implies $\\{d_2-1, d_3-1\\}=\\{1,1\\}$, so $d_2=2$ and $d_3=2$. The sequence is $S_5=(2,2,2)$. This is sorted, and $d_1=2 < 3$. Applying the algorithm gives $(2-1, 2-1)=(1,1)$, which is $S_6$. So $S_5=(2,2,2)$.\n\nA clear pattern emerges: the sequence $S_{n-k}$ of length $k$ that guarantees the maximum number of further steps is the regular sequence where every element is $k-1$. Let's denote this sequence by $R_k = (k-1, k-1, \\ldots, k-1)$.\nWe have shown $S_7=R_1=(0)$, $S_6=R_2=(1,1)$, and $S_5=R_3=(2,2,2)$.\nLet's verify the general step. Assume the sequence at step $k-1$ is $S_{k-1} = R_{n-(k-1)} = R_{8-k+1}$. We want to find $S_{k-2}$ that reduces to it. We hypothesize $S_{k-2} = R_{8-k+2}$.\nLet's apply the algorithm to $R_m = (m-1, m-1, \\ldots, m-1)$, a sequence of length $m$.\nThe first element is $d_1 = m-1$. This satisfies $d_1 < m$. The algorithm removes $d_1$ and subtracts 1 from the next $d_1=m-1$ terms. Since there are only $m-1$ terms remaining, we subtract 1 from all of them.\nThe new sequence has all its elements equal to $(m-1)-1 = m-2$, and its length is $m-1$. This new sequence is precisely $R_{m-1}$.\nThis confirms that the sequence after $k$ iterations is $S_k = R_{8-k}$.\n\nWe seek the initial sequence $S_0$. Following the pattern, $S_0 = R_{8-0} = R_8$.\nThe sequence $R_8$ is a sequence of length 8 where every element is $8-1=7$.\nTherefore, the desired sequence is $S_0 = (7,7,7,7,7,7,7,7)$.\n\nLet's check this sequence forward:\n$S_0 = (7,7,7,7,7,7,7,7)$. Length 8, $d_1=7$. Valid. Iteration 1 gives $S_1=(6,6,6,6,6,6,6)$.\n$S_1 = (6,6,6,6,6,6,6)$. Length 7, $d_1=6$. Valid. Iteration 2 gives $S_2=(5,5,5,5,5,5)$.\n...\n$S_5 = (2,2,2)$. Length 3, $d_1=2$. Valid. Iteration 6 gives $S_6=(1,1)$.\n$S_6 = (1,1)$. Length 2, $d_1=1$. Valid. Iteration 7 gives $S_7=(0)$.\n$S_7 = (0)$. Terminates.\nThe process took 7 iterations, which is $n-1$, the maximum possible. The sequence is the degree sequence of the complete graph $K_8$.", "answer": "$$\\boxed{\\begin{pmatrix} 7 & 7 & 7 & 7 & 7 & 7 & 7 & 7 \\end{pmatrix}}$$", "id": "1509388"}]}