{"hands_on_practices": [{"introduction": "At the heart of network design is the fundamental question of feasibility: can a network with a specific set of connection requirements even exist? This practice explores the concept of a 'graphical sequence' using a hypothetical social network. You will learn how to determine if a list of desired friend counts can be realized as a simple graph, applying fundamental principles and a constructive algorithm to test for structural validity [@problem_id:1552009].", "problem": "A team of developers is designing a new peer-to-peer social networking protocol called the Decentralized Autonomous Social Graph (DASG). In this system, each user is represented as a node, and a friendship between two users is represented as an edge connecting their nodes. The resulting network must be a simple graph, meaning no user can be friends with themselves (no loops) and any two users can have at most one friendship connection (no multiple edges).\n\nFor a small-scale pilot launch, the team has collected lists of desired friend counts from four different potential user communities. Each list represents the number of friends each person in that community wishes to have. The team needs to determine which of these communities' requirements can be perfectly satisfied, meaning a simple graph can be constructed where the degree of each node matches a number from the given list.\n\nThe lists of desired friend counts for the four communities are as follows:\n- Community A: (5, 4, 3, 2, 1)\n- Community B: (4, 4, 2, 2, 2)\n- Community C: (4, 4, 4, 1, 1)\n- Community D: (5, 5, 4, 3, 2, 1)\n\nWhich of these lists of desired friend counts is realizable as a simple graph?\n\nA. Community A\nB. Community B\nC. Community C\nD. Community D", "solution": "We consider a finite simple graph on $n$ vertices. A degree sequence $(d_{1},\\dots,d_{n})$, written in nonincreasing order $d_{1} \\ge \\cdots \\ge d_{n}$, is graphical only if it satisfies the necessary conditions $0 \\le d_{i} \\le n-1$ for all $i$ and $\\sum_{i=1}^{n} d_{i}$ is even (handshaking lemma). To decide realizability, we apply the Havel–Hakimi procedure: remove $d_{1}$ and subtract $1$ from the next $d_{1}$ entries; if at any step a negative entry appears or the step is not possible, the sequence is not graphical; if the process terminates at the zero sequence, it is graphical.\n\nCommunity A: $(5,4,3,2,1)$ has $n=5$ but includes a degree $5 > n-1=4$, violating $0 \\le d_{i} \\le n-1$. Also, the sum $5+4+3+2+1=15$ is odd. Therefore A is not graphical.\n\nCommunity B: $(4,4,2,2,2)$ has $n=5$, all entries $\\le 4$, and sum $4+4+2+2+2=14$ even. Apply Havel–Hakimi:\n- Start with $(4,4,2,2,2)$. Remove $4$ and subtract $1$ from the next $4$ entries: $(4,2,2,2) -> (3,1,1,1)$, giving $(3,1,1,1)$ after reordering.\n- Remove $3$ and subtract $1$ from the next $3$ entries: $(1,1,1) -> (0,0,0)$.\nTermination at all zeros shows B is graphical.\n\nCommunity C: $(4,4,4,1,1)$ has $n=5$, all entries $\\le 4$, and sum $4+4+4+1+1=14$ even. Apply Havel–Hakimi:\n- $(4,4,4,1,1) ->$ remove $4$, reduce next $4$: $(4,4,1,1) -> (3,3,0,0)$.\n- $(3,3,0,0) ->$ remove $3$, reduce next $3$: $(3,0,0) -> (2,-1,-1)$, which has negative entries.\nHence C is not graphical.\n\nCommunity D: $(5,5,4,3,2,1)$ has $n=6$, all entries $\\le 5$, and sum $5+5+4+3+2+1=20$ even. Apply Havel–Hakimi:\n- $(5,5,4,3,2,1) ->$ remove $5$, reduce next $5$: $(5,4,3,2,1) -> (4,3,2,1,0)$.\n- $(4,3,2,1,0) ->$ remove $4$, reduce next $4$: $(3,2,1,0) -> (2,1,0,-1)$, which has a negative entry.\nHence D is not graphical.\n\nTherefore, only Community B is realizable as a simple graph.", "answer": "$$\\boxed{B}$$", "id": "1552009"}, {"introduction": "Beyond simple existence, graph theory often explores the limits of network structure under specific constraints. This problem presents a scenario where a communication network must adhere to a 'triadic incompatibility' rule, which translates to being triangle-free (i.e., containing no $K_3$ subgraph). This exercise challenges you to find the maximum number of connections possible under this rule, introducing you to the foundational Mantel's Theorem and the exciting field of extremal graph theory [@problem_id:1552014].", "problem": "In the design of a novel computing architecture, a system is composed of a set of processors. For stability reasons, the communication network connecting these processors must adhere to a specific \"triadic incompatibility\" rule. This rule states that for any group of three distinct processors, it is not possible for all three to be mutually connected to each other. A connection is a direct, bidirectional link between a pair of processors.\n\nConsider a system built with $n=51$ processors. What is the maximum possible number of direct connections that can be established in this network while strictly observing the triadic incompatibility rule?", "solution": "Model the processors as the vertices of a simple undirected graph on $n$ vertices, with each direct bidirectional connection as an edge. The triadic incompatibility rule states that no three vertices form a triangle, i.e., the graph is triangle-free. Let $m$ denote the number of edges.\n\nWe use Mantel's theorem, which states that a triangle-free graph on $n$ vertices has at most $\\lfloor n^{2}/4 \\rfloor$ edges, with equality attained by a complete bipartite graph whose parts differ in size by at most one. For completeness, we derive the bound.\n\nIn a triangle-free graph, for every edge $uv$, the neighborhoods of $u$ and $v$ are disjoint (otherwise a common neighbor would create a triangle). Hence\n$$\nd(u)+d(v) \\leq n,\n$$\nfor every edge $uv$. Summing over all edges and using the handshaking lemma, we obtain\n$$\n\\sum_{uv \\in E(G)} \\big(d(u)+d(v)\\big) \\leq m n.\n$$\nThe left-hand side can be rewritten by counting contributions per vertex:\n$$\n\\sum_{uv \\in E(G)} \\big(d(u)+d(v)\\big) = \\sum_{v} d(v)^{2}.\n$$\nTherefore,\n$$\n\\sum_{v} d(v)^{2} \\leq m n.\n$$\nBy the Cauchy–Schwarz inequality,\n$$\n\\sum_{v} d(v)^{2} \\geq \\frac{\\left(\\sum_{v} d(v)\\right)^{2}}{n} = \\frac{(2m)^{2}}{n} = \\frac{4 m^{2}}{n}.\n$$\nCombining the inequalities gives\n$$\n\\frac{4 m^{2}}{n} \\leq m n \\quad \\Rightarrow \\quad 4m \\leq n^{2} \\quad \\Rightarrow \\quad m \\leq \\frac{n^{2}}{4}.\n$$\nSince $m$ is an integer, we obtain $m \\leq \\left\\lfloor \\frac{n^{2}}{4} \\right\\rfloor$.\n\nFor $n=51$, this yields\n$$\nm \\leq \\left\\lfloor \\frac{51^{2}}{4} \\right\\rfloor = \\left\\lfloor \\frac{2601}{4} \\right\\rfloor = \\left\\lfloor 650.25 \\right\\rfloor = 650.\n$$\nThis bound is attained by the complete bipartite graph $K_{25,26}$, which is triangle-free and has $25 \\times 26 = 650$ edges. Hence the maximum possible number of direct connections is $650$.", "answer": "$$\\boxed{650}$$", "id": "1552014"}, {"introduction": "In practical applications, we often need to analyze a given network to identify its most critical or optimal points. This practice tackles the problem of network resilience by asking you to find 'balancing nodes' within a tree-structured network. You will methodically calculate the impact of removing each vertex to identify the graph's centroids—nodes whose removal minimizes the size of the largest resulting component, a key concept in designing fault-tolerant systems [@problem_id:1552012].", "problem": "In the management of a distributed data network, ensuring fault tolerance and balanced load distribution is crucial. The network's topology is modeled as an undirected graph where vertices represent servers and edges represent direct communication links. A critical failure of a single server (vertex) can partition the network into several disconnected components (sub-networks). The size of a component is the number of servers within it.\n\nTo enhance the network's resilience, we want to identify special servers called \"balancing nodes.\" A server is defined as a **balancing node** if its removal results in the smallest possible maximum-sized component. In other words, if we remove a balancing node, the largest remaining connected group of servers is as small as it can be compared to removing any other single server.\n\nConsider a network structured as a tree with 12 servers, labeled 1 through 12. The communication links (edges) are given by the set:\n$E = \\{(1,2), (1,3), (1,4), (2,5), (2,6), (3,7), (4,8), (4,9), (4,10), (9,11), (9,12)\\}$.\n\nIdentify all the balancing nodes in this network.\n\nA. Vertex 1 only\nB. Vertex 4 only\nC. Vertices 1 and 4\nD. Vertex 9 only\nE. Vertices 2 and 9\nF. Vertices 1, 4, and 9", "solution": "Let the network be the tree with vertex set $\\{1,2,\\dots,12\\}$ and edge set $E=\\{(1,2),(1,3),(1,4),(2,5),(2,6),(3,7),(4,8),(4,9),(4,10),(9,11),(9,12)\\}$. Let $n=12$.\n\nFor a vertex $v$, removing $v$ splits the tree into components, one per neighbor of $v$. If $u$ is a neighbor of $v$, the size of the component through $u$ equals the size of the subtree on the $u$-side when the tree is rooted at $v$. Define\n$$\nM(v)=\\max\\{\\text{sizes of components after removing }v\\}.\n$$\nA balancing node is a vertex minimizing $M(v)$.\n\nCompute $M(v)$ for the relevant vertices.\n\n1) Vertex $1$: its neighbors are $2,3,4$. The component sizes after removing $1$ are the sizes of the subtrees at $2,3,4$:\n- At $2$: $\\{2,5,6\\}$ has size $3$.\n- At $3$: $\\{3,7\\}$ has size $2$.\n- At $4$: $\\{4,8,9,10,11,12\\}$ has size $6$.\nHence\n$$\nM(1)=\\max\\{3,2,6\\}=6.\n$$\n\n2) Vertex $4$: its neighbors are $1,8,9,10$. The component sizes after removing $4$ are:\n- Through $8$: size $1$.\n- Through $10$: size $1$.\n- Through $9$: $\\{9,11,12\\}$ has size $3$.\n- Through $1$: $\\{1,2,3,5,6,7\\}$ has size $6$.\nHence\n$$\nM(4)=\\max\\{1,1,3,6\\}=6.\n$$\n\n3) Vertex $9$: neighbors $4,11,12$. Component sizes after removing $9$:\n- Through $11$: size $1$.\n- Through $12$: size $1$.\n- Through $4$: the remaining $9$ vertices, so size $9$.\nThus\n$$\nM(9)=9.\n$$\n\n4) Vertex $2$: neighbors $1,5,6$. Component sizes after removing $2$:\n- Through $5$: size $1$.\n- Through $6$: size $1$.\n- Through $1$: the remaining $9$ vertices, so size $9$.\nThus\n$$\nM(2)=9.\n$$\n\n5) Vertex $3$: neighbors $1,7$. Component sizes after removing $3$:\n- Through $7$: size $1$.\n- Through $1$: size $10$.\nHence\n$$\nM(3)=10.\n$$\n\n6) Any leaf $v\\in\\{5,6,7,8,10,11,12\\}$: removing a leaf leaves a single component of size $11$, so\n$$\nM(v)=11.\n$$\n\nFrom these computations, the minimum value of $M(v)$ is $6$, achieved at $v=1$ and $v=4$. Therefore, the balancing nodes are vertices $1$ and $4$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1552012"}]}