{"hands_on_practices": [{"introduction": "Building a minimum spanning tree (MST) is a classic problem in network optimization. This exercise introduces Kruskal's algorithm, a greedy approach that is both intuitive and powerful. By methodically selecting the least costly edges without creating cycles, you'll gain hands-on practice with one of the foundational techniques for constructing an optimal network from the ground up, reinforcing your understanding of how local choices lead to a globally optimal solution. [@problem_id:1534191]", "problem": "Consider an undirected, weighted graph $G$ with the set of vertices $V = \\{A, B, C, D, E, F\\}$. The edges of the graph and their corresponding integer weights are given as follows:\n(A, D) with weight 11\n(A, E) with weight 14\n(B, C) with weight 10\n(B, F) with weight 16\n(C, D) with weight 5\n(C, F) with weight 3\n(D, E) with weight 4\n(D, F) with weight 8\n(E, F) with weight 7\n\nKruskal's algorithm is used to find a Minimum Spanning Tree (MST) for this graph. The algorithm iteratively selects edges from a sorted list of all edges in increasing order of weight, adding an edge to the MST if and only if it does not form a cycle with the edges already selected.\n\nCalculate the sum of the weights of the first three edges selected by Kruskal's algorithm.", "solution": "Kruskal’s algorithm selects edges in increasing order of weight, adding an edge if and only if it does not create a cycle with previously selected edges.\n\nSort the edges by weight (ascending): $(C,F)$ with weight $3$, $(D,E)$ with weight $4$, $(C,D)$ with weight $5$, $(E,F)$ with weight $7$, $(D,F)$ with weight $8$, $(B,C)$ with weight $10$, $(A,D)$ with weight $11$, $(A,E)$ with weight $14$, $(B,F)$ with weight $16$.\n\nInitialize the spanning forest $T=\\emptyset$.\n\nStep 1: Consider $(C,F)$ with weight $3$. Since $T$ is empty, adding $(C,F)$ cannot form a cycle. Add $(C,F)$; the component formed is $\\{C,F\\}$.\n\nStep 2: Consider $(D,E)$ with weight $4$. Its endpoints lie in different components $\\{D\\}$ and $\\{E\\}$. Add $(D,E)$; the component formed is $\\{D,E\\}$.\n\nStep 3: Consider $(C,D)$ with weight $5$. Its endpoints are in different components $\\{C,F\\}$ and $\\{D,E\\}$. Add $(C,D)$; the merged component is $\\{C,D,E,F\\}$.\n\nTherefore, the first three edges selected are $(C,F)$, $(D,E)$, and $(C,D)$ with weights $3$, $4$, and $5$, respectively, and their sum is\n$$3+4+5=12.$$", "answer": "$$\\boxed{12}$$", "id": "1534191"}, {"introduction": "Beyond simply executing an algorithm, a deeper understanding of MSTs comes from exploring the conditions that define them. This problem moves from analysis to design, asking you to determine a specific edge cost that results in exactly two distinct MSTs. Solving this requires applying the \"cut property\" to understand how ties in edge weights across a partition of the graph can create multiple optimal solutions, a key insight into the uniqueness of MSTs. [@problem_id:1401635]", "problem": "A technology company, \"InnovateNet,\" is designing a new network backbone to connect four major data center hubs located in cities A, B, C, and D. The goal is to establish a set of connections such that all hubs are part of a single network, and the total cost of the connections is minimized. This cost-effective layout corresponds to a Minimum Spanning Tree (MST) of the network graph.\n\nThe costs for laying a direct fiber optic cable between pairs of hubs are given in 'cost units' as follows:\n- The cost between A and B is 10.\n- The cost between C and D is 10.\n- The cost between A and C is 20.\n- The cost between A and D is 30.\n- The cost between B and C is 30.\n- The cost of the connection between B and D is variable, as it depends on a new deployment technology. Let this cost be denoted by the variable $x$.\n\nThe network engineers have determined that for one specific value of $x$, there exist exactly two different network layouts (that is, two distinct sets of cables) that both achieve the same minimal total cost.\n\nDetermine this specific value of $x$. Express your answer in cost units.", "solution": "We model the four hubs as vertices with edge costs: $w(AB)=10$, $w(CD)=10$, $w(AC)=20$, $w(AD)=30$, $w(BC)=30$, $w(BD)=x$. An MST on $4$ vertices has exactly $3$ edges and minimizes total weight.\n\nBy the cut property: for any cut, every MST must contain at least one minimum-weight edge crossing that cut. Consider the cut separating $A$ from $\\{B,C,D\\}$. The crossing edges are $AB$ (cost $10$), $AC$ (cost $20$), $AD$ (cost $30$). The unique minimum is $AB$, so $AB$ is in every MST. Similarly, for the cut separating $C$ from $\\{A,B,D\\}$, the crossing edges are $CD$ (cost $10$), $AC$ (cost $20$), $BC$ (cost $30$). The unique minimum is $CD$, so $CD$ is in every MST.\n\nAfter including $AB$ and $CD$, the remaining two components are $\\{A,B\\}$ and $\\{C,D\\}$. The third edge must connect these components. The cut between $\\{A,B\\}$ and $\\{C,D\\}$ is crossed by $AC$ (cost $20$), $AD$ (cost $30$), $BC$ (cost $30$), and $BD$ (cost $x$). By the cut property, any MST must use a minimum-weight edge among these.\n\n- If $x<20$, then $\\min\\{20,30,30,x\\}=x$, uniquely. Thus the unique MST uses $BD$, giving a unique layout.\n- If $x>20$, then $\\min\\{20,30,30,x\\}=20$, uniquely (edge $AC$). Thus the unique MST uses $AC$, giving a unique layout.\n- If $x=20$, then the minimum across the cut is attained by both $AC$ and $BD$ with equal cost $20$. In this case, there are exactly two MSTs: $\\{AB,CD,AC\\}$ and $\\{AB,CD,BD\\}$, both with total cost $10+10+20=40$.\n\nTherefore, exactly two different MSTs occur precisely when $x=20$.", "answer": "$$\\boxed{20}$$", "id": "1401635"}, {"introduction": "Real-world networks are not static; costs change and new opportunities arise. Instead of re-calculating an entire MST from scratch—a computationally expensive task—we can often update an existing one efficiently. This practice demonstrates how to handle such a dynamic change by applying the \"cycle property\": when a non-tree edge's cost decreases, you can find a new MST by swapping it with the most expensive edge in the cycle it creates, a crucial skill for adaptive network management. [@problem_id:1401675]", "problem": "A consortium of research facilities, labeled A, B, C, D, E, F, and G, plans to connect via a dedicated fiber-optic network. The network's design must connect all facilities with the minimum possible total installation cost. An initial optimal design has already been determined, corresponding to a Minimum Spanning Tree (MST) of all potential connections.\n\nThe connections in this initial MST, along with their installation costs in thousands of dollars, are as follows:\n- (A, B) with cost 7\n- (A, D) with cost 5\n- (B, E) with cost 7\n- (C, E) with cost 5\n- (D, F) with cost 6\n- (E, G) with cost 9\n\nOne of the connections that was considered but not included in the initial MST was the link between facility B and facility D, which had an original projected cost of 9 thousand dollars.\n\nA new contractor now offers to build the link between B and D for a significantly reduced cost of 2 thousand dollars. All other connection costs remain unchanged.\n\nGiven this new development, determine the total cost of the new optimal network that connects all seven facilities. Express your final answer in thousands of dollars.", "solution": "We begin with the given minimum spanning tree (MST) consisting of the six edges\n$(A,B)$ with cost $7$, $(A,D)$ with cost $5$, $(B,E)$ with cost $7$, $(C,E)$ with cost $5$, $(D,F)$ with cost $6$, and $(E,G)$ with cost $9$. The total cost of this MST is\n$$\nS=7+5+7+5+6+9=39.\n$$\n\nThe non-tree edge $(B,D)$ changes its cost from $9$ to $2$. To update the MST efficiently, we use the cycle property: adding $(B,D)$ to the current tree creates a unique cycle along the path between $B$ and $D$ in the tree, and to obtain a minimum spanning tree under the new weights, one should remove a maximum-weight edge on that cycle.\n\nThe unique path in the current MST from $B$ to $D$ is $B \\to A \\to D$, which uses edges $(B,A)$ of weight $7$ and $(A,D)$ of weight $5$. Adding $(B,D)$ with weight $2$ creates a cycle with edge weights $\\{7,5,2\\}$. The maximum-weight edge on this cycle is $(A,B)$ with weight $7$, and it is uniquely maximum. By the cycle property, the updated MST is obtained by removing $(A,B)$ and keeping $(A,D)$ while adding $(B,D)$.\n\nTherefore, the new total cost is\n$$\nS' = S - w(A,B) + w(B,D) = 39 - 7 + 2 = 34.\n$$\nBy the cycle property and the fact that only one edge weight changed (decreased), this replacement yields an MST under the updated costs. Hence, the optimal network cost is $34$ (in thousands of dollars).", "answer": "$$\\boxed{34}$$", "id": "1401675"}]}