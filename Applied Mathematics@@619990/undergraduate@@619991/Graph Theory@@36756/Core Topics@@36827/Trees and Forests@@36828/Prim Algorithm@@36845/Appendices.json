{"hands_on_practices": [{"introduction": "The best way to understand an algorithm is to run through it yourself. This first practice problem [@problem_id:1528055] asks you to manually trace the execution of Prim's algorithm on a sample network. By methodically selecting the lowest-cost edge that connects a vertex in your growing tree to a new vertex, you'll gain a concrete, step-by-step understanding of how this greedy approach constructs a Minimum Spanning Tree.", "problem": "A consortium of research institutions is setting up a communication network to connect seven remote Antarctic research stations. The cost of laying high-speed fiber optic cable between any two stations is proportional to the distance and terrain difficulty. Your task is to determine the most cost-effective way to connect all stations into a single network. The available direct links and their associated costs (in arbitrary units) are as follows:\n\n*   Alpha Base to Bravo Point: 4\n*   Alpha Base to Charlie Lab: 5\n*   Alpha Base to Foxtrot Camp: 9\n*   Bravo Point to Charlie Lab: 3\n*   Bravo Point to Delta Hub: 8\n*   Charlie Lab to Delta Hub: 10\n*   Charlie Lab to Echo Site: 6\n*   Charlie Lab to Foxtrot Camp: 2\n*   Delta Hub to Echo Site: 1\n*   Echo Site to Gamma Station: 7\n*   Foxtrot Camp to Gamma Station: 11\n\nTo plan the network construction, you will use Prim's algorithm to find a Minimum Spanning Tree (MST). If you start the algorithm from Alpha Base, in what order are the other stations added to the network?\n\nSelect the correct sequence from the options below. The sequence includes the starting station first, followed by the stations in the order they were added.\n\nA. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station\n\nB. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Gamma Station, Echo Site, Delta Hub\n\nC. Alpha Base, Charlie Lab, Foxtrot Camp, Bravo Point, Echo Site, Delta Hub, Gamma Station\n\nD. Alpha Base, Bravo Point, Charlie Lab, Echo Site, Delta Hub, Foxtrot Camp, Gamma Station\n\nE. Alpha Base, Delta Hub, Echo Site, Charlie Lab, Foxtrot Camp, Bravo Point, Gamma Station", "solution": "We model the network as an undirected weighted graph with vertex set $\\{\\text{Alpha Base}, \\text{Bravo Point}, \\text{Charlie Lab}, \\text{Delta Hub}, \\text{Echo Site}, \\text{Foxtrot Camp}, \\text{Gamma Station}\\}$ and edge weights given by $w(u,v)$:\n$$\n\\begin{aligned}\n&w(\\text{Alpha Base},\\text{Bravo Point})=4,\\quad w(\\text{Alpha Base},\\text{Charlie Lab})=5,\\quad w(\\text{Alpha Base},\\text{Foxtrot Camp})=9,\\\\\n&w(\\text{Bravo Point},\\text{Charlie Lab})=3,\\quad w(\\text{Bravo Point},\\text{Delta Hub})=8,\\\\\n&w(\\text{Charlie Lab},\\text{Delta Hub})=10,\\quad w(\\text{Charlie Lab},\\text{Echo Site})=6,\\quad w(\\text{Charlie Lab},\\text{Foxtrot Camp})=2,\\\\\n&w(\\text{Delta Hub},\\text{Echo Site})=1,\\quad w(\\text{Echo Site},\\text{Gamma Station})=7,\\quad w(\\text{Foxtrot Camp},\\text{Gamma Station})=11.\n\\end{aligned}\n$$\nPrim's algorithm initializes the tree with the starting vertex and iteratively adds the minimum-weight edge crossing from the current tree to any vertex outside it.\n\nInitialize with $T_{0}=\\{\\text{Alpha Base}\\}$. Candidate edges from $T_{0}$ are:\n$$\n(\\text{Alpha Base},\\text{Bravo Point},4),\\;(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9).\n$$\nThe minimum is $4$, so add Bravo Point. Order so far: Alpha Base, Bravo Point. Now $T_{1}=\\{\\text{Alpha Base},\\text{Bravo Point}\\}$.\n\nFrom $T_{1}$ to outside, candidate edges are:\n$$\n(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Charlie Lab},3),\\;(\\text{Bravo Point},\\text{Delta Hub},8).\n$$\nThe minimum is $3$, so add Charlie Lab. Order: Alpha Base, Bravo Point, Charlie Lab. Now $T_{2}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab}\\}$.\n\nFrom $T_{2}$ to outside, candidate edges are:\n$$\n(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Charlie Lab},\\text{Foxtrot Camp},2).\n$$\nThe minimum is $2$, so add Foxtrot Camp. Order: Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp. Now $T_{3}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp}\\}$.\n\nFrom $T_{3}$ to outside, candidate edges are:\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\nThe minimum is $6$, so add Echo Site. Order: Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site. Now $T_{4}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site}\\}$.\n\nFrom $T_{4}$ to outside, candidate edges are:\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Echo Site},\\text{Delta Hub},1),\\;(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\nThe minimum is $1$, so add Delta Hub. Order: Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub. Now $T_{5}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site},\\text{Delta Hub}\\}$.\n\nFrom $T_{5}$ to outside, candidate edges are:\n$$\n(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\nThe minimum is $7$, so add Gamma Station. Final order: Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station.\n\nThis matches option A.", "answer": "$$\\boxed{A}$$", "id": "1528055"}, {"introduction": "Not all 'greedy' strategies are created equal. This exercise [@problem_id:1528057] presents a slight modification of Prim's algorithm that seems intuitive but is ultimately flawed. By comparing the result of this incorrect algorithm with the true Minimum Spanning Tree, you will discover why Prim's specific rule—choosing the minimum-weight edge from the entire set of connected vertices—is essential for guaranteeing optimality.", "problem": "A computer science student, Alex, is studying graph algorithms and comes up with a modified procedure for finding a spanning tree in a connected, undirected, weighted graph. Alex believes this algorithm will always find a Minimum Spanning Tree (MST).\n\n**Alex's Algorithm:**\n1.  Initialize a tree, $T$, with an arbitrary starting vertex, $v_0$.\n2.  Let $v_{last}$ be the vertex most recently added to $T$.\n3.  Find the edge $(v_{last}, u)$ that has the minimum weight among all edges connecting $v_{last}$ to a vertex $u$ not yet in $T$.\n4.  Add this edge and the vertex $u$ to the tree $T$.\n5.  Repeat steps 2-4 until all vertices from the graph are included in $T$.\n\nYour task is to analyze the performance of Alex's algorithm on a specific graph.\n\nConsider an undirected, weighted graph $G$ with a set of vertices $V = \\{A, B, C, D\\}$ and a set of edges $E$ with the following weights:\n- $w(A,B) = 1$\n- $w(A,C) = 2$\n- $w(C,D) = 3$\n- $w(B,D) = 4$\n- $w(A,D) = 5$\n\nAssuming the process starts at vertex A for both Alex's algorithm and the standard Prim's algorithm for finding a true MST, calculate the total weight of the spanning tree produced by Alex's algorithm and the total weight of the true Minimum Spanning Tree.\n\nPresent your answer as a pair of numbers, (Weight from Alex's Algorithm, Weight of MST), using the LaTeX `pmatrix` environment for a row matrix.", "solution": "We analyze Alex's algorithm first. Initialize the tree with vertex $A$, so $T=\\{A\\}$ and $v_{\\text{last}}=A$. Among edges incident to $A$ that go to vertices not yet in $T$, the candidates are $(A,B)$ with weight $1$, $(A,C)$ with weight $2$, and $(A,D)$ with weight $5$. The minimum is $(A,B)$, so we add edge $(A,B)$ and vertex $B$. Now $T=\\{A,B\\}$ and $v_{\\text{last}}=B$. From $B$ to vertices not yet in $T$, the only candidate is $(B,D)$ with weight $4$ (since $(B,A)$ goes to an already included vertex and there is no edge $(B,C)$). We add $(B,D)$ and $D$, so $T=\\{A,B,D\\}$ and $v_{\\text{last}}=D$. From $D$ to vertices not yet in $T$, the candidates are $(D,C)$ with weight $3$, $(D,A)$ with weight $5$, and $(D,B)$ with weight $4$, but only $(D,C)$ reaches a new vertex. We add $(D,C)$ and $C$. All vertices are now included. The total weight of Alex's tree is therefore\n$$\nw_{\\text{Alex}}=w(A,B)+w(B,D)+w(D,C)=1+4+3=8.\n$$\n\nNow apply Prim's algorithm starting at $A$. Initialize $T=\\{A\\}$. Among all edges crossing from $T$ to $V\\setminus T$, the candidates are $(A,B)$ with weight $1$, $(A,C)$ with weight $2$, and $(A,D)$ with weight $5$. The minimum is $(A,B)$ with weight $1$, so add $B$ and the edge $(A,B)$. Now $T=\\{A,B\\}$. The edges crossing from $T$ to $V\\setminus T=\\{C,D\\}$ are $(A,C)$ with weight $2$, $(A,D)$ with weight $5$, and $(B,D)$ with weight $4$. The minimum is $(A,C)$ with weight $2$, so add $C$ and edge $(A,C)$. Now $T=\\{A,B,C\\}$. The edges crossing to $V\\setminus T=\\{D\\}$ are $(C,D)$ with weight $3$, $(B,D)$ with weight $4$, and $(A,D)$ with weight $5$. The minimum is $(C,D)$ with weight $3$, so add $D$ and edge $(C,D)$. The total weight of the MST found by Prim's algorithm is\n$$\nw_{\\text{MST}}=w(A,B)+w(A,C)+w(C,D)=1+2+3=6.\n$$\n\nTherefore, the pair of total weights is $\\left(8,6\\right)$, reported as a row matrix using the $\\mathrm{pmatrix}$ environment.", "answer": "$$\\boxed{\\begin{pmatrix}8 & 6\\end{pmatrix}}$$", "id": "1528057"}, {"introduction": "Real-world networks are not static; costs change and new connections become available. This practice problem [@problem_id:1528096] explores how to efficiently update an existing Minimum Spanning Tree when a new, cheaper link is introduced. You will apply the fundamental 'cycle property' of MSTs to determine if the new connection creates a more cost-effective network, a powerful technique for dynamic optimization.", "problem": "A technology company manages a network of 7 server farms, labeled A, B, C, D, E, F, and G. A network architect has already determined the most cost-effective way to connect all farms using fiber optic cables, forming a Minimum Spanning Tree (MST) of the underlying network graph. The cost, in thousands of dollars, is represented by the weight of each edge. The set of connections in this existing MST and their corresponding costs are: (A, B) with cost 3, (A, C) with cost 5, (B, D) with cost 8, (C, E) with cost 4, (E, F) with cost 6, and (E, G) with cost 9.\n\nA new technological advancement allows for a direct connection between server farms D and G at a significantly reduced cost of 7 thousand dollars. The company wants to determine if incorporating this new potential connection will lower the overall cost of keeping all server farms connected.\n\nCalculate the new minimum total cost required to connect all 7 server farms, incorporating the possibility of using the new (D, G) link. Provide your answer as a number, in thousands of dollars.", "solution": "We have an existing minimum spanning tree (MST) on vertices $\\{A,B,C,D,E,F,G\\}$ with edges and weights (in thousands of dollars): $(A,B)$ with weight $3$, $(A,C)$ with weight $5$, $(B,D)$ with weight $8$, $(C,E)$ with weight $4$, $(E,F)$ with weight $6$, and $(E,G)$ with weight $9$. The total cost of this MST is computed by summing the edge weights:\n$$\nW=\\;3+5+8+4+6+9=\\;35.\n$$\n\nA new possible edge $(D,G)$ with weight $7$ is introduced. To determine whether this reduces the MST cost, we use the cycle (or cut) property of MSTs: if we add an edge $e=(u,v)$ of weight $w(e)$ to an MST $T$, it creates a unique cycle. If $w(e)$ is less than the maximum edge weight on the unique path between $u$ and $v$ in $T$, then replacing that maximum-weight edge on the cycle by $e$ yields a new spanning tree of strictly smaller total weight; if $w(e)$ equals that maximum, the total weight is unchanged; if $w(e)$ is larger, the MST remains optimal without $e$.\n\nIn the current MST, the unique path from $D$ to $G$ is\n$$\nD \\to B \\to A \\to C \\to E \\to G,\n$$\nwith edge weights $8,\\,3,\\,5,\\,4,\\,9$, respectively. The maximum weight on this path is $9$ (on edge $(E,G)$). Since the new edge has weight $7$, which satisfies $7<9$, we replace edge $(E,G)$ by $(D,G)$ to obtain a strictly lower-cost spanning tree.\n\nThe new total cost is obtained by subtracting the removed edge weight and adding the new edge weight:\n$$\nW' \\;=\\; W - 9 + 7 \\;=\\; 35 - 9 + 7 \\;=\\; 33.\n$$\n\nTherefore, incorporating the new $(D,G)$ link reduces the MST cost to $33$ thousand dollars.", "answer": "$$\\boxed{33}$$", "id": "1528096"}]}