{"hands_on_practices": [{"introduction": "The fundamental skill in working with Prüfer codes is mastering the encoding process. This exercise walks you through the standard algorithm for converting a given labeled tree into its unique Prüfer sequence. Understanding this procedure is the first step toward appreciating the powerful connection between trees and sequences established by this method. [@problem_id:1529280]", "problem": "In graph theory, a Prüfer code (also known as a Prüfer sequence) is a unique sequence associated with a labeled tree. Consider a labeled tree $T$ with the vertex set $V = \\{1, 2, 3, 4, 5\\}$ and the edge set $E = \\{(1,3), (2,3), (3,4), (4,5)\\}$.\n\nDetermine the Prüfer code for this tree. The final answer should be a sequence of integers.", "solution": "A Prüfer code for a labeled tree with $n$ vertices is obtained by repeating $n-2$ times the following step: select the smallest labeled leaf (a vertex of degree $1$), record its unique neighbor, and remove the leaf from the tree.\n\nFor the given tree with $V=\\{1,2,3,4,5\\}$ and $E=\\{(1,3),(2,3),(3,4),(4,5)\\}$, the degrees are initially $d(1)=1$, $d(2)=1$, $d(3)=3$, $d(4)=2$, $d(5)=1$. The leaves are $\\{1,2,5\\}$.\n\nStep 1: The smallest leaf is $1$, its neighbor is $3$. Record $3$. Remove $1$. Now the edges are $\\{(2,3),(3,4),(4,5)\\}$ with degrees $d(2)=1$, $d(3)=2$, $d(4)=2$, $d(5)=1$. Leaves are $\\{2,5\\}$.\n\nStep 2: The smallest leaf is $2$, its neighbor is $3$. Record $3$. Remove $2$. Now the edges are $\\{(3,4),(4,5)\\}$ with degrees $d(3)=1$, $d(4)=2$, $d(5)=1$. Leaves are $\\{3,5\\}$.\n\nStep 3: The smallest leaf is $3$, its neighbor is $4$. Record $4$. Remove $3$. This completes $n-2=3$ steps.\n\nThus, the Prüfer code is the sequence $(3,3,4)$.", "answer": "$$\\boxed{\\begin{pmatrix}3 & 3 & 4\\end{pmatrix}}$$", "id": "1529280"}, {"introduction": "The power of the Prüfer code lies in its one-to-one correspondence with labeled trees, a concept that proves Cayley's formula. Having learned to encode a tree, this practice challenges you to perform the reverse operation: decoding a sequence back into the specific tree it represents. Successfully reconstructing the tree solidifies your understanding of this important bijection in graph theory. [@problem_id:1529302]", "problem": "In graph theory, a Prüfer sequence (also known as a Prüfer code) is a unique sequence associated with a labeled tree. According to Cayley's formula, there are $n^{n-2}$ distinct labeled trees on $n$ vertices. The existence of a bijection between the set of labeled trees on $n$ vertices and the set of all sequences of length $n-2$ from the vertex labels provides a constructive proof of this formula.\n\nConsider a labeled tree with the set of vertices $V = \\{1, 2, 3, 4, 5, 6, 7\\}$. The Prüfer sequence corresponding to this tree is given by the sequence of integers $S = (3, 1, 4, 1, 5)$.\n\nWhich of the following represents the set of edges $E$ for this tree, where each edge is represented as a pair $(u, v)$ with $u < v$?\n\nA. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (4, 6), (5, 7)\\}$\n\nB. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (4, 6), (5, 6)\\}$\n\nC. $\\{(1, 3), (1, 4), (1, 6), (2, 3), (4, 5), (6, 7)\\}$\n\nD. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (5, 7)\\}$", "solution": "We use the standard decoding algorithm for Prüfer sequences. For a labeled tree on the vertex set $V=\\{1,2,3,4,5,6,7\\}$ with Prüfer sequence $S=(3,1,4,1,5)$ of length $n-2=5$, we proceed iteratively:\n1) At each step, find the smallest vertex in the current vertex set that does not appear in the current (remaining) sequence.\n2) Connect that vertex to the first element of the current sequence to form an edge.\n3) Remove that vertex from the vertex set and remove the first element from the sequence.\n4) Repeat until the sequence is empty; finally connect the last two remaining vertices.\n\nInitialize the remaining sequence as $R_{0}=(3,1,4,1,5)$ and the current vertex set as $V_{0}=\\{1,2,3,4,5,6,7\\}$.\n\nStep 1: Elements appearing in $R_{0}$ are $\\{1,3,4,5\\}$. The smallest vertex in $V_{0}$ not in $R_{0}$ is $2$. Add edge $(2,3)$, remove $2$ and the first element $3$.\nNow $R_{1}=(1,4,1,5)$, $V_{1}=\\{1,3,4,5,6,7\\}$.\n\nStep 2: Elements in $R_{1}$ are $\\{1,4,5\\}$. The smallest vertex in $V_{1}$ not in $R_{1}$ is $3$. Add edge $(3,1)$, remove $3$ and the first element $1$.\nNow $R_{2}=(4,1,5)$, $V_{2}=\\{1,4,5,6,7\\}$.\n\nStep 3: Elements in $R_{2}$ are $\\{1,4,5\\}$. The smallest vertex in $V_{2}$ not in $R_{2}$ is $6$. Add edge $(6,4)$, remove $6$ and the first element $4$.\nNow $R_{3}=(1,5)$, $V_{3}=\\{1,4,5,7\\}$.\n\nStep 4: Elements in $R_{3}$ are $\\{1,5\\}$. The smallest vertex in $V_{3}$ not in $R_{3}$ is $4$. Add edge $(4,1)$, remove $4$ and the first element $1$.\nNow $R_{4}=(5)$, $V_{4}=\\{1,5,7\\}$.\n\nStep 5: Elements in $R_{4}$ are $\\{5\\}$. The smallest vertex in $V_{4}$ not in $R_{4}$ is $1$. Add edge $(1,5)$, remove $1$ and the first element $5$.\nNow $R_{5}=()$ (empty), $V_{5}=\\{5,7\\}$.\n\nFinal step: With the sequence empty, connect the last two vertices: add edge $(5,7)$.\n\nCollecting all edges and writing each as $(u,v)$ with $u<v$, we obtain\n$$\nE=\\{(2,3),(1,3),(4,6),(1,4),(1,5),(5,7)\\}\n=\\{(1,3),(1,4),(1,5),(2,3),(4,6),(5,7)\\}.\n$$\nThis matches option A. As a consistency check, a tree on $7$ vertices must have $7-1=6$ edges; option D has only $5$ edges and is therefore invalid. Options B and C differ from the reconstructed set.", "answer": "$$\\boxed{A}$$", "id": "1529302"}, {"introduction": "One of the most elegant features of Prüfer codes is the ability to deduce key properties of a tree without performing a full reconstruction. This problem demonstrates a powerful shortcut for determining the degree of any vertex simply by analyzing its frequency within the code. This exercise highlights how Prüfer codes serve not just as a unique label, but as a compact and potent analytical tool. [@problem_id:1529298]", "problem": "A tree is defined on a set of $n=7$ vertices, which are labeled with the integers from 1 to 7. The Prüfer code corresponding to this tree is given by the sequence $(1, 3, 2, 3, 1)$. Based on this information, determine the degree of vertex 3 in the tree.", "solution": "We consider a labeled tree on the vertex set $\\{1,2,\\ldots,7\\}$ with Prüfer code $(1,3,2,3,1)$. A standard property of Prüfer codes states that for any vertex $v$, its degree in the tree is given by\n$$\n\\deg(v)=1+\\text{(number of times $v$ appears in the Prüfer sequence)}.\n$$\nThis follows from the construction of the Prüfer code, where each appearance of $v$ corresponds to one incident edge accounted for during the encoding, and each vertex remains as a leaf contributing one additional incident edge at the end.\n\nWe apply this to vertex $3$. In the given Prüfer sequence $(1,3,2,3,1)$, the label $3$ appears exactly $2$ times. Therefore,\n$$\n\\deg(3)=1+2=3.\n$$\nThis is consistent with the fact that the Prüfer sequence length is $n-2=5$ for $n=7$, matching the provided sequence.", "answer": "$$\\boxed{3}$$", "id": "1529298"}]}