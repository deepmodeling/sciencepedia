{"hands_on_practices": [{"introduction": "We begin our exploration with a tangible and highly visual example. Grid graphs are excellent models for various real-world networks, from city street layouts to connections on a circuit board. In this first practice [@problem_id:1514386], you will determine the maximum number of paths between opposite corners of a $3 \\times 3$ grid that do not share any intermediate vertices. This exercise helps build intuition for what 'internally disjoint' means and introduces the fundamental strategy of both finding an upper limit and then constructing paths to show that limit is achievable.", "problem": "A grid graph $G_{m,n}$ is a graph whose vertex set is the set of points in the plane with integer coordinates $(i,j)$, where $1 \\le i \\le m$ and $1 \\le j \\le n$. Two vertices $(i,j)$ and $(i',j')$ in this graph are connected by an edge if and only if the Manhattan distance between them is 1, that is, $|i-i'| + |j-j'| = 1$.\n\nConsider a $3 \\times 3$ grid graph, $G_{3,3}$. Let the starting vertex $s$ be the corner at $(1,1)$ and the terminal vertex $t$ be the corner at $(3,3)$.\n\nTwo paths from a vertex $u$ to a vertex $v$ are called internally disjoint if they share no intermediate vertices. In other words, their only common vertices are the start vertex $u$ and the end vertex $v$.\n\nDetermine the maximum number of internally disjoint paths that exist between vertex $s$ and vertex $t$ in this $3 \\times 3$ grid graph.", "solution": "We label the $3 \\times 3$ grid graph $G_{3,3}$ with vertices $(i,j)$ for $1 \\leq i,j \\leq 3$, and take $s=(1,1)$ and $t=(3,3)$.\n\nStep 1 (Upper bound via degree/vertex-disjointness constraint): Any set of internally disjoint $s$–$t$ paths must leave $s$ through distinct neighbors of $s$. Since $s$ has exactly two neighbors, namely $(1,2)$ and $(2,1)$, we have the bound\n$$\n\\text{(maximum number of internally disjoint $s$–$t$ paths)} \\leq \\deg(s) = 2.\n$$\nEquivalently, by Menger’s theorem (vertex version), the maximum number of internally vertex-disjoint $s$–$t$ paths is at most the size of a minimum $s$–$t$ vertex cut, which is at most $\\deg(s)=2$ because removing both neighbors of $s$ disconnects $s$ from $t$.\n\nStep 2 (Construction achieving the bound): We exhibit two internally disjoint $s$–$t$ paths:\n- Path $P_{1}$: $(1,1) \\to (1,2) \\to (1,3) \\to (2,3) \\to (3,3)$.\n- Path $P_{2}$: $(1,1) \\to (2,1) \\to (3,1) \\to (3,2) \\to (3,3)$.\nThese two paths share only the endpoints $s$ and $t$; their intermediate vertices are disjoint.\n\nStep 3 (Conclusion): The upper bound $2$ is achieved, hence the maximum number of internally disjoint $s$–$t$ paths equals $2$.", "answer": "$$\\boxed{2}$$", "id": "1514386"}, {"introduction": "Having developed a feel for internally disjoint paths on a uniform grid, we now move to a more complex network structure. This problem models a system built from two distinct modules, connected by a limited number of links—a common scenario in computer networks or distributed systems. The challenge [@problem_id:1514367] is to assess the fault tolerance between nodes in different modules, which naturally leads to thinking about 'bottlenecks' and identifying the critical vertices that constrain the number of independent routes through the graph.", "problem": "Consider a network of computational nodes modeled by a simple undirected graph $G$. The network is constructed from two identical modules, Module A and Module B. The set of nodes in Module A is $V_A = \\{a_1, a_2, a_3, a_4\\}$, and the set of nodes in Module B is $V_B = \\{b_1, b_2, b_3, b_4\\}$. The total set of nodes in the network is $V = V_A \\cup V_B$.\n\nThe connections (edges) in the network are defined as follows:\n1. Within Module A, every pair of distinct nodes is connected by an edge, with the single exception of the pair $\\{a_3, a_4\\}$, which is not connected.\n2. Within Module B, every pair of distinct nodes is connected by an edge, with the single exception of the pair $\\{b_3, b_4\\}$, which is not connected.\n3. The two modules are interconnected by exactly two edges: one connecting node $a_3$ to node $b_3$, and another connecting node $a_4$ to node $b_4$.\n\nThe fault tolerance between two nodes can be characterized by the maximum number of paths between them that do not share any intermediate nodes. In graph theory, these are known as internally disjoint paths. Determine the maximum number of internally disjoint paths between node $a_1$ and node $b_1$.", "solution": "Let $G$ have vertex set $V=V_{A}\\cup V_{B}$ with $V_{A}=\\{a_{1},a_{2},a_{3},a_{4}\\}$ and $V_{B}=\\{b_{1},b_{2},b_{3},b_{4}\\}$. Inside each module, all pairs are adjacent except $\\{a_{3},a_{4}\\}$ in $V_{A}$ and $\\{b_{3},b_{4}\\}$ in $V_{B}$. The only inter-module edges are $a_{3}b_{3}$ and $a_{4}b_{4}$.\n\nUpper bound: Any $a_{1}$–$b_{1}$ path must cross from $V_{A}$ to $V_{B}$ via one of the two edges $a_{3}b_{3}$ or $a_{4}b_{4}$. Therefore each such path contains, as internal vertices, either the pair $\\{a_{3},b_{3}\\}$ or the pair $\\{a_{4},b_{4}\\}$. Two internally disjoint $a_{1}$–$b_{1}$ paths cannot both use the same pair, since they would share internal vertices. Hence there can be at most two internally disjoint $a_{1}$–$b_{1}$ paths. Equivalently, the set $\\{a_{3},a_{4}\\}$ is an $a_{1}$–$b_{1}$ vertex cut (removing it deletes all edges from $V_{A}$ to $V_{B}$), so by Menger’s theorem the maximum number of internally disjoint $a_{1}$–$b_{1}$ paths is at most $2$.\n\nLower bound: Construct two internally disjoint $a_{1}$–$b_{1}$ paths:\n- Since the only missing edge in $V_{A}$ is $a_{3}a_{4}$, both edges $a_{1}a_{3}$ and $a_{1}a_{4}$ exist; since the only missing edge in $V_{B}$ is $b_{3}b_{4}$, both edges $b_{1}b_{3}$ and $b_{1}b_{4}$ exist. Thus the paths\n$$P_{1}: a_{1}\\text{–}a_{3}\\text{–}b_{3}\\text{–}b_{1}, \\quad P_{2}: a_{1}\\text{–}a_{4}\\text{–}b_{4}\\text{–}b_{1}$$\nare valid $a_{1}$–$b_{1}$ paths. Their internal vertex sets are $\\{a_{3},b_{3}\\}$ and $\\{a_{4},b_{4}\\}$, which are disjoint. Hence there exist at least two internally disjoint paths.\n\nCombining the upper bound and the construction, the maximum number of internally disjoint paths between $a_{1}$ and $b_{1}$ is $2$.", "answer": "$$\\boxed{2}$$", "id": "1514367"}, {"introduction": "Our final practice solidifies the powerful connection between the number of internally disjoint paths and the concept of a vertex cut. The graph in this problem [@problem_id:1514408] is constructed by joining two highly-connected components at a few shared vertices. Rather than just finding paths by inspection, solving this requires you to identify the minimum set of vertices whose removal would disconnect the start and end points. This exercise serves as a practical application of the principle behind Menger's Theorem, a cornerstone of graph connectivity, shifting your focus from path enumeration to structural analysis.", "problem": "Consider a graph $G$ constructed according to the following procedure. Begin with two disjoint copies of the complete graph on five vertices, denoted $K_5$. Let these two graphs be $G_A$ and $G_B$. The vertex set of $G_A$ is $V_A = \\{a_1, a_2, x_1, x_2, x_3\\}$, and the vertex set of $G_B$ is $V_B = \\{b_1, b_2, y_1, y_2, y_3\\}$. The final graph $G$ is formed by taking the union of $G_A$ and $G_B$ and then, for each index $i \\in \\{1, 2, 3\\}$, identifying the vertex $x_i$ from $G_A$ with the vertex $y_i$ from $G_B$. Let these three new, identified vertices be denoted $c_1, c_2, c_3$ respectively.\n\nThe task is to determine the maximum number of internally disjoint paths in the resulting graph $G$ that connect the vertex $a_1$ to the vertex $b_1$. Two paths are defined as internally disjoint if they do not share any intermediate vertices.", "solution": "Let $G$ be obtained by gluing two copies of $K_{5}$, namely $G_{A}$ on vertices $\\{a_{1},a_{2},x_{1},x_{2},x_{3}\\}$ and $G_{B}$ on vertices $\\{b_{1},b_{2},y_{1},y_{2},y_{3}\\}$, by identifying $x_{i}$ with $y_{i}$ for $i \\in \\{1,2,3\\}$ into common vertices $c_{1},c_{2},c_{3}$. Then $G$ contains the subgraphs induced by $\\{a_{1},a_{2},c_{1},c_{2},c_{3}\\}$ and by $\\{b_{1},b_{2},c_{1},c_{2},c_{3}\\}$, each isomorphic to $K_{5}$, and the overlap is exactly the triangle on $\\{c_{1},c_{2},c_{3}\\}$.\n\nAny path in $G$ from $a_{1}$ to $b_{1}$ must pass through at least one vertex of $C=\\{c_{1},c_{2},c_{3}\\}$ because $a_{1}$ lies in the copy containing $\\{a_{1},a_{2},c_{1},c_{2},c_{3}\\}$ and $b_{1}$ lies in the copy containing $\\{b_{1},b_{2},c_{1},c_{2},c_{3}\\}$, and the only common vertices between these parts are the $c_{i}$. Thus $C$ is an $a_{1}$–$b_{1}$ vertex cut, so a minimum $a_{1}$–$b_{1}$ vertex cut has size at most $|C|=3$.\n\nWe now show that no $a_{1}$–$b_{1}$ vertex cut has size less than $3$. Let $S \\subset V(G)\\setminus\\{a_{1},b_{1}\\}$ with $|S| \\leq 2$. Then there exists $i \\in \\{1,2,3\\}$ with $c_{i} \\notin S$. Since $a_{1}$ is adjacent to $c_{i}$ and $c_{i}$ is adjacent to $b_{1}$ in $G$, the path $a_{1}c_{i}b_{1}$ avoids $S$. Hence removing at most two vertices never separates $a_{1}$ from $b_{1}$, and every $a_{1}$–$b_{1}$ vertex cut has size at least $3$.\n\nBy Menger’s theorem, the maximum number of pairwise internally vertex-disjoint $a_{1}$–$b_{1}$ paths equals the size of a minimum $a_{1}$–$b_{1}$ vertex cut, which we have shown is $3$. This maximum is attained by the three paths $a_{1}c_{i}b_{1}$ for $i=1,2,3$, which are internally disjoint since their internal vertices are $c_{1},c_{2},c_{3}$, respectively.", "answer": "$$\\boxed{3}$$", "id": "1514408"}]}