{"hands_on_practices": [{"introduction": "Understanding cut vertices begins with recognizing their role as critical junctures in a network. This exercise provides a classic example of a graph constructed by joining two distinct, highly connected components at a single shared vertex. By analyzing this structure [@problem_id:1493649], you will develop a clear intuition for how a single point can become essential for holding the entire network together.", "problem": "Let a complete graph on $n$ vertices, denoted $K_n$, be a simple undirected graph in which every pair of distinct vertices is connected by a unique edge. A cut vertex of a connected graph is a vertex whose removal (along with all incident edges) increases the number of connected components of the graph.\n\nConsider two disjoint copies of the complete graph $K_5$. Let the vertex set of the first copy be $V_1 = \\{u_1, u_2, u_3, u_4, u_5\\}$ and the vertex set of the second copy be $V_2 = \\{v_1, v_2, v_3, v_4, v_5\\}$. A new graph $G$ is constructed by taking the union of these two graphs and then identifying the vertex $u_1$ from the first copy with the vertex $v_1$ from the second copy. This merged vertex is denoted by $w$. The vertex set of the resulting graph $G$ is $\\{w, u_2, u_3, u_4, u_5, v_2, v_3, v_4, v_5\\}$.\n\nWhich of the following statements correctly identifies all the cut vertices of the graph $G$?\n\nA. The vertex $w$ is the only cut vertex.\n\nB. The vertices $u_2, u_3, u_4, u_5$ are the only cut vertices.\n\nC. All 9 vertices of $G$ are cut vertices.\n\nD. The graph $G$ has no cut vertices.\n\nE. The vertices $w, u_2,$ and $v_2$ are the only cut vertices.", "solution": "We first describe the structure of the graph $G$. Start with two disjoint copies of $K_{5}$ with vertex sets $V_{1}=\\{u_{1},u_{2},u_{3},u_{4},u_{5}\\}$ and $V_{2}=\\{v_{1},v_{2},v_{3},v_{4},v_{5}\\}$. Identify $u_{1}$ with $v_{1}$ to form a single vertex $w$. Then $G$ has vertex set $\\{w,u_{2},u_{3},u_{4},u_{5},v_{2},v_{3},v_{4},v_{5}\\}$. Within $\\{w,u_{2},u_{3},u_{4},u_{5}\\}$ the induced subgraph is $K_{5}$, and within $\\{w,v_{2},v_{3},v_{4},v_{5}\\}$ the induced subgraph is $K_{5}$. There are no edges between $u_{i}$ and $v_{j}$ for $i\\geq 2$ and $j\\geq 2$.\n\nBy definition, a cut vertex of a connected graph is a vertex whose removal increases the number of connected components. Let $k(H)$ denote the number of connected components of a graph $H$.\n\nFirst, we show that $w$ is a cut vertex. The graph $G$ is connected because for any $u_{i}$ with $i\\geq 2$ and any $v_{j}$ with $j\\geq 2$, there is a path $u_{i}-w-v_{j}$. Consider $G-w$. The remaining vertices split into two sets: $\\{u_{2},u_{3},u_{4},u_{5}\\}$ and $\\{v_{2},v_{3},v_{4},v_{5}\\}$. Each induces a $K_{4}$, hence is connected, and there are no edges between these two sets because $w$ was the only vertex adjacent to both sides. Therefore $G-w$ has exactly two connected components, so $k(G-w)=2>1=k(G)$, and $w$ is a cut vertex.\n\nNext, we show that no other vertex is a cut vertex. Let $x\\in V(G)$ with $x\\neq w$. Without loss of generality, take $x=u_{2}$. In $G-u_{2}$, the vertex $w$ remains and is adjacent to every vertex in $\\{u_{3},u_{4},u_{5},v_{2},v_{3},v_{4},v_{5}\\}$. For any two remaining vertices:\n- If both lie in $\\{u_{3},u_{4},u_{5}\\}$, they are adjacent because that set induces a $K_{3}$ within the original $K_{5}$.\n- If both lie in $\\{v_{2},v_{3},v_{4},v_{5}\\}$, they are adjacent because that set still induces a $K_{4}$.\n- If one lies in $\\{u_{3},u_{4},u_{5}\\}$ and the other in $\\{v_{2},v_{3},v_{4},v_{5}\\}$, there is a path of length two through $w$.\nHence $G-u_{2}$ is connected and $k(G-u_{2})=1$. The same argument applies symmetrically to any $x=v_{j}$ with $j\\geq 2$. Therefore no vertex other than $w$ is a cut vertex.\n\nConsequently, the only cut vertex of $G$ is $w$, which corresponds to option A.", "answer": "$$\\boxed{A}$$", "id": "1493649"}, {"introduction": "A common misconception is that the most connected vertices in a graph—those with the highest degree—must be cut vertices. This exercise [@problem_id:1493645] challenges that intuitive but flawed assumption by asking you to find a counterexample. Evaluating this conjecture will deepen your understanding by showing that high local connectivity does not necessarily make a vertex globally critical for the graph's integrity.", "problem": "In graph theory, we are often interested in vertices whose presence is critical for maintaining the connectivity of a graph. A student proposes the following conjecture: \"In any connected graph with three or more vertices, any vertex that has the maximum degree must be a cut vertex.\"\n\nLet's define the necessary terms. A graph $G$ is a pair $(V, E)$ where $V$ is a set of vertices and $E$ is a set of edges, which are 2-element subsets of $V$.\n- A graph is **connected** if for any two vertices $u, v \\in V$, there exists a path between $u$ and $v$.\n- The **degree** of a vertex $v$, denoted $\\deg(v)$, is the number of edges incident to it. A vertex has **maximum degree** if no other vertex in the graph has a higher degree.\n- A **cut vertex** (or articulation point) in a connected graph is a vertex whose removal (along with all edges incident to it) results in a graph that is disconnected (i.e., has more than one connected component).\n\nYour task is to evaluate the student's conjecture by identifying which of the following graphs, described by their vertex set $V$ and edge set $E$, serves as a counterexample. A graph is a counterexample if it is connected and contains at least one vertex of maximum degree that is *not* a cut vertex.\n\nA. The graph with vertex set $V = \\{v_1, v_2, v_3, v_4, v_5\\}$ and edge set $E = \\{\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\{v_3, v_4\\}, \\{v_4, v_5\\}\\}$.\n\nB. The graph with vertex set $V = \\{c, n_1, n_2, n_3, n_4\\}$ and edge set $E = \\{\\{c, n_1\\}, \\{c, n_2\\}, \\{c, n_3\\}, \\{c, n_4\\}\\}$.\n\nC. The graph with vertex set $V = \\{a_1, a_2, a_3, b_1, b_2, b_3\\}$ and edge set $E = \\{\\{a_1, a_2\\}, \\{a_2, a_3\\}, \\{a_3, a_1\\}, \\{a_1, b_1\\}, \\{b_1, b_2\\}, \\{b_2, b_3\\}, \\{b_3, b_1\\}\\}$.\n\nD. The complete graph on 5 vertices, with vertex set $V = \\{v_1, v_2, v_3, v_4, v_5\\}$ and edge set $E$ containing all possible edges between distinct vertices.\n\nSelect the single correct option.", "solution": "We evaluate each option against the conjecture: in a connected graph with at least three vertices, any vertex of maximum degree must be a cut vertex. A counterexample must be connected and have at least one maximum-degree vertex that is not a cut vertex.\n\nOption A: The path on five vertices with edges $\\{v_{1}v_{2}, v_{2}v_{3}, v_{3}v_{4}, v_{4}v_{5}\\}$. Degrees are $\\deg(v_{1})=\\deg(v_{5})=1$ and $\\deg(v_{2})=\\deg(v_{3})=\\deg(v_{4})=2$. The maximum degree is $2$, attained at $v_{2}, v_{3}, v_{4}$. Removing any of these vertices disconnects the path into at least two components, so each is a cut vertex. This does not contradict the conjecture.\n\nOption B: The star $K_{1,4}$ with center $c$ and leaves $n_{1},\\dots,n_{4}$. Degrees are $\\deg(c)=4$ and $\\deg(n_{i})=1$ for each $i$. The unique maximum-degree vertex $c$ is a cut vertex, since removing $c$ disconnects all leaves. This does not contradict the conjecture.\n\nOption C: Two triangles connected by a single edge: triangle on $\\{a_{1},a_{2},a_{3}\\}$, triangle on $\\{b_{1},b_{2},b_{3}\\}$, and the bridge $\\{a_{1},b_{1}\\}$. Degrees are $\\deg(a_{1})=\\deg(b_{1})=3$ and $\\deg(a_{2})=\\deg(a_{3})=\\deg(b_{2})=\\deg(b_{3})=2$. The maximum-degree vertices are $a_{1}$ and $b_{1}$. Removing $a_{1}$ deletes the only connection between the $a$-side and $b$-side, leaving at least two components, so $a_{1}$ is a cut vertex; similarly for $b_{1}$. This does not contradict the conjecture.\n\nOption D: The complete graph $K_{5}$. Each vertex has degree $\\deg(v_{i})=4$, hence every vertex is of maximum degree. Removing any single vertex from $K_{5}$ yields $K_{4}$, which is connected, so no vertex is a cut vertex. Therefore $K_{5}$ is connected and contains maximum-degree vertices that are not cut vertices, making it a counterexample.\n\nThus, the correct counterexample is the complete graph on five vertices.", "answer": "$$\\boxed{D}$$", "id": "1493645"}, {"introduction": "While identifying cut vertices by inspection works for simple graphs, a systematic method is needed for large, complex networks. This practice introduces a powerful algorithmic approach based on a Depth-First Search (DFS). You will use key properties computed during the traversal—discovery times ($d[u]$) and low-link values ($low[u]$)—to programmatically identify all cut vertices in a given network [@problem_id:1493651], bridging the gap between theory and practical application.", "problem": "A systems analyst is examining the vulnerability of a Decentralized Communication Network (DCN) composed of several interconnected nodes. A node is considered a 'critical hub' if it is not the starting point of the analysis and its failure would partition the network into two or more disconnected components.\n\nTo identify these critical hubs, the analyst performs a Depth-First Search (DFS) on the connected graph representing the network, starting from node A. For each node `u` in the network, the analyst records three pieces of information:\n1.  `parent[u]`: The parent of node `u` in the DFS tree generated by the traversal. The starting node A has no parent.\n2.  `d[u]`: The discovery time of node `u`, which is a timestamp from an integer counter (starting at 1) that increments each time a node is first visited.\n3.  `low[u]`: The low-link value of node `u`. This value is defined as the minimum of `d[u]` and the discovery times of all nodes reachable from `u` (including `u` itself through a path of zero length) by traversing zero or more edges in the DFS tree and then at most one \"back-edge\" (an edge connecting a node to one of its ancestors in the DFS tree).\n\nThe results of the analysis are summarized in the following table:\n\n| Node `u` | `parent[u]` | `d[u]` | `low[u]` |\n|:---:|:---:|:---:|:---:|\n| A | None | 1 | 1 |\n| B | A | 2 | 2 |\n| C | B | 3 | 2 |\n| D | C | 4 | 2 |\n| E | D | 5 | 2 |\n| F | C | 6 | 6 |\n| G | F | 7 | 6 |\n| H | G | 8 | 6 |\n\nBased on the provided data, which of the following sets contains all the critical hubs in the network?\n\nA. {B, C}\n\nB. {B, C, F}\n\nC. {C, F, G}\n\nD. {B, F}\n\nE. {C}", "solution": "A node is an articulation point (critical hub) in a DFS tree if and only if:\n- For the root $r$, it has at least two children in the DFS tree.\n- For a non-root node $u$, there exists a child $v$ of $u$ in the DFS tree such that $low[v] \\ge d[u]$.\n\nFrom the table, the DFS tree (from the parent array) has edges: $A \\to B$, $B \\to C$, $C \\to D$ and $C \\to F$, $D \\to E$, $F \\to G$, $G \\to H$.\n\nEvaluate each node:\n\n1) Root $A$: It has exactly one child ($B$), so it is not an articulation point.\n\n2) Node $B$ (non-root), child set $\\{C\\}$. Check:\n$$low[C]=2,\\quad d[B]=2 \\implies low[C] \\ge d[B].$$\nThus $B$ is an articulation point.\n\n3) Node $C$ (non-root), child set $\\{D,F\\}$. Check children:\n- For $D$: $$low[D]=2,\\quad d[C]=3 \\implies low[D] < d[C],$$ which does not make $C$ an articulation point by itself.\n- For $F$: $$low[F]=6,\\quad d[C]=3 \\implies low[F] \\ge d[C],$$ hence $C$ is an articulation point.\n\n4) Node $D$ (non-root), child set $\\{E\\}$. Check:\n$$low[E]=2,\\quad d[D]=4 \\implies low[E] < d[D],$$ so $D$ is not an articulation point.\n\n5) Node $E$ is a leaf, hence not an articulation point.\n\n6) Node $F$ (non-root), child set $\\{G\\}$. Check:\n$$low[G]=6,\\quad d[F]=6 \\implies low[G] \\ge d[F],$$ so $F$ is an articulation point.\n\n7) Node $G$ (non-root), child set $\\{H\\}$. Check:\n$$low[H]=6,\\quad d[G]=7 \\implies low[H] < d[G],$$ so $G$ is not an articulation point.\n\n8) Node $H$ is a leaf, hence not an articulation point.\n\nTherefore, the set of all critical hubs is $\\{B,C,F\\}$, which corresponds to option B.", "answer": "$$\\boxed{B}$$", "id": "1493651"}]}