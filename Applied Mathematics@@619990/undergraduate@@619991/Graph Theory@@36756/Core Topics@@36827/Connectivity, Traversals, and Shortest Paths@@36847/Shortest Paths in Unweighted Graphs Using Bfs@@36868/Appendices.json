{"hands_on_practices": [{"introduction": "The fundamental strength of Breadth-First Search (BFS) lies in finding the shortest path in unweighted graphs. This first practice exercise provides a classic and intuitive application: navigating a robot through a grid with obstacles. By modeling the grid as a graph where cells are vertices and valid moves are edges, you can directly apply BFS to find the minimum number of steps from a start to an end point, reinforcing the core principles of the algorithm in a visually clear context. [@problem_id:1532951]", "problem": "GridNav, a robotics company, is testing a new pathfinding algorithm for its autonomous delivery robots operating in a dense urban environment. The environment is modeled as an $M \\times N$ grid of cells, with coordinates $(r, c)$ where $0 \\le r < M$ and $0 \\le c < N$. Here, $r$ is the row index and $c$ is the column index.\n\nA robot can move from its current cell $(r, c)$ to any adjacent cell: $(r-1, c)$ (up), $(r+1, c)$ (down), $(r, c-1)$ (left), or $(r, c+1)$ (right). Each such move constitutes a single step. The robot must stay within the grid boundaries and cannot enter cells designated as obstacles.\n\nFor a specific test case, the grid dimensions are $M=8$ and $N=8$. The robot starts at cell $(1, 1)$ and must reach the destination at cell $(6, 6)$. The following cells are designated as impassable obstacles: $(1, 3)$, $(2, 3)$, $(3, 3)$, $(4, 3)$, $(4, 1)$, $(4, 2)$, $(4, 4)$, and $(4, 5)$.\n\nWhat is the minimum number of steps required for the robot to travel from the starting cell to the destination cell?\n\nA) 10\n\nB) 11\n\nC) 12\n\nD) 14\n\nE) The destination is unreachable.", "solution": "The robot moves on an $8 \\times 8$ grid from $(1,1)$ to $(6,6)$ with four-neighbor moves and given obstacles. The Manhattan lower bound is\n$$|6-1| + |6-1| = 10,$$\nso any path has length at least $10$. We show that obstacles force at least two extra steps and then exhibit a path of that length.\n\nLet $R,L,D,U$ be the numbers of right, left, down, and up moves, respectively. The net displacements required by the start and destination are\n$$R - L = 6 - 1 = 5,\\qquad D - U = 6 - 1 = 5,$$\nso the path length is\n$$R + L + D + U = (R - L) + (D - U) + 2(L + U) = 10 + 2(L + U).$$\nThus, if either $L \\geq 1$ or $U \\geq 1$, the length is at least $12$.\n\nWe now argue that any feasible path must satisfy $L \\geq 1$ or $U \\geq 1$ due to the obstacles. The cells $(1,3),(2,3),(3,3),(4,3)$ block column $3$ from rows $1$ through $4$, so a path cannot cross from columns $\\{0,1,2\\}$ to $\\{4,5,6,7\\}$ within rows $1$ through $4$. Moreover, row $4$ has obstacles at columns $1$ through $5$, so to go from rows $\\leq 3$ to rows $\\geq 5$ the path must pass through $(4,0)$ or $(4,6)$ or $(4,7)$.\n\n- If the path crosses row $4$ at column $0$, then starting from column $1$ it must make at least one left move, so $L \\geq 1$ and the length is at least $12$.\n- If the path crosses row $4$ at column $\\geq 6$ while staying at rows $\\leq 4$, then to get from the left side to the right side it must cross column $3$ at a row where it is not blocked; the only such row above $5$ is row $0$. Hence the path must go up at least once, so $U \\geq 1$ and the length is at least $12$.\n\nTherefore every feasible path has length at least $12$.\n\nThis lower bound is attainable. For example, the sequence\n$$(1,1) \\to (1,0) \\to (2,0) \\to (3,0) \\to (4,0) \\to (5,0) \\to (5,1) \\to (5,2) \\to (5,3) \\to (5,4) \\to (5,5) \\to (5,6) \\to (6,6)$$\nuses $1$ left, $5$ downs, and $6$ rights, totaling $12$ steps, and avoids all obstacles.\n\nHence, the minimum number of steps is $12$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1532951"}, {"introduction": "Beyond just finding the length of a shortest path, it is often critical to know how many such paths exist, especially in applications like network routing for load balancing and resilience. This exercise challenges you to extend the standard BFS algorithm. By keeping track of the number of ways to reach each node at its shortest distance, you will learn how to augment BFS to extract richer information about the graph's connectivity. [@problem_id:1532976]", "problem": "In a decentralized data network, computers (nodes) are connected in a peer-to-peer fashion. When a data packet is sent from a source node to a destination node, the network protocol routes it along a path with the minimum number of hops to ensure low latency. For network resilience and load balancing, system administrators need to know how many such minimum-hop paths exist between critical nodes.\n\nConsider a small network of 8 nodes, labeled 1 through 8. The direct, bidirectional connections (edges) between the nodes are given by the following pairs:\n(1, 2), (1, 3), (2, 4), (2, 5), (3, 4), (3, 6), (4, 7), (5, 7), (5, 8), (6, 8), (7, 8).\n\nA path is a sequence of distinct nodes where each adjacent pair in the sequence is connected by an edge. The length of a path is the number of edges it contains.\n\nYour task is to determine the total number of distinct shortest paths for a data packet to travel from the source node 1 to the destination node 8.", "solution": "We model the network as an undirected, unweighted graph. Let $d(v)$ denote the graph distance (minimum number of edges) from node $1$ to node $v$. We first compute $d(v)$ via breadth-first layering from node $1$:\n- $d(1)=0$.\n- Neighbors of $1$ are $2$ and $3$, so $d(2)=1$ and $d(3)=1$.\n- From $2$ and $3$, the new nodes reached are $4$, $5$, and $6$, so $d(4)=2$, $d(5)=2$, and $d(6)=2$.\n- From $4$, $5$, and $6$, we reach $7$ and $8$. Since $5$ and $6$ connect directly to $8$, we get $d(8)=3$. Thus the shortest path length from $1$ to $8$ is $3$.\n\nTo count the number of shortest paths, define $c(v)$ as the number of distinct shortest paths from $1$ to $v$. For an unweighted graph,\n$$\nc(1)=1,\\quad c(v)=\\sum_{\\substack{u\\sim v\\\\ d(u)=d(v)-1}} c(u),\n$$\nwhere $u\\sim v$ denotes adjacency. Proceed layer by layer:\n- At distance $1$: $c(2)=c(1)=1$, $c(3)=c(1)=1$.\n- At distance $2$: $c(4)=c(2)+c(3)=1+1=2$, $c(5)=c(2)=1$, $c(6)=c(3)=1$.\n- At distance $3$ for node $8$: the predecessors at distance $2$ adjacent to $8$ are $5$ and $6$, hence\n$$\nc(8)=c(5)+c(6)=1+1=2.\n$$\nTherefore, there are exactly $2$ distinct shortest paths from node $1$ to node $8$.", "answer": "$$\\boxed{2}$$", "id": "1532976"}, {"introduction": "Real-world problems often come with unique constraints that require us to adapt standard algorithms. This final practice presents a scenario where one rule can be broken—traversing a single one-way street in reverse. To solve this, you must think creatively about how to model the problem, either by constructing a multi-layered graph or by combining multiple BFS runs. This exercise highlights a powerful problem-solving technique: expanding the state space of your search to encode special conditions. [@problem_id:1532922]", "problem": "In the city of Aethelburg, the road network consists entirely of one-way streets. An ambulance is dispatched from a hospital to the scene of an emergency. To minimize response time, the ambulance is granted a special permit allowing it to traverse at most one street in the direction opposite to the normal flow of traffic.\n\nThe city's layout can be modeled as a directed graph where intersections are nodes and the one-way streets are directed edges. The hospital is located at intersection 1, and the emergency is at intersection 12.\n\nThe intersections are numbered 1 through 14. The one-way streets are defined by the following ordered pairs $(u, v)$, where traffic flows from intersection $u$ to intersection $v$:\n(1, 2), (1, 3),\n(2, 4),\n(3, 5),\n(4, 6),\n(5, 6),\n(6, 13),\n(7, 8), (7, 9),\n(8, 10),\n(9, 11),\n(10, 12),\n(11, 12),\n(13, 14),\n(14, 7),\n(9, 4)\n\nThe length of a path is defined as the total number of streets traversed. What is the minimum number of streets the ambulance must traverse to get from the hospital at intersection 1 to the emergency at intersection 12?", "solution": "Model the city as a directed graph $G=(V,E)$ with unit edge lengths. The ambulance may traverse at most one edge in the reverse direction. The shortest path can either be a standard forward-only path, or it can involve reversing exactly one edge $(x,y) \\in E$. The total path length in the latter case would be the sum of the shortest forward path from start (1) to $y$, plus 1 (for the reverse edge $y \\to x$), plus the shortest forward path from $x$ to the destination (12).\n\nLet $d_{1}(u)$ be the shortest distance from node $1$ to node $u$ using only forward edges. Let $d_{2}(u)$ be the shortest distance from node $u$ to node $12$ using only forward edges. The total path length when reversing edge $(x,y)$ is $L(x,y)=d_{1}(y)+1+d_{2}(x)$. The overall minimum is the minimum of $d_1(12)$ (no reversal) and all possible $L(x,y)$ values.\n\nFirst, we compute $d_{1}$ by running BFS from node 1:\n- Layer 0: $d_{1}(1)=0$.\n- Layer 1: $d_{1}(2)=1$, $d_{1}(3)=1$.\n- Layer 2: $d_{1}(4)=2$ (from 2), $d_{1}(5)=2$ (from 3).\n- Layer 3: $d_{1}(6)=3$ (from 4, 5).\n- Layer 4: $d_{1}(13)=4$ (from 6).\n- Layer 5: $d_{1}(14)=5$ (from 13).\n- Layer 6: $d_{1}(7)=6$ (from 14).\n- Layer 7: $d_{1}(8)=7$, $d_{1}(9)=7$ (from 7).\n- Layer 8: $d_{1}(10)=8$ (from 8), $d_{1}(11)=8$ (from 9).\n- Layer 9: $d_{1}(12)=9$ (from 10, 11).\nThe shortest path without using any reverse traversal has length $d_{1}(12)=9$.\n\nNext, we compute $d_2(u)$ by running BFS from node 12 on the *reversed* graph (where an edge $u \\to v$ becomes $v \\to u$).\n- Layer 0: $d_2(12) = 0$.\n- Layer 1: The predecessors of 12 are 10 and 11. So, $d_2(10) = 1$, $d_2(11) = 1$.\n- Layer 2: The predecessors of 10 and 11 are 8 and 9. So, $d_2(8) = 2$, $d_2(9) = 2$.\n- Layer 3: The predecessors of 8 and 9 are 7 (from 8, 9) and 4 (from 9, via edge 9→4). So, $d_2(7) = 3$, $d_2(4) = 3$.\n- Layer 4: The predecessors of 7 and 4 are 14, 6, and 2. So, $d_2(14) = 4$, $d_2(6) = 4$, $d_2(2) = 4$.\n- Layer 5 onwards: Other distances can be computed but are not needed for the optimal path.\n\nNow we evaluate $L(x,y) = d_1(y) + 1 + d_2(x)$ for each edge $(x,y)$ to find the minimum possible path length. We are looking for an edge $(x,y)$ that connects a node `y` that is \"close\" to the start with a node `x` that is \"close\" to the end. Let's check the edge $(9,4)$:\n$$L(9,4) = d_1(4) + 1 + d_2(9) = 2 + 1 + 2 = 5.$$\nThis path consists of going from $1 \\to 2 \\to 4$ (length $d_1(4)=2$), reversing the edge $(9,4)$ to go from $4 \\to 9$ (length 1), and then going from $9 \\to 11 \\to 12$ (length $d_2(9)=2$). The total length is $2+1+2=5$.\n\nComparing the two options (no reversal vs. one reversal), the minimum length is $\\min(d_1(12), 5) = \\min(9, 5) = 5$.\n\nAn explicit optimal route is $1\\to 2\\to 4$ (two forward edges), then traverse $(9,4)$ in reverse as $4\\to 9$, then $9\\to 11\\to 12$, totaling $5$ streets.", "answer": "$$\\boxed{5}$$", "id": "1532922"}]}