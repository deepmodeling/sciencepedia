{"hands_on_practices": [{"introduction": "A core concept in network design is ensuring robustness against single-point failures. This exercise builds on the cycle graph ($C_n$), a basic example of a non-separable (or biconnected) structure. By considering the addition of a single \"shortcut\" or chord, you will explore a fundamental principle: how adding redundancy can solidify and guarantee a graph's biconnectivity [@problem_id:1523924].", "problem": "In graph theory, a connected graph is called **non-separable** (or biconnected) if it remains connected after the removal of any single vertex. A vertex whose removal disconnects a connected graph is known as an **articulation point** or a cut vertex. Therefore, a non-separable graph is a connected graph with at least two vertices that has no articulation points.\n\nA **cycle graph**, denoted $C_n$, consists of $n$ vertices $v_1, v_2, \\ldots, v_n$ and edges connecting $v_i$ to $v_{i+1}$ for $i=1, \\ldots, n-1$, plus an edge from $v_n$ to $v_1$. A **chord** of a cycle is an edge that joins two non-adjacent vertices of the cycle.\n\nConsider a graph $G$ that is constructed by taking a cycle graph $C_n$ with $n \\ge 3$ and adding exactly one chord to it. For which integer values of $n$ is the resulting graph $G$ guaranteed to be non-separable?\n\nA. For all $n \\ge 3$\n\nB. For all $n \\ge 4$\n\nC. For all even $n \\ge 4$\n\nD. For all odd $n \\ge 3$\n\nE. For $n=3$ and $n=4$ only", "solution": "A connected graph is non-separable (biconnected) if removal of any single vertex leaves it connected. For a cycle graph $C_{n}$ with $n \\geq 3$, removal of any vertex leaves a path on $n-1$ vertices, which is connected. Therefore, $C_{n}$ has no articulation points for all $n \\geq 3$, i.e., $C_{n}$ is non-separable.\n\nLet $G$ be obtained from $C_{n}$ by adding exactly one chord. Adding edges cannot create articulation points: formally, for any vertex $v$, the graph $G - v$ has the same vertex set as $C_{n} - v$ and contains $C_{n} - v$ as a spanning subgraph. Since $C_{n} - v$ is connected for every $v$, it follows that $G - v$ is also connected for every $v$. Hence $G$ is non-separable whenever the construction is possible.\n\nA chord of a cycle joins two non-adjacent vertices, which only exists when $n \\geq 4$. For $n=3$, there are no non-adjacent vertex pairs on the cycle, so no chord can be added; the construction is not applicable. Therefore, for all $n \\geq 4$, the resulting graph $G$ is guaranteed to be non-separable, independent of which chord is added.\n\nAmong the options, this corresponds to “For all $n \\geq 4$.”", "answer": "$$\\boxed{B}$$", "id": "1523924"}, {"introduction": "While biconnected graphs are robust against vertex removal, are they equally robust against edge removal? This problem presents a fascinating thought experiment about the \"fragility\" of biconnectivity, asking you to determine if a graph can be constructed where every single edge is critical to preventing the formation of a cut-vertex [@problem_id:1523912]. Solving this will sharpen your ability to construct examples and test the boundaries of graph properties.", "problem": "In graph theory, a *simple graph* is an undirected graph with no loops (edges connecting a vertex to itself) and no multiple edges between the same pair of vertices. A graph is *connected* if there is a path between any two of its distinct vertices. A *cut-vertex* is a vertex whose removal from the graph increases its number of connected components. Let `G` be a simple connected graph with at least three vertices.\n\nConsider the following property, which we will call Property P:\n\n**Property P:** For every edge `e` in graph `G`, the subgraph `G-e` (formed by removing `e`) contains at least one cut-vertex.\n\nWhich of the following statements about a graph `G` satisfying Property P is correct?\n\nA. No simple connected graph `G` with at least three vertices can satisfy Property P.\n\nB. Any simple connected graph `G` with at least three vertices that satisfies Property P must itself contain at least one cut-vertex.\n\nC. Any simple connected graph `G` with at least three vertices that satisfies Property P must be a tree.\n\nD. A simple connected graph `G` with at least three vertices can satisfy Property P without containing a cut-vertex itself.", "solution": "We analyze Property P: for every edge $e$ of a simple connected graph $G$ with at least three vertices, the graph $G-e$ contains at least one cut-vertex.\n\n1) Construct a concrete example that satisfies Property P. Let $G$ be the cycle $C_{3}$ (a triangle). For any edge $e$ of $C_{3}$, the graph $G-e$ is the path $P_{3}$. In $P_{3}$, the middle vertex is a cut-vertex because removing it increases the number of connected components from $1$ to $2$. Therefore, $C_{3}$ satisfies Property P.\n\n2) Use the example to test each statement:\n- Statement A claims no such graph exists. Since $C_{3}$ satisfies Property P, statement A is false.\n- Statement B claims any such $G$ must have a cut-vertex. However, $C_{3}$ has no cut-vertex (cycles have no cut-vertices), yet it satisfies Property P. Thus statement B is false.\n- Statement C claims any such $G$ must be a tree. Since $C_{3}$ is not a tree, statement C is false.\n- Statement D claims there exists a graph satisfying Property P that itself has no cut-vertex. The example $C_{3}$ verifies this directly, so statement D is true.\n\nTherefore, the correct choice is D.", "answer": "$$\\boxed{D}$$", "id": "1523912"}, {"introduction": "Real-world networks are often complex structures composed of robust subsystems (blocks) linked by critical servers (cut-vertices). This practice elevates our analysis from specific graphs to general principles, asking for the maximum number of critical servers possible given a fixed number of vertices and subsystems [@problem_id:1523945]. This exercise challenges you to think about the fundamental architecture connecting biconnected components and derive a powerful, quantitative constraint that governs all such graphs.", "problem": "In network engineering, the resilience of a communication network is often analyzed using graph theory. The network is modeled as a simple, connected graph where vertices represent servers and edges represent direct communication links.\n\nA server is defined as a 'critical server' if its failure (modeled as the removal of the corresponding vertex and all its incident edges) would split a part of the network from another, i.e., it increases the number of connected components. In graph theory, such a vertex is known as a cut-vertex or an articulation point.\n\nA 'robust subsystem' is defined as a maximal set of servers and links that remains connected even if any single server within that set fails. This corresponds to the graph-theoretic concept of a biconnected component, or a block. A graph can be decomposed into a set of such blocks.\n\nAn engineer is given the task of designing a network with a total of $n$ servers. According to the design specifications, the final network must consist of exactly $k$ distinct robust subsystems. We assume that parameters $n$ and $k$ are chosen such that at least one valid network configuration exists.\n\nWhat is the maximum possible number of critical servers that such a network can have? Express your answer as a formula in terms of $n$ and $k$.", "solution": "Model the network as a connected simple graph $G$ with $n$ vertices, whose biconnected components (blocks) are exactly $k$ in number. Let $A$ be the set of articulation vertices and $t=|A|$. Consider the block-cut tree $T$ of $G$, which is a bipartite tree with one part formed by the $k$ block-nodes and the other part formed by the $t$ articulation-nodes. In $T$, an articulation vertex $v\\in A$ has degree equal to the number of blocks containing $v$, and a block-node has degree equal to the number of articulation vertices it contains. Since $T$ is a tree,\n$$\n|E(T)|=t+k-1,\n$$\nand the sum of degrees over articulation vertices satisfies\n$$\n\\sum_{v\\in A} d_{T}(v)=|E(T)|=t+k-1.\n$$\nBy definition, a vertex is an articulation vertex if and only if it lies in at least two blocks, hence every articulation-node in $T$ has degree at least $2$, that is $d_{T}(v)\\geq 2$ for all $v\\in A$. Therefore,\n$$\n\\sum_{v\\in A} d_{T}(v)\\geq 2t.\n$$\nCombining with $\\sum_{v\\in A} d_{T}(v)=t+k-1$ gives\n$$\nt+k-1\\geq 2t \\quad\\Longrightarrow\\quad t\\leq k-1.\n$$\nThus the number of articulation vertices is always at most $k-1$, independently of $n$.\n\nNext, we show this upper bound is attainable for all valid $n$ and $k$. Let the blocks be $B_{1},\\dots,B_{k}$ with sizes $s_{1},\\dots,s_{k}$. Counting vertices via block overlaps gives\n$$\nn=\\sum_{i=1}^{k} s_{i}-\\sum_{v\\in A}\\bigl(d_{T}(v)-1\\bigr).\n$$\nUsing $\\sum_{v\\in A} d_{T}(v)=t+k-1$ yields that $\\sum_{v\\in A}\\bigl(d_{T}(v)-1\\bigr)=k-1$, and therefore $\\sum_{i=1}^{k} s_{i}=n+k-1$.\n\nFor feasibility, each block has at least two vertices when $k\\geq 2$, so $\\sum_{i=1}^{k} s_{i}\\geq 2k$, which implies $n\\geq k+1$ when $k\\geq 2$. This matches the assumption that a valid configuration exists.\n\nTo attain $t=k-1$, take $T$ to be a path alternating block- and articulation-nodes, so every articulation-node has degree exactly $2$. Realize each block as follows. Start with all $k$ blocks being single edges (bridge blocks), arranged so that consecutive blocks share exactly one endpoint, producing a path on $k+1$ vertices. This has $t=k-1$, $k$ blocks, and $\\sum s_{i}=2k$, hence $n=2k-(k-1)=k+1$. If $n>k+1$, increase $\\sum s_{i}$ to $n+k-1$ without changing $k$ or $t$ by replacing some edge-blocks with $2$-connected blocks that include the same articulation vertices but contain additional non-articulation vertices (for instance, replace an edge between two articulation vertices by a cycle through those two vertices and any number of new vertices, or replace an end edge by a cycle attached at its articulation endpoint). This keeps the block-count $k$ and articulation-count $t$ unchanged while increasing $\\sum s_{i}$ as needed. Therefore, for every valid $n$ and $k$, there exists a graph with exactly $k$ blocks and exactly $k-1$ articulation vertices.\n\nHence, the maximum possible number of critical servers is $k-1$.", "answer": "$$\\boxed{k-1}$$", "id": "1523945"}]}