{"hands_on_practices": [{"introduction": "Understanding the relationship between a graph's minimum degree, $\\delta(G)$, and its edge-connectivity, $\\lambda(G)$, is a foundational skill. While it's always true that $\\lambda(G) \\le \\delta(G)$, these two parameters are not always equal. This exercise challenges you to identify a graph where there is a distinct gap between them, specifically a graph with a minimum degree of 3 but an edge-connectivity of only 1. Solving this problem will solidify your understanding of how a graph's structure, particularly the presence of a \"bridge\" or bottleneck, critically determines its resilience to edge removal [@problem_id:1516216].", "problem": "In graph theory, we study the connectivity of networks. A simple graph is an undirected graph with no loops (edges from a vertex to itself) and no more than one edge between any two distinct vertices. The degree of a vertex is the number of edges connected to it. The minimum degree of a graph $G$, denoted $\\delta(G)$, is the smallest degree among all its vertices. The edge-connectivity of a connected graph $G$, denoted $\\lambda(G)$, is the minimum number of edges whose removal would disconnect the graph into two or more components.\n\nConsider the following descriptions of several simple graphs. Which of these graphs has a minimum degree of exactly 3 and an edge-connectivity of exactly 1?\n\nA. The graph whose vertices represent the corners of a cube and whose edges represent the edges connecting these corners.\n\nB. A graph formed by taking two disjoint copies of the complete graph on 3 vertices, $K_3$, and adding a single edge that connects one vertex from the first copy to one vertex from the second.\n\nC. A graph formed by taking two disjoint copies of the complete graph on 4 vertices, $K_4$, and adding a single edge that connects one vertex from the first copy to one vertex from the second.\n\nD. The complete graph on 5 vertices, $K_5$.\n\nE. A graph formed by taking two disjoint copies of the complete graph on 4 vertices, $K_4$, and adding two edges, $(v_1, u_1)$ and $(v_2, u_2)$, where $v_1, v_2$ are distinct vertices from the first copy and $u_1, u_2$ are distinct vertices from the second.", "solution": "We analyze each option by computing the minimum degree $\\delta(G)$ and determining whether there exists a single edge whose removal disconnects the graph (i.e., whether $\\lambda(G)=1$). We use the facts that in $K_{n}$ every vertex has degree $n-1$, that an edge is a bridge (whose removal disconnects the graph) if and only if it is not contained in any cycle, and that adding a single edge between two otherwise disjoint connected graphs creates a bridge.\n\nOption A: The cube graph (the $3$-dimensional hypercube) is $3$-regular, so every vertex has degree $3$ and hence $\\delta(G)=3$. Every edge of the cube lies on a $4$-cycle (a square face), so no edge is a bridge. Therefore, removing any single edge does not disconnect the graph, which implies $\\lambda(G)\\geq 2$. Hence $\\lambda(G)\\neq 1$, so A does not satisfy the condition.\n\nOption B: Each $K_{3}$ has all vertices of degree $2$. Adding a single edge between one vertex in each copy increases the degrees of exactly those two vertices to $3$, while the other four vertices remain of degree $2$. Thus $\\delta(G)=2$. The added edge is the only connection between the two triangles, so removing it disconnects the graph. Therefore $\\lambda(G)=1$. Since $\\delta(G)\\neq 3$, B does not satisfy the condition.\n\nOption C: Each $K_{4}$ has all vertices of degree $3$. Adding a single edge between one vertex in each copy increases the degrees of those two vertices to $4$, while all other vertices remain of degree $3$. Hence $\\delta(G)=3$. That added edge is the only connection between the two $K_{4}$ components, so removing it disconnects the graph, giving $\\lambda(G)=1$. Thus C satisfies both $\\delta(G)=3$ and $\\lambda(G)=1$.\n\nOption D: In $K_{5}$ every vertex has degree $4$, so $\\delta(G)=4$. Moreover, $K_{5}$ is highly connected; in particular, removing a single edge does not disconnect it, and in fact its edge-connectivity equals $4$. Hence $\\lambda(G)\\neq 1$, and D does not satisfy the condition.\n\nOption E: Each $K_{4}$ has all vertices of degree $3$. Adding two edges between distinct vertices on each side raises the degrees of exactly two vertices in each $K_{4}$ to $4$, leaving the others at $3$, so $\\delta(G)=3$. Removing one of the two added edges leaves the other as a connection between the two $K_{4}$ components, so the graph remains connected; removing both added edges disconnects the graph into the two $K_{4}$ components. Therefore $\\lambda(G)=2\\neq 1$. Hence E does not satisfy the condition.\n\nThe only option with $\\delta(G)=3$ and $\\lambda(G)=1$ is C.", "answer": "$$\\boxed{C}$$", "id": "1516216"}, {"introduction": "Moving from conceptual understanding to practical calculation, this problem asks you to determine the exact edge-connectivity of a specific graph constructed from simpler components. A common and powerful technique for finding edge-connectivity is to establish a lower and an upper bound. This practice provides a perfect opportunity to apply that method: you will use the minimum degree to find an upper bound and then reason about the graph's structure to demonstrate that no smaller set of edges can disconnect it [@problem_id:1516212]. This process sharpens analytical skills essential for proofs in graph theory.", "problem": "Let $G_A$ and $G_B$ be two disjoint graphs, each isomorphic to a 4-cycle ($C_4$). Let the vertices of $G_A$ be labeled $a_1, a_2, a_3, a_4$ in cyclical order, such that its edges are $(a_1, a_2)$, $(a_2, a_3)$, $(a_3, a_4)$, and $(a_4, a_1)$. Similarly, let the vertices of $G_B$ be labeled $b_1, b_2, b_3, b_4$ in cyclical order, with corresponding edges. A new graph $G$ is constructed from the union of the vertices and edges of $G_A$ and $G_B$ by adding two new edges: one edge connecting vertex $a_1$ to vertex $b_1$, and another edge connecting vertex $a_3$ to vertex $b_3$.\n\nThe edge-connectivity of a connected graph, denoted $\\lambda(G)$, is defined as the minimum number of edges whose removal results in a disconnected graph.\n\nDetermine the edge-connectivity of the resulting graph $G$.", "solution": "Let $G$ be the graph described. The edge-connectivity $\\lambda(G)$ is the minimum size of an edge set whose removal disconnects $G$. By the general bound $\\lambda(G) \\leq \\delta(G)$, where $\\delta(G)$ is the minimum degree, we first compute $\\delta(G)$.\n\nIn $G_{A}$ and $G_{B}$, each vertex originally has degree $2$. The added edges connect $a_{1}$ to $b_{1}$ and $a_{3}$ to $b_{3}$, so the degrees become: $\\deg(a_{1})=\\deg(a_{3})=\\deg(b_{1})=\\deg(b_{3})=3$ and $\\deg(a_{2})=\\deg(a_{4})=\\deg(b_{2})=\\deg(b_{4})=2$. Thus $\\delta(G)=2$, and hence\n$$\n\\lambda(G) \\leq \\delta(G)=2.\n$$\n\nTo rule out $\\lambda(G)=1$, we use the criterion that an edge is a bridge if and only if it lies on no cycle. Every edge of $G$ lies on a cycle: all edges internal to $G_{A}$ and $G_{B}$ lie on their respective $C_{4}$ cycles, and each added edge also lies on a cycle. For example, the cycle $a_{1}-b_{1}-b_{2}-b_{3}-a_{3}-a_2-a_1$ contains the added edge $(a_1, b_1)$ and the cycle $a_{3}-b_{3}-b_{4}-b_{1}-a_{1}-a_4-a_3$ contains the added edge $(a_3, b_3)$. Therefore $G$ has no bridges, so no single edge removal disconnects $G$, and hence\n$$\n\\lambda(G) \\geq 2.\n$$\n\nFinally, removing the two added edges $(a_{1}, b_{1})$ and $(a_{3}, b_{3})$ disconnects $G$ into the two disjoint $C_{4}$ subgraphs $G_{A}$ and $G_{B}$. Therefore there exists a cut of size $2$, so $\\lambda(G) \\leq 2$. Combining with the lower bound gives\n$$\n\\lambda(G)=2.\n$$", "answer": "$$\\boxed{2}$$", "id": "1516212"}, {"introduction": "Edge-connectivity is a vital concept in the design of robust real-world networks, from communication systems to distributed computing. This final practice moves from pure analysis to a practical design scenario, where the goal is not just to measure but to improve a network's resilience [@problem_id:1516223]. You will model a system of server clusters as a graph, identify its deficiencies based on a target edge-connectivity of $k=4$, and determine the minimum number of new links required to meet this standard. This exercise showcases how the principles of k-edge-connectivity guide strategic decisions in network engineering.", "problem": "A company is designing a fault-tolerant distributed computing network. The network architecture consists of four primary server clusters, labeled $C_1, C_2, C_3,$ and $C_4$. The connections within each cluster are extremely dense and robust. For the purpose of this analysis, you can assume that the subgraph corresponding to any individual cluster $C_i$ is sufficiently connected such that it cannot be disconnected by the removal of fewer than 10 edges.\n\nThe clusters are interconnected by dedicated fiber optic links. The current network topology is as follows:\n- There is exactly 1 link connecting cluster $C_1$ and cluster $C_2$.\n- There are exactly 2 links connecting cluster $C_2$ and cluster $C_3$.\n- There is exactly 1 link connecting cluster $C_3$ and cluster $C_4$.\n- There are no other links connecting any two distinct clusters.\n\nThe resilience of the network is measured by its edge-connectivity, which is the minimum number of links that must fail to disconnect the network into two or more components. The engineering team's goal is to increase the network's overall edge-connectivity to a target value of $k=4$. To achieve this, they can add new, identical fiber optic links between any two distinct clusters. What is the absolute minimum number of new links that must be installed to meet this resilience requirement?", "solution": "The problem asks for the minimum number of edges (links) that must be added to a given graph to make it $4$-edge-connected.\n\nFirst, we model the network as a multigraph. Since the internal connectivity of each cluster (at least 10) is much greater than the target connectivity $k=4$, we can simplify the problem by contracting each cluster $C_i$ into a single super-vertex, which we will also label $C_i$. The links between clusters become the edges of this new, simplified graph, which we'll call the component graph $H$.\n\nThe component graph $H$ has four vertices, $\\{C_1, C_2, C_3, C_4\\}$. The edges and their multiplicities (weights) are given by the number of links:\n- An edge between $C_1$ and $C_2$ with weight $w(C_1, C_2) = 1$.\n- An edge between $C_2$ and $C_3$ with weight $w(C_2, C_3) = 2$.\n- An edge between $C_3$ and $C_4$ with weight $w(C_3, C_4) = 1$.\n\nSo, $H$ is a path graph on four vertices, with weighted edges. The edge-connectivity of the original network is equal to the minimum capacity of a cut in this weighted component graph $H$. A cut is a partition of the vertex set $V_H$ into two disjoint sets, $S$ and $V_H \\setminus S$. The capacity of a cut $(S, V_H \\setminus S)$ is the sum of weights of all edges with one endpoint in $S$ and the other in $V_H \\setminus S$.\n\nThe goal is to add new edges to $H$ with minimum total count, such that the capacity of every cut in the augmented graph is at least $k=4$.\n\nLet's identify the cuts in the current graph $H$ whose capacity is less than $k=4$. These are the \"deficient\" cuts.\n1.  Cut $S_1 = \\{C_1\\}$. The only edge crossing this cut is $(C_1, C_2)$. The capacity is $w(C_1, C_2) = 1$. This is less than 4. The deficiency is $4 - 1 = 3$.\n2.  Cut $S_2 = \\{C_1, C_2\\}$. The only edge crossing this cut is $(C_2, C_3)$. The capacity is $w(C_2, C_3) = 2$. This is less than 4. The deficiency is $4 - 2 = 2$.\n3.  Cut $S_3 = \\{C_1, C_2, C_3\\}$. The only edge crossing this cut is $(C_3, C_4)$. The capacity is $w(C_3, C_4) = 1$. This is less than 4. The deficiency is $4 - 1 = 3$.\nBy symmetry, the cut for $\\{C_4\\}$ is the same as for $S_3$, for $\\{C_3, C_4\\}$ is the same as for $S_2$, etc. Other cuts, like $\\{C_1, C_3\\}$, have a capacity of $w(C_1,C_2) + w(C_2,C_3) + w(C_3,C_4) = 1+2+1=4$, which is not deficient.\n\nA general procedure for solving this graph augmentation problem is to analyze the \"degree\" of each vertex in the component graph. For a vertex $v \\in V_H$, its degree, denoted $\\text{deg}_H(v)$, is the sum of weights of all edges incident to it. A vertex $v$ is considered \"deficient\" if $\\text{deg}_H(v)  k$.\n\nLet's calculate the degrees for each vertex in $H$ with respect to the target connectivity $k=4$:\n- $\\text{deg}_H(C_1) = w(C_1, C_2) = 1$. Since $1  4$, vertex $C_1$ is deficient. Its degree deficiency is $k - \\text{deg}_H(C_1) = 4 - 1 = 3$.\n- $\\text{deg}_H(C_2) = w(C_1, C_2) + w(C_2, C_3) = 1 + 2 = 3$. Since $3  4$, vertex $C_2$ is deficient. Its degree deficiency is $k - \\text{deg}_H(C_2) = 4 - 3 = 1$.\n- $\\text{deg}_H(C_3) = w(C_2, C_3) + w(C_3, C_4) = 2 + 1 = 3$. Since $3  4$, vertex $C_3$ is deficient. Its degree deficiency is $k - \\text{deg}_H(C_3) = 4 - 3 = 1$.\n- $\\text{deg}_H(C_4) = w(C_3, C_4) = 1$. Since $1  4$, vertex $C_4$ is deficient. Its degree deficiency is $k - \\text{deg}_H(C_4) = 4 - 1 = 3$.\n\nThe total degree deficiency, $D$, is the sum of the individual vertex deficiencies:\n$D = (4-1) + (4-3) + (4-3) + (4-1) = 3 + 1 + 1 + 3 = 8$.\n\nEach new edge we add can increase the degree of two vertices by one each. Therefore, each new edge can reduce the total degree deficiency $D$ by at most 2. To satisfy the total deficiency of $D=8$, we will need at least $\\lceil D/2 \\rceil$ new edges.\nMinimum edges needed $\\ge \\lceil 8 / 2 \\rceil = 4$.\n\nThis formula gives a lower bound. We must also ensure that adding these edges satisfies all cut deficiencies, not just the vertex degree deficiencies. The number of edges to add is given by $\\max(\\lceil D/2 \\rceil, \\gamma_{max})$, where $\\gamma_{max}$ is the maximum deficiency of any single cut.\nFrom our earlier analysis:\n- Deficiency of cut $S_1$ is 3.\n- Deficiency of cut $S_2$ is 2.\n- Deficiency of cut $S_3$ is 3.\nThe maximum cut deficiency is $\\gamma_{max} = 3$.\n\nThe minimum number of new links required is $\\max(\\lceil 8/2 \\rceil, 3) = \\max(4, 3) = 4$.\nThus, a minimum of 4 new links are required.\n\nTo confirm this is sufficient, we can propose a placement for the 4 links. A good strategy is to connect the most deficient vertices. $C_1$ and $C_4$ have deficiency 3. $C_2$ and $C_3$ have deficiency 1. Let's add links to address these deficiencies.\n- Add 3 links between $C_1$ and $C_4$.\n- Add 1 link between $C_2$ and $C_3$.\n\nLet's check the new state:\n- New weights: $w'(C_1,C_2)=1$, $w'(C_2,C_3)=2+1=3$, $w'(C_3,C_4)=1$.\n- New edges: 3 links between $C_1$ and $C_4$.\nLet's check the cut capacities:\n- Cut $S_1=\\{C_1\\}$: Capacity is $w'(C_1, C_2)$ + (new links from $C_1$ to $C_4$) = $1 + 3 = 4$. OK.\n- Cut $S_2=\\{C_1, C_2\\}$: Capacity is $w'(C_2, C_3)$ + (new links from $C_1$ to $C_4$) = $3 + 3 = 6$. OK.\n- The cut isolating $C_4$ has capacity $w'(C_3, C_4)$ + (new links from $C_1$ to $C_4$) = $1 + 3 = 4$. OK.\nThis construction shows that 4 edges are sufficient. Since our lower bound analysis showed that at least 4 edges are necessary, the minimum number is exactly 4.", "answer": "$$\\boxed{4}$$", "id": "1516223"}]}