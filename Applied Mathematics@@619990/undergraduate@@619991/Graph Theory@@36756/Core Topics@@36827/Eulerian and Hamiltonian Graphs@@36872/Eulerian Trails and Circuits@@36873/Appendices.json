{"hands_on_practices": [{"introduction": "The most fundamental test of understanding a new theorem is to apply it to a basic, well-structured object. This first practice exercise asks you to do just that by considering the family of complete graphs, $K_n$. By applying the core degree-based condition for the existence of an Eulerian circuit, you will discover a simple and elegant rule that governs these highly interconnected structures, as illustrated by a hypothetical drone swarm diagnostic test [@problem_id:1502252].", "problem": "A robotics company is designing a sophisticated drone swarm for synchronized public displays. The swarm consists of $n$ drones, where $n \\ge 3$, holding fixed positions in the air. For a full system diagnostic, a special \"inspector\" drone must perform a continuous flight test.\n\nThe test protocol is as follows: The inspector drone starts at the location of one of the swarm drones. It must then travel along the straight-line segment connecting every distinct pair of swarm drones exactly once. The flight path must be continuous, meaning the end of one segment traversal is the start of the next. Finally, after traversing all such segments, the inspector drone must end its flight at the exact same drone from which it started.\n\nThe designers need to determine for which swarm sizes, represented by the integer $n$, such a diagnostic flight path is theoretically possible. Which of the following conditions on $n$ correctly describes all possible swarm sizes for which the inspector drone's path can be designed?\n\nA. $n$ can be any integer greater than or equal to 3.\nB. $n$ must be an even integer greater than or equal to 4.\nC. $n$ must be an odd integer greater than or equal to 3.\nD. $n$ must be a prime number greater than or equal to 3.\nE. $n$ must be an integer that is not a prime number.", "solution": "Interpret the $n$ drones as the vertex set of the complete graph $K_{n}$, where each straight-line segment connecting a distinct pair of drones corresponds to an edge of $K_{n}$. The inspector drone must traverse each such segment exactly once in a continuous manner, and start and end at the same drone. This is precisely the requirement for an Eulerian circuit in $K_{n}$.\n\nBy Euler's theorem for finite undirected graphs: a connected graph has an Eulerian circuit if and only if every vertex has even degree. The complete graph $K_{n}$ is connected for all $n \\ge 2$, and every vertex has degree\n$$\n\\deg(v)=n-1.\n$$\nThus every vertex has even degree if and only if $n-1$ is even, i.e.,\n$$\nn \\text{ is odd}.\n$$\nThe problem specifies $n \\ge 3$, so the condition becomes: $n$ is an odd integer with $n \\ge 3$.\n\nFor even $n$, all $n$ vertices have odd degree $n-1$, so no Eulerian circuit exists, and the required continuous traversal covering each edge exactly once and returning to the start is impossible.\n\nTherefore, the correct condition on $n$ is that $n$ must be an odd integer greater than or equal to $3$, which corresponds to option C.", "answer": "$$\\boxed{C}$$", "id": "1502252"}, {"introduction": "Having mastered the condition for a closed Eulerian circuit, we now broaden our scope to include Eulerian trails, which traverse every edge but may start and end at different vertices. This requires a more nuanced condition involving zero or two vertices of odd degree. This problem challenges you to apply this expanded rule to complete bipartite graphs, $K_{m,n}$, a structure that models relationships between two distinct groups, forcing a careful analysis of the vertex degrees in each partition [@problem_id:1502290].", "problem": "In graph theory, a complete bipartite graph, denoted as $K_{m,n}$ where $m$ and $n$ are positive integers, is a graph whose vertices can be divided into two disjoint and independent sets, $U$ and $V$, such that $|U|=m$ and $|V|=n$. Every vertex in set $U$ is connected to every vertex in set $V$, but there are no edges connecting any two vertices within the same set.\n\nAn Eulerian trail (or Eulerian path) in a graph is a trail that visits every edge exactly once.\n\nConsider the complete bipartite graph $K_{m,n}$ for positive integers $m$ and $n$. Which of the following statements correctly and completely describes the conditions on $m$ and $n$ for $K_{m,n}$ to have an Eulerian trail?\n\nA. Both $m$ and $n$ are even, or $m=n=1$, or one of them is 2 while the other is an odd integer.\nB. Both $m$ and $n$ must be even.\nC. At least one of $m$ or $n$ must be even.\nD. The sum $m+n$ must be an even number.\nE. The product $mn$ must be even, or $m=n=1$.\nF. $K_{m,n}$ has an Eulerian trail for all positive integers $m$ and $n$.", "solution": "We use the Euler trail criterion: a connected graph has an Eulerian trail if and only if it has exactly zero or exactly two vertices of odd degree. For $K_{m,n}$ with $m,n \\geq 1$, the graph is connected, so the condition reduces to counting odd-degree vertices.\n\nIn $K_{m,n}$, each vertex in $U$ has degree $n$ and each vertex in $V$ has degree $m$. Therefore:\n- If $m$ and $n$ are both even, then all degrees are even, so there are $0$ odd-degree vertices, and an Eulerian trail (in fact, an Eulerian circuit) exists.\n- If $m$ is odd and $n$ is even, then all $n$ vertices in $V$ have odd degree $m$, while all $m$ vertices in $U$ have even degree $n$. The number of odd-degree vertices is $n$, so an Eulerian trail exists if and only if $n=2$.\n- If $m$ is even and $n$ is odd, then all $m$ vertices in $U$ have odd degree $n$, while all $n$ vertices in $V$ have even degree $m$. The number of odd-degree vertices is $m$, so an Eulerian trail exists if and only if $m=2$.\n- If $m$ and $n$ are both odd, then every vertex has odd degree, so the number of odd-degree vertices is $m+n$. An Eulerian trail exists if and only if $m+n=2$, which forces $m=n=1$.\n\nCollecting the valid cases, $K_{m,n}$ has an Eulerian trail exactly when:\n- both $m$ and $n$ are even, or\n- $m=n=1$, or\n- one of $m,n$ equals $2$ and the other is odd.\n\nThis matches option A and no other option.", "answer": "$$\\boxed{A}$$", "id": "1502290"}, {"introduction": "It is crucial to distinguish an Eulerian circuit, which visits every *edge* once, from a Hamiltonian cycle, which visits every *vertex* once. Though their definitions seem similar, their underlying conditions are vastly different. This practice problem presents a scenario [@problem_id:1502266] that requires you to find a network where one type of tour is possible but the other is not, highlighting that the existence of an Eulerian circuit is purely a local degree property, whereas Hamiltonicity depends on more complex global properties like connectivity.", "problem": "A technology company is designing a network of research facilities. For operational and security reasons, they must consider two specific types of tours a person could take through the network. The facilities are considered vertices and the direct fiber-optic links between them are edges in a graph. The network must be connected.\n\nThe two tour types are:\n1.  **The Maintenance Route:** A technician must traverse every single fiber-optic link in the network exactly once, beginning and ending at the same facility.\n2.  **The Security Audit:** A courier must visit every single facility exactly once, beginning and ending at the same facility.\n\nThe company wants to select a network design where the Maintenance Route is possible, but the Security Audit is impossible. Which of the following network layouts satisfies this requirement?\n\nA. Five facilities, labeled F1, F2, F3, F4, F5, are arranged in a large ring. F1 is linked to F2 and F5; F2 is linked to F1 and F3; F3 is linked to F2 and F4; F4 is linked to F3 and F5; and F5 is linked to F4 and F1.\n\nB. Four facilities, labeled F1, F2, F3, F4, are set up such that every facility is linked directly to every other facility.\n\nC. Five facilities, labeled F1, F2, F3, F4, F5, are connected as follows: there is a triangular cluster of links between F1, F2, and F3 (i.e., F1 is linked to F2 and F3, F2 is linked to F1 and F3, and F3 is linked to F1 and F2). Similarly, there is a triangular cluster of links between F3, F4, and F5. There are no other links in the network.\n\nD. Five facilities, labeled F1, F2, F3, F4, F5, are arranged in a straight line. F1 is linked only to F2; F2 is linked only to F1 and F3; F3 is linked only to F2 and F4; F4 is linked only to F3 and F5; and F5 is linked only to F4.", "solution": "We formalize the two tour types using graph theory. The Maintenance Route is an Eulerian circuit: a closed trail that traverses every edge exactly once. In a connected undirected graph, an Eulerian circuit exists if and only if every vertex has even degree. The Security Audit is a Hamiltonian cycle: a cycle that visits every vertex exactly once. A necessary condition for a Hamiltonian cycle is that the graph is $2$-vertex-connected; in particular, removing any single vertex must leave the graph connected, because removing one vertex from a Hamiltonian cycle leaves a spanning path, which is connected.\n\nAnalyze each option:\n\nOption A (cycle $C_{5}$):\n- Degrees: each facility has degree $2$, so all degrees are even. The graph is connected, hence an Eulerian circuit exists.\n- The cycle itself is a Hamiltonian cycle visiting all $5$ vertices exactly once and returning to the start, so the Security Audit is possible.\n- This does not satisfy the requirement.\n\nOption B (complete graph $K_{4}$):\n- Degrees: each facility has degree $3$ (odd). Since not all degrees are even, no Eulerian circuit exists.\n- Maintenance Route is impossible, so this does not satisfy the requirement.\n\nOption C (two triangles sharing a single vertex $F3$):\n- Degrees:\n$$\n\\deg(F3)=4,\\quad \\deg(F1)=\\deg(F2)=\\deg(F4)=\\deg(F5)=2.\n$$\nAll degrees are even and the graph is connected, so an Eulerian circuit exists.\n- The vertex $F3$ is an articulation point: removing $F3$ disconnects the graph into two components $\\{F1,F2\\}$ and $\\{F4,F5\\}$. A Hamiltonian cycle would imply that removing any single vertex leaves the graph connected (since the cycle minus one vertex is a connected spanning path). This necessary condition is violated, so there is no Hamiltonian cycle. Hence the Security Audit is impossible.\n- This satisfies the requirement.\n\nOption D (path $P_{5}$):\n- Degrees: the endpoints have degree $1$ (odd), the internal vertices have degree $2$. Since not all degrees are even, no Eulerian circuit exists.\n- Maintenance Route is impossible, so this does not satisfy the requirement.\n\nTherefore, the only network layout that allows an Eulerian circuit while forbidding a Hamiltonian cycle is Option C.", "answer": "$$\\boxed{C}$$", "id": "1502266"}]}