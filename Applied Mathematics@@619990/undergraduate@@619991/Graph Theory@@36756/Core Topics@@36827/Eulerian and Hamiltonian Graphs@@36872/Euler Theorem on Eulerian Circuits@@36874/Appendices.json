{"hands_on_practices": [{"introduction": "This first exercise provides a direct application of Euler's theorem on Eulerian circuits. Your task is to analyze a network based on a few key properties—its connectivity and the degree of its vertices—to determine if a complete tour is possible. This practice is fundamental for internalizing the theorem's core conditions: a connected graph possesses an Eulerian circuit if and only if every vertex has an even degree [@problem_id:1502078].", "problem": "A city's parks and recreation department is designing a new network of bicycle paths to connect five major landmarks. The paths are designed such that they only intersect at these landmarks. A key goal for the department is to create a \"grand tour\" route for a promotional cycling event. This tour must start at one of the landmarks, travel along every single bike path exactly once, and end at the same landmark from which it started.\n\nThe design specifies that the entire network of paths is connected, meaning it is possible to travel from any landmark to any other. A survey of the proposed network provides the number of paths that meet at each of the five landmarks. This collection of numbers, known as the degree sequence, is {2, 2, 4, 4, 4}.\n\nBased only on this information, is the existence of such a \"grand tour\" guaranteed? Analyze the following statements and select the most accurate conclusion.\n\nA. Yes, because every landmark has an even number of paths connected to it.\n\nB. No, because it is impossible to determine the tour's existence without knowing the specific layout of the paths between landmarks.\n\nC. No, because the total number of paths in the network is odd.\n\nD. Yes, because the network is connected and contains at least four landmarks.\n\nE. It cannot be determined, because the given conditions are necessary but not sufficient for the existence of such a tour.", "solution": "The problem asks whether a tour that traverses every edge exactly once and returns to the starting vertex is guaranteed to exist in a given graph. This type of tour is formally known as an Eulerian circuit.\n\nWe can model the scenario using graph theory. The landmarks represent the vertices of a graph, and the bicycle paths represent the edges. The problem provides the following information:\n1.  The graph is connected.\n2.  The graph has 5 vertices.\n3.  The degrees of the vertices are given by the set {2, 2, 4, 4, 4}. A vertex's degree is the number of edges connected to it, which corresponds to the number of paths meeting at a landmark.\n\nEuler's theorem provides a definitive criterion for the existence of an Eulerian circuit. The theorem states: A connected graph has an Eulerian circuit if and only if every vertex in the graph has an even degree.\n\nLet's apply this theorem to the given problem.\n\nFirst, we check the connectivity condition. The problem explicitly states that the \"network of paths is connected.\" This condition is met.\n\nSecond, we check the degree condition. The degrees of the five vertices (landmarks) are given as {2, 2, 4, 4, 4}. Each number in this set (2 and 4) is an even integer. Therefore, every vertex in the graph has an even degree.\n\nSince both conditions of Euler's theorem are satisfied (the graph is connected, and all its vertices have even degrees), the existence of an Eulerian circuit is guaranteed.\n\nNow, let's evaluate the given options:\n\nA. Yes, because every landmark has an even number of paths connected to it.\nThis statement correctly identifies that all vertices have even degrees, which, for a connected graph, is the sufficient condition for the existence of an Eulerian circuit. This is the correct conclusion.\n\nB. No, because it is impossible to determine the tour's existence without knowing the specific layout of the paths between landmarks.\nThis is incorrect. Euler's theorem demonstrates that the existence of an Eulerian circuit depends only on the connectivity of the graph and the degrees of its vertices, not on the specific arrangement of edges (i.e., the graph's specific isomorphism class).\n\nC. No, because the total number of paths in the network is odd.\nTo check this, we use the handshaking lemma, which states that the sum of the degrees of the vertices is equal to twice the number of edges.\nSum of degrees = $2 + 2 + 4 + 4 + 4 = 16$.\nNumber of edges (paths) = (Sum of degrees) / 2 = $16 / 2 = 8$.\nThe total number of paths is 8, which is an even number. Thus, the premise of this option is false.\n\nD. Yes, because the network is connected and contains at least four landmarks.\nWhile it is true that the network is connected, the number of vertices (as long as it's greater than 0) is not the determining factor for the existence of an Eulerian circuit. The crucial part is the degree of each vertex. Therefore, this reasoning is incorrect.\n\nE. It cannot be determined, because the given conditions are necessary but not sufficient for the existence of such a tour.\nThis is incorrect. For a connected graph, the condition that all vertices have even degrees is both necessary and sufficient for the existence of an Eulerian circuit.\n\nBased on the analysis, option A provides the correct conclusion and reasoning.", "answer": "$$\\boxed{A}$$", "id": "1502078"}, {"introduction": "Moving from analysis to synthesis, this next problem challenges you to think like a network designer. Instead of checking a given graph, you must select a valid blueprint from several proposals that guarantees an Eulerian path. This exercise requires you to use both Euler's theorem and the handshaking lemma, which states that the sum of degrees $\\sum \\deg(v)$ is equal to twice the number of edges $2|E|$, as practical design constraints [@problem_id:1502045].", "problem": "The public works department of a city is planning a route for a new autonomous street-sweeping machine. The city's road network consists of 6 key intersections and 8 streets connecting them. The vehicle must start at a designated main depot (which is one of the intersections), travel along every street exactly once in its entirety, and finally return to the same depot.\n\nThe design team has proposed several possible layouts for the street network. Each layout is described by its \"degree sequence,\" which is a list of the number of streets connected to each of the 6 intersections. For a layout to be viable, it must be possible to represent it as a simple, connected graph. A simple graph is one with no loops (a street connecting an intersection to itself) and no multiple edges between the same two intersections. A connected graph is one where it is possible to get from any intersection to any other intersection.\n\nWhich of the following proposed degree sequences corresponds to a street network layout that allows for the street-sweeper's required route?\n\nA. (1, 3, 3, 3, 3, 3)\n\nB. (2, 2, 4, 4, 4, 4)\n\nC. (4, 4, 4, 2, 2, 0)\n\nD. (4, 4, 2, 2, 2, 2)\n\nE. (2, 3, 3, 3, 3, 2)", "solution": "We model the street network as a simple, connected, undirected graph with $n=6$ vertices (intersections) and $m=8$ edges (streets). The required route is an Eulerian circuit: a closed walk that traverses each edge exactly once. For an undirected graph, the necessary and sufficient conditions for the existence of an Eulerian circuit are:\n- The graph is connected (when restricted to vertices of nonzero degree).\n- Every vertex has even degree.\n\nBy the handshaking lemma, the sum of degrees equals twice the number of edges:\n$$\n\\sum_{i=1}^{6} d_{i} = 2m = 16.\n$$\nAny viable degree sequence must therefore sum to $16$, must be realizable by a simple connected graph, and for the Eulerian circuit must have all degrees even with no isolated vertices.\n\nCheck each option:\n\nA. $(1,3,3,3,3,3)$:\n$$\n\\sum d_{i} = 1 + 5\\cdot 3 = 16,\n$$\nbut there are six odd degrees. An Eulerian circuit requires all degrees even. Hence invalid.\n\nB. $(2,2,4,4,4,4)$:\n$$\n\\sum d_{i} = 2+2+4+4+4+4 = 20 \\neq 16.\n$$\nThis contradicts $2m=16$ for $m=8$, so it cannot represent the given network. Hence invalid.\n\nC. $(4,4,4,2,2,0)$:\n$$\n\\sum d_{i} = 4+4+4+2+2+0 = 16,\n$$\nbut one vertex has degree $0$, which makes the graph disconnected. An Eulerian circuit requires the graph to be connected and have no isolated vertices. Hence invalid.\n\nD. $(4,4,2,2,2,2)$:\n$$\n\\sum d_{i} = 4+4+2+2+2+2 = 16,\n$$\nall degrees are even and positive. This satisfies the Eulerian degree condition. To show realizability as a simple, connected graph, consider the complete bipartite graph $K_{2,4}$: connect each of the two degree-$4$ vertices to all four degree-$2$ vertices. In $K_{2,4}$, the two vertices on the size-$2$ part have degree $4$, and the four vertices on the size-$4$ part have degree $2$, giving exactly this degree sequence. $K_{2,4}$ is simple, connected, and has\n$$\nm = 2 \\times 4 = 8\n$$\nedges, matching the requirement. Since all degrees are even and the graph is connected, an Eulerian circuit exists. Hence valid.\n\nE. $(2,3,3,3,3,2)$:\n$$\n\\sum d_{i} = 2+2 + 4\\cdot 3 = 16,\n$$\nbut there are four vertices of odd degree. An Eulerian circuit requires zero odd-degree vertices. Hence invalid.\n\nTherefore, the only proposed degree sequence that corresponds to a simple, connected graph on $6$ vertices and $8$ edges that admits an Eulerian circuit is option D.", "answer": "$$\\boxed{D}$$", "id": "1502045"}, {"introduction": "This final practice moves beyond the theoretical guarantee of an Eulerian circuit to the practical challenge of actually finding one. You will test a proposed navigation heuristic, which seems intuitive but contains a subtle flaw, against a specific graph layout. This advanced exercise highlights a crucial concept in computer science and network routing: the existence of a path does not mean that any simple, greedy algorithm is capable of finding it [@problem_id:1502047].", "problem": "An engineering team is developing a simple algorithm for a small, autonomous robot designed to paint lines along the pathways of a park. The park's layout can be modeled as a simple, connected, planar graph where all vertices have an even degree, guaranteeing the existence of an Eulerian circuit. The team proposes a \"Counter-Clockwise (CCW) Heuristic\" to navigate the graph.\n\nThe heuristic is defined as follows:\n1.  The graph $G=(V, E)$ is provided with a fixed planar embedding, specified by the Cartesian coordinates $(x,y)$ of each vertex. This embedding defines a fixed cyclic CCW order of edges around each vertex, determined by the angle of the vector from the vertex to its neighbor.\n2.  The robot starts at a specified vertex $S$ and traverses a specified initial edge $(S, T)$.\n3.  Upon arriving at any vertex $v$ (initially $T$) from a neighbor $u$, the robot identifies the arrival edge as $(u, v)$. It then consults the fixed CCW list of edges incident to $v$. It selects the first untraversed edge $(v, w)$ that appears in the CCW sequence immediately following the edge $(v, u)$.\n4.  The robot traverses the selected edge $(v, w)$, and this process repeats.\n5.  The heuristic is considered to have **failed** if the robot reaches a vertex where there are no available untraversed egress edges, but other edges in the graph have not yet been traversed. It is successful if it completes an Eulerian circuit, traversing every edge exactly once before returning to the start.\n\nYou are tasked with evaluating this heuristic. For which of the following graph setups does the CCW Heuristic fail?\n\nA. **Graph 1**:\n    - Vertices $V_1 = \\{1, 2, 3, 4, 5, 6\\}$.\n    - Edges $E_1 = \\{(1,2), (1,3), (1,4), (1,6), (2,3), (4,5), (5,6)\\}$.\n    - Coordinates: $v_1=(0,0), v_2=(2,1), v_3=(2,-1), v_4=(-1,2), v_5=(-3,2), v_6=(-3,-1)$.\n    - Starting Condition: Start at vertex 3, traverse the edge $(3,1)$.\n\nB. **Graph 2**:\n    - Vertices $V_2 = \\{1, 2, 3, 4, 5, 6, 7\\}$.\n    - Edges $E_2 = \\{(1,2), (1,4), (1,5), (1,7), (2,3), (3,4), (5,6), (6,7)\\}$.\n    - Coordinates: $v_1=(0,0), v_2=(1,1), v_3=(2,0), v_4=(1,-1), v_5=(-1,1), v_6=(-2,0), v_7=(-1,-1)$.\n    - Starting Condition: Start at vertex 1, traverse the edge $(1,2)$.\n\nC. **Graph 3**:\n    - Vertices $V_3 = \\{1, 2, 3, 4, 5, 6, 7\\}$.\n    - Edges $E_3 = \\{(1,2), (1,3), (1,4), (1,5), (2,6), (3,6), (4,7), (5,7)\\}$.\n    - Coordinates: $v_1=(0,0), v_2=(0,2), v_3=(2,0), v_4=(0,-2), v_5=(-2,0), v_6=(1,1), v_7=(-1,-1)$.\n    - Starting Condition: Start at vertex 1, traverse the edge $(1,3)$.\n\nD. **Graph 4**:\n    - Vertices $V_4 = \\{1, 2, 3, 4, 5, 6\\}$.\n    - Edges $E_4 = \\{(1,2), (2,3), (3,4), (4,5), (5,6), (6,1)\\}$.\n    - Coordinates: Vertices are on a unit circle, $v_k = (\\cos(\\frac{\\pi (k-1)}{3}), \\sin(\\frac{\\pi (k-1)}{3}))$ for $k=1, \\dots, 6$.\n    - Starting Condition: Start at vertex 1, traverse the edge $(1,2)$.", "solution": "We evaluate the CCW Heuristic by fixing, at each vertex, the CCW cyclic order of incident edges from the given embedding (angles of vectors from the vertex to its neighbors), then simulating the traversal starting from the specified edge and always taking, upon arrival at a vertex, the first untraversed edge that follows the arrival edge in that CCW list. The heuristic fails if it gets stuck at a vertex with no available untraversed egress edge while some other edge(s) in the graph remain untraversed.\n\nGraph 1.\nVertices: $v_{1}=(0,0)$, $v_{2}=(2,1)$, $v_{3}=(2,-1)$, $v_{4}=(-1,2)$, $v_{5}=(-3,2)$, $v_{6}=(-3,-1)$.\nIncident-angle orders (using exact quadrant-adjusted angles):\n- At $v_{1}$: to $v_{2}$ angle $\\arctan(1/2)$, to $v_{3}$ angle $-\\arctan(1/2)$, to $v_{4}$ angle $\\pi-\\arctan(2)$, to $v_{6}$ angle $-\\pi+\\arctan(1/3)$. Increasing gives CCW order $[6,3,2,4]$.\n- At $v_{2}$: to $v_{1}$ angle $-\\pi+\\arctan(1/2)$, to $v_{3}$ angle $-\\pi/2$. CCW order $[1,3]$.\n- At $v_{3}$: to $v_{2}$ angle $\\pi/2$, to $v_{1}$ angle $\\pi-\\arctan(1/2)$. CCW order $[2,1]$.\n- At $v_{4}$: to $v_{1}$ angle $-\\arctan(2)$, to $v_{5}$ angle $\\pi$. CCW order $[1,5]$.\n- At $v_{5}$: to $v_{6}$ angle $-\\pi/2$, to $v_{4}$ angle $0$. CCW order $[6,4]$.\n- At $v_{6}$: to $v_{1}$ angle $\\arctan(1/3)$, to $v_{5}$ angle $\\pi/2$. CCW order $[1,5]$.\nSimulate from $(3,1)$:\n- Arrive at $1$ from $3$. At $1$, after $3$ in $[6,3,2,4]$ the first untraversed is $2$: traverse $(1,2)$.\n- Arrive at $2$ from $1$. At $2$, after $1$ in $[1,3]$ take $(2,3)$.\n- Arrive at $3$ from $2$. At $3$, after $2$ in $[2,1]$ the next is $(3,1)$, but $(1,3)$ is already traversed; there is no other edge at $3$. Untraversed edges remain elsewhere, so the heuristic fails here.\nConclusion: Graph 1 fails.\n\nGraph 2.\nVertices: $v_{1}=(0,0)$, $v_{2}=(1,1)$, $v_{3}=(2,0)$, $v_{4}=(1,-1)$, $v_{5}=(-1,1)$, $v_{6}=(-2,0)$, $v_{7}=(-1,-1)$.\nCCW orders by simple angles: at $v_{1}$ neighbor angles are $-\\frac{3\\pi}{4}$ to $7$, $-\\frac{\\pi}{4}$ to $4$, $\\frac{\\pi}{4}$ to $2$, $\\frac{3\\pi}{4}$ to $5$, so $[7,4,2,5]$. At $v_{2}$: $[1,3]$. At $v_{3}$: $[4,2]$. At $v_{4}$: $[3,1]$. At $v_{5}$: $[6,1]$. At $v_{6}$: $[7,5]$. At $v_{7}$: $[1,6]$.\nSimulate from $(1,2)$:\n$(1,2)\\to(2,3)\\to(3,4)\\to(4,1)\\to(1,5)\\to(5,6)\\to(6,7)\\to(7,1)$.\nUpon return to $1$, all edges are traversed exactly once and no failure occurs.\nConclusion: Graph 2 succeeds.\n\nGraph 3.\nVertices: $v_{1}=(0,0)$, $v_{2}=(0,2)$, $v_{3}=(2,0)$, $v_{4}=(0,-2)$, $v_{5}=(-2,0)$, $v_{6}=(1,1)$, $v_{7}=(-1,-1)$.\nCCW orders: at $v_{1}$ angles $-\\frac{\\pi}{2}$ to $4$, $0$ to $3$, $\\frac{\\pi}{2}$ to $2$, $\\pi$ to $5$, hence $[4,3,2,5]$. At $v_{2}$: $[1,6]$. At $v_{3}$: $[6,1]$. At $v_{4}$: $[1,7]$. At $v_{5}$: $[7,1]$. At $v_{6}$: $[3,2]$. At $v_{7}$: $[4,5]$.\nSimulate from $(1,3)$:\n$(1,3)\\to(3,6)\\to(6,2)\\to(2,1)\\to(1,5)\\to(5,7)\\to(7,4)\\to(4,1)$.\nUpon return to $1$, all edges are traversed exactly once and no failure occurs.\nConclusion: Graph 3 succeeds.\n\nGraph 4.\nVertices $v_{k}=(\\cos(\\frac{\\pi(k-1)}{3}),\\sin(\\frac{\\pi(k-1)}{3}))$ on the unit circle, edges form the $6$-cycle. Each vertex has exactly two incident edges; the CCW order at each vertex is the local order of its two neighbors on the convex polygon. Simulate from $(1,2)$:\n$(1,2)\\to(2,3)\\to(3,4)\\to(4,5)\\to(5,6)\\to(6,1)$.\nUpon return to $1$, all edges are traversed exactly once and no failure occurs.\nConclusion: Graph 4 succeeds.\n\nTherefore, the CCW Heuristic fails only for Graph 1.", "answer": "$$\\boxed{A}$$", "id": "1502047"}]}