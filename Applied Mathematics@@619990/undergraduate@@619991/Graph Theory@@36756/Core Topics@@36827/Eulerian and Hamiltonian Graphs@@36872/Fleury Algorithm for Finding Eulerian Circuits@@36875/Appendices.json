{"hands_on_practices": [{"introduction": "This first practice is your entry point into the mechanics of Fleury's algorithm. By tracing the initial steps of a tour on a given Eulerian graph, you will directly engage with the algorithm's core rule: identifying and avoiding bridges. This fundamental exercise [@problem_id:1504352] builds the foundational skill of step-by-step graph traversal and decision-making.", "problem": "Consider an undirected graph $G$ defined by a vertex set $V = \\{A, B, C, D, E, F, G\\}$ and an edge set $E = \\{(A,B), (A,C), (B,C), (B,D), (B,E), (C,D), (C,E), (D,F), (D,G), (F,G)\\}$. This graph is known to be Eulerian, meaning it contains a path that visits every edge exactly once and ends at the starting vertex.\n\nOne algorithm for finding such a path is Fleury's algorithm. The algorithm proceeds as follows:\n1.  Start at a specified vertex.\n2.  From the current vertex, traverse any available edge. Once an edge is traversed, it is considered \"removed\" from the graph for all subsequent steps.\n3.  A crucial constraint applies: never traverse an edge that is a *bridge* of the remaining graph unless there is no other choice. A bridge is an edge whose removal would disconnect the graph into more components than it had before.\n4.  If multiple edges can be chosen at any step (i.e., there are multiple non-bridge edges, or all available edges are bridges), break the tie by choosing the edge that leads to the vertex that comes first in alphabetical order.\n\nYour task is to trace the first three edge traversals of Fleury's algorithm on graph $G$, starting from vertex $A$. Which of the following sequences represents the first four vertices visited?\n\nA. A, B, C, A\n\nB. A, C, B, D\n\nC. A, B, C, E\n\nD. A, B, C, D\n\nE. A, B, D, F", "solution": "We are asked to apply Fleury's algorithm to the graph $G=(V, E)$ starting from vertex $A$. The vertex set is $V = \\{A, B, C, D, E, F, G\\}$ and the edge set is $E = \\{(A,B), (A,C), (B,C), (B,D), (B,E), (C,D), (C,E), (D,F), (D,G), (F,G)\\}$. We need to find the sequence of the first four vertices visited.\n\n**Step 0: Initial State**\nThe current vertex is $A$. The path is $(A)$. The graph is $G_0 = G$.\n\n**Step 1: First Edge Traversal**\nWe are at vertex $A$. The available edges are $(A,B)$ and $(A,C)$. We must check if either is a bridge of the current graph $G_0$.\n\n*   **Consider edge $(A,B)$**: If we remove $(A,B)$ from $G_0$, is the graph disconnected? The vertices $A$ and $B$ are still connected via the path $A-C-B$. So, $(A,B)$ is not a bridge.\n*   **Consider edge $(A,C)$**: If we remove $(A,C)$ from $G_0$, the vertices $A$ and $C$ are still connected via the path $A-B-C$. So, $(A,C)$ is not a bridge.\n\nSince both choices, $(A,B)$ and $(A,C)$, are non-bridge edges, we use the tie-breaking rule. We must choose the edge leading to the vertex that comes first alphabetically. Comparing $B$ and $C$, $B$ comes first. Therefore, we traverse the edge $(A,B)$.\n\nThe new path is $(A, B)$. The new graph, $G_1$, is $G_0$ with edge $(A,B)$ removed. Our current vertex is $B$.\n\n**Step 2: Second Edge Traversal**\nWe are at vertex $B$. The remaining edges incident to $B$ are $(B,C)$, $(B,D)$, and $(B,E)$. We must check if any of these are bridges in the current graph $G_1$.\n\n*   **Consider edge $(B,C)$**: In $G_1$, if we remove $(B,C)$, are $B$ and $C$ disconnected? No, they are still connected by the path $B-E-C$ (and also $B-D-C$). So, $(B,C)$ is not a bridge of $G_1$.\n*   **Consider edge $(B,D)$**: In $G_1$, if we remove $(B,D)$, are $B$ and $D$ disconnected? No, they are still connected by the path $B-C-D$. So, $(B,D)$ is not a bridge of $G_1$.\n*   **Consider edge $(B,E)$**: In $G_1$, if we remove $(B,E)$, are $B$ and $E$ disconnected? No, they are still connected by the path $B-C-E$. So, $(B,E)$ is not a bridge of $G_1$.\n\nAll three choices are non-bridge edges. We apply the alphabetical tie-breaking rule to the destination vertices: $C, D, E$. $C$ comes first. We traverse the edge $(B,C)$.\n\nThe new path is $(A, B, C)$. The new graph, $G_2$, is $G_1$ with edge $(B,C)$ removed. Our current vertex is $C$.\n\n**Step 3: Third Edge Traversal**\nWe are at vertex $C$. The remaining edges incident to $C$ in $G_2$ are $(C,A)$, $(C,D)$, and $(C,E)$. Note that edges $(A,B)$ and $(B,C)$ are removed.\n\n*   **Consider edge $(C,A)$**: In $G_2$, if we remove $(C,A)$, is the graph disconnected? The only edge remaining from vertex $A$ is $(A,C)$ itself. Removing it will isolate vertex $A$ from the rest of the graph (which contains vertices B, C, D, E, F, G, all still connected). Therefore, $(C,A)$ is a bridge of $G_2$. According to Fleury's algorithm, we must not choose a bridge unless there is no other option.\n*   **Consider edge $(C,D)$**: In $G_2$, if we remove $(C,D)$, are $C$ and $D$ disconnected? The path $C-E-B-D$ still exists in $G_2$. So, $(C,D)$ is not a bridge.\n*   **Consider edge $(C,E)$**: In $G_2$, if we remove $(C,E)$, are $C$ and $E$ disconnected? The path $C-D-B-E$ still exists in $G_2$. So, $(C,E)$ is not a bridge.\n\nWe have two non-bridge choices: $(C,D)$ and $(C,E)$. We must avoid the bridge $(C,A)$. Applying the tie-breaking rule between the non-bridge options, we compare destination vertices $D$ and $E$. $D$ comes before $E$ alphabetically. Thus, we traverse the edge $(C,D)$.\n\nThe new path is $(A, B, C, D)$.\n\nThe sequence of the first four vertices visited is $A, B, C, D$. This corresponds to option D.", "answer": "$$\\boxed{D}$$", "id": "1504352"}, {"introduction": "Building on the initial steps, this next exercise places you in the middle of a partially completed tour. Your task is to determine the correct next move, which hinges on accurately assessing the state of the *remaining* graph. This practice [@problem_id:1504396] sharpens your ability to identify bridges in a dynamically changing context, a critical skill for successfully applying Fleury's algorithm from start to finish.", "problem": "A robotic maintenance drone is tasked with inspecting all fiber-optic cables connecting a network of server hubs. The network is represented by a connected, undirected graph $G$. The drone must find an Eulerian circuit, traversing each cable exactly once. The network hubs are the vertices, $V = \\{A, B, C, D, E, F, G, H\\}$, and the cable connections are the edges, $E = \\{(A, B), (A, C), (B, C), (B, D), (B, E), (C, D), (C, F), (D, E), (D, F), (E, G), (E, H), (F, G), (F, H)\\}$. Note that an edge $(X, Y)$ is the same as $(Y, X)$.\n\nThe drone uses Fleury's algorithm to navigate this tour. It has initiated its journey and has already traversed the sequence of hubs $A \\to C \\to B \\to D \\to E$. The drone is currently located at hub $E$.\n\nAccording to the rules of Fleury's algorithm, which of the following connections originating from hub $E$ are valid choices for the next step in its tour? Select all that apply.\n\nA. The edge $(E, B)$\n\nB. The edge $(E, G)$\n\nC. The edge $(E, H)$\n\nD. None of A, B, or C are valid.\n\nE. All of A, B, and C are valid.", "solution": "We model the remaining graph after the drone has traversed the edges along the path $A \\to C \\to B \\to D \\to E$. By Fleury’s algorithm, once an edge is traversed it is removed. From the original edge set, we remove $(A,C)$, $(B,C)$, $(B,D)$, and $(D,E)$. The remaining edges in the set $E_{\\text{rem}}$ are $\\{(A,B), (B,E), (C,D), (C,F), (D,F), (E,G), (E,H), (F,G), (F,H)\\}.\nAt the current vertex $E$, the available incident edges are $(E,B)$, $(E,G)$, and $(E,H)$.\n\nFleury’s rule is: at each step, choose an edge that is not a bridge of the current remaining graph unless it is the only available edge. An edge is a bridge if its removal increases the number of connected components.\n\n- Test $(E,B)$: If we remove $(E,B)$ from $E_{\\text{rem}}$, vertex $B$ remains connected only to $A$ via $(A,B)$, and there is no path from $\\{A,B\\}$ to the rest of the graph, so the graph splits into components $\\{A,B\\}$ and $\\{C,D,E,F,G,H\\}$. Thus $(E,B)$ is a bridge and should not be chosen while other options exist.\n\n- Test $(E,G)$: If we remove $(E,G)$, there remains a path from $E$ to $G$, namely $E \\to H \\to F \\to G$, because $(E,H)$, $(F,H)$, and $(F,G)$ are in $E_{\\text{rem}}$. Therefore $(E,G)$ is not a bridge.\n\n- Test $(E,H)$: If we remove $(E,H)$, there remains a path from $E$ to $H$, namely $E \\to G \\to F \\to H$, because $(E,G)$, $(F,G)$, and $(F,H)$ are in $E_{\\text{rem}}$. Therefore $(E,H)$ is not a bridge.\n\nSince $(E,G)$ and $(E,H)$ are not bridges and $(E,B)$ is a bridge, Fleury’s algorithm allows choosing $(E,G)$ or $(E,H)$, but not $(E,B)$ at this step. Hence the valid options are B and C.", "answer": "$$\\boxed{BC}$$", "id": "1504396"}, {"introduction": "Our final practice moves from mechanical application to conceptual understanding. This thought experiment challenges you to predict the outcome when Fleury's algorithm is applied to a graph that does not contain an Eulerian circuit, but rather an Eulerian path. By analyzing this specific scenario [@problem_id:1504412], you will gain a deeper insight into why the bridge-avoidance rule is so effective and how it relates to the fundamental properties of graph connectivity and vertex degrees.", "problem": "In graph theory, a graph is said to have an Eulerian path if there is a trail that visits every edge exactly once. A graph has an Eulerian circuit if such a trail exists that starts and ends at the same vertex. A well-known result states that a connected graph has an Eulerian path if and only if it has exactly two vertices of odd degree, and an Eulerian circuit if and only if all of its vertices have an even degree.\n\nFleury's algorithm is a method for finding an Eulerian circuit in a graph where one is known to exist. The rules are as follows:\n1. Start at any vertex in the graph.\n2. From the current vertex, traverse any incident edge, with one critical condition: do not traverse an edge if its removal would disconnect the graph of remaining edges (i.e., do not traverse a bridge), unless there is no other choice.\n3. Once an edge is traversed, it is considered removed from the graph.\n4. Repeat this process until no more edges can be traversed.\n\nAn analyst is given a connected graph $G$ which is known to have exactly two vertices of odd degree, which we will call $U$ and $V$. All other vertices in $G$ have an even degree. The analyst misunderstands the conditions for the algorithm and attempts to apply Fleury's algorithm, hoping to find an Eulerian circuit. They compound their error by choosing a starting vertex $W$ which is one of the vertices with an even degree (thus, $W \\neq U$ and $W \\neq V$).\n\nWhich of the following statements correctly describes the terminal state of the algorithm under these specific circumstances?\n\nA. The algorithm will successfully traverse every edge in the graph and will terminate at one of the odd-degree vertices, either $U$ or $V$.\n\nB. The algorithm will terminate upon returning to the starting vertex $W$, having traversed a circuit. The set of untraversed edges will form a path connecting the two odd-degree vertices, $U$ and $V$.\n\nC. The algorithm will get stuck at one of the odd-degree vertices, either $U$ or $V$, leaving a set of untraversed edges that form one or more disconnected cycles.\n\nD. The algorithm will terminate at the starting vertex $W$, having traversed every edge in the graph.\n\nE. The algorithm will terminate at a vertex other than $W$, $U$, or $V$, because all remaining edges from that vertex are bridges to separate components.", "solution": "Let $G$ be connected with exactly two odd-degree vertices $U$ and $V$, and let $W$ be a starting vertex of even degree with $W \\neq U$ and $W \\neq V$. Recall the parity constraints for Euler trails:\n- Any trail that uses every edge exactly once has endpoints that are precisely the odd-degree vertices. Therefore, in a graph with exactly two odd vertices $U$ and $V$, every Euler trail must start at one of $\\{U,V\\}$ and end at the other.\n\nFrom this, two eliminations follow immediately:\n- It is impossible to traverse every edge and end at $W$ because that would be an Eulerian circuit, which exists if and only if all vertices have even degree. Since $U$ and $V$ are odd, this cannot happen. Hence option D is impossible.\n- It is also impossible to traverse every edge starting at $W$ and end at $U$ or $V$ because an Eulerian trail must start at an odd vertex. Since $W$ is even and $W \\neq U,V$, no all-edges traversal can begin at $W$. Hence option A is impossible.\n\nNow analyze the effect of Fleury’s rule “do not traverse a bridge unless there is no other choice.” Consider the maximal initial segment of the run in which only non-bridge edges are traversed. Denote by $T$ this initial trail. Each edge in $T$ lies on a cycle in the current (remaining) graph at the moment it is taken. Removing such an edge reduces the degrees of its endpoints by $1$ each, and since every vertex visited along a cycle is both entered and exited the same number of times, the total degree reduction at each such vertex is an even number. In particular:\n- Along $T$, before any bridge is taken, the trail cannot get stuck at a vertex different from the start because every intermediate vertex that is reached via a non-bridge edge has, at that moment, another non-bridge exit. Consequently, this maximal non-bridge-only segment $T$ must be a closed circuit that starts and ends at $W$.\n\nNext, remove the edges of $T$ from $G$ to obtain the remaining subgraph $G'$. Removing the edges of a circuit preserves the parity of every vertex: for each vertex $x$, the number of incident edges removed is even, so the parity of $\\deg(x)$ in $G'$ is the same as in $G$. Therefore, $G'$ still has exactly two odd-degree vertices, namely $U$ and $V$.\n\nA finite graph has exactly two odd-degree vertices if and only if it contains a (nonempty) trail with those two vertices as endpoints; equivalently, the nonempty part of $G'$ must include a $U$–$V$ path. Moreover, because $T$ was chosen to contain no bridges at any step, any edges left untraversed at this point cannot include a closed circuit attached through a non-bridge incident to $W$ (such an edge would have been eligible during $T$). Thus the set of untraversed edges in $G'$ is exactly a path whose endpoints are $U$ and $V$.\n\nHence, under these circumstances:\n- The algorithm first returns to $W$ after traversing a circuit, and\n- The set of untraversed edges forms a path connecting $U$ and $V$.\n\nThis is precisely statement B, while statements A, C, D, and E are inconsistent with the parity constraints and the bridge-avoidance behavior described above.", "answer": "$$\\boxed{B}$$", "id": "1504412"}]}