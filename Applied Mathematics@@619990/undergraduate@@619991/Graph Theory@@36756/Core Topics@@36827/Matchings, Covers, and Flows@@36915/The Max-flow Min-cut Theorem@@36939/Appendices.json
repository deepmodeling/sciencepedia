{"hands_on_practices": [{"introduction": "The cornerstone of network flow theory is the Max-Flow Min-Cut theorem, which establishes a profound duality between two key network properties. This first exercise provides a direct, hands-on opportunity to verify this fundamental principle [@problem_id:1408993]. By independently calculating the maximum flow using an augmenting path algorithm and then determining the capacity of a minimum cut, you will see firsthand how these two seemingly different measures are intrinsically equal.", "problem": "Consider a small-scale data transmission network represented by a directed graph. The network has a source node `S`, a sink node `T`, and four intermediate routing nodes `A`, `B`, `C`, and `D`. The directed links and their corresponding maximum data carrying capacities (in arbitrary units of flow) are given as follows:\n- From `S` to `A` with capacity 10.\n- From `S` to `C` with capacity 12.\n- From `A` to `B` with capacity 7.\n- From `A` to `D` with capacity 4.\n- From `B` to `T` with capacity 10.\n- From `C` to `D` with capacity 9.\n- From `D` to `B` with capacity 3.\n- From `D` to `T` with capacity 8.\n\nAll links are one-way as specified. There are no other links in the network. The goal is to determine the throughput of this network.\n\nCalculate the value of the maximum flow from the source `S` to the sink `T`, and calculate the capacity of a minimum `S-T` cut. Provide the two integer values in the specified order: maximum flow value first, followed by the minimum cut capacity.", "solution": "Let $G=(V,E)$ be the directed graph with source $S$, sink $T$, and intermediate nodes $A,B,C,D$. For each directed edge $(u,v)\\in E$, let the capacity be $c_{uv}$ and the flow be $f_{uv}$, with $0\\leq f_{uv}\\leq c_{uv}$. Flow conservation holds at intermediate nodes: for each $v\\in\\{A,B,C,D\\}$,\n$$\n\\sum_{u:(u,v)\\in E} f_{uv}=\\sum_{w:(v,w)\\in E} f_{vw}.\n$$\nThe capacities are:\n$$\nc_{S,A}=10,\\quad c_{S,C}=12,\\quad c_{A,B}=7,\\quad c_{A,D}=4,\\quad c_{B,T}=10,\\quad c_{C,D}=9,\\quad c_{D,B}=3,\\quad c_{D,T}=8.\n$$\n\nApply the Ford–Fulkerson method using augmenting paths and residual capacities.\n\n1) Augment along the path $S\\to A\\to B\\to T$. The bottleneck is\n$$\n\\min\\{c_{S,A},c_{A,B},c_{B,T}\\}=\\min\\{10,7,10\\}=7.\n$$\nSend $7$ units: set $f_{S,A}=7$, $f_{A,B}=7$, $f_{B,T}=7$.\n\n2) Augment along the path $S\\to C\\to D\\to T$. The bottleneck is\n$$\n\\min\\{c_{S,C},c_{C,D},c_{D,T}\\}=\\min\\{12,9,8\\}=8.\n$$\nSend $8$ units: set $f_{S,C}=8$, $f_{C,D}=8$, $f_{D,T}=8$.\n\n3) Consider the path $S\\to A\\to D\\to B\\to T$ in the residual network. The current forward residual capacities on these arcs are\n$$\nr_{S,A}=c_{S,A}-f_{S,A}=10-7=3,\\quad r_{A,D}=c_{A,D}-f_{A,D}=4-0=4,\n$$\n$$\nr_{D,B}=c_{D,B}-f_{D,B}=3-0=3,\\quad r_{B,T}=c_{B,T}-f_{B,T}=10-7=3.\n$$\nThe bottleneck is $\\min\\{3,4,3,3\\}=3$. Augment $3$ units along this path: update\n$$\nf_{S,A}=7+3=10,\\quad f_{A,D}=0+3=3,\\quad f_{D,B}=0+3=3,\\quad f_{B,T}=7+3=10.\n$$\n\nCompute the total flow value after these augmentations. At the sink,\n$$\n|f|=f_{B,T}+f_{D,T}=10+8=18.\n$$\nAlternatively, at the source,\n$$\n|f|=f_{S,A}+f_{S,C}=10+8=18.\n$$\n\nVerify that no further augmenting path exists. In the residual graph, the forward residual capacities to $T$ are $r_{B,T}=10-10=0$ and $r_{D,T}=8-8=0$. From $S$, the reachable nodes via residual edges are $S\\to C$ (with $r_{S,C}=12-8=4$), then $C\\to D$ (with $r_{C,D}=9-8=1$), and also $D\\to A$ via the reverse of $A\\to D$ (with residual $f_{A,D}=3$), hence $A$ is reachable. Node $B$ is not reachable because $r_{A,B}=7-7=0$ and $r_{D,B}=3-3=0$, and $T$ is not reachable because $r_{B,T}=0$ and $r_{D,T}=0$. Therefore the reachable set is $R=\\{S,A,C,D\\}$.\n\nThe capacity of the cut $(R,\\overline{R})$ is the sum of capacities of edges from $R$ to $\\overline{R}=\\{B,T\\}$:\n$$\nc(R,\\overline{R})=c_{A,B}+c_{D,B}+c_{D,T}=7+3+8=18.\n$$\nBy the max-flow min-cut theorem, the maximum flow equals the minimum cut capacity, which matches the constructed flow value. Hence the maximum $S$–$T$ flow is $18$ and the minimum cut capacity is $18$.", "answer": "$$\\boxed{\\begin{pmatrix} 18 & 18 \\end{pmatrix}}$$", "id": "1408993"}, {"introduction": "Real-world networks are rarely static; they change due to upgrades, failures, or reconfigurations. This practice problem simulates a common and critical scenario: the failure of a network link [@problem_id:1408932]. Your task is to determine how this disruption affects the network's overall throughput, demonstrating how max-flow analysis is a crucial tool for engineers in assessing network resilience and planning for contingencies.", "problem": "A company's internal data network consists of a mainframe server, an external gateway, and three intermediate routing nodes. Data is transferred from the mainframe server to the external gateway through this network. The components are denoted as follows:\n- `S`: The source Mainframe Server\n- `T`: The destination External Gateway\n- `A`: Primary Router\n- `B`: Secondary Router\n- `C`: Application Server Node\n\nThe network is comprised of directed, one-way fiber optic links with specific maximum data transfer capacities. The layout and capacity (in Gigabits per second, Gbps) of each link are described below:\n- From S to A: 8 Gbps\n- From S to B: 7 Gbps\n- From A to B: 3 Gbps\n- From A to C: 6 Gbps\n- From B to C: 4 Gbps\n- From B to T: 5 Gbps\n- From C to T: 9 Gbps\n\nA network upgrade requires temporarily disconnecting the link from the Primary Router (A) to the Secondary Router (B). All other links remain operational with their specified capacities.\n\nCalculate the new maximum possible data transfer rate from the mainframe server (S) to the external gateway (T) after this change. Express your answer as an integer in Gbps.", "solution": "We model the network as a directed graph with source $S$, sink $T$, intermediate nodes $A,B,C$, and capacity function $c(u,v)$ on each directed edge. After removing the link $A \\to B$, the remaining capacities are:\n$$\nc(S,A)=8,\\quad c(S,B)=7,\\quad c(A,C)=6,\\quad c(B,C)=4,\\quad c(B,T)=5,\\quad c(C,T)=9,\n$$\nwith all unspecified $c(u,v)=0$.\n\nBy the max-flow min-cut theorem, the value of any $S$-$T$ flow is upper bounded by the capacity of any $S$-$T$ cut. Consider the cut with $X=\\{S,A\\}$ and $\\bar X=\\{B,C,T\\}$. Its capacity is\n$$\n\\text{cap}(X,\\bar X)=\\sum_{u\\in X,\\;v\\in \\bar X} c(u,v)=c(S,B)+c(A,C)=7+6=13.\n$$\nHence any $S$-$T$ flow satisfies\n$$\n|f|\\leq 13.\n$$\n\nWe now construct a feasible flow $f$ achieving value $13$:\n$$\nf(S,A)=6,\\quad f(S,B)=7,\\quad f(A,C)=6,\\quad f(B,C)=2,\\quad f(B,T)=5,\\quad f(C,T)=8,\n$$\nand $f(u,v)=0$ on all other edges.\n\nCapacity constraints hold since\n$$\nf(S,A)\\leq 8,\\; f(S,B)\\leq 7,\\; f(A,C)\\leq 6,\\; f(B,C)\\leq 4,\\; f(B,T)\\leq 5,\\; f(C,T)\\leq 9.\n$$\nFlow conservation holds at intermediate nodes:\n$$\n\\text{At }A:\\; f(S,A)=f(A,C)\\quad (6=6),\n$$\n$$\n\\text{At }B:\\; f(S,B)=f(B,T)+f(B,C)\\quad (7=5+2),\n$$\n$$\n\\text{At }C:\\; f(A,C)+f(B,C)=f(C,T)\\quad (6+2=8).\n$$\nThe total flow value is the net inflow to $T$:\n$$\n|f|=f(B,T)+f(C,T)=5+8=13.\n$$\n\nSince there exists a feasible flow of value $13$ and the cut above has capacity $13$, by the max-flow min-cut theorem the maximum $S$-$T$ flow equals $13$. Therefore, the new maximum possible data transfer rate is $13$ Gbps.", "answer": "$$\\boxed{13}$$", "id": "1408932"}, {"introduction": "Finding the maximum flow is an algorithmic challenge, and the choice of path within an algorithm can have dramatic consequences for efficiency. This advanced exercise explores a classic, carefully constructed network designed to expose a potential weakness in the basic Ford-Fulkerson method [@problem_id:1408949]. By analyzing this hypothetical 'worst-case' scenario, you will gain a deeper appreciation for why smarter path selection strategies are essential for developing efficient and scalable network algorithms.", "problem": "Consider a capacitated directed network used for modeling data transfer between a source `S` and a sink `T`. The network consists of four intermediate data hubs, `U1`, `U2`, `V1`, and `V2`. The connections and their maximum data transfer rates (capacities) are defined as follows, where `K` is a large integer constant:\n- `(S, U1)` with capacity `K`\n- `(S, U2)` with capacity `K`\n- `(U1, V1)` with capacity `K`\n- `(U2, V2)` with capacity `K`\n- `(V1, T)` with capacity `K`\n- `(V2, T)` with capacity `K`\n- `(V1, V2)` with capacity `1`\n\nAn analyst is using a particular implementation of the Ford-Fulkerson algorithm to determine the maximum flow from `S` to `T`. This implementation uses a specific, non-optimal strategy for choosing augmenting paths, which we will call the Greedy Bridge-Using (GBU) method. The GBU method operates under the following rule:\n\n*   If there exists an augmenting path in the current residual graph that includes the edge `(V1, V2)` or the edge `(V2, V1)`, the algorithm **must** choose one such path.\n\nAssume the algorithm starts with zero flow and repeatedly applies the GBU method to augment the flow until the maximum flow is reached. For the value `K = 1989`, what is the total number of flow augmentations the algorithm will perform?", "solution": "Let all initial flows be zero. The GBU rule enforces that every chosen augmenting path contains the unit-capacity bridge, either $(V_{1},V_{2})$ or its residual reverse $(V_{2},V_{1})$, whenever such a path exists. Because the bridge has capacity $1$, any such augmenting path has bottleneck $1$, so each augmentation increases the total $S$–$T$ flow by exactly $1$.\n\nIntroduce counters:\n- Let $a$ be the number of augmentations that use the forward bridge edge $(V_{1},V_{2})$ along the path $S \\to U_{1} \\to V_{1} \\to V_{2} \\to T$.\n- Let $b$ be the number of augmentations that use the reverse residual edge $(V_{2},V_{1})$ along the path $S \\to U_{2} \\to V_{2} \\to V_{1} \\to T$.\n\nEach augmentation updates flows as follows:\n- Using $(V_{1},V_{2})$ increases $f(S,U_{1})$, $f(U_{1},V_{1})$, and $f(V_{2},T)$ by $1$, and increases $f(V_{1},V_{2})$ by $1$.\n- Using $(V_{2},V_{1})$ increases $f(S,U_{2})$, $f(U_{2},V_{2})$, and $f(V_{1},T)$ by $1$, and decreases $f(V_{1},V_{2})$ by $1$ (since it uses the residual back edge to cancel one unit on $(V_{1},V_{2})$).\n\nHence, after $a$ forward-bridge and $b$ reverse-bridge augmentations,\n$$\nf(S,U_{1})=a,\\quad f(U_{1},V_{1})=a,\\quad f(V_{2},T)=a,\n$$\n$$\nf(S,U_{2})=b,\\quad f(U_{2},V_{2})=b,\\quad f(V_{1},T)=b,\n$$\nand\n$$\nf(V_{1},V_{2})=a-b,\\quad \\text{with } 0 \\leq f(V_{1},V_{2}) \\leq 1.\n$$\nThe total flow value is\n$$\n|f|=f(V_{1},T)+f(V_{2},T)=a+b.\n$$\n\nAvailability of a bridge-containing augmenting path in the residual graph is determined as follows:\n- If $f(V_{1},V_{2})=0$ (i.e., $a=b$), then the residual edge $(V_{1},V_{2})$ is available with capacity $1$, and the path $S \\to U_{1} \\to V_{1} \\to V_{2} \\to T$ exists if and only if the residual capacities on $(S,U_{1})$, $(U_{1},V_{1})$, and $(V_{2},T)$ are positive. Those residual capacities are $K-a$, $K-a$, and $K-a$, respectively, so the condition is $a<K$.\n- If $f(V_{1},V_{2})=1$ (i.e., $a=b+1$), then the residual edge $(V_{2},V_{1})$ is available with capacity $1$, and the path $S \\to U_{2} \\to V_{2} \\to V_{1} \\to T$ exists if and only if the residual capacities on $(S,U_{2})$, $(U_{2},V_{2})$, and $(V_{1},T)$ are positive. Those residual capacities are $K-b$, $K-b$, and $K-b$, respectively, so the condition is $b<K$.\n\nTherefore, as long as $a<K$ and $b<K$, there exists a bridge-containing augmenting path, and the GBU rule forces the algorithm to use it. Moreover, the bridge orientation alternates: when $a=b$ the algorithm must use $(V_{1},V_{2})$, yielding $a \\leftarrow a+1$; when $a=b+1$ it must use $(V_{2},V_{1})$, yielding $b \\leftarrow b+1$. Starting from $(a,b)=(0,0)$, after $n$ augmentations,\n$$\n(a,b)=\n\\begin{cases}\n\\left(\\frac{n}{2},\\frac{n}{2}\\right),  \\text{if } n \\text{ is even},\\\\[4pt]\n\\left(\\frac{n+1}{2},\\frac{n-1}{2}\\right),  \\text{if } n \\text{ is odd}.\n\\end{cases}\n$$\n\nThe process stops exactly when no bridge-containing augmenting path exists. The first time this happens is when both $a=K$ and $b=K$, because:\n- At $n=2K-1$, we have $(a,b)=(K,K-1)$, so $bK$ and the path through $(V_{2},V_{1})$ still exists; one more augmentation yields $(a,b)=(K,K)$.\n- At $(a,b)=(K,K)$, both required residual capacities vanish on the terminal edges: $(V_{2},T)$ and $(V_{1},T)$ are saturated, so no bridge-containing path exists, and in fact the cut into $T$ has capacity $2K$, so $|f|=2K$ is maximal. A feasible flow of value $2K$ is $K$ units on $S \\to U_{1} \\to V_{1} \\to T$ and $K$ units on $S \\to U_{2} \\to V_{2} \\to T$, showing this bound is tight.\n\nSince each augmentation increases $|f|$ by $1$, reaching $|f|=2K$ requires exactly $2K$ augmentations. For $K=1989$,\n$$\n2K=2 \\times 1989=3978.\n$$", "answer": "$$\\boxed{3978}$$", "id": "1408949"}]}