{"hands_on_practices": [{"introduction": "The first step in any flow-augmentation algorithm is to find a path from the source to the sink in the residual graph. This exercise helps you build familiarity with the structure of a residual graph and practice the fundamental skill of path identification. Systematically enumerating all simple paths is a great way to ensure you understand what constitutes a valid augmenting path, which is any path in the residual graph from source to sink with positive capacity on all its edges [@problem_id:1482183].", "problem": "In the context of network flow algorithms, a residual graph $G_f$ is used to find augmenting paths. This graph consists of a set of vertices $V$, a source $S \\in V$, a sink $T \\in V$, and a set of directed edges $E_f$, where each edge $(u, v) \\in E_f$ has a positive residual capacity $c_f(u, v) > 0$.\n\nAn augmenting path is a path from the source $S$ to the sink $T$ in the residual graph. A simple augmenting path is an augmenting path that does not repeat any vertices.\n\nConsider a specific residual graph defined by the set of vertices $V = \\{S, A, B, C, D, T\\}$, with source $S$ and sink $T$. The directed edges and their positive residual capacities are given as follows:\n- $(S, A)$ with capacity 4\n- $(S, C)$ with capacity 5\n- $(A, B)$ with capacity 3\n- $(A, D)$ with capacity 2\n- $(B, D)$ with capacity 6\n- $(B, T)$ with capacity 3\n- $(C, A)$ with capacity 1\n- $(C, D)$ with capacity 2\n- $(D, T)$ with capacity 7\n\nYour task is to determine the total number of distinct simple augmenting paths from the source $S$ to the sink $T$ in this residual graph.", "solution": "All residual capacities are positive, so every listed directed edge is present in the residual graph. A simple augmenting path is a simple directed path from $S$ to $T$. The graph is acyclic because edges follow the progression $S \\to \\{A,C\\}$, $C \\to \\{A,D\\}$, $A \\to \\{B,D\\}$, $B \\to \\{D,T\\}$, $D \\to T$, and there are no backward edges or cycles. Therefore, the number of simple augmenting paths equals the number of directed paths from $S$ to $T$.\n\nDefine $P(v)$ as the number of distinct simple paths from vertex $v$ to $T$. Using dynamic programming on the DAG with base case $P(T)=1$, we compute:\n$$\nP(D)=P(T)=1,\n$$\n$$\nP(B)=P(D)+P(T)=1+1=2,\n$$\n$$\nP(A)=P(B)+P(D)=2+1=3,\n$$\n$$\nP(C)=P(A)+P(D)=3+1=4,\n$$\n$$\nP(S)=P(A)+P(C)=3+4=7.\n$$\nThus, there are $7$ distinct simple augmenting paths. Explicit enumeration confirms this count: $S \\to A \\to B \\to T$, $S \\to A \\to B \\to D \\to T$, $S \\to A \\to D \\to T$, $S \\to C \\to D \\to T$, $S \\to C \\to A \\to B \\to T$, $S \\to C \\to A \\to B \\to D \\to T$, $S \\to C \\to A \\to D \\to T$.", "answer": "$$\\boxed{7}$$", "id": "1482183"}, {"introduction": "Augmenting paths can do more than just push more flow forward; they can intelligently re-route existing flow. This is achieved by traversing \"backward edges\" in the residual graph, which correspond to decreasing flow on an edge in the original network. This powerful exercise [@problem_id:1482173] challenges you to find and use such a path, revealing how the max-flow algorithm can correct for potentially suboptimal flow assignments made in earlier iterations.", "problem": "Consider a directed graph representing a flow network. The vertices in this network are $\\{s, a, b, t\\}$, where $s$ is the source and $t$ is the sink. The network's edges and their integer capacities are defined as follows:\n- from $s$ to $a$, capacity 10\n- from $s$ to $b$, capacity 10\n- from $b$ to $a$, capacity 4\n- from $a$ to $t$, capacity 5\n- from $b$ to $t$, capacity 10\n\nAn initial, non-maximal flow $f$ is currently routed through the network. The non-zero flow values on the edges are: $f(s, b) = 4$, $f(b, a) = 4$, and $f(a, t) = 4$. The flow on all other edges is zero.\n\nYour task is to find an augmenting path from $s$ to $t$ in the residual network corresponding to the flow $f$. The specific augmenting path you must find is one that, when used, will decrease the amount of flow on the edge $(b, a)$. Once you identify this path and its bottleneck capacity, augment the flow $f$. Calculate the new total flow value from source $s$ to sink $t$.", "solution": "We use the residual network construction. For each directed edge $(u,v)$ with capacity $c(u,v)$ and current flow $f(u,v)$, the forward residual capacity is $c_{f}(u,v) = c(u,v) - f(u,v)$ and the backward residual capacity is $c_{f}(v,u) = f(u,v)$.\n\nGiven the current nonzero flows $f(s,b) = 4$, $f(b,a) = 4$, and $f(a,t) = 4$, the residual capacities are:\n- $c_{f}(s,a) = 10 - 0 = 10$ and $c_{f}(a,s) = 0$,\n- $c_{f}(s,b) = 10 - 4 = 6$ and $c_{f}(b,s) = 4$,\n- $c_{f}(b,a) = 4 - 4 = 0$ and $c_{f}(a,b) = 4$,\n- $c_{f}(a,t) = 5 - 4 = 1$ and $c_{f}(t,a) = 4$,\n- $c_{f}(b,t) = 10 - 0 = 10$ and $c_{f}(t,b) = 0$.\n\nTo decrease the flow on $(b,a)$, the augmenting path must use the backward residual arc $a \\to b$. A valid augmenting path is\n$$\nP: s \\to a \\to b \\to t.\n$$\nThe bottleneck (augmenting amount) along $P$ is\n$$\n\\Delta = \\min\\{c_{f}(s,a),\\, c_{f}(a,b),\\, c_{f}(b,t)\\} = \\min\\{10,\\, 4,\\, 10\\} = 4.\n$$\n\nAugmenting by $\\Delta$ along $P$ updates the flows as follows: increase by $\\Delta$ on forward arcs and decrease by $\\Delta$ on the corresponding original forward arc for any backward residual arc used.\n- On $s \\to a$: $f'(s,a) = 0 + 4 = 4$.\n- On $a \\to b$ (backward of $b \\to a$): $f'(b,a) = 4 - 4 = 0$.\n- On $b \\to t$: $f'(b,t) = 0 + 4 = 4$.\nAll other flows remain unchanged, so $f'(s,b) = 4$ and $f'(a,t) = 4$.\n\nThe new total flow value is\n$$\n|f'| = f'(s,a) + f'(s,b) = 4 + 4 = 8,\n$$\nequivalently,\n$$\n|f'| = f'(a,t) + f'(b,t) = 4 + 4 = 8.\n$$", "answer": "$$\\boxed{8}$$", "id": "1482173"}, {"introduction": "While the Ford-Fulkerson method will eventually find the maximum flow regardless of which augmenting path you choose (for integer capacities), your choice can have a massive impact on performance. This problem presents a classic scenario where a naively chosen initial path significantly increases the number of subsequent augmentations needed to reach the maximum flow. By working through this example [@problem_id:1482159], you'll gain a crucial insight into why more sophisticated path-selection strategies, like choosing the shortest path, are essential for creating efficient algorithms.", "problem": "Consider a flow network with a source node $s$, a sink node $t$, and two intermediate nodes $a$ and $b$. The network consists of the following directed edges with their respective integer capacities:\n- from $s$ to $a$, capacity 50\n- from $s$ to $b$, capacity 50\n- from $a$ to $t$, capacity 50\n- from $b$ to $t$, capacity 50\n- from $a$ to $b$, capacity 1\n\nAn engineer is tasked with finding the maximum flow from $s$ to $t$ using the Ford-Fulkerson method, which iteratively finds an augmenting path in the residual graph and increases the flow. For their first step, the engineer chooses the augmenting path $P = s \\to a \\to b \\to t$.\n\nAfter augmenting the flow along this initial path $P$, what is the minimum number of *additional* augmenting paths required to reach the maximum possible flow in the network?", "solution": "Let the capacities be denoted by $c(u,v)$. By the max-flow min-cut theorem, the maximum $s$–$t$ flow value equals the minimum capacity of an $s$–$t$ cut. Consider the two natural cuts:\n$$\n\\{s\\}\\,|\\,\\{a,b,t\\}\\quad\\text{with capacity }c(s,a)+c(s,b)=50+50=100,\n$$\n$$\n\\{s,a,b\\}\\,|\\,\\{t\\}\\quad\\text{with capacity }c(a,t)+c(b,t)=50+50=100.\n$$\nHence the maximum flow value is\n$$\n|f^{*}|=100.\n$$\n\nThe engineer first augments along $P_{1}: s \\to a \\to b \\to t$. The bottleneck on $P_{1}$ is\n$$\n\\Delta_{1}=\\min\\{c(s,a),c(a,b),c(b,t)\\}=\\min\\{50,1,50\\}=1,\n$$\nso $1$ unit of flow is sent along $P_{1}$. The resulting nonzero flows are $f(s,a)=1$, $f(a,b)=1$, $f(b,t)=1$, and the residual capacities become\n$$\nc_{f}(s,a)=49, c_{f}(s,b)=50, c_{f}(a,t)=50, c_{f}(b,t)=49, c_{f}(a,b)=0,\n$$\nwith reverse residual edges\n$$\nc_{f}(a,s)=1, c_{f}(b,a)=1, c_{f}(t,b)=1.\n$$\n\nAny additional augmentation must follow an $s$–$t$ path in this residual graph. The possible simple $s$–$t$ residual paths and their bottlenecks are:\n- $s \\to a \\to t$ with bottleneck $\\min\\{c_{f}(s,a),c_{f}(a,t)\\}=\\min\\{49,50\\}=49$,\n- $s \\to b \\to t$ with bottleneck $\\min\\{c_{f}(s,b),c_{f}(b,t)\\}=\\min\\{50,49\\}=49$,\n- $s \\to b \\to a \\to t$ with bottleneck $\\min\\{c_{f}(s,b),c_{f}(b,a),c_{f}(a,t)\\}=\\min\\{50,1,50\\}=1$.\n\nThus, after the initial step, the capacity of any single augmenting path is at most $49$. Therefore, with only two additional augmenting paths, the total extra flow one could add is at most $49+49=98$, yielding a total flow of at most $1+98=99<100$. Hence at least three additional augmenting paths are necessary.\n\nTo show that three suffice, take the following sequence:\n1. Augment along $P_{2}: s \\to b \\to t$ with $\\Delta_{2}=49$, giving $f(b,t)=50$ and $f(s,b)=49$, so $|f|=50$.\n2. Augment along $P_{3}: s \\to a \\to t$ with $\\Delta_{3}=49$, giving $f(s,a)=50$ and $f(a,t)=49$, so $|f|=99$.\n3. Augment along $P_{4}: s \\to b \\to a \\to t$ with $\\Delta_{4}=1$, which decreases $f(a,b)$ to $0$ and increases $f(s,b)$ to $50$ and $f(a,t)$ to $50$, yielding\n$$\nf(s,a)=50, f(s,b)=50, f(a,t)=50, f(b,t)=50, f(a,b)=0,\n$$\nso the total flow is\n$$\n|f|=f(s,a)+f(s,b)=100=|f^{*}|.\n$$\n\nTherefore, the minimum number of additional augmenting paths required after the initial poor choice is $3$.", "answer": "$$\\boxed{3}$$", "id": "1482159"}]}