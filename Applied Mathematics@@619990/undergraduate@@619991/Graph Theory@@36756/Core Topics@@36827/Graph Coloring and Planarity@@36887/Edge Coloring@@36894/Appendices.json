{"hands_on_practices": [{"introduction": "Many optimization problems in networking and logistics can be elegantly solved using graph theory. This first exercise provides a direct bridge from a practical scenario—designing a communication network—to the core concepts of edge coloring. You will model the network as a graph, identify its fundamental structure, and use this to determine the minimum number of required 'colors' or channels. This practice is designed to solidify your understanding of the maximum degree, $\\Delta(G)$, as a fundamental lower bound for the edge chromatic number and to introduce the important family of Class 1 graphs. [@problem_id:1499071]", "problem": "A technology company is designing the internal communication network for its new research campus. The network consists of physical data links connecting various nodes (buildings and server hubs). The central router, let's call it node R, is connected to three primary hubs: H1, H2, and H3.\n\nFrom hub H1, links are established to two distinct research buildings.\nFrom hub H2, links are established to five distinct research buildings.\nFrom hub H3, a single link is established to a specialized server farm, node S.\nFinally, from the server farm S, links are established to six distinct high-performance computing clusters.\n\nFor signal integrity and routing purposes, each individual data link in the network must be assigned a frequency channel, which we can think of as a \"color\". The fundamental constraint is that any two links that meet at the same node (R, H1, H2, H3, or S) must be assigned different colors. The research buildings and computing clusters are terminal nodes and do not have any further connections. The network is designed without any redundant loops.\n\nWhat is the absolute minimum number of distinct colors required to assign a valid color to every link in the entire network?", "solution": "The problem asks for the minimum number of colors required to color the links of a network such that no two links meeting at a single node share the same color. This is a classic problem in graph theory, which can be modeled by finding the edge chromatic number of a graph.\n\nFirst, let's represent the network as a graph $G = (V, E)$. The set of vertices $V$ consists of the nodes of the network, and the set of edges $E$ consists of the data links between them.\nThe vertices are the central router (R), the three hubs (H1, H2, H3), the server farm (S), and the terminal nodes (research buildings and computing clusters). The problem states there are no loops, which means the graph is acyclic. A connected, acyclic graph is a tree.\n\nThe number of colors required for the links is the edge chromatic number of the graph, denoted by $\\chi'(G)$. A key property of edge coloring states that for any simple graph, the edge chromatic number $\\chi'(G)$ is at least the maximum degree of any vertex in the graph, $\\Delta(G)$. That is, $\\chi'(G) \\geq \\Delta(G)$. This is because all edges incident to the vertex with the maximum degree must have different colors.\n\nLet's calculate the degree of each non-terminal vertex in our graph. The degree of a vertex is the number of edges connected to it.\n\n1.  **Central Router (R):** It is connected to H1, H2, and H3.\n    $\\deg(R) = 3$.\n\n2.  **Hub H1:** It is connected to R and to two research buildings.\n    $\\deg(H1) = 1 (\\text{from R}) + 2 (\\text{to buildings}) = 3$.\n\n3.  **Hub H2:** It is connected to R and to five research buildings.\n    $\\deg(H2) = 1 (\\text{from R}) + 5 (\\text{to buildings}) = 6$.\n\n4.  **Hub H3:** It is connected to R and to the server farm S.\n    $\\deg(H3) = 1 (\\text{from R}) + 1 (\\text{to S}) = 2$.\n\n5.  **Server Farm (S):** It is connected to H3 and to six computing clusters.\n    $\\deg(S) = 1 (\\text{from H3}) + 6 (\\text{to clusters}) = 7$.\n\nThe terminal nodes (research buildings and computing clusters) each have a degree of 1.\n\nThe maximum degree of the graph, $\\Delta(G)$, is the maximum of all these vertex degrees.\n$\\Delta(G) = \\max(\\deg(R), \\deg(H1), \\deg(H2), \\deg(H3), \\deg(S), 1, \\dots, 1)$\n$\\Delta(G) = \\max(3, 3, 6, 2, 7) = 7$.\n\nVizing's theorem states that for any simple graph $G$, the edge chromatic number is either $\\Delta(G)$ or $\\Delta(G) + 1$. Graphs are classified as Class 1 if $\\chi'(G) = \\Delta(G)$ and Class 2 if $\\chi'(G) = \\Delta(G) + 1$.\n\nA fundamental result in graph theory, known as Kőnig's line coloring theorem, states that any bipartite graph is Class 1. Since all trees are bipartite graphs, it follows that every tree is a Class 1 graph.\nOur network graph is a tree, and therefore it is a Class 1 graph. This means its edge chromatic number is equal to its maximum degree.\n\n$\\chi'(G) = \\Delta(G)$\n\nBased on our calculation, $\\Delta(G) = 7$.\nTherefore, the minimum number of colors required is 7.", "answer": "$$\\boxed{7}$$", "id": "1499071"}, {"introduction": "While certain graph structures like trees are straightforward to color, dense graphs often pose a more intricate challenge. This problem explores the edge coloring of the complete graph, $K_n$, a cornerstone of graph theory, framing it within a classic application: scheduling a round-robin tournament or a data-exchange protocol. By working through this famous case, you will discover how a graph's properties—specifically, the parity of its number of vertices—can determine whether it is Class 1 or Class 2, providing deep insight into the structure of optimal schedules. [@problem_id:1499122]", "problem": "A data center operates a cluster of $n$ high-performance servers. For a distributed synchronization task, every server must exchange a data packet with every other server exactly once. The network architecture is a fully-connected topology, where a direct link exists between any two servers. The communication protocol is synchronous, meaning data exchanges are grouped into non-overlapping time slots or \"rounds\". In any single round, a server can participate in at most one data exchange (i.e., communicate with one other server). The engineering challenge is to determine the minimum total number of rounds required to complete all unique pairwise data exchanges for a given number of servers $n$.\n\nThis scheduling problem can be modeled using graph theory. The servers are represented as vertices and the required data exchanges as edges. Since every server must communicate with every other, the graph is a complete graph $K_n$, where an edge exists between every pair of distinct vertices. The rounds of communication correspond to assigning a \"color\" to each edge, where all edges of the same color represent exchanges occurring in the same round. The constraint that a server can only participate in one exchange per round means that no two edges sharing a common vertex can have the same color. The minimum number of rounds required is therefore the edge chromatic number of $K_n$, denoted $\\chi'(K_n)$.\n\nYour task is to determine this value. Consider the cases where $n$ is odd and where $n$ is even separately.\n\n1.  For a cluster with an odd number of servers $n$ (where $n \\geq 3$), what is the minimum number of rounds required? Express your answer in terms of $n$.\n2.  For a cluster with an even number of servers $n$ (where $n \\geq 2$), what is the minimum number of rounds required? Express your answer in terms of $n$.\n\nPresent your final answers as a pair of expressions, with the answer for the odd case first, followed by the answer for the even case.", "solution": "Model the $n$ servers as the complete graph $K_{n}$, with each required exchange as an edge and each round as a color in a proper edge-coloring. In any round, no two edges incident to the same vertex can be used simultaneously, so each round corresponds to a matching. The minimum number of rounds equals the edge chromatic number $\\chi'(K_{n})$.\n\nA general lower bound comes from degrees: at any vertex, all incident edges must receive distinct colors in a proper edge-coloring, hence $\\chi'(G) \\geq \\Delta(G)$. For $K_{n}$, every vertex has degree $\\Delta(K_{n})=n-1$, so\n$$\n\\chi'(K_{n}) \\geq n-1.\n$$\n\nA second lower bound uses the matching-size constraint per round. Each round is a matching of size at most $\\lfloor n/2 \\rfloor$. Since $|E(K_{n})|=\\binom{n}{2}=\\frac{n(n-1)}{2}$, the number of rounds $R$ must satisfy\n$$\nR \\geq \\frac{|E(K_{n})|}{\\lfloor n/2 \\rfloor}.\n$$\nFor odd $n$, $\\lfloor n/2 \\rfloor=\\frac{n-1}{2}$, so\n$$\nR \\geq \\frac{\\frac{n(n-1)}{2}}{\\frac{n-1}{2}}=n.\n$$\nFor even $n$, $\\lfloor n/2 \\rfloor=\\frac{n}{2}$, so\n$$\nR \\geq \\frac{\\frac{n(n-1)}{2}}{\\frac{n}{2}}=n-1.\n$$\n\nTo attain these bounds, we construct edge-colorings with the corresponding numbers of colors. When $n$ is even, $K_{n}$ admits a $1$-factorization: its edge set can be partitioned into $n-1$ perfect matchings. Scheduling one perfect matching per round yields an edge-coloring with $n-1$ colors, so\n$$\n\\chi'(K_{n}) \\leq n-1.\n$$\nCombined with the lower bound, this gives $\\chi'(K_{n})=n-1$ for even $n$.\n\nWhen $n$ is odd, form $K_{n+1}$ by adding a dummy vertex. Since $n+1$ is even, $K_{n+1}$ admits a $1$-factorization into $n$ perfect matchings. Removing the dummy vertex from each perfect matching yields $n$ matchings of size $\\frac{n-1}{2}$ that partition $E(K_{n})$. Hence there is a schedule with $n$ rounds, so\n$$\n\\chi'(K_{n}) \\leq n.\n$$\nCombined with the lower bound $R \\geq n$, this gives $\\chi'(K_{n})=n$ for odd $n$.\n\nTherefore, the minimum number of rounds is $n$ when $n$ is odd, and $n-1$ when $n$ is even.", "answer": "$$\\boxed{\\begin{pmatrix} n & n-1 \\end{pmatrix}}$$", "id": "1499122"}, {"introduction": "Real-world systems are often modular, built by combining simpler components. This final practice problem challenges you to apply and synthesize your knowledge by analyzing a graph constructed from two basic building blocks: an even cycle and an odd cycle. Successfully solving this requires you to manage the local constraints at a high-degree vertex while respecting the distinct coloring properties of each component part. This exercise will sharpen your problem-solving skills by demonstrating how to break down a complex problem into more manageable subproblems. [@problem_id:1499075]", "problem": "In graph theory, an edge coloring of a graph is an assignment of 'colors' to the edges of the graph so that no two edges that share a common vertex are assigned the same color. The edge chromatic number of a graph $G$, denoted by $\\chi'(G)$, is the minimum number of colors required for a valid edge coloring of $G$.\n\nConsider two separate cycle graphs, $C_{m}$ and $C_{n}$, where $C_m$ is a cycle with $m=10$ vertices and $C_n$ is a cycle with $n=7$ vertices. A new graph $G$ is constructed by taking $C_{10}$ and $C_7$ and identifying a single vertex from each. Specifically, one vertex from $C_{10}$ and one vertex from $C_7$ are merged to form a single common vertex in $G$, while all other vertices and edges of the original two cycles are preserved.\n\nDetermine the edge chromatic number, $\\chi'(G)$, of the resulting graph $G$.", "solution": "Let $G$ be obtained by identifying one vertex of $C_{10}$ with one vertex of $C_{7}$. In each cycle, every vertex has degree $2$. After identification, the common vertex $v$ is incident to two edges from $C_{10}$ and two edges from $C_{7}$, so\n$$\n\\Delta(G)=4.\n$$\nIn any proper edge coloring, all edges incident to a vertex must receive distinct colors. Therefore,\n$$\n\\chi'(G)\\geq \\Delta(G)=4.\n$$\n\nWe now show that $4$ colors suffice. By Vizing's Theorem for simple graphs, $\\chi'(G)\\in\\{\\Delta(G),\\Delta(G)+1\\}=\\{4,5\\}$, so it is enough to construct a $4$-edge-coloring.\n\nLabel the four colors as $\\{1,2,3,4\\}$. At the common vertex $v$, assign the two incident edges belonging to $C_{10}$ the colors $1$ and $2$, and the two incident edges belonging to $C_{7}$ the colors $3$ and $4$; all four are distinct at $v$, as required.\n\nConsider $C_{10}$. Since $10$ is even, color the edges of $C_{10}$ alternately with colors $1$ and $2$ around the cycle, starting from the precolored edges at $v$. Because the cycle length is even, this alternating assignment closes consistently, yielding a proper edge coloring of $C_{10}$ using only $\\{1,2\\}$.\n\nConsider $C_{7}$. Attempt to alternate colors $3$ and $4$ around the cycle starting from the precolored edges at $v$. Because the cycle length is odd, the last edge before returning to $v$ would create a conflict if kept alternating. Resolve this by recoloring exactly one such edge (say, the edge adjacent to the two edges colored $3$ and $4$) with a third color chosen from $\\{1,2\\}$. This recoloring is proper at that edge because its two adjacent edges on $C_{7}$ have colors $3$ and $4$, so choosing either $1$ or $2$ avoids any conflict there and elsewhere on $C_{7}$. Thus the entire $C_{7}$ is properly edge-colored using colors from $\\{1,2,3,4\\}$ and remains compatible at $v$ because the two edges of $C_{7}$ incident to $v$ retain colors $3$ and $4$.\n\nTherefore, a proper edge coloring of $G$ with $4$ colors exists, so\n$$\n\\chi'(G)\\leq 4.\n$$\n\nCombining the lower and upper bounds,\n$$\n\\chi'(G)=4.\n$$", "answer": "$$\\boxed{4}$$", "id": "1499075"}]}