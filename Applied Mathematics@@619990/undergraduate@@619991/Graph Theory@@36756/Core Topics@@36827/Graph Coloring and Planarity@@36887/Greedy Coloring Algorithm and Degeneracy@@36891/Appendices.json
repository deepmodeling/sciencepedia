{"hands_on_practices": [{"introduction": "Understanding a graph's structure begins with quantifying its properties, and degeneracy is a fundamental measure of its sparsity. This exercise invites you to calculate the degeneracy of a highly symmetric and familiar structure: the graph of a cube. By analyzing this 3-regular graph, you will gain direct practice applying the definition of degeneracy and discovering its relationship to the vertex degrees within the graph and its subgraphs [@problem_id:1509687].", "id": "1509687", "problem": "In network theory, the structure of a connection graph can be characterized by a property known as degeneracy. Consider a simple undirected graph $G=(V, E)$ constructed to model a point-to-point network. The set of vertices $V$ corresponds to the eight corners of a physical cube. An edge exists in the set $E$ between two vertices if and only if the corresponding corners of the cube are connected by an edge of the cube.\n\nA graph is said to be $k$-degenerate if every induced subgraph of the graph has a vertex of degree at most $k$. The degeneracy of a graph is the smallest integer $k$ for which it is $k$-degenerate.\n\nDetermine the degeneracy of the graph $G$.\n\n", "solution": "Let $G$ be the graph representing the vertices and edges of a cube. We need to find the degeneracy of $G$. The degeneracy is the smallest integer $k$ such that every induced subgraph of $G$ has a vertex of degree at most $k$.\n\nFirst, let's characterize the graph $G$. The cube has 8 vertices and 12 edges. In the corresponding graph $G$, there are $|V|=8$ vertices. Each vertex (corner) of the cube is connected to exactly three other vertices (corners) via edges. Therefore, every vertex in the graph $G$ has a degree of 3. A graph where every vertex has the same degree is called a regular graph. In this case, $G$ is a 3-regular graph.\n\nLet's establish a lower bound for the degeneracy of $G$. Let the degeneracy of $G$ be $k_{deg}$. By definition, every induced subgraph of $G$ must have a vertex of degree at most $k_{deg}$. The graph $G$ itself is an induced subgraph of $G$ (induced by all vertices $V$). The minimum degree of any vertex in $G$ is $\\delta(G) = 3$. Since $G$ must contain a vertex of degree at most $k_{deg}$, it must be that $k_{deg} \\ge \\delta(G)$.\nTherefore, we have $k_{deg} \\ge 3$. This means the degeneracy of the cube graph is at least 3.\n\nNext, let's establish an upper bound for the degeneracy. A useful property of degeneracy is that for any finite graph $G$, its degeneracy is equal to the maximum, over all induced subgraphs $H$ of $G$, of the minimum degree $\\delta(H)$ of the subgraph. An equivalent characterization is based on a vertex ordering. A graph is $k$-degenerate if and only if there exists an ordering of its vertices, $v_1, v_2, \\ldots, v_n$, such that each vertex $v_i$ has at most $k$ neighbors among the vertices that appear later in the ordering, i.e., in the set $\\{v_{i+1}, v_{i+2}, \\ldots, v_n\\}$.\n\nLet us consider any arbitrary ordering of the 8 vertices of our graph $G$. For any vertex $v_i$ in this ordering, the number of its neighbors that appear later in the sequence, $|\\{v_j \\mid j>i \\text{ and } (v_i, v_j) \\in E\\}|$, is by definition less than or equal to its total degree in $G$, which is $\\deg_G(v_i)$.\nSince $G$ is a 3-regular graph, the degree of every vertex is 3. Thus, for any vertex $v_i$ in any ordering, it can have at most 3 neighbors that follow it in the ordering.\nThis means that for any ordering of vertices, the condition for 3-degeneracy is met. Therefore, the degeneracy of $G$ is at most 3. So, $k_{deg} \\le 3$.\n\nCombining our two results, we have established that $k_{deg} \\ge 3$ and $k_{deg} \\le 3$. The only integer that satisfies both inequalities is 3.\n\nThus, the degeneracy of the graph formed by the vertices and edges of a cube is 3.", "answer": "$$\\boxed{3}$$"}, {"introduction": "Abstract graph concepts often have tangible applications in modeling real-world systems and processes. This problem presents a scenario of decommissioning a data center network, which elegantly translates into finding the degeneracy of a complete bipartite graph, $K_{m,n}$ [@problem_id:1509708]. By determining the \"decommissioning complexity,\" you are, in fact, finding the graph's degeneracy, providing a powerful and intuitive link between an iterative algorithm and a core graph property.", "id": "1509708", "problem": "A technology company is in the process of decommissioning a legacy data center. The architecture of this center consists of two distinct types of machines: a set of $m$ primary servers and a set of $n$ secondary storage units. The system was designed for high redundancy, such that every primary server is connected to every secondary storage unit. There are no direct connections between two primary servers or between two secondary storage units. For this particular system, it is known that the number of primary servers is less than or equal to the number of secondary storage units, i.e., $m \\le n$, and there are at least three of each type of machine ($m \\ge 3$ and $n \\ge 3$).\n\nThe decommissioning protocol is an iterative process. In each step, a technician must select one of the currently running machines that has the minimum number of active connections to other running machines. This selected machine is then powered down and removed from the network.\n\nThe \"decommissioning complexity\" is a metric used to quantify the risk of this procedure. It is defined as the maximum number of active connections any single machine had at the exact moment it was selected to be powered down, over the entire course of the shutdown process.\n\nDetermine the decommissioning complexity for this system. Express your answer as an analytic expression in terms of $m$ and $n$.\n\n", "solution": "Model the network as the complete bipartite graph $K_{m,n}$ with parts $P$ (size $m$) and $S$ (size $n$). Each vertex in $P$ has degree $n$ and each vertex in $S$ has degree $m$. The removal rule says: at each step, remove a vertex with the minimum current degree. The degree of any selected vertex at its removal moment is therefore equal to the current minimum degree $\\delta$ of the remaining graph.\n\nInitially, since $m \\le n$, the minimum degree is\n$$\n\\delta\\big(K_{m,n}\\big)=\\min\\{m,n\\}=m,\n$$\nso the first removed vertex must lie in $S$ and has degree $m$ at removal.\n\nAfter removing $k$ vertices from $S$ (for some $k$ with $0 \\le k \\le n$), the remaining graph is $K_{m,n-k}$, whose minimum degree is\n$$\n\\delta\\big(K_{m,n-k}\\big)=\\min\\{m,n-k\\}.\n$$\nAs long as $n-k \\ge m$, i.e., for all $k$ with $0 \\le k \\le n-m$, we have\n$$\n\\delta\\big(K_{m,n-k}\\big)=m,\n$$\nso each vertex removed in these steps has degree $m$ at removal.\n\nWhen $k=n-m$, the graph is $K_{m,m}$ and still $\\delta=m$, so the next removed vertex has degree $m$. After one more removal, the graph becomes $K_{m,m-1}$ (or symmetrically $K_{m-1,m}$), and then the minimum degree drops to\n$$\n\\delta\\big(K_{m,m-1}\\big)=m-1.\n$$\nFrom this point onward, the minimum degree decreases further with subsequent removals.\n\nTherefore, the maximum degree any selected vertex ever has at its removal moment (the decommissioning complexity) is\n$$\n\\max\\{\\delta\\text{ over the process}\\}=m.\n$$\nEquivalently, this equals the degeneracy of $K_{m,n}$, which is $\\min\\{m,n\\}=m$ under the given condition $m \\le n$.", "answer": "$$\\boxed{m}$$"}, {"introduction": "The greedy coloring algorithm is simple and fast, but its performance is deeply tied to the order in which vertices are processed. This exercise demonstrates a crucial concept: a seemingly intuitive ordering, such as by descending vertex degree, is not always optimal and can lead to using more colors than necessary. By comparing the outcomes of two different vertex orderings, you will see firsthand why understanding graph structure through concepts like degeneracy is key to developing efficient coloring strategies [@problem_id:1509692].", "id": "1509692", "problem": "A graph $G$ is constructed on 21 vertices. The vertices are partitioned into a \"core\" set $C = \\{A_1, A_2, A_3, B_1, B_2, B_3\\}$ and an \"appendage\" set.\n\nThe connections among the core vertices are defined as follows: the vertex sets $\\{A_1, A_2, A_3\\}$ and $\\{B_1, B_2, B_3\\}$ are each independent sets (i.e., there are no edges between any two vertices within the same set). An edge exists between a vertex $A_i$ and a vertex $B_j$ if and only if their indices are different ($i \\neq j$), for $i, j \\in \\{1, 2, 3\\}$.\n\nTo this 6-vertex core, 15 appendage vertices are added and connected only to the core vertices in the following manner:\n- A set of 5 appendage vertices are each connected only to core vertex $A_1$.\n- A set of 4 appendage vertices are each connected only to core vertex $B_1$.\n- A set of 3 appendage vertices are each connected only to core vertex $A_2$.\n- A set of 2 appendage vertices are each connected only to core vertex $B_2$.\n- A set of 1 appendage vertex is connected only to core vertex $A_3$.\n- The core vertex $B_3$ has no appendage vertices connected to it.\n\nThe sequential coloring algorithm is applied to this graph $G$. This algorithm processes vertices in a given sequence, assigning to each vertex the smallest positive integer color that has not already been used by any of its neighbors.\n\nLet $k_1$ be the number of colors used by the algorithm when the vertices are ordered by descending degree. Let $k_2$ be the number of colors used when applying the algorithm to the specific vertex ordering $\\pi_2 = (A_1, A_2, A_3, B_1, B_2, B_3, \\text{followed by all 15 appendage vertices in any arrangement})$.\n\nWhich of the following options correctly states the values of $(k_1, k_2)$?\n\nA) $k_1 = 2, k_2 = 2$\nB) $k_1 = 2, k_2 = 3$\nC) $k_1 = 3, k_2 = 2$\nD) $k_1 = 3, k_2 = 3$\nE) $k_1 = 4, k_2 = 2$\n\n", "solution": "Let the core be $C=\\{A_{1},A_{2},A_{3},B_{1},B_{2},B_{3}\\}$ with edges only between $A_{i}$ and $B_{j}$ for $i\\neq j$, and no edges within $\\{A_{1},A_{2},A_{3}\\}$ or within $\\{B_{1},B_{2},B_{3}\\}$. Each $A_{i}$ has $2$ neighbors in the core, and similarly each $B_{j}$ has $2$ neighbors in the core. Appendages connect only to their specified core vertex. Therefore the total degrees are\n$$\n\\deg(A_{1})=2+5=7,\\quad \\deg(B_{1})=2+4=6,\\quad \\deg(A_{2})=2+3=5,\\quad \\deg(B_{2})=2+2=4,\\quad \\deg(A_{3})=2+1=3,\\quad \\deg(B_{3})=2+0=2,\n$$\nand each appendage has degree $1$.\n\nFor $k_{1}$ (descending degree order), the order is uniquely $A_{1},B_{1},A_{2},B_{2},A_{3},B_{3}$, followed by all degree-$1$ appendages. Apply the greedy rule (smallest positive integer not used by colored neighbors):\n- $A_{1}$ has no colored neighbors, so it gets color $1$.\n- $B_{1}$ is not adjacent to $A_{1}$ and has no colored neighbors, so it gets color $1$.\n- $A_{2}$ is adjacent to $B_{1}$ (color $1$), so it gets color $2$.\n- $B_{2}$ is adjacent to $A_{1}$ (color $1$), so it gets color $2$.\n- $A_{3}$ is adjacent to $B_{1}$ (color $1$) and $B_{2}$ (color $2$), so it gets color $3$.\n- $B_{3}$ is adjacent to $A_{1}$ (color $1$) and $A_{2}$ (color $2$), so it gets color $3$.\nEach appendage is adjacent to exactly one core vertex and thus receives either color $1$ or $2$, so no new color is introduced. Hence $k_{1}=3$.\n\nFor $k_{2}$ with the order $\\pi_{2}=(A_{1},A_{2},A_{3},B_{1},B_{2},B_{3},\\text{appendages})$:\n- $A_{1},A_{2},A_{3}$ each sees no colored neighbor when processed, so all receive color $1$.\n- $B_{1}$ is adjacent to $A_{2}$ and $A_{3}$, both color $1$, so $B_{1}$ gets color $2$.\n- $B_{2}$ is adjacent to $A_{1}$ and $A_{3}$, both color $1$, so $B_{2}$ gets color $2$.\n- $B_{3}$ is adjacent to $A_{1}$ and $A_{2}$, both color $1$, so $B_{3}$ gets color $2$.\nAgain, appendages get only colors $1$ or $2$. Hence $k_{2}=2$.\n\nTherefore $(k_{1},k_{2})=(3,2)$, which corresponds to option C.", "answer": "$$\\boxed{C}$$"}]}