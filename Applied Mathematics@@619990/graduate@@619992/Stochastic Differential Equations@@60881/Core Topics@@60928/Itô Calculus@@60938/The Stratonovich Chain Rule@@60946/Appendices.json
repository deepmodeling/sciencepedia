{"hands_on_practices": [{"introduction": "To truly grasp the Stratonovich chain rule, we begin with its most fundamental application: the composition of functions. This exercise challenges you to derive the differential for a process $Z_t = g(f(X_t))$ from first principles. The goal is to demonstrate how the symmetric nature of the Stratonovich integral preserves the classical chain rule's form and to contrast this directly with the Itô counterpart, which famously includes a second-order term. This practice builds foundational skills in the Taylor series expansions that underpin both calculi [@problem_id:3003853].", "problem": "Let $(\\Omega,\\mathcal{F},(\\mathcal{F}_t)_{t\\ge 0},\\mathbb{P})$ be a filtered probability space supporting a standard Brownian motion $W_t$. Consider the one-dimensional stochastic differential equation (SDE) in the Itô sense\n$$\ndX_t = \\mu(X_t)\\,dt + \\sigma(X_t)\\,dW_t,\n$$\nwhere $\\mu,\\sigma:\\mathbb{R}\\to\\mathbb{R}$ are continuously differentiable functions with bounded derivatives, and let $f,g\\in C^2(\\mathbb{R})$. Define $Y_t := f(X_t)$ and $Z_t := g(Y_t) = g(f(X_t))$.\n\nStarting from the fundamental definitions of the Itô integral as a limit of left-point Riemann sums and the Stratonovich integral as a limit of midpoint Riemann sums, together with the quadratic variation property of Brownian motion, derive the differential of $Z_t$ under the Stratonovich interpretation by systematically expanding $g$ and $f$ to second order. Use this derivation to express $dZ_t$ in terms of $dX_t$ as a Stratonovich differential. Then, starting from the Itô form of $dX_t$ and using second-order Taylor expansions together with $dW_t^2=dt$, derive the Itô differential of $Z_t$ and identify its drift and diffusion coefficients explicitly in terms of $\\mu,\\sigma,f,g$ and their derivatives evaluated along $X_t$.\n\nProvide, as your final answer, the explicit analytic expression for the Itô drift coefficient of $Z_t=g(f(X_t))$ purely in terms of $x$, $\\mu(x)$, $\\sigma(x)$, $f(x)$, $g(x)$, and their derivatives. Your answer must be a single closed-form expression; no equations or inequalities are permitted in the final answer box.", "solution": "The problem is valid as it is scientifically grounded in the theory of stochastic differential equations, is well-posed with sufficient information for a unique solution, and is stated using objective, precise mathematical language. We shall proceed with the derivation as requested.\n\nThe problem asks for two related derivations concerning the stochastic process $Z_t = g(f(X_t))$, where $X_t$ follows the Itô SDE $dX_t = \\mu(X_t)\\,dt + \\sigma(X_t)\\,dW_t$.\n\nFirst, we will address the Stratonovich chain rule. The Stratonovich integral of a process $F_t$ with respect to another process $Y_t$ is defined as the limit of sums involving midpoint evaluations, which for a partition $0 = t_0 < t_1 < \\dots < t_n = T$ is typically defined as\n$$ \\int_0^T F_s \\circ dY_s = \\lim_{|\\Pi|\\to 0} \\sum_{i=0}^{n-1} F\\left(\\frac{t_i+t_{i+1}}{2}\\right) (Y_{t_{i+1}}-Y_{t_i}) $$\nThe key property of this definition is its symmetry, which causes it to behave like ordinary calculus under transformations. Let $h(x) = g(f(x))$. To find the differential $dZ_t = d(h(X_t))$ in the Stratonovich sense, we consider the increment $\\Delta Z_t = h(X_{t+\\Delta t}) - h(X_t)$. A Taylor expansion around a midpoint, combined with the symmetric properties of Brownian motion increments, shows that the second-order terms that appear in Itô's formula are precisely cancelled by the choice of the midpoint evaluation. This leads to a chain rule that has the same form as in ordinary differential calculus.\nFor $Y_t = f(X_t)$, the Stratonovich differential is $dY_t = f'(X_t) \\circ dX_t$.\nFor $Z_t = g(Y_t)$, the Stratonovich differential is $dZ_t = g'(Y_t) \\circ dY_t$.\nSubstituting the first expression into the second, and recognizing that the Stratonovich calculus obeys the standard product and chain rules, we obtain:\n$$ dZ_t = g'(f(X_t)) \\circ (f'(X_t) \\circ dX_t) = g'(f(X_t)) f'(X_t) \\circ dX_t $$\nUsing the notation $h(x) = g(f(x))$, we have $h'(x) = g'(f(x))f'(x)$ by the ordinary chain rule. Therefore, the Stratonovich differential of $Z_t$ is:\n$$ dZ_t = (g \\circ f)'(X_t) \\circ dX_t $$\nThis demonstrates that the Stratonovich chain rule maintains the form of the classical chain rule.\n\nNext, we derive the Itô differential of $Z_t = g(f(X_t))$. We will proceed in two steps, as is natural for a composite function. This approach relies on applying second-order Taylor expansions and the fundamental Itô calculus rule $(dW_t)^2 = dt$.\n\nStep 1: Find the Itô differential of $Y_t = f(X_t)$.\nWe start with the differential of $X_t$:\n$$ dX_t = \\mu(X_t)\\,dt + \\sigma(X_t)\\,dW_t $$\nTo find $dY_t$, we use Itô's lemma, which is derived from a Taylor expansion of $f(X_t)$. The change $\\Delta Y_t$ over a small time interval $\\Delta t$ is $\\Delta Y_t = f(X_{t+\\Delta t}) - f(X_t)$. Expanding $f$ to second order around $X_t$:\n$$ \\Delta Y_t \\approx f'(X_t) \\Delta X_t + \\frac{1}{2} f''(X_t) (\\Delta X_t)^2 $$\nIn the limit $dt \\to 0$, we have $\\Delta X_t \\to dX_t$. We compute $(dX_t)^2$:\n$$ (dX_t)^2 = (\\mu(X_t)\\,dt + \\sigma(X_t)\\,dW_t)^2 = \\mu^2(X_t)(dt)^2 + 2\\mu(X_t)\\sigma(X_t)dt\\,dW_t + \\sigma^2(X_t)(dW_t)^2 $$\nUsing the Itô multiplication rules $dt \\cdot dt = 0$, $dt \\cdot dW_t = 0$, and $dW_t \\cdot dW_t = dt$, we find:\n$$ (dX_t)^2 = \\sigma^2(X_t)\\,dt $$\nSubstituting $dX_t$ and $(dX_t)^2$ into the expansion for $dY_t$:\n$$ dY_t = f'(X_t) (\\mu(X_t)\\,dt + \\sigma(X_t)\\,dW_t) + \\frac{1}{2} f''(X_t) (\\sigma^2(X_t)\\,dt) $$\nCollecting the $dt$ (drift) and $dW_t$ (diffusion) terms, we obtain the SDE for $Y_t$:\n$$ dY_t = \\left( f'(X_t)\\mu(X_t) + \\frac{1}{2}f''(X_t)\\sigma^2(X_t) \\right)dt + f'(X_t)\\sigma(X_t)\\,dW_t $$\n\nStep 2: Find the Itô differential of $Z_t = g(Y_t)$.\nWe now apply the same procedure to $Z_t = g(Y_t)$, using the SDE for $Y_t$ we just derived. Let's denote the drift and diffusion of $Y_t$ as:\n$$ \\mu_Y(t, X_t) = f'(X_t)\\mu(X_t) + \\frac{1}{2}f''(X_t)\\sigma^2(X_t) $$\n$$ \\sigma_Y(t, X_t) = f'(X_t)\\sigma(X_t) $$\nSo, $dY_t = \\mu_Y\\,dt + \\sigma_Y\\,dW_t$. Applying Itô's lemma to $Z_t=g(Y_t)$:\n$$ dZ_t = g'(Y_t)\\,dY_t + \\frac{1}{2}g''(Y_t)(dY_t)^2 $$\nWe need to compute $(dY_t)^2$:\n$$ (dY_t)^2 = (\\mu_Y\\,dt + \\sigma_Y\\,dW_t)^2 = \\sigma_Y^2(dW_t)^2 = \\sigma_Y^2\\,dt $$\nSubstituting the expression for $\\sigma_Y$:\n$$ (dY_t)^2 = (f'(X_t)\\sigma(X_t))^2\\,dt = (f'(X_t))^2\\sigma^2(X_t)\\,dt $$\nNow, we substitute the expressions for $dY_t$ and $(dY_t)^2$ back into the formula for $dZ_t$. Remember that $Y_t=f(X_t)$:\n$$ dZ_t = g'(f(X_t)) \\left( (\\mu_Y)\\,dt + (\\sigma_Y)\\,dW_t \\right) + \\frac{1}{2} g''(f(X_t)) \\left( (f'(X_t))^2\\sigma^2(X_t)\\,dt \\right) $$\nSubstituting the full expressions for $\\mu_Y$ and $\\sigma_Y$:\n$$ dZ_t = g'(f(X_t)) \\left( \\left( f'(X_t)\\mu(X_t) + \\frac{1}{2}f''(X_t)\\sigma^2(X_t) \\right)dt + f'(X_t)\\sigma(X_t)\\,dW_t \\right) + \\frac{1}{2} g''(f(X_t)) (f'(X_t))^2\\sigma^2(X_t)\\,dt $$\nFinally, we collect all the $dt$ and $dW_t$ terms to identify the drift and diffusion coefficients of $Z_t$:\nThe diffusion term is:\n$$ \\left( g'(f(X_t))f'(X_t)\\sigma(X_t) \\right)dW_t $$\nThe drift term is:\n$$ \\left( g'(f(X_t)) \\left( f'(X_t)\\mu(X_t) + \\frac{1}{2}f''(X_t)\\sigma^2(X_t) \\right) + \\frac{1}{2} g''(f(X_t)) (f'(X_t))^2\\sigma^2(X_t) \\right)dt $$\nExpanding and regrouping the drift coefficient gives:\n$$ g'(f(X_t))f'(X_t)\\mu(X_t) + \\frac{1}{2}g'(f(X_t))f''(X_t)\\sigma^2(X_t) + \\frac{1}{2}g''(f(X_t))(f'(X_t))^2\\sigma^2(X_t) $$\nWe can factor out $\\sigma^2(X_t)$:\n$$ g'(f(X_t))f'(X_t)\\mu(X_t) + \\frac{1}{2}\\sigma^2(X_t) \\left( g'(f(X_t))f''(X_t) + g''(f(X_t))(f'(X_t))^2 \\right) $$\nThis expression is the Itô drift coefficient of $Z_t=g(f(X_t))$. Note that the term in the brackets is precisely the second derivative of the composite function $h(x) = g(f(x))$, i.e., $h''(x) = g''(f(x))(f'(x))^2 + g'(f(x))f''(x)$. The drift is thus $(g \\circ f)'(X_t)\\mu(X_t) + \\frac{1}{2}(g \\circ f)''(X_t)\\sigma^2(X_t)$, which is consistent with a direct application of Itô's lemma to $h(X_t)$.\n\nThe problem asks for the explicit analytic expression for the Itô drift coefficient of $Z_t$ in terms of a generic state variable $x$. Replacing $X_t$ with $x$ yields the final expression for the drift coefficient.", "answer": "$$\n\\boxed{g'(f(x))f'(x)\\mu(x) + \\frac{1}{2}\\sigma^{2}(x)\\left( g''(f(x))(f'(x))^{2} + g'(f(x))f''(x) \\right)}\n$$", "id": "3003853"}, {"introduction": "Having mastered the rule for function composition, we now extend our practice to the product of two functions, $d(f(X_t)g(X_t))$. Just as with the chain rule, Stratonovich calculus provides a product rule that elegantly mirrors the structure of ordinary calculus. In this exercise, you will combine the chain and product rules in the Stratonovich framework and then perform the conversion to the Itô form. This process offers a rigorous test of your algebraic skills and deepens your understanding of how the covariation terms arise when translating between the two systems [@problem_id:3003921].", "problem": "Let $\\{W_t^i\\}_{i=1}^{m}$ be independent standard Brownian motions, and let $X_t \\in \\mathbb{R}^{n}$ solve the Stratonovich stochastic differential equation\n$$\ndX_t \\;=\\; a(X_t)\\,dt \\;+\\; \\sum_{i=1}^{m} b_i(X_t)\\,\\circ dW_t^i,\n$$\nwhere $a:\\mathbb{R}^{n}\\to\\mathbb{R}^{n}$ and $b_i:\\mathbb{R}^{n}\\to\\mathbb{R}^{n}$ are $\\mathcal{C}^{2}$ vector fields with at most linear growth to ensure existence and uniqueness of a strong solution. Let $f,g:\\mathbb{R}^{n}\\to\\mathbb{R}$ be $\\mathcal{C}^{2}$ functions. Denote by $\\nabla f$ the gradient (as a column vector), by $H_f$ the Hessian matrix of $f$, and by $D b_i$ the Jacobian matrix of the vector field $b_i$.\n\nUsing only the fundamental facts that Stratonovich calculus obeys the ordinary chain rule and product rule, first compute the Stratonovich differential of $Y_t := f(X_t)\\,g(X_t)$ and then convert your result into the Itô form by explicitly computing the quadratic covariation corrections from first principles. Your derivation must start from the definitions of the Stratonovich product rule and chain rule and the covariation rule $d\\langle U,V\\rangle_t = \\sum_{k=1}^{m} \\beta_k^{U}(t)\\,\\beta_k^{V}(t)\\,dt$ when $dU_t$ and $dV_t$ have diffusion coefficients $\\{\\beta_k^{U}(t)\\}$ and $\\{\\beta_k^{V}(t)\\}$ with respect to $\\{dW_t^k\\}_{k=1}^{m}$.\n\nExpress the final Itô differential $d(f(X_t)g(X_t))$ in terms of $a$, $b_i$, $\\nabla f$, $\\nabla g$, $H_f$, and $H_g$, evaluated at $X_t$. Do not leave any stochastic covariation terms unevaluated. In your final answer, provide only the right-hand side expression of the Itô differential (that is, give the drift and diffusion terms without writing an equality). No numerical approximation is required, and no units are involved.", "solution": "The user wants to find the Itô differential of the process $Y_t = f(X_t)g(X_t)$, where $X_t$ follows the Stratonovich SDE:\n$$\ndX_t = a(X_t)\\,dt + \\sum_{i=1}^{m} b_i(X_t)\\,\\circ dW_t^i\n$$\nThe derivation must follow a specific path: first, determine the Stratonovich differential of $Y_t$ using the ordinary chain and product rules, and then convert this to Itô form by explicitly computing the quadratic covariation correction term. All functions are evaluated at $X_t$, so this argument will be suppressed for brevity.\n\n**Part 1: Stratonovich Differential of $Y_t = f(X_t)g(X_t)$**\n\nStratonovich calculus obeys the same rules as ordinary calculus. We begin with the product rule for differentiation applied to $Y_t = fg$:\n$$\ndY_t = d(fg) = f \\circ d(g) + g \\circ d(f)\n$$\nNext, we apply the chain rule to find the differentials $d(f)$ and $d(g)$. The Stratonovich chain rule for a scalar function $h(X_t)$ is $d(h(X_t)) = \\nabla h^T \\circ dX_t$, where $\\nabla h$ is the gradient of $h$. Applying this to $f$ and $g$:\n$$\nd(f(X_t)) = \\nabla f^T \\circ dX_t \\quad \\text{and} \\quad d(g(X_t)) = \\nabla g^T \\circ dX_t\n$$\nSubstituting the given Stratonovich SDE for $dX_t$:\n$$\nd(f) = \\nabla f^T \\left( a\\,dt + \\sum_{i=1}^{m} b_i\\,\\circ dW_t^i \\right) = (\\nabla f^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla f^T b_i)\\,\\circ dW_t^i\n$$\n$$\nd(g) = \\nabla g^T \\left( a\\,dt + \\sum_{i=1}^{m} b_i\\,\\circ dW_t^i \\right) = (\\nabla g^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla g^T b_i)\\,\\circ dW_t^i\n$$\nHere, $\\nabla f^T a$, $\\nabla g^T a$, $\\nabla f^T b_i$, and $\\nabla g^T b_i$ are all scalar quantities resulting from the dot product of a gradient vector (transposed) and another vector.\n\nNow, we substitute these expressions back into the product rule for $dY_t$:\n$$\ndY_t = f \\left( (\\nabla g^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla g^T b_i)\\,\\circ dW_t^i \\right) + g \\left( (\\nabla f^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla f^T b_i)\\,\\circ dW_t^i \\right)\n$$\nGrouping the $dt$ and $\\circ dW_t^i$ terms:\n$$\ndY_t = \\left( f \\nabla g^T a + g \\nabla f^T a \\right) dt + \\sum_{i=1}^{m} \\left( f \\nabla g^T b_i + g \\nabla f^T b_i \\right) \\circ dW_t^i\n$$\nUsing the product rule for gradients, $\\nabla(fg)^T = f \\nabla g^T + g \\nabla f^T$, we can write this more compactly. Let $h(x) = f(x)g(x)$, so $\\nabla h^T = \\nabla(fg)^T$. The Stratonovich differential for $Y_t=h(X_t)$ is:\n$$\ndY_t = (\\nabla h^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla h^T b_i)\\,\\circ dW_t^i\n$$\n\n**Part 2: Conversion to Itô Form**\n\nTo convert a Stratonovich integral to an Itô integral, we use the relation $A_t \\circ dW_t = A_t dW_t + \\frac{1}{2} d\\langle A, W \\rangle_t$. Applying this to each term in the sum of our Stratonovich SDE for $Y_t$:\n$$\ndY_t = (\\nabla h^T a)\\,dt + \\sum_{i=1}^{m} (\\nabla h^T b_i)\\,dW_t^i + \\frac{1}{2} \\sum_{i=1}^{m} d\\langle \\nabla h^T b_i, W^i \\rangle_t\n$$\nThe Itô form is obtained by computing the quadratic covariation (correction) term, $\\frac{1}{2} \\sum_{i=1}^{m} d\\langle \\nabla h^T b_i, W^i \\rangle_t$, and adding it to the drift. Let $\\phi_i(X_t) = (\\nabla h^T b_i)(X_t)$. We need to compute $d\\langle \\phi_i(X), W^i \\rangle_t$.\n\nThe problem provides the rule $d\\langle U,V\\rangle_t = \\sum_{k=1}^{m} \\beta_k^{U}(t)\\,\\beta_k^{V}(t)\\,dt$, where $\\beta_k^U$ and $\\beta_k^V$ are the diffusion coefficients of $U$ and $V$ with respect to $dW_t^k$.\nFor $V_t = W_t^i$, its SDE is $dW_t^i = \\sum_{k=1}^m \\delta_{ik} dW_t^k$, so its diffusion coefficients are $\\beta_k^{W^i} = \\delta_{ik}$.\nFor $U_t = \\phi_i(X_t)$, we must find its diffusion coefficients by computing its Itô differential. Using Itô's formula for a scalar function $\\phi_i$ of the process $X_t$ (whose Itô SDE has diffusion matrix $[b_1, \\dots, b_m]$):\n$$\nd\\phi_i(X_t) = (\\text{drift term})\\,dt + \\sum_{k=1}^{m} (\\nabla\\phi_i^T b_k)\\,dW_t^k\n$$\nThus, the diffusion coefficients of $\\phi_i(X_t)$ are $\\beta_k^{\\phi_i} = \\nabla\\phi_i^T b_k$.\n\nApplying the covariation rule:\n$$\nd\\langle \\phi_i(X), W^i \\rangle_t = \\sum_{k=1}^{m} \\beta_k^{\\phi_i} \\beta_k^{W^i} dt = \\sum_{k=1}^{m} (\\nabla\\phi_i^T b_k) \\delta_{ik} dt = (\\nabla\\phi_i^T b_i) dt\n$$\nThe total correction to the drift is $\\frac{1}{2} \\sum_{i=1}^{m} (\\nabla\\phi_i^T b_i) dt = \\frac{1}{2}\\sum_{i=1}^{m} (\\nabla(\\nabla h^T b_i)^T b_i) dt$.\n\nWe must now compute the gradient term $\\nabla(\\nabla h^T b_i)$. Using the product rule for gradients $\\nabla(u^T v) = (Du)^T v + (Dv)^T u$, we set $u = \\nabla h$ and $v = b_i$. The Jacobian of $\\nabla h$ is the Hessian matrix $H_h$.\n$$\n\\nabla(\\nabla h^T b_i) = H_h^T b_i + (Db_i)^T \\nabla h = H_h b_i + (Db_i)^T \\nabla h\n$$\nHere we used the fact that Hessian matrices are symmetric, $H_h^T = H_h$.\nThe correction term inside the sum is then:\n$$\n(\\nabla(\\nabla h^T b_i)^T b_i) = (H_h b_i + (Db_i)^T \\nabla h)^T b_i = (b_i^T H_h^T + \\nabla h^T Db_i) b_i = b_i^T H_h b_i + \\nabla h^T (Db_i) b_i\n$$\nThe total correction added to the drift is $\\frac{1}{2}\\sum_{i=1}^{m} \\left( b_i^T H_h b_i + \\nabla h^T (Db_i) b_i \\right) dt$.\n\nThe full Itô drift term is the sum of the Stratonovich drift and this correction:\n$$\n\\text{Drift}_{\\text{Itô}} = \\nabla h^T a + \\frac{1}{2}\\sum_{i=1}^{m} \\left( \\nabla h^T (Db_i) b_i + b_i^T H_h b_i \\right)\n$$\nThe Itô diffusion term does not change from the Stratonovich one, except for notation:\n$$\n \\text{Diffusion}_{\\text{Itô}} = \\sum_{i=1}^{m} (\\nabla h^T b_i)\\,dW_t^i\n$$\n\n**Part 3: Final Expression**\n\nFinally, we substitute $h = fg$ back into the Itô differential. We have:\n$\\nabla h = \\nabla(fg) = f\\nabla g + g\\nabla f$.\n$H_h = H_{fg} = fH_g + gH_f + \\nabla f \\nabla g^T + \\nabla g \\nabla f^T$.\n\nThe diffusion term becomes:\n$$\n\\sum_{i=1}^{m} (\\nabla (fg)^T b_i) dW_t^i = \\sum_{i=1}^{m} (f \\nabla g^T b_i + g \\nabla f^T b_i) dW_t^i\n$$\nThe drift term requires we substitute $\\nabla h$ and $H_h$:\n$$\n\\text{Drift}_{\\text{Itô}} = (f \\nabla g^T + g \\nabla f^T)a + \\frac{1}{2}\\sum_{i=1}^{m}\\left[ (f \\nabla g^T + g \\nabla f^T)(Db_i)b_i + b_i^T(fH_g + gH_f + \\nabla f \\nabla g^T + \\nabla g \\nabla f^T)b_i \\right]\n$$\nExpanding and reorganizing the terms in the sum:\n$$\n\\text{Summand} = f \\nabla g^T(Db_i)b_i + g \\nabla f^T(Db_i)b_i + f b_i^T H_g b_i + g b_i^T H_f b_i + b_i^T \\nabla f \\nabla g^T b_i + b_i^T \\nabla g \\nabla f^T b_i\n$$\nThe last two terms are scalars and can be rewritten as $(\\nabla f^T b_i)(\\nabla g^T b_i)$, so their sum is $2(\\nabla f^T b_i)(\\nabla g^T b_i)$.\nThis yields:\n$$\n\\text{Drift}_{\\text{Itô}} = f \\nabla g^T a + g \\nabla f^T a + \\frac{1}{2}\\sum_{i=1}^{m}\\left[ f \\nabla g^T(Db_i)b_i + g \\nabla f^T(Db_i)b_i + f b_i^T H_g b_i + g b_i^T H_f b_i + 2(\\nabla f^T b_i)(\\nabla g^T b_i) \\right]\n$$\nRearranging the terms:\n$$\n\\text{Drift}_{\\text{Itô}} = f\\nabla g^T a + g\\nabla f^T a + \\sum_{i=1}^m (\\nabla f^T b_i)(\\nabla g^T b_i) + \\frac{1}{2}\\sum_{i=1}^{m}\\left[ g \\left( \\nabla f^T (Db_i)b_i + b_i^T H_f b_i \\right) + f \\left( \\nabla g^T (Db_i)b_i + b_i^T H_g b_i \\right) \\right]\n$$\nThis is the complete expression for the drift. The final Itô differential is the sum of the drift term (multiplied by $dt$) and the diffusion term.\nThe right-hand side of the Itô differential for $d(f(X_t)g(X_t))$ is thus:\n$$\n\\left( g \\nabla f^T a + f \\nabla g^T a + \\sum_{i=1}^{m} (\\nabla f^T b_i)(\\nabla g^T b_i) + \\frac{1}{2} \\sum_{i=1}^{m} \\left( g (\\nabla f^T (D b_i) b_i + b_i^T H_f b_i) + f (\\nabla g^T (D b_i) b_i + b_i^T H_g b_i) \\right) \\right) dt + \\sum_{i=1}^{m} (g \\nabla f^T b_i + f \\nabla g^T b_i) dW_t^i\n$$\nThe problem requests only the right-hand side expression.", "answer": "$$\n\\boxed{\\left( g \\nabla f^T a + f \\nabla g^T a + \\sum_{i=1}^{m} (\\nabla f^T b_i)(\\nabla g^T b_i) + \\frac{1}{2} \\sum_{i=1}^{m} \\left( g \\left(\\nabla f^T D b_i b_i + b_i^T H_f b_i\\right) + f \\left(\\nabla g^T D b_i b_i + b_i^T H_g b_i\\right) \\right) \\right) dt + \\sum_{i=1}^{m} (g \\nabla f^T b_i + f \\nabla g^T b_i) dW_t^i}\n$$", "id": "3003921"}, {"introduction": "We now transition from analytical derivation to computational practice to see the Stratonovich chain rule in action. This numerical experiment is designed to illustrate a powerful practical advantage of the Stratonovich framework: the simplification of stochastic differential equations (SDEs) through transformation. You will compare two numerical schemes for solving geometric Brownian motion, where a logarithmic transform guided by the chain rule converts a non-linear SDE into a linear one. This exercise highlights the profound link between analytical theory and the development of highly accurate, even exact, simulation methods [@problem_id:3003926].", "problem": "Consider the Stratonovich stochastic differential equation (SDE) $dX_t = \\alpha X_t \\, dt + \\beta X_t \\circ dW_t$ on the interval $t \\in [0,T]$ with $X_0 \\in (0,\\infty)$, where $\\alpha \\in \\mathbb{R}$ and $\\beta \\in \\mathbb{R}$ are constants, and $W_t$ denotes a Wiener process (Brownian motion). Let $f:(0,\\infty) \\to \\mathbb{R}$ be given by $f(x) = \\log x$, and define $Y_t = f(X_t)$. You must design a numerical experiment that compares two schemes on the same discrete time grid and the same Brownian path:\n\n- Scheme A: Integrate the original equation for $X_t$ directly using a midpoint method consistent with Stratonovich integration on a uniform grid with step size $\\Delta t$.\n- Scheme B: Transform to $Y_t = f(X_t)$ first, integrate the transformed equation for $Y_t$ on the same grid, and then reconstruct $X_t$ by applying $f^{-1}$ pointwise.\n\nYour task is to:\n1. Starting from the symmetric Riemann-sum definition of the Stratonovich integral, and without invoking any pre-stated chain rule formulas, derive the evolution equation satisfied by $Y_t$ in terms of $\\alpha$, $\\beta$, $X_t$, and $f$.\n2. Use the derived evolution to explain, from first principles, why transforming to $Y_t = f(X_t)$ before integrating can improve strong pathwise accuracy for this class of SDEs.\n3. Implement a program that, for each test case described below, computes the maximum absolute pathwise error on the grid for both Scheme A and Scheme B relative to the exact solution, and returns a boolean indicating whether Scheme B has strictly smaller error than Scheme A (that is, whether $\\max_n |X^{B}_{t_n} - X^{\\text{exact}}_{t_n}| < \\max_n |X^{A}_{t_n} - X^{\\text{exact}}_{t_n}|$). The Brownian motion must be simulated by independent Gaussian increments with variance $\\Delta t$, and a fixed pseudo-random seed must be used per test case to ensure reproducibility.\n\nFundamental base for derivation: Use only the definition of the Stratonovich integral as the limit of symmetric Riemann sums, Taylor expansions for $C^2$ functions, properties of quadratic variation of Brownian motion, and the classical chain rule from ordinary calculus. Do not use any pre-stated stochastic chain rule or conversion formulas as shortcuts.\n\nTest suite parameter values:\n- Case $1$: $\\alpha = 0.3$, $\\beta = 0.7$, $X_0 = 1.25$, $T = 1.0$, $N = 80$ time steps, seed $123$.\n- Case $2$: $\\alpha = 0.0$, $\\beta = 0.0$, $X_0 = 1.0$, $T = 1.0$, $N = 10$ time steps, seed $7$.\n- Case $3$: $\\alpha = -0.5$, $\\beta = 2.0$, $X_0 = 0.75$, $T = 1.0$, $N = 8$ time steps, seed $999$.\n- Case $4$: $\\alpha = 0.2$, $\\beta = 0.1$, $X_0 = 3.0$, $T = 2.0$, $N = 1000$ time steps, seed $2024$.\n\nFor each case, use a uniform grid $t_n = n \\Delta t$ with $\\Delta t = T/N$, and simulate $\\Delta W_n \\sim \\mathcal{N}(0,\\Delta t)$ independently. The midpoint method for Scheme A must evaluate coefficients at the numerical midpoint defined by $X_{n}^{\\text{mid}} = X_n + \\tfrac{1}{2} a(X_n) \\Delta t + \\tfrac{1}{2} b(X_n) \\Delta W_n$, where $a(x) = \\alpha x$ and $b(x) = \\beta x$, followed by $X_{n+1} = X_n + a(X_{n}^{\\text{mid}})\\Delta t + b(X_{n}^{\\text{mid}})\\Delta W_n$. Scheme B must first compute $Y_{n+1}$ on the same grid and increments and then set $X_{n+1} = \\exp(Y_{n+1})$.\n\nExact reference solution: Derive the exact expression for $X_t$ by solving the transformed equation analytically, and use it to compute the pathwise error at the grid points.\n\nYour program should produce a single line of output containing the results as a comma-separated list enclosed in square brackets (e.g., $[r_1,r_2,r_3,r_4]$), where each $r_i$ is a boolean for Case $i$ indicating whether transforming before integrating (Scheme B) yields strictly smaller maximum absolute pathwise error than integrating directly (Scheme A). No physical units are involved, and no angle units are needed. Express all boolean outputs as either $True$ or $False$ exactly, without additional text.", "solution": "The problem statement is scientifically grounded, well-posed, objective, and complete. It describes a standard problem in stochastic calculus and numerical analysis, providing all necessary definitions, constants, and parameters for a unique and meaningful solution. The problem is valid.\n\n### 1. Derivation of the SDE for $Y_t$\n\nThe problem requires the derivation of the evolution equation for $Y_t = f(X_t)$ where $f(x) = \\log x$, starting from the Stratonovich SDE $dX_t = \\alpha X_t \\, dt + \\beta X_t \\circ dW_t$. The derivation must be based on first principles, specifically the symmetric Riemann-sum definition of the Stratonovich integral, and must not use pre-stated stochastic chain rules.\n\nThe Stratonovich chain rule states that for a process $Y_t = f(X_t)$, the differential is given by $dY_t = f'(X_t) \\circ dX_t$, which takes the same form as the classical chain rule. We will demonstrate this from the definition of the integral. The change in $Y_t$ over an interval $[0, T]$ is given by $Y_T - Y_0 = \\int_0^T dY_t$. We can express this as a limit of a sum over a partition $0 = t_0 < t_1 < \\dots < t_N = T$:\n$$Y_T - Y_0 = \\lim_{N\\to\\infty} \\sum_{i=0}^{N-1} (Y_{t_{i+1}} - Y_{t_i}) = \\lim_{N\\to\\infty} \\sum_{i=0}^{N-1} (f(X_{t_{i+1}}) - f(X_{t_i}))$$\nLet $\\tau_i = (t_i + t_{i+1})/2$ be the midpoint of the time interval $[t_i, t_{i+1}]$. We perform a Taylor expansion of $f(X_{t_{i+1}})$ and $f(X_{t_i})$ around the process value at the midpoint, $X_{\\tau_i}$. For a $C^2$ function $f$, we have:\n$$f(X_{t_{i+1}}) = f(X_{\\tau_i}) + f'(X_{\\tau_i})(X_{t_{i+1}} - X_{\\tau_i}) + \\frac{1}{2}f''(X_{\\tau_i})(X_{t_{i+1}} - X_{\\tau_i})^2 + O(|\\Delta t_i|^{3/2})$$\n$$f(X_{t_i}) = f(X_{\\tau_i}) + f'(X_{\\tau_i})(X_{t_i} - X_{\\tau_i}) + \\frac{1}{2}f''(X_{\\tau_i})(X_{t_i} - X_{\\tau_i})^2 + O(|\\Delta t_i|^{3/2})$$\nSubtracting the second equation from the first gives the increment $\\Delta Y_i = Y_{t_{i+1}} - Y_{t_i}$:\n$$\\Delta Y_i = f'(X_{\\tau_i})(X_{t_{i+1}} - X_{t_i}) + \\frac{1}{2}f''(X_{\\tau_i})\\left[(X_{t_{i+1}} - X_{\\tau_i})^2 - (X_{t_i} - X_{\\tau_i})^2\\right] + \\dots$$\nLet's analyze the terms. The first term, when summed, is $\\sum_{i=0}^{N-1} f'(X_{\\tau_i})(X_{t_{i+1}} - X_{t_i})$. The Stratonovich integral $\\int_0^T G(X_t) \\circ dX_t$ is defined as the limit of such sums. Therefore, this term converges to $\\int_0^T f'(X_t) \\circ dX_t$.\n\nThe second term involves the difference of squared increments of $X_t$ over symmetric half-intervals. To leading order, the increment of $X_t$ is driven by the Brownian motion: $X_s - X_r \\approx \\beta X_r (W_s - W_r)$. The term becomes approximately $\\frac{1}{2}f''(X_{\\tau_i}) \\beta^2 X_{\\tau_i}^2 [(W_{t_{i+1}}-W_{\\tau_i})^2 - (W_{\\tau_i}-W_{t_i})^2]$. The increments $(W_{t_{i+1}}-W_{\\tau_i})$ and $(W_{\\tau_i}-W_{t_i})$ are independent random variables, each with variance $\\Delta t_i / 2$. The expectation of the term in brackets is $E[(\\dots)^2 - (\\dots)^2] = \\Delta t_i / 2 - \\Delta t_i / 2 = 0$. In the limit of a fine partition, the sum of these terms converges to zero.\n\nThus, the change in $Y_t$ is determined solely by the first term, leading to the differential form:\n$$dY_t = f'(X_t) \\circ dX_t$$\nThis confirms that the classical chain rule applies to Stratonovich calculus. Now we substitute the given SDE for $dX_t$:\n$$dY_t = f'(X_t) \\circ ( \\alpha X_t \\, dt + \\beta X_t \\circ dW_t )$$\nUsing the composition properties of the Stratonovich integral, this becomes:\n$$dY_t = f'(X_t) \\alpha X_t \\, dt + f'(X_t) \\beta X_t \\circ dW_t$$\nFor the specific function $f(x) = \\log x$, we have $f'(x) = 1/x$. Substituting this into the equation:\n$$dY_t = \\frac{1}{X_t} (\\alpha X_t) \\, dt + \\frac{1}{X_t} (\\beta X_t) \\circ dW_t$$\n$$dY_t = \\alpha \\, dt + \\beta \\circ dW_t$$\nSince the coefficients $\\alpha$ and $\\beta$ are constants, the Stratonovich and Itô forms of this SDE are identical. Thus, the evolution equation for $Y_t$ is:\n$$dY_t = \\alpha \\, dt + \\beta \\, dW_t$$\n\n### 2. Analysis of Numerical Schemes and Accuracy\n\nThe derived SDE for $Y_t$ is an arithmetic Brownian motion with constant drift $\\alpha$ and constant diffusion $\\beta$. This is a significant simplification over the original SDE for $X_t$, which is a geometric Brownian motion with multiplicative noise (state-dependent coefficients).\n\n**Scheme A** directly integrates the original non-linear SDE for $X_t$:\n$$dX_t = \\alpha X_t \\, dt + \\beta X_t \\circ dW_t$$\nThe specified midpoint method is a general-purpose numerical scheme for Stratonovich SDEs. Although it is a relatively accurate scheme (strong order $1.0$), it introduces truncation error at each step because it approximates the continuous dynamics. The coefficients $a(x) = \\alpha x$ and $b(x) = \\beta x$ are evaluated at a numerically approximated midpoint $X_{n}^{\\text{mid}}$, not the true midpoint, leading to pathwise deviations from the exact solution.\n\n**Scheme B** first transforms the problem into the $Y_t$ variable space. The SDE for $Y_t$ is:\n$$dY_t = \\alpha \\, dt + \\beta \\, dW_t$$\nThis SDE with constant coefficients can be integrated exactly. The solution is $Y_t = Y_0 + \\alpha t + \\beta W_t$. A discrete-time numerical scheme for this equation is the Euler-Maruyama method:\n$$Y_{n+1} = Y_n + \\alpha \\Delta t + \\beta \\Delta W_n$$\nGiven a simulated discrete Brownian path with increments $\\Delta W_n$, this update rule does not approximate the solution for $Y_{t_{n+1}}$; it *is* the exact solution on that path. By induction, $Y_n = Y_0 + \\alpha t_n + \\beta \\sum_{i=0}^{n-1} \\Delta W_i = Y_{t_n}^{\\text{exact}}$.\nThe final step of Scheme B is to transform back: $X^B_n = f^{-1}(Y_n) = \\exp(Y_n)$. Since $Y_n$ is the exact value of the transformed process at time $t_n$ for the given Brownian path, $X^B_n$ is the exact value of the original process $X_{t_n}$.\n$$X_n^B = \\exp(Y_{t_n}^{\\text{exact}}) = \\exp(\\log(X_{t_n}^{\\text{exact}})) = X_{t_n}^{\\text{exact}}$$\nTherefore, Scheme B produces a solution with an error that is zero up to machine floating-point precision. Scheme A, being a general approximation, will have a non-zero error. Consequently, for any case where the SDE is non-trivial (i.e., $\\alpha$ or $\\beta$ are non-zero), Scheme B is expected to have a strictly smaller pathwise error. If $\\alpha=0$ and $\\beta=0$, both schemes are exact and will have zero error, so the \"strictly smaller\" condition will be false.\n\n### 3. Exact Solution for $X_t$\nFrom the SDE for $Y_t$, we integrate from $0$ to $t$:\n$$Y_t - Y_0 = \\int_0^t \\alpha \\, ds + \\int_0^t \\beta \\, dW_s = \\alpha t + \\beta W_t$$\nSubstituting $Y_t = \\log X_t$ and $Y_0 = \\log X_0$:\n$$\\log X_t = \\log X_0 + \\alpha t + \\beta W_t$$\nExponentiating both sides gives the exact solution for $X_t$:\n$$X_t = \\exp(\\log X_0 + \\alpha t + \\beta W_t) = X_0 \\exp(\\alpha t + \\beta W_t)$$\nThis formula is used to generate the reference solution path for error calculations in the numerical experiment.", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Performs a numerical experiment comparing two integration schemes for a Stratonovich SDE.\n    \"\"\"\n    test_cases = [\n        # (alpha, beta, X0, T, N, seed)\n        (0.3, 0.7, 1.25, 1.0, 80, 123),\n        (0.0, 0.0, 1.0, 1.0, 10, 7),\n        (-0.5, 2.0, 0.75, 1.0, 8, 999),\n        (0.2, 0.1, 3.0, 2.0, 1000, 2024),\n    ]\n\n    results = []\n    \n    for case in test_cases:\n        alpha, beta, X0, T, N, seed = case\n        \n        # Setup grid and Brownian motion\n        dt = T / N\n        rng = np.random.default_rng(seed)\n        # Generate N increments for N steps\n        delta_W = rng.normal(loc=0.0, scale=np.sqrt(dt), size=N)\n        \n        # Path arrays will have N+1 points (t=0 to t=T)\n        t = np.linspace(0, T, N + 1)\n        W = np.concatenate(([0], np.cumsum(delta_W)))\n        \n        # 1. Calculate Exact Solution\n        X_exact = X0 * np.exp(alpha * t + beta * W)\n        \n        # 2. Scheme A: Direct midpoint integration of X_t\n        X_A = np.zeros(N + 1)\n        X_A[0] = X0\n        a = lambda x: alpha * x\n        b = lambda x: beta * x\n        \n        for n in range(N):\n            Xn = X_A[n]\n            dWn = delta_W[n]\n            \n            # As per problem, evaluate coefficients at a numerical midpoint\n            X_mid = Xn + 0.5 * a(Xn) * dt + 0.5 * b(Xn) * dWn\n            X_A[n + 1] = Xn + a(X_mid) * dt + b(X_mid) * dWn\n\n        # 3. Scheme B: Integrate Y_t = log(X_t), then transform back\n        Y_B = np.zeros(N + 1)\n        Y_B[0] = np.log(X0)\n        \n        for n in range(N):\n            Yn = Y_B[n]\n            dWn = delta_W[n]\n            \n            # This is the exact update rule for the transformed SDE\n            Y_B[n + 1] = Yn + alpha * dt + beta * dWn\n            \n        X_B = np.exp(Y_B)\n        \n        # 4. Compare maximum absolute pathwise errors\n        error_A = np.max(np.abs(X_A - X_exact))\n        error_B = np.max(np.abs(X_B - X_exact))\n        \n        results.append(error_B  error_A)\n        \n    # Format and print the final output\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n\n```", "id": "3003926"}]}