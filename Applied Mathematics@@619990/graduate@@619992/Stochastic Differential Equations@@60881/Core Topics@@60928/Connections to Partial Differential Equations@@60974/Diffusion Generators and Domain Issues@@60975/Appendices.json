{"hands_on_practices": [{"introduction": "This first practice lays the groundwork for analyzing the behavior of diffusions at the edge of their domain. We will calculate the fundamental building blocks of one-dimensional diffusion theory—the scale function and speed measure—for a simple process with constant coefficients. This exercise will guide you through Feller's test for boundary classification, a cornerstone technique that formalizes how a process behaves when it approaches a boundary [@problem_id:2972813]. Even in this simple setting, you'll see how the domain of the generator implicitly involves a statement about what happens at the interval's endpoints.", "problem": "Consider the one-dimensional Itô stochastic differential equation (SDE)\n$$\ndX_{t}=\\mu\\,dt+\\sigma\\,dW_{t},\\qquad X_{t}\\in (0,\\infty),\n$$\nwhere $\\mu\\in\\mathbb{R}$ and $\\sigma>0$ are constants, and $W_{t}$ is a standard Wiener process. The infinitesimal generator $\\mathcal{L}$ of this diffusion acting on twice continuously differentiable test functions $f$ is given by\n$$\n\\mathcal{L}f(x)=\\frac{\\sigma^{2}}{2}\\,f''(x)+\\mu\\,f'(x),\\qquad x\\in (0,\\infty).\n$$\nUsing the foundational definitions from one-dimensional diffusion theory, the scale density $s'(x)$ and speed density $m(x)$ associated to $\\mathcal{L}$ are defined in terms of the diffusion coefficient $a(x)$ and drift $b(x)$ by\n$$\ns'(x)=\\exp\\!\\Big(-\\int^{x}\\frac{2\\,b(z)}{a(z)}\\,dz\\Big),\\qquad m(x)=\\frac{2}{a(x)\\,s'(x)},\n$$\nwith $a(x)=\\sigma^{2}$ and $b(x)=\\mu$. Let the scale function $s(x)$ be the antiderivative of $s'(x)$ normalized by $s(0)=0$.\n\nUsing Feller’s boundary classification via the scale function and speed density, define for some fixed $x_{0}\\in(0,\\infty)$ the near-boundary integrals\n$$\nI_{0}=\\int_{0}^{x_{0}}\\big(s(x_{0})-s(y)\\big)\\,m(y)\\,dy,\\qquad\nJ_{0}=\\int_{0}^{x_{0}}\\big(s(y)-s(0)\\big)\\,m(y)\\,dy.\n$$\nClassify the boundary at $0$ by the finiteness or infiniteness of $I_{0}$ and $J_{0}$, using the standard four types: regular, exit, entrance, and natural.\n\nReport your final answer as the row matrix $\\big(s(x),\\,m(x),\\,C(\\mu,\\sigma)\\big)$, where $s(x)$ is the normalized scale function, $m(x)$ is the speed density, and $C(\\mu,\\sigma)$ encodes the boundary type at $0$ according to the code $0=$ regular, $1=$ exit, $2=$ entrance, $3=$ natural. No rounding is required, and no units apply. The final answer must be a single closed-form analytic expression (you may use piecewise expressions if needed).", "solution": "The problem statement has been validated and is deemed a valid, well-posed problem in the theory of stochastic differential equations.\n\nThe problem asks for the scale function $s(x)$, the speed density $m(x)$, and the classification of the boundary at $0$ for a one-dimensional Itô diffusion process.\n\nThe stochastic differential equation (SDE) is given by\n$$dX_{t}=\\mu\\,dt+\\sigma\\,dW_{t}, \\qquad X_{t}\\in (0,\\infty)$$\nThe infinitesimal generator for this process acting on a suitable function $f$ is\n$$\\mathcal{L}f(x)=\\frac{\\sigma^{2}}{2}\\,f''(x)+\\mu\\,f'(x)$$\nComparing this to the general form of a generator, $\\mathcal{L}f(x) = \\frac{1}{2}a(x)f''(x) + b(x)f'(x)$, we identify the diffusion coefficient $a(x)$ and the drift coefficient $b(x)$:\n$$ a(x) = \\sigma^{2} $$\n$$ b(x) = \\mu $$\nwhere $\\mu \\in \\mathbb{R}$ and $\\sigma > 0$ are constants.\n\nFirst, we calculate the scale density $s'(x)$. The definition is provided as:\n$$ s'(x)=\\exp\\left(-\\int^{x}\\frac{2\\,b(z)}{a(z)}\\,dz\\right) $$\nSubstituting the coefficients $a(z) = \\sigma^2$ and $b(z) = \\mu$:\n$$ \\frac{2\\,b(z)}{a(z)} = \\frac{2\\mu}{\\sigma^2} $$\nThis is a constant. The integral in the exponent can be taken with lower limit $0$ without loss of generality (as the scale function is unique up to affine transformations, and the arbitrary integration constant would lead to a multiplicative factor in $s'(x)$).\n$$ \\int_{0}^{x} \\frac{2\\mu}{\\sigma^2} \\,dz = \\frac{2\\mu}{\\sigma^2}x $$\nThus, the scale density is:\n$$ s'(x) = \\exp\\left(-\\frac{2\\mu}{\\sigma^2}x\\right) $$\n\nNext, we determine the scale function $s(x)$, which is the antiderivative of $s'(x)$ normalized such that $s(0)=0$. This implies $s(x) = \\int_{0}^{x} s'(y)\\,dy$.\nWe must consider two cases based on the value of $\\mu$.\n\nCase 1: $\\mu \\neq 0$\n$$ s(x) = \\int_{0}^{x} \\exp\\left(-\\frac{2\\mu}{\\sigma^2}y\\right) dy = \\left[ -\\frac{\\sigma^2}{2\\mu} \\exp\\left(-\\frac{2\\mu}{\\sigma^2}y\\right) \\right]_{0}^{x} $$\n$$ s(x) = -\\frac{\\sigma^2}{2\\mu} \\left( \\exp\\left(-\\frac{2\\mu}{\\sigma^2}x\\right) - \\exp(0) \\right) = \\frac{\\sigma^2}{2\\mu} \\left(1 - \\exp\\left(-\\frac{2\\mu}{\\sigma^2}x\\right)\\right) $$\n\nCase 2: $\\mu = 0$\nIn this case, the exponent in $s'(x)$ is $0$, so $s'(x) = \\exp(0) = 1$.\n$$ s(x) = \\int_{0}^{x} 1 \\,dy = x $$\nCombining these results, we can write $s(x)$ as a piecewise function:\n$$ s(x) = \\begin{cases} \\frac{\\sigma^2}{2\\mu}\\left(1 - \\exp\\left(-\\frac{2\\mu x}{\\sigma^2}\\right)\\right) & \\text{if } \\mu \\neq 0 \\\\ x & \\text{if } \\mu = 0 \\end{cases} $$\n\nNext, we calculate the speed density $m(x)$ using the formula:\n$$ m(x) = \\frac{2}{a(x)s'(x)} $$\nSubstituting $a(x)=\\sigma^2$ and $s'(x)=\\exp\\left(-\\frac{2\\mu}{\\sigma^2}x\\right)$:\n$$ m(x) = \\frac{2}{\\sigma^2 \\exp\\left(-\\frac{2\\mu}{\\sigma^2}x\\right)} = \\frac{2}{\\sigma^2}\\exp\\left(\\frac{2\\mu}{\\sigma^2}x\\right) $$\nThis expression is valid for all $\\mu \\in \\mathbb{R}$.\n\nFinally, we must classify the boundary at $0$. The problem asks to use the integrals $I_0$ and $J_0$.\n$$ J_{0}=\\int_{0}^{x_{0}}\\big(s(y)-s(0)\\big)\\,m(y)\\,dy $$\n$$ I_{0}=\\int_{0}^{x_{0}}\\big(s(x_{0})-s(y)\\big)\\,m(y)\\,dy $$\nfor some fixed $x_0 \\in (0, \\infty)$. The classification depends on whether these integrals are finite or infinite.\nBy our normalization, $s(0)=0$. So, $J_0 = \\int_{0}^{x_{0}} s(y)m(y)\\,dy$.\nLet's analyze the integrands.\nThe function $s(y)$ is continuous for all $y \\ge 0$. As $y \\to 0$, using the Taylor expansion for the exponential, $s(y) \\approx \\frac{\\sigma^2}{2\\mu}(1 - (1 - \\frac{2\\mu y}{\\sigma^2})) = y$ for $\\mu \\neq 0$, and $s(y)=y$ for $\\mu=0$. So $s(y)$ is continuous and behaves like $y$ near $0$.\nThe function $m(y) = \\frac{2}{\\sigma^2}\\exp\\left(\\frac{2\\mu}{\\sigma^2}y\\right)$ is continuous for all $y \\in \\mathbb{R}$.\nTherefore, the integrand for $J_0$, which is $s(y)m(y)$, is continuous on the closed interval $[0, x_0]$. Any continuous function on a closed and bounded interval is Riemann integrable and its integral is finite. Thus, $J_0 < \\infty$.\n\nFor $I_0$, the integrand is $(s(x_0)-s(y))m(y)$. Since $s(x_0)$ is a finite constant and both $s(y)$ and $m(y)$ are continuous functions on $[0, x_0]$, the entire integrand is continuous on $[0, x_0]$. Consequently, its integral over this interval is finite. Thus, $I_0 < \\infty$.\n\nAn alternative, more standard approach is Feller's test for boundary classification. For a boundary at $0$, one examines the convergence of the integrals $\\int_0^{x_0} s'(y)dy$ and $\\int_0^{x_0} m(y)dy$.\nOur calculated scale density $s'(y) = \\exp(-\\frac{2\\mu y}{\\sigma^2})$ is continuous on $[0, x_0]$. Its integral is therefore finite.\nOur calculated speed density $m(y) = \\frac{2}{\\sigma^2}\\exp(\\frac{2\\mu y}{\\sigma^2})$ is also continuous on $[0, x_0]$. Its integral is therefore also finite.\nAccording to the standard classification:\n\\begin{itemize}\n    \\item Regular: $\\int s' < \\infty$ and $\\int m < \\infty$\n    \\item Exit: $\\int s' < \\infty$ and $\\int m = \\infty$\n    \\item Entrance: $\\int s' = \\infty$ and $\\int m < \\infty$\n    \\item Natural: $\\int s' = \\infty$ and $\\int m = \\infty$\n\\end{itemize}\nSince both integrals are finite for any values of $\\mu$ and $\\sigma$, the boundary at $0$ is always REGULAR. This is a general feature of diffusions whose coefficients are non-singular at the boundary.\n\nBoth methods lead to the same conclusion: the boundary at $0$ is regular. The problem provides a code where $0$ corresponds to a regular boundary. Therefore, $C(\\mu, \\sigma) = 0$.\n\nWe can now assemble the final answer as the requested row matrix.\nThe scale function is $s(x) = \\begin{cases} \\frac{\\sigma^2}{2\\mu}(1-\\exp(-\\frac{2\\mu x}{\\sigma^2})) & \\mu \\neq 0 \\\\ x & \\mu=0 \\end{cases}$.\nThe speed density is $m(x)=\\frac{2}{\\sigma^2}\\exp(\\frac{2\\mu x}{\\sigma^2})$.\nThe classification code is $C(\\mu, \\sigma) = 0$.", "answer": "$$ \\boxed{ \\begin{pmatrix} \\begin{cases} \\frac{\\sigma^2}{2\\mu}\\left(1 - \\exp\\left(-\\frac{2\\mu x}{\\sigma^2}\\right)\\right) & \\mu \\neq 0 \\\\ x & \\mu = 0 \\end{cases} & \\frac{2}{\\sigma^2}\\exp\\left(\\frac{2\\mu x}{\\sigma^2}\\right) & 0 \\end{pmatrix} } $$", "id": "2972813"}, {"introduction": "Building upon the basics, this next practice explores a more intricate scenario where the diffusion coefficient vanishes at a point, creating a singularity. You will investigate how a single parameter $\\alpha$ in the stochastic differential equation dictates the nature of the boundary at the origin, determining whether it is inaccessible, absorbing, or allows for reflection [@problem_id:2972792]. This problem is a classic illustration of how the local behavior of SDE coefficients translates into global properties of the process and, crucially, defines the precise domain of the generator by imposing specific boundary conditions.", "problem": "Consider the one-dimensional diffusion defined by the stochastic differential equation $dX_{t} = |X_{t}|^{\\alpha}\\, dW_{t}$ on $\\mathbb{R}$, where $W_{t}$ is a standard Brownian motion and $\\alpha \\in \\mathbb{R}$ is a fixed parameter. Let $A$ denote the infinitesimal generator acting on sufficiently smooth test functions $f$ by $A f(x) = \\frac{1}{2} |x|^{2\\alpha} f''(x)$ on $\\mathbb{R} \\setminus \\{0\\}$. Using the fundamental setup for one-dimensional diffusions (natural scale and speed measure), perform a boundary classification of the origin and determine how the domain $D(A)$ of the generator changes with $\\alpha$. Specifically:\n\n- Start from the canonical representation of one-dimensional diffusions in natural scale and the associated speed measure, and apply Feller’s boundary classification tests at the origin.\n- Determine for which values of $\\alpha$ the origin is inaccessible (natural), an exit (absorbing), or regular, and whether a sticky boundary appears.\n- For $\\alpha$ values at which the origin is regular, describe two canonical Markovian extensions (the minimal absorbing extension and the symmetric reflecting extension) and give the corresponding boundary conditions that characterize $D(A)$.\n- For $\\alpha$ values at which the origin is an exit (absorbing), give the boundary condition characterizing $D(A)$ for the minimal Feller process.\n- For $\\alpha$ values at which the origin is inaccessible (natural), explain the absence of boundary conditions in $D(A)$ at $0$.\n\nYour final answer must be a single analytical expression consisting of:\n- Four set-valued entries collecting the $\\alpha$ ranges corresponding respectively to reflecting, absorbing, sticky, and inaccessible cases (encoded as sets of $\\alpha$).\n- Two piecewise-defined domain specifications, $D_{\\mathrm{min}}(A,\\alpha)$ for the minimal absorbing extension and $D_{\\mathrm{ref}}(A,\\alpha)$ for the symmetric reflecting extension where the latter is applicable.\n\nNo numerical rounding is required. All mathematical notation must be expressed in standard symbols. The final expression should contain no words other than established mathematical notation (such as set braces, function spaces, limits, and derivative symbols).", "solution": "The provided problem statement is a valid and well-posed question in the theory of one-dimensional stochastic differential equations. It asks for the classification of the boundary at the origin for the diffusion process defined by $dX_{t} = |X_{t}|^{\\alpha}\\, dW_{t}$ and the characterization of the domain of its infinitesimal generator.\n\nThe stochastic differential equation (SDE) is of the form $dX_t = b(X_t) dt + \\sigma(X_t) dW_t$, with drift coefficient $b(x) = 0$ and diffusion coefficient $\\sigma(x) = |x|^{\\alpha}$. The infinitesimal generator is given by $A = \\frac{1}{2}\\sigma^2(x) \\frac{d^2}{dx^2} = \\frac{1}{2}|x|^{2\\alpha} \\frac{d^2}{dx^2}$, which is consistent with the problem statement.\n\nWe use Feller's boundary classification, which depends on the scale function $s(x)$ and the speed measure $m(dx)$.\nSince the drift $b(x)=0$, the scale function is $s(x) = \\int^x \\exp(0) dy$, so we can choose $s(x)=x$. This means the process is on its natural scale.\nThe density of the speed measure, $m(x)$, with respect to the Lebesgue measure is given by $m(x) = \\frac{2}{\\sigma^2(x) (s'(x))^2}$. With $\\sigma(x) = |x|^{\\alpha}$ and $s'(x)=1$, we have $m(x) = \\frac{2}{|x|^{2\\alpha}}$.\n\nFeller's classification of a boundary point (here, the origin $0$) depends on the convergence of certain integrals. Due to the symmetry of the coefficients ($|x|^{\\alpha}$), the classification will be the same whether we approach $0$ from the positive or negative side. We analyze the boundary by considering the interval $(0, c]$ for some $c>0$, say $c=1$. The classification depends on the following two key integrals:\n\n$1$. The integral of the speed measure density:\n$$ M(0) = \\int_{0}^{1} m(x) dx = \\int_{0}^{1} 2x^{-2\\alpha} dx $$\nThis integral converges if and only if the exponent $-2\\alpha$ is greater than $-1$, which means $2\\alpha < 1$, or $\\alpha < \\frac{1}{2}$. If $\\alpha < \\frac{1}{2}$, $M(0) < \\infty$. If $\\alpha \\ge \\frac{1}{2}$, $M(0) = \\infty$.\n\n$2$. The integral related to the expected time to hit the boundary:\n$$ \\Sigma_1(0) = \\int_{0}^{1} s'(x) \\left( \\int_{x}^{1} m(y) dy \\right) dx = \\int_{0}^{1} \\left( \\int_{x}^{1} 2y^{-2\\alpha} dy \\right) dx $$\nWe evaluate the inner integral first.\nIf $\\alpha \\neq \\frac{1}{2}$: $\\int_{x}^{1} 2y^{-2\\alpha} dy = \\frac{2}{1-2\\alpha} [y^{1-2\\alpha}]_{x}^{1} = \\frac{2}{1-2\\alpha}(1 - x^{1-2\\alpha})$.\nIf $\\alpha = \\frac{1}{2}$: $\\int_{x}^{1} 2y^{-1} dy = 2[\\ln(y)]_{x}^{1} = -2\\ln(x)$.\n\nNow we evaluate the outer integral for $\\Sigma_1(0)$.\n- If $\\alpha < \\frac{1}{2}$, then $1-2\\alpha > 0$. The integrand $\\frac{2}{1-2\\alpha}(1-x^{1-2\\alpha})$ is bounded on $[0,1]$, so $\\Sigma_1(0) < \\infty$.\n- If $\\alpha = \\frac{1}{2}$, the integral is $\\int_0^1 (-2\\ln x) dx = -2[x\\ln x - x]_0^1 = 2$. So $\\Sigma_1(0) < \\infty$.\n- If $\\frac{1}{2} < \\alpha < 1$, then $1-2\\alpha < 0$. The term $x^{1-2\\alpha}$ is integrable near $0$ since $1-2\\alpha > -1$. Thus $\\Sigma_1(0) < \\infty$.\n- If $\\alpha \\ge 1$, then $1-2\\alpha \\le -1$. The term $x^{1-2\\alpha}$ is not integrable near $0$, so $\\Sigma_1(0) = \\infty$.\nIn summary, $\\Sigma_1(0)$ converges if and only if $\\alpha < 1$.\n\nFor a process on its natural scale, the second key integral $\\Sigma_2(0) = \\int_0^1 m(x) (\\int_x^1 s'(y)dy) dx$ is finite if and only if $M(0)$ is finite. Thus, $\\Sigma_2(0)$ converges if and only if $\\alpha < \\frac{1}{2}$.\n\nFeller's classification is as follows:\n- **Regular**: $\\Sigma_1(0) < \\infty$ and $\\Sigma_2(0) < \\infty$. This holds if $\\alpha < 1$ and $\\alpha < \\frac{1}{2}$, which simplifies to $\\alpha < \\frac{1}{2}$.\n- **Exit**: $\\Sigma_1(0) < \\infty$ and $\\Sigma_2(0) = \\infty$. This holds if $\\alpha < 1$ and $\\alpha \\ge \\frac{1}{2}$, which simplifies to $\\frac{1}{2} \\le \\alpha < 1$.\n- **Entrance**: $\\Sigma_1(0) = \\infty$ and $\\Sigma_2(0) < \\infty$. This requires $\\alpha \\ge 1$ and $\\alpha < \\frac{1}{2}$, which is impossible.\n- **Natural**: $\\Sigma_1(0) = \\infty$ and $\\Sigma_2(0) = \\infty$. This requires $\\alpha \\ge 1$ and $\\alpha \\ge \\frac{1}{2}$, which simplifies to $\\alpha \\ge 1$.\n\nWe map this classification to the terminology requested in the problem:\n- The origin is **inaccessible** if it is a natural boundary, meaning it cannot be reached in finite time. This occurs for $\\alpha \\ge 1$.\n- The origin is intrinsically **absorbing** if it is an exit boundary. The process can reach the origin but cannot leave. This occurs for $\\frac{1}{2} \\le \\alpha < 1$.\n- For the **regular** case $\\alpha < \\frac{1}{2}$, the origin can be reached and left. This allows for various boundary behaviors to be imposed, including reflecting or absorbing. We associate the term **reflecting** with this range, as a symmetric reflecting extension is a canonical choice.\n- A boundary is called **sticky** if the process is expected to spend a positive amount of time there. A standard criterion for stickiness is that the integral of the speed measure near the boundary diverges, i.e., $M(0) = \\infty$. This occurs for $\\alpha \\ge \\frac{1}{2}$. This property applies to both exit and natural boundaries.\n\nBased on this analysis, the ranges for $\\alpha$ are:\n- Reflecting (Regular): $(-\\infty, \\frac{1}{2})$\n- Absorbing (Exit): $[\\frac{1}{2}, 1)$\n- Sticky ($M(0)=\\infty$): $[\\frac{1}{2}, \\infty)$\n- Inaccessible (Natural): $[1, \\infty)$\n\nNow, we analyze the domain of the generator, $D(A)$.\nLet $\\mathcal{D}_0 = C_b(\\mathbb{R}) \\cap C^2(\\mathbb{R} \\setminus \\{0\\})$, the space of bounded continuous functions on $\\mathbb{R}$ that are twice continuously differentiable away from the origin. For a function $f$ to be in the domain of any Feller extension, the limit $(Af)(0) = \\lim_{x\\to 0} \\frac{1}{2} |x|^{2\\alpha}f''(x)$ must exist.\n\n- For $\\alpha \\ge 1$ (inaccessible), the boundary cannot be reached. Thus, no boundary condition is imposed on the functions $f \\in D(A)$. The domain of the unique Feller generator is the maximal one, $D(A) = \\{f \\in \\mathcal{D}_0 \\mid \\exists \\lim_{x\\to0} |x|^{2\\alpha}f''(x)\\}$.\n\n- For $\\frac{1}{2} \\le \\alpha < 1$ (exit), there is a unique Feller process, the minimal one, which is absorbed at the origin. For a process absorbed at $x=0$, the generator must satisfy $(Af)(0) = 0$. This provides the boundary condition: $\\lim_{x\\to 0} |x|^{2\\alpha}f''(x) = 0$.\n\n- For $\\alpha < \\frac{1}{2}$ (regular), multiple extensions exist, characterized by boundary conditions at $0$.\n    - The minimal absorbing extension corresponds to a process killed at the origin. As in the exit case, the generator domain is characterized by the boundary condition $(Af)(0)=0$, i.e., $\\lim_{x\\to 0} |x|^{2\\alpha}f''(x) = 0$.\n    - The symmetric reflecting extension corresponds to a process that reflects at the origin. Because the coefficients are symmetric about $0$, this reflection should be smooth. The domain consists of functions that are \"even-like\" near $0$, satisfying a Neumann-type condition. Since the scale is $s(x)=x$, the condition is on the derivative with respect to the scale measure, $\\frac{df}{ds} = f'$. The boundary condition is $f'(0)=0$. For this condition to be well-defined, functions in the domain must be at least $C^1$ at the origin.\n\nThe final answer requires domain specifications for the minimal absorbing and symmetric reflecting extensions, where applicable (i.e., for the regular case $\\alpha < \\frac{1}{2}$).\n\nLet $\\mathcal{D} = C_b(\\mathbb{R}) \\cap C^2(\\mathbb{R} \\setminus \\{0\\})$.\n$D_{\\mathrm{min}}(A,\\alpha) = \\{ f \\in \\mathcal{D} : \\alpha < \\frac{1}{2} \\text{ and } \\lim_{x \\to 0} |x|^{2\\alpha}f''(x)=0 \\}$.\n$D_{\\mathrm{ref}}(A,\\alpha) = \\{ f \\in \\mathcal{D} \\cap C^1(\\mathbb{R}) : \\alpha < \\frac{1}{2} \\text{ and } f'(0)=0 \\}$.\nThese expressions specify the domains as requested.", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n(-\\infty, 1/2) \\\\\n[1/2, 1) \\\\\n[1/2, \\infty) \\\\\n[1, \\infty) \\\\\n\\{ f \\in C_b(\\mathbb{R}) \\cap C^2(\\mathbb{R} \\setminus \\{0\\}) : \\alpha \\in (-\\infty, 1/2) \\land \\lim_{x \\to 0} |x|^{2\\alpha}f''(x)=0 \\} \\\\\n\\{ f \\in C_b(\\mathbb{R}) \\cap C^1(\\mathbb{R}) \\cap C^2(\\mathbb{R} \\setminus \\{0\\}) : \\alpha \\in (-\\infty, 1/2) \\land f'(0)=0 \\}\n\\end{pmatrix}\n}\n$$", "id": "2972792"}, {"introduction": "This final practice transitions from pure theory to computational implementation, a critical skill for applying SDE models. You will learn how abstract boundary conditions, such as killing (Dirichlet) and Robin conditions, are incorporated into a finite difference scheme that approximates the diffusion generator [@problem_id:2972794]. By building and testing a discrete generator, you will gain a concrete understanding of how the domain of the continuous generator is respected at the discrete level, ensuring that numerical simulations correctly capture the intended boundary behavior of the process.", "problem": "Consider the one-dimensional Itô stochastic differential equation (SDE) on the closed interval $[0,1]$,\n$$\ndX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t,\n$$\nwhere $W_t$ is a standard Wiener process, $\\sigma(x) > 0$ is continuous, and $b(x)$ is continuous. Let $a(x) \\equiv \\sigma^2(x)$. The infinitesimal generator $A$ of this diffusion acts on twice continuously differentiable functions $f$ via\n$$\nA f(x) = \\tfrac{1}{2} a(x) f''(x) + b(x) f'(x),\n$$\nwith a domain that depends on the boundary behavior:\n- Killing (Dirichlet) boundary at $x=0$ (respectively $x=1$) means $f(0)=0$ (respectively $f(1)=0$).\n- Robin boundary at $x=0$ with parameters $(\\alpha_0,\\beta_0)$ means $\\beta_0 f'(0) + \\alpha_0 f(0) = 0$, and analogously at $x=1$ with $(\\alpha_1,\\beta_1)$: $\\beta_1 f'(1) + \\alpha_1 f(1) = 0$. The special case $\\alpha=0,\\beta \\neq 0$ yields reflecting (Neumann) boundary.\n\nA time-discrete scheme aims to approximate the semigroup $T_t = e^{tA}$ by an operator family $P_{\\Delta t,\\Delta x}$ built on a spatial grid with mesh $\\Delta x$ and time step $\\Delta t$, such that the discrete generator\n$$\nG_{\\Delta t,\\Delta x} := \\frac{P_{\\Delta t,\\Delta x} - I}{\\Delta t}\n$$\napproximates $A$ on its domain as $\\Delta t \\to 0$ and $\\Delta x \\to 0$. On a uniform grid $x_i = i \\Delta x$, $i \\in \\{0,1,\\dots,N\\}$, with $N \\Delta x = 1$, consider the standard second-order centered finite-difference discretization of $A$ on interior nodes $i \\in \\{1,\\dots,N-1\\}$:\n$$\n(Q_{\\Delta x} f)_i := \\tfrac{1}{2} a(x_i)\\,\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} + b(x_i)\\,\\frac{f_{i+1} - f_{i-1}}{2 \\Delta x}.\n$$\nDefine the time-discrete scheme by $P_{\\Delta t,\\Delta x} := I + \\Delta t\\, Q_{\\Delta x}$, so the discrete generator equals $G_{\\Delta t,\\Delta x} = Q_{\\Delta x}$.\n\nBoundary incorporation must ensure that $Q_{\\Delta x}$ approximates $A$ on its domain:\n- Killing (Dirichlet) boundary at either endpoint is implemented by enforcing $f(0)=0$ and/or $f(1)=0$ when assembling the stencil near the boundary (equivalently, transitions attempting to exit the domain are sent to a cemetery state in a continuous-time jump interpretation; in this problem you should implement it by substituting the boundary value $f(0)=0$ or $f(1)=0$ directly in the stencil).\n- Robin boundary at an endpoint is implemented by enforcing the Robin condition on the function space. At the discrete level this can be enforced either by eliminating ghost values through the discrete boundary relation\n$$\n\\beta_0 \\frac{f_1 - f_{-1}}{2 \\Delta x} + \\alpha_0 f_0 = 0 \\quad \\text{at } x=0,\\qquad\n\\beta_1 \\frac{f_{N+1} - f_{N-1}}{2 \\Delta x} + \\alpha_1 f_N = 0 \\quad \\text{at } x=1,\n$$\nor by selecting functions $f$ that satisfy the continuous boundary condition. For the purpose of generator consistency on the domain, it suffices to use interior stencils with boundary values $f_0$ and $f_N$ taken from a function $f$ that satisfies the given boundary conditions.\n\nTask. Starting from the above fundamental definitions, implement the discrete generator $Q_{\\Delta x}$ and quantify its pointwise consistency error with the true generator $A$ on the interior nodes, for several boundary types. Use $a(x) \\equiv 1$ in all test cases. For each case, choose a smooth test function $f$ that lies in the domain of $A$ under the specified boundary conditions, compute the analytic value of $A f$ on the grid, and report the maximum absolute error\n$$\nE := \\max_{1 \\le i \\le N-1} \\left| (Q_{\\Delta x} f)_i - (A f)(x_i) \\right|.\n$$\nYour program must implement and evaluate the following test suite, covering killing and Robin boundary conditions, drift heterogeneity, and a convergence check:\n- Case $1$ (happy path, killing at both ends): $b(x) \\equiv 0$, Dirichlet at $x=0$ and $x=1$. Use $f(x) = \\sin(\\pi x)$, grid with $N=200$ so $\\Delta x = 1/200$. Output the error $E_1$ as a float.\n- Case $2$ (drifted killing): $b(x) = x$, Dirichlet at $x=0$ and $x=1$. Use $f(x) = x(1-x)$, grid with $N=200$. Output the error $E_2$ as a float.\n- Case $3$ (Robin at the left, killing at the right): $b(x) \\equiv 0.3$, Robin at $x=0$ with $(\\alpha_0,\\beta_0) = (2,1)$ and Dirichlet at $x=1$. Construct a cubic polynomial $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$ with $c_2 = 0.2$, $c_3 = -0.1$ such that $f'(0) + 2 f(0) = 0$ and $f(1) = 0$, and use this $f$ on a grid with $N=200$. Output the error $E_3$ as a float.\n- Case $4$ (Robin at both ends, including a reflecting boundary): $b(x) = -0.2 x$, Robin at $x=0$ with $(\\alpha_0,\\beta_0)=(2,1)$ and Robin at $x=1$ with $(\\alpha_1,\\beta_1)=(0,1)$ (Neumann). Use a cubic polynomial $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$ with $c_2 = 0.3$, $c_3 = -0.2$ chosen to satisfy $f'(0) + 2 f(0) = 0$ and $f'(1) = 0$, grid with $N=200$. Output the error $E_4$ as a float.\n- Case $5$ (convergence check under killing): repeat Case $1$ with $N=100$ to get $E_{1,100}$ and with $N=200$ to get $E_{1,200}$, and output the ratio $R = E_{1,100} / E_{1,200}$ as a float.\n\nAll derivatives and evaluations of $f$ and $A f$ must be computed analytically; only the application of $Q_{\\Delta x}$ should use finite differences. All functions in Cases $3$ and $4$ must strictly satisfy the respective boundary conditions by construction.\n\nFinal output format. Your program should produce a single line of output containing the five results as a comma-separated list enclosed in square brackets, in the order $[E_1,E_2,E_3,E_4,R]$.\n\nNo physical units apply. Angles are not used. Percentages are not used. All outputs should be real numbers represented as standard decimal strings.", "solution": "We begin from the fundamental definitions of the generator and its domain. For a one-dimensional Itô stochastic differential equation (SDE) $dX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t$, the infinitesimal generator $A$ acting on a smooth function $f$ is\n$$\nA f(x) = \\tfrac{1}{2} a(x) f''(x) + b(x) f'(x), \\quad a(x) := \\sigma^2(x).\n$$\nThe domain $\\mathcal{D}(A)$ depends on boundary behavior. For killing (Dirichlet), $\\mathcal{D}(A)$ contains functions satisfying $f(0)=0$ and/or $f(1)=0$. For Robin at the endpoints with parameters $(\\alpha_0,\\beta_0)$ and $(\\alpha_1,\\beta_1)$, it requires $\\beta_0 f'(0) + \\alpha_0 f(0) = 0$ and $\\beta_1 f'(1) + \\alpha_1 f(1) = 0$. The reflecting (Neumann) boundary is the special case $\\alpha=0,\\beta \\neq 0$.\n\nTo approximate $A$ by a time-discrete scheme, we define a spatial discretization on the uniform grid $x_i = i \\Delta x$, $i = 0,1,\\dots,N$ with $N \\Delta x = 1$, and set the operator\n$$\n(Q_{\\Delta x} f)_i := \\tfrac{1}{2} a(x_i)\\,\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} + b(x_i)\\,\\frac{f_{i+1} - f_{i-1}}{2 \\Delta x}, \\quad i = 1,\\dots,N-1,\n$$\nwhich is the standard centered finite-difference discretization of the second derivative and the first derivative, respectively. A forward Euler time-discrete approximation to the semigroup is then\n$$\nP_{\\Delta t,\\Delta x} := I + \\Delta t\\, Q_{\\Delta x},\n$$\nso its discrete generator is $G_{\\Delta t,\\Delta x} = (P_{\\Delta t,\\Delta x}-I)/\\Delta t = Q_{\\Delta x}$. Consistency on the domain means that for every $f \\in \\mathcal{D}(A)$,\n$$\n\\max_{1 \\le i \\le N-1} \\left| (Q_{\\Delta x} f)_i - (A f)(x_i) \\right| \\to 0 \\quad \\text{as } \\Delta x \\to 0,\n$$\nwith the typical rate $\\mathcal{O}(\\Delta x^2)$ provided $a$ and $b$ are sufficiently smooth and the standard centered differences are used in the interior.\n\nIncorporating boundary behavior in a time-discrete scheme is subtle, but the guiding principle is: the discrete generator should approximate the continuous generator on its domain, which is encoded in the boundary conditions on $f$. There are two complementary (and equivalent, as $\\Delta x \\to 0$) ways to enforce boundary conditions.\n\n1. Killing (Dirichlet) boundary: In the backward (generator) perspective, we enforce $f(0)=0$ and/or $f(1)=0$ directly when applying the interior stencil near the boundary. For example, at $i=1$ we use $f_0 = f(0) = 0$, and at $i=N-1$ we use $f_N = f(1) = 0$. In a continuous-time Markov chain interpretation of $Q_{\\Delta x}$, this corresponds to redirecting the “would-be” transition rate that exits the domain to a cemetery state, thereby making the scheme sub-Markovian. In our computation of $(Q_{\\Delta x} f)_i$ on interior nodes, simply substituting the boundary values consistent with Dirichlet is sufficient.\n\n2. Robin boundary: In the backward generator perspective, the domain condition is $\\beta f' + \\alpha f = 0$ at the boundary. There are two common discretizations:\n   - Ghost-point elimination: Define $f_{-1}$ and $f_{N+1}$ as ghost values and eliminate them using the discrete Robin conditions\n     $$\n     \\beta_0 \\frac{f_1 - f_{-1}}{2 \\Delta x} + \\alpha_0 f_0 = 0 \\Rightarrow f_{-1} = f_1 + \\frac{2 \\Delta x\\,\\alpha_0}{\\beta_0} f_0,\n     $$\n     $$\n     \\beta_1 \\frac{f_{N+1} - f_{N-1}}{2 \\Delta x} + \\alpha_1 f_N = 0 \\Rightarrow f_{N+1} = f_{N-1} - \\frac{2 \\Delta x\\,\\alpha_1}{\\beta_1} f_N,\n     $$\n     which, when substituted into boundary stencils, yields a closed scheme. This route is most useful when one must update the boundary nodes as unknowns in an implicit time step.\n   - Domain-consistent testing: For the purpose of verifying generator consistency, it suffices to choose test functions $f$ that satisfy the continuous boundary conditions exactly, so that the interior stencil with boundary values $f_0$ and $f_N$ is consistent to second order near the boundary as well. This is because the truncation error of centered finite differences depends on interior smoothness, and the boundary conditions enter only through the values used in the stencils. Our tests adopt this route.\n\nAlgorithmic design for the tests:\n- We fix $a(x) \\equiv 1$ in all cases. For each case, we choose a smooth $f$ that satisfies the relevant boundary conditions; for Dirichlet cases, we select $f$ with $f(0)=0$ and $f(1)=0$, and for Robin cases, we enforce the Robin constraints by solving a small linear system on the coefficients of a cubic polynomial $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$. We then:\n  1. Build the grid $\\{x_i\\}_{i=0}^N$ with $\\Delta x = 1/N$.\n  2. Evaluate $f_i := f(x_i)$ and compute $(Q_{\\Delta x} f)_i$ for $i=1,\\dots,N-1$ using centered differences.\n  3. Compute the analytic $A f(x_i)$ via\n     $$\n     (A f)(x_i) = \\tfrac{1}{2} a(x_i) f''(x_i) + b(x_i) f'(x_i),\n     $$\n     with derivatives computed symbolically for the chosen $f$.\n  4. Report the maximum absolute discrepancy $E = \\max_{1 \\le i \\le N-1} |(Q_{\\Delta x} f)_i - (A f)(x_i)|$.\n\nDetails for each test case:\n- Case $1$: $b(x)\\equiv 0$, Dirichlet at both ends, $f(x) = \\sin(\\pi x)$. We have $f'(x) = \\pi \\cos(\\pi x)$, $f''(x) = -\\pi^2 \\sin(\\pi x)$, and thus $(A f)(x) = -\\tfrac{1}{2}\\pi^2 \\sin(\\pi x)$. Second-order consistency of centered differences yields $E_1 = \\mathcal{O}(\\Delta x^2)$.\n- Case $2$: $b(x) = x$, Dirichlet at both ends, $f(x) = x(1-x)$. Then $f'(x) = 1 - 2x$, $f''(x) = -2$, $(A f)(x) = \\tfrac{1}{2}(-2) + x(1-2x) = -1 + x - 2x^2$. Since $f$ is a polynomial of degree $2$, centered finite differences for first and second derivatives are exact, so $E_2$ is at the level of floating-point round-off.\n- Case $3$: $b(x) \\equiv 0.3$, Robin at $x=0$ with $(\\alpha_0,\\beta_0)=(2,1)$ and Dirichlet at $x=1$. Let $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$ with $c_2 = 0.2$ and $c_3 = -0.1$. Enforce $f'(0) + 2 f(0) = c_1 + 2 c_0 = 0$ and $f(1) = c_0 + c_1 + c_2 + c_3 = 0$. This linear system yields $c_0 = c_2 + c_3 = 0.1$, $c_1 = -2 c_0 = -0.2$. Then $f'(x) = c_1 + 2 c_2 x + 3 c_3 x^2$, $f''(x) = 2 c_2 + 6 c_3 x$, and $(A f)(x) = \\tfrac{1}{2} f''(x) + 0.3 f'(x)$. Here, the second derivative discretization is exact for a cubic; the first derivative incurs a truncation error of order $\\mathcal{O}(\\Delta x^2)$, so $E_3 = \\mathcal{O}(\\Delta x^2)$ with a small constant.\n- Case $4$: $b(x) = -0.2 x$, Robin at $x=0$ with $(\\alpha_0,\\beta_0)=(2,1)$ and Neumann at $x=1$ with $(\\alpha_1,\\beta_1)=(0,1)$. Let $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$ with $c_2 = 0.3$, $c_3 = -0.2$. Enforce $f'(0) + 2 f(0) = c_1 + 2 c_0 = 0$ and $f'(1) = c_1 + 2 c_2 + 3 c_3 = 0$. With the chosen $c_2$ and $c_3$, the second constraint gives $c_1 = 0$, hence $c_0 = 0$. Then $(A f)(x) = \\tfrac{1}{2} f''(x) - 0.2 x f'(x)$ with $f'(x) = 0.6 x - 0.6 x^2$, $f''(x) = 0.6 - 1.2 x$. Again, centered differences are exact for $f''$ (since $f$ is cubic), and the first derivative term yields $\\mathcal{O}(\\Delta x^2)$ error, so $E_4 = \\mathcal{O}(\\Delta x^2)$.\n- Case $5$: We repeat Case $1$ on grids with $N=100$ and $N=200$. For a smooth $f$, the truncation error for the second derivative satisfies\n$$\n\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} = f''(x_i) + \\frac{\\Delta x^2}{12} f^{(4)}(\\xi_i),\n$$\nfor some $\\xi_i$ between $x_{i-1}$ and $x_{i+1}$. Therefore, the error halves quadratically when $\\Delta x$ halves, so the ratio $R = E_{1,100}/E_{1,200}$ should be close to $4$.\n\nImplementation details:\n- For each case, we construct $f$ analytically and compute $f'$, $f''$, and $A f$ analytically at the interior grid points.\n- We assemble $(Q_{\\Delta x} f)_i$ for $i=1,\\dots,N-1$ directly from the centered finite-difference formulas using the boundary values consistent with the case (for Dirichlet, $f(0)=0$, $f(1)=0$; for Robin, $f(0)$ and $f(1)$ are those of the constructed $f$ which satisfies the Robin constraints).\n- We compute and output the five floats $[E_1,E_2,E_3,E_4,R]$ in a single line, as specified.\n\nThis principle-based construction demonstrates how killing and Robin boundary conditions are incorporated in time-discrete schemes through domain-consistent enforcement at the boundary, ensuring that the discrete generator $G_{\\Delta t,\\Delta x} = Q_{\\Delta x}$ converges to $A$ on its domain, with second-order accuracy in space under centered differencing.", "answer": "```python\nimport numpy as np\n\ndef centered_second_diff(f_vals, dx):\n    # Assumes f_vals is array of length N+1; returns interior second derivative approx of length N-1\n    return (f_vals[2:] - 2.0 * f_vals[1:-1] + f_vals[:-2]) / (dx * dx)\n\ndef centered_first_diff(f_vals, dx):\n    # Interior centered first differences of length N-1\n    return (f_vals[2:] - f_vals[:-2]) / (2.0 * dx)\n\ndef apply_Q(ax_func, bx_func, f_func, N):\n    # Build grid\n    x = np.linspace(0.0, 1.0, N + 1)\n    dx = 1.0 / N\n    # Evaluate f on grid\n    f_vals = f_func(x)\n    # Evaluate a(x), b(x) on interior\n    a_vals = ax_func(x[1:-1])\n    b_vals = bx_func(x[1:-1])\n    # Finite differences on interior\n    d2 = centered_second_diff(f_vals, dx)\n    d1 = centered_first_diff(f_vals, dx)\n    # Q f on interior\n    Qf = 0.5 * a_vals * d2 + b_vals * d1\n    return x[1:-1], Qf\n\ndef case1(N):\n    # a(x)=1, b(x)=0, f(x)=sin(pi x), Dirichlet at both ends\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: np.zeros_like(x)\n    f = lambda x: np.sin(np.pi * x)\n    # True Af: -0.5 * pi^2 * sin(pi x)\n    Atrue = lambda x: -0.5 * (np.pi ** 2) * np.sin(np.pi * x)\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case2(N):\n    # a(x)=1, b(x)=x, f(x)=x(1-x), Dirichlet at both ends\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: x\n    f = lambda x: x * (1.0 - x)\n    # f' = 1 - 2x, f'' = -2 => Af = 0.5*(-2) + x*(1-2x) = -1 + x - 2x^2\n    Atrue = lambda x: -1.0 + x - 2.0 * x * x\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case3(N):\n    # a(x)=1, b(x)=0.3, Robin at 0: f'(0)+2 f(0)=0, Dirichlet at 1: f(1)=0\n    # Choose cubic f(x) = c0 + c1 x + c2 x^2 + c3 x^3 with c2=0.2, c3=-0.1\n    c2 = 0.2\n    c3 = -0.1\n    # Constraints: c1 + 2 c0 = 0, and c0 + c1 + c2 + c3 = 0\n    # Solve: c0 = c2 + c3, c1 = -2 c0\n    c0 = c2 + c3\n    c1 = -2.0 * c0\n    # Define f and derivatives\n    f = lambda x: c0 + c1 * x + c2 * x**2 + c3 * x**3\n    # Af = 0.5 f'' + 0.3 f'\n    fprime = lambda x: c1 + 2.0 * c2 * x + 3.0 * c3 * x**2\n    fsecond = lambda x: 2.0 * c2 + 6.0 * c3 * x\n    Atrue = lambda x: 0.5 * fsecond(x) + 0.3 * fprime(x)\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: 0.3 * np.ones_like(x)\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case4(N):\n    # a(x)=1, b(x)=-0.2 x, Robin at 0: f'(0)+2 f(0)=0, Neumann at 1: f'(1)=0\n    # Choose cubic f(x) = c0 + c1 x + c2 x^2 + c3 x^3 with c2=0.3, c3=-0.2\n    c2 = 0.3\n    c3 = -0.2\n    # Constraints: c1 + 2 c0 = 0, and c1 + 2 c2 + 3 c3 = 0\n    # With chosen c2,c3, 2 c2 + 3 c3 = 0 => c1 = 0 => c0 = 0\n    c1 = 0.0\n    c0 = 0.0\n    f = lambda x: c0 + c1 * x + c2 * x**2 + c3 * x**3\n    fprime = lambda x: c1 + 2.0 * c2 * x + 3.0 * c3 * x**2\n    fsecond = lambda x: 2.0 * c2 + 6.0 * c3 * x\n    Atrue = lambda x: 0.5 * fsecond(x) - 0.2 * x * fprime(x)\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: -0.2 * x\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef solve():\n    # Define test cases as specified\n    E1 = case1(N=200)\n    E2 = case2(N=200)\n    E3 = case3(N=200)\n    E4 = case4(N=200)\n    # Convergence ratio for case 1\n    E1_100 = case1(N=100)\n    E1_200 = E1\n    R = E1_100 / E1_200 if E1_200 != 0.0 else float('inf')\n\n    results = [E1, E2, E3, E4, R]\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2972794"}]}