{"hands_on_practices": [{"introduction": "The power of the Green's function lies in its role as a fundamental building block for solving the diffusion equation. By applying the principle of superposition through a convolution integral, we can construct the solution for any arbitrary initial condition. This practice [@problem_id:1108226] offers a tangible application of this idea, where you will model the evolution of a sharp temperature interface—a scenario akin to two bodies at different temperatures being brought into contact. You will see how the abstract machinery of Green's functions can be used to derive a concrete physical quantity: the total heat energy transferred across the interface over time.", "problem": "Consider a one-dimensional, infinitely long medium whose temperature distribution $T(x,t)$ evolves according to the one-dimensional diffusion equation:\n$$\n\\frac{\\partial T(x,t)}{\\partial t} = D \\frac{\\partial^2 T(x,t)}{\\partial x^2}\n$$\nwhere $D$ is the constant thermal diffusivity of the medium.\n\nAt time $t=0$, the medium has a sharp temperature discontinuity at the origin $x=0$. The initial temperature profile is given by a step function:\n$$\nT(x,0) = \\begin{cases} T_L & \\text{for } x < 0 \\\\ T_R & \\text{for } x > 0 \\end{cases}\n$$\nwhere $T_L$ and $T_R$ are constants, with $T_R > T_L$.\n\nThe solution to the diffusion equation for a given initial condition $T(x',0)$ on an infinite domain can be found by convolving the initial condition with the Green's function (or fundamental solution) for the diffusion equation:\n$$\nT(x,t) = \\int_{-\\infty}^{\\infty} G(x,t; x',0) T(x',0) dx'\n$$\nwhere the Green's function is\n$$\nG(x,t; x',0) = \\frac{1}{\\sqrt{4\\pi D t}} \\exp\\left(-\\frac{(x-x')^2}{4Dt}\\right)\n$$\n\nHeat flows according to Fourier's law, which states that the heat flux $j(x,t)$ (rate of heat energy transfer per unit area) is proportional to the negative of the temperature gradient:\n$$\nj(x,t) = -k \\frac{\\partial T(x,t)}{\\partial x}\n$$\nwhere $k$ is the thermal conductivity of the medium, also a constant.\n\nDerive an expression for the total heat energy $Q(\\tau)$ that has flowed from the right side ($x>0$) to the left side ($x<0$) across the interface at $x=0$, per unit area, during the time interval from $t=0$ to $t=\\tau$.", "solution": "1. Relevant equations  \n   Diffusion equation:  \n   $$\\frac{\\partial T}{\\partial t}=D\\frac{\\partial^2T}{\\partial x^2}$$  \n   Convolution solution on $(-\\infty,\\infty)$:  \n   $$T(x,t)=\\int_{-\\infty}^{\\infty}G(x,t;x',0)\\,T(x',0)\\,dx',\\quad G=\\frac{1}{\\sqrt{4\\pi Dt}}e^{-\\frac{(x-x')^2}{4Dt}}$$  \n   Heat flux (Fourier’s law):  \n   $$j(x,t)=-k\\frac{\\partial T}{\\partial x}$$  \n   Total heat per unit area from $x>0$ to $x<0$:  \n   $$Q(\\tau)=\\int_{0}^{\\tau}[-\\,j(0,t)]\\,dt$$\n\n2. Temperature profile for step initial data  \n   Split the convolution at $x'=0$:  \n   $$T(x,t)=T_L\\int_{-\\infty}^{0}G\\,dx'+T_R\\int_{0}^{\\infty}G\\,dx'$$  \n   Standard Gaussian integrals give  \n   $$T(x,t)=\\frac{T_L+T_R}{2}+\\frac{T_R-T_L}{2}\\erf\\!\\Bigl(\\frac{x}{2\\sqrt{Dt}}\\Bigr)\\,. $$\n\n3. Temperature gradient at the interface  \n   $$\\frac{\\partial T}{\\partial x}\n     =\\frac{T_R-T_L}{2}\\,\\frac{d}{dx}\\erf\\!\\Bigl(\\frac{x}{2\\sqrt{Dt}}\\Bigr)\n     =\\frac{T_R-T_L}{2}\\,\\frac{1}{\\sqrt{\\pi D t}}\\,\\exp\\!\\Bigl(-\\frac{x^2}{4Dt}\\Bigr)\\,. $$\n   Hence at $x=0$:  \n   $$\\frac{\\partial T}{\\partial x}\\Big|_{x=0}\n     =\\frac{T_R-T_L}{2\\sqrt{\\pi D t}}\\,. $$\n\n4. Heat flux and integrated heat  \n   $$j(0,t)=-k\\frac{T_R-T_L}{2\\sqrt{\\pi D t}}\\,,\\qquad\n     Q(\\tau)=\\int_{0}^{\\tau}[-j(0,t)]\\,dt\n     =\\frac{k\\,(T_R-T_L)}{2\\sqrt{\\pi D}}\\int_{0}^{\\tau}t^{-\\frac{1}{2}}dt$$  \n   Evaluate the integral:  \n   $$\\int_{0}^{\\tau}t^{-\\frac{1}{2}}dt=2\\sqrt{\\tau}\\,. $$\n   Thus  \n   $$Q(\\tau)\n     =\\frac{k\\,(T_R-T_L)}{2\\sqrt{\\pi D}}\\;2\\sqrt{\\tau}\n     =k\\,(T_R-T_L)\\sqrt{\\frac{\\tau}{\\pi D}}\\,. $$", "answer": "$$\\boxed{k\\,(T_{R}-T_{L})\\sqrt{\\frac{\\tau}{\\pi D}}}$$", "id": "1108226"}, {"introduction": "While the Green's function for an infinite domain is a powerful tool, most physical problems involve boundaries that constrain the system. To handle such cases, we must find a Green's function that not only satisfies the diffusion equation but also the specific boundary conditions. This exercise [@problem_id:1108092] introduces the elegant \"method of images,\" a classic technique for constructing the correct Green's function for a domain with a simple boundary, in this case, a semi-infinite rod held at zero temperature. Following this powerful method leads to a physically insightful conclusion about the conservation of energy within the system.", "problem": "Consider a one-dimensional semi-infinite rod occupying the region $x \\ge 0$. The temperature evolution $T(x,t)$ in the rod is governed by the heat equation:\n$$\n\\frac{\\partial T}{\\partial t} = D \\frac{\\partial^2 T}{\\partial x^2}\n$$\nwhere $D$ is the thermal diffusivity. The end of the rod at $x=0$ is maintained at a constant zero temperature, i.e., $T(0, t) = 0$ for all $t > 0$. Far from the end, the temperature is assumed to be zero, i.e., $\\lim_{x\\to\\infty} T(x,t) = 0$.\n\nAt time $t=0$, a total amount of heat energy $Q_{tot}$ is deposited at a single point $x=x_0 > 0$. The heat capacity per unit volume of the rod is a constant, given by the product of the specific heat capacity $c$ and the mass density $\\rho$. The initial temperature distribution can be represented as:\n$$\nT(x, 0) = \\frac{Q_{tot}}{c\\rho A} \\delta(x-x_0)\n$$\nwhere $A$ is the constant cross-sectional area of the rod and $\\delta(x)$ is the Dirac delta function.\n\nThe heat flux (energy per unit time per unit area) along the rod is given by Fourier's law: $J(x,t) = -k \\frac{\\partial T}{\\partial x}(x,t)$, where $k$ is the thermal conductivity. The thermal diffusivity is related to these constants by $D=k/(c\\rho)$.\n\nThe task is to derive an expression for the total heat energy, $Q_{abs}$, absorbed by the zero-temperature boundary at $x=0$ over all time ($t>0$). This is the total energy that flows out of the rod and into the boundary. Express the final answer in terms of the initial heat deposited $Q_{tot}$.", "solution": "We solve the heat equation on $x\\ge0$ with Dirichlet boundary at $x=0$ by the method of images. The Green’s function for a point source at $x_0>0$ is\n$$\nT(x,t)=\\frac{Q_{tot}}{c\\rho A}\\frac{1}{\\sqrt{4\\pi Dt}}\n\\Bigl[e^{-\\frac{(x-x_0)^2}{4Dt}}-e^{-\\frac{(x+x_0)^2}{4Dt}}\\Bigr],\n$$\nwhich enforces $T(0,t)=0$.  The heat flux into the boundary is\n$$\nJ(0,t)=-k\\frac{\\partial T}{\\partial x}\\Big|_{x=0}\n=-k\\frac{Q_{tot}}{c\\rho A}\\frac{x_0}{D\\,t\\sqrt{4\\pi Dt}}\ne^{-\\frac{x_0^2}{4Dt}}\\,.\n$$\nThe total power absorbed is $P(t)=A[-J(0,t)]$, hence\n$$\nQ_{abs}=\\int_0^\\infty P(t)\\,dt\n=\\int_0^\\infty\\frac{Q_{tot}\\,x_0}{t\\sqrt{4\\pi Dt}}\ne^{-\\frac{x_0^2}{4Dt}}\\,dt.\n$$\nSet $a=x_0^2/(4D)$.  Then\n$$\n\\int_0^\\infty t^{-3/2}e^{-a/t}\\,dt\n=a^{-1/2}\\Gamma\\bigl(\\tfrac12\\bigr)\n=\\frac{\\sqrt\\pi}{\\sqrt a}\n=\\frac{2\\sqrt{\\pi D}}{x_0}\\,.\n$$\nThus\n$$\nQ_{abs}\n=Q_{tot}\\,\\frac{x_0}{2\\sqrt{\\pi D}}\\;\n\\frac{2\\sqrt{\\pi D}}{x_0}\n=Q_{tot}\\,.\n$$", "answer": "$$\\boxed{Q_{tot}}$$", "id": "1108092"}, {"introduction": "A crucial aspect of understanding theoretical concepts is verifying their fundamental properties. The Green's function for the diffusion equation represents the evolving distribution of an initial unit point source, and as such, it must conserve the total quantity (e.g., heat energy or probability mass) over time. This computational practice [@problem_id:2419418] shifts our focus from analytical derivation to numerical validation. By writing a program to integrate the Green's function over all space, you will confirm this vital conservation law, strengthening your intuition for why the Green's function is truly the fundamental solution to the diffusion equation.", "problem": "Consider the fundamental solution (Green’s function) of the diffusion (heat) equation in one spatial dimension and in two spatial dimensions. For a positive diffusion coefficient $D$ and time $t>0$, the one-dimensional Green’s function is\n$$\nG_{1}(x,t;D)=\\frac{1}{\\sqrt{4\\pi D t}}\\exp\\!\\left(-\\frac{x^{2}}{4Dt}\\right),\n$$\ndefined for $x\\in\\mathbb{R}$, and the two-dimensional Green’s function is\n$$\nG_{2}(\\mathbf{r},t;D)=\\frac{1}{4\\pi D t}\\exp\\!\\left(-\\frac{\\|\\mathbf{r}\\|^{2}}{4Dt}\\right),\n$$\ndefined for $\\mathbf{r}\\in\\mathbb{R}^{2}$. The mathematical statement of conservation of total “energy” (total probability mass) for these fundamental solutions is that the corresponding improper integrals over the entire spatial domain equal $1$, that is,\n$$\nI_{1}(D,t)=\\int_{-\\infty}^{\\infty} G_{1}(x,t;D)\\,dx,\n\\quad\nI_{2}(D,t)=\\iint_{\\mathbb{R}^{2}} G_{2}(\\mathbf{r},t;D)\\,d^{2}\\mathbf{r},\n$$\nand conservation requires $I_{1}(D,t)=1$ and $I_{2}(D,t)=1$ for all $D>0$ and $t>0$.\n\nYour task is to write a complete, runnable program that numerically evaluates these improper integrals for given parameter values $(D,t)$ in one spatial dimension and in two spatial dimensions, respectively, and returns the computed values. The program must compute $I_{1}(D,t)$ and $I_{2}(D,t)$ by numerical integration over the full domains $\\mathbb{R}$ and $\\mathbb{R}^{2}$, without using any closed-form antiderivatives.\n\nTest suite:\n- Case $1$ (one-dimensional): $D=0.5$, $t=2.0$; compute $I_{1}(D,t)$.\n- Case $2$ (two-dimensional): $D=1.0$, $t=0.1$; compute $I_{2}(D,t)$.\n- Case $3$ (two-dimensional, small time): $D=1.0$, $t=10^{-4}$; compute $I_{2}(D,t)$.\n- Case $4$ (one-dimensional, large time and diffusion): $D=3.0$, $t=100.0$; compute $I_{1}(D,t)$.\n- Case $5$ (two-dimensional, small diffusion): $D=10^{-3}$, $t=5.0$; compute $I_{2}(D,t)$.\n\nYour program must produce a single line of output containing the results, in the same order as the cases above, as a comma-separated list enclosed in square brackets. Each result must be a floating-point number rounded to exactly $10$ decimal places. For example, the output must have the form\n$[r_{1},r_{2},r_{3},r_{4},r_{5}]$,\nwhere $r_{k}$ is the rounded numerical value for case $k$.", "solution": "The problem requires the numerical evaluation of two improper integrals, $I_1$ and $I_2$, which represent the total probability mass for the fundamental solutions of the one- and two-dimensional diffusion equations, respectively. This problem is well-posed, scientifically sound, and complete. The conservation law inherent in the diffusion process dictates that the analytical value of these integrals is exactly $1$ for any valid parameters $D>0$ and $t>0$. Our task is to verify this property numerically.\n\nThe numerical approach will rely on the `scipy.integrate.quad` function, which implements a robust adaptive quadrature algorithm suitable for improper integrals.\n\nFor the $1$-dimensional case, the integral to be computed is\n$$\nI_{1}(D,t)=\\int_{-\\infty}^{\\infty} G_{1}(x,t;D)\\,dx = \\int_{-\\infty}^{\\infty} \\frac{1}{\\sqrt{4\\pi D t}}\\exp\\!\\left(-\\frac{x^{2}}{4Dt}\\right) dx\n$$\nThis integral is computed directly by passing the integrand $G_1(x, t; D)$ and the domain $(-\\infty, \\infty)$ to the numerical quadrature routine.\n\nFor the $2$-dimensional case, direct numerical integration of\n$$\nI_{2}(D,t)=\\iint_{\\mathbb{R}^{2}} G_{2}(\\mathbf{r},t;D)\\,d^{2}\\mathbf{r} = \\iint_{\\mathbb{R}^{2}} \\frac{1}{4\\pi D t}\\exp\\!\\left(-\\frac{\\|\\mathbf{r}\\|^{2}}{4Dt}\\right) d^{2}\\mathbf{r}\n$$\nis inefficient. A superior method is to transform the integral to polar coordinates $(r, \\theta)$, where $\\|\\mathbf{r}\\| = r$ and the area element is $d^{2}\\mathbf{r} = r\\,dr\\,d\\theta$. The integration domain $\\mathbb{R}^2$ corresponds to $r \\in [0, \\infty)$ and $\\theta \\in [0, 2\\pi)$. The integral transforms to\n$$\nI_{2}(D, t) = \\int_0^{2\\pi} \\int_0^{\\infty} \\frac{1}{4\\pi D t}\\exp\\left(-\\frac{r^2}{4Dt}\\right) r\\,dr\\,d\\theta\n$$\nAs the integrand lacks dependence on $\\theta$, the angular integration is trivial and yields a factor of $2\\pi$. This reduces the problem to a single $1$-dimensional integral:\n$$\nI_{2}(D, t) = \\frac{2\\pi}{4\\pi D t} \\int_0^{\\infty} r \\exp\\left(-\\frac{r^2}{4Dt}\\right) dr = \\frac{1}{2Dt} \\int_0^{\\infty} r \\exp\\left(-\\frac{r^2}{4Dt}\\right) dr\n$$\nThis simplified integral over the domain $[0, \\infty)$ is then computed numerically with high efficiency and accuracy.\n\nThe program will process each of the $5$ test cases provided:\n1.  $1\\text{D}$: $D=0.5$, $t=2.0$\n2.  $2\\text{D}$: $D=1.0$, $t=0.1$\n3.  $2\\text{D}$: $D=1.0$, $t=10^{-4}$\n4.  $1\\text{D}$: $D=3.0$, $t=100.0$\n5.  $2\\text{D}$: $D=10^{-3}$, $t=5.0$\n\nIt will select the appropriate integration method ($1$D or the polar-reduced $2$D) for each case. The final numerical results will be rounded to exactly $10$ decimal places and presented in the specified list format.", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    \"\"\"\n    Numerically evaluates the improper integrals for the Green's functions\n    of the 1D and 2D diffusion equations for specified test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each tuple contains: (dimensionality, D, t)\n    test_cases = [\n        (1, 0.5, 2.0),\n        (2, 1.0, 0.1),\n        (2, 1.0, 1e-4),\n        (1, 3.0, 100.0),\n        (2, 10**-3, 5.0)\n    ]\n\n    # Define the integrand for the 1D case, G_1(x, t; D).\n    def g1_integrand(x, D, t):\n        \"\"\"Integrand for the 1D Green's function G_1.\"\"\"\n        denominator = 4.0 * D * t\n        prefactor = 1.0 / np.sqrt(np.pi * denominator)\n        return prefactor * np.exp(-x**2 / denominator)\n\n    # Define the integrand for the 2D case after reduction to 1D via polar coordinates.\n    # This corresponds to f(r) = (r / (2*D*t)) * exp(-r^2 / (4*D*t)).\n    def g2_integrand_polar(r, D, t):\n        \"\"\"Integrand for the 2D Green's function in polar coordinates.\"\"\"\n        denominator = 4.0 * D * t\n        prefactor = r / (2.0 * D * t)\n        return prefactor * np.exp(-r**2 / denominator)\n\n    results = []\n    for case in test_cases:\n        dim, D, t = case\n        \n        integral_value = 0.0\n        if dim == 1:\n            # Perform the 1D improper integral from -inf to +inf.\n            integral_value, _ = quad(g1_integrand, -np.inf, np.inf, args=(D, t))\n        else:  # dim == 2\n            # Perform the 1D improper integral from 0 to +inf for the polar-reduced problem.\n            integral_value, _ = quad(g2_integrand_polar, 0, np.inf, args=(D, t))\n        \n        results.append(integral_value)\n\n    # Final print statement in the exact required format.\n    # Each result is formatted to 10 decimal places.\n    print(f\"[{','.join(f'{res:.10f}' for res in results)}]\")\n\nsolve()\n```", "id": "2419418"}]}