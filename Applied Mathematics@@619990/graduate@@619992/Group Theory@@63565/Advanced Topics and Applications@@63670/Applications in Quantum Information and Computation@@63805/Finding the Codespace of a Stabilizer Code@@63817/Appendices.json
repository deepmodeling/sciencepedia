{"hands_on_practices": [{"introduction": "The first step in analyzing a quantum error-correcting code is to understand its fundamental capacity: how much information can it protect? This exercise guides you through determining the number of logical qubits, $k$, encoded by a given set of stabilizer generators. You will then construct a valid pair of logical operators, $\\bar{X}$ and $\\bar{Z}$, which are the essential tools for manipulating the encoded information. Mastering the skill of identifying operators that commute with stabilizers while retaining their own required algebraic structure is foundational to the entire field of fault-tolerant quantum computation [@problem_id:1651090].", "problem": "In the field of fault-tolerant quantum computing, stabilizer codes are a foundational tool for protecting quantum states from decoherence and errors. A quantum state is encoded into a larger system of physical qubits, and the encoded information resides in a specific subspace known as the codespace.\n\nConsider a simple quantum memory system based on a four-qubit stabilizer code. The codespace is defined as the subspace of states that are left invariant (i.e., have an eigenvalue of +1) by two stabilizer generators, $S_1$ and $S_2$. These generators are given by tensor products of single-qubit Pauli operators ($I, X, Y, Z$):\n$$S_1 = X_1 \\otimes X_2 \\otimes X_3 \\otimes X_4$$\n$$S_2 = Z_1 \\otimes Z_2 \\otimes Z_3 \\otimes Z_4$$\nThe subscript denotes the physical qubit on which the operator acts. The single-qubit Pauli operators satisfy the relations $X^2=Y^2=Z^2=I$, and they anti-commute (e.g., $XY = -YX$).\n\nA logical operator is an operator that preserves the codespace (i.e., it commutes with all stabilizer generators) but is not itself an element of the stabilizer group (nor a multiple of the identity). A logical qubit is defined by a pair of logical operators, a logical-X ($\\bar{X}$) and a logical-Z ($\\bar{Z}$), which must satisfy the same anti-commutation relation as their single-qubit counterparts: $\\bar{X}\\bar{Z} = -\\bar{Z}\\bar{X}$.\n\nBased on this system, perform the following tasks:\n1. Determine the number of logical qubits, $k$, that are encoded by this four-qubit code.\n2. Find one valid pair of anti-commuting logical operators, $\\bar{X}$ and $\\bar{Z}$. Express your operators in a simplified tensor product notation, for example, as $X_1 Z_3$ for $X \\otimes I \\otimes Z \\otimes I$.\n\nPresent your final answer as a row matrix containing the number of logical qubits $k$, your chosen logical operator $\\bar{X}$, and your chosen logical operator $\\bar{Z}$, in that order.", "solution": "We are given a stabilizer code on $n=4$ physical qubits with two stabilizer generators\n$$\nS_{1} = X_{1} X_{2} X_{3} X_{4}, \\qquad S_{2} = Z_{1} Z_{2} Z_{3} Z_{4}.\n$$\nFirst, we verify that $S_{1}$ and $S_{2}$ commute. On each qubit, $X$ and $Z$ anti-commute, so there are $4$ anti-commutations across the tensor product and the total commutation phase is $(-1)^{4}=+1$, which implies $[S_{1},S_{2}]=0$. They are also independent (neither is the identity nor is one a multiple of the other), so the stabilizer rank is $m=2$.\n\nBy the stabilizer code dimension formula, the number of logical qubits is\n$$\nk = n - m = 4 - 2 = 2.\n$$\nThis means the code can store 2 logical qubits.\n\nNext, we construct a pair of logical operators for one of these logical qubits. A logical operator must commute with both stabilizers but not be an element of the stabilizer group. A valid pair, $\\bar{X}$ and $\\bar{Z}$, must also anti-commute with each other. Consider the choice:\n$$\n\\bar{X} = X_{1} X_{3}, \\qquad \\bar{Z} = Z_{1} Z_{2}.\n$$\nWe verify commutation with the stabilizers:\n- $[\\bar{X}, S_1] = [X_{1} X_{3}, X_{1} X_{2} X_{3} X_{4}] = 0$ since all operators are Pauli-X.\n- $[\\bar{X}, S_2] = [X_{1} X_{3}, Z_{1} Z_{2} Z_{3} Z_{4}] = 0$ because there are two pairs of operators that anti-commute ($(X_1, Z_1)$ and $(X_3, Z_3)$), resulting in a phase of $(-1)^2 = +1$.\n- $[\\bar{Z}, S_1] = [Z_{1} Z_{2}, X_{1} X_{2} X_{3} X_{4}] = 0$ because there are two pairs of operators that anti-commute ($(Z_1, X_1)$ and $(Z_2, X_2)$), resulting in a phase of $(-1)^2 = +1$.\n- $[\\bar{Z}, S_2] = [Z_{1} Z_{2}, Z_{1} Z_{2} Z_{3} Z_{4}] = 0$ since all operators are Pauli-Z.\n\nNeither $\\bar{X}$ nor $\\bar{Z}$ is in the stabilizer group $\\mathcal{S} = \\{I, S_1, S_2, S_1S_2 = Y_1Y_2Y_3Y_4\\}$. Finally, we verify their anti-commutation:\n$$\n\\bar{X}\\bar{Z} = (X_{1} X_{3})(Z_{1} Z_{2}) = X_1 Z_1 X_3 Z_2 = (-Z_1 X_1) X_3 Z_2 = -Z_1 Z_2 X_1 X_3 = - \\bar{Z}\\bar{X}.\n$$\nThe single minus sign arises from the anti-commutation on qubit 1. Thus, a valid answer is $k=2$ with the choice $\\bar{X} = X_{1} X_{3}$ and $\\bar{Z} = Z_{1} Z_{2}$.", "answer": "$$\\boxed{\\begin{pmatrix} 2 & X_{1} X_{3} & Z_{1} Z_{2} \\end{pmatrix}}$$", "id": "1651090"}, {"introduction": "While logical operators allow us to manipulate states within the codespace, it is equally important to have a concrete mathematical description of the codespace itself. This practice focuses on constructing the projector operator, $P$, which maps any state in the full Hilbert space onto the protected subspace defined by the stabilizers. By building the explicit matrix representation of this projector, you will gain a tangible understanding of how the stabilizer group carves out the codespace, moving from an abstract algebraic definition to a concrete linear-algebraic object [@problem_id:678638].", "problem": "In quantum information theory, a stabilizer code is a type of quantum error-correcting code defined by a stabilizer group $\\mathcal{S}$, which is an abelian subgroup of the Pauli group $G_n$ on $n$ qubits. The codespace $\\mathcal{C}$ is the subspace of the $n$-qubit Hilbert space simultaneously stabilized by every element of $\\mathcal{S}$, i.e.,\n$$ \\mathcal{C} = \\{ |\\psi\\rangle \\in (\\mathbb{C}^2)^{\\otimes n} : S|\\psi\\rangle = |\\psi\\rangle \\text{ for all } S \\in \\mathcal{S} \\}. $$\nThe Pauli operators for a single qubit are given in the computational basis $\\{|0\\rangle, |1\\rangle\\}$ by:\n$$ X = \\begin{pmatrix} 0 & 1 \\\\ 1 & 0 \\end{pmatrix}, \\quad Y = \\begin{pmatrix} 0 & -i \\\\ i & 0 \\end{pmatrix}, \\quad Z = \\begin{pmatrix} 1 & 0 \\\\ 0 & -1 \\end{pmatrix}, \\quad I = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}. $$\nThe operator for a Pauli matrix acting on the $k$-th qubit in an $n$-qubit system is denoted by a subscript, e.g., $Y_k$.\n\nThe projector onto the codespace $\\mathcal{C}$ is given by the formula:\n$$ P = \\frac{1}{|\\mathcal{S}|} \\sum_{S \\in \\mathcal{S}} S, $$\nwhere $|\\mathcal{S}|$ is the number of elements in the stabilizer group.\n\nConsider a 3-qubit code whose stabilizer group $\\mathcal{S}$ is generated by the two operators $g_1 = Y_1 Y_2$ and $g_2 = Y_2 Y_3$. Derive the matrix representation of the projector $P$ onto the codespace of this code. Express your answer as an $8 \\times 8$ matrix in the standard computational basis, ordered as $\\{|000\\rangle, |001\\rangle, |010\\rangle, |011\\rangle, |100\\rangle, |101\\rangle, |110\\rangle, |111\\rangle\\}$.", "solution": "The stabilizer group $\\mathcal{S}$ is generated by $g_1 = Y_1 Y_2$ and $g_2 = Y_2 Y_3$. Since $g_1$ and $g_2$ commute, the full stabilizer group consists of all their products: $\\mathcal{S} = \\{I, g_1, g_2, g_1g_2\\}$. The product of the generators is $g_1g_2 = (Y_1Y_2)(Y_2Y_3) = Y_1(Y_2^2)Y_3 = Y_1 I_2 Y_3 = Y_1Y_3$. Thus, the group has $|\\mathcal{S}|=4$ elements: $\\mathcal{S}=\\{I, Y_1Y_2, Y_2Y_3, Y_1Y_3\\}$.\n\nThe projector onto the codespace is the average of all group elements:\n$$P=\\frac{1}{4}\\sum_{S\\in\\mathcal{S}}S = \\frac{1}{4}\\bigl(I \\otimes I \\otimes I + Y_1Y_2 \\otimes I_3 + I_1 \\otimes Y_2Y_3 + Y_1 \\otimes I_2 \\otimes Y_3\\bigr)$$\nTo find the matrix representation in the standard computational basis (ordered from $|000\\rangle$ to $|111\\rangle$), we construct the matrix for each of the four terms and sum them. This yields the final projector matrix.", "answer": "$$\\boxed{\\frac{1}{4}\\begin{pmatrix}\n1 & 0 & 0 & -1 & 0 & -1 & -1 & 0\\\\\n0 & 1 & 1 & 0 & 1 & 0 & 0 & -1\\\\\n0 & 1 & 1 & 0 & 1 & 0 & 0 & -1\\\\\n-1& 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n0 & 1 & 1 & 0 & 1 & 0 & 0 & -1\\\\\n-1& 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n-1& 0 & 0 & 1 & 0 & 1 & 1 & 0\\\\\n0 & -1& -1& 0 & -1& 0 & 0 & 1\n\\end{pmatrix}}$$", "id": "678638"}, {"introduction": "The principles of stabilizer codes find their most powerful expression in topological codes, which are leading candidates for building fault-tolerant quantum computers. In this problem, you will apply your skills to the celebrated toric code, a system where qubits are arranged on a lattice and stabilized by local operators. Instead of the full projector, you will construct a specific logical basis state, $|{\\bar 0}\\rangle$, and determine its structure in the computational basis. This exercise [@problem_id:678687] offers a glimpse into how the geometric layout of stabilizers gives rise to robustly encoded information, connecting quantum error correction to the physics of topological phases of matter.", "problem": "The toric code is a quantum error-correcting code defined on a two-dimensional square lattice with periodic boundary conditions, forming a torus. Qubits are placed on the edges of this lattice. The code is defined by a set of stabilizer generators associated with the vertices and plaquettes (faces) of the lattice.\n\nConsider an $L_x \\times L_y$ lattice. The total number of qubits is $n = 2 L_x L_y$. The stabilizer group $S$ is generated by two types of operators:\n1.  **Vertex operators:** For each vertex $v$ on the lattice, the operator $A_v$ is the product of Pauli-$X$ operators on all edges connected to $v$ (the star of $v$).\n    $$A_v = \\prod_{j \\in \\text{star}(v)} X_j$$\n2.  **Plaquette operators:** For each plaquette $p$ on the lattice, the operator $B_p$ is the product of Pauli-$Z$ operators on all edges forming the boundary of $p$.\n    $$B_p = \\prod_{j \\in \\partial p} Z_j$$\n\nAll stabilizer operators commute with each other. The codespace $\\mathcal{C}$ is the subspace of the total Hilbert space simultaneously stabilized by all generators, i.e., for any state $|\\psi\\rangle \\in \\mathcal{C}$, we have $A_v |\\psi\\rangle = |\\psi\\rangle$ and $B_p |\\psi\\rangle = |\\psi\\rangle$ for all $v$ and $p$.\n\nThe logical-zero state, denoted $|\\bar{0}\\rangle$, is a specific state within the codespace. It can be constructed by projecting the state $|0\\rangle^{\\otimes n} \\equiv |00\\dots0\\rangle$ (where all qubits are in the $|0\\rangle$ state) onto the codespace. When expanded in the computational basis (the basis of states like $|q_1 q_2 \\dots q_n\\rangle$ where $q_i \\in \\{0,1\\}$), the state $|\\bar{0}\\rangle$ is a superposition of several basis states.\n\nFor a toric code defined on a $3 \\times 2$ toroidal lattice, calculate the number of non-zero terms in the computational basis expansion of the logical-zero state $|\\bar{0}\\rangle$.", "solution": "The logical-zero state $|\\bar{0}\\rangle$ is defined as the equal superposition of all states stabilized by the plaquette operators $B_p$ and the vertex operators $A_v$. Since the state $|0\\rangle^{\\otimes n}$ is already an eigenstate of all $Z$ operators (and thus all $B_p$ operators) with eigenvalue +1, constructing $|\\bar{0}\\rangle$ only requires projecting $|0\\rangle^{\\otimes n}$ with the vertex (or \"star\") operators. This projection is equivalent to summing over the action of the entire group $G_A$ generated by the vertex operators $\\{A_v\\}$:\n$$|\\bar{0}\\rangle \\propto \\left( \\prod_v (I + A_v) \\right) |0\\rangle^{\\otimes n} = \\sum_{g \\in G_A} g |0\\rangle^{\\otimes n}$$\nEach distinct element $g \\in G_A$ is a product of some subset of the vertex generators. Acting on the all-zeros state $|0\\rangle^{\\otimes n}$, each distinct $g$ produces a unique computational basis state. Therefore, the number of non-zero terms in the expansion of $|\\bar{0}\\rangle$ is equal to the size of the group $G_A$.\n\nFor a toric code on an $L_x \\times L_y$ lattice, there are $V = L_x L_y$ vertices, and thus $V$ vertex generators $A_v$. However, on a torus, these generators are not independent; they have one relation: $\\prod_{v} A_v = I$. This is because each edge connects two vertices, so every Pauli-X operator appears exactly twice in the total product. The number of independent vertex generators is thus $V-1$. For a $3 \\times 2$ lattice, we have $V = 3 \\times 2 = 6$ vertices, which gives $6 - 1 = 5$ independent generators. The size of the group generated by these 5 independent, commuting, order-2 operators is $2^5 = 32$.", "answer": "$$\\boxed{32}$$", "id": "678687"}]}