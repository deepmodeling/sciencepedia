{"hands_on_practices": [{"introduction": "这项基础练习旨在将形状算子的抽象定义具体化。通过处理一个由函数图像定义的曲面，你将从零开始计算第一和第二基本形式，并用它们来构建形状算子的矩阵表示。这种直接的计算方法 [@problem_id:3003619] 巩固了这些几何对象之间的核心关系，并让你对形状算子如何量化局部曲率有一个切实的理解。", "problem": "考虑一个光滑曲面（$\\mathbb{R}^{3}$中的一个超曲面），它由一个函数的图像给出，参数化形式为 $X(u,v) = \\big(u, v, g(u,v)\\big)$，其中\n$$\ng(u,v) = \\frac{1}{2}\\big(\\lambda u^{2} + 2 \\mu u v + \\nu v^{2}\\big) + \\frac{1}{6}\\big(\\alpha u^{3} + \\beta v^{3}\\big),\n$$\n并且 $\\lambda$、$\\mu$、$\\nu$、$\\alpha$、$\\beta$ 是实常数。假设环境空间具有标准的欧几里得度量及其Levi-Civita联络。在点 $(u,v) = (0,0)$ 处进行计算。\n\n从诱导度量（第一基本形式）、单位法向量、第二基本形式和形状算子（Weingarten映射）的基本定义出发，完成以下任务：\n\n- 计算在 $(0,0)$ 处的第一基本形式 $I$。\n- 构造在 $(0,0)$ 处的单位法向量 $N$。\n- 使用 $\\mathbb{R}^{3}$ 中的欧几里得联络计算在 $(0,0)$ 处的第二基本形式 $\\mathrm{II}$。\n- 计算在 $(0,0)$ 处的形状算子 $S$，并对于 $(0,0)$ 处的切向量 $X, Y$ 建立关系式 $\\mathrm{II}(X,Y) = I(SX, Y)$。\n\n最后，对于在 $(0,0)$ 处由 $T(\\theta) = \\cos(\\theta)\\,\\partial_{u} + \\sin(\\theta)\\,\\partial_{v}$ 给出的单位切向量（角度 $\\theta$ 是相对于 $\\partial_{u}$-方向的弧度），计算在 $(0,0)$ 处的法曲率 $\\kappa_{n}(\\theta)$，并将其表示为关于 $\\lambda$、$\\mu$、$\\nu$ 和 $\\theta$ 的单个闭式解析表达式。\n\n仅报告您得到的 $\\kappa_{n}(\\theta)$ 的最终表达式。无需进行四舍五入。", "solution": "曲面 $M$ 由参数化 $X(u,v) = \\big(u, v, g(u,v)\\big)$ 给出，其中\n$$g(u,v) = \\frac{1}{2}\\big(\\lambda u^{2} + 2 \\mu u v + \\nu v^{2}\\big) + \\frac{1}{6}\\big(\\alpha u^{3} + \\beta v^{3}\\big)$$\n我们需要计算在点 $p = X(0,0)$ 处的几个几何量。\n\n首先，我们计算函数 $g(u,v)$ 的偏导数。\n一阶偏导数是：\n$$g_u(u,v) = \\frac{\\partial g}{\\partial u} = \\lambda u + \\mu v + \\frac{1}{2}\\alpha u^2$$\n$$g_v(u,v) = \\frac{\\partial g}{\\partial v} = \\mu u + \\nu v + \\frac{1}{2}\\beta v^2$$\n在点 $(u,v)=(0,0)$ 处，它们是：\n$$g_u(0,0) = 0$$\n$$g_v(0,0) = 0$$\n二阶偏导数是：\n$$g_{uu}(u,v) = \\frac{\\partial^2 g}{\\partial u^2} = \\lambda + \\alpha u$$\n$$g_{uv}(u,v) = \\frac{\\partial^2 g}{\\partial u \\partial v} = \\mu$$\n$$g_{vv}(u,v) = \\frac{\\partial^2 g}{\\partial v^2} = \\nu + \\beta v$$\n在点 $(u,v)=(0,0)$ 处，它们是：\n$$g_{uu}(0,0) = \\lambda$$\n$$g_{uv}(0,0) = \\mu$$\n$$g_{vv}(0,0) = \\nu$$\n注意，$g(u,v)$ 中的三次项对在 $(0,0)$ 处的二阶导数没有贡献。此外，$g(0,0)=0$，所以我们关心的点是原点 $p=(0,0,0) \\in \\mathbb{R}^3$。\n\n切空间 $T_p M$ 由向量 $X_u = \\frac{\\partial X}{\\partial u}$ 和 $X_v = \\frac{\\partial X}{\\partial v}$ 张成。\n$$X_u(u,v) = \\big(1, 0, g_u(u,v)\\big)$$\n$$X_v(u,v) = \\big(0, 1, g_v(u,v)\\big)$$\n在 $(u,v)=(0,0)$ 处计算，切空间 $T_p M$ 的基向量为：\n$$X_u(0,0) = \\big(1, 0, 0\\big)$$\n$$X_v(0,0) = \\big(0, 1, 0\\big)$$\n\n第一基本形式 $I$ 由系数 $E$、$F$ 和 $G$ 决定，它们是这些基向量在环境空间 $\\mathbb{R}^3$ 中的内积。在 $p=(0,0,0)$ 处：\n$$E(0,0) = \\langle X_u(0,0), X_u(0,0) \\rangle = \\langle (1,0,0), (1,0,0) \\rangle = 1$$\n$$F(0,0) = \\langle X_u(0,0), X_v(0,0) \\rangle = \\langle (1,0,0), (0,1,0) \\rangle = 0$$\n$$G(0,0) = \\langle X_v(0,0), X_v(0,0) \\rangle = \\langle (0,1,0), (0,1,0) \\rangle = 1$$\n第一基本形式 $I$ 在点 $p$ 处关于基 $\\{X_u, X_v\\}$ 的矩阵表示为：\n$$[I]_p = \\begin{pmatrix} E & F \\\\ F & G \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}$$\n\n单位法向量 $N$ 由 $N = \\frac{X_u \\times X_v}{\\|X_u \\times X_v\\|}$ 给出。首先，我们计算叉积：\n$$X_u \\times X_v = \\det \\begin{pmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\ 1 & 0 & g_u \\\\ 0 & 1 & g_v \\end{pmatrix} = (-g_u, -g_v, 1)$$\n在 $(u,v)=(0,0)$ 处，这变为：\n$$(X_u \\times X_v)(0,0) = (-g_u(0,0), -g_v(0,0), 1) = (0,0,1)$$\n其大小为 $\\|(0,0,1)\\| = 1$。因此，在点 $p$ 处的单位法向量是：\n$$N(0,0) = (0,0,1)$$\n\n第二基本形式 $\\mathrm{II}$ 由系数 $L$、$M$、$N_{\\mathrm{II}}$ 决定，这些系数涉及参数化函数的二阶导数在法向量上的投影。\n首先，我们求出 $X(u,v)$ 的二阶偏导数：\n$$X_{uu}(u,v) = (0,0,g_{uu}(u,v))$$\n$$X_{uv}(u,v) = (0,0,g_{uv}(u,v))$$\n$$X_{vv}(u,v) = (0,0,g_{vv}(u,v))$$\n在 $(u,v)=(0,0)$ 处，它们是：\n$$X_{uu}(0,0) = (0,0,\\lambda)$$\n$$X_{uv}(0,0) = (0,0,\\mu)$$\n$$X_{vv}(0,0) = (0,0,\\nu)$$\n在点 $p$ 处 $\\mathrm{II}$ 的系数为：\n$$L(0,0) = \\langle X_{uu}(0,0), N(0,0) \\rangle = \\langle (0,0,\\lambda), (0,0,1) \\rangle = \\lambda$$\n$$M(0,0) = \\langle X_{uv}(0,0), N(0,0) \\rangle = \\langle (0,0,\\mu), (0,0,1) \\rangle = \\mu$$\n$$N_{\\mathrm{II}}(0,0) = \\langle X_{vv}(0,0), N(0,0) \\rangle = \\langle (0,0,\\nu), (0,0,1) \\rangle = \\nu$$\n第二基本形式 $\\mathrm{II}$ 在点 $p$ 处的矩阵表示为：\n$$[\\mathrm{II}]_p = \\begin{pmatrix} L & M \\\\ M & N_{\\mathrm{II}} \\end{pmatrix} = \\begin{pmatrix} \\lambda & \\mu \\\\ \\mu & \\nu \\end{pmatrix}$$\n\n形状算子（或 Weingarten 映射）$S_p: T_p M \\to T_p M$ 在基 $\\{X_u, X_v\\}$ 中的矩阵表示 $[S]_p$ 由 $[S]_p = [I]_p^{-1} [\\mathrm{II}]_p$ 给出。\n由于 $[I]_p$ 是单位矩阵，其逆矩阵也是单位矩阵。因此：\n$$[S]_p = \\begin{pmatrix} 1 & 0 \\\\ 0 & 1 \\end{pmatrix}^{-1} \\begin{pmatrix} \\lambda & \\mu \\\\ \\mu & \\nu \\end{pmatrix} = \\begin{pmatrix} \\lambda & \\mu \\\\ \\mu & \\nu \\end{pmatrix}$$\n为了建立关系式 $\\mathrm{II}(X,Y) = I(SX, Y)$，令 $X = c_1 X_u + c_2 X_v$ 和 $Y = d_1 X_u + d_2 X_v$ 为点 $p$ 处的切向量。以矩阵形式，坐标向量为 $\\mathbf{x}=(c_1, c_2)^T$ 和 $\\mathbf{y}=(d_1, d_2)^T$：\n$$\\mathrm{II}(X,Y) = \\mathbf{x}^T [\\mathrm{II}]_p \\mathbf{y}$$\n$$I(SX, Y) = ([S]_p \\mathbf{x})^T [I]_p \\mathbf{y} = \\mathbf{x}^T [S]_p^T [I]_p \\mathbf{y}$$\n鉴于 $[I]_p$ 是单位矩阵且 $[S]_p$ 是对称的，我们有 $I(SX,Y) = \\mathbf{x}^T [S]_p \\mathbf{y}$。因为 $[S]_p = [\\mathrm{II}]_p$，所以恒等式 $\\mathrm{II}(X,Y) = I(SX, Y)$ 得到验证。\n\n最后，我们计算单位切向量 $T(\\theta) = \\cos(\\theta)\\,\\partial_u + \\sin(\\theta)\\,\\partial_v$ 的法曲率 $\\kappa_n(\\theta)$。在点 $p$ 处，该向量为 $T(\\theta) = \\cos(\\theta)X_u(0,0) + \\sin(\\theta)X_v(0,0)$。\n这是一个关于诱导度量 $I$ 的单位向量，因为：\n$$I(T(\\theta), T(\\theta)) = \\cos^2(\\theta)E + 2\\cos(\\theta)\\sin(\\theta)F + \\sin^2(\\theta)G = \\cos^2(\\theta)(1) + 2\\cos(\\theta)\\sin(\\theta)(0) + \\sin^2(\\theta)(1) = 1$$\n在单位切向量 $T$ 方向上的法曲率 $\\kappa_n$ 由 $\\kappa_n(T) = \\mathrm{II}(T,T)$ 给出。\n对于 $T(\\theta)$，这便是：\n$$\\kappa_n(\\theta) = \\mathrm{II}(T(\\theta), T(\\theta)) = \\mathrm{II}(\\cos(\\theta)X_u + \\sin(\\theta)X_v, \\cos(\\theta)X_u + \\sin(\\theta)X_v)$$\n根据 $\\mathrm{II}$ 的双线性性质：\n$$\\kappa_n(\\theta) = \\cos^2(\\theta)\\,\\mathrm{II}(X_u, X_u) + 2\\cos(\\theta)\\sin(\\theta)\\,\\mathrm{II}(X_u, X_v) + \\sin^2(\\theta)\\,\\mathrm{II}(X_v, X_v)$$\n代入系数 $L, M, N_{\\mathrm{II}}$：\n$$\\kappa_n(\\theta) = L\\cos^2(\\theta) + 2M\\cos(\\theta)\\sin(\\theta) + N_{\\mathrm{II}}\\sin^2(\\theta)$$\n$$\\kappa_n(\\theta) = \\lambda\\cos^2(\\theta) + 2\\mu\\cos(\\theta)\\sin(\\theta) + \\nu\\sin^2(\\theta)$$\n这就是法曲率的最终表达式，称为欧拉公式。", "answer": "$$\n\\boxed{\\lambda\\cos^{2}(\\theta) + 2\\mu\\cos(\\theta)\\sin(\\theta) + \\nu\\sin^{2}(\\theta)}\n$$", "id": "3003619"}, {"introduction": "在直接计算的基础上，这项练习引入了一个更优雅、更强大的工具：活动标架法。你将把这项技术应用于旋转曲面——一类在几何学和物理学中常见且重要的曲面。这项实践 [@problem_id:3003640] 展示了如何利用一个适应曲面的标准正交标架来简化形状算子的计算，从而直接揭示沿经线和纬线的两个主曲率和主方向。", "problem": "考虑一个在三维欧几里得空间 $\\mathbb{R}^{3}$ 中的光滑旋转曲面，该曲面由 $rz$-平面中的一条单位速率平面曲线 $\\gamma(\\sigma) = \\big(r(\\sigma), z(\\sigma)\\big)$ 绕 $z$-轴旋转得到，其中对于所有的 $\\sigma$ 都有 $r(\\sigma) > 0$。该曲面参数化为\n$$\nX(\\sigma,\\theta) = \\big(r(\\sigma)\\cos\\theta,\\ r(\\sigma)\\sin\\theta,\\ z(\\sigma)\\big),\n$$\n其中角度以弧度为单位。令 $\\nabla$ 表示 $\\mathbb{R}^{3}$ 上的 Levi-Civita 联络，并令 $S$ 为形状算子（Weingarten 映射），其定义为 $S(V) = -\\big(\\nabla_{V} n\\big)^{\\top}$，适用于任意切向量 $V$。这里 $n$ 是一个单位法向量场，$(\\cdot)^{\\top}$ 表示切向投影。\n\n使用活动标架法，完成以下任务：\n\n1. 构造一个适应于该曲面的标准正交标架 $(e_{\\sigma}, e_{\\theta}, n)$，其中 $e_{\\sigma}$ 沿子午线（$\\sigma$-曲线）相切，$e_{\\theta}$ 沿纬线（$\\theta$-曲线）相切，而 $n$ 是朝外的单位法向量。\n\n2. 仅从上述定义出发，计算作为切平面上线性映射的形状算子 $S$。将其表示为在一般点 $(\\sigma,\\theta)$ 处相对于标准正交基 $(e_{\\sigma}, e_{\\theta})$ 的一个 $2\\times 2$ 矩阵。确定沿子午线和纬线的主方向和主曲率。\n\n现在，特化到以下显式旋转曲面（一个环面）：固定常数 $R>r_{0}>0$ 并设\n$$\nr(\\sigma) = R + r_{0}\\cos\\!\\left(\\frac{\\sigma}{r_{0}}\\right), \\qquad z(\\sigma) = r_{0}\\sin\\!\\left(\\frac{\\sigma}{r_{0}}\\right).\n$$\n注意 $\\sigma$ 是沿轮廓线的弧长。使用你得到的 $S$ 及其主曲率的一般公式，确定高斯曲率 $K(\\sigma)$ 并在点 $(\\sigma,\\theta)=(0,0)$ 处求值。你的最终答案必须是单一的闭式解析表达式。", "solution": "我们从由 $X(\\sigma,\\theta) = \\big(r(\\sigma)\\cos\\theta,\\ r(\\sigma)\\sin\\theta,\\ z(\\sigma)\\big)$ 参数化的一般旋转曲面开始。\n\n**1. 标准正交标架的构造**\n\n首先，我们计算沿坐标曲线的切向量。$X$ 关于 $\\sigma$ 和 $\\theta$ 的偏导数是：\n$$\nX_{\\sigma} = \\frac{\\partial X}{\\partial \\sigma} = \\big(r'(\\sigma)\\cos\\theta,\\ r'(\\sigma)\\sin\\theta,\\ z'(\\sigma)\\big)\n$$\n$$\nX_{\\theta} = \\frac{\\partial X}{\\partial \\theta} = \\big(-r(\\sigma)\\sin\\theta,\\ r(\\sigma)\\cos\\theta,\\ 0\\big)\n$$\n其中撇号表示对 $\\sigma$ 的微分。\n\n接下来，我们计算这些切向量的范数。利用轮廓线 $\\gamma(\\sigma)$ 是单位速率的这一事实，即 $(r'(\\sigma))^2 + (z'(\\sigma))^2 = 1$，我们求出第一基本形式的系数：\n$$\ng_{\\sigma\\sigma} = \\langle X_{\\sigma}, X_{\\sigma} \\rangle = (r')^2\\cos^2\\theta + (r')^2\\sin^2\\theta + (z')^2 = (r')^2 + (z')^2 = 1\n$$\n$$\ng_{\\theta\\theta} = \\langle X_{\\theta}, X_{\\theta} \\rangle = (-r\\sin\\theta)^2 + (r\\cos\\theta)^2 + 0^2 = r^2\\sin^2\\theta + r^2\\cos^2\\theta = r^2\n$$\n$$\ng_{\\sigma\\theta} = \\langle X_{\\sigma}, X_{\\theta} \\rangle = -r'r\\cos\\theta\\sin\\theta + r'r\\sin\\theta\\cos\\theta + 0 = 0\n$$\n因为 $g_{\\sigma\\theta}=0$，坐标向量 $X_{\\sigma}$ 和 $X_{\\theta}$ 是正交的。\n通过将 $X_{\\sigma}$ 和 $X_{\\theta}$ 单位化，可以找到与曲面相切的标准正交标架向量：\n$$\ne_{\\sigma} = \\frac{X_{\\sigma}}{\\|X_{\\sigma}\\|} = \\frac{X_{\\sigma}}{\\sqrt{g_{\\sigma\\sigma}}} = X_{\\sigma} = \\big(r'\\cos\\theta,\\ r'\\sin\\theta,\\ z'\\big)\n$$\n$$\ne_{\\theta} = \\frac{X_{\\theta}}{\\|X_{\\theta}\\|} = \\frac{X_{\\theta}}{\\sqrt{g_{\\theta\\theta}}} = \\frac{1}{r}X_{\\theta} = \\big(-\\sin\\theta,\\ \\cos\\theta,\\ 0\\big)\n$$\n通过将叉积 $X_{\\sigma} \\times X_{\\theta}$ 单位化，可以找到单位法向量 $n$：\n$$\nX_{\\sigma} \\times X_{\\theta} = \\det\\begin{pmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\ r'\\cos\\theta & r'\\sin\\theta & z' \\\\ -r\\sin\\theta & r\\cos\\theta & 0 \\end{pmatrix} = \\big(-z'r\\cos\\theta,\\ -z'r\\sin\\theta,\\ r'r\\big)\n$$\n其大小为 $\\|X_{\\sigma} \\times X_{\\theta}\\| = \\sqrt{g_{\\sigma\\sigma}g_{\\theta\\theta} - g_{\\sigma\\theta}^2} = \\sqrt{1 \\cdot r^2 - 0^2} = r$。由于 $r>0$，我们有：\n$$\nn = \\frac{X_{\\sigma} \\times X_{\\theta}}{r} = \\big(-z'\\cos\\theta,\\ -z'\\sin\\theta,\\ r'\\big)\n$$\n该向量代表朝外的法向量。三元组 $(e_{\\sigma}, e_{\\theta}, n)$ 构成一个适应于曲面的右手标准正交标架。\n\n**2. 形状算子的计算**\n\n形状算子 $S$ 将切平面映射到自身。它在标准正交基 $(e_{\\sigma}, e_{\\theta})$ 中的矩阵表示的元素为 $S_{ij} = \\langle S(e_i), e_j \\rangle$。\n$S$ 的作用由 $S(V) = -\\nabla_V n$ 给出。在环境空间 $\\mathbb{R}^3$ 中，联络 $\\nabla$ 是标准的方向导数。由于 $n$ 是曲面上的单位向量场，其导数 $\\nabla_V n$ 与曲面相切，因此切向投影 $(\\cdot)^\\top$ 在这些向量上是恒等映射。\n我们有 $\\nabla_{e_{\\sigma}} n = \\frac{1}{\\|X_\\sigma\\|}\\frac{\\partial n}{\\partial \\sigma} = \\frac{\\partial n}{\\partial \\sigma}$ 和 $\\nabla_{e_{\\theta}} n = \\frac{1}{\\|X_\\theta\\|}\\frac{\\partial n}{\\partial \\theta} = \\frac{1}{r}\\frac{\\partial n}{\\partial \\theta}$。\n我们计算 $n$ 的偏导数：\n$$\n\\frac{\\partial n}{\\partial \\sigma} = \\big(-z''\\cos\\theta,\\ -z''\\sin\\theta,\\ r''\\big)\n$$\n$$\n\\frac{\\partial n}{\\partial \\theta} = \\big(z'\\sin\\theta,\\ -z'\\cos\\theta,\\ 0\\big)\n$$\n因此，$S$ 对基向量的作用是：\n$$\nS(e_{\\sigma}) = -\\frac{\\partial n}{\\partial \\sigma} = \\big(z''\\cos\\theta,\\ z''\\sin\\theta,\\ -r''\\big)\n$$\n$$\nS(e_{\\theta}) = -\\frac{1}{r}\\frac{\\partial n}{\\partial \\theta} = -\\frac{1}{r}\\big(z'\\sin\\theta,\\ -z'\\cos\\theta,\\ 0\\big) = \\big(-\\frac{z'}{r}\\sin\\theta,\\ \\frac{z'}{r}\\cos\\theta,\\ 0\\big)\n$$\n矩阵元素是与基向量的内积：\n$$\nS_{11} = \\langle S(e_{\\sigma}), e_{\\sigma} \\rangle = \\langle \\big(z''\\cos\\theta, z''\\sin\\theta, -r''\\big), \\big(r'\\cos\\theta, r'\\sin\\theta, z'\\big) \\rangle = z''r'\\cos^2\\theta + z''r'\\sin^2\\theta - r''z' = r'z'' - r''z'\n$$\n这是轮廓线 $\\gamma(\\sigma)$ 的曲率，我们记为 $\\kappa_1$。\n$$\nS_{12} = \\langle S(e_{\\sigma}), e_{\\theta} \\rangle = \\langle \\big(z''\\cos\\theta, z''\\sin\\theta, -r''\\big), \\big(-\\sin\\theta, \\cos\\theta, 0\\big) \\rangle = -z''\\cos\\theta\\sin\\theta + z''\\sin\\theta\\cos\\theta + 0 = 0\n$$\n由于形状算子是自伴的，所以 $S_{21} = S_{12} = 0$。\n$$\nS_{22} = \\langle S(e_{\\theta}), e_{\\theta} \\rangle = \\langle \\big(-\\frac{z'}{r}\\sin\\theta, \\frac{z'}{r}\\cos\\theta, 0\\big), \\big(-\\sin\\theta, \\cos\\theta, 0\\big) \\rangle = \\frac{z'}{r}\\sin^2\\theta + \\frac{z'}{r}\\cos^2\\theta = \\frac{z'}{r}\n$$\n这是纬线的法曲率，记为 $\\kappa_2$。\n形状算子在基 $(e_{\\sigma}, e_{\\theta})$ 中的矩阵是对角的：\n$$\nS = \\begin{pmatrix} r'z'' - r''z' & 0 \\\\ 0 & \\frac{z'}{r} \\end{pmatrix}\n$$\n主方向是沿子午线 ($e_{\\sigma}$) 和纬线 ($e_{\\theta}$) 的方向。主曲率是 $\\kappa_1 = r'z'' - r''z'$ 和 $\\kappa_2 = \\frac{z'}{r}$。\n\n**特化到环面**\n\n现在我们使用环面的特定参数化：\n$$\nr(\\sigma) = R + r_{0}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right), \\qquad z(\\sigma) = r_{0}\\sin\\left(\\frac{\\sigma}{r_{0}}\\right)\n$$\n我们计算关于 $\\sigma$ 的必要导数：\n$r'(\\sigma) = -\\sin\\left(\\frac{\\sigma}{r_{0}}\\right)$\n$r''(\\sigma) = -\\frac{1}{r_{0}}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)$\n$z'(\\sigma) = \\cos\\left(\\frac{\\sigma}{r_{0}}\\right)$\n$z''(\\sigma) = -\\frac{1}{r_{0}}\\sin\\left(\\frac{\\sigma}{r_{0}}\\right)$\n\n我们将这些代入主曲率的公式中：\n$\\kappa_1 = r'z'' - r''z' = \\left(-\\sin\\left(\\frac{\\sigma}{r_{0}}\\right)\\right)\\left(-\\frac{1}{r_{0}}\\sin\\left(\\frac{\\sigma}{r_{0}}\\right)\\right) - \\left(-\\frac{1}{r_{0}}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)\\right)\\left(\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)\\right)$\n$\\kappa_1 = \\frac{1}{r_{0}}\\sin^2\\left(\\frac{\\sigma}{r_{0}}\\right) + \\frac{1}{r_{0}}\\cos^2\\left(\\frac{\\sigma}{r_{0}}\\right) = \\frac{1}{r_{0}}$\n这个值是常数，正如所预期的，因为轮廓线是一个半径为 $r_0$ 的圆。\n\n$\\kappa_2 = \\frac{z'}{r} = \\frac{\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)}{R + r_{0}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)}$\n\n**高斯曲率及求值**\n\n高斯曲率 $K$ 是主曲率的乘积，即 $K = \\kappa_1 \\kappa_2$。\n$$\nK(\\sigma) = \\left(\\frac{1}{r_{0}}\\right) \\left( \\frac{\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)}{R + r_{0}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)} \\right) = \\frac{\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)}{r_{0}\\left(R + r_{0}\\cos\\left(\\frac{\\sigma}{r_{0}}\\right)\\right)}\n$$\n问题要求在对应于 $(\\sigma, \\theta) = (0,0)$ 的点处 $K(\\sigma)$ 的值。高斯曲率 $K$ 仅依赖于 $\\sigma$。我们在 $\\sigma=0$ 处求值：\n$$\nK(0) = \\frac{\\cos\\left(\\frac{0}{r_{0}}\\right)}{r_{0}\\left(R + r_{0}\\cos\\left(\\frac{0}{r_{0}}\\right)\\right)} = \\frac{\\cos(0)}{r_{0}(R + r_{0}\\cos(0))} = \\frac{1}{r_{0}(R + r_{0}(1))}\n$$\n因此，在指定点的高斯曲率为：\n$$\nK(0) = \\frac{1}{r_{0}(R + r_{0})}\n$$\n该点 $X(0,0) = (R+r_0, 0, 0)$ 位于环面的外赤道上，这是一个具有正高斯曲率的椭圆区域，与我们的结果一致。", "answer": "$$\\boxed{\\frac{1}{r_{0}(R + r_{0})}}$$", "id": "3003640"}, {"introduction": "这最后一项实践将静态的曲率描述与它在几何演化中的动态作用联系起来。你将为平均曲率流设计一个数值方案，这是几何分析中的一个基本概念，其中曲面会演化以最小化其面积。这项练习 [@problem_id:3003632] 说明了形状算子的迹（即平均曲率）如何充当这种演化的“驱动力”，为你提供了一个进入激动人心的计算几何流领域的实践入门。", "problem": "您将设计并实现一个显式数值格式，以使用形状算子（Weingarten 映射）来演化在平均曲率流下的、以图 $z = h(x,y,t)$ 形式给出的曲面。请纯粹在沉浸于欧几里得三维空间中并参数化为 $X(u,v,t) = (u, v, h(u,v,t))$ 的曲面背景下进行操作。您必须从核心定义出发推导该格式，并使用有限差分法在具有周期性边界条件的均匀矩形网格上实现它。\n\n使用的基本基础和定义：\n- 第一基本形式 $g$ 是一个 $2 \\times 2$ 矩阵 $g = \\begin{pmatrix} E & F \\\\ F & G \\end{pmatrix}$，其中 $E = \\langle X_u, X_u \\rangle$，$F = \\langle X_u, X_v \\rangle$，$G = \\langle X_v, X_v \\rangle$。\n- 单位法向量为 $n = \\dfrac{X_u \\times X_v}{\\|X_u \\times X_v\\|}$。\n- 第二基本形式 $II$ 是一个 $2 \\times 2$ 矩阵 $II = \\begin{pmatrix} e & f \\\\ f & g_2 \\end{pmatrix}$，其中 $e = \\langle X_{uu}, n \\rangle$，$f = \\langle X_{uv}, n \\rangle$，$g_2 = \\langle X_{vv}, n \\rangle$。\n- 形状算子（Weingarten 映射）是切空间上的 $S = g^{-1} II$，其特征值是主曲率。主曲率之和等于 $\\operatorname{tr} S$。\n\n图几何特化：\n- 对于 $X(u,v) = (u, v, h(u,v))$，记 $h_x = \\partial_x h$，$h_y = \\partial_y h$，$h_{xx} = \\partial_{xx} h$，$h_{xy} = \\partial_{xy} h$，$h_{yy} = \\partial_{yy} h$，以及 $W = \\sqrt{1 + h_x^2 + h_y^2}$。\n- 于是 $E = 1 + h_x^2$，$F = h_x h_y$，$G = 1 + h_y^2$，以及 $e = \\dfrac{h_{xx}}{W}$，$f = \\dfrac{h_{xy}}{W}$，$g_2 = \\dfrac{h_{yy}}{W}$。\n- 由此，$\\operatorname{tr} S$ 可以纯粹用 $h$ 及其一阶和二阶导数表示：\n$$\n\\operatorname{tr} S \\;=\\; \\frac{(1 + h_y^2)\\,h_{xx} - 2 h_x h_y\\, h_{xy} + (1 + h_x^2)\\,h_{yy}}{W^3}.\n$$\n\n图的平均曲率流：\n- 根据平均曲率流 $X_t = H_{\\mathrm{tot}}\\, n$ 进行演化，约定 $H_{\\mathrm{tot}} = \\operatorname{tr} S$（主曲率之和）。对于图，这产生了一个关于 $h$ 的标量演化律：\n$$\n\\partial_t h \\;=\\; W \\, \\operatorname{tr} S \\;=\\; W \\, \\frac{(1 + h_y^2)\\,h_{xx} - 2 h_x h_y\\, h_{xy} + (1 + h_x^2)\\,h_{yy}}{W^3}\n\\;=\\; W \\operatorname{div}\\!\\left(\\frac{\\nabla h}{W}\\right).\n$$\n- 注意，对于小斜率，此方程线性化为热方程 $\\partial_t h \\approx \\Delta h$。\n\n离散化要求：\n- 在一个具有 $N \\times N$ 个点和双向周期性边界条件的方形域上使用均匀网格。\n- 对一阶和二阶导数使用中心有限差分：\n  - $h_x \\approx \\dfrac{h(x+\\Delta x, y) - h(x-\\Delta x, y)}{2\\Delta x}$，\n  - $h_y \\approx \\dfrac{h(x, y+\\Delta y) - h(x, y-\\Delta y)}{2\\Delta y}$，\n  - $h_{xx} \\approx \\dfrac{h(x+\\Delta x, y) - 2 h(x,y) + h(x-\\Delta x, y)}{\\Delta x^2}$，\n  - $h_{yy} \\approx \\dfrac{h(x, y+\\Delta y) - 2 h(x,y) + h(x, y-\\Delta y)}{\\Delta y^2}$，\n  - $h_{xy} \\approx \\dfrac{h(x+\\Delta x,y+\\Delta y) - h(x+\\Delta x,y-\\Delta y) - h(x-\\Delta x,y+\\Delta y) + h(x-\\Delta x,y-\\Delta y)}{4 \\Delta x \\Delta y}$。\n- 通过上述公式，由离散导数构建 $\\operatorname{tr} S$。\n- 演化一个显式欧拉步：\n$$\nh^{n+1} \\;=\\; h^n \\;+\\; \\Delta t \\, W(h^n) \\, \\operatorname{tr} S(h^n).\n$$\n\n需要在您的解决方案中讨论的稳定性问题：\n- 解释对于小斜率，该格式线性化为离散热方程的前向欧拉法，其经典条件为 $\\Delta t \\leq \\dfrac{\\Delta x^2 \\, \\Delta y^2}{2(\\Delta x^2 + \\Delta y^2)}$。对于 $\\Delta x = \\Delta y$，这简化为 $\\Delta t \\leq \\dfrac{\\Delta x^2}{4}$。\n- 为了在具有周期性边界的非线性情况下保证鲁棒性，声明并使用一个保守选择，如 $\\Delta t_{\\max} = 0.24 \\, \\min(\\Delta x, \\Delta y)^2$。\n\n测试套件和要求的输出：\n- 使用一个 $N = 65$ 的方形网格，域为 $[-1,1] \\times [-1,1]$，因此 $\\Delta x = \\Delta y = \\dfrac{2}{N-1}$。\n- 在时间 $t=0$ 定义以下曲面 $h(x,y)$：\n  1. 平面：$h(x,y) = 0$。\n  2. 抛物面：$h(x,y) = \\dfrac{x^2 + y^2}{2R}$，其中 $R = 2$。在原点处，$W = 1$ 且 $\\operatorname{tr} S = \\dfrac{2}{R}$。\n  3. 球冠：$h(x,y) = \\sqrt{R^2 - x^2 - y^2} - R$，其中 $R = 5$（该域安全地位于球冠内部）。在原点处，$W = 1$ 且 $\\operatorname{tr} S = -\\dfrac{2}{R}$。\n- 对于每个曲面，计算离散的 $\\operatorname{tr} S$ 和 $W$ 场，并记录对应于 $(x,y)=(0,0)$ 的网格索引处的中心点值。\n- 计算保守稳定性界限 $\\Delta t_{\\max} = 0.24 \\, \\Delta x^2$。\n- 使用 $R=2$ 的抛物面，用 $\\Delta t = \\dfrac{1}{2} \\Delta t_{\\max}$ 执行恰好一次显式欧拉更新，并报告观测到的中心高度增量与预测增量 $\\Delta t \\cdot \\dfrac{2}{R}$ 之间的绝对差。\n\n您的程序必须生成单行输出，其中包含以下五个浮点数，顺序完全一致，并用方括号括起来，以逗号分隔：\n- 平面的中心 $\\operatorname{tr} S$ 的绝对值。\n- 抛物面的中心 $\\operatorname{tr} S$ 与理论值 $\\dfrac{2}{R}$ 之间的绝对差。\n- 球冠的中心 $\\operatorname{tr} S$ 与理论值 $-\\dfrac{2}{R}$ 之间的绝对差。\n- 保守稳定性界限 $\\Delta t_{\\max}$。\n- 在抛物面上用 $\\Delta t = \\dfrac{1}{2} \\Delta t_{\\max}$ 执行一步后，观测到的中心增量与预测值 $\\Delta t \\cdot \\dfrac{2}{R}$ 之间的绝对差。\n\n角度单位不适用。不涉及物理单位。您的程序应生成包含结果的单行输出，结果为以逗号分隔的列表，并用方括号括起来（例如，\"[result1,result2,result3,result4,result5]\"）。", "solution": "目标是为以图 $z = h(x,y,t)$ 定义的曲面的平均曲率流实现一个显式数值求解器。高度函数 $h$ 的演化受偏微分方程控制：\n$$\n\\partial_t h = W \\operatorname{tr} S\n$$\n其中 $W = \\sqrt{1 + (\\partial_x h)^2 + (\\partial_y h)^2}$ 且 $\\operatorname{tr} S$ 是形状算子（Weingarten 映射）的迹，等同于主曲率之和。对于图，该迹由以下公式给出：\n$$\n\\operatorname{tr} S = \\frac{(1 + (\\partial_y h)^2)\\,\\partial_{xx} h - 2 (\\partial_x h) (\\partial_y h)\\, \\partial_{xy} h + (1 + (\\partial_x h)^2)\\,\\partial_{yy} h}{W^3}\n$$\n将此代入演化方程，得到更新规则的右侧项（RHS）：\n$$\n\\partial_t h = \\frac{(1 + (\\partial_y h)^2)\\,\\partial_{xx} h - 2 (\\partial_x h) (\\partial_y h)\\, \\partial_{xy} h + (1 + (\\partial_x h)^2)\\,\\partial_{yy} h}{W^2}\n$$\n解决方案涉及在均匀网格上离散化此方程，并使用显式时间步进格式演化一个初始曲面。\n\n**1. 空间导数的离散化**\n问题在 $[-1, 1] \\times [-1, 1]$ 域上的均匀 $N \\times N$ 网格上进行离散化。$N=65$ 时，两个方向的网格间距相同：$\\Delta x = \\Delta y = \\frac{1 - (-1)}{N-1} = \\frac{2}{64} = \\frac{1}{32}$。设 $h_{i,j} = h(x_i, y_j)$ 为网格点 $(i,j)$ 处的高度。我们使用中心有限差分模板来近似每个点的偏导数。周期性边界条件通过环绕网格索引来处理，这可以通过数组滚动操作高效实现。\n\n偏导数的离散近似如下：\n- $ (\\partial_x h) \\vert_{i,j} \\approx \\frac{h_{i+1,j} - h_{i-1,j}}{2\\Delta x} $\n- $ (\\partial_y h) \\vert_{i,j} \\approx \\frac{h_{i,j+1} - h_{i,j-1}}{2\\Delta y} $\n- $ (\\partial_{xx} h) \\vert_{i,j} \\approx \\frac{h_{i+1,j} - 2h_{i,j} + h_{i-1,j}}{\\Delta x^2} $\n- $ (\\partial_{yy} h) \\vert_{i,j} \\approx \\frac{h_{i,j+1} - 2h_{i,j} + h_{i,j-1}}{\\Delta y^2} $\n- $ (\\partial_{xy} h) \\vert_{i,j} \\approx \\frac{h_{i+1,j+1} - h_{i+1,j-1} - h_{i-1,j+1} + h_{i-1,j-1}}{4\\Delta x\\Delta y} $\n\n这些离散导数场在整个网格上计算。然后，根据上述公式，用它们来计算每个网格点上的离散场 $W$ 和 $\\operatorname{tr} S$。\n\n**2. 时间积分与稳定性**\n时间演化使用显式前向欧拉法进行。给定时间步 $n$ 的高度场 $h^n$，下一个时间步 $n+1$ 的场计算如下：\n$$\nh^{n+1} = h^n + \\Delta t \\, (\\partial_t h)^n = h^n + \\Delta t \\, (W \\operatorname{tr} S)^n\n$$\n其中 $(W \\operatorname{tr} S)^n$ 是演化方程的右侧项，使用 $h^n$ 的离散导数来评估。\n\n显式欧拉法只是有条件稳定的。对于平均曲率流方程，在小斜率（$h_x \\ll 1, h_y \\ll 1, W \\approx 1$）下，该方程线性化为热方程 $\\partial_t h \\approx \\Delta h = \\partial_{xx}h + \\partial_{yy}h$。前向欧拉格式的稳定性要求时间步长 $\\Delta t$ 足够小。对于方形网格（$\\Delta x = \\Delta y$）上的二维热方程，标准 CFL 条件是 $\\Delta t \\le \\frac{\\Delta x^2}{4}$。问题为非线性方程指定了一个保守选择，$\\Delta t_{\\max} = 0.24 \\, \\min(\\Delta x, \\Delta y)^2$。由于 $\\Delta x = \\Delta y$，因此 $\\Delta t_{\\max} = 0.24 \\, \\Delta x^2$。\n\n**3. 测试案例的执行**\n实现方案通过一个提供的测试套件进行验证。设计一个辅助函数，用于从输入的高度场 $h$ 计算离散导数以及由此产生的 $W$ 和 $\\operatorname{tr} S$ 场。\n\n- **网格设置**：为 $[-1,1] \\times [-1,1]$ 中的坐标 $(x,y)$ 建立一个 $N=65 \\times N=65$ 的网格。网格的中心点对应于 $(x,y)=(0,0)$。\n\n- **测试案例 1（平面）**：对于 $h(x,y)=0$，所有偏导数恒为零。从解析上看，$W=1$ 且 $\\operatorname{tr} S = 0$。常数场的数值有限差分也精确为零，因此计算出的 $\\operatorname{tr} S$ 为 $0$。\n\n- **测试案例 2（抛物面）**：对于 $h(x,y) = \\frac{x^2+y^2}{2R}$ 且 $R=2$，形状算子的理论迹是常数，$\\operatorname{tr} S = \\frac{2}{R} = 1$。中心差分模板对于二次多项式是精确的，因此在中心点 $(0,0)$（此处 $h_x=h_y=0$）处数值计算的导数是精确的。因此，中心点的 $\\operatorname{tr} S$ 的数值预计将极其接近理论值 $1$。\n\n- **测试案例 3（球冠）**：对于 $h(x,y) = \\sqrt{R^2 - x^2 - y^2} - R$ 且 $R=5$，中心的理论迹为 $\\operatorname{tr} S = -\\frac{2}{R} = -0.4$。与抛物面不同，此函数的有限差分近似不是精确的，会产生截断误差，该误差取决于网格间距 $\\Delta x$。预计数值与理论值之间会有微小偏差。\n\n- **测试案例 4（稳定性界限）**：使用 $\\Delta x = 1/32$ 计算 $\\Delta t_{\\max} = 0.24 \\, \\Delta x^2$ 的值。\n\n- **测试案例 5（抛物面上的欧拉步）**：使用 $\\Delta t = \\frac{1}{2}\\Delta t_{\\max}$ 在抛物面曲面上执行单次时间步。中心点的观测高度增量为 $\\Delta h_{\\text{obs}} = h^{n+1}_{\\text{center}} - h^n_{\\text{center}}$。将此与预测增量 $\\Delta h_{\\text{pred}} = \\Delta t \\cdot \\frac{2}{R}$ 进行比较。由于在抛物面中心对 RHS 项 $(W \\operatorname{tr}S)$ 的数值计算是精确的（$W=1, \\operatorname{tr}S=1$），观测增量应为 $\\Delta t \\cdot 1$，与预测增量 $\\Delta t \\cdot (2/R) = \\Delta t \\cdot 1$ 的差异应可忽略不计（在机器精度范围内）。\n\n```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements a numerical scheme for mean curvature flow and computes\n    the required outputs for the test suite.\n    \"\"\"\n    \n    # 1. Grid and Test Parameters Setup\n    N = 65\n    domain_L = 2.0  # Domain is [-1, 1], so length is 2\n    dx = domain_L / (N - 1)\n    dy = dx  # Square grid\n\n    center_idx = (N - 1) // 2\n\n    x = np.linspace(-1.0, 1.0, N)\n    y = np.linspace(-1.0, 1.0, N)\n    X, Y = np.meshgrid(x, y)\n\n    def compute_tr_S(h, dx, dy):\n        \"\"\"\n        Computes the trace of the shape operator using finite differences.\n        \n        Args:\n            h (np.ndarray): The N x N height field.\n            dx (float): Grid spacing in x.\n            dy (float): Grid spacing in y.\n            \n        Returns:\n            tuple[np.ndarray, np.ndarray]: A tuple containing the W field\n                                           and the tr(S) field.\n        \"\"\"\n        # Periodic boundary conditions via np.roll\n        # First derivatives\n        h_x = (np.roll(h, -1, axis=1) - np.roll(h, 1, axis=1)) / (2 * dx)\n        h_y = (np.roll(h, -1, axis=0) - np.roll(h, 1, axis=0)) / (2 * dy)\n\n        # Second derivatives\n        h_xx = (np.roll(h, -1, axis=1) - 2 * h + np.roll(h, 1, axis=1)) / (dx**2)\n        h_yy = (np.roll(h, -1, axis=0) - 2 * h + np.roll(h, 1, axis=0)) / (dy**2)\n        \n        # Mixed derivative\n        h_xp_yp = np.roll(np.roll(h, -1, axis=1), -1, axis=0)\n        h_xp_ym = np.roll(np.roll(h, -1, axis=1), 1, axis=0)\n        h_xm_yp = np.roll(np.roll(h, 1, axis=1), -1, axis=0)\n        h_xm_ym = np.roll(np.roll(h, 1, axis=1), 1, axis=0)\n        h_xy = (h_xp_yp - h_xp_ym - h_xm_yp + h_xm_ym) / (4 * dx * dy)\n\n        # Compute W\n        W_sq = 1 + h_x**2 + h_y**2\n        W = np.sqrt(W_sq)\n        \n        # Compute tr(S)\n        numerator = (1 + h_y**2) * h_xx - 2 * h_x * h_y * h_xy + (1 + h_x**2) * h_yy\n        tr_S = numerator / (W**3)\n        \n        return W, tr_S\n\n    results = []\n\n    # 2. Test Cases\n    # Test Case 1: Plane\n    h_plane = np.zeros((N, N))\n    _W_plane, tr_S_plane = compute_tr_S(h_plane, dx, dy)\n    result1 = np.abs(tr_S_plane[center_idx, center_idx])\n    results.append(result1)\n\n    # Test Case 2: Paraboloid\n    R_para = 2.0\n    h_para = (X**2 + Y**2) / (2 * R_para)\n    W_para, tr_S_para = compute_tr_S(h_para, dx, dy)\n    tr_S_center_para_num = tr_S_para[center_idx, center_idx]\n    tr_S_center_para_theory = 2.0 / R_para\n    result2 = np.abs(tr_S_center_para_num - tr_S_center_para_theory)\n    results.append(result2)\n\n    # Test Case 3: Spherical Cap\n    R_sphere = 5.0\n    radius_sq = X**2 + Y**2\n    h_sphere = np.sqrt(R_sphere**2 - radius_sq) - R_sphere\n    _W_sphere, tr_S_sphere = compute_tr_S(h_sphere, dx, dy)\n    tr_S_center_sphere_num = tr_S_sphere[center_idx, center_idx]\n    tr_S_center_sphere_theory = -2.0 / R_sphere\n    result3 = np.abs(tr_S_center_sphere_num - tr_S_center_sphere_theory)\n    results.append(result3)\n\n    # Test Case 4: Stability Bound\n    dt_max = 0.24 * dx**2\n    result4 = dt_max\n    results.append(result4)\n\n    # Test Case 5: Euler Step\n    dt = 0.5 * dt_max\n    # Evolution term is W * tr(S)\n    rhs = W_para * tr_S_para\n    h_new = h_para + dt * rhs\n    \n    # Observed increment at center\n    obs_increment = h_new[center_idx, center_idx] - h_para[center_idx, center_idx]\n    \n    # Predicted increment at center. At the center (0,0), W=1, tr(S)=2/R.\n    # The evolution equation dh/dt = W * tr(S) becomes dh/dt = 2/R.\n    pred_increment = dt * (2.0 / R_para)\n    \n    result5 = np.abs(obs_increment - pred_increment)\n    results.append(result5)\n    \n    return f\"[{results[0]},{results[1]},{results[2]},{results[3]},{results[4]}]\"\n\n# The final answer must be the output string, not the code.\n# The `solve()` function is defined to show the logic, and then called to get the result.\nfinal_answer = solve()\n```", "answer": "[0.0,0.0,3.906250000100032e-06,0.000234375,0.0]", "id": "3003632"}]}