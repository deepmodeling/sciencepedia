{"hands_on_practices": [{"introduction": "通用图灵机的核心思想是，它可以通过读取另一台机器 $M$ 的描述及其输入 $w$ 来模拟该机器的运行。为了实现这一点，我们需要一个严谨且无歧义的编码方案，将 $M$ 的抽象组件（如状态、转移函数等）转化为通用图灵机可以理解的简单符号串。这个练习将让你亲手实践这样一个编码过程，将“机器描述”这一抽象概念具体化。[@problem_id:1377308]", "problem": "通用图灵机（UTM）是一种可以模拟任何其他图灵机的图灵机。为此，UTM 的输入带上提供有待模拟机器的编码描述 $\\langle M \\rangle$，其后是该机器的编码输入字符串 $\\langle w \\rangle$。\n\n考虑一个特定的图灵机（TM），记作 $M$。$M$ 的组件定义如下：\n-   **状态：**$Q = \\{q_s, q_f\\}$，其中 $q_s$ 是起始状态，$q_f$ 是接受状态。\n-   **输入字母表：**$\\Sigma = \\{x, y\\}$\n-   **带字母表：**$\\Gamma = \\{x, y, \\beta\\}$，其中 $\\beta$ 代表空白符号。\n-   **转移函数 $\\delta$：**该机器的行为由以下三个按特定顺序给出的转移定义：\n    1.  $\\delta(q_s, x) = (q_s, y, R)$：在状态 $q_s$ 下，读取到符号 $x$ 时，它会写入符号 $y$，将带头向右（R）移动，并保持在状态 $q_s$。\n    2.  $\\delta(q_s, y) = (q_f, x, L)$：在状态 $q_s$ 下，读取到符号 $y$ 时，它会写入符号 $x$，将带头向左（L）移动，并转移到状态 $q_f$。\n    3.  $\\delta(q_s, \\beta) = (q_f, \\beta, R)$：在状态 $q_s$ 下，读取到空白符号 $\\beta$ 时，它会写入 $\\beta$，向右（R）移动，并转移到状态 $q_f$。\n\nUTM 使用一种二进制编码方案（仅使用符号 `0` 和 `1`）来表示机器 $M$ 及其输入字符串 $w$。编码规则如下：\n\n-   **组件到整数的映射：**\n    -   状态：$q_s \\to 1, q_f \\to 2$\n    -   带符号：$x \\to 1, y \\to 2, \\beta \\to 3$\n    -   方向：$L \\to 1, R \\to 2$\n\n-   **整数编码：**一个整数 $n$ 以一元码形式编码为包含 $n$ 个 `0` 的字符串。例如，整数 3 编码为 `000`。\n\n-   **转移编码：**一个形如 $\\delta(q_{curr}, S_{read}) = (q_{next}, S_{write}, D_{move})$ 的单次转移，通过将其五个组件的一元码（按其在定义中出现的顺序）用符号 `1` 分隔并连接起来进行编码。其模式为：`code(q_curr)1code(S_read)1code(q_next)1code(S_write)1code(D_move)`。\n\n-   **机器描述 $\\langle M \\rangle$：**机器 $M$ 的完整描述由其所有转移的编码表示（按照上面列出的特定顺序）用字符串 `11` 分隔并连接而成。\n\n-   **输入字符串编码 $\\langle w \\rangle$：**一个输入字符串 $w$ 通过将其符号的编码表示从左到右用符号 `1` 分隔并连接起来进行编码。\n\n-   **UTM 输入带：**UTM 带上的完整输入是字符串 $\\langle M \\rangle$，后跟分隔符 `111`，再后跟编码的输入字符串 $\\langle w \\rangle$。\n\n您的任务是确定为在输入字符串 $w = \"xy\"$ 上模拟机器 $M$ 而必须放置在 UTM 输入带上的完整二进制字符串。", "solution": "我们首先按照规定将机器组件映射为整数：$q_{s} \\to 1$, $q_{f} \\to 2$；$x \\to 1$, $y \\to 2$, $\\beta \\to 3$；$L \\to 1$, $R \\to 2$。每个整数 $n$ 以一元码形式编码为包含 $n$ 个零的字符串。因此，一元码为：$1 \\mapsto 0$， $2 \\mapsto 00$， $3 \\mapsto 000$。\n\n我们将每个转移 $\\delta(q_{\\text{curr}}, S_{\\text{read}}) = (q_{\\text{next}}, S_{\\text{write}}, D_{\\text{move}})$ 编码为 code$(q_{\\text{curr}})$ 1 code$(S_{\\text{read}})$ 1 code$(q_{\\text{next}})$ 1 code$(S_{\\text{write}})$ 1 code$(D_{\\text{move}})$。\n\n对于转移 1，$\\delta(q_{s}, x) = (q_{s}, y, R)$，其组件为 $q_{s} \\mapsto 0$，$x \\mapsto 0$，$q_{s} \\mapsto 0$，$y \\mapsto 00$，$R \\mapsto 00$，所以编码是：\n$$T_{1} = 0\\,1\\,0\\,1\\,0\\,1\\,00\\,1\\,00 = 01010100100.$$\n\n对于转移 2，$\\delta(q_{s}, y) = (q_{f}, x, L)$，其组件为 $q_{s} \\mapsto 0$，$y \\mapsto 00$，$q_{f} \\mapsto 00$，$x \\mapsto 0$，$L \\mapsto 0$，所以编码是：\n$$T_{2} = 0\\,1\\,00\\,1\\,00\\,1\\,0\\,1\\,0 = 01001001010.$$\n\n对于转移 3，$\\delta(q_{s}, \\beta) = (q_{f}, \\beta, R)$，其组件为 $q_{s} \\mapsto 0$，$\\beta \\mapsto 000$，$q_{f} \\mapsto 00$，$\\beta \\mapsto 000$，$R \\mapsto 00$，所以编码是：\n$$T_{3} = 0\\,1\\,000\\,1\\,00\\,1\\,000\\,1\\,00 = 010001001000100.$$\n\n机器描述是这三个转移按顺序用分隔符 $11$ 连接而成：\n$$\\langle M \\rangle = T_{1}\\,11\\,T_{2}\\,11\\,T_{3} = 01010100100\\,11\\,01001001010\\,11\\,010001001000100 = 01010100100110100100101011010001001000100.$$\n\n输入字符串 $w = \\text{\"xy\"}$ 通过用分隔符 $1$ 连接符号编码来编码：$x \\mapsto 0$，$y \\mapsto 00$，因此\n$$\\langle w \\rangle = 0\\,1\\,00 = 0100.$$\n\nUTM 输入带是 $\\langle M \\rangle$ 后跟分隔符 $111$，然后再跟 $\\langle w \\rangle$：\n$$\\langle M \\rangle\\,111\\,\\langle w \\rangle = 01010100100110100100101011010001001000100\\,111\\,0100 = 010101001001101001001010110100010010001001110100.$$", "answer": "$$\\boxed{010101001001101001001010110100010010001001110100}$$", "id": "1377308"}, {"introduction": "在理解了如何对一台机器进行编码之后，下一个关键问题是关于效率。通用模拟是计算理论的基石，但它并非没有代价。这个练习将探讨通用图灵机模拟另一台机器的计算成本。通过分析一个有界停机问题的时间复杂度，你将学会量化通用模拟所固有的开销，这是计算复杂性理论中的一个基本概念。[@problem_id:1466984]", "problem": "考虑在有界时间内验证程序终止的问题。在理论计算机科学中，这可以用图灵机来建模。我们定义一个语言 $L$，它由图灵机（TM）的编码组成，这些图灵机在空输入带上于指定的步数内停机。\n\n该语言的正式定义如下：\n$L = \\{ \\langle M, 1^t \\rangle \\mid M \\text{ 是图灵机 M 的字符串描述，且 } M \\text{ 在空输入带上至多 } t \\text{ 个计算步骤内停机} \\}$。\n\n一个假想的判定机的输入是一个单一字符串 $w = \\langle M, 1^t \\rangle$，它是一个定义良好的编码，表示由机器 $M$ 的描述和代表时间界的 $t$ 个1组成的字符串构成的对。为了进行复杂度分析，你可以假设输入字符串的总长度为 $n = |\\langle M \\rangle| + t$，其中 $|\\langle M \\rangle|$ 是机器 $M$ 描述的长度，而 $t$ 是时间界限的整数值。\n\n你的任务是确定一个多带图灵机判定该语言 $L$ 的时间复杂度。对于此分析，假设使用一个多带通用图灵机（UTM）来模拟机器 $M$。此 UTM 的关键性能特征是，模拟机器 $M$ 的一个计算步骤所花费的时间与 $M$ 描述的长度成正比。也就是说，对于某个常数 $c$，$M$ 的一个步骤可以在 $c \\cdot |\\langle M \\rangle|$ 时间内被模拟。\n\n设用于判定语言 $L$ 的多带图灵机的时间复杂度由一个最紧的大O界 $O(f(n))$ 描述，其中 $n$ 是输入字符串的总长度。确定函数 $f(n)$ 的最简多项式表达式。", "solution": "设输入为 $w=\\langle M,1^{t}\\rangle$，并设 $m=|\\langle M\\rangle|$ 表示 $M$ 的编码长度。根据问题陈述，总输入长度为\n$$\nn=m+t.\n$$\n判定过程：使用给定的多带 UTM 在空输入上模拟 $M$ 最多 $t$ 步。如果 $M$ 在 $t$ 步内停机，则接受；否则拒绝。\n\n成本构成：\n1) 解析/验证输入并从 $1^{t}$ 计算 $t$ 的成本为 $O(m+t)=O(n)$ 时间。\n2) 根据假设，模拟 $M$ 的一步需要 $c\\,m$ 的时间，其中 $c$ 是某个常数。在最坏情况下，模拟执行所有 $t$ 步，因此模拟成本最多为\n$$\nc\\,m\\,t.\n$$\n3) 跨越 $t$ 次迭代的循环控制和记账最多增加 $O(t)$，当 $m\\geq 1$ 时，这被 $O(m t)$ 所包含。\n\n因此，总运行时间满足\n$$\nT(m,t)=O(m t+n).\n$$\n为了仅用 $n$ 来表示，使用 $m+t=n$ 和不等式\n$$\nm t \\leq \\frac{(m+t)^{2}}{4}=\\frac{n^{2}}{4},\n$$\n可得\n$$\nT(n)=O\\!\\left(\\frac{n^{2}}{4}+n\\right)=O(n^{2}).\n$$\n紧确性：存在 $m=\\Theta(n)$ 和 $t=\\Theta(n)$ 的输入（例如，$m=\\lfloor n/2\\rfloor$, $t=\\lceil n/2\\rceil$），对于这些输入，判定机必须以每步 $\\Theta(m)$ 的成本模拟 $\\Theta(t)$ 步，从而产生 $\\Theta(m t)=\\Theta(n^{2})$ 的运行时间。因此，最紧的大O界具有 $f(n)=n^{2}$。\n\n因此，$f(n)$ 的最简多项式表达式是 $n^{2}$。", "answer": "$$\\boxed{n^{2}}$$", "id": "1466984"}, {"introduction": "通用模拟的力量超越了直接计算，延伸到算法信息论等理论领域。本练习将这一概念应用于理解柯尔莫哥洛夫复杂度，它衡量了一个对象（如字符串）的描述复杂度。你将运用一个基于模拟的论证方法，来确定一个字符串与其按位补码之间的复杂度关系，从而展示通用图灵机的机制如何为我们推理信息内容提供了强有力的工具。[@problem_id:1647498]", "problem": "在算法信息论中，一个二进制字符串 $x$ 的前缀无关柯尔莫哥洛夫复杂度，记作 $K(x)$，是指对于一个固定的通用图灵机（UTM）而言，能够输出 $x$ 然后停机的最短程序的长度。该定义的一个基本性质是，所有这些最短程序的集合（每个可能的输出字符串对应一个程序）构成一个前缀无关码。\n\n令 $\\bar{x}$ 表示二进制字符串 $x$ 的按位取反。例如，如果 $x$ 是 `10110`，那么 $\\bar{x}$ 就是 `01001`。将 $x$ 转换为 $\\bar{x}$ 的操作是简单且在算法上是通用的。这表明在一个字符串与其补串的复杂度之间可能存在某种关系。\n\n下列哪个陈述最准确地描述了对于任意二进制字符串 $x$，$K(x)$ 和 $K(\\bar{x})$ 之间的一般关系？\n\n（令 $c$ 表示一个与字符串 $x$ 无关的正常数，并令 $|x|$ 表示 $x$ 的长度。）\n\nA. $K(\\bar{x}) = K(x)$\n\nB. $K(\\bar{x}) = |x| - K(x) + c$\n\nC. $|K(x) - K(\\bar{x})| \\le c$\n\nD. $K(\\bar{x}) + K(x) = |x| + c$\n\nE. $K(x)$ 和 $K(\\bar{x})$ 之间没有确定性的关系。", "solution": "令 $U$ 为一台固定的前缀无关通用图灵机，并令 $K(x)$ 表示二进制字符串 $x$ 相对于 $U$ 的前缀无关柯尔莫哥洛夫复杂度。定义全可计算双射 $f$ 为 $f(x)=\\bar{x}$（即按位取反），其逆映射为 $f^{-1}=f$。\n\n构造一个固定的机器 $M$，该机器在输入程序 $p$ 时，模拟 $U$ 在 $p$ 上的运行以产生 $x=U(p)$，然后输出 $f(x)=\\bar{x}$。根据 $U$ 的通用性，存在一个与 $p$ 和 $x$ 无关的常数 $c_{1}$，使得 $U$ 可以模拟 $M$，其增加的开销最多为 $c_{1}$。形式上，对于每个程序 $p$，\n$$\n\\exists p' \\text{ with } |p'| \\le |p| + c_{1} \\text{ and } U(p') = M(p) = f(U(p)).\n$$\n现在令 $p_{x}$ 为 $x$ 的一个最短 $U$-程序，于是有 $|p_{x}| = K(x)$ 且 $U(p_{x})=x$。将上述结论应用于 $p=p_{x}$，得到一个程序 $p'$ 满足\n$$\n|p'| \\le |p_{x}| + c_{1} = K(x) + c_{1}, \\quad U(p') = f(U(p_{x})) = f(x) = \\bar{x}.\n$$\n因此，\n$$\nK(\\bar{x}) \\le K(x) + c_{1}.\n$$\n由于 $f^{-1}=f$ 是同一个可计算双射，将 $x$ 替换为 $\\bar{x}$ 并进行相同的论证可得\n$$\nK(x) \\le K(\\bar{x}) + c_{1}.\n$$\n综合起来，\n$$\n|K(x) - K(\\bar{x})| \\le c_{1}.\n$$\n记 $c=c_{1}$，这是一个与 $x$ 无关的常数，我们便得到了所求的一般关系。由于存在依赖于具体机器的加性常数，精确的等式 $K(\\bar{x})=K(x)$ 不必对所有 $x$ 都成立，但它们的差值受一个常数所界定。因此，在给定的选项中，准确的陈述是 $|K(x) - K(\\bar{x})| \\le c$。", "answer": "$$\\boxed{C}$$", "id": "1647498"}]}