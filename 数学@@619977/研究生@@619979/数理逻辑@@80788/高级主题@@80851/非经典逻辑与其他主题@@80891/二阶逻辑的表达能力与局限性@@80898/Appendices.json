{"hands_on_practices": [{"introduction": "在数理逻辑中，一项基本功是将数学概念转化为形式语言。本练习将引导你完成这一过程，通过一个二元关系来定义函数这一基本结构。更进一步，我们将分析在一阶逻辑中精确表达此定义所需的最小量词秩（quantifier rank），这不仅锻炼了模型论的分析技巧，也揭示了一阶逻辑在表达能力上的内在“成本”，从而凸显了高阶逻辑的简洁与强大。[@problem_id:2972702]", "problem": "您正在一个带等词的完全二阶逻辑中工作，该逻辑基于一个单类署名，此署名包含一个一元谓词符号 $D$（旨在表示论域中的一个特指定子集）和一个二元关系二阶变量 $F$（旨在编码一个定义域为 $D$、陪域也为 $D$ 的函数的图像）。二阶逻辑的语义采用常规的标准语义，其中二阶变量的取值范围是底层论域上的实际子集和关系。您的任务是形式化“函数可由二元关系编码”这一思想，并就量词秩而言，分析陈述这样一个关系代表一个函数所需的一阶复杂性。\n\n请从 Tarski 语义学的基本原理和量词秩的标准定义出发，按以下步骤进行：\n\n1. 通过指定对 $F$ 的一阶约束（参数来自 $D$），解释如何用一个二元关系符号 $F$ 来编码一个定义域和陪域均为 $D$ 的函数，这些约束需捕捉函数的两个定义性属性：在 $D$ 上的全体性（totality）和在 $D$ 上的单值性（single-valuedness）。然后，仅使用对元素的一阶量化、布尔联结词、等词、$D$ 和 $F$，编写一个单一的一阶语句 $\\mathrm{Fun}_{D}(F)$，该语句断言 $F$ 代表一个在 $D$ 上的全体、单值的函数。\n\n2. 回顾并使用以下量词秩的定义。一个一阶公式 $\\varphi$ 的量词秩 $\\mathrm{qr}(\\varphi)$ 归纳定义如下：对于原子公式 $\\varphi$，$\\mathrm{qr}(\\varphi)=0$；对于布尔组合，$\\mathrm{qr}(\\neg\\varphi)=\\mathrm{qr}(\\varphi)$ 且 $\\mathrm{qr}(\\varphi\\land\\psi)=\\max\\{\\mathrm{qr}(\\varphi),\\mathrm{qr}(\\psi)\\}$（对于 $\\lor$ 和 $\\rightarrow$ 类似）；对于量词，$\\mathrm{qr}(\\forall x\\,\\varphi)=\\mathrm{qr}(\\exists x\\,\\varphi)=\\mathrm{qr}(\\varphi)+1$。请计算您在第 1 部分中得到的语句 $\\mathrm{Fun}_{D}(F)$ 的量词秩 $\\mathrm{qr}(\\mathrm{Fun}_{D}(F))$。\n\n3. 仅使用模型论中已充分验证的事实（特别是，您可以依赖由有界量词秩的一阶语句定义的不可区分性的 Ehrenfeucht–Fraïssé 博弈特征化），确定最小可能值 $m\\in\\mathbb{N}$，使得存在某个在语言 $\\{D,F,=\\}$ 中的一阶语句 $\\psi$，它在所有结构上都与 $\\mathrm{Fun}_{D}(F)$ 等价，并且满足 $\\mathrm{qr}(\\psi)=m$。您的最终答案必须是精确的整数 $m$。\n\n请将最终答案表示为一个不带单位的整数。无需四舍五入。", "solution": "此问题需要在数理逻辑的框架内进行多步分析，特别是关于一阶逻辑的表达能力。任务是将函数的概念形式化为二元关系，并确定此形式化所需的最小量词秩。\n\n### 第一部分：函数的形式化\n\n如果一个论域 $U$ 上的二元关系 $F$ 满足两个定义性属性——在定义域 $D$ 上的全体性和对定义域 $D$ 中所有元素的单值性——那么它就代表了一个从定义域 $D \\subseteq U$ 到陪域 $D \\subseteq U$ 的函数。问题要求在署名 $\\{D, F, =\\}$ 中给出一个单一的一阶语句 $\\mathrm{Fun}_{D}(F)$ 来断言这些属性。\n\n1.  **在 $D$ 上的全体性（Totality on $D$）**：对于集合 $D$ 中的每一个元素 $x$，必须存在集合 $D$ 中的至少一个元素 $y$，使得关系 $F(x, y)$ 成立。这确保了函数对其指定定义域中的每个元素都有定义，并且其输出落在指定的陪域内。其一阶形式化为：\n    $$ \\varphi_{\\text{total}} \\equiv \\forall x (D(x) \\rightarrow \\exists y (D(y) \\land F(x, y))) $$\n\n2.  **在 $D$ 上的单值性（Single-valuedness on $D$）**：对于任何元素 $x$（对于一个在 $D$ 上的函数，该元素应在 $D$ 中），如果它与两个元素 $y_1$ 和 $y_2$ 相关，那么这两个元素必须是同一的。这个属性是区分函数与一般关系的关键。它是关系 $F$ 的一个普遍属性，可以在不明确引用 $D$ 的情况下陈述，因为它必须对任何作为 $F$ 中序偶第一个元素的 $x$ 都成立。其形式化为：\n    $$ \\varphi_{\\text{sv}} \\equiv \\forall x \\forall y_1 \\forall y_2 ((F(x, y_1) \\land F(x, y_2)) \\rightarrow y_1 = y_2) $$\n    注意，如果 $x \\notin D$，这个条件对 $F$ 不施加任何约束，这是恰当的。如果 $x \\in D$，它确保了至多存在一个 $y$ 使得 $F(x,y)$。当与 $\\varphi_{\\text{total}}$ 结合时，它确保了恰好存在一个这样的 $y$，并且这个唯一的 $y$ 在 $D$ 中。\n\n完整的一阶语句 $\\mathrm{Fun}_{D}(F)$ 是这两个属性的合取：\n$$ \\mathrm{Fun}_{D}(F) \\equiv \\varphi_{\\text{total}} \\land \\varphi_{\\text{sv}} $$\n$$ \\mathrm{Fun}_{D}(F) \\equiv \\forall x (D(x) \\rightarrow \\exists y (D(y) \\land F(x, y))) \\land \\forall x \\forall y_1 \\forall y_2 ((F(x, y_1) \\land F(x, y_2)) \\rightarrow y_1 = y_2) $$\n\n### 第二部分：量词秩计算\n\n量词秩 $\\mathrm{qr}(\\varphi)$ 根据所提供的归纳定义进行计算。\n\n对于 $\\varphi_{\\text{total}} \\equiv \\forall x (D(x) \\rightarrow \\exists y (D(y) \\land F(x, y)))$:\n- 最内层的原子公式 $D(y)$ 和 $F(x, y)$ 的量词秩为 $0$。\n- 合取 $(D(y) \\land F(x, y))$ 的 $\\mathrm{qr} = \\max(0, 0) = 0$。\n- 子公式 $\\exists y (D(y) \\land F(x, y))$ 的 $\\mathrm{qr} = 0 + 1 = 1$。我们用 $\\psi(x)$ 表示它。\n- 蕴含 $(D(x) \\rightarrow \\psi(x))$ 的 $\\mathrm{qr} = \\max(\\mathrm{qr}(D(x)), \\mathrm{qr}(\\psi(x))) = \\max(0, 1) = 1$。\n- 完整公式 $\\forall x (D(x) \\rightarrow \\psi(x))$ 的 $\\mathrm{qr} = 1 + 1 = 2$。\n因此，$\\mathrm{qr}(\\varphi_{\\text{total}}) = 2$。\n\n对于 $\\varphi_{\\text{sv}} \\equiv \\forall x \\forall y_1 \\forall y_2 ((F(x, y_1) \\land F(x, y_2)) \\rightarrow y_1 = y_2)$:\n- 原子公式 $F(x, y_1)$、$F(x, y_2)$ 和 $y_1 = y_2$ 的 $\\mathrm{qr}$ 均为 $0$。\n- 无量词部分 $((F(x, y_1) \\land F(x, y_2)) \\rightarrow y_1 = y_2)$ 是原子公式的布尔组合，所以其 $\\mathrm{qr}=0$。\n- 子公式 $\\forall y_2 (\\dots)$ 的 $\\mathrm{qr} = 0 + 1 = 1$。\n- 子公式 $\\forall y_1 \\forall y_2 (\\dots)$ 的 $\\mathrm{qr} = 1 + 1 = 2$。\n- 完整公式 $\\forall x \\forall y_1 \\forall y_2 (\\dots)$ 的 $\\mathrm{qr} = 2 + 1 = 3$。\n因此，$\\mathrm{qr}(\\varphi_{\\text{sv}}) = 3$。\n\n对于最终的语句 $\\mathrm{Fun}_{D}(F) \\equiv \\varphi_{\\text{total}} \\land \\varphi_{\\text{sv}}$:\n- 量词秩是其合取项的秩的最大值。\n- $\\mathrm{qr}(\\mathrm{Fun}_{D}(F)) = \\max(\\mathrm{qr}(\\varphi_{\\text{total}}), \\mathrm{qr}(\\varphi_{\\text{sv}})) = \\max(2, 3) = 3$。\n\n### 第三部分：最小量词秩\n\n必须确定与 $\\mathrm{Fun}_{D}(F)$ 等价的语句的最小可能量词秩 $m$。从第二部分可知，我们有一个秩为 $3$ 的显式语句，所以我们知道 $m \\le 3$。为了确立下界，我们必须证明没有秩为 $2$ 的语句可以与 $\\mathrm{Fun}_{D}(F)$ 等价。\n\n我们将使用 Ehrenfeucht–Fraïssé 博弈特征化。两个结构 $\\mathcal{A}$ 和 $\\mathcal{B}$ 对于任何量词秩为 $k$ 的一阶语句都是不可区分的（记作 $\\mathcal{A} \\equiv_k \\mathcal{B}$），当且仅当复制者（Duplicator）在 $k$ 回合的 Ehrenfeucht–Fraïssé 博弈 $G_k(\\mathcal{A}, \\mathcal{B})$ 中有获胜策略。\n\n要证明 $m \\ge 3$，我们需要证明 $\\mathrm{Fun}_{D}(F)$ 不与任何秩为 $2$ 的语句等价。我们可以通过找到两个结构 $\\mathcal{A}$ 和 $\\mathcal{B}$ 来证明这一点，使得：\n1.  $\\mathcal{A} \\models \\mathrm{Fun}_{D}(F)$\n2.  $\\mathcal{B} \\not\\models \\mathrm{Fun}_{D}(F)$\n3.  $\\mathcal{A} \\equiv_2 \\mathcal{B}$（复制者在 $2$ 回合博弈中有获胜策略）。\n\n如果存在这样的结构，那么没有秩为 $2$ 的语句可以区分它们。但 $\\mathrm{Fun}_{D}(F)$ *确实*可以区分它们，所以它不能与任何秩为 $2$ 的语句等价。\n\n让我们关注单值性属性 $\\varphi_{\\text{sv}}$，因为它是秩为 $3$ 的分量。如果 $\\varphi_{sv}$ 本身不能用秩为 $2$ 的公式表达，那么 $\\mathrm{Fun}_{D}(F)$ 很可能也不能，因为这些属性大体上是独立的。令 $\\Phi_{\\neg\\text{sv}}$ 为 $\\varphi_{\\text{sv}}$ 的否定：\n$$ \\Phi_{\\neg\\text{sv}} \\equiv \\exists x \\exists y_1 \\exists y_2 (F(x, y_1) \\land F(x, y_2) \\land y_1 \\neq y_2) $$\n该语句断言存在单值性的反例。它的量词秩为 $3$。为了证明它不与任何秩为 $2$ 的语句等价，我们需要找到结构 $\\mathcal{B} \\models \\Phi_{\\neg\\text{sv}}$ 和 $\\mathcal{A} \\not\\models \\Phi_{\\neg\\text{sv}}$，使得 $\\mathcal{A} \\equiv_2 \\mathcal{B}$。\n\n关键的洞见在于，$\\Phi_{\\neg\\text{sv}}$ 的真值取决于一个由 $3$ 个不同元素（$x, y_1, y_2$）构成的构型，而一个 $2$ 回合的 EF 博弈只允许破坏者（Spoiler）挑选 $2$ 个元素。一个足够大且局部同质的结构可以将 $\\Phi_{\\neg\\text{sv}}$ 的见证从一个 $2$ 回合的博弈中“隐藏”起来。\n\n在有限模型论中有一个标准结果：对于任何整数 $k$，可以构造一对结构 $\\mathcal{A}_k$ 和 $\\mathcal{B}_k$ 使得：\n-   $\\mathcal{A}_k \\equiv_k \\mathcal{B}_k$。\n-   在 $\\mathcal{A}_k$ 中，关系 $F$ 表示一个图，其中每个顶点的出度为 $1$（入度也为 $1$）。例如，许多大圈的不交并。\n-   在 $\\mathcal{B}_k$ 中，关系 $F$ 几乎相同，但它包含一个出度为 $2$ 的顶点。例如，许多大圈和一个大的“棒棒糖”图或“Y形”图的不交并。\n\n对于我们的情况，我们需要 $k=2$。让我们选择结构 $\\mathcal{A}$ 和 $\\mathcal{B}$（我们可以将谓词 $D$ 设置为对所有元素都为真，因为它不影响单值性属性的核心逻辑）。\n-   设 $\\mathcal{A}$ 是一个结构，其中 $F$ 定义了一个图，其中每个顶点的出度至多为 $1$。因此，$\\mathcal{A} \\models \\varphi_{\\text{sv}}$。\n-   设 $\\mathcal{B}$ 是一个结构，其中 $F$ 定义了一个图，其中包含至少一个出度为 $2$ 的顶点。因此，$\\mathcal{B} \\not\\models \\varphi_{\\text{sv}}$。\n\n通过确保这些结构足够大并具有高度的局部同构性（例如，它们主要由像长路径或圈这样的相同组件构成），我们可以确保一个图上任意两个元素的任何子结构也存在于另一个图中。这种相似性是复制者在 $2$ 回合博弈中获胜策略的基础。$\\mathcal{B}$ 的区分性特征——出度为 $2$ 的顶点——需要选择该顶点及其两个不同的后继节点，总共三个元素。破坏者在 $2$ 回合的博弈中无法选择三个元素。因此，复制者有获胜策略，且 $\\mathcal{A} \\equiv_2 \\mathcal{B}$。\n\n由于 $\\mathcal{A} \\models \\mathrm{Fun}_{D}(F)$（如果我们也确保了全体性）而 $\\mathcal{B} \\not\\models \\mathrm{Fun}_{D}(F)$，但 $\\mathcal{A} \\equiv_2 \\mathcal{B}$，所以没有量词秩为 $2$ 的语句能与 $\\mathrm{Fun}_{D}(F)$ 等价。因此，最小量词秩 $m$ 必须严格大于 $2$。\n$$ m > 2 $$\n因为 $m$ 必须是一个整数，所以 $m \\ge 3$。\n结合我们的上界和下界，我们有 $m \\le 3$ 和 $m \\ge 3$。这唯一地确定了最小量词秩。\n$$ m = 3 $$", "answer": "$$\\boxed{3}$$", "id": "2972702"}, {"introduction": "掌握了如何构建公式后，下一步是深入理解它们的语义。本练习提供了一个包含深度嵌套的二阶量词的复杂语句，要求你在一个具体的有限结构上判断其真伪。这不仅仅是一次计算，更是一场对完全二阶语义（full second-order semantics）的深度探索，它要求你系统地梳理每一个量词（从关系到集合）的庞大取值范围，从而将抽象的逻辑符号与具体的数学实在联系起来。[@problem_id:2972691]", "problem": "考虑在完全语义下的二阶逻辑 (SOL)，其中二阶量词的范围是域上的所有关系和函数。设底层一阶签名为-空（没有非逻辑符号），具体的有限结构为域是 $$D = \\{0,1,2,3\\}$$ 的纯集合。\n\n在二阶变量上定义以下二阶谓词：\n\n1. 一个二元关系变量 $$L$$ 是一个严格线性序，如果\n$$\\mathrm{LinOrder}(L) := \\Big( \\forall x\\, \\neg L(x,x) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\forall z\\,\\big( L(x,y) \\wedge L(y,z) \\rightarrow L(x,z) \\big) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\big( x \\neq y \\rightarrow \\big( L(x,y) \\vee L(y,x) \\big) \\big) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\big( \\big( L(x,y) \\wedge L(y,x) \\big) \\rightarrow x = y \\big) \\Big).$$\n\n2. 一个一元关系变量 $$S$$ 恰好是 $$L$$-极小元的集合，如果\n$$\\mathrm{Min\\_L}(S) := \\forall x\\,\\Big( S(x) \\leftrightarrow \\forall y\\,\\neg L(y,x) \\Big).$$\n\n3. 一个二元关系变量 $$R$$ 是一个恰好有两个类的等价关系，如果\n$$\\mathrm{EquivTwo}(R) := \\Big( \\forall x\\, R(x,x) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\big( R(x,y) \\rightarrow R(y,x) \\big) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\forall z\\,\\big( (R(x,y) \\wedge R(y,z)) \\rightarrow R(x,z) \\big) \\Big) \\,\\wedge\\, \\Big( \\exists T\\,\\big( \\exists x\\,T(x) \\wedge \\exists x\\,\\neg T(x) \\wedge \\forall x\\,\\forall y\\,\\big( R(x,y) \\leftrightarrow ( T(x) \\leftrightarrow T(y) ) \\big) \\big) \\Big),$$\n其中 $$T$$ 是一个一元关系变量，它见证了两个 $$R$$-类是 $$T$$ 及其补集。\n\n4. 一个二元关系变量 $$F$$ 是一个全函数关系（一个从 $$D$$ 到 $$D$$ 的函数），其像恰好为 $$S$$ 并且在每个 $$R$$-类上是常数，如果\n$$\\mathrm{Function}(F) := \\Big( \\forall x\\,\\exists y\\,F(x,y) \\Big) \\,\\wedge\\, \\Big( \\forall x\\,\\forall y\\,\\forall z\\,\\big( (F(x,y) \\wedge F(x,z)) \\rightarrow y = z \\big) \\Big),$$\n$$\\mathrm{ImageEq}(F,S) := \\forall y\\,\\Big( S(y) \\leftrightarrow \\exists x\\,F(x,y) \\Big),$$\n$$\\mathrm{ClassConstant}(F,R) := \\forall x\\,\\forall y\\,\\forall z\\,\\forall w\\,\\Big( (R(x,y) \\wedge F(x,z) \\wedge F(y,w)) \\rightarrow z = w \\Big).$$\n\n现在考虑嵌套的二阶句子\n$$\\Phi := \\forall L\\,\\Big( \\mathrm{LinOrder}(L) \\rightarrow \\exists S\\,\\Big( \\mathrm{Min\\_L}(S) \\wedge \\forall R\\,\\big( \\mathrm{EquivTwo}(R) \\rightarrow \\exists F\\,\\big( \\mathrm{Function}(F) \\wedge \\mathrm{ImageEq}(F,S) \\wedge \\mathrm{ClassConstant}(F,R) \\big) \\big) \\Big) \\Big).$$\n\n在域为 $$D = \\{0,1,2,3\\}$$ 的有限结构上，使用完全 SOL 语义，通过明确详述所涉及的二阶量词的范围来评估 $$\\Phi$$ 的真值，包括 $$D$$ 上有多少个二元关系，其中有多少是线性序，有多少个恰好有两个类的等价关系，以及哪些见证函数可以作为 $$F$$。您的最终答案必须是一个数字：如果 $$\\Phi$$ 在该结构中为真，则使用 $$1$$；如果为假，则使用 $$0$$。无需四舍五入。", "solution": "问题要求在域为 $D = \\{0, 1, 2, 3\\}$ 的有限结构上评估二阶句子 $\\Phi$ 的真值。该句子由下式给出：\n$$ \\Phi := \\forall L\\,\\Big( \\mathrm{LinOrder}(L) \\rightarrow \\exists S\\,\\Big( \\mathrm{Min\\_L}(S) \\wedge \\forall R\\,\\big( \\mathrm{EquivTwo}(R) \\rightarrow \\exists F\\,\\big( \\mathrm{Function}(F) \\wedge \\mathrm{ImageEq}(F,S) \\wedge \\mathrm{ClassConstant}(F,R) \\big) \\big) \\Big) \\Big) $$\n为了确定 $\\Phi$ 的真值，我们将在基数为 $|D|=4$ 的域 $D$ 上，根据指定的完全语义，通过从最外层到最内层解构其嵌套量词来分析该句子。\n\n量词 $\\forall L$ 的范围是 $D$ 上的所有二元关系。$D$ 上的一个二元关系是笛卡尔积 $D \\times D$ 的一个子集。$D \\times D$ 的大小是 $|D|^2 = 4^2 = 16$。$D \\times D$ 的子集的总数，也就是 $D$ 上的二元关系的总数，是 $2^{16} = 65536$。句子 $\\Phi$ 是一个全称量化蕴含。如果对于 $D$ 上的每一个二元关系 $L$，蕴含式 $\\mathrm{LinOrder}(L) \\rightarrow \\dots$ 都成立，那么该句子为真。如果其前件 $\\mathrm{LinOrder}(L)$ 为假，或者其后件为真，则该蕴含式为真。因此，我们只需要考虑 $\\mathrm{LinOrder}(L)$ 为真的情况。谓词 $\\mathrm{LinOrder}(L)$ 断言 $L$ 是 $D$ 上的一个严格线性序。一个包含 $n$ 个元素的集合上的一个严格线性序对应于这些元素的一个排列。对于域 $D$，其 $|D|=4$，严格线性序的数量是 $4$ 个元素的排列数，即 $4! = 4 \\times 3 \\times 2 \\times 1 = 24$。我们将继续假设 $L$ 是这 $24$ 个严格线性序之一。\n\n公式的下一部分是 $\\exists S\\,\\Big( \\mathrm{Min\\_L}(S) \\wedge \\dots \\Big)$。变量 $S$ 是一个一元关系，即 $D$ 的一个子集。这样的子集有 $2^{|D|} = 2^4 = 16$ 个。谓词 $\\mathrm{Min\\_L}(S)$ 定义为 $\\forall x\\,\\Big( S(x) \\leftrightarrow \\forall y\\,\\neg L(y,x) \\Big)$。这说明 $S$ 是所有在关系 $L$ 下没有前驱的元素 $x \\in D$ 的集合。由于 $L$ 是一个有限集上的严格线性序，因此必须存在一个唯一的极小元。我们用 $m_L \\in D$ 来表示这个元素。因此，$\\mathrm{Min\\_L}(S)$ 的定义迫使 $S$ 成为单元素集 $\\{m_L\\}$。对于任何给定的线性序 $L$，恰好有一个集合 $S$ 满足 $\\mathrm{Min\\_L}(S)$，即 $S_L = \\{m_L\\}$。因此存在量词 $\\exists S$ 得到满足。对于一个给定的 $L$，该公式的真值现在取决于后续子句的真值，其中 $S$ 被实例化为 $S_L$：\n$$ \\forall R\\,\\big( \\mathrm{EquivTwo}(R) \\rightarrow \\exists F\\,\\big( \\mathrm{Function}(F) \\wedge \\mathrm{ImageEq}(F,S_L) \\wedge \\mathrm{ClassConstant}(F,R) \\big) \\big) $$\n\n量词 $\\forall R$ 的范围是 $D$ 上的所有 $2^{16}$ 个二元关系。谓词 $\\mathrm{EquivTwo}(R)$ 断言 $R$ 是一个恰好有两个等价类的等价关系。这等价于将域 $D$ 划分为两个非空子集。将一个大小为 $n$ 的集合划分为 $k$ 个非空子集的方法数由第二类斯特林数 $S(n,k)$ 给出。在我们的例子中，$n=4$ 且 $k=2$，这个数是 $S(4,2) = 7$。这 $7$ 种划分对应于 $7$ 种可能的具有两个类的等价关系。划分的类型可以是 $(1,3)$，有 $\\binom{4}{1}=4$ 种；或者是 $(2,2)$，有 $\\frac{1}{2!}\\binom{4}{2}=3$ 种。同样，由于是蕴含结构，我们只需要分析 $R$ 是这 $7$ 种关系之一的情况。对于这样的关系 $R$，我们必须验证其后件的真值：\n$$ \\exists F\\,\\big( \\mathrm{Function}(F) \\wedge \\mathrm{ImageEq}(F,S_L) \\wedge \\mathrm{ClassConstant}(F,R) \\big) $$\n\n最后，我们分析最内层的存在量词 $\\exists F$。$F$ 的范围是 $D$ 上的所有 $2^{16}$ 个二元关系。我们需要确定是否存在至少一个关系 $F$，对于给定的 $S_L = \\{m_L\\}$ 和 $R$ 满足三个条件。\n1.  $\\mathrm{Function}(F)$：$F$ 必须表示一个全函数 $f: D \\to D$。这样的函数有 $|D|^{|D|} = 4^4 = 256$ 个。\n2.  $\\mathrm{ImageEq}(F,S_L)$：函数 $f$ 的像必须恰好是 $S_L = \\{m_L\\}$。一个函数的像是一个单元素集 $\\{m_L\\}$，当且仅当它是一个常函数，将其域中的每个元素都映射到 $m_L$。因此，$f$ 必须是对于所有 $x \\in D$ 都定义为 $f(x) = m_L$ 的函数。对于任何给定的 $m_L$，只有一个这样的函数。让与此函数对应的关系为 $F_{const, m_L}$。\n3.  $\\mathrm{ClassConstant}(F,R)$：函数 $f$ 必须在 $R$ 的每个等价类上是常数。这意味着对于任何 $x, y \\in D$，如果 $x$ 和 $y$ 在 $R$ 下属于同一个等价类，那么 $f(x) = f(y)$。\n\n如果我们可以找到一个见证 $F$，那么存在性陈述 $\\exists F(\\dots)$ 就为真。条件 $\\mathrm{ImageEq}(F,S_L)$ 唯一地确定了我们唯一可能的见证候选者：对应于常函数 $f(x) = m_L$ 的关系 $F_{const, m_L}$。我们现在验证这个候选者是否满足所有三个谓词。\n-   $\\mathrm{Function}(F_{const, m_L})$ 为真，因为它表示一个全函数。\n-   $\\mathrm{ImageEq}(F_{const, m_L}, S_L)$ 为真，因为该函数的像是 $\\{m_L\\}$，即 $S_L$。\n-   $\\mathrm{ClassConstant}(F_{const, m_L}, R)$ 为真。函数 $f(x) = m_L$ 在其整个域 $D$ 上是常数。一个在其整个域上是常数的函数，必然在其域的任何子集上也是常数。由于 $R$ 的等价类是 $D$ 的子集，因此该函数在每个类上都是常数。这对任何等价关系 $R$ 都成立。\n\n由于唯一确定的候选者 $F_{const, m_L}$ 是一个有效的见证，因此对于任何具有两个类的等价关系 $R$ 的选择，存在性陈述 $\\exists F(\\dots)$ 都为真。\n\n总而言之，对于任何任意的二元关系 $L$：\n- 如果 $L$ 不是一个严格线性序，那么蕴含式 $\\mathrm{LinOrder}(L) \\rightarrow \\dots$ 虚真。\n- 如果 $L$ 是一个严格线性序，那么存在一个唯一的极小元 $m_L$，定义了一个唯一的集合 $S_L = \\{m_L\\}$。对于这个 $S_L$ 和任何关系 $R$，如果 $R$ 是一个具有两个类的等价关系，我们已经证明存在一个函数 $F$（到 $m_L$ 的常函数）满足所要求的属性。因此，整个蕴含链都为真。\n\n因此，对于域 $D$ 上的所有二元关系 $L$，句子 $\\Phi$ 都为真，这意味着 $\\Phi$ 在给定结构中为真。问题要求最终答案若为真则为 $1$，若为假则为 $0$。", "answer": "$$\\boxed{1}$$", "id": "2972691"}, {"introduction": "尽管完全二阶逻辑的表达能力极强，但也导致了其不可判定的复杂性。然而，其某些片段（fragments）却在表达能力和计算可行性之间取得了精妙的平衡。本练习聚焦于其中最重要的片段之一——在词（words）上的单子二阶逻辑（Monadic Second-Order Logic, MSO），并指导你构建一个 MSO 语句来定义一个正则语言。通过这个过程，你将亲身体会到逻辑可定义性与有限自动机之间的深刻等价关系，这是连接抽象逻辑与理论计算机科学的基石之一。[@problem_id:2972706]", "problem": "设 $\\Sigma = \\{a,b\\}$，考虑 $\\Sigma$ 上的有限词，表示为有限结构，其论域为位置集合，配备了线性序 $$ 和一元谓词 $A(x)$、$B(x)$，分别表示位置 $x$ 上的字母是 $a$ 或 $b$。使用词上的一元二阶逻辑 (MSO)，构造一个显式的 MSO 句子 $\\varphi_{\\mathrm{even}\\,a}$，它定义了语言 $L = \\{ w \\in \\Sigma^{\\ast} \\mid w \\text{ 中 } a \\text{ 的出现次数为偶数} \\}$。你的构造必须从第一性原理出发：为 $L$ 描述一个确定性有限自动机 (DFA)，然后通过存在量化一元集合来编码该 DFA 的一个有效的接受运行。这些集合标记了在读取到每个位置后，（唯一的）运行所处的 DFA 状态。明确地用 $$ 来陈述你使用的结构谓词（如 $\\mathrm{First}(x)$、$\\mathrm{Last}(x)$ 和 $\\mathrm{Succ}(x,y)$）。然后，利用 MSO 可定义性与词上有限自动机之间的经典对应关系，概述你的句子如何通过将量化的集合解释为沿运行的状态特征集，并将句子的子句与 DFA 的初始、转移和接受条件联系起来，从而导出 $L$ 的一个 DFA。最后，确定识别 $L$ 的最小 DFA 的确切状态数。以无单位的单个整数形式提供你的最终答案。", "solution": "该问题要求为语言 $L = \\{ w \\in \\{a,b\\}^{\\ast} \\mid w \\text{ 中 } a\\text{ 的数量为偶数} \\}$ 构造一个一元二阶逻辑 (MSO) 句子，解释其与确定性有限自动机 (DFA) 的对应关系，并确定 $L$ 的最小 DFA 的状态数。\n\n**1. 语言 $L$ 的确定性有限自动机 (DFA)**\n\n为了识别语言 $L$，我们需要跟踪到目前为止所见 '$a$' 的数量的奇偶性。这需要两个状态：\n- $q_0$：已读入偶数个 '$a$'。这是初始状态和接受状态。\n- $q_1$：已读入奇数个 '$a$'。\n\n$L$ 的最小 DFA $M$ 定义如下：\n- 状态集 $Q = \\{q_0, q_1\\}$。\n- 字母表 $\\Sigma = \\{a,b\\}$。\n- 起始状态 $q_{\\text{start}} = q_0$。\n- 接受状态集 $F = \\{q_0\\}$。\n- 转移函数 $\\delta: Q \\times \\Sigma \\to Q$：\n    - $\\delta(q_0, a) = q_1$\n    - $\\delta(q_0, b) = q_0$\n    - $\\delta(q_1, a) = q_0$\n    - $\\delta(q_1, b) = q_1$\n\n当且仅当在 $w$ 上的运行结束于状态 $q_0$ 时，该 DFA 接受词 $w$，这恰好发生在 $w$ 包含偶数个 '$a$' 的情况下。空词 $\\epsilon$ 有零个 '$a$'，不引起任何转移，因此 DFA 保持在初始状态 $q_0$，$\\epsilon$ 被正确接受。\n\n**2. MSO 句子构造**\n\n我们首先根据线性序 $$ 定义必要的结构谓词。设位置的论域为 $D$。\n\n- $\\mathrm{First}(x) := \\forall y \\in D, (x=y \\lor xy)$ (位置 $x$ 是第一个)\n- $\\mathrm{Last}(x) := \\forall y \\in D, (x=y \\lor yx)$ (位置 $x$ 是最后一个)\n- $\\mathrm{Succ}(x,y) := x  y \\land \\neg(\\exists z \\in D, (x  z \\land z  y))$ (位置 $y$ 是 $x$ 的后继)\n\n现在，我们构造 MSO 句子 $\\varphi_{\\mathrm{even}\\,a}$。策略是断言在输入词上存在 DFA $M$ 的一个有效、接受的运行。我们可以使用单个一元集变量 $X$ 来编码读取每个位置后 DFA 的状态。令 $x \\in X$ 表示在读取位置 $x$ 处的符号后 DFA 处于状态 $q_1$，而 $x \\notin X$ 表示它处于状态 $q_0$。\n\n该句子必须能处理空词，空词属于 $L$。如果一个词的位置域为空，即 $\\neg \\exists x (x=x)$，则该词为空。对于非空词，我们断言存在一个接受运行。完整的句子是这两种情况的析取。\n\n$\\varphi_{\\mathrm{even}\\,a} := (\\neg \\exists x (x=x)) \\lor \\varphi_{\\text{non-empty}}$\n\n其中 $\\varphi_{\\text{non-empty}}$ 断言存在一个集合 $X$ 来编码一个接受运行：\n\n$\\varphi_{\\text{non-empty}} := \\exists X . (\\Phi_{\\text{initial}}(X) \\land \\Phi_{\\text{transitions}}(X) \\land \\Phi_{\\text{accept}}(X))$\n\n这三个子句定义如下：\n\ni. **初始条件** ($\\Phi_{\\text{initial}}$): 运行正确开始。在读取第一个字母之前的隐式状态是 $q_0$。如果第一个字母（在位置 $x$）是 '$a$' ($A(x)$)，DFA 转移到 $q_1$ ($x \\in X$)。如果它是 '$b$'（$\\neg A(x)$），它转移到 $q_0$（$x \\notin X$）。这可以写成 $A(x) \\leftrightarrow x \\in X$。\n$$ \\Phi_{\\text{initial}}(X) := \\forall x (\\mathrm{First}(x) \\rightarrow (A(x) \\leftrightarrow x \\in X)) $$\n\nii. **转移条件** ($\\Phi_{\\text{transitions}}$): 对于任意两个相邻位置 $x$ 和 $y$ (其中 $\\mathrm{Succ}(x,y)$)，读取 $y$ 之后的状态必须由 $x$ 之后的状态和 $y$ 处的字母决定。\n- 如果在 $x$ 处的状态是 $q_0$ ($x \\notin X$)，那么在 $y$ 处的状态是 $q_1$ ($y \\in X$) 当且仅当在 $y$ 处的字母是 '$a$' ($A(y)$)。\n- 如果在 $x$ 处的状态是 $q_1$ ($x \\in X$)，那么在 $y$ 处的状态是 $q_0$ ($y \\notin X$) 当且仅当在 $y$ 处的字母是 '$a$' ($A(y)$)。\n这个逻辑对应于异或 (XOR) 操作。在 $y$ 处的状态是 $q_1$ 当且仅当（在 $x$ 处的状态是 $q_1$ 且字母是 $b$）或（在 $x$ 处的状态是 $q_0$ 且字母是 $a$）。\n$$ \\Phi_{\\text{transitions}}(X) := \\forall x \\forall y (\\mathrm{Succ}(x,y) \\rightarrow [ (y \\in X) \\leftrightarrow ((x \\in X \\land \\neg A(y)) \\lor (x \\notin X \\land A(y))) ]) $$\n\niii. **接受条件** ($\\Phi_{\\text{accept}}$): 读取最后一个字母后的状态必须是一个接受状态。唯一的接受状态是 $q_0$。因此，对于最后一个位置 $x$，DFA 必须处于状态 $q_0$，这意味着 $x \\notin X$。\n$$ \\Phi_{\\text{accept}}(X) := \\forall x (\\mathrm{Last}(x) \\rightarrow x \\notin X) $$\n\n完整的句子是这些部分的组合。对于给定的词结构，这个句子 $\\varphi_{\\mathrm{even}\\,a}$ 为真当且仅当该词有偶数个 '$a$'。\n\n**3. MSO-DFA 对应关系**\n\nBüchi-Elgot-Trakhtenbrot 定理指出，一个语言在 MSO 中是可定义的，当且仅当它是正则的。我们构造句子 $\\varphi_{\\mathrm{even}\\,a}$ 的过程展示了该证明的一个方向：从 DFA 到 MSO 句子。另一个方向，从句子到自动机，则依赖于正则语言的闭包性质。\n\n一个形如 $\\varphi_{\\text{non-empty}} = \\exists X . \\psi(X)$ 的 MSO 句子，其中 $\\psi$ 是一个带有一个自由集变量 $X$ 的一阶公式，可以被系统地转换成一个非确定性有限自动机 (NFA)。\n1.  首先为内部公式 $\\psi(X)$ 构造一个 DFA。这个自动机的字母表不是 $\\Sigma = \\{a,b\\}$，而是 $\\Sigma \\times \\{0,1\\}$，其中第二个分量是一个比特，指示当前位置是否在集合 $X$ 中。这个扩展字母表上的一个词是一系列对 $(s_i, b_i)$，其中 $s_i$ 是字母，$b_i$ 是 $i \\in X$ 的布尔值。\n2.  $\\psi(X)$ 的子句是局部的，可以由一个有限自动机来检查。\n    - $\\Phi_{\\text{initial}}$ 检查第一个输入对 $(s_1, b_1)$ 的一个属性。\n    - $\\Phi_{\\text{transitions}}$ 检查任意两个连续对 $(s_i, b_i)$ 和 $(s_{i+1}, b_{i+1})$ 之间的一个局部属性。\n    - $\\Phi_{\\text{accept}}$ 检查最后一个输入对 $(s_n, b_n)$ 的一个属性。\n    可以构建一个 DFA 来验证整个序列对是否满足 $\\psi(X)$。\n3.  存在量词 $\\exists X$ 通过投影来处理。用于 $\\exists X . \\psi(X)$ 的 NFA 在原始字母表 $\\Sigma$ 上工作。对于每个输入字母 $s \\in \\Sigma$，NFA 非确定性地“猜测”$X$ 的比特值（即，它可以像输入是 $(s,0)$ 或 $(s,1)$ 一样进行转移），并模拟用于 $\\psi(X)$ 的 DFA。如果存在至少一个猜测（一系列用于 $X$ 的比特）构成了用于 $\\psi(X)$ 的 DFA 的一个接受运行，那么词 $w \\in \\Sigma^*$ 就被接受。\n\n将此应用于我们的具体情况，“猜测”的每个位置上用于 $X$ 的比特恰好对应于我们原始 DFA 的状态（$0$ 对应 $q_0$，$1$ 对应 $q_1$）。NFA 的构造过程有效地重新发现了我们开始时所用的 DFA。NFA 做出的非确定性选择对应于我们初始 DFA 的转移。例如，在读取一个 '$a$' 时，NFA 可以从一个代表 $q_0$ 的状态转移到一个代表 $q_1$ 的状态，这对应于猜测 $X$ 包含新位置。这个 NFA 随后可以被确定化，从而得到 $L$ 的最小 DFA。\n\n**4. 最小 DFA 状态数**\n\n对于一个正则语言 $L$，其最小 DFA 的状态数等于 Myhill-Nerode 关系 $\\equiv_L$ 的等价类的数量。如果对于所有 $z \\in \\Sigma^*$，都有 $uz \\in L \\iff vz \\in L$，则两个字符串 $u, v \\in \\Sigma^*$ 是等价的，记为 $u \\equiv_L v$。\n\n对于我们的语言 $L$，我们来分析等价类。一个字符串是否在 $L$ 中仅取决于其 '$a$' 数量的奇偶性。\n- 令 $C_0 = \\{w \\in \\{a,b\\}^* \\mid w \\text{ 中 } a\\text{ 的数量为偶数}\\}$。\n- 令 $C_1 = \\{w \\in \\{a,b\\}^* \\mid w \\text{ 中 } a\\text{ 的数量为奇数}\\}$。\n\n任何两个来自同一集合（$C_0$ 或 $C_1$）的字符串 $u,v$ 都具有相同的 '$a$' 数量奇偶性。对于任何后缀 $z$，$\\#_a(uz)$ 和 $\\#_a(vz)$ 的奇偶性将是相同的，因此 $uz \\in L \\iff vz \\in L$。因此，$C_0$ 内的所有字符串都是等价的，$C_1$ 内的所有字符串也都是等价的。\n\n现在，我们必须检查 $C_0$ 和 $C_1$ 是否是不同的类。令 $u = \\epsilon \\in C_0$ 和 $v = a \\in C_1$。令区分后缀为 $z = \\epsilon$。那么 $u z = \\epsilon \\in L$ 因为它有 0 个 '$a$'。然而，$v z = a \\notin L$ 因为它有 1 个 '$a$'。因此，$u \\not\\equiv_L v$。\n\n这表明恰好有两个 Myhill-Nerode 等价类，$C_0$ 和 $C_1$。根据 Myhill-Nerode 定理，$L$ 的最小 DFA 必须恰好有两个状态。我们在第 1 部分构造的 DFA 有两个状态，因此它是最小的。", "answer": "$$\\boxed{2}$$", "id": "2972706"}]}