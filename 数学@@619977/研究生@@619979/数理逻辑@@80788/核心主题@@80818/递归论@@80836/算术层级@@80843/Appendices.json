{"hands_on_practices": [{"introduction": "我们将从算术层级的最基本构件开始。这个练习将指导你如何将“停机”和“不停机”这两个直观的计算概念，形式化为一阶算术语言中的公式。通过这个过程，你将亲身体会到一个存在量词（$\\exists$）或全称量词（$\\forall$）如何作用于一个可判定谓词，从而生成层级中最初的不可判定层次，即 $\\Sigma_1^0$ 和 $\\Pi_1^0$ [@problem_id:2986081]。", "problem": "令 $N$ 表示自然数集，并在包含符号 $0$、后继、加法和乘法的一阶算术语言中进行讨论。固定一个确定性图灵机的有效哥德尔编码，使得每台机器和其构型都由 $N$ 中的一个数表示。假设以下可计算性理论和算术化的基本事实，你可以不加证明地使用它们：\n\n- 存在一个原始递归关系 $R(e,x,t,y)$，它当且仅当 $y$ 是由 $e$ 编码的机器在输入 $x$ 上精确计算 $t$ 步的完整计算历史（例如，一个有限的计算图表或构型序列）的编码，并且该历史相对于机器的转移函数是正确的时，该关系成立。\n- 存在一个原始递归关系 $H_{\\mathrm{fin}}(e,x,t,y)$，它当且仅当 $R(e,x,t,y)$ 成立，且 $y$ 中编码的最后一个构型是停机的（即，机器在时间 $t$ 之前已进入一个指定的停机状态）时，该关系成立。\n- 一个母式为原始递归关系且量词范围为 $N$ 的公式可以被置于前束范式中；其在算术层级中的级别由前导无界量词的模式决定：一个 $\\Sigma_{n}$-公式拥有一个前导存在量词块，后跟 $n-1$ 次量词交替；一个 $\\Pi_{n}$-公式拥有一个前导全称量词块，后跟 $n-1$ 次量词交替，它们的母式都是可判定的（原始递归的）。\n\n仅使用这些基础：\n\n1. 构造一个一阶算术公式 $H(e,x)$，该公式表达“由 $e$ 编码的机器在输入 $x$ 上停机”，使用 $R$ 和 $H_{\\mathrm{fin}}$ 作为你的可判定母式。将你的公式置于前束范式中，并明确指出其前导量词块和母式。\n\n2. 构造一个一阶算术公式 $NH(e,x)$，该公式表达“由 $e$ 编码的机器在输入 $x$ 上不停机”，同样仅使用对 $N$ 的量化以及由 $R$ 和 $H_{\\mathrm{fin}}$ 构成的可判定母式。将你的公式置于前束范式中，并明确指出其前导量词块和母式。\n\n3. 对于 $H(e,x)$ 和 $NH(e,x)$ 中的每一个，确定其最小算术层级级别 $L(\\cdot)$，其定义如下：如果一个公式（在算术标准模型上）等价于一个具有不少于 $n$ 次量词交替的 $\\Sigma_{n}$-公式，则取 $L$ 为 $n$；如果它等价于一个具有不少于 $n$ 次量词交替的 $\\Pi_{n}$-公式，则取 $L$ 为 $n$。通过分析量词结构和母式的可判定性来证明你的分类。\n\n4. 计算 $L(H)+L(NH)$ 的精确整数值。将你的最终答案报告为一个精确整数。无需四舍五入。", "solution": "本问题要求基于所提供的原始递归关系，构造并分类用于表达停机问题及其补集的一阶算术公式。\n\n**问题验证**\n\n首先对问题陈述进行验证。\n\n*   **步骤1：提取已知条件**\n    *   论域：自然数集 $N$。\n    *   语言：包含符号 $0$、后继、加法和乘法的一阶算术。\n    *   哥德尔编码：一种有效的编码方案，将图灵机及其构型映射到 $N$ 中的数。\n    *   原始递归关系 $R(e,x,t,y)$：当且仅当 $y$ 是机器 $e$ 在输入 $x$ 上精确计算 $t$ 步的正确计算历史的编码时，该关系成立。\n    *   原始递归关系 $H_{\\mathrm{fin}}(e,x,t,y)$：当且仅当 $R(e,x,t,y)$ 为真且计算在第 $t$ 步处于停机状态时，该关系成立。\n    *   算术层级定义：如果一个公式有一个前导存在量词块和 $n-1$ 次量词交替，且其母式可判定，则该公式是 $\\Sigma_n^0$ 公式。如果一个公式有一个前导全称量词块和 $n-1$ 次量词交替，且其母式可判定，则该公式是 $\\Pi_n^0$ 公式。\n    *   级别 $L(\\cdot)$：最小的 $n \\in N, n \\ge 1$，使得一个公式等价于一个 $\\Sigma_n^0$ 或 $\\Pi_n^0$ 公式。\n\n*   **步骤2：使用提取的已知条件进行验证**\n    本问题是可计算性理论和数理逻辑中的一个标准练习。它在科学上基于计算的形式化（丘奇-图灵论题）及其与形式化算术的关系（由 Gödel、Kleene 等人建立）。所有术语都得到了精确定义，前提条件是该领域的标准结果。该问题是适定的、客观的、自洽的，没有明显的逻辑矛盾、事实不健全之处。\n\n*   **步骤3：结论与行动**\n    问题被认定为有效。有必要给出完整解答。\n\n**第1部分：构造公式 $H(e,x)$**\n\n“由 $e$ 编码的机器在输入 $x$ 上停机”这一断言为真，当且仅当存在一个时间 $t \\in N$ 和一个相应的计算历史 $y \\in N$，代表了一次有效的、停机的计算。谓词 $H_{\\mathrm{fin}}(e,x,t,y)$ 捕捉了特定时间 $t$ 和历史 $y$ 的这种情况。为了表达停机发生在*某个*时间，我们对 $t$ 和 $y$ 进行存在量化。\n\n因此，公式 $H(e,x)$ 为：\n$$H(e,x) \\equiv \\exists t \\exists y \\, H_{\\mathrm{fin}}(e,x,t,y)$$\n该公式处于前束范式。\n*   **前导量词块：** $\\exists t \\exists y$。这是一个单一的存在量词块。\n*   **母式：** $H_{\\mathrm{fin}}(e,x,t,y)$。问题陈述此关系是原始递归的。根据定义，原始递归关系可由图灵机判定。因此，该母式是可判定的。\n\n**第2部分：构造公式 $NH(e,x)$**\n\n“由 $e$ 编码的机器在输入 $x$ 上不停机”这一断言是 $H(e,x)$ 的逻辑否定。\n$$NH(e,x) \\equiv \\neg H(e,x)$$\n我们代入 $H(e,x)$ 的表达式，并通过应用量词对偶规则（$\\neg \\exists z P(z) \\equiv \\forall z \\neg P(z)$）将所得公式转换为前束范式。\n$$NH(e,x) \\equiv \\neg (\\exists t \\exists y \\, H_{\\mathrm{fin}}(e,x,t,y))$$\n$$\\equiv \\forall t \\, \\neg (\\exists y \\, H_{\\mathrm{fin}}(e,x,t,y))$$\n$$\\equiv \\forall t \\forall y \\, \\neg H_{\\mathrm{fin}}(e,x,t,y)$$\n$NH(e,x)$ 的前束范式为：\n$$NH(e,x) \\equiv \\forall t \\forall y \\, \\neg H_{\\mathrm{fin}}(e,x,t,y)$$\n*   **前导量词块：** $\\forall t \\forall y$。这是一个单一的全称量词块。\n*   **母式：** $\\neg H_{\\mathrm{fin}}(e,x,t,y)$。由于 $H_{\\mathrm{fin}}$ 是一个可判定关系，其否定 $\\neg H_{\\mathrm{fin}}$ 也是可判定的。\n\n**第3部分：算术层级分类**\n\n我们确定每个公式的最小级别 $L(\\cdot)$。\n\n**$H(e,x)$ 的分类：**\n公式 $H(e,x)$ 有一个前导存在量词块和一个可判定母式。这种结构对应于一个 $\\Sigma_1^0$-公式。满足 $H(e,x)$ 的数对 $(e,x)$ 的集合是停机集合，众所周知它是不可判定的。一个集合是可判定的当且仅当它可由一个 $\\Delta_1^0$ 公式（等价于既是 $\\Sigma_1^0$ 又是 $\\Pi_1^0$ 公式）定义，而这又等价于拥有一个无量词的定义（在一个可判定语言上的 $\\Sigma_0^0$ 或 $\\Pi_0^0$ 公式）。由于停机集合是不可判定的，它不能由 $\\Sigma_0^0$ 公式定义。因此，其最小分类是 $\\Sigma_1^0$。\n这意味着 $L(H) = 1$。\n\n**$NH(e,x)$ 的分类：**\n公式 $NH(e,x)$ 有一个前导全称量词块和一个可判定母式。这种结构对应于一个 $\\Pi_1^0$-公式。满足 $NH(e,x)$ 的数对 $(e,x)$ 的集合是停机集合的补集。\n1.  这个集合不是可判定的，因为如果它是，那么它的补集（停机集合）也将是可判定的，而这是一个已知的谬误。因此，它不可能是 $\\Sigma_0^0$ 或 $\\Pi_0^0$ 集合。\n2.  我们还必须证明它不是一个 $\\Sigma_1^0$ 集合。一个集合可由 $\\Sigma_1^0$ 公式定义当且仅当它是递归可枚举的。停机集合（由 $H(e,x)$ 定义）是一个 $\\Sigma_1^0$-集合，所以它是递归可枚举的。根据 Post 定理，一个集合是可判定的（递归的）当且仅当该集合及其补集都是递归可枚举的。如果停机集合的补集也是递归可枚举的（即 $\\Sigma_1^0$），那么停机集合就将是可判定的。这是一个矛盾。\n因此，由 $NH(e,x)$ 定义的集合不是 $\\Sigma_1^0$。其最简分类是 $\\Pi_1^0$。\n这意味着 $L(NH) = 1$。\n\n**第4部分：最终计算**\n\n问题要求计算 $L(H) + L(NH)$ 的值。使用第3部分的结果：\n$$L(H) = 1$$\n$$L(NH) = 1$$\n总和为：\n$$L(H) + L(NH) = 1 + 1 = 2$$", "answer": "$$\\boxed{2}$$", "id": "2986081"}, {"introduction": "在掌握了第一层之后，我们将探索更高层的复杂性。这个练习提出了一个集合，其定义巧妙地结合了停机和不停机两种条件。你的任务是证明这个集合位于 $\\Delta_2^0$ 中，即它既是 $\\Sigma_2^0$ 集合也是 $\\Pi_2^0$ 集合，但又不属于任何更低的层级 [@problem_id:483857]。这个实践不仅揭示了具有“中间”复杂性集合的存在，也提供了使用多一归约（many-one reduction）这一关键技巧来证明其复杂度下界的机会。", "problem": "考虑集合 $ A = \\{ e \\in \\mathbb{N} \\mid \\phi_e(0) \\downarrow \\ \\text{and} \\ \\phi_e(1) \\uparrow \\} $，其中 $\\phi_e$ 表示由标号为 $e$ 的图灵机计算的部分可计算函数，$\\downarrow$ 表示计算停机，而 $\\uparrow$ 表示计算不停机。\n\n在算术层级中对集合 $A$ 进行分类。具体来说，确定包含 $A$ 的最小类（例如某个 $n$ 的 $\\Sigma^0_n$、$\\Pi^0_n$ 或 $\\Delta^0_n$）。通过展示成员关系条件的量词复杂度，并提供必要的归约来建立该类的最小性，从而证明你的答案。\n\n**关于算术层级的背景知识：**\n- 如果一个集合是递归的，则它是 $\\Sigma^0_0 = \\Pi^0_0 = \\Delta^0_0$。\n- 对于 $n \\geq 0$，如果一个集合可以由一个公式定义，该公式包含 $n+1$ 个交替量词，以存在量词开头，作用于一个递归谓词，则该集合是 $\\Sigma^0_{n+1}$ 的。类似地，如果它以全称量词开头，则它是 $\\Pi^0_{n+1}$ 的。\n- 如果一个集合既是 $\\Sigma^0_n$ 又是 $\\Pi^0_n$，则它是 $\\Delta^0_n$ 的。\n- 停机集合 $K = \\{ e \\mid \\phi_e(e) \\downarrow \\}$ 是 $\\Sigma^0_1$-完全的，其补集 $\\bar{K} = \\{ e \\mid \\phi_e(e) \\uparrow \\}$ 是 $\\Pi^0_1$-完全的。", "solution": "为了对 $A$ 进行分类，我们使用量词来表达其成员关系条件。$e \\in A$ 的条件要求：\n1. $\\phi_e(0) \\downarrow$，意味着存在一个步骤 $t_0$，使得计算在 $t_0$ 步内停机。\n2. $\\phi_e(1) \\uparrow$，意味着对于所有步骤 $t_1$，计算都不会在 $t_1$ 步内停机。\n\n使用递归谓词 $H(e, x, t)$（如果标号为 $e$ 的图灵机在输入为 $x$ 时于 $t$ 步内停机，则该谓词为真），该条件是：\n$$ e \\in A \\iff (\\exists t_0) \\, H(e, 0, t_0) \\land (\\forall t_1) \\, \\neg H(e, 1, t_1) $$\n\n**步骤一：证明 $A \\in \\Sigma^0_2$ 且 $A \\in \\Pi^0_2$（因此 $A \\in \\Delta^0_2$）**\n- 将公式转换为 $\\Sigma_2^0$ 范式：\n$$ e \\in A \\iff \\exists t_0 \\, \\forall t_1 \\, [H(e, 0, t_0) \\land \\neg H(e, 1, t_1)] $$\n这里的前缀 $\\exists t_0 \\, \\forall t_1$ 是 $\\Sigma_2^0$ 形式，且矩阵 $[H(e, 0, t_0) \\land \\neg H(e, 1, t_1)]$ 是递归的。因此 $A \\in \\Sigma_2^0$。\n- 将公式转换为 $\\Pi_2^0$ 范式：由于 $\\phi_e(0)$ 是否停机与 $t_1$ 无关，我们可以交换量词（只要某个停机时间 $t_0$ 存在，它对所有 $t_1$ 都存在）。\n$$ e \\in A \\iff \\forall t_1 \\, \\exists t_0 \\, [H(e, 0, t_0) \\land \\neg H(e, 1, t_1)] $$\n这里的前缀 $\\forall t_1 \\, \\exists t_0$ 是 $\\Pi_2^0$ 形式，矩阵也是递归的。因此 $A \\in \\Pi_2^0$。\n\n由于 $A$ 既是 $\\Sigma_2^0$ 又是 $\\Pi_2^0$，所以它是 $\\Delta_2^0$ 的。\n\n**步骤二：证明 $A \\not\\in \\Sigma^0_1$ 且 $A \\not\\in \\Pi^0_1$**\n为了证明 $\\Delta_2^0$ 是最小分类，我们必须表明 $A$ 不在 $\\Sigma_1^0$ 或 $\\Pi_1^0$ 中。\n\n- **证明 $A \\not\\in \\Sigma^0_1$（非递归可枚举）：** 我们将 $\\Pi_1^0$-完全集 $\\bar{K}$ 多一归约到 $A$（即 $\\bar{K} \\le_m A$）。构造一个可计算函数 $f$，使得 $e \\in \\bar{K} \\iff f(e) \\in A$。对于任意 $e$，令 $\\phi_{f(e)}$ 为：\n  - 在输入为 0 时：立即停机。\n  - 在输入为 1 时：模拟 $\\phi_e(e)$；如果它停机，则停机；否则，永远循环。\n  于是：\n  - 如果 $e \\in \\bar{K}$（即 $\\phi_e(e) \\uparrow$），那么 $\\phi_{f(e)}(0) \\downarrow$ 且 $\\phi_{f(e)}(1) \\uparrow$，因此 $f(e) \\in A$。\n  - 如果 $e \\notin \\bar{K}$（即 $\\phi_e(e) \\downarrow$），那么 $\\phi_{f(e)}(1) \\downarrow$，因此 $f(e) \\notin A$。\n  由于 $\\bar{K}$ 不是 $\\Sigma^0_1$ 的，所以 $A$ 也不可能是 $\\Sigma^0_1$ 的。\n\n- **证明 $A \\not\\in \\Pi^0_1$（非余递归可枚举）：** 我们将 $\\Sigma_1^0$-完全集 $K$ 多一归约到 $A$（即 $K \\le_m A$）。构造一个可计算函数 $h$，使得 $e \\in K \\iff h(e) \\in A$。对于任意 $e$，令 $\\phi_{h(e)}$ 的行为如下：\n  - 在输入为 0 时：模拟 $\\phi_e(e)$ 的计算。如果 $\\phi_e(e)$ 停机，则 $\\phi_{h(e)}(0)$ 也停机。\n  - 在输入为 1 时：进入一个无限循环。\n  于是：\n  - 如果 $e \\in K$（即 $\\phi_e(e) \\downarrow$），那么 $\\phi_{h(e)}(0) \\downarrow$ 且 $\\phi_{h(e)}(1) \\uparrow$。根据 $A$ 的定义，这意味着 $h(e) \\in A$。\n  - 如果 $e \\notin K$（即 $\\phi_e(e) \\uparrow$），那么 $\\phi_{h(e)}(0) \\uparrow$。因此条件“$\\phi_{h(e)}(0) \\downarrow$”不满足，所以 $h(e) \\notin A$。\n  此归约 $K \\le_m A$ 证明了 $A$ 是 $\\Sigma_1^0$-难的。由于 $K$ 本身不是 $\\Pi_1^0$ 的，所以 $A$ 也不可能是 $\\Pi_1^0$ 的。\n\n**结论：**\n$A$ 是 $\\Delta_2^0$ 的，且不属于任何更低的类（$\\Sigma_1^0$ 或 $\\Pi_1^0$），因此包含 $A$ 的最小类是 $\\Delta_2^0$。", "answer": "$$ \\boxed{\\Delta_2^0} $$", "id": "483857"}, {"introduction": "现在我们来处理一个更复杂的、含有多个交替量词的公式。这个问题表明，确定一个集合的真实复杂度需要的不仅仅是简单地计算量词；我们必须深入理解公式的语义 [@problem_id:2984438]。通过剖析其逻辑结构，你将发现它等价于“共有限的可计算集”的指标集，一个经典的 $\\Sigma_3^0$-完全问题，从而精确地定位其在算术层级中的位置。", "problem": "设语言为一阶算术，其符号包含 $0$、$1$、$+$、$\\times$ 和 $\\leq$。通过 Kleene 的 $\\mathcal{T}$-谓词，固定一种图灵机和计算的原始递归编码：存在一个原始递归关系 $H(e,x,s)$，表示指标为 $e$ 的图灵机在输入 $x$ 上至多 $s$ 步内停机。考虑自然数上由以下公式定义的一元谓词\n$$\n\\Theta(e)\\;:\\;\\exists m\\;\\forall x\\;\\exists s\\;\\big(x<m\\;\\lor\\;H(e,x,s)\\big).\n$$\n所有量词均为无界量词；矩阵内的析取是介于有界不等式 $x<m$ 和原始递归谓词 $H(e,x,s)$ 之间。\n\n仅使用算术层级的核心定义、有界量词不提升算术复杂度的性质，以及原始递归关系在布尔联结词下的基本闭包性质，确定最小的自然数 $n$，使得 $\\Theta$ 在标准模型 $\\mathbb{N}$ 上等价于一个 $\\Sigma_{n}$-公式或一个 $\\Pi_{n}$-公式。你必须证明其上界（即 $\\Theta$ 位于某个固定的层级）和下界（即在任何严格更低的非平凡层级中都不存在等价公式）。\n\n最终答案只报告最小的 $n$。无需四舍五入。", "solution": "该问题是有效的，因为它是可计算性理论和数理逻辑领域内一个适定问题，依赖于标准定义（算术层级、Kleene 的 $\\mathcal{T}$-谓词），并且没有不一致或模糊之处。\n\n任务是找到最小的自然数 $n$，使得谓词 $\\Theta(e)$ 等价于一个 $\\Sigma_n^0$ 或 $\\Pi_n^0$ 公式。该谓词定义如下：\n$$\n\\Theta(e)\\;:\\;\\exists m\\;\\forall x\\;\\exists s\\;\\big(x<m\\;\\lor\\;H(e,x,s)\\big)\n$$\n其中 $H(e,x,s)$ 是一个原始递归关系，表示哥德尔数为 $e$ 的图灵机在输入 $x$ 上 $s$ 步内停机。\n\n首先，我们分析 $\\Theta(e)$ 公式的逻辑结构和含义。\n对于一个固定的 $m$，我们来分析子公式 $\\forall x\\;\\exists s\\;\\big(x<m\\;\\lor\\;H(e,x,s)\\big)$。我们可以将对 $x$ 的量化分为两部分：$x<m$ 和 $x\\ge m$。\n- 对于所有满足 $x<m$ 的 $x$，析取项 $x<m$ 为真。因此，对于任意 $s$ 的选择，内部公式 $\\big(x<m\\;\\lor\\;H(e,x,s)\\big)$ 都为真。\n- 对于所有满足 $x\\ge m$ 的 $x$，析取项 $x<m$ 为假。内部公式为真当且仅当 $\\exists s\\;H(e,x,s)$ 成立。\n\n因此，语句 $\\forall x\\;\\exists s\\;\\big(x<m\\;\\lor\\;H(e,x,s)\\big)$ 逻辑上等价于语句 $\\forall x \\;\\big(x\\ge m \\implies \\exists s\\;H(e,x,s)\\big)$。\n\n谓词 $\\exists s\\;H(e,x,s)$ 是“指标为 $e$ 的图灵机在输入 $x$ 上停机”的标准定义。设 $W_e$ 为由图灵机 $e$ 计算的部分可计算函数的定义域，这恰好是它停机的所有输入的集合。所以，$\\exists s\\;H(e,x,s)$ 等价于 $x \\in W_e$。\n\n将此代入 $\\Theta(e)$ 的公式，我们得到：\n$$\n\\Theta(e) \\iff \\exists m\\;\\forall x\\;\\big(x\\ge m \\implies x \\in W_e\\big)\n$$\n这个语句断言存在一个数 $m$，使得所有大于或等于 $m$ 的自然数都在集合 $W_e$ 中。这是集合 $W_e$ 为余有限的定义。余有限递归可枚举集的指标集通常记作 $Cof$。因此，$\\Theta(e)$ 为真当且仅当 $e \\in Cof$。问题就是要确定指标集 $Cof$ 在算术层级中的分类。\n\n**上界：**\n我们通过分析 $\\Theta(e)$ 的前束范式来确定其复杂度的上界。原始公式为：\n$$\n\\Theta(e) \\iff \\exists m\\;\\forall x\\;\\exists s\\;\\big(x<m\\;\\lor\\;H(e,x,s)\\big)\n$$\n该公式的矩阵是谓词 $M(e,m,x,s) \\equiv \\big(x<m\\;\\lor\\;H(e,x,s)\\big)$。关系 $H(e,x,s)$ 已知是原始递归的。关系 $x<m$ 也是原始递归的。原始递归关系集在布尔联结词下是闭合的，所以它们的析取 $M(e,m,x,s)$ 也是一个原始递归谓词。由于所有原始递归谓词都是递归的（可判定的），所以该矩阵是一个包含自由变量 $e, m, x, s$ 的递归谓词。\n\n$\\Theta(e)$ 的公式在一个递归矩阵前有一个 $\\exists\\forall\\exists$ 的量词前缀。根据算术层级的定义，由一个以 $\\exists$ 开头、有3个交替量词块（此处量词交替2次，总共3个量词块）的公式所定义的集合是一个 $\\Sigma_3^0$ 集。\n因此，集合 $\\{e \\mid \\Theta(e)\\}$ 属于 $\\Sigma_3^0$ 类。这表明 $n$ 的最小值至多为 $3$。\n\n**下界：**\n为了证明 $n=3$ 是最小值，我们必须证明 $\\Theta$ 不等价于任何 $\\Sigma_2^0$ 或 $\\Pi_2^0$ 中的公式。这可以通过证明集合 $Cof = \\{e \\mid \\Theta(e)\\}$ 是 $\\Sigma_3^0$-难的来实现。如果每个 $\\Sigma_n^0$ 集都可以多一归约到某个集合，则该集合是 $\\Sigma_n^0$-难的。可计算性理论中一个著名的结果是 $Cof$ 是 $\\Sigma_3^0$-完备的，这意味着它属于 $\\Sigma_3^0$ 并且是 $\\Sigma_3^0$-难的。\n\n为了证明其难度，我们可以概述一个已知的 $\\Sigma_3^0$-完备集到 $Cof$ 的归约。一个典型的 $\\Sigma_3^0$-完备集是 $Rec = \\{e \\mid W_e \\text{ 是一个递归集}\\}$。归约需要构造一个全可计算函数 $f$，使得对于任何指标 $e$，$e \\in Rec \\iff f(e) \\in Cof$。\n指标为 $f(e)$ 的图灵机的构造使其行为如下：\n- 图灵机 $M_{f(e)}$ 在输入 $s$ 上尝试寻找 $W_e$ 是递归的证据。$W_e$ 是递归的证据是存在一个指标 $i$ 使得 $W_i = \\overline{W_e}$。\n- 图灵机 $M_{f(e)}$ 系统地搜索这样的指标 $i$。在阶段 $s$，它可能会检查一个候选指标 $i < s$ 是否在某个输入的初始片段 $\\{0, 1, \\dots, k\\}$ 上看似计算了 $W_e$ 的补集，这是基于 $M_e$ 和 $M_i$ 的计算在 $s$ 步内停机的情况。\n- $M_{f(e)}$ 的行为被定义为：\n    1. 如果 $e \\in Rec$，那么存在一个正确的指标 $i_0$ 对应 $\\overline{W_e}$。搜索过程最终会找到并锁定对 $i_0$ 的验证。这个过程被设计用来确保 $M_{f(e)}$ 在除了有限多个输入之外的所有输入上都停机。因此，$W_{f(e)}$ 是余有限的，所以 $f(e) \\in Cof$。\n    2. 如果 $e \\notin Rec$，那么不存在这样的指标 $i$。任何候选指标 $i$ 最终都会被发现是不正确的。图灵机 $M_{f(e)}$ 的设计使得这种对不正确候选者的永久性抛弃导致 $M_{f(e)}$ 在无限多个输入上无法停机。因此，$W_{f(e)}$ 不是余有限的，所以 $f(e) \\notin Cof$。\n\n这个归约 $Rec \\le_m Cof$ 证明了 $Cof$ 是 $\\Sigma_3^0$-难的。根据 Post 定理，一个 $\\Sigma_n^0$-完备（对于 $n \\ge 1$）的集合不可能属于 $\\Pi_n^0$，也不可能属于任何 $k < n$ 的 $\\Sigma_k^0$ 或 $\\Pi_k^0$。因此，$Cof$ 不可能属于 $\\Sigma_2^0$ 或 $\\Pi_2^0$。\n\n由于 $\\Theta(e)$ 定义了一个 $\\Sigma_3^0$-完备集，它不等价于算术层级中任何低于 3 的层级的公式。使得 $\\Theta$ 等价于一个 $\\Sigma_n^0$ 或 $\\Pi_n^0$ 公式的最小自然数 $n$ 是 $3$，并且具体来说，它是一个 $\\Sigma_3^0$ 公式。", "answer": "$$\\boxed{3}$$", "id": "2984438"}]}