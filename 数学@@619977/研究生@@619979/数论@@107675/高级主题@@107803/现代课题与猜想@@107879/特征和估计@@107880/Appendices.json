{"hands_on_practices": [{"introduction": "这个练习旨在让你亲自动手，直接计算一些小模数下的特征和。这项基础实践有助于你对和函数 $S_{\\chi}(x) = \\sum_{n \\leq x} \\chi(n)$ 的行为建立直观感受，通过计算，你将验证其最大值总是在一个周期内取到，并能将其与理论上界进行具体比较。[@problem_id:3009715]", "problem": "设 $q$ 是一个正整数，满足 $2 \\leq q \\leq 8$。模 $q$ 的狄利克雷特征是一个函数 $\\chi : \\mathbb{Z} \\to \\mathbb{C}$，它具有完全积性，以 $q$ 为周期，并且当 $\\gcd(n,q) > 1$ 时满足 $\\chi(n) = 0$。同时，其在模 $q$ 的单位群（记作 $(\\mathbb{Z}/q\\mathbb{Z})^{\\times}$）上的限制是到复单位圆的群同态。模 $q$ 的主特征 $\\chi_{0}$ 定义为：当 $\\gcd(n,q) = 1$ 时 $\\chi_{0}(n) = 1$，否则 $\\chi_{0}(n) = 0$。对于给定的模 $q$ 特征 $\\chi$，定义其部分和为\n$S_{\\chi}(x) \\;=\\; \\sum_{n \\leq x} \\chi(n).$\n在本问题中，我们将注意力限制在模 $q$ 的非主特征上。仅从这些定义和有限阿贝尔群的标准性质出发，完成以下任务：\n- 证明对于任何模 $q$ 的非主狄利克雷特征，在一个完整周期上的和满足 $\\sum_{n=1}^{q} \\chi(n) = 0$，并由此推断 $|S_{\\chi}(x)|$ 在实数 $x \\geq 0$ 上的上确界可由一个长度为 $q$ 的单周期内的部分和达到。\n- 对每个模数 $q \\in \\{3,4,5,6,7,8\\}$，枚举所有模 $q$ 的非主特征。对于每个这样的 $\\chi$，计算其精确序列 $\\{\\chi(1), \\chi(2), \\dots, \\chi(q)\\}$ 以及对所有 $t \\in \\{0,1,\\dots,q\\}$ 的部分和 $\\sum_{n=1}^{t} \\chi(n)$。根据这些结果，确定每个 $\\chi$ 的 $\\sup_{x \\geq 0} |S_{\\chi}(x)|$ 的精确值。\n- 定义极值量\n$$\nM \\;=\\; \\max_{\\substack{q \\in \\{3,4,5,6,7,8\\} \\\\ \\chi \\bmod q \\text{ nonprincipal}}} \\;\\sup_{x \\geq 0} |S_{\\chi}(x)|.\n$$\n计算 $M$ 的精确值。\n- 将计算出的值与解析数论中已知的特征和的常用一般界（例如，Pólya–Vinogradov 不等式）进行简要比较，并评论小模数的计算结果是否表明该一般数量级的紧致性。\n\n给出 $M$ 的精确值作为最终结果，无需四舍五入。", "solution": "所提出的问题是初等解析数论中一个定义明确的练习。它在科学上是合理的，自洽的，并且所有使用的术语都是该领域的标准术语。该问题是有效的，并且可以按所述方式解决。\n\n第一步是确定对于一个模 $q$ 的非主狄利克雷特征 $\\chi$，其特征和 $S_{\\chi}(x) = \\sum_{n \\leq x} \\chi(n)$ 的理论性质。\n\n首先，我们证明一个非主特征 $\\chi$ 在一个完整周期上的和为零。设 $S = \\sum_{n=1}^{q} \\chi(n)$。由于 $\\chi$ 是非主特征，存在一个整数 $a$ 使得 $\\gcd(a, q) = 1$ 且 $\\chi(a) \\neq 1$。我们将和 $S$ 乘以 $\\chi(a)$：\n$$\n\\chi(a) S = \\chi(a) \\sum_{n=1}^{q} \\chi(n) = \\sum_{n=1}^{q} \\chi(a)\\chi(n)\n$$\n根据完全积性, $\\chi(a)\\chi(n) = \\chi(an)$。因此，\n$$\n\\chi(a) S = \\sum_{n=1}^{q} \\chi(an)\n$$\n当 $n$ 遍历模 $q$ 的一个完全剩余系时，由于 $\\gcd(a,q)=1$，乘积 $an$ 也遍历模 $q$ 的一个完全剩余系。因此，右边的和只是原始和 $S$ 中各项的重新排列。\n$$\n\\sum_{n=1}^{q} \\chi(an) = \\sum_{m=1}^{q} \\chi(m) = S\n$$\n这导出了方程 $\\chi(a) S = S$，即 $(\\chi(a) - 1)S = 0$。由于我们选择的 $a$ 满足 $\\chi(a) \\neq 1$，因子 $(\\chi(a) - 1)$ 非零。因此，我们必须有 $S=0$。所以，$\\sum_{n=1}^{q} \\chi(n) = 0$。\n\n接下来，我们使用这个结果来界定部分和 $S_{\\chi}(x)$。设 $x$ 是任意非负实数，$N = \\lfloor x \\rfloor$ 是 $x$ 的整数部分。那么 $S_{\\chi}(x) = S_{\\chi}(N) = \\sum_{n=1}^{N} \\chi(n)$。我们可以将 $N$ 写成 $N = kq + t$，其中 $k = \\lfloor N/q \\rfloor$ 是一个非负整数，$t \\in \\{0, 1, \\dots, q-1\\}$。这个和可以分解为：\n$$\nS_{\\chi}(N) = \\sum_{n=1}^{kq+t} \\chi(n) = \\left( \\sum_{j=0}^{k-1} \\sum_{m=1}^{q} \\chi(jq+m) \\right) + \\sum_{m=1}^{t} \\chi(kq+m)\n$$\n根据 $\\chi$ 的 $q$-周期性，我们有 $\\chi(jq+m) = \\chi(m)$。应用这个性质，和变为：\n$$\nS_{\\chi}(N) = \\sum_{j=0}^{k-1} \\left( \\sum_{m=1}^{q} \\chi(m) \\right) + \\sum_{m=1}^{t} \\chi(m)\n$$\n由于 $\\sum_{m=1}^{q} \\chi(m) = 0$，第一项为零：\n$$\nS_{\\chi}(N) = k \\cdot 0 + \\sum_{m=1}^{t} \\chi(m) = \\sum_{m=1}^{t} \\chi(m) = S_{\\chi}(t)\n$$\n这表明任何部分和 $S_{\\chi}(x)$ 的值都等于一个部分和 $S_{\\chi}(t)$，其中 $t = \\lfloor x \\rfloor \\pmod q$。因此，$S_{\\chi}(x)$ 的所有可能值的集合是 $\\{S_{\\chi}(0), S_{\\chi}(1), \\dots, S_{\\chi}(q-1)\\}$。我们也注意到 $S_{\\chi}(0)=0$ 和 $S_{\\chi}(q)=0$。因此，和的绝对值的上确界由第一个周期内的最大值给出：\n$$\n\\sup_{x \\geq 0} |S_{\\chi}(x)| = \\max_{0 \\leq t < q} \\left| \\sum_{n=1}^{t} \\chi(n) \\right|\n$$\n\n现在我们对每个模数 $q \\in \\{3,4,5,6,7,8\\}$ 进行显式计算。\n\n对于 $q=3$：群 $(\\mathbb{Z}/3\\mathbb{Z})^{\\times} = \\{1, 2\\}$ 是一个 2 阶循环群。存在一个非主特征 $\\chi$，由 $\\chi(2)=-1$ 确定。\n值为 $\\{\\chi(1), \\chi(2), \\chi(3)\\} = \\{1, -1, 0\\}$。\n对于 $t \\in \\{0,1,2,3\\}$，部分和 $S_{\\chi}(t) = \\sum_{n=1}^t \\chi(n)$ 为：\n$S_{\\chi}(0)=0$, $S_{\\chi}(1)=1$, $S_{\\chi}(2)=1-1=0$, $S_{\\chi}(3)=0$。\n最大绝对值为 $\\sup_{x \\geq 0} |S_{\\chi}(x)| = 1$。\n\n对于 $q=4$：群 $(\\mathbb{Z}/4\\mathbb{Z})^{\\times} = \\{1, 3\\}$ 是一个 2 阶循环群。存在一个非主特征 $\\chi$，由 $\\chi(3)=-1$ 确定。\n值为 $\\{\\chi(1), \\chi(2), \\chi(3), \\chi(4)\\} = \\{1, 0, -1, 0\\}$。\n对于 $t \\in \\{0,1,2,3,4\\}$，部分和为：\n$S_{\\chi}(0)=0$, $S_{\\chi}(1)=1$, $S_{\\chi}(2)=1+0=1$, $S_{\\chi}(3)=1+0-1=0$, $S_{\\chi}(4)=0$。\n最大绝对值为 $\\sup_{x \\geq 0} |S_{\\chi}(x)| = 1$。\n\n对于 $q=5$：群 $(\\mathbb{Z}/5\\mathbb{Z})^{\\times} = \\{1, 2, 3, 4\\}$ 是一个 4 阶循环群，生成元为 $2$。特征由 $\\chi(2) = \\omega$ 确定，其中 $\\omega^4=1$。非主特征对应于 $\\omega \\in \\{i, -1, -i\\}$。\n情况1：$\\chi_1(2)=i$。值为 $\\{\\chi_1(1), \\dots, \\chi_1(5)\\} = \\{1, i, -i, -1, 0\\}$。\n部分和为： $S_{\\chi_1}(0)=0$, $S_{\\chi_1}(1)=1$, $S_{\\chi_1}(2)=1+i$, $S_{\\chi_1}(3)=1+i-i=1$, $S_{\\chi_1}(4)=1-1=0$, $S_{\\chi_1}(5)=0$。\n绝对值为 $\\{0, 1, |1+i|=\\sqrt{2}, 1, 0, 0\\}$。最大值为 $\\sqrt{2}$。对于 $\\chi_3 = \\overline{\\chi_1}$（其中 $\\chi_3(2)=-i$），和的绝对值相同，因此最大值也为 $\\sqrt{2}$。\n情况2：$\\chi_2(2)=-1$。值为 $\\{1, -1, -1, 1, 0\\}$。\n部分和为： $S_{\\chi_2}(0)=0$, $S_{\\chi_2}(1)=1$, $S_{\\chi_2}(2)=1-1=0$, $S_{\\chi_2}(3)=0-1=-1$, $S_{\\chi_2}(4)=-1+1=0$, $S_{\\chi_2}(5)=0$。\n绝对值为 $\\{0, 1, 0, 1, 0, 0\\}$。最大值为 $1$。\n所有模 5 的非主特征的最大值为 $\\sqrt{2}$。\n\n对于 $q=6$：群 $(\\mathbb{Z}/6\\mathbb{Z})^{\\times} = \\{1, 5\\}$ 是一个 2 阶循环群。存在一个非主特征 $\\chi$，由 $\\chi(5)=-1$ 确定。\n值为 $\\{\\chi(1), \\dots, \\chi(6)\\} = \\{1, 0, 0, 0, -1, 0\\}$。\n部分和为： $S_{\\chi}(0)=0$, $S_{\\chi}(1)=1$, $S_{\\chi}(2)=1$, $S_{\\chi}(3)=1$, $S_{\\chi}(4)=1$, $S_{\\chi}(5)=1-1=0$, $S_{\\chi}(6)=0$。\n最大绝对值为 $1$。\n\n对于 $q=7$：群 $(\\mathbb{Z}/7\\mathbb{Z})^{\\times}$ 是一个 6 阶循环群，生成元为 $3$。特征由 $\\chi(3)=\\omega$ 确定，其中 $\\omega^6=1$。存在 5 个非主特征。令 $\\omega_6 = e^{i\\pi/3}$。我们检查 $k=1,2,3$ 时 $\\omega = \\omega_6^k$ 的情况。$k=4,5$ 的特征是 $k=2,1$ 的共轭，产生相同的最大值。\n以 3 为底的指标是：$\\text{ind}_3(1)=0$, $\\text{ind}_3(2)=2$, $\\text{ind}_3(3)=1$, $\\text{ind}_3(4)=4$, $\\text{ind}_3(5)=5$, $\\text{ind}_3(6)=3$。\n情况1：$\\chi_1(3)=\\omega_6 = e^{i\\pi/3}$。值为 $\\{\\chi_1(n)\\}_{n=1}^7 = \\{1, \\omega_6^2, \\omega_6, \\omega_6^4, \\omega_6^5, \\omega_6^3, 0\\}$。\n部分和为： $S_{\\chi_1}(0)=0, S_{\\chi_1}(1)=1, S_{\\chi_1}(2)=1+\\omega_6^2=\\omega_6, S_{\\chi_1}(3)=\\omega_6+\\omega_6=2\\omega_6, S_{\\chi_1}(4)=2\\omega_6+\\omega_6^4=\\omega_6, S_{\\chi_1}(5)=\\omega_6+\\omega_6^5=1, S_{\\chi_1}(6)=1+\\omega_6^3=0, S_{\\chi_1}(7)=0$。\n绝对值为 $\\{0, 1, |\\omega_6|=1, |2\\omega_6|=2, |\\omega_6|=1, 1, 0, 0\\}$。最大值为 $2$。\n情况2：$\\chi_2(3)=\\omega_6^2 = e^{i2\\pi/3}$。值为 $\\{1, \\omega_6^4, \\omega_6^2, \\omega_6^8=\\omega_6^2, \\omega_6^{10}=\\omega_6^4, \\omega_6^6=1, 0\\}$。\n部分和给出的最大绝对值为 $1$。\n情况3：$\\chi_3(3)=\\omega_6^3 = -1$。这是勒让德符号 $(\\frac{n}{7})$。值为 $\\{1, 1, -1, 1, -1, -1, 0\\}$。\n部分和为： $S_{\\chi_3}(0)=0, S_{\\chi_3}(1)=1, S_{\\chi_3}(2)=2, S_{\\chi_3}(3)=1, S_{\\chi_3}(4)=2, S_{\\chi_3}(5)=1, S_{\\chi_3}(6)=0, S_{\\chi_3}(7)=0$。\n最大绝对值为 $2$。\n所有模 7 的非主特征的最大值为 $2$。\n\n对于 $q=8$：群 $(\\mathbb{Z}/8\\mathbb{Z})^{\\times} = \\{1, 3, 5, 7\\}$ 是一个克莱因四元群 ($C_2 \\times C_2$)。特征由其在生成元 $3$ 和 $5$ 上的值确定，即 $\\chi(3)=\\epsilon_1, \\chi(5)=\\epsilon_2$，其中 $\\epsilon_1, \\epsilon_2 \\in \\{1, -1\\}$。这给出了 3 个非主特征。\n情况1：$\\chi_1(3)=-1, \\chi_1(5)=1$。值为 $\\{\\chi_1(n)\\}_{n=1}^8 = \\{1, 0, -1, 0, 1, 0, -1, 0\\}$。\n部分和为 $\\{0, 1, 1, 0, 0, 1, 1, 0, 0\\}$。最大绝对值为 $1$。\n情况2：$\\chi_2(3)=1, \\chi_2(5)=-1$。值为 $\\{1, 0, 1, 0, -1, 0, -1, 0\\}$。\n部分和为 $\\{0, 1, 1, 2, 2, 1, 1, 0, 0\\}$。最大绝对值为 $2$。\n情况3：$\\chi_3(3)=-1, \\chi_3(5)=-1$。值为 $\\{1, 0, -1, 0, -1, 0, 1, 0\\}$。\n部分和为 $\\{0, 1, 1, 0, 0, -1, -1, 0, 0\\}$。最大绝对值为 $1$。\n所有模 8 的非主特征的最大值为 $2$。\n\n最大值摘要：\n对于 $q=3$：最大 $|S|=1$。\n对于 $q=4$：最大 $|S|=1$。\n对于 $q=5$：最大 $|S|=\\sqrt{2}$。\n对于 $q=6$：最大 $|S|=1$。\n对于 $q=7$：最大 $|S|=2$。\n对于 $q=8$：最大 $|S|=2$。\n\n极值量 $M$ 是这些值的最大值：\n$$\nM = \\max\\{1, 1, \\sqrt{2}, 1, 2, 2\\} = 2\n$$\n\n最后，我们将这些结果与诸如 Pólya–Vinogradov 不等式等一般界进行比较，该不等式表明对于某个常数 $C$，有 $|S_{\\chi}(x)| \\le C \\sqrt{q} \\log q$。对于我们的值：\n- $q=3$: $1 < \\sqrt{3}\\log 3 \\approx 1.90$。\n- $q=4$: $1 < \\sqrt{4}\\log 4 \\approx 2.77$。\n- $q=5$: $\\sqrt{2} \\approx 1.414 < \\sqrt{5}\\log 5 \\approx 3.60$。\n- $q=7$: $2 < \\sqrt{7}\\log 7 \\approx 5.15$。\n- $q=8$: $2 < \\sqrt{8}\\log 8 \\approx 5.88$。\n该界在所有情况下都成立，并且对于这些小模数而言界限相当宽松。该界在所有情况下都成立。“表明紧致性”这句话关系到数量级。计算出的最大值为 $1, 1, \\sqrt{2}, 1, 2, 2$。项 $\\sqrt{q}$ 的增长近似为 $1.73, 2, 2.24, 2.45, 2.65, 2.83$。观察到的值增长得比 $\\sqrt{q}\\log q$ 界慢得多。例如，计算出的最大值与 $\\sqrt{q}$ 的比值，对于 $q=3$ 是 $1/\\sqrt{3} \\approx 0.58$，对于 $q=5$ 是 $\\sqrt{2}/\\sqrt{5} \\approx 0.63$，对于 $q=7$ 是 $2/\\sqrt{7} \\approx 0.76$，对于 $q=8$ 是 $2/\\sqrt{8} \\approx 0.71$。这个比值不像 $\\log q$ 那样增长。\n这些对小 $q$ 的计算并不表明 $O(\\sqrt{q}\\log q)$ 的数量级是紧致的。事实上，它们更符合 $O(\\sqrt{q} \\log \\log q)$ 的猜想界，甚至更简单的 $O(\\sqrt{q})$ 界，因为对于这些小模数，对数项似乎没有体现出来。Pólya-Vinogradov 不等式中的 $\\log q$ 因子被广泛认为是证明方法的产物，并不代表特征和的真实最大尺寸。", "answer": "$$\n\\boxed{2}\n$$", "id": "3009715"}, {"introduction": "Pólya-Vinogradov 不等式为我们在连续整数上的求和提供了界限，但如果我们在一个高度结构化的不同集合上求和，情况会如何？这个练习将引导你分析一个在乘法级数上的特征和。你将看到相位的“聚类效应”如何导致一个异常大的和，从而揭示求和集合的结构在特征和估计中的关键作用。[@problem_id:3009661]", "problem": "设 $q$ 为一个奇素数，并令 $G = (\\mathbb{Z}/q\\mathbb{Z})^{\\times}$ 表示模 $q$ 的乘法群，这是一个阶为 $q-1$ 的循环群。固定一个 $G$ 的生成元 $g$。定义一个模 $q$ 的狄利克雷特征 $\\chi$，其在生成元 $g$ 上的值为 $\\chi(g) = \\exp\\!\\big(2\\pi i/(q-1)\\big)$，并在 $G$ 上进行乘法延拓，同时规定 $\\chi(0)=0$。该特征 $\\chi$ 是本原的，且其阶恰好为 $q-1$。对于一个满足 $1 \\leq K \\leq \\left\\lfloor \\frac{q-1}{2} \\right\\rfloor$ 的整数 $K$，考虑几何序列 $n_{k} \\equiv g^{k} \\pmod{q}$（其中 $1 \\leq k \\leq K$）及其相关的部分和\n$S_{K} \\;=\\; \\sum_{k=1}^{K} \\chi(n_{k}).$\n请仅从狄利克雷特征的定义和群 $G$ 的循环结构出发，只利用有限几何级数求和与基本三角恒等式等基础知识，推导出一个关于 $q$ 和 $K$ 的 $|S_{K}|$ 实数值模长的精确闭式表达式。简要解释为什么所选序列会表现出 $\\chi(n_{k})$ 的相位聚集现象，以及为什么 $|S_{K}|$ 的值与针对连续整数的特征和上界（例如 Pólya–Vinogradov 不等式）不矛盾。你的最终答案应该是 $|S_K|$ 作为 $q$ 和 $K$ 的函数的精确闭式表达式。无需进行舍入。", "solution": "问题陈述已经过验证，被认为是有效的。该问题在科学上基于数论原理，表述清晰，信息充分且一致，并且是客观陈述的。\n\n该问题要求我们为部分特征和 $S_K = \\sum_{k=1}^{K} \\chi(n_k)$ 的模长给出一个精确的闭式表达式，其中 $n_k \\equiv g^k \\pmod{q}$。\n\n首先，我们使用狄利克雷特征 $\\chi$ 的定义来表示和中的各项。特征 $\\chi$ 在群 $G = (\\mathbb{Z}/q\\mathbb{Z})^{\\times}$ 的生成元 $g$ 上的定义为 $\\chi(g) = \\exp(2\\pi i / (q-1))$。由于 $\\chi$ 是一个乘法同态，其在元素 $n_k = g^k$ 上的值为：\n$$\n\\chi(n_k) = \\chi(g^k) = (\\chi(g))^k\n$$\n我们记复数 $r = \\chi(g) = \\exp(2\\pi i / (q-1))$。现在，和 $S_K$ 可以写为：\n$$\nS_K = \\sum_{k=1}^{K} r^k\n$$\n这是一个首项为 $r$、公比为 $r$、共有 $K$ 项的有限几何级数。由于 $q$ 是一个奇素数，所以 $q \\ge 3$，这意味着 $q-1 \\ge 2$。因此，公比 $r = \\exp(2\\pi i / (q-1))$ 是一个单位根，但不等于 $1$。该几何级数的和由标准公式给出：\n$$\nS_K = r \\frac{1 - r^K}{1 - r}\n$$\n题目要求我们求出实数值的模长 $|S_K|$。利用复数模的性质，我们有：\n$$\n|S_K| = \\left| r \\frac{1 - r^K}{1 - r} \\right| = |r| \\frac{|1 - r^K|}{|1 - r|}\n$$\n$r$ 的模为 $|r| = |\\exp(2\\pi i / (q-1))| = 1$。因此，模长的表达式简化为：\n$$\n|S_K| = \\frac{|1 - r^K|}{|1 - r|}\n$$\n为了计算这个值，我们使用单位圆上两个复数之差的模长的恒等式。对于任意实数 $\\theta$，一个有用的恒等式是 $|1 - e^{i\\theta}| = 2|\\sin(\\theta/2)|$。这可以如下推导：\n$$\n|1 - e^{i\\theta}| = |e^{i\\theta/2}(e^{-i\\theta/2} - e^{i\\theta/2})| = |e^{i\\theta/2}| \\cdot | -2i \\sin(\\theta/2) | = (1) \\cdot |-2i| \\cdot |\\sin(\\theta/2)| = 2|\\sin(\\theta/2)|\n$$\n我们将此恒等式应用于我们 $|S_K|$ 表达式的分子和分母。\n\n对于分母 $|1-r|$，我们有 $r = \\exp(2\\pi i / (q-1))$，所以 $\\theta = \\frac{2\\pi}{q-1}$。\n$$\n|1 - r| = 2\\left|\\sin\\left(\\frac{1}{2} \\cdot \\frac{2\\pi}{q-1}\\right)\\right| = 2\\left|\\sin\\left(\\frac{\\pi}{q-1}\\right)\\right|\n$$\n因为 $q \\ge 3$，我们有 $q-1 \\ge 2$，所以 $0 < \\frac{\\pi}{q-1} \\le \\frac{\\pi}{2}$。在此区间内，正弦函数为正。因此，不需要绝对值符号：\n$$\n|1 - r| = 2\\sin\\left(\\frac{\\pi}{q-1}\\right)\n$$\n对于分子 $|1-r^K|$，我们有 $r^K = (\\exp(2\\pi i / (q-1)))^K = \\exp(2\\pi i K / (q-1))$。这里，$\\theta = \\frac{2\\pi K}{q-1}$。\n$$\n|1 - r^K| = 2\\left|\\sin\\left(\\frac{1}{2} \\cdot \\frac{2\\pi K}{q-1}\\right)\\right| = 2\\left|\\sin\\left(\\frac{\\pi K}{q-1}\\right)\\right|\n$$\n题目规定 $1 \\le K \\le \\lfloor \\frac{q-1}{2} \\rfloor$。这意味着 $0 < \\frac{\\pi K}{q-1} \\le \\frac{\\pi}{q-1} \\lfloor \\frac{q-1}{2} \\rfloor \\le \\frac{\\pi}{q-1} \\frac{q-1}{2} = \\frac{\\pi}{2}$。在区间 $(0, \\pi/2]$ 内，正弦函数也为正。所以，我们在这里也可以去掉绝对值符号：\n$$\n|1 - r^K| = 2\\sin\\left(\\frac{\\pi K}{q-1}\\right)\n$$\n将这些结果代回到 $|S_K|$ 的表达式中，得到最终的闭式表达式：\n$$\n|S_K| = \\frac{2\\sin\\left(\\frac{\\pi K}{q-1}\\right)}{2\\sin\\left(\\frac{\\pi}{q-1}\\right)} = \\frac{\\sin\\left(\\frac{\\pi K}{q-1}\\right)}{\\sin\\left(\\frac{\\pi}{q-1}\\right)}\n$$\n该表达式给出了和 $S_K$ 的精确模长，作为 $q$ 和 $K$ 的函数。\n\n接下来，我们解释题目中要求的概念性问题。\n\n该序列之所以表现出“相位聚集”，是因为求和项 $\\chi(n_k) = \\exp(2\\pi i k / (q-1))$（其中 $k=1, 2, \\dots, K$）并非在复平面的单位圆上随机分布。它们的辐角（相位）构成一个短的等差数列：$\\frac{2\\pi}{q-1}, \\frac{4\\pi}{q-1}, \\dots, \\frac{2\\pi K}{q-1}$。在约束条件 $1 \\le K \\le \\lfloor \\frac{q-1}{2} \\rfloor$下，所有这些辐角都位于区间 $(0, \\pi]$ 内。这意味着所有的复数 $\\chi(n_k)$ 都位于上半平面（如果 $K=(q-1)/2$，则包括点 $-1$）。当这些向量相加时，它们的虚部都是非负的，而实部在有限的范围内变化。这导致了相长干涉，避免了如果相位在整个圆周上伪随机分布时会发生的大规模抵消。因此，这个和异常地大。\n\n这个结果与 Pólya–Vinogradov 不等式并不矛盾。Pólya–Vinogradov 不等式为任何模 $q$ 的非主特征 $\\chi$ 提供了形式为 $|\\sum_{n=M+1}^{M+N} \\chi(n)| \\ll \\sqrt{q} \\ln q$ 的上界。关键的区别在于求和所针对的集合。Pólya–Vinogradov 不等式适用于对连续整数（公差为1的等差数列）的求和，这些整数构成一个区间。相比之下，和 $S_K$ 是对一个模 $q$ 的几何序列 $\\{g^1, g^2, \\dots, g^K\\}$ 进行求和。这是一个模 $q$ 的非常稀疏且结构化的剩余子集。对于大的 $q$，$S_K$ 的模长可以是 $O(q)$ 阶。例如，如果 $K$ 接近 $(q-1)/4$，那么 $|S_K| \\approx \\sin(\\pi/4)/\\sin(\\pi/(q-1)) \\approx \\frac{1}{\\sqrt{2}} / (\\pi/(q-1)) = \\frac{q-1}{\\pi\\sqrt{2}}$，这在 $q$ 中是线性的。这比 $\\sqrt{q}\\ln q$ 的界限大得多。Pólya–Vinogradov 不等式不适用于这种类型的结构化求和，因此没有矛盾。$|S_K|$ 的巨大值是一个经典的例子，它表明对特定结构化集合的特征和的行为可能与对区间的求和截然不同。", "answer": "$$\\boxed{\\frac{\\sin\\left(\\frac{\\pi K}{q-1}\\right)}{\\sin\\left(\\frac{\\pi}{q-1}\\right)}}$$", "id": "3009661"}, {"introduction": "手动计算虽然富有启发性，但仅限于处理小模数。这个实践旨在连接理论与应用，指导你设计一个算法来系统地计算最大特征和。通过将计算结果与理论上的 $O(\\sqrt{p}\\log{p})$ 增长尺度进行归一化比较，你将能够用计算的方式探索特征和的实际增长率，并检验 Pólya-Vinogradov 不等式在不同素数下的紧致性。[@problem_id:3009691]", "problem": "您的任务是设计并实现一个完整的、可运行的程序，该程序通过数值方法研究狄利克雷特征（Dirichlet characters）的部分和，以评估作为特征和估计（如Pólya–Vinogradov现象）基础的增长规模。为保持乘法群结构的简明性，请仅使用奇素数模数。数学和算法任务如下。\n\n起点与核心定义。对于一个奇素数模数 $p$，乘法群 $\\left(\\mathbb{Z}/p\\mathbb{Z}\\right)^{\\times}$ 含有 $p-1$ 个元素并且是循环的。固定一个模 $p$ 的原根 $g$，使得每个与 $p$ 互质的剩余类 $n$ 都可以唯一地写为 $n \\equiv g^{a_{n}} \\pmod{p}$，其中指数 $a_{n} \\in \\{0,1,\\dots,p-2\\}$ 是 $n$ 以 $g$ 为底的离散对数。对于每个满足 $1 \\leq k \\leq p-2$ 的整数 $k$，通过指定其在 $g$ 的幂上的值来定义一个模 $p$ 的非主狄利克雷特征，即\n$$\n\\chi_{k}\\!\\left(g^{a}\\right) \\;=\\; \\exp\\!\\left(\\frac{2\\pi i\\, k\\, a}{\\,p-1\\,}\\right),\n$$\n并通过当 $\\gcd(n,p)\\neq 1$ 时令 $\\chi_{k}(n)=0$ 以及模 $p$ 的周期性将 $\\chi_{k}$ 扩展到所有整数。对于每个这样的特征 $\\chi=\\chi_{k}$，定义部分和函数\n$S_{\\chi}(x)\\;=\\;\\sum_{n\\le x}\\chi(n),$\n以及最大前缀和的绝对值\n$M(\\chi)\\;=\\;\\max_{1\\le x \\le p-1}\\left|S_{\\chi}(x)\\right|.$\n对于奇素数 $p$，每个非主特征 $\\chi$ 都满足 $\\sum_{n=1}^{p-1}\\chi(n)=0$，因此对完整周期的求和贡献为零，这意味着在所有 $x\\in\\mathbb{N}$ 上 $\\left|S_{\\chi}(x)\\right|$ 的上确界在第一个周期 $1\\le x\\le p-1$ 内达到。\n\n基准尺度。为从数值上衡量 $M(\\chi)$ 的增长率，我们使用 $\\sqrt{p}\\,\\log p$ 这个尺度进行自然的归一化，并为每个模数 $p$ 定义所有非主特征下的最坏情况归一化最大值\n$R(p)\\;=\\;\\frac{1}{\\sqrt{p}\\,\\log p}\\,\\max_{\\,\\chi\\ne\\chi_{0}}\\;M(\\chi).$\n\n要求的推导与算法。推导一个基于 $\\left(\\mathbb{Z}/p\\mathbb{Z}\\right)^{\\times}$ 结构的算法，该算法能够：\n- 从 $p-1$ 的素因子分解出发，通过在群中进行幂运算来测试候选者，从而找到一个模 $p$ 的原根 $g$。\n- 通过为 $a=0,1,\\dots,p-2$ 制表 $g^{a}\\bmod p$ 的值，来高效地计算所有 $n\\in\\{1,2,\\dots,p-1\\}$ 的离散对数指数 $a_{n}$。\n- 使用指数 $a_{n}$ 和单位根 $\\exp\\!\\left(\\frac{2\\pi i a_{n}}{p-1}\\right)$ 来构造所有对于 $k=1,2,\\dots,p-2$ 的非主特征 $\\chi_{k}$，使得 $\\chi_{k}(n)=\\left(\\exp\\!\\left(\\frac{2\\pi i a_{n}}{p-1}\\right)\\right)^{k}$。\n- 对于每个 $\\chi_{k}$，通过对 $n$ 从 $1$ 到 $p-1$ 的 $\\chi_{k}(n)$ 进行累积求和，并追踪这些部分和的绝对值的最大值，来计算 $M(\\chi_{k})$。\n- 对每个模数 $p$ 汇总计算 $R(p)$。\n\n单位与数值约定。所有量均为无量纲。$\\log p$ 使用自然对数。允许进行复数运算；最终输出为实数。\n\n测试套件。在以下奇素数模数列表上实现并运行您的算法，该列表探测了小规模和中等规模的情况，并包括了边界和非平凡的案例：\n- $p=3$\n- $p=5$\n- $p=7$\n- $p=11$\n- $p=13$\n- $p=17$\n- $p=19$\n- $p=29$\n\n答案规格与最终输出格式。对于给定顺序中的每个测试模数 $p$，计算如上定义的 $R(p)$。您的程序应生成单行输出，其中包含这八个结果，形式为逗号分隔的十进制数列表，保留六位小数，并用方括号括起来（例如，\"[0.123456,0.234567,0.345678,0.456789,0.567890,0.678901,0.789012,0.890123]\"）。不应打印任何额外的文本或行。", "solution": "该问题陈述提出了一个在计算数论领域中有效且定义明确的任务。它以狄利克雷特征理论为科学基础，内容自洽，并提出了一套清晰、客观的要求，存在唯一的解。所有定义都是标准的且在数学上是正确的。对于指定的参数，计算任务是可行的。因此，我们可以着手求解。\n\n算法如下：\n1.  确定 $p-1$ 的所有不同素因子。由于 $p$ 的值很小，这可以通过试除法完成。\n2.  遍历整数候选者 $g=2, 3, 5, \\dots$\n3.  对每个候选者 $g$，计算 $g^{(p-1)/q} \\pmod{p}$，其中 $q$ 是 $p-1$ 的每个不同素因子。为进行这些计算，使用一种高效的模幂算法（如平方求幂）。\n4.  如果对于所有这样的 $q$，都有 $g^{(p-1)/q} \\not\\equiv 1 \\pmod{p}$，则 $g$ 是一个原根。选择找到的第一个这样的 $g$。原根的存在性是得到保证的。\n\n**步骤2：计算离散对数**\n一旦固定了一个原根 $g$，每个元素 $n \\in \\{1, 2, \\dots, p-1\\}$ 都可以唯一地表示为 $g$ 的幂。在同余式 $n \\equiv g^{a_n} \\pmod{p}$ 中，指数 $a_n$（其中 $0 \\le a_n \\le p-2$）称为 $n$ 以 $g$ 为底的离散对数（或指标）。\n\n为了高效地找到所有 $n$ 的离散对数 $a_n$，我们可以预先计算一个查找表：\n1.  初始化一个数组或哈希表，例如 `dlog`，用于存储从群元素到其指数的映射。\n2.  遍历指数 $a$ 从 $0$ 到 $p-2$。\n3.  在每次迭代中，计算值 $v = g^a \\pmod{p}$。\n4.  存储映射 `dlog[v] = a`。\n循环结束后，该表允许对任何 $n \\in \\{1, \\dots, p-1\\}$ 的离散对数 $a_n$ 进行常数时间查找。\n\n**步骤3：构造狄利克雷特征**\n模 $p$ 的非主狄利克雷特征 $\\chi_k$ 由 $k \\in \\{1, 2, \\dots, p-2\\}$ 索引。它们在原根 $g$ 的幂上的值定义为\n$$ \\chi_k(g^a) = \\exp\\left(\\frac{2\\pi i k a}{p-1}\\right) $$\n对于任何满足 $\\gcd(n,p)=1$ 的整数 $n$，我们找到其离散对数 $a_n$ 并计算 $\\chi_k(n) = \\chi_k(g^{a_n})$。如果 $\\gcd(n,p) \\neq 1$，则 $\\chi_k(n) = 0$。\n\n令 $\\omega_1(n) = \\chi_1(n) = \\exp\\left(\\frac{2\\pi i a_n}{p-1}\\right)$。这是一个“基础”特征，所有其他特征都可以由它生成。任何其他特征 $\\chi_k$ 的值则由下式给出：\n$$ \\chi_k(n) = \\exp\\left(\\frac{2\\pi i k a_n}{p-1}\\right) = \\left(\\exp\\left(\\frac{2\\pi i a_n}{p-1}\\right)\\right)^k = (\\chi_1(n))^k $$\n这一观察使得高效构造成为可能。我们首先使用离散对数表计算值向量 $[\\chi_1(1), \\chi_1(2), \\dots, \\chi_1(p-1)]$。然后，对于每个 $k$，通过对基础向量中的每个元素取 $k$ 次幂来获得 $\\chi_k$ 的值向量。\n\n**步骤4：计算最大前缀和的绝对值 $M(\\chi_k)$**\n对于每个特征 $\\chi_k$（$k=1, \\dots, p-2$），我们需要计算 $M(\\chi_k) = \\max_{1 \\le x \\le p-1} |S_{\\chi_k}(x)|$。部分和为 $S_{\\chi_k}(x) = \\sum_{n=1}^x \\chi_k(n)$。这可以迭代计算：\n1.  初始化一个复数变量 `current_sum` 为 $0$ 和一个实数变量 `max_magnitude` 为 $0$。\n2.  创建一个特征值数组 `chi_values` = $[\\chi_k(1), \\chi_k(2), \\dots, \\chi_k(p-1)]$。\n3.  遍历 $x$ 从 $1$ 到 $p-1$：\n    a. 通过加上 $\\chi_k(x)$ 来更新 `current_sum`。\n    b. 将 `max_magnitude` 更新为其当前值与 `current_sum` 的绝对值之间的最大值。\n4.  最终的 `max_magnitude` 即为 $M(\\chi_k)$。\n\n**步骤5：汇总与归一化以求得 $R(p)$**\n最后一步是计算目标量 $R(p)$。\n1.  对于一个给定的素数 $p$，我们计算所有非主特征的 $M(\\chi_k)$，即对 $k=1, 2, \\dots, p-2$。\n2.  找到这些值的最大值：$M_{\\max}(p) = \\max_{1 \\le k \\le p-2} M(\\chi_k)$。\n3.  使用自然对数计算归一化比率：\n$$ R(p) = \\frac{M_{\\max}(p)}{\\sqrt{p} \\log p} $$\n对所提供的测试套件中的每个素数 $p$ 重复此整个过程。实现将使用 `numpy` 来高效处理复数和数组操作，例如向量化幂运算和累积和。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to calculate and print the results for the given test suite.\n    \"\"\"\n\n    def get_prime_factorization(n):\n        \"\"\"Finds the distinct prime factors of n.\"\"\"\n        factors = set()\n        d = 2\n        temp_n = n\n        while d * d <= temp_n:\n            if temp_n % d == 0:\n                factors.add(d)\n                while temp_n % d == 0:\n                    temp_n //= d\n            d += 1\n        if temp_n > 1:\n            factors.add(temp_n)\n        return list(factors)\n\n    def find_primitive_root(p):\n        \"\"\"Finds the smallest primitive root modulo an odd prime p.\"\"\"\n        if p == 3:\n            return 2\n        \n        phi = p - 1\n        prime_factors_phi = get_prime_factorization(phi)\n        \n        for g in range(2, p):\n            is_primitive = True\n            for q in prime_factors_phi:\n                # Use pow(base, exp, mod) for efficient modular exponentiation\n                if pow(g, phi // q, p) == 1:\n                    is_primitive = False\n                    break\n            if is_primitive:\n                return g\n        return -1 # Should not be reached for a prime p\n\n    def calculate_r_p(p):\n        \"\"\"\n        Calculates R(p) for a given odd prime p.\n        R(p) = (1 / (sqrt(p) * log(p))) * max_{chi != chi_0} M(chi)\n        \"\"\"\n        phi = p - 1\n        \n        # Step 1: Find a primitive root\n        g = find_primitive_root(p)\n        \n        # Step 2: Compute discrete logarithms\n        # dlogs[n] will store the discrete logarithm of n\n        dlogs = np.zeros(p, dtype=int)\n        val = 1\n        for a in range(phi):\n            dlogs[val] = a\n            val = (val * g) % p\n            \n        # Get an array of discrete logs a_n for n = 1, ..., p-1\n        # an_vals[i] corresponds to a_{i+1}\n        an_vals = np.array([dlogs[n] for n in range(1, p)])\n\n        # Step 3: Construct characters and find max M(chi)\n        # First, compute the values for the base character chi_1\n        # chi_1_vals[i] corresponds to chi_1(i+1)\n        chi_1_vals = np.exp(2j * np.pi * an_vals / phi)\n        \n        max_M = 0.0\n        \n        # Iterate over all non-principal characters k = 1, ..., p-2\n        # Note: k goes to p-2 inclusive, which is range(1, phi)\n        for k in range(1, phi):\n            # Step 3 (cont.): Construct chi_k from chi_1\n            # (chi_1(n))^k = chi_k(n)\n            chi_k_vals = np.power(chi_1_vals, k)\n            \n            # Step 4: Compute M(chi_k)\n            # S_chi(x) = sum_{n<=x} chi(n)\n            partial_sums = np.cumsum(chi_k_vals)\n            # M(chi) = max_{1<=x<=p-1} |S_chi(x)|\n            M_chi_k = np.max(np.abs(partial_sums))\n            \n            if M_chi_k > max_M:\n                max_M = M_chi_k\n\n        # Step 5: Aggregate and compute R(p)\n        R_p = max_M / (np.sqrt(p) * np.log(p))\n        \n        return R_p\n\n    # Define the test cases from the problem statement.\n    test_cases = [3, 5, 7, 11, 13, 17, 19, 29]\n\n    results = []\n    for p in test_cases:\n        result = calculate_r_p(p)\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "3009691"}]}