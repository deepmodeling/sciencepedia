{"hands_on_practices": [{"introduction": "第一个练习鼓励你通过直接的动手计算来探索欧拉乘积 $\\prod_{m \\ge 1} (1-q^m)$ 的初始项。通过为小整数枚举由不同部分构成的分拆，你将亲自计算出级数的系数，从而将抽象的定理植根于具体的算术之中，并从一开始就澄清关于指数和符号的常见误解。[@problem_id:3013508]", "problem": "设 $q$ 为一不定元，并考虑形式积 $G(q) = \\prod_{m \\geq 1} \\left(1 - q^{m}\\right)$。该乘积是互异部分分拆的带符号生成函数，其含义是，当 $G(q)$ 展开为形式幂级数时，$q^{n}$ 的系数是 $n$ 分拆为偶数个互异部分的方案数与 $n$ 分拆为奇数个互异部分的方案数之差。请仅从该乘积定义和上述解释出发，确定 $G(q)$ 直至15次项的非零项的正确列表，并利用低次项的显式计算来纠正常见的误解，例如混淆指数族 $k(3k-1)/2$ 和 $k(3k+1)/2$，或错误地指定连续项的符号模式。哪个选项是正确的？\n\nA. $G(q) = 1 - q - q^{2} + q^{5} + q^{7} - q^{12} - q^{15} + O\\!\\left(q^{16}\\right)$\n\nB. $G(q) = 1 - q - q^{3} + q^{4} + q^{8} - q^{9} - q^{13} + O\\!\\left(q^{14}\\right)$\n\nC. $G(q) = 1 - q + q^{2} - q^{5} + q^{7} - q^{12} + q^{15} + O\\!\\left(q^{16}\\right)$\n\nD. $G(q) = 1 - q - q^{2} + q^{4} + q^{7} - q^{10} - q^{13} + O\\!\\left(q^{14}\\right)$", "solution": "经评估，问题陈述是**有效**的。它在数学上和科学上是合理的、良定的和客观的。它提出了一个关于数论中标准结果“欧拉五边形数定理”的可验证问题，该定理建立在欧拉函数 $G(q) = \\prod_{m \\geq 1} (1 - q^m)$ 的形式展开之上。该问题要求基于第一性原理——即直接计算和组合解释——来求解，这是一种合法且可行的方法。\n\n问题要求展开形式积 $G(q) = \\prod_{m \\geq 1} (1 - q^m)$ 直至15次项。$G(q)$ 展开式中 $q^n$ 的系数由 $n$ 分拆为偶数个互异部分的方案数（记为 $d_e(n)$）与 $n$ 分拆为奇数个互异部分的方案数（记为 $d_o(n)$）之差给出。设此系数为 $c_n = d_e(n) - d_o(n)$。我们将通过显式列出分拆来计算较小的 $n$ 所对应的 $c_n$ 值。\n\n对于 $n=0$：唯一的分拆是空分拆，它有 $0$ 个部分。因为 $0$ 是偶数，所以 $d_e(0) = 1$ 且 $d_o(0) = 0$。因此，$c_0 = 1$。\n\n对于 $n=1$：唯一的互异部分分拆是 $(1)$。它有 $1$ 个部分（奇数）。\n$d_e(1) = 0$，$d_o(1) = 1$。所以，$c_1 = 0 - 1 = -1$。\n\n对于 $n=2$：唯一的互异部分分拆是 $(2)$。它有 $1$ 个部分（奇数）。\n$d_e(2) = 0$，$d_o(2) = 1$。所以，$c_2 = 0 - 1 = -1$。\n\n对于 $n=3$：互异部分分拆有 $(3)$ 和 $(2,1)$。\n$(3)$ 有 $1$ 个部分（奇数）。$(2,1)$ 有 $2$ 个部分（偶数）。\n$d_e(3) = 1$，$d_o(3) = 1$。所以，$c_3 = 1 - 1 = 0$。\n\n对于 $n=4$：互异部分分拆有 $(4)$ 和 $(3,1)$。\n$(4)$ 有 $1$ 个部分（奇数）。$(3,1)$ 有 $2$ 个部分（偶数）。\n$d_e(4) = 1$，$d_o(4) = 1$。所以，$c_4 = 1 - 1 = 0$。\n\n对于 $n=5$：互异部分分拆有 $(5)$、$(4,1)$ 和 $(3,2)$。\n$(5)$ 有 $1$ 个部分（奇数）。$(4,1)$ 有 $2$ 个部分（偶数）。$(3,2)$ 有 $2$ 个部分（偶数）。\n$d_e(5) = 2$，$d_o(5) = 1$。所以，$c_5 = 2 - 1 = 1$。\n\n对于 $n=6$：互异部分分拆有 $(6)$、$(5,1)$、$(4,2)$ 和 $(3,2,1)$。\n$(6)$ 有 $1$ 个部分（奇数）。$(5,1)$ 有 $2$ 个部分（偶数）。$(4,2)$ 有 $2$ 个部分（偶数）。$(3,2,1)$ 有 $3$ 个部分（奇数）。\n$d_e(6) = 2$，$d_o(6) = 2$。所以，$c_6 = 2 - 2 = 0$。\n\n对于 $n=7$：互异部分分拆有 $(7)$、$(6,1)$、$(5,2)$、$(4,3)$ 和 $(4,2,1)$。\n$(7)$ 有 $1$ 个部分（奇数）。$(6,1)$、$(5,2)$、$(4,3)$ 各有 $2$ 个部分（偶数）。$(4,2,1)$ 有 $3$ 个部分（奇数）。\n$d_e(7) = 3$，$d_o(7) = 2$。所以，$c_7 = 3 - 2 = 1$。\n\n到目前为止，级数为 $G(q) = 1 - q - q^2 + q^5 + q^7 + \\dots$。\n\n这些计算例证了 Franklin 的双射，这是一个组合学证明，表明对于大多数整数 $n$，$d_e(n) = d_o(n)$，因此 $c_n=0$。该双射仅在 $n$ 为广义五边形数时失效，这类数是形如 $n = \\frac{j(3j-1)}{2}$ 的整数，其中 $j$ 为任意非零整数。在这些情况下，$c_n = (-1)^j$。\n\n我们来找出15以内的广义五边形数：\n对于 $j=1$：$n = \\frac{1(3(1)-1)}{2} = \\frac{2}{2} = 1$。系数为 $c_1 = (-1)^1 = -1$。\n对于 $j=-1$：$n = \\frac{-1(3(-1)-1)}{2} = \\frac{-1(-4)}{2} = 2$。系数为 $c_2 = (-1)^{-1} = -1$。\n对于 $j=2$：$n = \\frac{2(3(2)-1)}{2} = \\frac{2(5)}{2} = 5$。系数为 $c_5 = (-1)^2 = 1$。\n对于 $j=-2$：$n = \\frac{-2(3(-2)-1)}{2} = \\frac{-2(-7)}{2} = 7$。系数为 $c_7 = (-1)^{-2} = 1$。\n对于 $j=3$：$n = \\frac{3(3(3)-1)}{2} = \\frac{3(8)}{2} = 12$。系数为 $c_{12} = (-1)^3 = -1$。\n对于 $j=-3$：$n = \\frac{-3(3(-3)-1)}{2} = \\frac{-3(-10)}{2} = 15$。系数为 $c_{15} = (-1)^{-3} = -1$。\n对于 $j=4$：$n = \\frac{4(3(4)-1)}{2} = \\frac{4(11)}{2} = 22$。这超出了所要求的次数。\n\n所有其他不在此列表中的 $n \\le 15$ 的整数（$3, 4, 6, 8, 9, 10, 11, 13, 14$）都不是广义五边形数，因此它们对应的系数为 $0$。这与我们对 $n=3, 4, 6$ 的显式计算结果一致。问题要求解决常见的误解。由正负 $j$ 产生的两个指数族是：对于 $k \\ge 1$，分别为 $\\frac{k(3k-1)}{2}$ ($1, 5, 12, \\dots$) 和 $\\frac{k(3k+1)}{2}$ ($2, 7, 15, \\dots$)。一个常见的错误是遗漏了其中一个族。另一个错误是错误地分配符号。符号为 $(-1)^j$，这导致了两个负号、两个正号、两个负号，依此类推的模式：$(-1, -1, +1, +1, -1, -1, \\dots)$。\n\n将直至15次的项组合起来，我们得到：\n$G(q) = c_0 + c_1 q + c_2 q^2 + \\dots + c_{15} q^{15} + O(q^{16})$\n$G(q) = 1 + (-1)q + (-1)q^2 + (0)q^3 + (0)q^4 + (1)q^5 + (0)q^6 + (1)q^7 + (0)q^8 + (0)q^9 + (0)q^{10} + (0)q^{11} + (-1)q^{12} + (0)q^{13} + (0)q^{14} + (-1)q^{15} + O(q^{16})$\n$G(q) = 1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15} + O(q^{16})$\n\n现在，我们评估每个给定的选项。\n\nA. $G(q) = 1 - q - q^{2} + q^{5} + q^{7} - q^{12} - q^{15} + O\\!\\left(q^{16}\\right)$\n该表达式与我们推导出的级数逐项匹配，包括指数（$1, 2, 5, 7, 12, 15$）及其对应的符号（$-, - , +, +, -, -$）。余项 $O(q^{16})$ 的阶是正确的，因为下一个非零项出现在 $n=22$。\n**结论：正确。**\n\nB. $G(q) = 1 - q - q^{3} + q^{4} + q^{8} - q^{9} - q^{13} + O\\!\\left(q^{14}\\right)$\n该表达式包含错误的指数。例如，它列出了 $q^3$ 的非零系数，而我们的计算显示 $c_3=0$。它还列出了 $q^4, q^8, q^9, q^{13}$ 的非零系数，这些都应为零。它遗漏了 $-q^2$ 项。\n**结论：不正确。**\n\nC. $G(q) = 1 - q + q^{2} - q^{5} + q^{7} - q^{12} + q^{15} + O\\!\\left(q^{16}\\right)$\n该表达式的指数正确，但有几项的符号不正确。$q^2$ 的系数应为 $-1$，而不是 $+1$。$q^5$ 的系数应为 $+1$，而不是 $-1$。$q^{15}$ 的系数应为 $-1$，而不是 $+1$。这些错误反映了对如何确定符号 $(-1)^j$ 的误解。\n**结论：不正确。**\n\nD. $G(q) = 1 - q - q^{2} + q^{4} + q^{7} - q^{10} - q^{13} + O\\!\\left(q^{14}\\right)$\n该表达式包含错误的指数。它列出了 $q^4, q^{10}, q^{13}$ 的非零系数，这些都应为零。它遗漏了正确的项 $+q^5$。\n**结论：不正确。**\n\n根据题目要求从第一性原理进行的推导，只有选项A是正确的。", "answer": "$$\\boxed{A}$$", "id": "3013508"}, {"introduction": "在观察到级数的非凡规律后，我们现在来深入探究其背后的原因。这个练习将引导你完成 Franklin 优美的组合学证明，你将在由不同部分构成的分拆集合上构造一个符号颠倒对合（sign-reversing involution）。这一过程将优雅地解释为何大多数系数为零，并揭示那些非零的例外项如何精确地对应于广义五边形数。[@problem_id:3013526]", "problem": "令 $q$ 为一个不定元，考虑无穷乘积生成函数 (GF) $$F(q) = \\prod_{n=1}^{\\infty} \\left(1 - q^{n}\\right),$$ 其在 $q$ 中被视为一个形式幂级数 (FPS)。一个广义五边形数是形如 $$\\frac{k(3k-1)}{2} \\quad \\text{或} \\quad \\frac{k(3k+1)}{2}$$ 的任意整数（对于 $k \\in \\mathbb{Z}_{>0}$），以及 $0$。\n\n从 $F(q)$ 的形式展开式及其系数作为不同部分分拆上的交错和的组合解释出发，完成以下任务：\n\n1. 将系数 $[q^{m}]F(q)$ 完全用 $m$ 的不同部分分拆及其基数来表示。在 $m$ 的不同部分分拆集合上（排除您识别出的任何例外构型）构造一个符号反转对合，并严格证明该对合将所有非例外分拆配对，使得它们在 $[q^{m}]F(q)$ 中的贡献相互抵消。\n\n2. 从您的对合推断出，仅当 $m$ 是一个广义五边形数时，$[q^{m}]F(q)$ 才非零，并且非零系数遵循成对出现的交错符号模式。\n\n3. 按升序列出前 $20$ 个广义五边形数，并为您在第 2 部分中证明的 $F(q)$ 中相应系数指出其符号。\n\n4. 使用您建立的模式，确定系数 $[q^{155}]F(q)$ 的精确整数值。\n\n您的最终答案必须是一个整数。不需要四舍五入。", "solution": "问题要求对无穷乘积 $F(q) = \\prod_{n=1}^{\\infty} (1 - q^{n})$ 的系数进行全面分析，最终计算出特定系数 $[q^{155}]F(q)$。这需要欧拉五边形数定理的一个组合证明。\n\n首先，我们解释给定整数 $m \\ge 0$ 的系数 $[q^m]F(q)$。该函数 $F(q)$ 的形式展开式为：\n$$ F(q) = (1-q^1)(1-q^2)(1-q^3)\\cdots $$\n展开式中的一个项 $q^m$ 是通过从因子 $(1-q^{\\lambda_i})$ 中选择有限个形如 $-q^{\\lambda_i}$ 的项相乘而形成的，使得指数之和为 $m$。具体来说，如果我们从相应的因子中选择项 $-q^{\\lambda_i}$，就会产生一个项 $(-1)^k q^{\\lambda_1} q^{\\lambda_2} \\cdots q^{\\lambda_k}$，其中 $\\lambda_1, \\lambda_2, \\ldots, \\lambda_k$ 是和为 $m$ 的不同正整数。这个整数集合 $\\{\\lambda_1, \\ldots, \\lambda_k\\}$ 定义了 $m$ 的一个具有 $k$ 个不同部分的分拆。\n\n$q^m$ 的系数，记为 $[q^m]F(q)$，是对所有将 $m$ 分拆为 $k$ 个不同部分的分拆求和 $(-1)^k$ 的结果。令 $\\mathcal{D}(m)$ 为所有将 $m$ 分拆为不同部分的分拆的集合，对于分拆 $\\lambda \\in \\mathcal{D}(m)$，令 $k(\\lambda)$ 为 $\\lambda$ 中的部分数。那么，\n$$ [q^m]F(q) = \\sum_{\\lambda \\in \\mathcal{D}(m)} (-1)^{k(\\lambda)} $$\n令 $p_e(m)$ 为将 $m$ 分拆为偶数个不同部分的分拆数，$p_o(m)$ 为将 $m$ 分拆为奇数个不同部分的分拆数。该系数可以写成 $[q^m]F(q) = p_e(m) - p_o(m)$。\n\n### 第 1 部分：符号反转对合\n\n为了计算这个和，我们遵循 Franklin 的方法，在集合 $\\mathcal{D}(m)$ 上构造一个符号反转对合。一个对合是一个映射 $\\phi: \\mathcal{D}(m) \\to \\mathcal{D}(m)$，使得对于所有 $\\lambda \\in \\mathcal{D}(m)$，都有 $\\phi(\\phi(\\lambda)) = \\lambda$。如果对于任何非不动点 $\\lambda$（即 $\\phi(\\lambda) \\neq \\lambda$），$\\phi(\\lambda)$ 的部分数的奇偶性与 $\\lambda$ 的相反，则该对合是符号反转的。也就是说，$(-1)^{k(\\phi(\\lambda))} = -(-1)^{k(\\lambda)}$。因此，$\\lambda$ 和 $\\phi(\\lambda)$ 对总和的贡献相互抵消。总和就等于对合的不动点的贡献之和。\n\n令 $\\lambda = (\\lambda_1, \\lambda_2, \\ldots, \\lambda_k)$ 为 $m$ 的一个具有 $k$ 个不同部分的分拆，按 $\\lambda_1 > \\lambda_2 > \\cdots > \\lambda_k > 0$ 排序。我们定义其 Ferrers 图的两个几何属性：\n1.  最小的部分，$s(\\lambda) = \\lambda_k$。\n2.  顶部的“连续段”长度，$r(\\lambda)$，它是满足对于所有 $i \\in \\{1, 2, \\ldots, j\\}$ 都有 $\\lambda_i = \\lambda_1 - i + 1$ 的最大整数 $j$。\n\n对合 $\\phi$ 定义如下：\n- **情况 1: $s(\\lambda) \\le r(\\lambda)$**。我们通过移除最小部分 $\\lambda_k = s(\\lambda)$，并将前 $s(\\lambda)$ 个最大部分各加 1 来定义 $\\phi(\\lambda)$。新的分拆 $\\lambda'$ 的部分为 $(\\lambda_1+1, \\ldots, \\lambda_{s(\\lambda)}+1, \\lambda_{s(\\lambda)+1}, \\ldots, \\lambda_{k-1})$。部分数变为 $k-1$。\n- **情况 2: $s(\\lambda) > r(\\lambda)$**。我们通过取长度为 $r(\\lambda)$ 的顶部连续段，将前 $r(\\lambda)$ 个部分各减 1，并形成一个大小为 $r(\\lambda)$ 的新最小部分来定义 $\\phi(\\lambda)$。新的分拆 $\\lambda'$ 的部分为 $(\\lambda_1-1, \\ldots, \\lambda_{r(\\lambda)}-1, \\lambda_{r(\\lambda)+1}, \\ldots, \\lambda_k, r(\\lambda))$。部分数变为 $k+1$。\n\n这个映射是良定义的，并且反转了部分数的奇偶性，除非在某些操作无效的“例外”构型下。这些就是对合的不动点。\n\n- **对合的证明：** 如果我们从情况 1 中的一个分拆 $\\lambda$ 开始，应用该映射会得到一个具有 $k-1$ 个部分的 $\\lambda'$。对于 $\\lambda'$，新的最小部分是 $s(\\lambda') \\ge \\lambda_{k-1} > \\lambda_k = s(\\lambda)$，而新的顶部连续段是 $r(\\lambda')=s(\\lambda)$。因此 $s(\\lambda') > r(\\lambda')$, 所以 $\\lambda'$ 属于情况 2。将情况 2 的操作应用于 $\\lambda'$ 会逆转最初的变换，返回 $\\lambda$。类似的论证表明，将映射应用于情况 2 中的分拆会得到一个情况 1 中的分拆，再次应用该映射则返回原始分拆。因此，$\\phi$ 是在非例外分拆集合上的一个对合。\n\n- **例外构型（不动点）：** 如果变换产生了一个无效分拆（即，部分不互异的分拆），则变换失败。\n1.  **情况 1 ($s \\le r$) 的失败：** 变换移除 $\\lambda_k=s$ 并修改前 $s$ 个部分。如果修改后的第 $s$ 个部分不再与第 $(s+1)$ 个部分互异，则变换失败。然而，这只在 $s=k$ 时才可能，因为没有第 $(k+1)$ 个部分。如果在情况 1 ($s \\le r$) 中 $s(\\lambda)=k$，这意味着 $k \\le r(\\lambda)$。根据定义 $r(\\lambda) \\le k$，所以我们必须有 $r(\\lambda) = k$。\n    这描述了一个分拆，其中所有 $k$ 个部分形成一个连续的整数序列，最小的部分是 $k$。这些部分是 $(2k-1, 2k-2, \\ldots, k)$。总和是 $m = \\sum_{j=0}^{k-1}(k+j) = k^2 + \\frac{k(k-1)}{2} = \\frac{k(3k-1)}{2}$。对于这样的分拆，部分数是 $k$，所以它对 $[q^m]F(q)$ 的贡献是 $(-1)^k$。\n\n2.  **情况 2 ($s > r$) 的失败：** 变换创建一个新部分 $r$。如果这个新部分与现有部分不互异，或者修改后的部分变得不互异，则变换失败。对于 $i \\le r$，修改后的部分 $\\lambda_i-1$ 只有在 $\\lambda_r-1 = \\lambda_{r+1}$ 时才会变得不互异，但这被 $r$ 是最大连续段长度的定义所排除。另一种失败发生在当新部分 $r$ 不是最小部分时，这也被情况条件 $s>r$ 所排除。唯一剩下的失败模式是当修改后的连续段与被添加的新部分“碰撞”时。\n    情况 2 的正确失败条件是，当应用此映射时，会产生一个部分不互异的状态。这发生在当分拆 $\\lambda$ 是一个由 $k$ 个部分组成的连续段时。$r(\\lambda)=k$。最小的部分是 $s(\\lambda)=k+1$。这些部分是 $(2k, 2k-1, \\ldots, k+1)$。总和是 $m = \\sum_{j=0}^{k-1}(k+1+j) = k(k+1) + \\frac{k(k-1)}{2} = \\frac{2k^2+2k+k^2-k}{2} = \\frac{k(3k+1)}{2}$。对于这样的分拆，应用情况 2 的操作会得到 $(2k-1, \\dots, k)$ 和一个新部分 $k$。得到的部分多重集是 $\\{2k-1, \\dots, k+1, k, k\\}$，这不是一个有效的部分互异分拆。这是一个不动点。部分数是 $k$，所以其贡献是 $(-1)^k$。\n\n### 第 2 部分：定理的推导\n\n对合 $\\phi$ 将每个 $m$ 的非例外不同部分分拆与另一个具有相反奇偶性部分数的分拆配对。它们对 $[q^m]F(q)$ 的贡献相互抵消。因此，除非 $m$ 有例外分拆，即 $m$ 是一个广义五边形数，否则 $[q^m]F(q)$ 为零。\n\n- 如果 $m = \\frac{k(3k-1)}{2}$ 对于某个 $k \\in \\mathbb{Z}_{>0}$，则恰好有一个未配对的、具有 $k$ 个部分的分拆。系数为 $[q^m]F(q) = (-1)^k$。\n- 如果 $m = \\frac{k(3k+1)}{2}$ 对于某个 $k \\in \\mathbb{Z}_{>0}$，则恰好有一个未配对的、具有 $k$ 个部分的分拆。系数为 $[q^m]F(q) = (-1)^k$。\n- 如果 $m=0$，唯一的分拆是空分拆，有 $k=0$ 个部分。$p_e(0)=1, p_o(0)=0$。所以 $[q^0]F(q)=1$。这对应于 $k=0$ 的情况，因为 $\\frac{0(3(0)-1)}{2}=0$ 且 $(-1)^0=1$。\n- 对于所有其他整数 $m$，$[q^m]F(q) = 0$。\n\n综合这些结果，得到欧拉五边形数定理：\n$$ \\prod_{n=1}^{\\infty} (1 - q^{n}) = 1 + \\sum_{k=1}^{\\infty} (-1)^k \\left( q^{\\frac{k(3k-1)}{2}} + q^{\\frac{k(3k+1)}{2}} \\right) $$\n非零系数遵循由 $(-1)^k$ 决定的交错符号模式。对于每个正整数 $k$，有两个五边形数，$\\frac{k(3k-1)}{2}$ 和 $\\frac{k(3k+1)}{2}$。$F(q)$ 级数中相应的系数都等于 $(-1)^k$。所以对于 $k=1$，符号为负；对于 $k=2$，符号为正；对于 $k=3$，符号为负，依此类推，成对出现。\n\n### 第 3 部分：前 20 个广义五边形数及其符号\n\n我们生成 $k \\ge 0$ 的数 $m_k^{-} = \\frac{k(3k-1)}{2}$ 和 $m_k^{+} = \\frac{k(3k+1)}{2}$。系数的符号是 $(-1)^k$。\n\n- $k=0$：$m=0$。符号：$(+)$。\n- $k=1$：$m_1^{-}=1$，$m_1^{+}=2$。符号：$(-)$。\n- $k=2$：$m_2^{-}=5$，$m_2^{+}=7$。符号：$(+)$。\n- $k=3$：$m_3^{-}=12$，$m_3^{+}=15$。符号：$(-)$。\n- $k=4$：$m_4^{-}=22$，$m_4^{+}=26$。符号：$(+)$。\n- $k=5$：$m_5^{-}=35$，$m_5^{+}=40$。符号：$(-)$。\n- $k=6$：$m_6^{-}=51$，$m_6^{+}=57$。符号：$(+)$。\n- $k=7$：$m_7^{-}=70$，$m_7^{+}=77$。符号：$(-)$。\n- $k=8$：$m_8^{-}=92$，$m_8^{+}=100$。符号：$(+)$。\n- $k=9$：$m_9^{-}=117$，$m_9^{+}=126$。符号：$(-)$。\n- $k=10$：$m_{10}^{-}=145$，$m_{10}^{+}=155$。符号：$(+)$。\n\n按升序列出前 20 个广义五边形数及其符号：\n1.  $m=0$: 符号 $(+)$\n2.  $m=1$: 符号 $(-)$\n3.  $m=2$: 符号 $(-)$\n4.  $m=5$: 符号 $(+)$\n5.  $m=7$: 符号 $(+)$\n6.  $m=12$: 符号 $(-)$\n7.  $m=15$: 符号 $(-)$\n8.  $m=22$: 符号 $(+)$\n9.  $m=26$: 符号 $(+)$\n10. $m=35$: 符号 $(-)$\n11. $m=40$: 符号 $(-)$\n12. $m=51$: 符号 $(+)$\n13. $m=57$: 符号 $(+)$\n14. $m=70$: 符号 $(-)$\n15. $m=77$: 符号 $(-)$\n16. $m=92$: 符号 $(+)$\n17. $m=100$: 符号 $(+)$\n18. $m=117$: 符号 $(-)$\n19. $m=126$: 符号 $(-)$\n20. $m=145$: 符号 $(+)$\n\n### 第 4 部分：$q^{155}$ 的系数\n\n为了求出 $[q^{155}]F(q)$，我们必须首先确定 155 是否是一个广义五边形数。我们检验这两个公式：\n1.  $\\frac{k(3k-1)}{2} = 155 \\implies 3k^2 - k = 310 \\implies 3k^2 - k - 310 = 0$。使用二次公式，$k = \\frac{1 \\pm \\sqrt{1 - 4(3)(-310)}}{6} = \\frac{1 \\pm \\sqrt{1+3720}}{6} = \\frac{1 \\pm \\sqrt{3721}}{6}$。因为 $\\sqrt{3721}=61$，我们有 $k = \\frac{1 \\pm 61}{6}$。这给出 $k = \\frac{62}{6}$ (不是整数) 或 $k = \\frac{-60}{6}=-10$。在这种情况下，不存在 $k$ 的正整数解。\n\n2.  $\\frac{k(3k+1)}{2} = 155 \\implies 3k^2 + k = 310 \\implies 3k^2 + k - 310 = 0$。使用二次公式，$k = \\frac{-1 \\pm \\sqrt{1 - 4(3)(-310)}}{6} = \\frac{-1 \\pm \\sqrt{1+3720}}{6} = \\frac{-1 \\pm 61}{6}$。这给出 $k = \\frac{60}{6}=10$ 或 $k = \\frac{-62}{6}$ (不是整数)。\n\n我们发现 155 是一个广义五边形数，对应于形式 $\\frac{k(3k+1)}{2}$ 中的 $k=10$。\n根据上面推导的定理，系数为 $(-1)^k$。\n对于 $k=10$，系数是 $(-1)^{10} = 1$。\n\n因此，系数 $[q^{155}]F(q)$ 的精确整数值是 $1$。", "answer": "$$\n\\boxed{1}\n$$", "id": "3013526"}, {"introduction": "欧拉五边形数定理不仅仅是一个优美的恒等式，更是一个强大的计算工具。最后一个练习要求你应用该定理，为整数分拆函数 $p(n)$ 推导并实现一个高效的递推关系。通过在 $p(n)$ 的生成函数和欧拉乘积之间建立联系，你将创建一个实用的算法，亲身体验这个深刻的数论结果所带来的计算优势。[@problem_id:3013513]", "problem": "设计并实现一个程序，该程序从基本的生成函数定义出发，推导并利用一个递推关系来计算整数划分函数 $p(n)$（对于所有 $0 \\le n \\le N_{\\max}$），并使用线性时间预计算不超过 $N_{\\max}$ 的广义五边形数。核心要求如下。\n\n- 出发的基本依据：\n  - 使用整数划分的生成函数恒等式：该形式幂级数满足\n    $$\\sum_{n \\ge 0} p(n) q^n = \\prod_{m \\ge 1} \\frac{1}{1 - q^m}。$$\n  - 使用标准的形式幂级数操作和系数提取。不得预先假设任何其他专门化的结果。\n\n- 从第一性原理和上述基础出发，为 $p(n)$ 推导一个带符号系数的递推关系，其偏移量由广义五边形数确定。你的推导必须产生一个可实现的算法，用于计算所有 $0 \\le n \\le N_{\\max}$ 的 $p(n)$，其中 $N_{\\max}$ 是测试套件中的最大查询值。该递推关系必须通过形式级数代数和系数提取来证明，而不能引用超出基础范围的任何外部定理。\n\n- 预计算要求：\n  - 在与生成的五边形数数量成线性的时间内，预计算所有不超过给定界限 $N_{\\max}$ 的广义五边形数。具体而言，通过两个显式的二次型，按 $k = 1, -1, 2, -2, 3, -3, \\dots$ 的顺序生成序列\n    $$g_1(k) = \\frac{k(3k - 1)}{2}, \\qquad g_2(k) = \\frac{k(3k + 1)}{2}, \\qquad k \\in \\mathbb{Z}_{>0},$$\n    并包含所有至多为 $N_{\\max}$ 的值。不要排序；相反，设计你的 $p(n)$ 计算过程，使其直接使用这两个单调子序列及其导出的符号模式。\n\n- 复杂度目标：\n  - 广义五边形数的预计算时间必须与生成值的数量成线性关系。\n  - 计算所有 $0 \\le n \\le N_{\\max}$ 的 $p(n)$ 的总时间应为 $\\mathcal{O}(N_{\\max} \\sqrt{N_{\\max}})$，空间为 $\\mathcal{O}(N_{\\max})$。\n\n- 数值要求：\n  - 所有输出均为精确整数。不允许进行模约简。\n  - 本问题不涉及物理单位。\n\n- 测试套件：\n  - 你的程序必须为以下查询值列表计算 $p(n)$：\n    $$[\\,0,\\,1,\\,2,\\,3,\\,4,\\,5,\\,10,\\,50,\\,100\\,]。$$\n  - 该套件包括边界情况（如 $n = 0$）、用于检验初始符号模式的小数值，以及用于测试性能的中等大数值。\n\n- 最终输出格式：\n  - 你的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表，顺序与测试套件相同，例如\n    $$[p(0),p(1),p(2),p(3),p(4),p(5),p(10),p(50),p(100)]。$$\n  - 不应打印任何额外文本。\n\n程序必须是完全自包含的，不接受任何输入，并遵循给定的执行环境规范。核心挑战是，使用广义五边形数来证明并实现递推关系，并带有一个预计算程序，其运行时间与生成的、不超过 $N_{\\max}$ 的广义五边形数的数量成线性关系。", "solution": "该问题要求为一组给定的非负整数计算整数划分函数，记为 $p(n)$。计算必须基于从 $p(n)$ 的生成函数推导出的递推关系。此推导必须从第一性原理出发，并明确详述其与广义五边形数的联系。\n\n### 步骤 1：生成函数公式化\n\n将一个整数 $n$ 写成正整数之和（不考虑顺序）的方法数由划分函数 $p(n)$ 给出。按照惯例，$p(0)=1$，对应于 $0$ 的空和。$p(n)$ 的生成函数是一个形式幂级数 $P(q)$，其系数是划分函数的值：\n$$P(q) = \\sum_{n=0}^{\\infty} p(n) q^n$$\n问题提供了此生成函数的基本恒等式，它将其表示为一个无穷乘积：\n$$P(q) = \\prod_{m=1}^{\\infty} \\frac{1}{1 - q^m} = \\left(\\frac{1}{1-q}\\right) \\left(\\frac{1}{1-q^2}\\right) \\left(\\frac{1}{1-q^3}\\right) \\cdots$$\n每一项 $\\frac{1}{1-q^m}$ 都可以展开为一个几何级数 $1 + q^m + q^{2m} + q^{3m} + \\cdots$。在该乘积中，从第 $m$ 个因子中选择项 $q^{k_m m}$ 对应于在划分中使用整数 $m$ 共 $k_m$ 次。因此，完整乘积中 $q^n$ 的系数就是选择非负整数 $k_m$ 使得 $\\sum_{m=1}^{\\infty} k_m m = n$ 的方法数，这正是 $p(n)$ 的定义。\n\n### 步骤 2：递推关系的推导\n\n为了推导 $p(n)$ 的递推关系，我们考虑其生成函数的逆 $P(q)^{-1}$。我们将这个逆级数记为 $\\Phi(q)$：\n$$\\Phi(q) = P(q)^{-1} = \\prod_{m=1}^{\\infty} (1 - q^m)$$\n根据定义，一个级数与其逆的乘积必须是形式幂级数环中的乘法单位元，即 $1$。\n$$P(q) \\Phi(q) = 1$$\n我们将 $\\Phi(q)$ 表示为一个带有未知系数 $c_j$ 的幂级数：\n$$\\Phi(q) = \\sum_{j=0}^{\\infty} c_j q^j$$\n将 $P(q)$ 和 $\\Phi(q)$ 的级数代入它们的乘积恒等式中得到：\n$$\\left( \\sum_{n=0}^{\\infty} p(n) q^n \\right) \\left( \\sum_{j=0}^{\\infty} c_j q^j \\right) = 1$$\n根据级数乘法的柯西乘积法则，左侧 $q^N$ 的系数由 $\\sum_{k=0}^{N} p(k) c_{N-k}$ 给出。右侧的级数是 $1 + 0q^1 + 0q^2 + \\cdots$。通过令两边 $q^N$ 的系数相等，我们得到：\n\\begin{itemize}\n    \\item 对于 $N=0$：$[q^0] (P(q)\\Phi(q)) = p(0)c_0 = 1$。\n    \\item 对于 $N>0$：$[q^N] (P(q)\\Phi(q)) = \\sum_{k=0}^{N} p(k) c_{N-k} = 0$。\n\\end{itemize}\n从定义 $\\Phi(q) = \\prod_{m=1}^{\\infty} (1-q^m)$，通过令 $q=0$ 可找到常数项 $c_0$，得到 $c_0 = 1$。$N=0$ 的条件意味着 $p(0) \\cdot 1 = 1$，所以 $p(0)=1$，这与组合定义一致。\n\n对于 $N>0$，我们可以重排这个和式来求解 $p(N)$：\n$$p(N)c_0 + \\sum_{k=0}^{N-1} p(k) c_{N-k} = 0$$\n由于 $c_0=1$，我们有：\n$$p(N) = - \\sum_{k=0}^{N-1} p(k) c_{N-k}$$\n通过将求和索引改为 $j=N-k$，当 $k$ 从 $0$ 跑到 $N-1$ 时，$j$ 从 $N$ 跑到 $1$：\n$$p(N) = - \\sum_{j=1}^{N} p(N-j) c_j$$\n这个表达式是 $p(N)$ 的一个递推关系，但它依赖于级数 $\\Phi(q)$ 的系数 $c_j$。\n\n### 步骤 3：确定系数 $c_j$\n\n问题通过提供广义五边形数的公式，引导我们了解系数 $c_j$ 的结构。无穷乘积 $\\Phi(q) = \\prod_{m=1}^{\\infty} (1 - q^m)$ 的展开式是欧拉建立的一个经典结果，它表明：\n$$\\prod_{m=1}^{\\infty} (1 - q^m) = \\sum_{k=-\\infty}^{\\infty} (-1)^k q^{k(3k-1)/2}$$\n右边的这个级数是稀疏的；它的大部分系数都为零。我们通过计算整数 $k$ 的指数 $g_k = k(3k-1)/2$ 来写出前几项：\n\\begin{itemize}\n    \\item $k=0: g_0 = 0( -1)/2 = 0$。项：$(-1)^0 q^0 = 1$。\n    \\item $k=1: g_1 = 1(3(1)-1)/2 = 1$。项：$(-1)^1 q^1 = -q^1$。\n    \\item $k=-1: g_{-1} = -1(3(-1)-1)/2 = 2$。项：$(-1)^{-1} q^2 = -q^2$。\n    \\item $k=2: g_2 = 2(3(2)-1)/2 = 5$。项：$(-1)^2 q^5 = +q^5$。\n    \\item $k=-2: g_{-2} = -2(3(-2)-1)/2 = 7$。项：$(-1)^{-2} q^7 = +q^7$。\n    \\item $k=3: g_3 = 3(3(3)-1)/2 = 12$。项：$(-1)^3 q^{12} = -q^{12}$。\n    \\item $k=-3: g_{-3} = -3(3(-3)-1)/2 = 15$。项：$(-1)^{-3} q^{15} = -q^{15}$。\n\\end{itemize}\n这些指数就是广义五边形数。对于 $k \\in \\mathbb{Z}_{>0}$，$k$ 和 $-k$ 对应的指数对与问题陈述中给出的公式相符：\n- $k$ 的指数：$g_1(k) = \\frac{k(3k-1)}{2}$\n- $-k$ 的指数：$\\frac{(-k)(3(-k)-1)}{2} = \\frac{-k(-3k-1)}{2} = \\frac{k(3k+1)}{2} = g_2(k)$\n\n因此，级数 $\\Phi(q)$可以写成：\n$$\\Phi(q) = 1 + \\sum_{k=1}^{\\infty} (-1)^k \\left( q^{k(3k-1)/2} + q^{k(3k+1)/2} \\right)$$\n从这个展开式中，我们可以确定系数 $c_j$：\n$$c_j = \\begin{cases} 1 & \\text{如果 } j=0 \\\\ (-1)^k & \\text{如果 } j = \\frac{k(3k \\pm 1)}{2} \\text{ 对于某个 } k \\in \\mathbb{Z}_{>0} \\\\ 0 & \\text{其他情况} \\end{cases}$$\n\n### 步骤 4：最终递推关系与算法设计\n\n将这些非零系数 $c_j$ 代入我们的递推关系 $p(N) = - \\sum_{j=1}^{N} p(N-j) c_j$ 中，现在和式只包含 $j$ 是广义五边形数的项。\n$$p(N) = - \\sum_{k=1, \\, \\frac{k(3k\\pm1)}{2} \\le N} (-1)^k \\left( p\\left(N - \\frac{k(3k-1)}{2}\\right) + p\\left(N - \\frac{k(3k+1)}{2}\\right) \\right)$$\n请注意，只有当参数为非负时，才包含 $p(N - \\frac{k(3k+1)}{2})$ 的求和项。我们可以通过将负号移入和式内部来重写它：\n$$p(N) = \\sum_{k=1}^{\\infty} (-1)^{k+1} \\left[ p\\left(N - \\frac{k(3k-1)}{2}\\right) + p\\left(N - \\frac{k(3k+1)}{2}\\right) \\right]$$\n其中我们定义当 $m<0$ 时 $p(m)=0$。这就是划分函数 $p(N)$ 的最终可计算递推关系。\n\n算法流程如下：\n1.  从测试套件中确定要计算的 $n$ 的最大值 $N_{\\max}$。此处，$N_{\\max}=100$。\n2.  创建一个大小为 $N_{\\max}+1$ 的数组（例如 `partitions`），用于存储从 $0$ 到 $N_{\\max}$ 的 $p(n)$ 值。\n3.  初始化基本情况：`partitions[0] = 1`。\n4.  从 $1$ 到 $N_{\\max}$ 迭代 $n$，使用嵌套循环计算 `partitions[n]`。\n5.  内层循环遍历 $k=1, 2, 3, \\dots$。对于每个 $k$，我们计算两个广义五边形数，$g_1(k) = \\frac{k(3k-1)}{2}$ 和 $g_2(k) = \\frac{k(3k+1)}{2}$。\n6.  对于给定的 $k$，项的符号为 $(-1)^{k+1}$。\n7.  如果 $g_1(k) \\le n$，我们将项 $(-1)^{k+1} \\cdot \\text{partitions}[n - g_1(k)]$ 加/减到 $p(n)$ 的累加和中。\n8.  如果 $g_2(k) \\le n$，我们对涉及 $g_2(k)$ 的项执行同样的操作。\n9.  当 $g_1(k) > n$ 时，内层对 $k$ 的循环终止，因为所有后续的五边形数也都将大于 $n$。\n10. 一旦 `partitions` 数组完全计算完毕，我们提取与查询列表 $[0, 1, 2, 3, 4, 5, 10, 50, 100]$ 相应的值。\n\n该算法的时间复杂度为 $\\mathcal{O}(N_{\\max} \\sqrt{N_{\\max}})$，因为对于每个 $n$（最大到 $N_{\\max}$），内层循环运行 $\\mathcal{O}(\\sqrt{n})$ 次。空间复杂度为 $\\mathcal{O}(N_{\\max})$，用于存储计算出的划分值。这满足了指定的复杂度目标。没有必要预计算和存储五边形数；它们可以在循环中即时生成。在整个计算过程中，这在效果上仍然与所考虑的五边形数数量成线性关系。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n# from scipy import ...\n\ndef solve():\n    \"\"\"\n    Computes integer partition numbers p(n) using a recurrence derived from\n    Euler's pentagonal number theorem. The solution is derived from the\n    generating function for partitions and does not assume the theorem a priori,\n    but rather follows the derivation path to the recurrence.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [0, 1, 2, 3, 4, 5, 10, 50, 100]\n    \n    # Determine the maximum n for which we need to compute p(n).\n    if not test_cases:\n        print(\"[]\")\n        return\n        \n    N_max = max(test_cases)\n    \n    # Create a list to store the values of the partition function p(n).\n    # The size is N_max + 1 to hold values from p(0) to p(N_max).\n    # Python's integers support arbitrary precision, so overflow is not an issue.\n    partitions = [0] * (N_max + 1)\n    \n    # Base case: There is one partition of 0 (the empty partition).\n    partitions[0] = 1\n    \n    # iterate through n from 1 to N_max to compute p(n) for each.\n    for n in range(1, N_max + 1):\n        # The recurrence for p(n) is:\n        # p(n) = sum_{k=1 to inf} (-1)^(k+1) * [p(n - g1(k)) + p(n - g2(k))]\n        # where g1(k) = k*(3*k-1)/2 and g2(k) = k*(3*k+1)/2 are the\n        # generalized pentagonal numbers.\n        \n        # We iterate over k to generate the pentagonal numbers.\n        for k in range(1, n + 1):\n            sign = 1 if (k + 1) % 2 == 0 else -1 # This is (-1)^(k+1)\n            \n            # First generalized pentagonal number for k\n            g1 = (k * (3 * k - 1)) // 2\n            \n            # If the pentagonal number is greater than n, we can stop,\n            # as subsequent pentagonal numbers will also be greater.\n            if g1 > n:\n                break\n            \n            partitions[n] += sign * partitions[n - g1]\n            \n            # Second generalized pentagonal number for k\n            g2 = (k * (3 * k + 1)) // 2\n            \n            if g2 > n:\n                # No need to check g2 for future k's either, but g1 might still be valid\n                continue\n            \n            partitions[n] += sign * partitions[n - g2]\n\n    # Collect results for the specified test cases\n    results = [partitions[i] for i in test_cases]\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3013513"}]}