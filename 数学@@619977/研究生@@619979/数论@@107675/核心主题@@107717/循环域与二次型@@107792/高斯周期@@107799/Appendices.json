{"hands_on_practices": [{"introduction": "本练习是高斯周期理论的入门基石。通过处理最基本的情形——二次周期，您将亲手推导这些周期如何由单位根的和构成，并揭示它们与二次域之间的深刻联系 [@problem_id:3015221]。这个过程不仅能加深您对高斯和与勒让德符号等基本工具的理解，还能让您直观地看到抽象的伽罗瓦理论如何具体化为有理数域上的二次多项式。", "problem": "设 $p$ 是一个奇素数，并令 $\\zeta_{p} = \\exp\\!\\big(2\\pi \\mathrm{i}/p\\big)$，其中 $\\mathrm{i}$ 是虚数单位，满足 $\\mathrm{i}^{2} = -1$。将模 $p$ 的非零剩余类划分为二次剩余集 $Q$ 和二次非剩余集 $N$。定义二次高斯周期\n$$\\eta_{0} \\;=\\; \\sum_{a \\in Q} \\zeta_{p}^{a}, \\qquad \\eta_{1} \\;=\\; \\sum_{a \\in N} \\zeta_{p}^{a}.$$\n仅从数论中的基本定义和已验证的事实（特别是勒让德符号 $\\left(\\frac{a}{p}\\right)$ 的定义和二次高斯和）出发，从第一性原理推导出确定 $\\eta_{0}$ 和 $\\eta_{1}$ 的关系式，以及以 $\\eta_{0}$ 和 $\\eta_{1}$ 为其两个根的在 $\\mathbb{Q}$ 上的首一二次多项式。然后，计算 $\\eta_{0}$ 和 $\\eta_{1}$ 的显式闭式表达式，并确定对于 $p = 3, 5, 7, 11$ 中每一个值的相应多项式，并精确地给出你的最终表达式（不使用小数近似值）。多项式使用不定元 $T$。最终答案必须是单一的解析表达式。无需四舍五入。", "solution": "首先，对用户提供的问题进行严格的验证过程。\n\n### 步骤1：提取已知条件\n- $p$ 是一个奇素数。\n- $\\zeta_{p} = \\exp(2\\pi \\mathrm{i}/p)$，其中 $\\mathrm{i}$ 是虚数单位，满足 $\\mathrm{i}^{2} = -1$。\n- $Q$ 是模 $p$ 的非零二次剩余集。\n- $N$ 是模 $p$ 的非零二次非剩余集。\n- 二次高斯周期定义为 $\\eta_{0} = \\sum_{a \\in Q} \\zeta_{p}^{a}$ 和 $\\eta_{1} = \\sum_{a \\in N} \\zeta_{p}^{a}$。\n- 任务是推导确定 $\\eta_{0}$ 和 $\\eta_{1}$ 的关系式，找到以这些根为根的在 $\\mathbb{Q}$ 上的首一二次多项式，然后为 $p \\in \\{3, 5, 7, 11\\}$ 计算 $\\eta_{0}$、$\\eta_{1}$ 和该多项式的显式表达式。\n- 要使用的基本定义和事实包括勒让德符号 $\\left(\\frac{a}{p}\\right)$ 和二次高斯和。\n- 多项式的不定元是 $T$。\n- 最终表达式必须是精确的，不含小数近似值。\n\n### 步骤2：使用提取的已知条件进行验证\n根据既定标准对问题进行评估：\n- **科学性：** 该问题是代数数论中的一个标准练习，涉及高斯周期的性质，这是一个成熟的数学概念。所有定义和前提在事实上都是合理的，并植根于数论。\n- **适定性：** 该问题定义清晰，有唯一、稳定且有意义的解。对于每个素数 $p$，待计算的对象（$\\eta_0$、$\\eta_1$ 和多项式）都是唯一确定的。\n- **客观性：** 该问题以精确、无歧义的数学语言陈述，不含任何主观或基于观点的内容。\n- **缺陷分析：** 该问题不违反任何无效性标准。它具有科学性、可形式化、完备且适定。它需要实质性推理，并非微不足道。\n\n### 步骤3：结论与操作\n该问题是 **有效的**。将提供完整解答。\n\n### 一般关系式的推导\n\n以 $\\eta_{0}$ 和 $\\eta_{1}$ 为根的首一二次多项式由 $P(T) = (T - \\eta_{0})(T - \\eta_{1}) = T^2 - (\\eta_{0} + \\eta_{1})T + \\eta_{0}\\eta_{1}$ 给出。为确定此多项式，我们必须计算和 $\\eta_{0} + \\eta_{1}$ 与积 $\\eta_{0}\\eta_{1}$。\n\n**1. 根之和：$\\eta_{0} + \\eta_{1}$**\n模 $p$ 的非零剩余类集，记为 $(\\mathbb{Z}/p\\mathbb{Z})^\\times$，是二次剩余集 $Q$ 和二次非剩余集 $N$ 的不交并。因此，$\\{1, 2, \\dots, p-1\\} = Q \\cup N$。\n这些周期的和为\n$$ \\eta_{0} + \\eta_{1} = \\sum_{a \\in Q} \\zeta_{p}^{a} + \\sum_{a \\in N} \\zeta_{p}^{a} = \\sum_{j=1}^{p-1} \\zeta_{p}^{j}. $$\n复数 $\\zeta_{p}^{j}$（其中 $j=1, 2, \\dots, p-1$）是第 $p$ 个分圆多项式 $\\Phi_p(x) = \\frac{x^p - 1}{x-1} = x^{p-1} + x^{p-2} + \\dots + x + 1$ 的根。一个首一多项式的所有根之和是其第二高次项系数的负值。对于 $\\Phi_p(x)$，该系数为 $1$。因此，\n$$ \\eta_{0} + \\eta_{1} = \\sum_{j=1}^{p-1} \\zeta_{p}^{j} = -1. $$\n\n**2. 根之积：$\\eta_{0}\\eta_{1}$**\n为求其积，我们使用二次高斯和，其定义为\n$$ g = \\sum_{j=1}^{p-1} \\left(\\frac{j}{p}\\right) \\zeta_{p}^{j}, $$\n其中 $\\left(\\frac{j}{p}\\right)$ 是勒让德符号。根据定义，如果 $j \\in Q$，则 $\\left(\\frac{j}{p}\\right) = 1$；如果 $j \\in N$，则 $\\left(\\frac{j}{p}\\right) = -1$。\n我们可以用周期来表示高斯和：\n$$ g = \\sum_{j \\in Q} (1) \\cdot \\zeta_{p}^{j} + \\sum_{j \\in N} (-1) \\cdot \\zeta_{p}^{j} = \\eta_{0} - \\eta_{1}. $$\n现在我们得到一个关于 $\\eta_{0}$ 和 $\\eta_{1}$ 的二元一次方程组：\n$$ \\begin{cases} \\eta_{0} + \\eta_{1} = -1 \\\\ \\eta_{0} - \\eta_{1} = g \\end{cases} $$\n两式相加得 $2\\eta_{0} = -1 + g$，所以 $\\eta_{0} = \\frac{-1+g}{2}$。\n第一式减去第二式得 $2\\eta_{1} = -1 - g$，所以 $\\eta_{1} = \\frac{-1-g}{2}$。\n\n那么，乘积为\n$$ \\eta_{0}\\eta_{1} = \\left(\\frac{-1+g}{2}\\right)\\left(\\frac{-1-g}{2}\\right) = \\frac{(-1)^2 - g^2}{4} = \\frac{1-g^2}{4}. $$\n一个关于高斯和的基本结果表明 $g^2 = \\left(\\frac{-1}{p}\\right)p$。勒让德符号 $\\left(\\frac{-1}{p}\\right)$ 等于 $(-1)^{(p-1)/2}$。因此，\n$$ g^2 = (-1)^{(p-1)/2}p. $$\n将此代入积的表达式中，得到\n$$ \\eta_{0}\\eta_{1} = \\frac{1 - (-1)^{(p-1)/2}p}{4}. $$\n\n**3. 首一多项式**\n将和与积代入多项式表达式，我们得到二次高斯周期的极小多项式的一般形式：\n$$ P(T) = T^2 - (-1)T + \\frac{1 - (-1)^{(p-1)/2}p}{4} = T^2 + T + \\frac{1 - (-1)^{(p-1)/2}p}{4}. $$\n该多项式的系数为有理数，符合要求。\n\n### 对特定素数的显式计算\n\n为了找到 $\\eta_{0}$ 和 $\\eta_{1}$ 的显式闭式表达式，我们需要高斯和 $g$ 的值，而不仅仅是它的平方。一个同样由 Gauss 得出的深刻结果给出了 $g$ 的精确值：\n- 如果 $p \\equiv 1 \\pmod 4$，则 $g = \\sqrt{p}$。\n- 如果 $p \\equiv 3 \\pmod 4$，则 $g = \\mathrm{i}\\sqrt{p}$。\n\n这使我们能够写出 $\\eta_0$ 和 $\\eta_1$ 的显式公式：\n- 如果 $p \\equiv 1 \\pmod 4$：$\\eta_{0} = \\frac{-1 + \\sqrt{p}}{2}$ 且 $\\eta_{1} = \\frac{-1 - \\sqrt{p}}{2}$。\n- 如果 $p \\equiv 3 \\pmod 4$：$\\eta_{0} = \\frac{-1 + \\mathrm{i}\\sqrt{p}}{2}$ 且 $\\eta_{1} = \\frac{-1 - \\mathrm{i}\\sqrt{p}}{2}$。\n\n现在我们将这些公式应用于指定的素数。\n\n**情况 $p=3$：**\n由于 $3 \\equiv 3 \\pmod 4$：\n- $\\eta_{0} = \\frac{-1 + \\mathrm{i}\\sqrt{3}}{2}$\n- $\\eta_{1} = \\frac{-1 - \\mathrm{i}\\sqrt{3}}{2}$\n- 多项式的常数项为 $\\frac{1 - (-1)^{(3-1)/2}3}{4} = \\frac{1 - (-1)3}{4} = \\frac{1+3}{4} = 1$。\n- 多项式为 $P(T) = T^2 + T + 1$。\n\n**情况 $p=5$：**\n由于 $5 \\equiv 1 \\pmod 4$：\n- $\\eta_{0} = \\frac{-1 + \\sqrt{5}}{2}$\n- $\\eta_{1} = \\frac{-1 - \\sqrt{5}}{2}$\n- 常数项为 $\\frac{1 - (-1)^{(5-1)/2}5}{4} = \\frac{1 - (1)5}{4} = \\frac{-4}{4} = -1$。\n- 多项式为 $P(T) = T^2 + T - 1$。\n\n**情况 $p=7$：**\n由于 $7 \\equiv 3 \\pmod 4$：\n- $\\eta_{0} = \\frac{-1 + \\mathrm{i}\\sqrt{7}}{2}$\n- $\\eta_{1} = \\frac{-1 - \\mathrm{i}\\sqrt{7}}{2}$\n- 常数项为 $\\frac{1 - (-1)^{(7-1)/2}7}{4} = \\frac{1 - (-1)7}{4} = \\frac{1+7}{4} = 2$。\n- 多项式为 $P(T) = T^2 + T + 2$。\n\n**情况 $p=11$：**\n由于 $11 \\equiv 3 \\pmod 4$：\n- $\\eta_{0} = \\frac{-1 + \\mathrm{i}\\sqrt{11}}{2}$\n- $\\eta_{1} = \\frac{-1 - \\mathrm{i}\\sqrt{11}}{2}$\n- 常数项为 $\\frac{1 - (-1)^{(11-1)/2}11}{4} = \\frac{1 - (-1)11}{4} = \\frac{1+11}{4} = 3$。\n- 多项式为 $P(T) = T^2 + T + 3$。\n\n这些结果被收集并呈现在下面的最终答案中。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\frac{-1 + \\mathrm{i}\\sqrt{3}}{2} & \\frac{-1 - \\mathrm{i}\\sqrt{3}}{2} & T^2 + T + 1 \\\\\n\\frac{-1 + \\sqrt{5}}{2} & \\frac{-1 - \\sqrt{5}}{2} & T^2 + T - 1 \\\\\n\\frac{-1 + \\mathrm{i}\\sqrt{7}}{2} & \\frac{-1 - \\mathrm{i}\\sqrt{7}}{2} & T^2 + T + 2 \\\\\n\\frac{-1 + \\mathrm{i}\\sqrt{11}}{2} & \\frac{-1 - \\mathrm{i}\\sqrt{11}}{2} & T^2 + T + 3\n\\end{pmatrix}\n}\n$$", "id": "3015221"}, {"introduction": "在掌握了二次周期的基础上，这个练习将引导您处理一个更复杂的例子：$p=13$ 时的三次高斯周期。您将通过“第一性原理”，即直接对陪集中的元素求和进行计数，来系统地计算周期们的初等对称多项式，从而确定它们的极小多项式 [@problem_id:3015231]。这项实践旨在训练您处理更高阶周期的代数技巧，并具体展示周期多项式的系数是如何从底层的有限域结构中涌现出来的。", "problem": "设 $p$ 为一个素数，且设 $m$ 为一个整除 $p-1$ 的正整数。固定一个模 $p$ 的原根 $g$，并设 $H=\\langle g^{m}\\rangle\\subset(\\mathbb{Z}/p\\mathbb{Z})^{\\times}$ 为阶为 $f=(p-1)/m$ 的唯一子群。对于每个 $j\\in\\{0,1,\\dots,m-1\\}$，定义第 $j$ 个分圆类为 $C_{j}=g^{j}H$，并定义阶为 $m$ 的高斯周期为\n$$\n\\eta_{j}=\\sum_{a\\in C_{j}}\\zeta^{a},\n$$\n其中 $\\zeta=\\exp\\!\\big(2\\pi i/p\\big)$ 是一个固定的 $p$ 次本原单位根。相关的阶为 $m$ 的周期多项式为\n$$\nG_{m}(X)=\\prod_{j=0}^{m-1}\\big(X-\\eta_{j}\\big)\\in\\mathbb{Q}[X].\n$$\n\n严格地从以上定义以及分圆类和陪集和的基本性质出发，对 $p=13$ 和 $m=3$ 的情况执行以下步骤：\n- 选择一个模 13 的具体原根，确定 $H$ 以及分圆类 $C_{0},C_{1},C_{2}$。\n- 通过上述陪集和定义三次高斯周期 $\\eta_{0},\\eta_{1},\\eta_{2}$。\n- 仅使用基本原理（陪集划分、对 $\\mathbb{Z}/13\\mathbb{Z}$ 中和的配对计数，以及事实 $\\sum_{a=0}^{12}\\zeta^{a}=0$），推导周期的必要对称和，从而精确地确定 $G_{3}(X)\\in\\mathbb{Z}[X]$。\n- 将最终结果表示为关于 $X$ 的单个闭式多项式。\n\n不需要进行数值近似或四舍五入；请提供精确表达式。", "solution": "本题的目标是求出素数 $p=13$ 时的三次高斯周期多项式 $G_3(X)$。\n\n### 步骤 1：初始验证\n该问题定义明确，且基于数论中已建立的分圆域和高斯周期理论。\n- **已知条件**：$p=13$（素数），$m=3$（整除 $p-1=12$）。\n- **定义**：分圆类 $C_j$、高斯周期 $\\eta_j$ 以及周期多项式 $G_m(X)$ 均为标准定义。\n- **约束条件**：要求使用基本原理，即陪集划分和直接对和进行计数。\n- **结论**：问题有效。我们继续进行求解。\n\n### 步骤 2：确定分圆类\n周期多项式为 $G_3(X) = (X-\\eta_0)(X-\\eta_1)(X-\\eta_2) = X^3 - \\sigma_1 X^2 + \\sigma_2 X - \\sigma_3$，其中 $\\sigma_k$ 是周期 $\\eta_0, \\eta_1, \\eta_2$ 的初等对称多项式。我们的目标是计算这些系数。\n\n对于 $p=13$ 和 $m=3$，子群 $H$ 的阶为 $f = (p-1)/m = (13-1)/3 = 4$。我们需要一个模 13 的原根。我们测试 $g=2$：\n2 模 13 的幂次为 $2^1 \\equiv 2, 2^2 \\equiv 4, 2^3 \\equiv 8, 2^4 \\equiv 3, 2^5 \\equiv 6, 2^6 \\equiv 12 \\equiv -1$。由于 2 的阶不是 12 的真因子，因此 $g=2$ 是一个原根。\n\n子群 $H$ 由 $g^m = 2^3 = 8$ 生成：\n$$H = \\langle 8 \\rangle = \\{8^1, 8^2, 8^3, 8^4\\} \\pmod{13}$$\n$8^1 \\equiv 8$\n$8^2 \\equiv 64 \\equiv 12$\n$8^3 \\equiv 8 \\cdot 12 \\equiv 96 \\equiv 5$\n$8^4 \\equiv (8^2)^2 \\equiv 12^2 \\equiv 144 \\equiv 1$\n因此，主分圆类为 $C_0 = H = \\{1, 5, 8, 12\\}$。\n\n其他分圆类是 $H$ 的陪集：\n$C_1 = g^1 H = 2H = \\{2\\cdot 1, 2\\cdot 5, 2\\cdot 8, 2\\cdot 12\\} \\equiv \\{2, 10, 3, 11\\} \\pmod{13}$。\n$C_2 = g^2 H = 4H = \\{4\\cdot 1, 4\\cdot 5, 4\\cdot 8, 4\\cdot 12\\} \\equiv \\{4, 7, 6, 9\\} \\pmod{13}$。\n这三个类划分了乘法群 $(\\mathbb{Z}/13\\mathbb{Z})^\\times = \\{1, 2, ..., 12\\}$。\n\n### 步骤 3：定义高斯周期\n设 $\\zeta = \\exp(2\\pi i/13)$。高斯周期为：\n$\\eta_0 = \\sum_{a \\in C_0} \\zeta^a = \\zeta^1 + \\zeta^5 + \\zeta^8 + \\zeta^{12}$\n$\\eta_1 = \\sum_{a \\in C_1} \\zeta^a = \\zeta^2 + \\zeta^3 + \\zeta^{10} + \\zeta^{11}$\n$\\eta_2 = \\sum_{a \\in C_2} \\zeta^a = \\zeta^4 + \\zeta^6 + \\zeta^7 + \\zeta^9$\n\n### 步骤 4：计算对称和\n\n**系数 $\\sigma_1 = \\eta_0 + \\eta_1 + \\eta_2$**\n周期的和是 $\\zeta^a$ 在所有元素 $a \\in C_0 \\cup C_1 \\cup C_2 = (\\mathbb{Z}/13\\mathbb{Z})^\\times$ 上的和。\n$$\\sigma_1 = \\eta_0 + \\eta_1 + \\eta_2 = \\sum_{a=1}^{12} \\zeta^a$$\n$\\zeta$ 在 $\\mathbb{Q}$ 上的最小多项式是分圆多项式 $\\Phi_{13}(x) = \\sum_{k=0}^{12} x^k$。因此，$\\sum_{k=0}^{12} \\zeta^k = 0$。\n这意味着 $1 + \\sum_{k=1}^{12} \\zeta^k = 0$，所以 $\\sum_{k=1}^{12} \\zeta^k = -1$。\n因此，$\\sigma_1 = -1$。\n\n**系数 $\\sigma_2 = \\eta_0\\eta_1 + \\eta_1\\eta_2 + \\eta_2\\eta_0$**\n我们首先计算平方和 $\\eta_0^2 + \\eta_1^2 + \\eta_2^2$。\n我们来计算 $\\eta_0^2$：\n$$\\eta_0^2 = \\left(\\sum_{a \\in C_0} \\zeta^a\\right)^2 = \\sum_{a,b \\in C_0} \\zeta^{a+b}$$\n我们分析 $a, b \\in C_0 = \\{1, 5, 8, 12\\}$ 的和 $a+b \\pmod{13}$。共有 $f^2 = 4^2 = 16$ 个这样的和。\n我们可以检验 $-1 \\equiv 12 \\in C_0$。因此，对任意 $a \\in C_0$，我们有 $-a \\in C_0$。\n当 $b=-a$ 时，和 $a+b=0$ 出现。对于 $C_0$ 中的 $f=4$ 个元素中的每一个 $a$，$-a$ 也在 $C_0$ 中。由于没有元素是其自身的加法逆元，这给出了 4 对和为 0 的 $(a, -a)$。它们对总和的贡献为 $4\\zeta^0=4$。\n剩下的 $16-4=12$ 个和是非零的。我们构建 $C_0+C_0$ 的加法表：\n$$\n\\begin{array}{c|cccc}\n+ & 1 & 5 & 8 & 12 \\\\\n\\hline\n1 & 2 & 6 & 9 & 0 \\\\\n5 & 6 & 10 & 0 & 4 \\\\\n8 & 9 & 0 & 3 & 7 \\\\\n12 & 0 & 4 & 7 & 11\n\\end{array}\n$$\n非零的和为 $\\{2, 6, 9, 6, 10, 4, 9, 3, 7, 4, 7, 11\\}$。\n- 按类分组：\n  - $C_1=\\{2,3,10,11\\}$ 中的元素：$2, 10, 3, 11$ 各出现一次。它们的和是 $\\eta_1$。\n  - $C_2=\\{4,6,7,9\\}$ 中的元素：$6, 9, 4, 7$ 各出现两次。它们的和是 $2\\eta_2$。\n  - $C_0$ 中没有元素。\n所以，$\\eta_0^2 = 4\\zeta^0 + \\eta_1 + 2\\eta_2 = 4 + \\eta_1 + 2\\eta_2$。\n\n$\\mathbb{Q}(\\eta_0, \\eta_1, \\eta_2)/\\mathbb{Q}$ 的 Galois 群是阶为 3 的循环群，由自同构 $\\sigma: \\zeta \\mapsto \\zeta^g = \\zeta^2$ 生成。这个自同构循环地置换周期：$\\sigma(\\eta_0)=\\eta_1$, $\\sigma(\\eta_1)=\\eta_2$, $\\sigma(\\eta_2)=\\eta_0$。将 $\\sigma$ 应用于 $\\eta_0^2$ 的表达式：\n$\\eta_1^2 = \\sigma(\\eta_0^2) = \\sigma(4+\\eta_1+2\\eta_2) = 4+\\eta_2+2\\eta_0$。\n$\\eta_2^2 = \\sigma(\\eta_1^2) = \\sigma(4+\\eta_2+2\\eta_0) = 4+\\eta_0+2\\eta_1$。\n\n将这三个方程相加：\n$\\eta_0^2 + \\eta_1^2 + \\eta_2^2 = (4+4+4) + (\\eta_1+2\\eta_0+\\eta_0) + (2\\eta_2+\\eta_2+2\\eta_1) = 12 + 3(\\eta_0+\\eta_1+\\eta_2)$。\n使用 $\\eta_0+\\eta_1+\\eta_2 = -1$，我们得到 $\\eta_0^2 + \\eta_1^2 + \\eta_2^2 = 12 + 3(-1) = 9$。\n\n现在我们使用恒等式 $(\\eta_0+\\eta_1+\\eta_2)^2 = \\eta_0^2+\\eta_1^2+\\eta_2^2 + 2(\\eta_0\\eta_1+\\eta_1\\eta_2+\\eta_2\\eta_0)$ 来求 $\\sigma_2$。\n$(-1)^2 = 9 + 2\\sigma_2 \\implies 1 = 9 + 2\\sigma_2 \\implies 2\\sigma_2 = -8 \\implies \\sigma_2 = -4$。\n\n**系数 $\\sigma_3 = \\eta_0\\eta_1\\eta_2$**\n我们首先通过对 $a \\in C_0, b \\in C_1$ 的配对 $(a,b)$ 进行计数来确定乘积 $\\eta_0\\eta_1$。\n$$\\eta_0\\eta_1 = \\sum_{a \\in C_0, b \\in C_1} \\zeta^{a+b}$$\n$C_0 = \\{1,5,8,12\\}$，$C_1 = \\{2,3,10,11\\}$。$16$ 个和 $a+b$ 是 $\\{3,4,11,12, 7,8,2,3, 10,11,5,6, 1,2,9,10\\}$。\n将这些和按类分组：\n- $C_0=\\{1,5,8,12\\}$ 中的和：$1, 5, 8, 12$ 各出现一次。总贡献为 $\\eta_0$。\n- $C_1=\\{2,3,10,11\\}$ 中的和：$2, 3, 10, 11$ 各出现两次。总贡献为 $2\\eta_1$。\n- $C_2=\\{4,6,7,9\\}$ 中的和：$4, 6, 7, 9$ 各出现一次。总贡献为 $\\eta_2$。\n因此, $\\eta_0\\eta_1 = \\eta_0 + 2\\eta_1 + \\eta_2$。\n\n使用循环自同构 $\\sigma$：\n$\\eta_1\\eta_2 = \\sigma(\\eta_0\\eta_1) = \\sigma(\\eta_0+2\\eta_1+\\eta_2) = \\eta_1+2\\eta_2+\\eta_0$。\n现在我们计算三重积：\n$\\sigma_3 = \\eta_0\\eta_1\\eta_2 = \\eta_0(\\eta_1\\eta_2) = \\eta_0(\\eta_1+2\\eta_2+\\eta_0) = \\eta_0\\eta_1 + 2\\eta_0\\eta_2 + \\eta_0^2$。\n我们需要 $\\eta_0\\eta_2 = \\eta_2\\eta_0 = \\sigma(\\eta_1\\eta_2) = \\eta_2 + 2\\eta_0 + \\eta_1$。\n代入乘积展开式：\n$\\sigma_3 = (\\eta_0 + 2\\eta_1 + \\eta_2) + 2(\\eta_2 + 2\\eta_0 + \\eta_1) + (4 + \\eta_1 + 2\\eta_2)$。\n合并同类项：\n$\\sigma_3 = (\\eta_0+4\\eta_0) + (2\\eta_1+2\\eta_1+\\eta_1) + (\\eta_2+2\\eta_2+2\\eta_2) + 4$\n$\\sigma_3 = 5\\eta_0 + 5\\eta_1 + 5\\eta_2 + 4 = 5(\\eta_0+\\eta_1+\\eta_2) + 4$。\n使用 $\\eta_0+\\eta_1+\\eta_2 = -1$，我们发现：\n$\\sigma_3 = 5(-1) + 4 = -1$。\n\n### 步骤 5：组合多项式\n系数为 $\\sigma_1 = -1$、$\\sigma_2 = -4$ 和 $\\sigma_3 = -1$。\n周期多项式为：\n$$G_3(X) = X^3 - \\sigma_1 X^2 + \\sigma_2 X - \\sigma_3$$\n$$G_3(X) = X^3 - (-1)X^2 + (-4)X - (-1)$$\n$$G_3(X) = X^3 + X^2 - 4X + 1$$", "answer": "$$\\boxed{X^{3} + X^{2} - 4X + 1}$$", "id": "3015231"}, {"introduction": "理论的优美需要通过实践来验证和感受。本练习要求您编写一个程序，将高斯周期的抽象定义转化为具体的计算步骤，并数值验证其两个基本恒等式 [@problem_id:3015222]。通过这种计算探索，您不仅能加深对周期理论核心属性的理解，还能获得在数论研究中运用计算机进行实验猜想和验证的宝贵经验。", "problem": "设 $p$ 为一个素数，$\\mathbb{F}_p^\\times$ 表示模 $p$ 的非零剩余类的乘法群。固定一个正整数 $m$ 使得 $m \\mid (p-1)$，并固定一个模 $p$ 的原根 $g$，这样 $\\mathbb{F}_p^\\times$ 中的每个元素都可以表示为 $g^e \\pmod p$ 的形式，其中指数 $e \\in \\{0,1,\\dots,p-2\\}$ 是唯一的。考虑指数为 $m$ 的子群 $H = \\langle g^m \\rangle \\subset \\mathbb{F}_p^\\times$，其阶为 $(p-1)/m$，以及它的 $m$ 个陪集 $C_j = g^j H$，其中 $j \\in \\{0,1,\\dots,m-1\\}$。设 $\\zeta_p = \\exp(2\\pi i/p)$ 为一个固定的复数域上的 $p$ 次本原单位根。定义指数为 $m$ 的高斯周期（也称分圆周期）为\n$$\n\\eta_j \\;=\\; \\sum_{x \\in C_j} \\zeta_p^{\\,x}\n\\quad\\text{for}\\quad j=0,1,\\dots,m-1.\n$$\n仅使用上述基本定义以及模 $p$ 原根存在和复单位根的几何级数恒等式成立这两个标准事实，编写一个完整的、可运行的程序。对于一个由数对 $(p,m)$ 组成的有限测试集，该程序通过定义数值计算高斯周期 $\\eta_j$，并验证以下论断：\n- 和恒等式 $\\sum_{j=0}^{m-1} \\eta_j = -1$。\n- 积 $\\prod_{j=0}^{m-1} \\eta_j$ 是一个整数（即，它属于 $\\mathbb{Z}$）。\n\n您的程序应：\n- 对于每个 $(p,m)$，从一个模 $p$ 的原根 $g$ 出发，构造陪集 $C_j = g^j \\langle g^m \\rangle \\subset \\mathbb{F}_p^\\times$。\n- 使用 $\\zeta_p = \\exp(2\\pi i/p)$ 和复数算术，将每个 $\\eta_j$ 计算为有限和 $\\sum_{x \\in C_j} \\zeta_p^{\\,x}$。\n- 在一个固定的容差 $\\varepsilon = 10^{-8}$ 内数值检验和恒等式以及积的整性。如果 $\\left|\\left(\\sum_{j=0}^{m-1} \\eta_j\\right) - (-1)\\right| \\le \\varepsilon$，则认为和恒等式成立；如果积的虚部的绝对值最多为 $\\varepsilon$，且其实部与最近的整数之差最多为 $\\varepsilon$，则认为积的整性成立。\n\n测试集：\n- $(p,m) = (5,1)$，\n- $(p,m) = (5,4)$，\n- $(p,m) = (13,3)$，\n- $(p,m) = (13,4)$，\n- $(p,m) = (29,7)$，\n- $(p,m) = (29,14)$，\n- $(p,m) = (97,6)$，\n- $(p,m) = (97,16)$。\n\n对于每个测试用例 $(p,m)$，生成一个布尔值，以指示该用例的两个验证是否都成功。\n\n最终输出格式：\n- 您的程序应产生单行输出，其中包含用方括号括起来的逗号分隔的结果列表，顺序与测试集相同，例如 $[\\text{result}_1,\\text{result}_2,\\dots,\\text{result}_8]$，其中每个 $\\text{result}_k$ 是 $\\text{True}$ 或 $\\text{False}$。", "solution": "问题陈述已经过分析，并被认为是有效的。它在数学上是合理的、提法明确且是完整的。该问题涉及对高斯周期基本性质的数值验证，这是代数数论中的一个标准课题。所给出的定义和性质都是标准的。提供的测试用例与问题的约束条件一致。因此，我们可以着手提供一个解决方案。\n\n计算算法如下：\n\n**第 1 步：寻找原根**\n对于每个素数 $p$，我们需要一个原根 $g$。一个整数 $g \\in \\{2, \\dots, p-1\\}$ 是模 $p$ 的原根，当且仅当其阶为 $p-1$。这等价于检验对于 $p-1$ 的每个不同素因子 $q$，都有 $g^{(p-1)/q} \\not\\equiv 1 \\pmod{p}$。为了实现这一点，我们需要一个辅助函数来找到 $p-1$ 的素数分解。然后我们可以遍历可能的候选者 $g=2, 3, \\dots$ 并根据此条件进行测试。\n\n**第 2 步：构造子群及其陪集**\n一旦为素数 $p$ 找到了一个原根 $g$，我们就可以构造子群 $H = \\langle g^m \\rangle$。$H$ 的阶为 $d = (p-1)/m$。$H$ 的元素是 $\\{ (g^m)^k \\pmod p \\mid k=0, \\dots, d-1 \\}$。\n然后通过 $C_j = g^j H = \\{ (g^j \\cdot h) \\pmod p \\mid h \\in H \\}$（其中 $j=0, \\dots, m-1$）构造出 $m$ 个陪集。\n\n**第 3 步：计算高斯周期**\n对于每个陪集 $C_j$，通过对所有 $x \\in C_j$ 求和 $\\zeta_p^x$ 来计算相应的高斯周期 $\\eta_j$。使用浮点复数，我们计算 $\\zeta_p = \\exp(2\\pi i/p)$ 并执行求和。这给出了每个 $\\eta_j$ 的一个数值近似。\n\n**第 4 步：验证恒等式**\n利用计算出的周期数组 $\\{\\eta_0, \\eta_1, \\dots, \\eta_{m-1}\\}$，我们计算它们的和 $S = \\sum \\eta_j$ 和积 $P = \\prod \\eta_j$。\n- 对于和恒等式，我们检查绝对差 $|S - (-1)|$ 是否在一个小容差 $\\varepsilon=10^{-8}$ 之内。\n- 对于积的整性，我们检查 $P$ 的虚部是否接近于零，即 $|\\text{Im}(P)| \\le \\varepsilon$，并且 $P$ 的实部是否接近一个整数，即 $|\\text{Re}(P) - \\text{round}(\\text{Re}(P))| \\le \\varepsilon$。\n如果两个验证都成功，则测试用例 $(p,m)$ 通过。\n\n整个过程被封装在一个程序中，该程序遍历提供的测试集，并为每个用例报告一个布尔值 `True` 或 `False`。实现将使用 `numpy` 库来高效处理复数运算。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes Gaussian periods for a set of (p, m) pairs and verifies\n    two fundamental identities.\n    \"\"\"\n    \n    test_cases = [\n        (5, 1),\n        (5, 4),\n        (13, 3),\n        (13, 4),\n        (29, 7),\n        (29, 14),\n        (97, 6),\n        (97, 16),\n    ]\n\n    results = []\n    \n    for p, m in test_cases:\n        # Step 1: Find a primitive root modulo p\n        \n        def get_prime_factors(n):\n            \"\"\"Returns the set of distinct prime factors of n.\"\"\"\n            factors = set()\n            d = 2\n            temp_n = n\n            while d * d <= temp_n:\n                if temp_n % d == 0:\n                    factors.add(d)\n                    while temp_n % d == 0:\n                        temp_n //= d\n                d += 1\n            if temp_n > 1:\n                factors.add(temp_n)\n            return factors\n\n        def find_primitive_root(p):\n            \"\"\"Finds the smallest primitive root modulo p.\"\"\"\n            if p == 2:\n                return 1\n            \n            p_minus_1 = p - 1\n            prime_factors_p_minus_1 = get_prime_factors(p_minus_1)\n            \n            for g in range(2, p):\n                is_primitive = True\n                for q in prime_factors_p_minus_1:\n                    if pow(g, p_minus_1 // q, p) == 1:\n                        is_primitive = False\n                        break\n                if is_primitive:\n                    return g\n            return -1 # Should not happen for a prime p\n\n        g = find_primitive_root(p)\n        \n        # Step 2: Construct the subgroup H and its cosets C_j\n        p_minus_1 = p - 1\n        h_size = p_minus_1 // m\n        \n        # Generate H = <g^m>\n        g_m = pow(g, m, p)\n        H = set()\n        for k in range(h_size):\n            H.add(pow(g_m, k, p))\n\n        # Generate cosets C_j = g^j * H\n        cosets = []\n        for j in range(m):\n            g_j = pow(g, j, p)\n            C_j = set()\n            for h_elem in H:\n                C_j.add((g_j * h_elem) % p)\n            cosets.append(sorted(list(C_j))) # Sorted for consistent ordering\n\n        # Step 3: Compute the Gaussian periods eta_j\n        zeta_p = np.exp(2j * np.pi / p)\n        etas = []\n        for C_j in cosets:\n            eta_j = np.sum([zeta_p**x for x in C_j])\n            etas.append(eta_j)\n\n        # Step 4: Verify the identities\n        tol = 1e-8\n        \n        # Verify sum identity: sum(eta_j) = -1\n        eta_sum = np.sum(etas)\n        sum_ok = np.abs(eta_sum - (-1.0)) <= tol\n        \n        # Verify product integrality: prod(eta_j) is an integer\n        eta_prod = np.prod(etas)\n        prod_real = np.real(eta_prod)\n        prod_imag = np.imag(eta_prod)\n        \n        # Check if imaginary part is near zero and real part is near an integer\n        prod_ok = (np.abs(prod_imag) <= tol) and \\\n                  (np.abs(prod_real - np.round(prod_real)) <= tol)\n        \n        results.append(sum_ok and prod_ok)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3015222"}]}