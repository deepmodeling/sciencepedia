{"hands_on_practices": [{"introduction": "要理解如何研究类群，我们首先需要掌握将其分解为更简单部分的基本工具。本练习将聚焦于伽罗瓦群的群代数中的一组被称为“正交幂等元”的元素。通过证明它们的核心性质，你将揭示它们作为投影算子的角色，这正是将类群分解为特征空间的关键，也是现代库默理论（如 Herbrand-Ribet 定理）的基石。[@problem_id:3022712]", "problem": "设 $p$ 是一个奇素数，设 $K=\\mathbb{Q}(\\zeta_{p})$ 是第 $p$ 个分圆域，其伽罗瓦群为 $G=\\operatorname{Gal}(K/\\mathbb{Q})\\cong (\\mathbb{Z}/p\\mathbb{Z})^{\\times}$。对每个 $a\\in (\\mathbb{Z}/p\\mathbb{Z})^{\\times}$，设 $\\sigma_{a}\\in G$ 是满足 $\\sigma_{a}(\\zeta_{p})=\\zeta_{p}^{a}$ 的唯一自同构。设 $\\omega:(\\mathbb{Z}/p\\mathbb{Z})^{\\times}\\to \\mu_{p-1}\\subset \\mathbb{Q}(\\mu_{p-1})^{\\times}$ 是 Teichmüller 特征，并考虑群代数 $\\mathbb{Q}(\\mu_{p-1})[G]$。对 $k\\in\\{0,1,\\dots,p-2\\}$ 定义\n$$\ne_{k} \\;=\\; \\frac{1}{p-1}\\sum_{a\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(a)^{-k}\\,\\sigma_{a}\\;\\in\\;\\mathbb{Q}(\\mu_{p-1})[G].\n$$\n从分圆伽罗瓦群作用、Teichmüller 特征和群代数的定义出发，完成以下步骤：\n\n1. 对于任意的 $b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}$，计算在 $\\mathbb{Q}(\\mu_{p-1})[G]$ 中的乘积 $e_{k}\\sigma_{b}$。\n\n2. 仅使用第1部分的结果作为定义之外唯一的代数输入，验证当 $k\\neq \\ell$ 时 $e_{k}e_{\\ell}=0$ 且 $e_{k}^{2}=e_{k}$。\n\n3. 简要解释为什么族 $\\{e_{k}\\}_{k=0}^{p-2}$ 为 $G$ 在任意 $\\mathbb{Q}(\\mu_{p-1})[G]$-模上的作用提供了同时特征空间分解，并指出这种分解如何构成了 Kummer 正则素数判别法中出现的将 $K$ 的理想类群分裂为 $\\omega^{k}$-特征空间的基础。\n\n将您的最终答案以有序三元组 $\\bigl(e_{k}\\sigma_{b},\\,e_{k}e_{\\ell}\\text{ (当 }k\\neq \\ell\\text{ 时)},\\,e_{k}^{2}\\bigr)$ 的形式，写成使用 $\\mathrm{pmatrix}$ 格式的单行。不需要数值近似，也不涉及单位。您的最终答案必须是指定格式的单个符号表达式。", "solution": "问题陈述已通过验证，被认为是有效的。这是一个代数数论中的标准、适定问题。所有定义都是标准的，任务清晰且逻辑结构合理。\n\n该问题要求进行三次计算和一次解释，内容涉及分圆域伽罗瓦群的群代数的正交幂等元。\n\n设 $p$ 是一个奇素数，$G = \\operatorname{Gal}(\\mathbb{Q}(\\zeta_{p})/\\mathbb{Q}) \\cong (\\mathbb{Z}/p\\mathbb{Z})^{\\times}$。$G$ 的元素记为 $\\sigma_a$，其中 $a \\in (\\mathbb{Z}/p\\mathbb{Z})^{\\times}$，满足 $\\sigma_a(\\zeta_p) = \\zeta_p^a$。映射 $a \\mapsto \\sigma_a$ 是一个群同构，因此 $\\sigma_a \\sigma_b = \\sigma_{ab}$。Teichmüller 特征 $\\omega: (\\mathbb{Z}/p\\mathbb{Z})^{\\times} \\to \\mathbb{Q}(\\mu_{p-1})^{\\times}$ 是一个群同态。幂等元定义为\n$$e_{k} = \\frac{1}{p-1}\\sum_{a\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(a)^{-k}\\,\\sigma_{a}$$\n对于 $k \\in \\{0, 1, \\dots, p-2\\}$。\n\n1. 计算 $e_{k}\\sigma_{b}$\n\n我们在群代数 $\\mathbb{Q}(\\mu_{p-1})[G]$ 中计算元素 $e_k$ 和群元素 $\\sigma_b$ 的乘积。根据 $e_k$ 的定义并利用代数的分配律：\n$$e_{k}\\sigma_{b} = \\left( \\frac{1}{p-1}\\sum_{a\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(a)^{-k}\\,\\sigma_{a} \\right) \\sigma_{b} = \\frac{1}{p-1}\\sum_{a\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(a)^{-k}\\,(\\sigma_{a}\\sigma_{b})$$\n使用群律 $\\sigma_{a}\\sigma_{b} = \\sigma_{ab}$，我们有：\n$$e_{k}\\sigma_{b} = \\frac{1}{p-1}\\sum_{a\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(a)^{-k}\\,\\sigma_{ab}$$\n我们在求和中进行换元。令 $c = ab$。因为 $b$ 是群 $(\\mathbb{Z}/p\\mathbb{Z})^{\\times}$ 中的一个固定元素，当 $a$ 遍历群中所有元素时，$c$ 也是如此。由 $c = ab$ 得 $a = cb^{-1}$。将此代入求和式：\n$$e_{k}\\sigma_{b} = \\frac{1}{p-1}\\sum_{c\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(cb^{-1})^{-k}\\,\\sigma_{c}$$\n由于 $\\omega$ 是一个群同态，$\\omega(cb^{-1}) = \\omega(c)\\omega(b^{-1})$。此外，对于任何特征，$\\omega(b^{-1}) = \\omega(b)^{-1}$。因此，$\\omega(cb^{-1})^{-k} = (\\omega(c)\\omega(b)^{-1})^{-k} = \\omega(c)^{-k}(\\omega(b)^{-1})^{-k} = \\omega(c)^{-k}\\omega(b)^{k}$。项 $\\omega(b)^k$ 是 $\\mathbb{Q}(\\mu_{p-1})$ 中的标量，不依赖于求和变量 $c$，因此可以从求和中提取出来：\n$$e_{k}\\sigma_{b} = \\frac{1}{p-1}\\sum_{c\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(c)^{-k}\\omega(b)^{k}\\,\\sigma_{c} = \\omega(b)^{k} \\left( \\frac{1}{p-1}\\sum_{c\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(c)^{-k}\\,\\sigma_{c} \\right)$$\n括号中的表达式是 $e_k$ 的定义。因此，我们得到结果：\n$$e_{k}\\sigma_{b} = \\omega(b)^{k}e_{k}$$\n\n2. 幂等性和正交性的验证\n\n我们仅使用第1部分的结果作为唯一的代数输入。我们计算乘积 $e_k e_\\ell$。\n$$e_{k}e_{\\ell} = e_{k} \\left( \\frac{1}{p-1}\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{-\\ell}\\,\\sigma_{b} \\right)$$\n利用代数作用的线性性质，我们可以将 $e_k$ 移到求和号内部：\n$$e_{k}e_{\\ell} = \\frac{1}{p-1}\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{-\\ell}\\,(e_{k}\\sigma_{b})$$\n现在，我们代入第1部分的结果，$e_k\\sigma_b = \\omega(b)^k e_k$：\n$$e_{k}e_{\\ell} = \\frac{1}{p-1}\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{-\\ell}\\,(\\omega(b)^{k}e_{k})$$\n标量 $\\omega(b)^{-\\ell}$ 和 $\\omega(b)^k$ 与代数元素 $e_k$ 可交换。我们可以合并 $\\omega(b)$ 的幂并将 $e_k$ 从求和中提取出来：\n$$e_{k}e_{\\ell} = \\left( \\frac{1}{p-1}\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{k-\\ell} \\right) e_{k}$$\n该表达式的求值取决于特征值的和。令 $\\chi = \\omega^{k-\\ell}$。求和为 $\\sum_{b \\in (\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\chi(b)$。有限阿贝尔群的特征正交关系表明，如果 $\\chi$ 是平凡特征，则该和等于群的阶；否则为 $0$。\n\n对于 $j \\in \\{0, 1, \\dots, p-2\\}$ 的特征 $\\omega^j$ 都是不同的。平凡特征是 $\\omega^0$。因此，$\\chi = \\omega^{k-\\ell}$ 是平凡的当且仅当 $k-\\ell$ 是 $p-1$ 的倍数。给定 $k, \\ell \\in \\{0, 1, \\dots, p-2\\}$，差值满足 $-(p-2) \\le k-\\ell \\le p-2$。在此范围内的 $p-1$ 的唯一倍数是 $0$。因此，$\\omega^{k-\\ell}$ 是平凡的当且仅当 $k=\\ell$。\n\n情况 $k \\neq \\ell$：在这种情况下，$k-\\ell \\neq 0$，所以 $\\omega^{k-\\ell}$ 是一个非平凡特征。正交关系给出：\n$$\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{k-\\ell} = 0$$\n因此，当 $k \\neq \\ell$ 时，\n$$e_{k}e_{\\ell} = \\left( \\frac{1}{p-1} \\cdot 0 \\right) e_{k} = 0$$\n这验证了当 $k \\ne \\ell$ 时的正交性质 $e_k e_\\ell = 0$。\n\n情况 $k = \\ell$：在这种情况下，$k-\\ell = 0$，所以 $\\omega^{k-\\ell} = \\omega^0$ 是平凡特征，意味着对所有 $b$ 都有 $\\omega(b)^0 = 1$。求和变为：\n$$\\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} \\omega(b)^{0} = \\sum_{b\\in(\\mathbb{Z}/p\\mathbb{Z})^{\\times}} 1 = |(\\mathbb{Z}/p\\mathbb{Z})^{\\times}| = p-1$$\n因此，当 $k=\\ell$ 时，\n$$e_{k}e_{k} = e_{k}^2 = \\left( \\frac{1}{p-1} \\cdot (p-1) \\right) e_{k} = 1 \\cdot e_{k} = e_{k}$$\n这验证了幂等性质 $e_k^2=e_k$。\n\n3. 对于模分解和 Kummer 判别法的意义解释\n\n元素 $\\{e_{k}\\}_{k=0}^{p-2}$ 在群代数 $\\mathbb{Q}(\\mu_{p-1})[G]$ 中构成一个完备的互相正交的幂等元集合。这意味着 $e_k e_\\ell = \\delta_{k\\ell} e_k$，其中 $\\delta_{k\\ell}$ 是 Kronecker delta，它们的和是代数的乘法单位元，$\\sum_{k=0}^{p-2} e_k = \\sigma_1$。因此，它们作为投影算子。对于任何 $\\mathbb{Q}(\\mu_{p-1})[G]$-模 $M$，我们可以将 $M$ 写成子空间 $M_k = e_k M$ 的直和：\n$$M = \\left(\\sum_{k=0}^{p-2} e_k\\right) M = \\bigoplus_{k=0}^{p-2} e_k M = \\bigoplus_{k=0}^{p-2} M_k$$\n为了理解 $G$ 在这些子空间上的作用，设 $x \\in M_k$。那么 $x = e_k x$。$\\sigma_b \\in G$ 在 $x$ 上的作用由 $\\sigma_b(x) = \\sigma_b(e_k x)$ 给出。可以证明 $\\sigma_b e_k = e_k \\sigma_b = \\omega(b)^k e_k$，所以这些元素是可交换的。该作用是 $\\sigma_b(x) = (\\sigma_b e_k) x = (\\omega(b)^k e_k) x = \\omega(b)^k (e_k x) = \\omega(b)^k x$。这表明子空间 $M_k$ 中的每个元素都是整个群 $G$ 作用下的同时特征向量，其中每个 $\\sigma_b \\in G$ 的作用是乘以标量 $\\omega(b)^k$。因此，子空间 $M_k$ 被称为 $M$ 的 $\\omega^k$-特征空间。族 $\\{e_k\\}$ 提供了将任何这样的 $G$-模分解为其特征空间的显式机制。\n\n这种分解对于研究 $K=\\mathbb{Q}(\\zeta_p)$ 的理想类群至关重要，理想类群是一个 $\\mathbb{Z}[G]$-模。通过考虑类群的 $p$-部分 $A$，并将标量扩展到包含 $p$-adic 整数和单位根的合适环（如 $\\mathbb{Z}_p[\\mu_{p-1}]$），可以应用这些幂等元将 $A$ 分解为其 $\\omega^k$-特征空间 $A_k = e_k A$。Kummer 判别法指出，素数 $p$ 是正则的当且仅当 $p$ 不整除伯努利数 $B_2, B_4, \\dots, B_{p-3}$ 的分子。Herbrand-Ribet 定理通过将单个伯努利数与类群的特定特征空间联系起来，对此进行了提炼：对于偶数指标 $k \\in \\{2, \\dots, p-3\\}$，特征空间 $A_{p-k}$ 是非平凡的当且仅当 $p$ 整除 $B_k$ 的分子。由幂等元 $\\{e_k\\}$ 提供的特征空间分解是实现这种精确联系的基本代数工具，它将对整个类群的研究分解为对其各个更易于处理的特征空间分量的研究。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\omega(b)^{k} e_{k} & 0 & e_{k} \\end{pmatrix}}\n$$", "id": "3022712"}, {"introduction": "在掌握了底层的代数机理后，让我们来亲手应用库默判别法。本练习将指导你通过笔算来检验一个给定素数的正则性。你将需要从头计算伯努利数模一个素数 $p$ 的值，从而在一个具体的例子中体验库默判别法的实际运作方式。[@problem_id:3022717]", "problem": "设 $p=23$。有理数 $B_{k}$ 是第 $k$ 个伯努利数，由指数生成函数定义\n$$\n\\frac{t}{\\exp(t)-1} \\;=\\; \\sum_{n=0}^{\\infty} B_{n}\\,\\frac{t^{n}}{n!}.\n$$\n一个素数 $p$ 是正则的，当且仅当对于任何满足 $2\\leq k\\leq p-3$ 的偶数 $k$，$p$ 都不能整除 $B_{k}$ 的分子（这是 Kummer 判别法）。根据 von Staudt–Clausen 定理，对于每个满足 $2\\leq k\\leq p-3$ 的偶数 $k$，$B_{k}$ 的分母是所有满足 $q-1\\mid k$ 的素数 $q$ 的乘积，因此特别是当 $k\\leq p-3$ 且 $p-1\\nmid k$ 时，它不能被 $p$ 整除。因此，剩余类 $B_{k}\\bmod p$ 是良定义的，其计算方法是将其分子约化，并乘以其分母模 $p$ 的逆元。\n\n仅使用这些基础事实，计算对于所有满足 $2\\leq k\\leq 20$ 的偶数 $k$ 的 $B_{k}\\bmod 23$ 的值，并利用这些计算结果和 Kummer 判别法来确定非正则指数 $i(23)$，该指数定义为满足 $2\\leq k\\leq 20$ 且 $23$ 整除 $B_{k}$ 分子的偶数 $k$ 的数量。将你的最终答案表示为一个整数。", "solution": "问题要求计算素数 $p=23$ 的非正则指数，记为 $i(23)$。该指数定义为在区间 $2 \\le k \\le p-3$ 内，使得 $p$ 能整除第 $k$ 个伯努利数 $B_k$ 分子的偶数 $k$ 的数量。对于 $p=23$，该区间为 $2 \\le k \\le 20$。\n\n首先，我们验证问题陈述的有效性。\n问题提供了数论中的标准定义：伯努利数的生成函数，正则素数的 Kummer 判别法，以及 von Staudt–Clausen 定理关于 $k \\le p-3$ 时 $B_k$ 的 $p$-整性的一个推论。所有的定义和陈述在事实上都是正确的，并有科学依据。任务是基于这些原理计算一个良定义的整数值 $i(23)$。该问题是自洽的、适定的、客观的，并且需要一个不平凡但可验证的计算。因此，这是一个有效的问题。\n\n任务的核心是确定对于从 $2$ 到 $20$ 的每个偶数 $k$，是否有 $B_k \\equiv 0 \\pmod{23}$。\n我们使用伯努利数的基本递推关系式，该关系式直接从它们的定义生成函数 $\\frac{t}{\\exp(t)-1} = \\sum_{n=0}^{\\infty} B_n \\frac{t^n}{n!}$ 导出。两边乘以 $\\exp(t)-1$ 得到 $t = (\\exp(t)-1)\\sum_{n=0}^{\\infty} B_n \\frac{t^n}{n!}$。通过比较两边 $t$ 的幂的系数，我们得到递推关系式：对于 $m \\ge 2$，有 $\\sum_{j=0}^{m-1} \\binom{m}{j} B_j = 0$。\n我们使用这个关系式来计算 $B_k \\pmod{23}$ 的值。\n\n前几个伯努利数是 $B_0=1$ 和 $B_1=-1/2$。对于任何奇数 $k \\ge 3$，有 $B_k=0$。\n所有计算都在模 $23$ 下进行。\n$B_0 \\equiv 1 \\pmod{23}$。\n$B_1 = -1/2$。为了找到 $2^{-1} \\pmod{23}$，我们求解 $2x \\equiv 1 \\pmod{23}$。因为 $2 \\cdot 12=24 \\equiv 1 \\pmod{23}$，所以我们有 $2^{-1} \\equiv 12 \\pmod{23}$。因此，$B_1 \\equiv -12 \\equiv 11 \\pmod{23}$。\n\n我们通过在递推关系式中分离出最高指数项来计算偶数 $k \\ge 2$ 的 $B_k$。对于一个偶数 $k$，我们使用 $m=k+1$ 的递推式：\n$\\sum_{j=0}^{k} \\binom{k+1}{j} B_j = 0$。\n因为对于奇数 $j \\ge 3$，$B_j=0$，这可以简化为：\n$\\binom{k+1}{k} B_k = - \\left( \\binom{k+1}{0}B_0 + \\binom{k+1}{1}B_1 + \\sum_{j=2, \\text{even}}^{k-2} \\binom{k+1}{j}B_j \\right)$。\n$(k+1) B_k \\equiv - \\left( B_0 + (k+1)B_1 + \\sum_{j=2, \\text{even}}^{k-2} \\binom{k+1}{j}B_j \\right) \\pmod{23}$。\n\n对于 $k=2$：使用 $m=3$。$\\binom{3}{0}B_0 + \\binom{3}{1}B_1 + \\binom{3}{2}B_2 = 0$。\n$1 \\cdot 1 + 3 \\cdot 11 + 3 \\cdot B_2 \\equiv 0 \\pmod{23}$。\n$1 + 33 + 3B_2 \\equiv 0 \\implies 1 + 10 + 3B_2 \\equiv 0 \\implies 3B_2 \\equiv -11 \\equiv 12 \\pmod{23}$。\n我们需要 $3^{-1} \\pmod{23}$。$3 \\cdot 8 = 24 \\equiv 1$，所以 $3^{-1} \\equiv 8$。\n$B_2 \\equiv 12 \\cdot 8 = 96 \\equiv 4 \\pmod{23}$。（$B_2 = 1/6 \\equiv 4 \\pmod{23}$）\n\n对于 $k=4$：使用 $m=5$。$\\binom{5}{0}B_0 + \\binom{5}{1}B_1 + \\binom{5}{2}B_2 + \\binom{5}{4}B_4 = 0$（因为 $B_3=0$）。\n$1 \\cdot 1 + 5 \\cdot 11 + 10 \\cdot 4 + 5 B_4 \\equiv 0 \\pmod{23}$。\n$1 + 55 + 40 + 5B_4 \\equiv 0 \\implies 1+9+17+5B_4 \\equiv 0 \\implies 27+5B_4 \\equiv 0 \\implies 4+5B_4 \\equiv 0 \\pmod{23}$。\n$5B_4 \\equiv -4 \\equiv 19 \\pmod{23}$。\n我们需要 $5^{-1} \\pmod{23}$。$5 \\cdot (-9) = -45 \\equiv 1$，所以 $5^{-1} \\equiv -9 \\equiv 14$。\n$B_4 \\equiv 19 \\cdot 14 = (-4)(-9) = 36 \\equiv 13 \\pmod{23}$。（$B_4 = -1/30 \\equiv -1/7 \\equiv -10 \\equiv 13$）\n\n对于 $k=6$：使用 $m=7$。$\\binom{7}{0}B_0 + \\binom{7}{1}B_1 + \\binom{7}{2}B_2 + \\binom{7}{4}B_4 + \\binom{7}{6}B_6 = 0$。\n$1 + 7(11) + 21(4) + 35(13) + 7B_6 \\equiv 0 \\pmod{23}$。\n$1 + 77 - 2(4) + 12(13) + 7B_6 \\equiv 0 \\implies 1+8-8+156+7B_6 \\equiv 0 \\implies 1-5+7B_6 \\equiv 0 \\implies -4+7B_6 \\equiv 0$。\n$7B_6 \\equiv 4 \\pmod{23}$。\n我们需要 $7^{-1} \\pmod{23}$。$7 \\cdot 10 = 70 \\equiv 1$，所以 $7^{-1} \\equiv 10$。\n$B_6 \\equiv 4 \\cdot 10 = 40 \\equiv 17 \\pmod{23}$。（$B_6 = 1/42 \\equiv 1/19 \\equiv 1/(-4) \\equiv 17$）\n\n对于 $k=8$：使用 $m=9$。$\\binom{9}{0}B_0+\\binom{9}{1}B_1+\\binom{9}{2}B_2+\\binom{9}{4}B_4+\\binom{9}{6}B_6+\\binom{9}{8}B_8 = 0$。\n$1+9(11)+36(4)+126(13)+84(17)+9B_8 \\equiv 0 \\pmod{23}$。\n$1+99+144-42(13)+15(17)+9B_8 \\equiv 0$。等等，$\\binom{9}{4}=126 \\equiv 11$。\n$1+9(11)+13(4)+11(13)+15(17)+9B_8 \\equiv 0 \\pmod{23}$。\n$1+99+52+143+255+9B_8 \\equiv 0$。\n$1+7+6+5+2+9B_8 \\equiv 0 \\implies 21+9B_8 \\equiv 0 \\implies -2+9B_8 \\equiv 0$。\n$9B_8 \\equiv 2 \\pmod{23}$。\n我们需要 $9^{-1} \\pmod{23}$。$9 \\cdot 18 = 162 = 7 \\cdot 23 + 1 \\equiv 1$，所以 $9^{-1} \\equiv 18$。\n$B_8 \\equiv 2 \\cdot 18 = 36 \\equiv 13 \\pmod{23}$。\n\n对于 $k=10$：使用 $m=11$。\n$11B_{10} \\equiv -(\\binom{11}{0}B_0+\\binom{11}{1}B_1+\\binom{11}{2}B_2+\\binom{11}{4}B_4+\\binom{11}{6}B_6+\\binom{11}{8}B_8) \\pmod{23}$。\n$11B_{10} \\equiv -(1(1)+11(11)+9(4)+8(13)+2(17)+4(13)) = -(1+121+36+104+34+52) \\pmod{23}$。\n$11B_{10} \\equiv -(1+6+13+12+11+6) = -49 \\equiv -3 \\equiv 20$。\n我们需要 $11^{-1} \\equiv -2 \\equiv 21$。\n$B_{10} \\equiv 20 \\cdot 21 = (-3)(-2) = 6 \\pmod{23}$。\n\n对于 $k=12$：使用 $m=13$。\n$13B_{12} \\equiv -(\\binom{13}{0}B_0 + \\dots + \\binom{13}{10}B_{10}) \\pmod{23}$。\n$13B_{12} \\equiv -(1(1)+13(11)+9(4)+2(13)+14(17)-1(13)+10(6)) \\pmod{23}$。\n$13B_{12} \\equiv -(1+143+36+26+238-13+60) \\pmod{23}$。\n$13B_{12} \\equiv -(1+5+13+3+8-13+14) = -21 \\equiv 2$。\n我们需要 $13^{-1} \\equiv 16$。\n$B_{12} \\equiv 2 \\cdot 16 = 32 \\equiv 9 \\pmod{23}$。\n等等，重新计算：$S \\equiv 1+5+13+3+8+10+14 = 54 \\equiv 8$。\n$13B_{12} \\equiv -8 \\equiv 15$。$B_{12} \\equiv 15 \\cdot 16 = 240 \\equiv 10 \\pmod{23}$。正确。\n\n其余的计算以同样的方式进行。尽管繁琐，但它们很简单明了。我们列出完整的结果集。\n$B_2 \\equiv 4 \\pmod{23}$\n$B_4 \\equiv 13 \\pmod{23}$\n$B_6 \\equiv 17 \\pmod{23}$\n$B_8 \\equiv 13 \\pmod{23}$\n$B_{10} \\equiv 6 \\pmod{23}$\n$B_{12} \\equiv 10 \\pmod{23}$\n$B_{14} \\equiv 5 \\pmod{23}$\n$B_{16} \\equiv 10 \\pmod{23}$\n$B_{18} \\equiv 9 \\pmod{23}$\n$B_{20} \\equiv 15 \\pmod{23}$\n\n这些值没有一个与 $0$ 模 $23$ 同余。这意味着对于 $p=23$，在 $2 \\le k \\le 20$ 的范围内，对于任何偶数 $k$，$B_k$ 的分子都不能被 $23$ 整除。\n\n根据 Kummer 判别法，如果一个素数 $p$ 不能整除任何偶数 $k$（其中 $2 \\le k \\le p-3$）的 $B_k$ 的分子，那么它就是正则的。我们的计算表明 $p=23$ 满足这个条件。因此，$23$ 是一个正则素数。\n\n非正则指数 $i(p)$ 是指在 $k \\in [2, p-3]$ 区间内，使得 $p$ 能整除 $B_k$ 分子的偶数 $k$ 的数量。由于我们的计算表明，对于 $p=23$，不存在这样的 $k$ 值，所以非正则指数 $i(23)$ 为 $0$。", "answer": "$$\\boxed{0}$$", "id": "3022717"}, {"introduction": "手动计算虽然富有启发性，但过程繁琐且容易出错，也限制了我们探索的范围。一个更强大的方法是将其转化为算法。本练习要求你将手动计算的逻辑编写成一个计算机程序，从而能够系统性地检验一系列素数，其中将包括第一个已知的非正则素数 $37$。这不仅能巩固你的理解，也让你体验到从理论到现代计算数论实践的跨越。[@problem_id:3022718]", "problem": "设 $p$ 为一个素数，$\\{B_n\\}_{n\\ge 0}$ 表示由指数生成函数定义的伯努利数 $$\\frac{x}{e^x - 1} = \\sum_{n=0}^{\\infty} B_n \\frac{x^n}{n!}.$$ 如果一个素数 $p$ 不能整除第 $p$ 个分圆域 $\\mathbb{Q}(\\zeta_p)$ 的类数，则称 $p$ 为正则素数，其中 $\\zeta_p$ 是一个 $p$ 次本原单位根。库默判别法 (Kummer’s criterion) 指出，一个素数 $p$ 是正则的，当且仅当对于满足 $2 \\le k \\le p-3$ 的任何偶数 $k$，$p$ 都不能整除 $B_k$ 的分子。冯·施陶特-克劳森定理 (Von Staudt–Clausen theorem) 断言，$B_{2m}$ 的分母是所有满足 $(q-1)$ 整除 $2m$ 的素数 $q$ 的乘积。特别地，对于 $2 \\le k \\le p-3$ 的偶数 $k$，$B_k$ 的分母不能被 $p$ 整除。\n\n你的任务是从基本定义出发，推导出一个算法计算过程，通过为满足 $2 \\le k \\le p-3$ 的偶数 $k$ 列表计算 $B_k \\bmod p$ 的余数，并判断所有这些余数是否非零，从而检验给定素数 $p$ 的正则性。该推导必须从上述定义的生成函数开始，得到 $B_n$ 的一个精确有理数递推关系，并避免使用任何未经证明的捷径。然后，使用冯·施陶特-克劳森定理来证明，在指定范围内，通过分母的模逆元进行模 $p$ 规约是有效的，并使用库默判别法来证明该正则性检验的正确性。\n\n程序要求：\n- 实现一个伯努利数 $B_n$（作为有理数）的精确计算，范围为 $0 \\le n \\le N$，仅使用从生成函数定义推导出的整数和有理数算术。你必须推导并使用一个直接从生成函数得出的 $B_n$ 递推关系。\n- 对于测试集中的每个素数 $p$，计算余数列表 $$\\bigl[B_2 \\bmod p, B_4 \\bmod p, \\dots, B_{p-3} \\bmod p\\bigr],$$ 其中模 $p$ 规约的计算方法为：将 $B_k$ 的分子乘以其分母的模 $p$ 逆元。\n- 根据库默判别法，基于所有计算出的余数是否非零，以布尔值的形式判断 $p$ 的正则性。\n- 你的程序必须生成单行输出，该行包含一个由方括号括起来的、逗号分隔的结果列表。每个结果应为一个包含三个元素的列表：素数 $p$、指定范围内偶数 $k$ 的余数列表，以及一个指示正则性的布尔值。例如，总体格式为 $$\\bigl[\\,[p,\\,[r_2,r_4,\\dots],\\,\\text{is\\_regular}],\\;[\\dots],\\;\\dots\\,\\bigr],$$ 打印为不含空格的单行。\n\n测试集：\n- 包含素数 $p \\in \\{\\,3,\\,5,\\,7,\\,13,\\,37,\\,59,\\,67\\,\\}$。\n- 覆盖设计：\n  - $p=3$：边界情况，其中满足 $2 \\le k \\le p-3$ 的偶数 $k$ 集合为空，因此其正则性自然成立。\n  - $p=5,\\,7,\\,13$：范围较小的正则素数，用于验证计算流程。\n  - $p=37$：最小的非正则素数，预计在指定范围内至少有一个零余数。\n  - $p=59,\\,67$：额外的非正则素数，用于测试更大的伯努利数索引并确认程序的鲁棒性。\n- 输出类型规范：对于每个素数 $p$，输出一个列表 $[p,\\,[\\text{整数余数}],\\,\\text{布尔值}]$。最终输出是将每个素数的结果聚合成一个单行列表，格式如上所述。不涉及物理单位或角度单位。不使用百分比；所有输出均为整数和布尔值。", "solution": "确定素数 $p$ 的正则性是代数数论中的一项重要任务。本解答将基于库默判别法 (Kummer's criterion)，推导并实现一个检验正则性的算法，该算法使用伯努利数的精确计算。\n\n### 步骤1：推导伯努利数的递推关系\n\n伯努利数 $\\{B_n\\}_{n\\ge 0}$ 由其指数生成函数定义：\n$$\n\\frac{x}{e^x - 1} = \\sum_{n=0}^{\\infty} B_n \\frac{x^n}{n!}\n$$\n为了推导递推关系，我们对该方程进行变换。两边同乘以 $(e^x-1)$，我们得到：\n$$\nx = (e^x - 1) \\left( \\sum_{n=0}^{\\infty} B_n \\frac{x^n}{n!} \\right)\n$$\n我们将 $e^x - 1$ 表示为其在 $x=0$ 处的泰勒级数展开：\n$$\ne^x - 1 = \\sum_{k=1}^{\\infty} \\frac{x^k}{k!}\n$$\n将此代入方程中，得到：\n$$\nx = \\left( \\sum_{k=1}^{\\infty} \\frac{x^k}{k!} \\right) \\left( \\sum_{n=0}^{\\infty} B_n \\frac{x^n}{n!} \\right)\n$$\n这是两个幂级数的柯西乘积。设乘积为 $C(x) = \\sum_{m=0}^{\\infty} c_m x^m$。系数 $c_m$ 由两个级数系数的卷积给出。我们可以比较两边 $x^m/m!$ 的系数。两个指数生成函数 $A(x) = \\sum a_n \\frac{x^n}{n!}$ 和 $B(x) = \\sum b_n \\frac{x^n}{n!}$ 的乘积是 $C(x) = \\sum c_n \\frac{x^n}{n!}$，其中 $c_n = \\sum_{k=0}^n \\binom{n}{k} a_k b_{n-k}$。\n\n在我们的例子中，设 $A(x) = e^x - 1$ 且 $B(x) = \\sum B_n \\frac{x^n}{n!}$。对于 $A(x)$ 的指数生成函数系数，我们有 $a_0=0$ 和当 $k \\ge 1$ 时 $a_k=1$。乘积 $C(x)$ 就是 $x$，所以其指数生成函数系数为 $c_1=1$ 和当 $m \\neq 1$ 时 $c_m=0$。\n\n对于 $m=1$，系数为 $c_1 = \\binom{1}{0} a_0 B_1 + \\binom{1}{1} a_1 B_0 = 0 \\cdot B_1 + 1 \\cdot 1 \\cdot B_0 = B_0$。因为 $c_1=1$，我们有 $B_0=1$。\n\n对于 $m \\ge 2$，系数为 $c_m=0$：\n$$\nc_m = \\sum_{n=0}^{m} \\binom{m}{n} a_{m-n} B_n = 0\n$$\n我们可以分离出 $n=m$ 的项：\n$$\n\\binom{m}{m} a_0 B_m + \\sum_{n=0}^{m-1} \\binom{m}{n} a_{m-n} B_n = 0\n$$\n由于 $a_0=0$，第一项为零。对于和式中的项，$n \\le m-1$，所以 $m-n \\ge 1$，这意味着 $a_{m-n}=1$。方程简化为：\n$$\n\\sum_{n=0}^{m-1} \\binom{m}{n} B_n = 0 \\quad \\text{for } m \\ge 2.\n$$\n这就是我们所求的递推关系。我们可以利用这个关系，在已知先前值的情况下计算 $k \\ge 1$ 的 $B_k$。为了计算 $B_{m-1}$，我们重写关于索引 $m$ 的关系式：\n$$\n\\sum_{n=0}^{m-1} \\binom{m}{n} B_n = \\binom{m}{m-1}B_{m-1} + \\sum_{n=0}^{m-2} \\binom{m}{n} B_n = 0\n$$\n解出 $B_{m-1}$：\n$$\nm B_{m-1} = - \\sum_{n=0}^{m-2} \\binom{m}{n} B_n\n$$\n设 $k = m-1$。对于 $k \\ge 1$：\n$$\n(k+1) B_k = - \\sum_{n=0}^{k-1} \\binom{k+1}{n} B_n \\implies B_k = -\\frac{1}{k+1} \\sum_{n=0}^{k-1} \\binom{k+1}{n} B_n\n$$\n从 $B_0=1$ 开始，该关系允许我们逐个地将所有伯努利数计算为精确的有理数。\n\n### 步骤2：模 $p$ 规约的合理性证明\n\n问题要求计算在范围 $2 \\le k \\le p-3$ 内的偶数 $k$ 对应的伯努利数余数 $B_k \\bmod p$。伯努利数 $B_k$ 是一个有理数，我们可以将其写为最简分数形式 $N_k/D_k$。仅当分母 $D_k$ 不能被 $p$ 整除，即 $\\gcd(D_k, p)=1$ 时，模 $p$ 的余数 $N_k \\cdot (D_k^{-1} \\bmod p) \\pmod p$ 才是良定义的。\n\n冯·施陶特-克劳森定理 (Von Staudt–Clausen theorem) 为此提供了必要的证明。该定理指出，对于偶数索引 $2m > 0$，$B_{2m}$ 的分母是所有满足 $(q-1)$ 整除 $2m$ 的素数 $q$ 的乘积。\n$$\nD_{2m} = \\prod_{(q-1) | 2m, \\text{ q is prime}} q\n$$\n我们关心的是在 $2 \\le k \\le p-3$ 范围内的偶数 $k$ 所对应的 $B_k$。若要使 $p$ 成为分母 $D_k$ 的一个因子，它必须是一个素数 $q$，且满足 $(q-1)$ 整除 $k$。在我们的情况下，这意味着 $(p-1)$ 必须整除 $k$。\n\n然而，$k$ 的指定范围是 $2 \\le k \\le p-3$。这意味着 $k < p-1$。由于 $k$ 是正数，所以 $(p-1)$ 不可能整除 $k$。因此，对于指定范围内的任何 $k$，$p$ 都不可能是 $B_k$ 分母的因子。\n\n这证实了 $D_k \\not\\equiv 0 \\pmod p$，因此模逆元 $D_k^{-1} \\pmod p$ 存在且唯一。从而，$B_k \\bmod p$ 的计算是有效的操作。\n\n### 步骤3：正则性检验的合理性证明\n\n库默判别法建立了正则素数与伯努利数之间的联系。它指出，一个奇素数 $p$ 是正则的，当且仅当 $p$ 不能整除伯努利数 $B_2, B_4, \\dots, B_{p-3}$ 的分子。\n\n设 $B_k = N_k/D_k$。条件“$p$ 不能整除分子 $N_k$”等价于 $N_k \\not\\equiv 0 \\pmod p$。\n如步骤2所证，$D_k \\not\\equiv 0 \\pmod p$。$B_k$ 模 $p$ 的余数为 $B_k \\pmod p \\equiv N_k \\cdot (D_k^{-1}) \\pmod p$。\n因此，$B_k \\equiv 0 \\pmod p$ 当且仅当 $N_k \\equiv 0 \\pmod p$，因为 $D_k^{-1} \\pmod p$ 是非零的。\n\n所以，库默判别法可以重述为：一个奇素数 $p$ 是正则的，当且仅当对于在 $2 \\le k \\le p-3$ 范围内的所有偶数 $k$，都有 $B_k \\not\\equiv 0 \\pmod p$。\n\n因此，算法如下：\n1. 对于给定的素数 $p$，计算所有满足 $2 \\le k \\le p-3$ 的偶数 $k$ 对应的 $B_k$。\n2. 对于每一个这样的 $B_k$，计算其模 $p$ 的余数。\n3. 如果所有这些余数都非零，则素数 $p$ 是正则的。\n4. 如果至少有一个余数为零，则素数 $p$ 是非正则的。\n\n对于像 $p=3$ 这样的边界情况，$k$ 的范围是 $2 \\le k \\le 0$，这是一个空集。因此，该条件自然满足，$p=3$ 是正则的。对于 $p=5$，我们只检查 $B_2$。对于 $p=7$，我们检查 $B_2, B_4$。以此类推。\n\n这就完成了计算过程的推导和合理性证明。具体的实现将遵循此逻辑。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport math\nimport fractions\n\ndef compute_bernoulli(n_max):\n    \"\"\"\n    Computes Bernoulli numbers B_0, B_1, ..., n_max using the derived recurrence.\n    Returns a list of fractions.Fraction objects.\n    \"\"\"\n    B = [fractions.Fraction(1)]  # B_0 = 1\n    for k in range(1, n_max + 1):\n        # B_k = -1/(k+1) * sum_{n=0}^{k-1} C(k+1, n) * B_n\n        s = fractions.Fraction(0)\n        for n in range(k):\n            # Using math.comb for binomial coefficient C(k+1, n)\n            comb = fractions.Fraction(math.comb(k + 1, n))\n            s += comb * B[n]\n        B.append(-s / (k + 1))\n    return B\n\ndef solve():\n    \"\"\"\n    Main function to solve the problem for the given test suite of primes.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [3, 5, 7, 13, 37, 59, 67]\n\n    # Pre-compute all Bernoulli numbers needed for the largest prime.\n    max_p = max(test_cases) if test_cases else 0\n    # The max index k is p-3.\n    max_k = max(0, max_p - 3)\n    bernoulli_numbers = compute_bernoulli(max_k)\n\n    results = []\n    for p in test_cases:\n        # The range of even k is 2 <= k <= p-3\n        k_max = p - 3\n        \n        # Handle the boundary case p=3, where the set of k is empty.\n        if k_max < 2:\n            is_regular = True\n            residues = []\n            results.append([p, residues, is_regular])\n            continue\n            \n        residues = []\n        is_regular = True\n        \n        # Iterate over even k from 2 to p-3\n        for k in range(2, k_max + 1, 2):\n            bk = bernoulli_numbers[k]\n            \n            # Since k <= p-3, p-1 does not divide k, so p does not divide\n            # the denominator of B_k by Von Staudt-Clausen theorem.\n            # Thus, the modular inverse of the denominator exists.\n            num = bk.numerator\n            den = bk.denominator\n            \n            # Compute modular inverse using Fermat's Little Theorem: a^(p-2) mod p for prime p\n            # Python's pow(a, -1, m) available since 3.8 handles this efficiently.\n            den_inv = pow(den, -1, p)\n            \n            residue = (num * den_inv) % p\n            residues.append(residue)\n            \n            # Check for irregularity condition from Kummer's criterion\n            if residue == 0:\n                is_regular = False\n        \n        results.append([p, residues, is_regular])\n\n    # Final print statement in the exact required format.\n    # The format is a string representation of a list of lists, with no spaces.\n    # str(results) produces '[...]', and we remove spaces.\n    final_output_str = str(results).replace(\" \", \"\")\n    print(final_output_str)\n\nsolve()\n```", "id": "3022718"}]}