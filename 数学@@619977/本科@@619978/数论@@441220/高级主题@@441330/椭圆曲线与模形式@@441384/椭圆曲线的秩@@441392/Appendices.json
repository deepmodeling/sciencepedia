{"hands_on_practices": [{"introduction": "在我们深入研究椭圆曲线的秩之前，首先必须确保我们正在处理的是一个有效的椭圆曲线。这个练习将带你回到最基本的定义，通过计算判别式来验证一个经典例子 $E: y^2 = x^3 - x$ 的非奇异性，并确定其群结构中的单位元——无穷远点。完成这项基础练习，你将对椭圆曲线的代数基础有一个坚实的理解 [@problem_id:3089254]。", "problem": "设 $E$ 为 $\\mathbb{Q}$ 上的椭圆曲线，由 $y^{2}=x^{3}-x$ 给出。从椭圆曲线作为具有指定有理基点的非奇异射影三次曲线的标准定义出发，并仅使用经过充分检验的短Weierstrass模型 $y^{2}=x^{3}+ax+b$ 的非奇异性判别式准则，完成以下任务：\n\n1. 计算 $E$ 的判别式 $\\Delta(E)$，并用它来验证 $E$ 在 $\\mathbb{Q}$ 上是非奇异的。\n2. 当 $E$ 在射影坐标中被考察时，找出作为 $E(\\mathbb{Q})$ 上群律的单位元的有理点。\n\n答案规格：\n- 将你的最终答案表示为一个二元行矩阵 $\\begin{pmatrix}\\Delta(E)  P_{0}\\end{pmatrix}$，其中第一项是判别式的精确值，第二项是用齐次射影坐标表示的单位点 $P_{0}$。\n- 无需进行数值四舍五入。", "solution": "该问题陈述经评估有效。它自洽、数学上合理，并在关于椭圆曲线的既定数论框架内是适定的。任务具体，且基于标准定义和公式，其解唯一且可验证。\n\n该问题要求对由方程 $y^{2}=x^{3}-x$ 定义在有理数域 $\\mathbb{Q}$ 上的椭圆曲线 $E$ 进行两部分分析。\n\n第1部分：计算判别式并验证非奇异性。\n\n给定的椭圆曲线 $E$ 的方程是 $y^{2}=x^{3}-x$。这是短Weierstrass形式 $y^{2}=x^{3}+ax+b$。通过将给定方程的系数与一般形式进行比较，我们确定该特定曲线的参数 $a$ 和 $b$：\n$$a = -1$$\n$$b = 0$$\n\n短Weierstrass形式的椭圆曲线的判别式由以下公式给出：\n$$\\Delta = -16(4a^{3} + 27b^{2})$$\n\n将曲线 $E$ 的值 $a=-1$ 和 $b=0$ 代入，我们计算其判别式，记为 $\\Delta(E)$：\n$$\\Delta(E) = -16(4(-1)^{3} + 27(0)^{2})$$\n$$\\Delta(E) = -16(4(-1) + 27(0))$$\n$$\\Delta(E) = -16(-4 + 0)$$\n$$\\Delta(E) = -16(-4)$$\n$$\\Delta(E) = 64$$\n\n由Weierstrass方程定义的椭圆曲线是非奇异的，当且仅当其判别式非零。由于 $E$ 的判别式是 $\\Delta(E) = 64$，不等于 $0$，因此曲线 $E$ 在任何特征不整除 $2\\Delta$ 的域上都是非奇异的。由于我们是在特征为 $0$ 的 $\\mathbb{Q}$ 上工作，条件 $\\Delta(E) \\neq 0$足以确认 $E$ 是一条非奇异曲线，因此是一条有效的椭圆曲线。\n\n第2部分：在射影坐标中确定单位元。\n\n椭圆曲线被正式定义为射影平面 $\\mathbb{P}^{2}$ 中带有一个指定有理点的非奇异三次曲线。仿射方程 $y^{2}=x^{3}-x$ 描述了曲线在仿射平面中的点。为了找到所有点，包括那些“在无穷远处的”点，我们必须在射影坐标中工作。\n\n我们通过引入第三个坐标 $Z$ 并设 $x = X/Z$ 和 $y = Y/Z$ 来齐次化仿射方程。将这些代入 $E$ 的方程中得到：\n$$\\left(\\frac{Y}{Z}\\right)^{2} = \\left(\\frac{X}{Z}\\right)^{3} - \\frac{X}{Z}$$\n$$\\frac{Y^{2}}{Z^{2}} = \\frac{X^{3}}{Z^{3}} - \\frac{X}{Z}$$\n为了消去分母，我们将整个方程乘以 $Z^{3}$，这是分母次数的最小公倍数：\n$$Z^{3}\\left(\\frac{Y^{2}}{Z^{2}}\\right) = Z^{3}\\left(\\frac{X^{3}}{Z^{3}}\\right) - Z^{3}\\left(\\frac{X}{Z}\\right)$$\n$$Y^{2}Z = X^{3} - XZ^{2}$$\n这就是 $E$ 在齐次射影坐标 $[X:Y:Z]$ 下的方程。原始曲线的仿射点 $(x,y)$ 对应于射影点 $[x:y:1]$。\n\n“无穷远点”是那些满足 $Z=0$ 的点。将 $Z=0$ 代入齐次方程：\n$$Y^{2}(0) = X^{3} - X(0)^{2}$$\n$$0 = X^{3}$$\n这意味着 $X=0$。因此，曲线 $E$ 上的任何无穷远点都必须具有 $[0:Y:0]$ 的形式。在射影坐标中，至少有一个坐标必须是非零的。因此，我们必须有 $Y \\neq 0$。\n\n所有满足 $Y \\neq 0$ 的点 $[0:Y:0]$ 都是等价的，因为它们可以通过乘以一个非零常数进行缩放。例如，通过乘以 $1/Y$ 进行缩放得到：\n$$[0:Y:0] \\sim \\left[0 \\cdot \\frac{1}{Y} : Y \\cdot \\frac{1}{Y} : 0 \\cdot \\frac{1}{Y}\\right] = [0:1:0]$$\n这表明在曲线 $E$ 上只有一个唯一的无穷远点。根据惯例以及群律的几何构造，这个唯一的无穷远点被指定为有理点群 $E(\\mathbb{Q})$ 的单位元。我们把这个点记为 $P_{0}$。\n\n因此，单位元是 $P_{0} = [0:1:0]$。\n\n所要求的两个量是判别式 $\\Delta(E) = 64$ 和单位点 $P_{0} = [0:1:0]$。", "answer": "$$\n\\boxed{\\begin{pmatrix} 64  [0:1:0] \\end{pmatrix}}\n$$", "id": "3089254"}, {"introduction": "椭圆曲线的秩大于零，意味着它拥有无穷多个有理点。证明一个曲线秩为正的最直接方法，就是找到一个无限阶的有理点。这项实践练习将指导你通过编程来验证一个给定点是否能证明其所在曲线的秩为正，这需要运用群律来将其与有限阶的挠点区分开来。通过这个练习，你将亲身体验数论学家如何在二次扭曲族中寻找高秩曲线 [@problem_id:3089269]。", "problem": "设 $E$ 为定义在有理数域上的椭圆曲线 $y^2 = x^3 - x$。对于任意非零无平方因子整数 $d \\neq 0$，考虑由下式给出的二次扭曲族：\n$$\nE^{(d)}:\\quad y^2 = x^3 - d^2 x,\n$$\n该曲线族在二次域 $\\mathbb{Q}(\\sqrt{d})$ 上与 $E$ 同构，并代表了经典的同余数曲线。根据 Mordell–Weil 定理，有理点群 $E^{(d)}(\\mathbb{Q})$ 在椭圆曲线群律下是有限生成的，可以写作 $E^{(d)}(\\mathbb{Q}) \\cong T \\oplus \\mathbb{Z}^r$，其中 $T$ 是挠子群，$r$ 是秩。一个无限阶有理点即可证明 $r \\ge 1$。\n\n基于以下基础：\n- 定义在 $\\mathbb{Q}$ 上的短 Weierstrass 模型 $y^2 = x^3 + A x + B$ 的群律，其单位元为无穷远点，加法由弦切构造定义。\n- Nagell–Lutz 定理：若 $A, B \\in \\mathbb{Z}$ 且 $(x,y) \\in E(\\mathbb{Q})$ 是一个具有整数坐标的挠点，则要么 $y=0$，要么 $y^2$ 整除判别式 $\\Delta_E$。\n- Mazur 定理（在 $\\mathbb{Q}$ 上）关于挠点：$E(\\mathbb{Q})$ 中挠点的可能阶数仅限于 $n \\in \\{1,2,3,4,5,6,7,8,9,10,12\\}$，或者 $E(\\mathbb{Q})_{\\mathrm{tors}} \\cong \\mathbb{Z}/2\\mathbb{Z} \\times \\mathbb{Z}/2m\\mathbb{Z}$，其中 $m \\in \\{1,2,3,4\\}$。\n\n任务。编写一个完整的程序，对于每个由无平方因子整数 $d$ 和有理点 $P=(x,y)$ 组成的给定测试用例，逻辑严谨且精确地执行以下步骤：\n1. 验证 $d$ 是无平方因子的（即没有素数的平方能整除 $d$）。\n2. 验证 $P$ 位于 $E^{(d)}$ 上，即在 $\\mathbb{Q}$ 上精确检验 $y^2 = x^3 - d^2 x$ 是否成立。\n3. 验证 $P$ 是非挠点：\n   - 若 $x,y \\in \\mathbb{Z}$，可选择应用 Nagell–Lutz 定理：对于 $A = -d^2$ 和 $B = 0$，计算 $\\Delta_{E^{(d)}} = -16(4A^3 + 27B^2)$，其简化为 $\\Delta_{E^{(d)}} = 64 d^6$。若 $y \\neq 0$ 且 $y^2$ 不能整除 $64 d^6$，则 $P$ 是非挠点。\n   - 独立且最终确定地，使用群律公式计算从 $1$ 到 $12$ 的整数 $k$ 的 $[k]P$。如果这些倍点中没有一个等于单位元，则 $P$ 是非挠点。此步骤必须实现，并且是最终认证所必需的。\n4. 输出一个布尔值，指明给定的点 $P$ 是否证明 $E^{(d)}(\\mathbb{Q})$ 具有正秩（即 $P$ 在曲线上且为非挠点）。\n\n你的程序应生成单行输出，其中包含用方括号括起来的、以逗号分隔的结果列表（例如，“[result1,result2,...]”）。\n\n使用精确的有理数算术（无浮点近似）。不涉及角度。没有物理单位。\n\n测试套件。实现并评估以下六个测试用例：\n- 用例 1（边界情况，挠点）：$d=1$, $P=(0,0)$。\n- 用例 2（正常路径，整坐标非挠点）：$d=5$, $P=(-4,-6)$。\n- 用例 3（正常路径，有分母的有理非挠点）：$d=5$, $P=\\left(\\frac{25}{4},\\,\\frac{75}{8}\\right)$。\n- 用例 4（正常路径，整坐标非挠点）：$d=6$, $P=(12,36)$。\n- 用例 5（边缘情况，2-挠点）：$d=7$, $P=(7,0)$。\n- 用例 6（边缘情况，无效点）：$d=13$, $P=(2,2)$。\n\n最终输出必须是严格符合以下格式的单行文本\n$$\n[\\mathrm{bool}_1,\\mathrm{bool}_2,\\mathrm{bool}_3,\\mathrm{bool}_4,\\mathrm{bool}_5,\\mathrm{bool}_6],\n$$\n其中每个 $\\mathrm{bool}_i$ 为 True 或 False。", "solution": "该问题是有效的。这是一个定义明确的数论计算任务，基于椭圆曲线算术的既定原则。所有提供的数据、定义和定理都是正确且自洽的。\n\n目标是对于给定的无平方因子整数 $d$ 和有理点 $P=(x,y)$，确定 $P$ 是否能证明椭圆曲线 $E^{(d)}: y^2 = x^3 - d^2 x$ 在有理数域 $\\mathbb{Q}$ 上的秩为正。如果一个点位于曲线上且为无限阶（即非挠点），则它可证明秩为正。这需要三部分验证：\n1.  整数 $d$ 必须是无平方因子的。\n2.  点 $P$ 必须满足曲线方程。\n3.  点 $P$ 必须是无限阶的。\n\n对于一个给定的测试用例 $(d, P)$，其总体结果是这三个条件的逻辑合取。我们将在所有计算中使用精确的有理数算术以避免精度误差。\n\n### 步骤 1：验证 $d$ 的无平方因子性\n一个非零整数 $d$ 如果除了 $1$ 之外不能被任何完全平方数整除，则定义为无平方因子的。为了验证给定整数 $d$ 的此属性，我们可以实现一个试除法算法。我们首先处理 $|d|=1$ 的平凡情况，它是无平方因子的。对于 $|d| > 1$，我们检查其是否能被素数的平方整除。一个完整且高效的检查可以通过迭代从 $i \\ge 2$ 到 $\\lfloor\\sqrt{|d|}\\rfloor$ 的整数来执行。如果 $d$ 能被任何这样的 $i^2$ 整除，那么 $d$ 就不是无平方因子的。算法如下：\n- 如果 $d=0$，根据问题陈述 ($d \\neq 0$)，它不是一个有效的输入。\n- 令 $n = |d|$。如果 $n=1$，$d$ 是无平方因子的。\n- 检查 $n$ 是否能被 $4$（$2$ 的平方）整除。如果是，则 $d$ 不是无平方因子的。\n- 从 $3$ 开始，迭代遍历奇数 $i$ 直到 $\\lfloor\\sqrt{n}\\rfloor$。对于每个 $i$，如果 $n$ 能被 $i^2$ 整除，则 $d$ 不是无平方因子的。\n- 如果循环完成而没有找到平方因子，则 $d$ 是无平方因子的。\n\n### 步骤 2：验证 $P$ 在 $E^{(d)}$ 上\n给定点 $P=(x,y)$（其中 $x, y \\in \\mathbb{Q}$）和曲线方程 $E^{(d)}: y^2 = x^3 - d^2 x$，我们必须使用精确的有理数算术来验证这个等式。我们将 $P$ 的坐标代入方程，并检查左侧的 $y^2$ 是否与右侧的 $x^3 - d^2 x$ 完全相等。\n\n### 步骤 3：验证 $P$ 是非挠点\n椭圆曲线上的一个点 $P$ 如果在群律下具有有限阶，则它是一个挠点。这意味着存在一个正整数 $n$，使得 $[n]P = \\mathcal{O}$，其中 $\\mathcal{O}$ 是无穷远点，作为群的单位元。如果不存在这样的有限 $n$，则 $P$ 是一个无限阶点。\n\nMazur 关于挠子群的定理指出，对于任何在 $\\mathbb{Q}$ 上的椭圆曲线，挠点的阶只能是集合 $\\{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12\\}$ 中的整数之一。因此，要证明一个点 $P$ 是无限阶的，只需证明对于所有 $k \\in \\{1, 2, \\dots, 12\\}$，都有 $[k]P \\neq \\mathcal{O}$。请注意，对于仿射点 $(x,y)$，$[1]P = P$ 永远不等于 $\\mathcal{O}$。\n\n此验证需要实现曲线 $E^{(d)}$ 的群律，该曲线是短 Weierstrass 形式 $y^2 = x^3 + Ax + B$，系数为 $A = -d^2$ 和 $B=0$。\n\n群律公式如下：\n- **单位元**：无穷远点 $\\mathcal{O}$。\n- **逆元**：点 $P_1 = (x_1, y_1)$ 的逆元是 $-P_1 = (x_1, -y_1)$。\n- **点加法**：设 $P_1 = (x_1, y_1)$ 和 $P_2 = (x_2, y_2)$ 是两个不同的点，且均非 $\\mathcal{O}$。\n  - 如果 $x_1 = x_2$，则 $y_2 = -y_1$ 且 $P_1 + P_2 = \\mathcal{O}$。\n  - 如果 $x_1 \\neq x_2$，它们的和 $P_3 = (x_3, y_3) = P_1 + P_2$ 由以下公式给出：\n    $$ \\lambda = \\frac{y_2 - y_1}{x_2 - x_1} $$\n    $$ x_3 = \\lambda^2 - x_1 - x_2 $$\n    $$ y_3 = \\lambda(x_1 - x_3) - y_1 $$\n- **倍点运算**：设 $P_1 = (x_1, y_1)$ 是一个 $y_1 \\neq 0$ 的点。其和 $[2]P_1 = P_1 + P_1 = (x_3, y_3)$ 由以下公式给出：\n  $$ \\lambda = \\frac{3x_1^2 + A}{2y_1} = \\frac{3x_1^2 - d^2}{2y_1} $$\n  $$ x_3 = \\lambda^2 - 2x_1 $$\n  $$ y_3 = \\lambda(x_1 - x_3) - y_1 $$\n  - 如果 $y_1 = 0$，该点是一个 2-挠点，且 $[2]P_1 = \\mathcal{O}$。\n\n检查挠点的算法如下：\n1.  如果 $y=0$，点 $P$ 的阶为 $2$，因此它是一个挠点。\n2.  否则，我们迭代计算 $P$ 的倍点。令 $Q_1 = P$。\n3.  对于从 $2$ 到 $12$ 的 $k$，计算 $Q_k = Q_{k-1} + P$。如果在任何步骤中 $Q_k = \\mathcal{O}$，则 $P$ 是一个挠点。\n4.  如果没有一个倍点 $[2]P, \\dots, [12]P$ 等于 $\\mathcal{O}$，我们断定 $P$ 是一个无限阶点。\n\n一个点 $P$ 能证明 $E^{(d)}(\\mathbb{Q})$ 具有正秩，当且仅当所有三个条件（$d$ 是无平方因子的，$P$ 在曲线上，$P$ 是非挠点）都得到满足。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nimport math\nfrom fractions import Fraction\n\ndef solve():\n    \"\"\"\n    Solves the elliptic curve rank certification problem for a given set of test cases.\n    \"\"\"\n\n    # Helper function to parse coordinate strings into Fraction objects.\n    def parse_coord(s):\n        if '/' in s:\n            num, den = map(int, s.split('/'))\n            return Fraction(num, den)\n        else:\n            return Fraction(int(s))\n\n    # The point at infinity, represented as None.\n    O = None\n\n    def is_squarefree(d):\n        \"\"\"\n        Checks if an integer d is squarefree.\n        A non-zero integer is squarefree if it is not divisible by any perfect square other than 1.\n        \"\"\"\n        if d == 0:\n            return False\n        \n        n = abs(d)\n        if n == 1:\n            return True\n\n        # Check for factor of 4\n        if n % 4 == 0:\n            return False\n\n        # Check for squares of odd primes\n        limit = math.isqrt(n)\n        for i in range(3, limit + 1, 2):\n            if n % (i*i) == 0:\n                return False\n        \n        return True\n\n    def add_points(p1, p2, d):\n        \"\"\"\n        Adds two points on the elliptic curve y^2 = x^3 - d^2*x.\n        \"\"\"\n        if p1 is O:\n            return p2\n        if p2 is O:\n            return p1\n\n        x1, y1 = p1\n        x2, y2 = p2\n        \n        A = -d*d\n\n        if x1 == x2 and y1 != y2: # p2 is the inverse of p1\n            return O\n        \n        if x1 != x2:\n            lam = (y2 - y1) / (x2 - x1)\n            x3 = lam**2 - x1 - x2\n            y3 = lam * (x1 - x3) - y1\n            return (x3, y3)\n        elif x1 == x2 and y1 == y2: # Point doubling\n            if y1 == 0: # 2-torsion point\n                return O\n            lam = (3 * x1**2 + A) / (2 * y1)\n            x3 = lam**2 - 2 * x1\n            y3 = lam * (x1 - x3) - y1\n            return (x3, y3)\n        else:\n             # Should not be reached in this problem's context\n             return O\n    \n    def check_torsion(p, d):\n        \"\"\"\n        Checks if a point p is a torsion point by computing [k]p for k=1..12.\n        Returns True if p is a torsion point, False otherwise.\n        \"\"\"\n        if p[1] == 0: # 2-torsion point\n            return True\n            \n        current_multiple = p\n        # We start by computing [2]p, then [3]p etc up to [12]p\n        # [k]P = [k-1]P + P\n        for _ in range(2, 13):\n            current_multiple = add_points(current_multiple, p, d)\n            if current_multiple is O:\n                return True # It is a torsion point\n        \n        return False # It is a non-torsion point\n\n    def run_test(d, p_coords):\n        \"\"\"\n        Performs the complete verification for a single test case (d, P).\n        Returns True if P certifies rank > 0, False otherwise.\n        \"\"\"\n        # 1. Verify d is squarefree\n        if not is_squarefree(d):\n            return False\n\n        # Parse point coordinates\n        try:\n            x = parse_coord(p_coords[0])\n            y = parse_coord(p_coords[1])\n            p = (x, y)\n        except (ValueError, IndexError):\n            return False # Malformed point data\n\n        # 2. Verify P is on the curve E^(d)\n        d_frac = Fraction(d)\n        if y**2 != x**3 - d_frac**2 * x:\n            return False\n            \n        # 3. Verify P is non-torsion\n        if check_torsion(p, d_frac):\n            return False # Point is torsion\n\n        # All checks passed, the point certifies positive rank.\n        return True\n\n    # Define the test cases from the problem statement.\n    test_cases = [\n        (1, ('0', '0')),                      # Case 1\n        (5, ('-4', '-6')),                    # Case 2\n        (5, ('25/4', '75/8')),                # Case 3\n        (6, ('12', '36')),                    # Case 4\n        (7, ('7', '0')),                      # Case 5\n        (13, ('2', '2')),                     # Case 6\n    ]\n\n    results = []\n    for d, p_coords in test_cases:\n        result = run_test(d, p_coords)\n        results.append(str(result))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "3089269"}, {"introduction": "确定椭圆曲线的精确秩通常是一个非常困难的问题。然而，深刻的猜想，如Birch与Swinnerton-Dyer猜想（BSD猜想），为我们提供了强大的理论工具。这个练习将引导你探索BSD猜想的一个核心概念——根数（root number），通过分析曲线在实数域和素数 $p=2$ 处的局部性质来计算全局根数。这个值可以预测秩的奇偶性，让你在不进行完整秩计算的情况下，也能窥见曲线的算术奥秘 [@problem_id:3089290]。", "problem": "设 $E/\\mathbb{Q}$ 是由短Weierstrass方程 $y^{2}=x^{3}-x$ 给出的椭圆曲线。全局根数 $w(E)\\in\\{\\pm 1\\}$ 定义为在 $\\mathbb{Q}$ 的所有位 $v$ 上的局部根数 $w_{v}(E)$ 的乘积，其中 $v$ 遍历所有素数和实位。在有限素数 $p$ 处的局部根数由通过Tate算法得到的约化类型确定，而在实位处的局部根数由实轨迹 $E(\\mathbb{R})$ 的拓扑结构确定。\n\n基于这些原则，执行以下操作：\n- 通过分析 $E(\\mathbb{R})$ 的连通分支，确定实位处的符号。\n- 确定识别素数 $p=2$ 处约化类型所需的最小判别式和不变量，并利用该约化类型推断出 $w_{2}(E)$。\n- 得出全局根数 $w(E)$，并根据Birch and Swinnerton–Dyer (BSD) 猜想的奇偶性方面（该猜想预测 $(-1)^{r(E)}=w(E)$），陈述对 $E(\\mathbb{Q})$ 的Mordell–Weil秩 $r(E)$ 的奇偶性预测。\n\n所有步骤都必须根据所述的基本事实进行论证。将最终答案表示为全局根数 $w(E)$ 的单个值。无需四舍五入。", "solution": "问题陈述是椭圆曲线算术方面的一个有效练习。它具有科学依据，问题提法恰当且客观。我们着手解决它。\n\n椭圆曲线 $E$ 在 $\\mathbb{Q}$ 上由短Weierstrass方程 $y^{2}=x^{3}-x$ 给出。我们被要求计算其全局根数 $w(E)$，并陈述由此产生的对其Mordell–Weil秩 $r(E)$ 的奇偶性预测。全局根数是在 $\\mathbb{Q}$ 的所有位 $v$ 上的局部根数的乘积，即 $w(E) = \\prod_{v} w_{v}(E)$。\n\n**1. 实位处的局部根数, $w_{\\infty}(E)$**\n\n实位处的局部根数 $w_{\\infty}(E)$ 由实轨迹 $E(\\mathbb{R})$ 的连通分支数量确定。曲线上的实点 $(x, y) \\in \\mathbb{R}^{2}$ 必须满足 $y^{2} \\ge 0$，这意味着多项式 $P(x) = x^{3}-x$ 必须为非负。\n我们将多项式分解为 $P(x) = x(x-1)(x+1)$。根是 $x = -1$，$x = 0$ 和 $x = 1$。我们在实数轴上分析 $P(x)$ 的符号：\n- 对于 $x > 1$，所有因子均为正，所以 $P(x) > 0$。\n- 对于 $0 < x < 1$，$x > 0$，$x-1 < 0$ 且 $x+1 > 0$，所以 $P(x) < 0$。在此 $x$ 的范围内没有实点。\n- 对于 $-1 < x < 0$，$x < 0$，$x-1 < 0$ 且 $x+1 > 0$，所以 $P(x) > 0$。\n- 对于 $x < -1$，所有三个因子均为负，所以 $P(x) < 0$。在此 $x$ 的范围内没有实点。\n\n实点集 $E(\\mathbb{R})$ 仅在 $x \\in [-1, 0] \\cup [1, \\infty)$ 时存在。\n区间 $[-1, 0]$ 定义了一个紧连通分支（一个卵形环）。区间 $[1, \\infty)$ 连同射影化曲线上的无穷远点一起，定义了第二个非紧连通分支。\n因此，$E(\\mathbb{R})$ 由两个连通分支组成。无穷远处的局部根数规则规定，如果 $E(\\mathbb{R})$ 有一个连通分支，则 $w_{\\infty}(E) = +1$；如果有两个连通分支，则 $w_{\\infty}(E) = -1$。\n因此，对于给定的曲线，我们有 $w_{\\infty}(E) = -1$。\n\n**2. 素数 $p=2$ 处的局部根数, $w_{2}(E)$**\n\n为了确定 $w_{2}(E)$，我们必须分析曲线在素数 $p=2$ 处的约化。方程的形式为 $y^{2} = x^{3} + Ax + B$，其中 $A = -1$ 且 $B = 0$。标准不变量是：\n$c_{4} = -48A = -48(-1) = 48 = 2^{4} \\cdot 3$\n$c_{6} = -864B = 0$\n$\\Delta = -16(4A^{3} + 27B^{2}) = -16(4(-1)^{3} + 0) = -16(-4) = 64 = 2^{6}$\n\n曲线在素数 $p$ 处有坏约化当且仅当 $p$ 整除最小判别式 $\\Delta_{min}$。由于 $\\Delta = 64$，唯一可能的坏约化素数是 $p=2$。对于所有奇素数 $p$，曲线有好处约化，对于这些素数，局部根数 $w_{p}(E) = +1$。\n\n现在，我们分析在 $p=2$ 处的约化。首先，我们确认给定的模型在 $p=2$ 处是否是极小的。一个由Weierstrass方程定义的模型在 $p$ 处是极小的，如果赋值 $v_p(\\Delta)  12$ 或 $v_p(c_4)  4$。此处，$v_{2}(\\Delta) = v_{2}(64) = 6$。因为 $6  12$，该模型在 $p=2$ 处是极小的，且最小判别式为 $\\Delta_{min} = 64$。\n\n约化类型由在 $p=2$ 处的不变量的赋值确定：\n$v_{2}(\\Delta) = 6  0$\n$v_{2}(c_{4}) = v_{2}(48) = 4  0$\n因为 $v_{2}(c_{4})  0$，在 $p=2$ 处的约化是加性约化。具体的Kodaira-Néron类型是根据一个基于极小模型不变量赋值的表格来确定的。对于素数 $p=2$，条件 $v_{2}(c_{4}) = 4$，$v_{2}(c_{6})  6$（此处 $v_{2}(0)=\\infty$）和 $v_{2}(\\Delta) = 6$ 唯一地将Kodaira类型指定为 $I_{0}^{*}$。\n\n对于在 $p=2$ 处有加性约化的曲线，其局部根数 $w_{2}(E)$ 取决于Kodaira类型。根据已建立的局部根数规则：\n- 对于类型 II, IV, $I_{2m}^{*}$ ($m \\ge 0$)，根数为 $-1$。\n- 对于类型 III, IV*, $I_{2m+1}^{*}$ ($m \\ge 0$)，根数为 $+1$。\n由于我们的曲线的约化类型为 $I_{0}^{*}$（这对应于第一条规则中 $m=0$ 的情况），因此在 $p=2$ 处的局部根数为 $w_{2}(E) = -1$。\n\n**3. 全局根数 $w(E)$ 和秩的奇偶性预测**\n\n全局根数是所有局部根数的乘积：\n$$w(E) = w_{\\infty}(E) \\cdot w_{2}(E) \\cdot \\prod_{p \\neq 2, \\text{ odd}} w_{p}(E)$$\n我们已经确定：\n- $w_{\\infty}(E) = -1$\n- $w_{2}(E) = -1$\n- 对于所有奇素数 $p$，$w_{p}(E) = +1$，因为曲线在这些素数处有好处约化。\n\n因此，全局根数为：\n$$w(E) = (-1) \\cdot (-1) \\cdot \\prod_{p \\text{ odd}} 1 = 1$$\n\nBirch and Swinnerton-Dyer (BSD) 猜想的奇偶性方面预测，$E$ 的Hasse–Weil L-函数的函数方程的符号（即全局根数 $w(E)$）与Mordell–Weil群 $E(\\mathbb{Q})$ 的秩 $r(E)$ 通过方程 $(-1)^{r(E)} = w(E)$ 相关联。\n代入我们得到的 $w(E)$ 的结果：\n$$(-1)^{r(E)} = 1$$\n这意味着秩 $r(E)$ 被预测为一个偶数。\n\n问题要求给出全局根数 $w(E)$ 的单个值。", "answer": "$$\n\\boxed{1}\n$$", "id": "3089290"}]}