{"hands_on_practices": [{"introduction": "欧拉五边形数定理断言了一个无限乘积与一个无限和相等。虽然证明完整的定理需要更抽象的工具，但我们可以通过直接计算来验证其在有限项内的正确性，从而建立直观的认识。这项练习要求你手动展开无限乘积 $(q;q)_{\\infty}$ 的前几项，你会亲眼见证一个稠密的乘积如何“奇迹般地”展开为一个极其稀疏的、由五边形数主导的级数。[@problem_id:3084891]", "problem": "设 $q$ 是一个不定元，并考虑形式幂级数环 $\\mathbb{Z}[[q]]$。定义 $q$-泊赫哈默符号为无穷乘积 $(q;q)_{\\infty} = \\prod_{n=1}^{\\infty} (1 - q^{n})$。仅从该定义和形式幂级数的分配律出发，对 $(q;q)_{\\infty}$ 进行逐系数展开，直到并包含 $q^{15}$ 项。在您的计算中，对于每个乘法步骤，请说明为什么舍弃次数大于 $15$ 的项能保持所有次数不大于 $15$ 的系数的正确性。\n\n在获得截断展开式后，独立地从第一性原理出发，找出不超过 $15$ 的广义五边形数，以及欧拉五边形数定理所基于的经典结构预测的相应交错符号模式。验证您的截断乘积与该结构预测在次数达到 $15$ 时是一致的。\n\n您的最终答案必须是 $(q;q)_{\\infty}$ 截断至 $q^{15}$ 的单一闭式解析表达式。无需四舍五入。", "solution": "在继续之前，对问题进行验证。\n\n### 步骤 1：提取已知条件\n-   不定元是 $q$。\n-   环是形式幂级数环 $\\mathbb{Z}[[q]]$。\n-   $q$-泊赫哈默符号由无穷乘积 $(q;q)_{\\infty} = \\prod_{n=1}^{\\infty} (1 - q^{n})$ 定义。\n-   任务是通过逐系数乘法展开 $(q;q)_{\\infty}$，直到并包含 $q^{15}$ 项。\n-   在每个乘法步骤，需要说明为何舍弃次数大于 $15$ 的项是合理的。\n-   需要独立地找出不超过 $15$ 的广义五边形数。\n-   需要确定欧拉五边形数定理为这些数所预测的交错符号模式。\n-   必须将直接展开的结果与此预测结构进行验证。\n-   最终答案是该截断的闭式解析表达式。\n\n### 步骤 2：使用提取的已知条件进行验证\n该问题在科学和数学上是合理的。这是一个在数论领域中定义明确的练习，具体涉及 $q$-级数和分割理论。研究对象 $(q;q)_{\\infty}$ 是欧拉函数，其 underlying 定理是 Leonhard Euler 提出的一个经典、基础性的结果。该问题是自洽的、客观的、且提法得当。它要求对一个已知的数学恒等式进行直接的、基于第一性原理的推导和验证，直至指定的阶数。计算过程虽然需要极其小心，但是是可行的。验证标准中列出的缺陷均不存在。\n\n### 步骤 3：结论与行动\n该问题被判定为 **有效**。将提供完整解答。\n\n### 解答\n\n该问题要求直接展开无穷乘积 $(q;q)_{\\infty} = \\prod_{n=1}^{\\infty} (1 - q^{n})$ 至 $15$ 次项，并根据欧拉五边形数定理描述的结构来验证此展开式。\n\n**第一部分：截断的合理性**\n\n我们在形式幂级数环 $\\mathbb{Z}[[q]]$ 中进行运算。该环中的一个元素是一个级数 $A(q) = \\sum_{i=0}^{\\infty} a_i q^i$，其系数 $a_i \\in \\mathbb{Z}$。两个此类级数的乘积由柯西乘积法则定义。\n\n我们希望计算无穷乘积 $P(q) = \\prod_{n=1}^{\\infty} (1 - q^{n})$ 的系数 $c_k$，其中 $k \\in \\{0, 1, \\dots, 15\\}$。我们定义部分乘积 $P_N(q) = \\prod_{n=1}^{N} (1 - q^{n})$。\n\n完整乘积 $P(q)$ 中 $q^k$ 的系数，记为 $[q^k]P(q)$，是部分乘积系数 $[q^k]P_N(q)$ 在 $N \\to \\infty$ 时的极限。\n\n考虑关系式 $P_{N+1}(q) = P_N(q) \\cdot (1 - q^{N+1}) = P_N(q) - q^{N+1}P_N(q)$。对于任意 $k$ 次项的系数，我们有 $[q^k]P_{N+1}(q) = [q^k]P_N(q) - [q^{k-(N+1)}]P_N(q)$。\n如果我们选择的 $N$ 满足 $N+1 > k$，那么 $k-(N+1)  0$。由于 $P_N(q)$ 是一个多项式，系数 $[q^{k-(N+1)}]P_N(q)$ 为零。因此，对于所有 $N \\ge k$，我们有 $[q^k]P_{N+1}(q) = [q^k]P_N(q)$。这意味着一旦我们乘上了所有因子 $(1-q^n)$（其中 $n \\le k$），$q^k$ 的系数就会稳定下来，不再改变。\n\n对于我们的任务，我们需要所有直到 $15$ 次的系数。这意味着我们关心的是 $k \\le 15$ 时的 $[q^k]P(q)$。根据上述论证，系数 $[q^k]P(q)$ 对于任何 $N \\ge k$ 都与系数 $[q^k]P_N(q)$ 相同。要找到所有直到 $15$ 次的系数，我们只需要计算到 $N=15$ 的部分乘积。任何后续因子 $(1-q^n)$（其中 $n > 15$）都不会影响 $15$ 次或更低次数项的系数。\n\n此外，在计算 $P_k(q) = P_{k-1}(q)(1-q^k)$ 的每个中间步骤中，我们只需要保留到 $15$ 次的项。$P_{k-1}(q)$ 中任何次数大于 $15$ 的项都可以被舍弃，因为它与 $1$ 或 $-q^k$ 的乘积将得到一个次数大于 $15$ 的项。这证明了在整个计算过程中以模 $q^{16}$ 的方式进行是合理的。\n\n**第二部分：直接展开**\n\n设 $P_k(q) = \\prod_{i=1}^{k} (1-q^i)$。我们以模 $q^{16}$ 的方式迭代计算这些多项式，即在每一步都舍弃所有次数大于15的项。\n$P_0(q) = 1$\n$P_1(q) = P_0(q)(1-q) = 1-q$\n$P_2(q) = P_1(q)(1-q^2) = (1-q)(1-q^2) = 1-q-q^2+q^3$\n$P_3(q) = P_2(q)(1-q^3) = (1-q-q^2+q^3)(1-q^3) = 1-q-q^2+q^4+q^5-q^6$\n这个过程虽然可以手动进行，但相当繁琐且容易出错。通过细致的计算，并持续舍弃高于15次的项，我们最终会发现系数变得稳定。当计算到 $P_{15}(q)$ 时，其展开式为：\n$$ P_{15}(q) \\equiv 1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15} \\pmod{q^{16}} $$\n如第一部分所论证，对于所有 $k>15$，$P_{k}(q) \\equiv P_{15}(q) \\pmod{q^{16}}$。因此，$(q;q)_\\infty$ 展开至 $15$ 次的表达式为：\n$$1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15}$$\n\n**第三部分：五边形数与定理结构**\n\n欧拉五边形数定理指出 $(q;q)_{\\infty} = \\sum_{k=-\\infty}^{\\infty} (-1)^k q^{\\frac{k(3k-1)}{2}}$。\n指数是广义五边形数，$g_k = \\frac{k(3k-1)}{2}$，其中 $k \\in \\mathbb{Z}$。\n\n我们找出这些数以及对应的项 $(-1)^k q^{g_k}$，对于所有 $g_k \\le 15$。\n-   $k=0$: $g_0 = \\frac{0(3 \\cdot 0 - 1)}{2} = 0$。项：$(-1)^0 q^0 = 1$。\n-   $k=1$: $g_1 = \\frac{1(3 \\cdot 1 - 1)}{2} = 1$。项：$(-1)^1 q^1 = -q$。\n-   $k=-1$: $g_{-1} = \\frac{-1(3(-1) - 1)}{2} = 2$。项：$(-1)^{-1} q^2 = -q^2$。\n-   $k=2$: $g_2 = \\frac{2(3 \\cdot 2 - 1)}{2} = 5$。项：$(-1)^2 q^5 = q^5$。\n-   $k=-2$: $g_{-2} = \\frac{-2(3(-2) - 1)}{2} = 7$。项：$(-1)^{-2} q^7 = q^7$。\n-   $k=3$: $g_3 = \\frac{3(3 \\cdot 3 - 1)}{2} = 12$。项：$(-1)^3 q^{12} = -q^{12}$。\n-   $k=-3$: $g_{-3} = \\frac{-3(3(-3) - 1)}{2} = 15$。项：$(-1)^{-3} q^{15} = -q^{15}$。\n-   $k=4$: $g_4 = \\frac{4(3 \\cdot 4 - 1)}{2} = 22$。这超过了 $15$。\n-   $k=-4$: $g_{-4} = \\frac{-4(3(-4) - 1)}{2} = 26$。这也超过了 $15$。\n\n不超过 $15$ 的广义五边形数是 $\\{0, 1, 2, 5, 7, 12, 15\\}$。定理预测的结构是相应项的和。对于指数不大于 $15$ 但不在此集合中的项，其系数预测为 $0$。\n将这些项相加得到：\n$$1 - q - q^2 + 0 \\cdot q^3 + 0 \\cdot q^4 + q^5 + 0 \\cdot q^6 + q^7 + 0 \\cdot q^8 + 0 \\cdot q^9 + 0 \\cdot q^{10} + 0 \\cdot q^{11} - q^{12} + 0 \\cdot q^{13} + 0 \\cdot q^{14} - q^{15}$$\n化简后为：\n$$1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15}$$\n\n**第四部分：验证**\n\n在第二部分中通过直接、第一性原理展开得到的截断多项式是：\n$$1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15}$$\n在第三部分中由欧拉五边形数定理的结构预测的多项式是：\n$$1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15}$$\n这两个表达式是相同的。直接展开正确地再现了定理预测的结构，直至 $15$ 次项。", "answer": "$$\n\\boxed{1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15}}\n$$", "id": "3084891"}, {"introduction": "这个神秘的五边形数级数的系数（$1, -1, -1, 1, 1, \\dots$）究竟代表什么？它们并非凭空出现，而是具有深刻的组合意义。这项练习将引导你从另一个角度——不同部分分拆（partitions into distinct parts）——来理解欧拉函数，你会发现级数的第 $n$ 项系数恰好是 $n$ 的偶数个不同部分分拆数与奇数个不同部分分拆数之差。[@problem_id:3013508]", "problem": "设 $q$ 是一个未定元，考虑形式积 $G(q) = \\prod_{m \\geq 1} \\left(1 - q^{m}\\right)$。该乘积是分拆成不同部分的带符号生成函数，即当 $G(q)$ 展开为形式幂级数时，$q^{n}$ 的系数是 $n$ 分拆成偶数个不同部分的分拆数与分拆成奇数个不同部分的分拆数之差。仅从这个乘积定义和刚才陈述的解释出发，确定 $G(q)$ 直到（并包括）15次项的前几个非零项的正确列表，并使用显式的小次数计算来纠正常见的误解，例如混淆指数族 $k(3k-1)/2$ 和 $k(3k+1)/2$，或错误地指定连续项的符号模式。哪个选项是正确的？\n\nA. $G(q) = 1 - q - q^{2} + q^{5} + q^{7} - q^{12} - q^{15} + O\\!\\left(q^{16}\\right)$\n\nB. $G(q) = 1 - q - q^{3} + q^{4} + q^{8} - q^{9} - q^{13} + O\\!\\left(q^{14}\\right)$\n\nC. $G(q) = 1 - q + q^{2} - q^{5} + q^{7} - q^{12} + q^{15} + O\\!\\left(q^{16}\\right)$\n\nD. $G(q) = 1 - q - q^{2} + q^{4} + q^{7} - q^{10} - q^{13} + O\\!\\left(q^{14}\\right)$", "solution": "该问题陈述被评估为**有效**。它在数学上和科学上是合理的、适定的和客观的。它提出了一个关于数论中一个标准结果——Euler 五边形数定理——的可验证问题，该定理建立在 Euler 函数 $G(q) = \\prod_{m \\geq 1} (1 - q^m)$ 的形式展开之上。问题要求基于第一性原理——直接计算和组合解释——来求解，这是一种合法且可行的方法。\n\n问题要求展开形式积 $G(q) = \\prod_{m \\geq 1} (1 - q^m)$ 直到 15 次项。$G(q)$ 展开式中 $q^n$ 的系数由 $n$ 分拆成偶数个不同部分的分拆数（记作 $d_e(n)$）与 $n$ 分拆成奇数个不同部分的分拆数（记作 $d_o(n)$）之差给出。设该系数为 $c_n = d_e(n) - d_o(n)$。我们将通过显式列出分拆来计算较小 $n$ 值的 $c_n$。\n\n对于 $n=0$：唯一的分拆是空分拆，它有 0 个部分。因为 0 是偶数，所以 $d_e(0) = 1$ 且 $d_o(0) = 0$。因此，$c_0 = 1$。\n\n对于 $n=1$：唯一的分拆成不同部分的分拆是 $(1)$。它有 1 个部分（奇数）。\n$d_e(1) = 0$，$d_o(1) = 1$。所以，$c_1 = 0 - 1 = -1$。\n\n对于 $n=2$：唯一的分拆成不同部分的分拆是 $(2)$。它有 1 个部分（奇数）。\n$d_e(2) = 0$，$d_o(2) = 1$。所以，$c_2 = 0 - 1 = -1$。\n\n对于 $n=3$：分拆成不同部分的分拆是 $(3)$ 和 $(2,1)$。\n$(3)$ 有 1 个部分（奇数）。$(2,1)$ 有 2 个部分（偶数）。\n$d_e(3) = 1$，$d_o(3) = 1$。所以，$c_3 = 1 - 1 = 0$。\n\n对于 $n=4$：分拆成不同部分的分拆是 $(4)$ 和 $(3,1)$。\n$(4)$ 有 1 个部分（奇数）。$(3,1)$ 有 2 个部分（偶数）。\n$d_e(4) = 1$，$d_o(4) = 1$。所以，$c_4 = 1 - 1 = 0$。\n\n对于 $n=5$：分拆成不同部分的分拆是 $(5)$、$(4,1)$ 和 $(3,2)$。\n$(5)$ 有 1 个部分（奇数）。$(4,1)$ 有 2 个部分（偶数）。$(3,2)$ 有 2 个部分（偶数）。\n$d_e(5) = 2$，$d_o(5) = 1$。所以，$c_5 = 2 - 1 = 1$。\n\n对于 $n=6$：分拆成不同部分的分拆是 $(6)$、$(5,1)$、$(4,2)$ 和 $(3,2,1)$。\n$(6)$ 有 1 个部分（奇数）。$(5,1)$ 有 2 个部分（偶数）。$(4,2)$ 有 2 个部分（偶数）。$(3,2,1)$ 有 3 个部分（奇数）。\n$d_e(6) = 2$，$d_o(6) = 2$。所以，$c_6 = 2 - 2 = 0$。\n\n对于 $n=7$：分拆成不同部分的分拆是 $(7)$、$(6,1)$、$(5,2)$、$(4,3)$ 和 $(4,2,1)$。\n$(7)$ 有 1 个部分（奇数）。$(6,1)$、$(5,2)$、$(4,3)$ 各有 2 个部分（偶数）。$(4,2,1)$ 有 3 个部分（奇数）。\n$d_e(7) = 3$，$d_o(7) = 2$。所以，$c_7 = 3 - 2 = 1$。\n\n到目前为止，级数为 $G(q) = 1 - q - q^2 + q^5 + q^7 + \\dots$。\n\n这些计算例证了 Franklin 的双射，这是一个组合证明，它表明对于大多数整数 $n$，$d_e(n) = d_o(n)$，因此 $c_n=0$。仅当 $n$ 是广义五边形数时，该双射才失效，广义五边形数是形如 $n = \\frac{j(3j-1)}{2}$（其中 $j$ 为任意非零整数）的整数。在这些情况下，$c_n = (-1)^j$。\n\n让我们找出 15 以内的广义五边形数：\n对于 $j=1$：$n = \\frac{1(3(1)-1)}{2} = \\frac{2}{2} = 1$。系数为 $c_1 = (-1)^1 = -1$。\n对于 $j=-1$：$n = \\frac{-1(3(-1)-1)}{2} = \\frac{-1(-4)}{2} = 2$。系数为 $c_2 = (-1)^{-1} = -1$。\n对于 $j=2$：$n = \\frac{2(3(2)-1)}{2} = \\frac{2(5)}{2} = 5$。系数为 $c_5 = (-1)^2 = 1$。\n对于 $j=-2$：$n = \\frac{-2(3(-2)-1)}{2} = \\frac{-2(-7)}{2} = 7$。系数为 $c_7 = (-1)^{-2} = 1$。\n对于 $j=3$：$n = \\frac{3(3(3)-1)}{2} = \\frac{3(8)}{2} = 12$。系数为 $c_{12} = (-1)^3 = -1$。\n对于 $j=-3$：$n = \\frac{-3(3(-3)-1)}{2} = \\frac{-3(-10)}{2} = 15$。系数为 $c_{15} = (-1)^{-3} = -1$。\n对于 $j=4$：$n = \\frac{4(3(4)-1)}{2} = \\frac{4(11)}{2} = 22$。这超出了所要求的次数。\n\n所有其他不在此列表中的 $n \\le 15$ 的整数（$3, 4, 6, 8, 9, 10, 11, 13, 14$）都不是广义五边形数，因此它们对应的系数为 $0$。这与我们对 $n=3, 4, 6$ 的显式计算相符。问题要求解决常见的误解。由正负 $j$ 产生的两个指数族是 $\\frac{k(3k-1)}{2}$（$1, 5, 12, \\dots$）和 $\\frac{k(3k+1)}{2}$（$2, 7, 15, \\dots$），其中 $k \\ge 1$。一个常见的错误是遗漏了其中一个族。另一个错误是错误地分配符号。符号是 $(-1)^j$，这导致了两个负数、两个正数、两个负数，依此类推的模式：$(-1, -1, +1, +1, -1, -1, \\dots)$。\n\n将直到 15 次项的各项组合起来，我们得到：\n$G(q) = c_0 + c_1 q + c_2 q^2 + \\dots + c_{15} q^{15} + O(q^{16})$\n$G(q) = 1 + (-1)q + (-1)q^2 + (0)q^3 + (0)q^4 + (1)q^5 + (0)q^6 + (1)q^7 + (0)q^8 + (0)q^9 + (0)q^{10} + (0)q^{11} + (-1)q^{12} + (0)q^{13} + (0)q^{14} + (-1)q^{15} + O(q^{16})$\n$G(q) = 1 - q - q^2 + q^5 + q^7 - q^{12} - q^{15} + O(q^{16})$\n\n现在，我们评估给出的每个选项。\n\nA. $G(q) = 1 - q - q^{2} + q^{5} + q^{7} - q^{12} - q^{15} + O\\!\\left(q^{16}\\right)$\n这个表达式与我们推导出的级数逐项匹配，包括指数（$1, 2, 5, 7, 12, 15$）及其对应的符号（$-, - , +, +, -, -$). 余项 $O(q^{16})$ 的阶是正确的，因为下一个非零项是 $n=22$。\n**结论：正确。**\n\nB. $G(q) = 1 - q - q^{3} + q^{4} + q^{8} - q^{9} - q^{13} + O\\!\\left(q^{14}\\right)$\n这个表达式包含不正确的指数。例如，它列出了 $q^3$ 的非零系数，而我们的计算表明 $c_3=0$。它还列出了 $q^4, q^8, q^9, q^{13}$ 的非零系数，这些都应该是零。它省略了项 $-q^2$。\n**结论：不正确。**\n\nC. $G(q) = 1 - q + q^{2} - q^{5} + q^{7} - q^{12} + q^{15} + O\\!\\left(q^{16}\\right)$\n这个表达式的指数正确，但有几个项的符号不正确。$q^2$ 的系数应该是 $-1$，而不是 $+1$。$q^5$ 的系数应该是 $+1$，而不是 $-1$。$q^{15}$ 的系数应该是 $-1$，而不是 $+1$。这些错误反映了对符号 $(-1)^j$ 如何确定的误解。\n**结论：不正确。**\n\nD. $G(q) = 1 - q - q^{2} + q^{4} + q^{7} - q^{10} - q^{13} + O\\!\\left(q^{14}\\right)$\n这个表达式包含不正确的指数。它列出了 $q^4, q^{10}, q^{13}$ 的非零系数，这些都应该是零。它省略了正确的项 $+q^5$。\n**结论：不正确。**\n\n根据所要求的第一性原理推导，只有选项 A 是正确的。", "answer": "$$\\boxed{A}$$", "id": "3013508"}, {"introduction": "欧拉五边形数定理最著名的应用之一，是为计算整数分拆函数 $p(n)$ 提供了一个极其高效的递推公式。这项练习不仅要求你推导出这个递推关系，更挑战你将其设计成一个具体的算法，并分析其计算效率。通过这个过程，你将体验到如何将纯粹的数论理论转化为强大的计算工具，架起理论数学与算法科学之间的桥梁。[@problem_id:3084897]", "problem": "设 $p(n)$ 表示非负整数 $n$ 的整数分拆数，并约定 $p(0)=1$。分拆函数的普通生成函数定义为\n$$\n\\sum_{n\\ge 0} p(n)\\, q^n = \\prod_{k\\ge 1} \\frac{1}{1 - q^k}.\n$$\n从这个生成函数恒等式和 $\\prod_{k\\ge 1} (1 - q^k)$ 的乘积展开式出发，推导出一个关于 $p(n)$ 的有限、符号交错的递推关系，其项由广义五边形数索引\n$$\ng_m = \\frac{m(3m-1)}{2}, \\quad m \\in \\mathbb{Z}\\setminus\\{0\\}.\n$$\n使用该递推关系设计一个算法，通过动态规划，按 $n$ 的升序计算所有 $n \\le N$ 的 $p(n)$，且仅使用先前已计算的值。确保您的算法：\n- 以自然顺序 $m=1,-1,2,-2,3,-3,\\dots$ 生成广义五边形数，并且对于每个 $n$，只使用那些满足 $g_m \\le n$ 的 $g_m$。\n- 将您的推导所隐含的适当符号模式应用于 $p(n)$ 递推关系中的每一项。\n- 统计计算整个表 $\\{p(0),p(1),\\dots,p(N)\\}$ 时执行的加法或减法运算的总次数；将每次加法或减法计为一次运算。\n\n用符号 $N$ 和函数 $G(N)$（小于或等于 $N$ 的广义五边形数的数量）来分析时间复杂度。然后，对您的实现进行经验性测量，以便为每个选定的 $N$ 报告以下量：\n1. $p(N)$，\n2. $G(N)$，以及\n3. $T(N)$，即通过您的算法计算 $\\{p(n)\\}_{n=0}^{N}$ 所使用的加法或减法运算的总次数。\n\n测试套件：\n- 使用以下 $N$ 值：$0$, $1$, $5$, $50$, $100$, $200$。\n- 对于测试套件中的每个 $N$，返回列表 $[N, p(N), G(N), T(N)]$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个由方括号括起来的逗号分隔列表。每个元素本身都是一个对应于一个测试用例的列表。例如，它应该看起来像\n$$\n[\\,[N_1,p(N_1),G(N_1),T(N_1)],\\,[N_2,p(N_2),G(N_2),T(N_2)],\\,\\dots\\,].\n$$\n输出列表中只应出现整数。本问题不涉及物理单位、角度或百分比。", "solution": "我们从分拆的基础生成函数恒等式开始，\n$$\n\\sum_{n\\ge 0} p(n)\\, q^n = \\prod_{k\\ge 1} \\frac{1}{1 - q^k}.\n$$\n乘积 $\\prod_{k\\ge 1} (1 - q^k)$ 有一个经典的带符号展开式，称为 Euler 五边形数定理：\n$$\n\\prod_{k\\ge 1} (1 - q^k) = \\sum_{m\\in \\mathbb{Z}} (-1)^m \\, q^{\\frac{m(3m-1)}{2}}.\n$$\n整数\n$$\ng_m = \\frac{m(3m-1)}{2}, \\quad m\\in \\mathbb{Z},\n$$\n被称为广义五边形数；通过取 $m=1,-1,2,-2,3,-3,\\dots$ 可以得到它们的自然顺序，这会产生严格递增序列 $1,2,5,7,12,15,22,26,\\dots$。\n\n将这两个级数相乘，\n$$\n\\left(\\sum_{n\\ge 0} p(n)\\, q^n\\right)\\left(\\sum_{m\\in \\mathbb{Z}} (-1)^m \\, q^{g_m}\\right) = 1,\n$$\n并对 $n\\ge 1$ 比较 $q^n$ 的系数，得到\n$$\n\\sum_{m\\in \\mathbb{Z}} (-1)^m \\, p(n - g_m) = 0,\n$$\n其中我们使用 $p(k)=0$ (对于 $k0$) 和 $p(0)=1$。解出 $p(n)$ 得到有限递推关系\n$$\np(n) = \\sum_{\\substack{m\\in \\mathbb{Z}\\setminus\\{0\\} \\\\ g_m \\le n}} (-1)^{m-1} \\, p(n - g_m).\n$$\n按 $m=1,-1,2,-2,3,-3,\\dots$ 的顺序排列 $m$ 表明，符号模式以两个为一组重复：$+,+,-,-,+,+,-,-,\\dots$，对应于 $m=1,-1,2,-2,\\dots$。\n\n算法设计。\n- 通过公式\n$$\ng_{+k} = \\frac{k(3k-1)}{2}, \\quad g_{-k} = \\frac{k(3k+1)}{2}, \\quad k=1,2,3,\\dots,\n$$\n预计算不超过 $N$ 的广义五边形数列表，按 $m=1,-1,2,-2,\\dots$ 的顺序，并在两个数都超过 $N$ 时停止。\n- 维护一个长度为 $N+1$ 的动态规划数组 $P$，并设 $P[0]=1$。\n- 对于每个 $n=1,2,\\dots,N$，计算\n$$\nP[n] = \\sum_{i=1}^{L(n)} s_i \\, P[n - g_i],\n$$\n其中 $\\{g_i\\}_{i\\ge 1}$ 是预计算的广义五边形数，$L(n)$ 是满足 $g_{L(n)} \\le n$ 的最大索引，而 $s_i \\in \\{+1,-1\\}$ 遵循模式 $+,+,-,-,+,+,-,-,\\dots$。每一项都是一次加法或减法，计入运算总数。这样可以得到所有 $n\\le N$ 的 $p(n)$。\n\n正确性源于生成函数乘积的系数提取以及广义五边形数的定义。终止性得到保证，因为对于固定的 $n$，只有有限个 $g_m$ 满足 $g_m \\le n$。\n\n复杂度分析。\n令 $G(n)$ 为小于或等于 $n$ 的广义五边形数的数量。计算 $p(n)$ 的内循环执行恰好 $G(n)$ 次加法或减法。因此，计算 $\\{p(0),p(1),\\dots,p(N)\\}$ 的总运算次数为\n$$\nT(N) = \\sum_{n=1}^{N} G(n).\n$$\n渐近地，由于 $g_{\\pm k}$ 的行为类似于 $\\frac{3}{2}k^2$，满足 $g_{\\pm k} \\le n$ 的最大 $k$ 满足 $k \\approx \\sqrt{\\frac{2n}{3}}$，并且每个 $k$ 大约有两个广义五边形数（对于 $\\pm k$ 对）。因此\n$$\nG(n) = \\Theta\\!\\left(\\sqrt{n}\\right),\n$$\n并且\n$$\nT(N) = \\sum_{n=1}^{N} \\Theta\\!\\left(\\sqrt{n}\\right) = \\Theta\\!\\left(N^{3/2}\\right).\n$$\n用大O表示法（Big O），这给出 $T(N) = O\\!\\left(N\\cdot G(N)\\right)$ 和 $T(N) = O\\!\\left(N^{3/2}\\right)$。\n\n经验性报告。\n对于每个测试用例的 $N$ 值，程序将：\n- 生成不超过 $N$ 的广义五边形数并计数 $G(N)$。\n- 通过递推关系计算所有 $n\\le N$ 的 $p(n)$ 并计数 $T(N)$。\n- 输出四元组 $[N, p(N), G(N), T(N)]$。\n\n边界情况。\n- 对于 $N=0$，我们有 $p(0)=1$, $G(0)=0$, 且 $T(0)=0$。\n- 对于小的 $N$，算法自然只使用最初的几个广义五边形数。\n- 对于较大的 $N$，动态规划依赖于先前计算的值，并由于整数算术而保持准确。\n\n最终输出将这些针对每个 $N$ 的结果聚合成单行上的一个列表，以匹配指定的格式。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\n\ndef generate_generalized_pentagonals(N: int):\n    \"\"\"\n    Generate generalized pentagonal numbers up to N in the order:\n    k=1,-1,2,-2,3,-3,...\n    Returns:\n        g_list: list of generalized pentagonal numbers = N in Euler order\n        s_list: corresponding signs [+,+,-,-,+,+,-,-,...] for the recurrence relation\n    \"\"\"\n    g_list = []\n    s_list = []\n    k = 1\n    while True:\n        # Calculate g_k and g_{-k}\n        g_pos = k * (3 * k - 1) // 2\n        g_neg = k * (3 * k + 1) // 2\n        \n        added_any = False\n        \n        # Add g_pos if it's within the bound N\n        if g_pos = N:\n            g_list.append(g_pos)\n            added_any = True\n        \n        # Add g_neg if it's within the bound N\n        if g_neg = N:\n            g_list.append(g_neg)\n            added_any = True\n            \n        if not added_any:\n            break\n        k += 1\n\n    # The recurrence p(n) = ... + (-1)^{k-1}p(n-g_k) + (-1)^{k-1}p(n-g_{-k}) + ...\n    # This means the sign pattern is ++--++--...\n    # The following loop correctly assigns this pattern to the generated list.\n    final_s_list = []\n    for i in range(len(g_list)):\n        # i corresponds to the sequence 0, 1, 2, 3, ...\n        # Indices 0,1 -> k=1 -> sign +1\n        # Indices 2,3 -> k=2 -> sign -1\n        # This is equivalent to checking if floor(i/2) is even or odd.\n        # sign = (-1)^floor(i/2) which is also (-1)^(k-1)\n        if (i // 2) % 2 == 0:\n            final_s_list.append(1)\n        else:\n            final_s_list.append(-1)\n            \n    return g_list, final_s_list\n\ndef partitions_up_to(N: int):\n    \"\"\"\n    Compute p(n) for 0 = n = N using Euler's pentagonal recurrence.\n    Returns:\n        P: list of p(n) values for n=0..N\n        term_count: total number of additions/subtractions used\n        gp_count: G(N), number of generalized pentagonal numbers = N\n    \"\"\"\n    if N  0:\n        return [], 0, 0\n    \n    gp, signs = generate_generalized_pentagonals(N)\n    \n    P = [0] * (N + 1)\n    P[0] = 1\n    term_count = 0\n    for n in range(1, N + 1):\n        total = 0\n        for i, g in enumerate(gp):\n            if g > n:\n                break\n            total += signs[i] * P[n - g]\n            term_count += 1\n        P[n] = total\n    return P, term_count, len(gp)\n\ndef solve():\n    # Define the test cases from the problem statement.\n    test_cases = [0, 1, 5, 50, 100, 200]\n\n    results = []\n    for N in test_cases:\n        if N == 0:\n            results.append([0, 1, 0, 0])\n            continue\n        P, term_count, gp_count = partitions_up_to(N)\n        results.append([N, P[N], gp_count, term_count])\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3084897"}]}