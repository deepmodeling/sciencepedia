{"hands_on_practices": [{"introduction": "理论的理解需要通过实践来巩固。让我们从最基本的情形开始：一维区间。这个练习要求我们通过最小化瑞利商来计算固定在两端的弦（即区间 $(0,L)$）的最低振动频率，也就是拉普拉斯算子的第一个狄利克雷特征值。这个过程不仅是一个具体的计算，更是一个展示变分法基本思想的经典范例，它将引导我们推导出控制系统行为的欧拉-拉格朗日方程。[@problem_id:3076328]", "problem": "考虑一维黎曼流形（区间）$(0,L)$，其上配备标准度量 $g=dx^{2}$ 和相关的体积元 $dV=dx$。对于索伯列夫空间 $H_{0}^{1}(0,L)$ 中（在边界上为零）的函数 $u$，定义瑞利商\n$$\nR(u)=\\frac{\\int_{0}^{L} |u'(x)|^{2}\\,dx}{\\int_{0}^{L} |u(x)|^{2}\\,dx},\n$$\n其中 $u\\not\\equiv 0$。$(0,L)$ 上拉普拉斯-贝尔特拉米算子的第一狄利克雷特征值 $\\lambda_{1}$ 被刻画为 $R(u)$ 在所有非零 $u\\in H_{0}^{1}(0,L)$ 上的下确界。\n\n从上述变分刻画和基本变分法出发，通过推导在单位$L^{2}$范数约束下极小化子的欧拉-拉格朗日方程，并求解所得的边值问题，来计算 $\\lambda_{1}$ 的精确值。然后，通过一个重新缩放区间长度的变量代换，直接从瑞利商的定义出发，验证 $\\lambda_{1}$ 与 $L^{-2}$ 的缩放关系。\n\n请以 $L$ 的单个简化解析表达式的形式给出您的最终答案。无需四舍五入，且不涉及单位。", "solution": "我们在区间 $(0,L)$ 上进行研究，其标准度量为 $g=dx^{2}$。对于 $u\\in H_{0}^{1}(0,L)$ 且 $u\\not\\equiv 0$，瑞利商为\n$$\nR(u)=\\frac{\\int_{0}^{L} |u'(x)|^{2}\\,dx}{\\int_{0}^{L} |u(x)|^{2}\\,dx}.\n$$\n根据第一狄利克雷特征值的变分刻画，\n$$\n\\lambda_{1}=\\inf_{u\\in H_{0}^{1}(0,L),\\,u\\not\\equiv 0} R(u).\n$$\n为计算 $\\lambda_{1}$，我们建立以下约束极小化问题：\n$$\n\\min\\left\\{\\int_{0}^{L} |u'(x)|^{2}\\,dx:\\ u\\in H_{0}^{1}(0,L),\\ \\int_{0}^{L} |u(x)|^{2}\\,dx=1\\right\\}.\n$$\n根据变分法中的直接方法，存在一个极小化子 $u$。为单位$L^2$约束引入一个拉格朗日乘子 $\\lambda\\in\\mathbb{R}$，并考虑泛函\n$$\n\\mathcal{F}(u)=\\int_{0}^{L} |u'(x)|^{2}\\,dx-\\lambda\\left(\\int_{0}^{L} |u(x)|^{2}\\,dx-1\\right).\n$$\n对于一个光滑紧支集变分 $\\varphi\\in C_{c}^{\\infty}(0,L)$，在一阶上满足 $\\int_{0}^{L} 2u\\varphi\\,dx=0$（执行约束条件），$\\mathcal{F}$ 在 $u$ 处的平稳性条件得出\n$$\n0=\\left.\\frac{d}{d\\epsilon}\\right|_{\\epsilon=0}\\mathcal{F}(u+\\epsilon\\varphi)=2\\int_{0}^{L} u'(x)\\varphi'(x)\\,dx-2\\lambda\\int_{0}^{L} u(x)\\varphi(x)\\,dx.\n$$\n对第一项进行分部积分，并利用 $u(0)=u(L)=0$（因此对于具有紧支集或在边界上为零的 $\\varphi$，边界项消失），我们得到\n$$\n\\int_{0}^{L} \\big(-u''(x)-\\lambda u(x)\\big)\\,\\varphi(x)\\,dx=0\\quad\\text{for all}\\ \\varphi.\n$$\n因此 $u$ 满足欧拉-拉格朗日方程\n$$\n-u''(x)=\\lambda u(x)\\quad\\text{for}\\ x\\in(0,L),\\qquad u(0)=0,\\quad u(L)=0.\n$$\n我们求解这个二阶线性常微分方程。如果 $\\lambda>0$，记 $\\lambda=\\mu^{2}$，其中 $\\mu>0$。那么通解是\n$$\nu(x)=A\\sin(\\mu x)+B\\cos(\\mu x).\n$$\n代入 $u(0)=0$ 得到 $B=0$，所以 $u(x)=A\\sin(\\mu x)$。代入 $u(L)=0$ 得到 $\\sin(\\mu L)=0$，因此 $\\mu L=n\\pi$，其中 $n\\in\\mathbb{Z}$ 是某个整数。为了得到 $A\\neq 0$ 的非平凡解，我们需要 $n\\in\\mathbb{Z}\\setminus\\{0\\}$，并且由于 $u$ 和 $-u$ 代表了同一个特征函数（仅相差一个符号），我们取 $n\\in\\mathbb{N}$。因此，$\\lambda$ 的允许值为\n$$\n\\lambda_{n}=\\mu^{2}=\\left(\\frac{n\\pi}{L}\\right)^{2},\\quad n\\in\\mathbb{N}.\n$$\n第一狄利克雷特征值是这些值中最小的一个，在 $n=1$ 时取到：\n$$\n\\lambda_{1}=\\left(\\frac{\\pi}{L}\\right)^{2}.\n$$\n为了直接从瑞利商验证与 $L^{-2}$ 的缩放关系，考虑任意 $u\\in H_{0}^{1}(0,L)$，并定义 $w:(0,1)\\to\\mathbb{R}$ 为 $w(y)=u(Ly)$。于是有 $w(0)=u(0)=0$ 和 $w(1)=u(L)=0$，因此 $w\\in H_{0}^{1}(0,1)$。通过变量代换 $x=Ly$ 来计算 $R(u)$ 的分子和分母：\n$$\n\\int_{0}^{L} |u'(x)|^{2}\\,dx=\\int_{0}^{1} \\left|u'(Ly)\\right|^{2} L\\,dy=\\int_{0}^{1} \\left|\\frac{w'(y)}{L}\\right|^{2} L\\,dy=\\frac{1}{L}\\int_{0}^{1} |w'(y)|^{2}\\,dy,\n$$\n以及\n$$\n\\int_{0}^{L} |u(x)|^{2}\\,dx=\\int_{0}^{1} |u(Ly)|^{2} L\\,dy=L\\int_{0}^{1} |w(y)|^{2}\\,dy.\n$$\n因此\n$$\nR(u)=\\frac{\\frac{1}{L}\\int_{0}^{1} |w'(y)|^{2}\\,dy}{L\\int_{0}^{1} |w(y)|^{2}\\,dy}=\\frac{1}{L^{2}}\\cdot \\frac{\\int_{0}^{1} |w'(y)|^{2}\\,dy}{\\int_{0}^{1} |w(y)|^{2}\\,dy}.\n$$\n对 $(0,L)$ 上的非零 $u$ 取下确界，完全对应于对 $(0,1)$ 上的非零 $w$ 取下确界，所以\n$$\n\\lambda_{1}(L)=\\inf_{u\\neq 0} R(u)=\\frac{1}{L^{2}}\\,\\inf_{w\\neq 0}\\frac{\\int_{0}^{1} |w'(y)|^{2}\\,dy}{\\int_{0}^{1} |w(y)|^{2}\\,dy}=\\frac{1}{L^{2}}\\,\\lambda_{1}(1).\n$$\n从 $L=1$ 的边值问题中，我们已求得 $\\lambda_{1}(1)=\\pi^{2}$。因此，\n$$\n\\lambda_{1}(L)=\\frac{\\pi^{2}}{L^{2}},\n$$\n这既计算出了 $\\lambda_{1}$，也验证了它与 $L^{-2}$ 的缩放关系。", "answer": "$$\\boxed{\\frac{\\pi^{2}}{L^{2}}}$$", "id": "3076328"}, {"introduction": "接下来，我们将研究一个没有边界的闭合一维流形——标准圆环 $S^1$。与有边界的区间不同，圆环的拓扑结构使其特别适合使用傅里叶分析。这个练习将引导你使用傅里叶级数来表达瑞利商，从而将一个微分方程的最小化问题转化为一个关于傅里叶系数的代数优化问题，清晰地揭示了频谱与几何周期性之间的深刻联系。[@problem_id:3076330]", "problem": "设 $S^{1}$ 为总长度为 $2\\pi$ 的标准圆，其上赋有标准黎曼度量 $g = d\\theta^{2}$，其中 $\\theta \\in [0,2\\pi)$ 是角坐标，黎曼体积形式为 $d\\theta$。考虑作用于光滑函数 $u \\in C^{\\infty}(S^{1})$ 上的非负 Laplace–Beltrami 算子 $\\Delta = -\\mathrm{div}\\,\\nabla$。对于平均值为零的函数，定义瑞利商\n$$\nR(u) \\;=\\; \\frac{\\int_{S^{1}} |\\nabla u|^{2}\\, d\\theta}{\\int_{S^{1}} u^{2}\\, d\\theta},\n\\quad \\text{其约束条件为 } \\int_{S^{1}} u\\, d\\theta \\;=\\; 0,\n$$\n在给定度量下，其中 $|\\nabla u|^{2} = (u_{\\theta})^{2}$。仅使用黎曼几何的基本定义和 $S^{1}$ 上的标准傅里叶分析，确定谱隙 $\\lambda_{1}$（定义为所有平均值为零的非零光滑函数 $u$ 的 $R(u)$ 的最小值），并找出（在不考虑归一化的情况下）所有达到此最小值的函数。\n\n将 $\\lambda_{1}$ 的最终值表示为一个精确数。无需四舍五入。最终答案中不要包含任何单位。除了给出 $\\lambda_{1}$ 的数值，还需在解题过程中提供最小化函数的明确描述。", "solution": "该问题要求找到圆 $S^1$ 上平均值为零的函数的瑞利商的最小值。根据变分原理，这个最小值是 Laplace–Beltrami 算子的第一个非零特征值，也称为谱隙 $\\lambda_{1}$。\n\n流形是标准圆 $S^1$，坐标为 $\\theta \\in [0, 2\\pi)$。黎曼度量为 $g = d\\theta^2$，体积形式为 $d\\theta$。Laplace–Beltrami 算子为 $\\Delta = -\\frac{d^2}{d\\theta^2}$。对于光滑函数 $u \\in C^{\\infty}(S^1)$，瑞利商由下式给出：\n$$\nR(u) = \\frac{\\int_{S^{1}} |\\nabla u|^{2}\\, d\\theta}{\\int_{S^{1}} u^{2}\\, d\\theta}\n$$\n在给定坐标下， $|\\nabla u|^2 = g^{11} (\\partial_1 u)(\\partial_1 u) = 1 \\cdot (u_\\theta)^2 = (u_\\theta)^2$。积分是在整个圆上进行的，即从 $\\theta=0$到 $\\theta=2\\pi$。分析仅限于满足平均值为零约束条件的非零函数 $u$：\n$$\n\\int_{S^{1}} u\\, d\\theta = \\int_0^{2\\pi} u(\\theta) \\,d\\theta = 0\n$$\n\n我们将使用傅里叶分析来解决这个问题。$S^1$ 上的任何光滑、实值、周期函数 $u(\\theta)$ 都可以用其傅里叶级数表示：\n$$\nu(\\theta) = \\frac{a_0}{2} + \\sum_{k=1}^{\\infty} \\left( a_k \\cos(k\\theta) + b_k \\sin(k\\theta) \\right)\n$$\n约束条件 $\\int_0^{2\\pi} u(\\theta) \\,d\\theta = 0$ 意味着傅里叶级数的常数项必须为零。\n$$\n\\int_0^{2\\pi} \\left( \\frac{a_0}{2} + \\sum_{k=1}^{\\infty} \\left( a_k \\cos(k\\theta) + b_k \\sin(k\\theta) \\right) \\right) d\\theta = \\pi a_0 = 0\n$$\n这要求 $a_0=0$。因此，任何满足约束条件的函数 $u$ 都具有以下形式：\n$$\nu(\\theta) = \\sum_{k=1}^{\\infty} \\left( a_k \\cos(k\\theta) + b_k \\sin(k\\theta) \\right)\n$$\n由于 $u$ 是一个非零函数，对于 $k \\ge 1$，至少有一个系数 $a_k$ 或 $b_k$ 必须非零。\n\n接下来，我们用这些傅里叶系数来表示瑞利商的分子和分母。\n分母是 $u$ 的 $L^2$-范数的平方：\n$$\n\\int_0^{2\\pi} u(\\theta)^2 \\,d\\theta = \\int_0^{2\\pi} \\left( \\sum_{k=1}^{\\infty} (a_k \\cos(k\\theta) + b_k \\sin(k\\theta)) \\right)^2 d\\theta\n$$\n根据 Parseval 恒等式（由三角函数在 $[0, 2\\pi]$ 上的正交性得出），我们有：\n$$\n\\int_0^{2\\pi} u(\\theta)^2 \\,d\\theta = \\sum_{k=1}^{\\infty} \\left( a_k^2 \\int_0^{2\\pi} \\cos^2(k\\theta)d\\theta + b_k^2 \\int_0^{2\\pi} \\sin^2(k\\theta)d\\theta \\right) = \\pi \\sum_{k=1}^{\\infty} (a_k^2 + b_k^2)\n$$\n\n分子涉及 $u$ 的导数 $u_\\theta = \\frac{du}{d\\theta}$。由于 $u$ 是光滑的，我们可以对其傅里叶级数逐项求导：\n$$\nu_\\theta(\\theta) = \\sum_{k=1}^{\\infty} \\left( -ka_k \\sin(k\\theta) + kb_k \\cos(k\\theta) \\right)\n$$\n我们计算 $(u_\\theta)^2$ 的积分：\n$$\n\\int_0^{2\\pi} (u_\\theta(\\theta))^2 \\,d\\theta = \\int_0^{2\\pi} \\left( \\sum_{k=1}^{\\infty} (-ka_k \\sin(k\\theta) + kb_k \\cos(k\\theta)) \\right)^2 d\\theta\n$$\n对函数 $u_\\theta(\\theta)$ 应用 Parseval 恒等式，我们得到：\n$$\n\\int_0^{2\\pi} (u_\\theta(\\theta))^2 \\,d\\theta = \\pi \\sum_{k=1}^{\\infty} \\left( (-ka_k)^2 + (kb_k)^2 \\right) = \\pi \\sum_{k=1}^{\\infty} k^2(a_k^2 + b_k^2)\n$$\n\n现在，我们用这些表达式来构造瑞利商：\n$$\nR(u) = \\frac{\\pi \\sum_{k=1}^{\\infty} k^2(a_k^2 + b_k^2)}{\\pi \\sum_{k=1}^{\\infty} (a_k^2 + b_k^2)} = \\frac{\\sum_{k=1}^{\\infty} k^2(a_k^2 + b_k^2)}{\\sum_{k=1}^{\\infty} (a_k^2 + b_k^2)}\n$$\n令 $c_k = a_k^2 + b_k^2$。由于 $u$ 是一个非零函数，对于 $k \\ge 1$，至少有一个 $c_k > 0$。瑞利商的表达式变成了数 $k^2$（其中 $k=1, 2, 3, \\dots$）的一个加权平均：\n$$\nR(u) = \\frac{\\sum_{k=1}^{\\infty} k^2 c_k}{\\sum_{k=1}^{\\infty} c_k}\n$$\n为了找到 $R(u)$ 的最小值，我们需要找到这个加权平均的最小可能值。被平均的数值是 $1^2, 2^2, 3^2, \\dots$，即 $1, 4, 9, \\dots$。这些数值中的最小值是 $1$。当所有的权重都放在最小值上时，加权平均将达到最小，即当对于所有 $k \\ge 2$ 都有 $c_k = 0$，且 $c_1 > 0$ 时。\n在这种情况下，商变为：\n$$\n\\lambda_1 = \\min R(u) = \\frac{1^2 \\cdot c_1}{c_1} = 1\n$$\n对于所有 $k \\ge 2$ 都有 $a_k = b_k = 0$ 的函数，可以达到这个最小值。条件 $c_1 > 0$ 意味着 $a_1^2 + b_1^2 > 0$，因此 $a_1$ 或 $b_1$ 中至少有一个非零。\n因此，达到此最小值的函数形式为：\n$$\nu(\\theta) = a_1 \\cos(\\theta) + b_1 \\sin(\\theta)\n$$\n其中 $a_1$ 和 $b_1$ 是不全为零的实常数。这是一个二维的函数空间。这些是拉普拉斯算子 $\\Delta = -\\frac{d^2}{d\\theta^2}$ 对应于特征值 $\\lambda_1 = 1$ 的特征函数，因为 $\\Delta(\\cos(\\theta)) = \\cos(\\theta)$ 且 $\\Delta(\\sin(\\theta)) = \\sin(\\theta)$。\n\n因此，谱隙为 $\\lambda_1=1$。最小化函数是 $\\cos(\\theta)$ 和 $\\sin(\\theta)$ 的任意非零线性组合。", "answer": "$$\\boxed{1}$$", "id": "3076330"}, {"introduction": "虽然解析解在理论上十分优美，但对于现实世界中复杂几何形状的区域，我们往往无法求得解析解。这个实践练习将带领我们从连续的理论世界跨入离散的计算世界。我们将通过有限元方法 (FEM) 在一个方形区域上近似求解第一个狄利克雷特征值，并亲手实现瑞利商迭代法，这是一个在数值代数中极其重要的算法，它在离散层面完美地模拟了连续变分原理。[@problem_id:3076310]", "problem": "考虑一个带边界的紧致黎曼流形上的 Laplace–Beltrami 算子。在配备了欧几里得度量 $g = I$ 的欧几里得单位正方形域 $\\Omega = [0,1] \\times [0,1]$ 上，Laplace–Beltrami 算子简化为标准拉普拉斯算子。在 $\\partial \\Omega$ 上施加齐次狄利克雷边界条件，使得容许函数在边界上为零。第一狄利克雷特征值通过在非零容许函数上最小化瑞利商进行变分表征。在有限元近似中，连续函数空间被 $\\Omega$ 三角剖分上的分片线性空间所取代，连续双线性形式由其离散模拟来近似，从而产生一个广义对称特征值问题。\n\n任务：\n- 从第一性原理和标准定义出发，在一个 $\\Omega$ 的三角化分区上实现分片线性有限元方法。该分区通过将单位正方形细分为 $N_x \\times N_y$ 的均匀矩形网格，并将每个矩形沿一致的对角线分割成两个三角形而获得。分别使用与狄利克雷能量和 $L^2$ 内积相关的双线性形式的标准定义，组装离散刚度矩阵和质量矩阵。通过限制到内部节点来施加齐次狄利克雷边界条件。\n- 对组装矩阵所产生的对称广义特征问题实现瑞利商迭代法，使用由离散质量矩阵定义的内积。从第一性原理开始：定义由刚度和质量双线性形式所产生的瑞利商，并推导出一个迭代方案，该方案通过当前的瑞利商进行重复移位，并求解一个线性系统来更新候选特征向量，每次更新后根据质量内积进行归一化。确保该实现在数值上是稳定的，并能处理当移位接近特征值时出现的近奇异性。如果需要，可使用任何基于底层定义的、鲁棒且一致的策略来正则化移位后的系统。\n- 在内部自由度数量为 $1$ 的退化边界情况下，检测到此情况并直接返回唯一非零方向的瑞利商，无需迭代，并引用变分表征，即在一维试验空间中该商是精确的。\n\n您可以作为基础使用的定义：\n- 在有限维内积空间中，一个非零向量的瑞利商是由刚度双线性形式所产生的能量与由质量双线性形式所产生的范数的平方之比。\n- 与齐次狄利克雷边界条件相关的第一个特征值是瑞利商在所有非零容许函数上的最小值。\n\n您的程序必须：\n- 为以下每个测试用例 $(N_x,N_y)$ 构建有限元网格并组装矩阵：\n    - 测试 $1$：$(N_x,N_y)=(2,2)$，表示一个非常粗糙的网格，在施加狄利克雷边界条件后恰好产生 $1$ 个内部节点。这是一个边界情况。\n    - 测试 $2$：$(N_x,N_y)=(6,6)$，表示一个中等大小的网格。\n    - 测试 $3$：$(N_x,N_y)=(12,12)$，表示一个更精细的、接近连续介质状态的网格。\n- 对于每个测试，使用带有确定性初始化的瑞利商迭代法。您必须确保算法收敛到第一特征对，例如，通过基于定义的、使用次极值移位的反迭代法来进行有原则的“热启动”。\n- 对于每个测试，输出第一狄利克雷特征值的近似值，该值是收敛后的特征向量关于组装矩阵的瑞利商。在此数学设定中没有物理单位。\n- 最终输出格式：您的程序应生成一行输出，其中包含一个用逗号分隔的实数列表，四舍五入到恰好 $6$ 位小数，并用方括号括起来（例如，$[19.500000,19.739208,19.739209]$）。这三个数字必须按照测试 $1$–$3$ 的顺序排列。\n\n约束和说明：\n- 不涉及角度，因此不需要角度单位。\n- 您不得读取任何输入。所有参数均按上述规定固定。\n- 实现必须遵循瑞利商的逻辑及其在源自黎曼流形上对称双线性形式的特征值问题中的作用。", "solution": "所提出的问题是有效的。所有组成部分都是自洽的，科学上基于偏微分方程和数值分析理论，并以客观、数学的精度进行陈述。它代表了计算数学中一个标准但并非无足轻重的练习。\n\n**1. 问题验证**\n\n*   **给定条件提取**：\n    *   **域**：单位正方形 $\\Omega = [0,1] \\times [0,1]$。\n    *   **算子**：Laplace–Beltrami，简化为标准拉普拉斯算子 $-\\nabla^2$。\n    *   **边界条件**：齐次狄利克雷（在 $\\partial\\Omega$ 上 $u=0$）。\n    *   **变分原理**：第一特征值 $\\lambda_1$ 是瑞利商 $R(u) = \\int_\\Omega |\\nabla u|^2 dV / \\int_\\Omega u^2 dV$ 在容许函数 $u$ 上的最小值。\n    *   **离散化**：在三角化网格上的分片线性有限元法 (FEM)。\n    *   **网格**：一个均匀的 $N_x \\times N_y$ 矩形网格，每个矩形沿一致的对角线分割成两个三角形。\n    *   **代数问题**：一个由 FEM 离散化推导出的广义对称特征值问题 $A\\mathbf{u} = \\lambda M\\mathbf{u}$，其中 $A$ 是刚度矩阵，$M$ 是质量矩阵。\n    *   **边界实现**：限制于有限元网格的内部节点。\n    *   **求解器**：瑞利商迭代法 (RQI)，从第一性原理实现。\n    *   **特殊情况**：对于单个内部自由度，直接计算瑞利商。\n    *   **测试用例**：$(N_x, N_y) = \\{(2,2), (6,6), (12,12)\\}$。\n    *   **输出**：三个测试用例计算出的第一特征值的列表，四舍五入到 6 位小数。\n\n*   **验证结论**：该问题是适定的、科学上合理的且客观的。它没有违反任何无效性标准。该公式是有限元法（FEM）在椭圆特征值问题中的经典应用。要求从第一性原理出发实现，并处理特定的数值和边界情况，是对理解能力的严格考验。我们可以继续进行。\n\n**2. 解法推导**\n\n**基于原理的设计**\n核心原理是将连续变分问题转化为有限维代数问题。容许函数的函数空间由定义在域 $\\Omega$ 三角剖分上的分片线性函数空间来近似。\n\n**I. 有限元离散化**\n域 $\\Omega = [0,1]\\times[0,1]$ 被划分为一个 $N_x \\times N_y$ 的矩形网格。然后，每个矩形通过一条一致的对角线（例如，从左下到右上，或者如实现中那样，从左上到右下）被细分为两个直角三角形单元。这样总共产生 $2 N_x N_y$ 个三角形。\n\n在此网格上，我们定义一组分片线性的“帽子”函数基 $\\phi_k(x,y)$，其中每个 $\\phi_k$ 在节点 $k$ 处等于 $1$，在所有其他节点处等于 $0$。我们有限维空间中的任意函数 $u(x,y)$ 则是线性组合 $u(x,y) = \\sum_k u_k \\phi_k(x,y)$，其中 $u_k$ 是节点值。\n\n将此展开式代入瑞利商得到：\n$$\nR(u) = \\frac{\\int_\\Omega |\\nabla (\\sum_k u_k \\phi_k)|^2 dA}{\\int_\\Omega (\\sum_k u_k \\phi_k)^2 dA} = \\frac{\\sum_{i,j} u_i u_j \\int_\\Omega \\nabla\\phi_i \\cdot \\nabla\\phi_j dA}{\\sum_{i,j} u_i u_j \\int_\\Omega \\phi_i \\phi_j dA} = \\frac{\\mathbf{u}^T A \\mathbf{u}}{\\mathbf{u}^T M \\mathbf{u}}\n$$\n其中 $\\mathbf{u}$ 是节点系数向量 $[u_k]$，矩阵 $A$（刚度）和 $M$（质量）的元素为：\n*   $A_{ij} = \\int_\\Omega \\nabla\\phi_i \\cdot \\nabla\\phi_j \\, dA$（来自狄利克雷能量双线性形式）。\n*   $M_{ij} = \\int_\\Omega \\phi_i \\phi_j \\, dA$（来自 $L^2$ 内积双线性形式）。\n\n这些全局矩阵是通过对每个三角形计算的局部单元矩阵 $A^e$ 和 $M^e$ 的贡献求和来组装的。对于一个顶点为 $p_1, p_2, p_3$ 的三角形 $T$，局部刚度矩阵的元素由 $A^e_{ij} = ( \\nabla\\phi_i \\cdot \\nabla\\phi_j ) \\cdot \\text{Area}(T)$ 给出。使用重心坐标，这可以通过公式 $A^e_{ij} = \\frac{1}{4\\cdot \\text{Area}(T)} (b_i b_j + c_i c_j)$ 计算，其中 $b_i$ 和 $c_i$ 取决于顶点坐标。线性单元的局部质量矩阵具有标准形式 $M^e = \\frac{\\text{Area}(T)}{12} \\begin{pmatrix} 211\\\\121\\\\112 \\end{pmatrix}$。\n\n**II. 边界条件**\n齐次狄利克雷条件（在 $\\partial\\Omega$ 上 $u=0$）通过消除 $A$ 和 $M$ 中对应于边界节点的行和列来施加。这将系统简化为 $(N_x-1)(N_y-1)$ 个内部节点。\n\n**III. 退化情况：$(N_x, N_y) = (2,2)$**\n对于 $N_x=2, N_y=2$ 的情况，恰好有 $(2-1)(2-1)=1$ 个内部节点。简化后的系统是 $1 \\times 1$ 的：$A_{red} u_1 = \\lambda M_{red} u_1$。根据变分表征，瑞利商由第一特征函数最小化。在一维试验空间中，对于单个基函数，该商是精确的。因此，特征值可由比率 $\\lambda_1 = A_{red}[0,0] / M_{red}[0,0]$ 直接给出。\n\n**IV. 瑞利商迭代法 (RQI)**\n对于一般情况，我们必须找到简化系统 $A_{red}\\mathbf{u} = \\lambda M_{red}\\mathbf{u}$ 的最小特征值 $\\lambda_1$。RQI 是用于此目的的高效迭代方法。给定一个特征向量的近似值 $x_k$，算法按以下步骤进行：\n1.  **计算瑞利商：** $\\rho_k = (x_k^T A_{red} x_k) / (x_k^T M_{red} x_k)$。\n2.  **求解一个移位系统：** 求解 $(A_{red} - \\rho_k M_{red}) y_{k+1} = M_{red} x_k$ 以得到 $y_{k+1}$。\n3.  **归一化：** 更新特征向量近似值 $x_{k+1} = y_{k+1} / \\sqrt{y_{k+1}^T M_{red} y_{k+1}}$。归一化是使用由质量矩阵 $M_{red}$ 导出的内积进行的。\n\n为确保收敛到第一个（最小的）特征值，需要一个合适的起始向量 $x_0$。一个全为 $1$ 的向量 $x_0 = [1, 1, \\dots, 1]^T$ 可作为一个确定性且有原则的“热启动”。该向量没有内部符号变化，类似于第一特征函数的形状，因此偏向于收敛到所期望的基态。\n\n当 $\\rho_k$ 接近一个特征值时，矩阵 $(A_{red} - \\rho_k M_{red})$ 变得奇异。这是 RQI 三次收敛速度的来源，但也是一个数值挑战。该实现通过将线性求解包装在 `try-except` 块中来处理此问题。如果引发 `LinAlgError`，则表示移位值是特征值的极佳近似，迭代终止。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.linalg import solve as linalg_solve, LinAlgError\n\ndef solve():\n    \"\"\"\n    Main entry point for solving the problem. It iterates through the specified\n    test cases, computes the first eigenvalue for each, and prints the\n    formatted results.\n    \"\"\"\n    test_cases = [\n        (2, 2),    # Test 1: Degenerate case with 1 interior node.\n        (6, 6),    # Test 2: A moderate mesh.\n        (12, 12),  # Test 3: A finer mesh, approaching the continuum.\n    ]\n\n    results = []\n    for nx, ny in test_cases:\n        result = _calculate_first_eigenvalue(nx, ny)\n        results.append(f\"{result:.6f}\")\n\n    print(f\"[{','.join(results)}]\")\n\ndef _calculate_first_eigenvalue(Nx, Ny):\n    \"\"\"\n    Calculates the first Dirichlet eigenvalue for the Laplacian on a unit square\n    using the Finite Element Method with piecewise linear elements and\n    Rayleigh Quotient Iteration for the resulting generalized eigenproblem.\n\n    Args:\n        Nx (int): Number of subdivisions along the x-axis.\n        Ny (int): Number of subdivisions along the y-axis.\n\n    Returns:\n        float: The computed approximation of the first eigenvalue.\n    \"\"\"\n    hx = 1.0 / Nx\n    hy = 1.0 / Ny\n    \n    num_total_nodes = (Nx + 1) * (Ny + 1)\n    num_interior_nodes = (Nx - 1) * (Ny - 1)\n\n    # 1. Mesh Generation and Node Mapping\n    # Create a mapping from an interior node index (0 to num_interior_nodes-1)\n    # to its global node index.\n    interior_to_global = np.zeros(num_interior_nodes, dtype=int)\n    interior_idx = 0\n    for i in range(1, Nx):\n        for j in range(1, Ny):\n            # Global node index from (i, j) grid coordinates\n            g_idx = i * (Ny + 1) + j\n            interior_to_global[interior_idx] = g_idx\n            interior_idx += 1\n\n    # 2. Matrix Assembly\n    A = np.zeros((num_total_nodes, num_total_nodes))\n    M = np.zeros((num_total_nodes, num_total_nodes))\n\n    # Iterate over each rectangle in the grid to assemble element contributions.\n    for i_rect in range(Nx):\n        for j_rect in range(Ny):\n            # Coordinates of the four vertices of the rectangle.\n            p1_coords = (i_rect * hx, j_rect * hy)\n            p2_coords = ((i_rect + 1) * hx, j_rect * hy)\n            p3_coords = (i_rect * hx, (j_rect + 1) * hy)\n            p4_coords = ((i_rect + 1) * hx, (j_rect + 1) * hy)\n\n            # Global indices of the four rectangle vertices.\n            n1_idx = i_rect * (Ny + 1) + j_rect\n            n2_idx = (i_rect + 1) * (Ny + 1) + j_rect\n            n3_idx = i_rect * (Ny + 1) + (j_rect + 1)\n            n4_idx = (i_rect + 1) * (Ny + 1) + (j_rect + 1)\n\n            # Split the rectangle with a consistent diagonal (\\) into two triangles.\n            # Triangle 1: vertices p1, p2, p3. Nodes n1, n2, n3.\n            tri1_verts = [p1_coords, p2_coords, p3_coords]\n            tri1_nodes = [n1_idx, n2_idx, n3_idx]\n            Ae1, Me1 = _get_element_matrices(tri1_verts)\n            _assemble_local(A, M, Ae1, Me1, tri1_nodes)\n            \n            # Triangle 2: vertices p2, p4, p3. Nodes n2, n4, n3.\n            tri2_verts = [p2_coords, p4_coords, p3_coords]\n            tri2_nodes = [n2_idx, n4_idx, n3_idx]\n            Ae2, Me2 = _get_element_matrices(tri2_verts)\n            _assemble_local(A, M, Ae2, Me2, tri2_nodes)\n\n    # 3. Apply Homogeneous Dirichlet Boundary Conditions\n    # Extract submatrices corresponding to interior nodes only.\n    A_red = A[np.ix_(interior_to_global, interior_to_global)]\n    M_red = M[np.ix_(interior_to_global, interior_to_global)]\n\n    # 4. Handle Special Case (1 interior degree of freedom)\n    if num_interior_nodes == 1:\n        # The Rayleigh quotient is exact in a one-dimensional trial space.\n        return A_red[0, 0] / M_red[0, 0]\n\n    # 5. Rayleigh Quotient Iteration\n    # Warm start with a vector of all ones, which approximates the first eigenfunction.\n    x = np.ones(num_interior_nodes)\n    # Normalize with respect to the inner product defined by the mass matrix M.\n    x = x / np.sqrt(x.T @ M_red @ x)\n    \n    rho = 0.0\n    max_iter = 30\n    tolerance = 1e-12\n\n    for _ in range(max_iter):\n        rho_new = x.T @ A_red @ x\n        \n        if abs(rho_new - rho)  tolerance:\n            rho = rho_new\n            break\n        rho = rho_new\n        \n        # Solve the shifted linear system: (A - rho*M)y = M*x\n        b = M_red @ x\n        S = A_red - rho * M_red\n        \n        try:\n            # If linalg_solve fails, rho is very close to an eigenvalue.\n            # This serves as a robust convergence check.\n            y = linalg_solve(S, b, assume_a='sym')\n        except LinAlgError:\n            break\n            \n        # Normalize the new vector with the M-norm.\n        m_norm_y = np.sqrt(y.T @ M_red @ y)\n        if m_norm_y  np.finfo(float).eps: # Avoid division by zero\n            break\n        x = y / m_norm_y\n\n    return rho\n\ndef _get_element_matrices(vertices):\n    \"\"\"Computes the local stiffness and mass matrices for a single P1 triangular element.\"\"\"\n    (x1, y1), (x2, y2), (x3, y3) = vertices\n    area = 0.5 * abs(x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2))\n\n    # Stiffness Matrix A^e_ij = integral(grad(phi_i) . grad(phi_j)) dA\n    b = np.array([y2 - y3, y3 - y1, y1 - y2])\n    c = np.array([x3 - x2, x1 - x3, x2 - x1])\n    Ae = (1 / (4 * area)) * (np.outer(b, b) + np.outer(c, c))\n\n    # Mass Matrix M^e_ij = integral(phi_i * phi_j) dA\n    Me = (area / 12.0) * np.array([[2, 1, 1],\n                                   [1, 2, 1],\n                                   [1, 1, 2]])\n    return Ae, Me\n\ndef _assemble_local(A_global, M_global, A_local, M_local, nodes):\n    \"\"\"Adds local element matrix contributions into the global matrices.\"\"\"\n    for i in range(3):\n        for j in range(3):\n            A_global[nodes[i], nodes[j]] += A_local[i, j]\n            M_global[nodes[i], nodes[j]] += M_local[i, j]\n\nsolve()\n```", "id": "3076310"}]}