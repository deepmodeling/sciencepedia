{"hands_on_practices": [{"introduction": "要真正理解一个几何映射，一个有效的方法是观察它在局部坐标下的具体表达式。测地对称映射 $s_p$ 虽然定义抽象，但它在任意坐标系中的泰勒展开式揭示了其深刻的几何内涵。这个练习将引导你推导 $s_p$ 的二阶泰勒展开，并展示其二次项是如何由该点处的克里斯托费尔符号决定的，从而揭示了对称性与联络系数之间的基本联系。[@problem_id:3071585]", "problem": "设 $(M,g)$ 是一个光滑黎曼流形，且 $p \\in M$。定义测地对称映射 $s_p$ 满足条件 $s_p(\\exp_p(v))=\\exp_p(-v)$，对所有足够小的 $v \\in T_pM$ 成立，其中 $\\exp_p$ 是在 $p$ 点的指数映射。设 $x=(x^{a})$ 是一个以 $p$ 为中心的正规坐标图卡（因此 $x(p)=0$ 且列维-奇维塔联络的克里斯托费尔符号 $\\Gamma^{a}_{bc}$ 在 $p$ 点的 $x$ 坐标下为零），并设 $y=(y^{i})$ 是一个以 $p$ 为中心的任意光滑坐标图卡（因此 $y(p)=0$），其在这些坐标下的克里斯托费尔符号为 $\\Gamma^{i}_{jk}(y)$。在 $x$ 坐标下，测地对称由 $x \\mapsto -x$ 给出。\n\n仅使用正规坐标的基本定义和坐标变换下克里斯托费尔符号的标准变换法则，计算 $s_p$ 在 $y$ 图卡中直到 $p$ 点的二次项的坐标表达式。具体来说，如果 $S^{i}(y)$ 表示将 $s_p$ 应用于一个 $y$ 坐标为 $y=(y^{1},\\dots,y^{n})$ 的点后所得点的第 $i$ 个 $y$ 坐标，请确定 $S^{i}(y)$ 在 $y=0$ 处的泰勒展开式的前两个非平凡项（直到二阶），并完全用 $y^{j}$ 和 $y$ 坐标下的克里斯托费尔符号 $\\Gamma^{i}_{jk}(p)$ 表示。\n\n你的最终答案必须是给出 $S^{i}(y)$ 到二阶的单个闭式解析表达式。不需要四舍五入，也没有物理单位。", "solution": "该问题是有效的。这是一个黎曼几何中提法得当的问题，其基础是正规坐标、测地对称映射和联络系数变换法则的标准定义。\n\n设 $(M,g)$ 是一个光滑黎曼流形。设 $p \\in M$。给定两个以 $p$ 为中心的坐标图卡：\n1. 一个正规坐标图卡 $x=(x^a)$，其中 $x(p)=0$ 且列维-奇维塔联络的克里斯托费尔符号（记为 $\\bar{\\Gamma}^a_{bc}(x)$）在 $p$ 点为零。即 $\\bar{\\Gamma}^a_{bc}(p) = 0$。\n2. 一个任意光滑坐标图卡 $y=(y^i)$，其中 $y(p)=0$，其克里斯托费尔符号为 $\\Gamma^i_{jk}(y)$。\n\n测地对称映射 $s_p: M \\to M$ 在局部由 $s_p(\\exp_p(v)) = \\exp_p(-v)$ 定义，对 $v \\in T_pM$ 成立。在以 $p$ 为中心的正规坐标系 $x$ 中，指数映射由 $\\exp_p(v) \\mapsto (v^1, \\dots, v^n)$ 给出，其中 $v = v^a \\frac{\\partial}{\\partial x^a}|_p$。因此，$s_p$ 的作用对应于将切空间中的向量取反，这转化为将坐标取反。所以，在 $x$ 图卡中，如果一个点的坐标是 $x$，它在 $s_p$ 下的像的坐标是 $-x$。\n\n我们的目标是找到 $s_p$ 在 $y$ 坐标图卡中的表达式。设 $p$ 附近的一点 $q$ 的坐标为 $y(q) = (y^1, \\dots, y^n)$。我们想要找到其像的坐标 $S(y) = y(s_p(q))$。\n\n策略是从 $y$ 坐标变换到 $x$ 坐标，应用该映射，然后再变换回 $y$ 坐标。设坐标变换函数为 $x = x(y)$ 及其逆 $y = y(x)$。映射 $S(y)$ 可以表示为函数的复合：\n$$S(y) = y(s_p(x(y)))$$\n在 $x$ 坐标下，映射是 $x \\mapsto -x$。所以我们有：\n$$S^i(y^1, \\dots, y^n) = y^i(-x^1(y), \\dots, -x^n(y))$$\n我们将找到 $S^i(y)$ 在 $y=0$ 附近直到二阶的泰勒展开式。这需要坐标变换函数 $x(y)$ 和 $y(x)$ 在原点附近的泰勒展开式。全文使用爱因斯坦求和约定。\n\n$x^a(y)$ 在 $y=0$ 附近的泰勒展开式为：\n$$x^a(y) = x^a(0) + \\frac{\\partial x^a}{\\partial y^j}\\bigg|_0 y^j + \\frac{1}{2}\\frac{\\partial^2 x^a}{\\partial y^j \\partial y^k}\\bigg|_0 y^j y^k + O(|y|^3)$$\n因为两个坐标系都以 $p$ 为中心，所以 $x(0)=0$。我们将原点处的雅可比矩阵和海森矩阵记为：\n$$J^a_j = \\frac{\\partial x^a}{\\partial y^j}\\bigg|_0 \\quad , \\quad H^a_{jk} = \\frac{\\partial^2 x^a}{\\partial y^j \\partial y^k}\\bigg|_0$$\n所以，$x^a(y) = J^a_j y^j + \\frac{1}{2} H^a_{jk} y^j y^k + O(|y|^3)$。\n\n类似地，$y^i(x)$ 在 $x=0$ 附近的泰勒展开式为：\n$$y^i(x) = y^i(0) + \\frac{\\partial y^i}{\\partial x^a}\\bigg|_0 x^a + \\frac{1}{2} \\frac{\\partial^2 y^i}{\\partial x^a \\partial x^b}\\bigg|_0 x^a x^b + O(|x|^3)$$\n由于 $y(0)=0$，并使用导数的记号：\n$$\\tilde{J}^i_a = \\frac{\\partial y^i}{\\partial x^a}\\bigg|_0 \\quad , \\quad \\tilde{H}^i_{ab} = \\frac{\\partial^2 y^i}{\\partial x^a \\partial x^b}\\bigg|_0$$\n所以，$y^i(x) = \\tilde{J}^i_a x^a + \\frac{1}{2} \\tilde{H}^i_{ab} x^a x^b + O(|x|^3)$。矩阵 $J$ 和 $\\tilde{J}$ 互为逆矩阵，所以 $J^a_i \\tilde{J}^i_b = \\delta^a_b$ 且 $\\tilde{J}^i_a J^a_j = \\delta^i_j$。\n\n现在，我们展开 $S^i(y) = y^i(-x(y))$：\n$$S^i(y) = \\tilde{J}^i_a (-x^a(y)) + \\frac{1}{2}\\tilde{H}^i_{ab} (-x^a(y))(-x^b(y)) + O(|x|^3)$$\n因为 $x(y)$ 是 $y$ 的一阶量，所以 $O(|x|^3) = O(|y|^3)$。\n$$S^i(y) = -\\tilde{J}^i_a x^a(y) + \\frac{1}{2}\\tilde{H}^i_{ab} x^a(y)x^b(y) + O(|y|^3)$$\n代入 $x^a(y)$ 的展开式：\n$$x^a(y) = J^a_j y^j + \\frac{1}{2}H^a_{jk} y^j y^k + O(|y|^3)$$\n为了计算 $S^i(y)$ 到二阶，我们只需要 $x^a(y)x^b(y)$ 到二阶：\n$$x^a(y)x^b(y) = (J^a_j y^j)(J^b_k y^k) + O(|y|^3) = J^a_j J^b_k y^j y^k + O(|y|^3)$$\n将这些代入 $S^i(y)$ 的展开式：\n$$S^i(y) = -\\tilde{J}^i_a \\left( J^a_j y^j + \\frac{1}{2}H^a_{jk} y^j y^k \\right) + \\frac{1}{2}\\tilde{H}^i_{ab} (J^a_j J^b_k y^j y^k) + O(|y|^3)$$\n$$S^i(y) = -(\\tilde{J}^i_a J^a_j) y^j + \\left( -\\frac{1}{2}\\tilde{J}^i_a H^a_{jk} + \\frac{1}{2}\\tilde{H}^i_{ab} J^a_j J^b_k \\right) y^j y^k + O(|y|^3)$$\n使用 $\\tilde{J}^i_a J^a_j = \\delta^i_j$，线性项是 $-\\delta^i_j y^j = -y^i$。\n$$S^i(y) = -y^i + \\frac{1}{2} \\left( \\tilde{H}^i_{ab} J^a_j J^b_k - \\tilde{J}^i_a H^a_{jk} \\right) y^j y^k + O(|y|^3)$$\n下一步是使用克里斯托费尔符号的变换法则，将海森项 $H^a_{jk}$ 和 $\\tilde{H}^i_{ab}$ 与克里斯托费尔符号 $\\Gamma^i_{jk}(p)$ 联系起来。从 $y$ 坐标到 $x$ 坐标的变换开始：\n$$\\bar{\\Gamma}^c_{ab}(x) = \\frac{\\partial x^c}{\\partial y^k} \\left( \\Gamma^k_{ij}(y) \\frac{\\partial y^i}{\\partial x^a} \\frac{\\partial y^j}{\\partial x^b} + \\frac{\\partial^2 y^k}{\\partial x^a \\partial x^b} \\right)$$\n在 $p$ 点（其中 $x=0, y=0$）求值，并回顾 $\\bar{\\Gamma}^c_{ab}(p) = 0$：\n$$0 = J^c_k \\left( \\Gamma^k_{ij}(p) \\tilde{J}^i_a \\tilde{J}^j_b + \\tilde{H}^k_{ab} \\right)$$\n由于雅可比矩阵 $J^c_k$ 是可逆的，括号中的项必须为零，这给了我们一个关于 $\\tilde{H}^k_{ab}$ 的表达式：\n$$\\tilde{H}^k_{ab} = -\\Gamma^k_{ij}(p) \\tilde{J}^i_a \\tilde{J}^j_b$$\n现在考虑从 $x$ 坐标到 $y$ 坐标的逆变换法则：\n$$\\Gamma^k_{ij}(y) = \\frac{\\partial y^k}{\\partial x^c} \\left( \\bar{\\Gamma}^c_{ab}(x) \\frac{\\partial x^a}{\\partial y^i} \\frac{\\partial x^b}{\\partial y^j} + \\frac{\\partial^2 x^c}{\\partial y^i \\partial y^j} \\right)$$\n在 $p$ 点求值并再次使用 $\\bar{\\Gamma}^c_{ab}(p)=0$：\n$$\\Gamma^k_{ij}(p) = \\tilde{J}^k_c H^c_{ij}$$\n为了解出 $H^c_{ij}$，我们乘以逆雅可比矩阵 $J^a_k$：\n$$J^a_k \\Gamma^k_{ij}(p) = J^a_k \\tilde{J}^k_c H^c_{ij} = \\delta^a_c H^c_{ij} = H^a_{ij}$$\n所以，$H^a_{ij} = J^a_k \\Gamma^k_{ij}(p)$。\n\n现在我们将 $H$ 和 $\\tilde{H}$ 的这些表达式代入二次项的系数中：\n$\\frac{1}{2}y^j y^k$ 的系数是 $\\left( \\tilde{H}^i_{ab} J^a_j J^b_k - \\tilde{J}^i_a H^a_{jk} \\right)$。我们来计算每个部分。\n第一部分：\n$$ \\tilde{H}^i_{ab} J^a_j J^b_k = (-\\Gamma^i_{lm}(p) \\tilde{J}^l_a \\tilde{J}^m_b) J^a_j J^b_k = -\\Gamma^i_{lm}(p) (\\tilde{J}^l_a J^a_j) (\\tilde{J}^m_b J^b_k) = -\\Gamma^i_{lm}(p) \\delta^l_j \\delta^m_k = -\\Gamma^i_{jk}(p) $$\n第二部分：\n$$ -\\tilde{J}^i_a H^a_{jk} = -\\tilde{J}^i_a (J^a_l \\Gamma^l_{jk}(p)) = -(\\tilde{J}^i_a J^a_l) \\Gamma^l_{jk}(p) = -\\delta^i_l \\Gamma^l_{jk}(p) = -\\Gamma^i_{jk}(p) $$\n将它们结合起来，$\\frac{1}{2}y^j y^k$ 的系数是 $-\\Gamma^i_{jk}(p) - \\Gamma^i_{jk}(p) = -2\\Gamma^i_{jk}(p)$。\n因此，展开式中的总二次项为：\n$$\\frac{1}{2} (-2\\Gamma^i_{jk}(p)) y^j y^k = -\\Gamma^i_{jk}(p) y^j y^k$$\n最后，组合成 $S^i(y)$ 的泰勒级数：\n$$S^i(y) = -y^i - \\Gamma^i_{jk}(p) y^j y^k + O(|y|^3)$$\n这就给出了测地对称映射在 $y$ 图卡中直到二阶的坐标表达式。克里斯托费尔符号 $\\Gamma^i_{jk}$ 在其下标记 $j,k$ 上是对称的，因此该表达式在 $y^j y^k$ 中是隐式对称的。", "answer": "$$\\boxed{-y^{i} - \\Gamma^{i}_{jk}(p) y^{j} y^{k}}$$", "id": "3071585"}, {"introduction": "一个核心问题是，测地对称 $s_p$ 在何种条件下是等距变换。这个练习提供了一个具体的非对称空间（一个带有扭曲度规的环面），并要求你计算度规张量与其在 $s_p$ 下的回拉度规之差 $g - s_{p}^{*}g$ 的主项。通过这个计算，你将具体地看到，$s_p$ 是否为等距变换不仅取决于某一点的曲率，更受其空间变化（即曲率的导数）的控制。[@problem_id:3071581]", "problem": "令 $\\mathbb{T}^{2}$ 表示二维环面，其全局角坐标为 $(x,y)$，每个坐标均以 $2\\pi$ 为模。对于一个固定参数 $\\varepsilon$（满足 $0 < \\varepsilon < \\frac{1}{2}$），在 $\\mathbb{T}^{2}$ 上赋予黎曼度量 $g_{\\varepsilon}$，其在坐标图中由下式给出\n$$\ng_{\\varepsilon} \\;=\\; dx^{2} \\;+\\; \\big(1+\\varepsilon\\cos x\\big)^{2}\\,dy^{2}.\n$$\n考虑基点 $p=(\\tfrac{\\pi}{2},0)$，并令 $(u,v)$ 是以 $p$ 为中心的黎曼正规坐标。在点 $p$ 处的测地对称是在 $p$ 的一个正规邻域上定义的映射 $s_{p}$，其定义为 $s_{p}=\\exp_{p}\\circ(-\\mathrm{Id})\\circ\\exp_{p}^{-1}$，因此在正规坐标 $(u,v)$ 中，有 $s_{p}(u,v)=(-u,-v)$。定义度量的 $(2,2)$-分量与其在测地对称下沿 $u$-轴的拉回之差为\n$$\n\\Delta(u) \\;:=\\; g_{22}(u,0) \\;-\\; (s_{p}^{*}g)_{22}(u,0),\n$$\n其中 $g_{22}$ 表示在正规坐标 $(u,v)$ 下 $g_{\\varepsilon}$ 的 $(2,2)$-分量。\n\n从关于黎曼正规坐标和曲率张量的基本事实出发，计算 $\\Delta(u)$ 沿 $u$-轴在 $u=0$ 处的泰勒展开的首个非零项。你的最终答案必须是关于 $\\varepsilon$ 和 $u$ 的单一闭式解析表达式。不需要进行数值舍入。", "solution": "用户要求我解决一个黎曼几何问题。我将首先验证问题陈述。\n\n### 第1步：提取已知条件\n- 流形：二维环面 $\\mathbb{T}^{2}$。\n- 坐标：全局角坐标 $(x,y)$，均以 $2\\pi$ 为模。\n- 参数：$\\varepsilon$，满足 $0  \\varepsilon  \\frac{1}{2}$。\n- 黎曼度量：$g_{\\varepsilon} = dx^{2} + \\big(1+\\varepsilon\\cos x\\big)^{2}\\,dy^{2}$。\n- 基点：在 $(x,y)$ 坐标系下为 $p=(\\frac{\\pi}{2},0)$。\n- 正规坐标：以 $p$ 为中心的 $(u,v)$。\n- 测地对称：$s_{p}=\\exp_{p}\\circ(-\\mathrm{Id})\\circ\\exp_{p}^{-1}$，在正规坐标 $(u,v)$ 中为 $s_{p}(u,v)=(-u,-v)$。\n- 待计算量：$\\Delta(u) := g_{22}(u,0) - (s_{p}^{*}g)_{22}(u,0)$ 在 $u=0$ 处的泰勒展开的首个非零项。其中 $g_{22}$ 是 $g_{\\varepsilon}$ 在正规坐标 $(u,v)$ 下的分量。\n\n### 第2步：使用提取的已知条件进行验证\n- **科学基础**：该问题是在黎曼几何的标准框架内提出的。所使用的所有概念，如黎曼度量、正规坐标、测地对称和拉回映射，都是完善的数学对象。在给定的 $\\varepsilon$ 范围内，度量是非退化的。该问题在科学上和数学上都是合理的。\n- **适定性**：该问题是适定的。它要求计算一个良定义函数的泰勒级数中的一个特定项。解的存在性和唯一性由度量和流形的光滑性保证。\n- **客观性**：该问题以精确、客观的数学语言陈述，没有任何主观或模糊的术语。\n- **缺陷清单**：该问题没有违反任何无效标准。它是自洽的、一致的且可形式化的。\n\n### 第3步：结论与行动\n问题是**有效的**。我将继续提供完整解答。\n\n### 解答\n\n待分析的量是 $\\Delta(u) = g_{22}(u,0) - (s_{p}^{*}g)_{22}(u,0)$。在正规坐标 $(u,v) \\equiv (u^1, u^2)$ 中，映射 $s_p$ 由 $\\phi(u^1, u^2) = (-u^1, -u^2)$ 给出。拉回度量 $s_p^*g$ 的分量由 $(s_p^*g)_{ij}(u,v) = g_{ij}(-u,-v)$ 给出。\n因此，函数 $\\Delta(u)$ 为：\n$$\n\\Delta(u) = g_{22}(u,0) - g_{22}(-u,0)\n$$\n这个表达式表示函数 $h(u) = g_{22}(u,0)$ 在 $u=0$ 附近展开的泰勒级数的奇部。设 $h(u)$ 的泰勒展开为 $h(u) = \\sum_{k=0}^{\\infty} c_k u^k$。那么\n$$\n\\Delta(u) = \\sum_{k=0}^{\\infty} c_k u^k - \\sum_{k=0}^{\\infty} c_k (-u)^k = \\sum_{k=0}^{\\infty} c_k (1 - (-1)^k) u^k = 2c_1 u + 2c_3 u^3 + 2c_5 u^5 + \\dots\n$$\n在以点 $p$ 为中心的正规坐标系 $\\{u^k\\}$ 中，度量分量 $g_{ij}$ 的标准泰勒展开由下式给出：\n$$\ng_{ij}(u) = \\delta_{ij} - \\frac{1}{3} R_{ikjl} u^k u^l - \\frac{1}{6} (\\nabla_m R_{ikjl}) u^k u^l u^m + O(|u|^4)\n$$\n其中 $R_{ikjl}$ 是黎曼曲率张量，$\\nabla_m$ 是协变导数，两者都在点 $p$ 处求值。指标 $i,j,k,l,m$ 指的是 $p$ 处正规坐标系的基向量。\n\n我们关心的是沿 $u$-轴的分量 $g_{22}$，它对应于曲线 $(u^1, u^2) = (u, 0)$。设 $i=j=2$ 且 $u^1=u, u^2=0$，则展开式变为：\n$$\ng_{22}(u,0) = \\delta_{22} - \\frac{1}{3} R_{2121} u^2 - \\frac{1}{6} (\\nabla_1 R_{2121}) u^3 + O(u^4)\n$$\n将此与通用泰勒级数 $h(u) = c_0 + c_1 u + c_2 u^2 + c_3 u^3 + \\dots$ 进行比较，我们确定系数如下：\n- $c_0 = 1 = g_{22}(0,0)$。\n- $c_1 = 0$，因为在正规坐标系的原点，度量分量的一阶导数为零。\n- $c_2 = -\\frac{1}{3} R_{2121}$。\n- $c_3 = -\\frac{1}{6} \\nabla_1 R_{2121}$。\n\n由于 $c_1=0$，$\\Delta(u)$ 的首项是 $2c_3 u^3$。如果 $c_3 \\neq 0$，则首项为：\n$$\n\\Delta(u) \\approx -\\frac{1}{3} (\\nabla_1 R_{2121}) u^3\n$$\n我们的任务简化为计算点 $p=(\\frac{\\pi}{2},0)$ 处的分量 $\\nabla_1 R_{2121}$。指标 $1$ 和 $2$ 对应于切空间 $T_p\\mathbb{T}^2$ 的一个标准正交基 $\\{e_1, e_2\\}$，该基定义了正规坐标系的坐标轴。\n\n首先，我们检查点 $p=(\\frac{\\pi}{2},0)$ 处的度量 $g_{\\varepsilon} = dx^2 + (1+\\varepsilon\\cos x)^2 dy^2$。在该点，$\\cos x = \\cos(\\frac{\\pi}{2})=0$。点 $p$ 处的度量张量为：\n$$\ng_p = dx^2 + (1+0)^2 dy^2 = dx^2 + dy^2\n$$\n这意味着坐标基向量 $\\{\\partial_x, \\partial_y\\}$ 在点 $p$ 处构成一个标准正交基。因此，我们可以将我们的标准正交基 $\\{e_1, e_2\\}$ 分别与 $\\{\\partial_x, \\partial_y\\}$ 等同。所以，指标 $1$ 对应于 $x$-方向，指标 $2$ 对应于 $y$-方向。\n\n曲率张量的协变导数由 $(\\nabla_k R_{lmji}) = \\partial_k R_{lmji} - \\Gamma^s_{kl} R_{smji} - \\dots$ 给出。由于我们需要在点 $p$ 处计算该值，我们首先需要计算黎曼张量 $R_{ikjl}$ 在点 $p$ 处的分量。让我们使用局部坐标 $x^1=x, x^2=y$。度量是对角的，其中 $g_{11}=1$，$g_{22} = f(x)^2$，这里 $f(x) = 1+\\varepsilon\\cos x$。具有度量 $dx^2+f(x)^2dy^2$ 的曲面的高斯曲率 $K$ 由 $K = -f''(x)/f(x)$ 给出。\n这里，$f(x) = 1+\\varepsilon\\cos x$，$f'(x) = -\\varepsilon\\sin x$，以及 $f''(x) = -\\varepsilon\\cos x$。\n所以，$K(x) = \\frac{-(-\\varepsilon\\cos x)}{1+\\varepsilon\\cos x} = \\frac{\\varepsilon\\cos x}{1+\\varepsilon\\cos x}$。\n黎曼张量的唯一非零独立分量是 $R_{1212}$。它与高斯曲率的关系是 $R_{1212} = K \\det(g) = K g_{11}g_{22}$。\n$$\nR_{1212}(x) = \\frac{\\varepsilon\\cos x}{1+\\varepsilon\\cos x} \\cdot 1 \\cdot (1+\\varepsilon\\cos x)^2 = \\varepsilon\\cos x(1+\\varepsilon\\cos x) = \\varepsilon\\cos x + \\varepsilon^2\\cos^2 x\n$$\n利用黎曼张量的对称性，$R_{2121} = R_{1212}$。\n在点 $p$ 处，$x=\\frac{\\pi}{2}$，所以 $\\cos x = 0$。\n$$\nR_{2121}(p) = \\varepsilon\\cos(\\tfrac{\\pi}{2}) + \\varepsilon^2\\cos^2(\\tfrac{\\pi}{2}) = 0\n$$\n由于黎曼张量的所有分量在点 $p$ 处都为零，协变导数的公式大大简化：\n$$\n(\\nabla_1 R_{2121})_p = (\\partial_1 R_{2121})_p - (\\text{涉及 } R_{ikjl}(p) \\text{ 的项}) = (\\partial_x R_{2121})_p\n$$\n我们需要计算 $R_{2121}(x)$ 关于 $x$ 的导数，并在 $x=\\frac{\\pi}{2}$ 处求值。\n$$\n\\frac{d}{dx}R_{2121}(x) = \\frac{d}{dx}(\\varepsilon\\cos x + \\varepsilon^2\\cos^2 x) = -\\varepsilon\\sin x - 2\\varepsilon^2\\cos x \\sin x\n$$\n在 $x=\\frac{\\pi}{2}$ 处求值：\n$$\n(\\nabla_1 R_{2121})_p = -\\varepsilon\\sin(\\tfrac{\\pi}{2}) - 2\\varepsilon^2\\cos(\\tfrac{\\pi}{2})\\sin(\\tfrac{\\pi}{2}) = -\\varepsilon(1) - 2\\varepsilon^2(0)(1) = -\\varepsilon\n$$\n由于 $R_{2121}(p)=0$，$g_{22}(u,0)$ 展开式中的 $u^2$ 项为零。由于 $\\nabla_1 R_{2121}(p) = -\\varepsilon \\neq 0$，$u^3$ 项是首个非常数项。系数 $c_3$ 非零。\n因此，$\\Delta(u)$ 展开式中的首个非零项是：\n$$\n-\\frac{1}{3} (\\nabla_1 R_{2121}) u^3 = -\\frac{1}{3} (-\\varepsilon) u^3 = \\frac{\\varepsilon}{3} u^3\n$$\n这就是所求的 $\\Delta(u)$ 在 $u=0$ 处的泰勒展开的首个非零项。", "answer": "$$\n\\boxed{\\frac{\\varepsilon}{3}u^{3}}\n$$", "id": "3071581"}, {"introduction": "检验知识理解程度的最终方式，是能否根据基本定义从头构建一个概念。这项计算实践要求你将整个理论链条——从度规到克里斯托费尔符号，再到测地线常微分方程、指数映射，最终到回拉度规——完整地实现出来。通过在一个带有“凹凸”的环面上进行数值验证，你将把抽象的理论与可操作的计算联系起来，从而加深对测地对称性质的理解。[@problem_id:3071564]", "problem": "考虑二维平坦环面，定义为 $$\\mathbb{T}^2 = (\\mathbb{R}/2\\pi\\mathbb{Z})^2,$$ 其全局坐标为 $$u \\in [0,2\\pi), \\quad v \\in [0,2\\pi)$$，并以 $$2\\pi$$ 为模。为 $$\\mathbb{T}^2$$ 配备一个具有局部凸起的共形黎曼度量，由 $$g = \\lambda(u,v)\\left(du^2 + dv^2\\right)$$ 给出，其中 $$\\lambda(u,v) = 1 + \\varepsilon \\exp\\left(-\\frac{\\sin^2(u) + \\sin^2(v)}{\\sigma^2}\\right),$$ 固定正常数 $$\\varepsilon = 0.5$$ 和 $$\\sigma = 0.6$$。令 $$p = (\\pi,\\pi) \\in \\mathbb{T}^2$$。\n\n基本依据包括：(i) 黎曼流形上测地线的定义，即一条满足测地线方程 $$\\nabla_{\\dot{\\gamma}} \\dot{\\gamma} = 0$$ 的曲线 $$\\gamma(t)$$，其在局部坐标中表示为 $$\\ddot{\\gamma}^k + \\Gamma^k_{ij}(\\gamma)\\,\\dot{\\gamma}^i\\,\\dot{\\gamma}^j = 0;$$ (ii) 从度量分量 $$g_{ij}$$ 计算出的 Levi–Civita 联络系数 $$\\Gamma^k_{ij};$$ (iii) 指数映射 $$\\exp_p$$，其定义为从点 $$p$$ 出发，沿着一个初始切向量方向，在单位时间内所形成的测地线；(iv) 通过 $$T_p\\mathbb{T}^2$$ 的一个标准正交基确定的在点 $$p$$ 处的黎曼法坐标；以及 (v) 测地对称映射 $$s_p(q) = \\exp_p\\!\\left(-\\exp_p^{-1}(q)\\right)$$。\n\n从这些定义出发，执行以下操作：\n\n1. 对于度量 $$g_{ij} = \\lambda(u,v)\\,\\delta_{ij}$$，推导 Christoffel 符号 $$\\Gamma^k_{ij}$$。利用 $$g$$ 的共形性质，用 $$\\lambda$$ 及其偏导数 $$\\partial_u \\lambda$$ 和 $$\\partial_v \\lambda$$ 明确表示 $$\\Gamma^k_{ij}$$。\n\n2. 在 $$\\mathbb{T}^2$$ 的坐标 $$u,v$$ 中，为上述度量实现测地线方程，并对其进行数值积分，以构建在时间 $$t=1$$ 时的指数映射 $$\\exp_p(x)$$，其中 $$x \\in \\mathbb{R}^2$$ 在点 $$p$$ 的法坐标中解释。通过标准正交基 $$\\left\\{\\frac{1}{\\sqrt{\\lambda(p)}}\\partial_u, \\frac{1}{\\sqrt{\\lambda(p)}}\\partial_v\\right\\}$$ 将 $$T_p\\mathbb{T}^2$$ 与 $$\\mathbb{R}^2$$ 等同。也就是说，对于 $$x = (x_1,x_2)$$，将测地线在 $$t=0$$ 时的初始速度设为 $$\\dot{u}(0) = \\frac{x_1}{\\sqrt{\\lambda(p)}}, \\quad \\dot{v}(0) = \\frac{x_2}{\\sqrt{\\lambda(p)}},$$，初始位置为 $$\\gamma(0) = p$$。\n\n3. 使用有限差分法，通过计算 $$\\exp_p(x + h e_i)$$ 和 $$\\exp_p(x - h e_i)$$ 的值来数值近似给定点 $$x$$ 处指数映射的雅可比矩阵 $$J(x) = D\\exp_p(x)$$，其中 $$h  0$$ 是一个小数，$$e_1, e_2$$ 是标准基向量。由于 $$\\mathbb{T}^2$$ 是周期性的，将坐标差计算为最小带符号角度差，以避免在 $$2\\pi$$ 边界处出现人为的跳跃。\n\n4. 通过 $$\\tilde{g}(x) = J(x)^\\top\\, g\\big(\\exp_p(x)\\big)\\, J(x)$$ 定义法坐标中的拉回度量，其中 $$g(u,v) = \\lambda(u,v)\\,I_2$$。通过 $$x \\mapsto -x$$ 近似局部测地对称映射 $$s_p$$，并通过计算矩阵差 $$\\tilde{g}(x) - \\tilde{g}(-x)$$ 来量化与等距的偏差。作为标量度量，报告 Frobenius 范数 $$\\left\\|\\tilde{g}(x) - \\tilde{g}(-x)\\right\\|_F$$。\n\n你的程序必须实现上述数值计算，并为以下法坐标输入 $$x$$ 的测试集（以有序对形式列出）生成结果：\n\n- $$x = (0.0, 0.0)$$\n- $$x = (0.05, 0.0)$$\n- $$x = (0.0, 0.05)$$\n- $$x = (0.2, 0.15)$$\n- $$x = (0.4, -0.3)$$\n- $$x = (1.0, 0.0)$$\n\n对于每个测试用例，输出 Frobenius 范数 $$\\left\\|\\tilde{g}(x) - \\tilde{g}(-x)\\right\\|_F$$，形式为浮点数并四舍五入到六位小数。你的程序应生成一行输出，其中包含用方括号括起来的逗号分隔的结果列表（例如，\"[r1,r2,r3,r4,r5,r6]\"），其中每个 $$r_i$$ 按顺序对应于指定的测试用例。\n\n不涉及物理单位。所有角度必须以弧度处理。通过对测地线常微分方程进行精确积分和对雅可比矩阵进行稳定的有限差分计算来确保科学真实性。避免提供任何超出上述基本依据所推导范围的指数映射或法坐标的快捷公式。", "solution": "所提出的问题是黎曼几何中一个定义明确的计算练习。它要求对一个量进行数值评估，该量用于衡量一个特定的黎曼流形偏离局部对称空间的程度。所有定义和步骤都基于标准微分几何，并且在计算上是可行的。该问题是自洽、一致且科学上合理的。因此，它被认为是有效的，并将提供完整的解决方案。\n\n核心任务是计算在法坐标中，点 $x$ 和点 $-x$ 处的拉回度量之差的 Frobenius 范数，即 $\\|\\tilde{g}(x) - \\tilde{g}(-x)\\|_F$。如果空间是局部对称的，该量为零。我们将按照问题陈述中概述的步骤进行。\n\n### 第 1 步：Christoffel 符号\n\n度量以共形形式给出：$g = \\lambda(u,v)(du^2 + dv^2)$。令坐标为 $(x^1, x^2) = (u,v)$。度量张量分量为：\n$$\ng_{11} = \\lambda(u,v), \\quad g_{22} = \\lambda(u,v), \\quad g_{12} = g_{21} = 0\n$$\n逆度量张量的分量为：\n$$\ng^{11} = \\frac{1}{\\lambda(u,v)}, \\quad g^{22} = \\frac{1}{\\lambda(u,v)}, \\quad g^{12} = g^{21} = 0\n$$\n第二类 Christoffel 符号 $\\Gamma^k_{ij}$ 由以下公式给出：\n$$\n\\Gamma^k_{ij} = \\frac{1}{2} g^{kl} (\\partial_i g_{jl} + \\partial_j g_{il} - \\partial_l g_{ij})\n$$\n其中 $\\partial_1 = \\partial_u$ 且 $\\partial_2 = \\partial_v$。令 $\\lambda_u = \\partial_u \\lambda$ 且 $\\lambda_v = \\partial_v \\lambda$。\n\n对于对角共形度量，公式大大简化。让我们计算每个非零分量：\n*   $\\Gamma^1_{11} = \\frac{1}{2}g^{11}(\\partial_1 g_{11} + \\partial_1 g_{11} - \\partial_1 g_{11}) = \\frac{1}{2}g^{11}(\\partial_1 g_{11}) = \\frac{1}{2\\lambda}\\lambda_u$\n*   $\\Gamma^1_{12} = \\Gamma^1_{21} = \\frac{1}{2}g^{11}(\\partial_1 g_{21} + \\partial_2 g_{11} - \\partial_1 g_{12}) = \\frac{1}{2}g^{11}\\partial_2 g_{11} = \\frac{1}{2\\lambda}\\lambda_v$\n*   $\\Gamma^1_{22} = \\frac{1}{2}g^{11}(\\partial_2 g_{21} + \\partial_2 g_{21} - \\partial_1 g_{22}) = \\frac{1}{2}g^{11}(-\\partial_1 g_{22}) = -\\frac{1}{2\\lambda}\\lambda_u$\n*   $\\Gamma^2_{11} = \\frac{1}{2}g^{22}(\\partial_1 g_{12} + \\partial_1 g_{12} - \\partial_2 g_{11}) = \\frac{1}{2}g^{22}(-\\partial_2 g_{11}) = -\\frac{1}{2\\lambda}\\lambda_v$\n*   $\\Gamma^2_{12} = \\Gamma^2_{21} = \\frac{1}{2}g^{22}(\\partial_1 g_{22} + \\partial_2 g_{12} - \\partial_2 g_{12}) = \\frac{1}{2}g^{22}\\partial_1 g_{22} = \\frac{1}{2\\lambda}\\lambda_u$\n*   $\\Gamma^2_{22} = \\frac{1}{2}g^{22}(\\partial_2 g_{22} + \\partial_2 g_{22} - \\partial_2 g_{22}) = \\frac{1}{2}g^{22}(\\partial_2 g_{22}) = \\frac{1}{2\\lambda}\\lambda_v$\n\n共形因子 $\\lambda(u,v) = 1 + \\varepsilon \\exp\\left(-\\frac{\\sin^2(u) + \\sin^2(v)}{\\sigma^2}\\right)$ 的偏导数是：\n$$\n\\lambda_u = \\partial_u \\lambda = -\\frac{2\\varepsilon \\sin u \\cos u}{\\sigma^2} \\exp\\left(-\\frac{\\sin^2 u + \\sin^2 v}{\\sigma^2}\\right)\n$$\n$$\n\\lambda_v = \\partial_v \\lambda = -\\frac{2\\varepsilon \\sin v \\cos v}{\\sigma^2} \\exp\\left(-\\frac{\\sin^2 u + \\sin^2 v}{\\sigma^2}\\right)\n$$\n\n### 第 2 步：测地线方程和数值积分\n\n测地线方程为 $\\ddot{\\gamma}^k + \\Gamma^k_{ij}(\\gamma)\\dot{\\gamma}^i\\dot{\\gamma}^j = 0$。对于曲线 $\\gamma(t) = (u(t), v(t))$，这展开为：\n$$\n\\ddot{u} + \\Gamma^1_{11}\\dot{u}^2 + 2\\Gamma^1_{12}\\dot{u}\\dot{v} + \\Gamma^1_{22}\\dot{v}^2 = 0\n$$\n$$\n\\ddot{v} + \\Gamma^2_{11}\\dot{u}^2 + 2\\Gamma^2_{12}\\dot{u}\\dot{v} + \\Gamma^2_{22}\\dot{v}^2 = 0\n$$\n代入 Christoffel 符号，我们得到关于二阶导数的方程组：\n$$\n\\ddot{u} = -\\frac{1}{2\\lambda} \\left( \\lambda_u(\\dot{u}^2 - \\dot{v}^2) + 2\\lambda_v \\dot{u}\\dot{v} \\right)\n$$\n$$\n\\ddot{v} = -\\frac{1}{2\\lambda} \\left( \\lambda_v(\\dot{v}^2 - \\dot{u}^2) + 2\\lambda_u \\dot{u}\\dot{v} \\right)\n$$\n为了对这些方程进行数值积分，我们将它们转换为一个一阶系统。令状态向量为 $Y(t) = [u(t), v(t), \\dot{u}(t), \\dot{v}(t)]^T$。该系统是 $\\dot{Y} = f(t, Y)$，其中 $f$ 是：\n$$\n\\dot{Y} = \\begin{bmatrix} \\dot{u} \\\\ \\dot{v} \\\\ \\ddot{u}(u,v,\\dot{u},\\dot{v}) \\\\ \\ddot{v}(u,v,\\dot{u},\\dot{v}) \\end{bmatrix}\n$$\n指数映射 $\\exp_p(x)$ 通过求解该系统并使用特定的初始条件得到。基点是 $p = (\\pi, \\pi)$。输入 $x = (x_1, x_2)$ 是 $T_p\\mathbb{T}^2$ 中的一个向量，用标准正交基 $\\{\\frac{1}{\\sqrt{\\lambda(p)}}\\partial_u, \\frac{1}{\\sqrt{\\lambda(p)}}\\partial_v\\}$ 表示。\n在点 $p$ 处的共形因子的值是 $\\lambda(p) = \\lambda(\\pi, \\pi) = 1 + \\varepsilon \\exp(0) = 1+\\varepsilon = 1.5$。\n在 $t=0$ 处的初始条件是：\n*   位置：$(u(0), v(0)) = (\\pi, \\pi)$。\n*   速度：$(\\dot{u}(0), \\dot{v}(0)) = \\left(\\frac{x_1}{\\sqrt{\\lambda(p)}}, \\frac{x_2}{\\sqrt{\\lambda(p)}}\\right) = \\left(\\frac{x_1}{\\sqrt{1.5}}, \\frac{x_2}{\\sqrt{1.5}}\\right)$。\n\n我们将此系统从 $t=0$ 积分到 $t=1$。得到的位置 $(u(1), v(1)) \\pmod{2\\pi}$ 是 $\\exp_p(x)$。\n\n### 第 3 步：雅可比矩阵的数值计算\n\n雅可比矩阵 $J(x) = D\\exp_p(x)$ 是一个 $2 \\times 2$ 矩阵，其列是 $\\exp_p(x)$ 关于 $x_1$ 和 $x_2$ 的偏导数。我们使用中心有限差分格式来近似这些导数。令 $\\exp_p(x) = (U(x), V(x))$。\n$$\n\\frac{\\partial \\exp_p}{\\partial x_1}(x) \\approx \\frac{\\exp_p(x_1+h, x_2) - \\exp_p(x_1-h, x_2)}{2h}\n$$\n$$\n\\frac{\\partial \\exp_p}{\\partial x_2}(x) \\approx \\frac{\\exp_p(x_1, x_2+h) - \\exp_p(x_1, x_2-h)}{2h}\n$$\n对于环面 $\\mathbb{T}^2$ 来说，一个关键细节是坐标差必须考虑周期性。两个角度 $a_1$ 和 $a_2$ 之间的差应该是最小带符号角度 $(a_1 - a_2 + \\pi) \\pmod{2\\pi} - \\pi$。这可以防止在跨越 $2\\pi$ 边界时出现大的非自然跳跃。我们将使用一个小的步长 $h$，例如 $h=10^{-6}$。\n\n### 第 4 步：拉回度量与等距偏差\n\n法坐标中的拉回度量 $\\tilde{g}(x)$ 由 $\\tilde{g}(x) = (\\exp_p^*g)(x) = J(x)^\\top g(\\exp_p(x)) J(x)$ 给出。在 $(u,v)$ 坐标中的度量张量是 $g(u,v) = \\lambda(u,v)I_2$，其中 $I_2$ 是 $2 \\times 2$ 单位矩阵。\n因此，\n$$\n\\tilde{g}(x) = J(x)^\\top \\left( \\lambda(\\exp_p(x)) I_2 \\right) J(x) = \\lambda(\\exp_p(x)) J(x)^\\top J(x)\n$$\n为了量化与局部对称性的偏差，我们为 $x$ 和 $-x$ 计算这个矩阵，求它们的差，并计算其 Frobenius 范数：\n$$\n\\text{偏差} = \\left\\| \\tilde{g}(x) - \\tilde{g}(-x) \\right\\|_F = \\sqrt{\\sum_{i,j=1}^2 (\\tilde{g}_{ij}(x) - \\tilde{g}_{ij}(-x))^2}\n$$\n对于一个局部对称空间，测地对称映射 $s_p$ 是一个等距映射。在法坐标中，$s_p$ 近似为 $x \\mapsto -x$，等距条件转化为 $\\tilde{g}(x) = \\tilde{g}(-x)$。我们的计算衡量了这个等式被违反的程度。\n对于特殊情况 $x=(0,0)$，初始速度为零，因此测地线是常数路径 $\\gamma(t) = p$。因此 $\\exp_p(0) = p$。指数映射在原点的雅可比矩阵是单位矩阵，$J(0) = I_2$。所以，$\\tilde{g}(0) = I_2^\\top g(p) I_2 = g(p)$。因为对于 $x=0$ 有 $-x=x$，我们有 $\\tilde{g}(0) - \\tilde{g}(-0) = 0$，范数为 $0$。对于所有其他情况，需要进行数值计算。\n常数为 $\\varepsilon = 0.5$ 和 $\\sigma = 0.6$。该解决方案将使用 Python 中的 `scipy.integrate.solve_ivp` 来进行常微分方程积分并实现。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\n# Meticulous and exacting professor's implementation\n\n# --- Problem Constants and Definitions ---\n\n# Fixed constants from the problem statement\nEPSILON = 0.5\nSIGMA = 0.6\nSIGMA_SQ = SIGMA**2\n\n# Base point p on the torus\nP_POINT = np.array([np.pi, np.pi])\n\n# Conformal factor lambda(u,v) = 1 + ε * exp(-(sin^2(u) + sin^2(v))/σ^2)\ndef lambda_func(u, v):\n    \"\"\"Computes the conformal factor lambda at coordinates (u, v).\"\"\"\n    sin_u_sq = np.sin(u)**2\n    sin_v_sq = np.sin(v)**2\n    exponent = -(sin_u_sq + sin_v_sq) / SIGMA_SQ\n    return 1.0 + EPSILON * np.exp(exponent)\n\n# Partial derivatives of the conformal factor\ndef lambda_partials(u, v):\n    \"\"\"Computes the partial derivatives ∂λ/∂u and ∂λ/∂v at (u, v).\"\"\"\n    sin_u_sq = np.sin(u)**2\n    sin_v_sq = np.sin(v)**2\n    common_factor = EPSILON * np.exp(-(sin_u_sq + sin_v_sq) / SIGMA_SQ)\n    \n    # ∂λ/∂u = -2ε/σ^2 * sin(u)cos(u) * exp(...)\n    lambda_u = common_factor * (-2.0 / SIGMA_SQ) * np.sin(u) * np.cos(u)\n    \n    # ∂λ/∂v = -2ε/σ^2 * sin(v)cos(v) * exp(...)\n    lambda_v = common_factor * (-2.0 / SIGMA_SQ) * np.sin(v) * np.cos(v)\n    \n    return lambda_u, lambda_v\n\n# --- Geodesic Equation Implementation ---\n\n# The first-order system for the geodesic ODE: dY/dt = f(t, Y)\n# Y = [u, v, u_dot, v_dot]\ndef geodesic_eq(t, y):\n    \"\"\"\n    Defines the system of first-order ODEs for the geodesic equation.\n    y is the state vector [u, v, u_dot, v_dot].\n    \"\"\"\n    u, v, u_dot, v_dot = y\n    \n    # Calculate lambda and its partials at the current position (u,v)\n    lam = lambda_func(u, v)\n    lam_u, lam_v = lambda_partials(u, v)\n    \n    # Common factor in the expressions for u_ddot and v_ddot\n    factor = -1.0 / (2.0 * lam)\n    \n    # dot_u^2 - dot_v^2\n    udot_sq_minus_vdot_sq = u_dot**2 - v_dot**2\n    # 2 * dot_u * dot_v\n    two_udot_vdot = 2.0 * u_dot * v_dot\n    \n    # Second derivatives (accelerations)\n    # u_ddot = -1/(2λ) * (λ_u * (u̇² - v̇²) + 2λ_v * u̇v̇)\n    u_ddot = factor * (lam_u * udot_sq_minus_vdot_sq + lam_v * two_udot_vdot)\n    \n    # v_ddot = -1/(2λ) * (λ_v * (v̇² - u̇²) + 2λ_u * u̇v̇)\n    v_ddot = factor * (lam_v * (-udot_sq_minus_vdot_sq) + lam_u * two_udot_vdot)\n\n    return [u_dot, v_dot, u_ddot, v_ddot]\n\n# --- Exponential Map and its Jacobian ---\n\n# Value of lambda at the base point p=(π,π)\nLAMBDA_P = lambda_func(P_POINT[0], P_POINT[1])\nSQRT_LAMBDA_P = np.sqrt(LAMBDA_P)\n\ndef exponential_map(x_normal_coords):\n    \"\"\"\n    Computes exp_p(x) by integrating the geodesic equation.\n    x_normal_coords: (x1, x2) vector in normal coordinates at p.\n    \"\"\"\n    x1, x2 = x_normal_coords\n    \n    # Initial conditions for the ODE system\n    # Position: p = (π, π)\n    # Velocity: (u̇(0), v̇(0)) = (x1/√λ(p), x2/√λ(p))\n    y0 = [P_POINT[0], P_POINT[1], x1 / SQRT_LAMBDA_P, x2 / SQRT_LAMBDA_P]\n\n    # Integrate from t=0 to t=1\n    sol = solve_ivp(\n        geodesic_eq, \n        [0, 1], \n        y0, \n        method='RK45', \n        dense_output=True, \n        rtol=1e-12, \n        atol=1e-12\n    )\n\n    # The result is the position at t=1\n    final_pos = sol.y[:2, -1]\n    \n    # The result is on a torus, so we wrap coordinates to [0, 2π)\n    return final_pos % (2 * np.pi)\n\ndef angle_diff(a1, a2):\n    \"\"\"\n    Computes the minimal signed difference between two angles.\n    The result is in [-π, π].\n    \"\"\"\n    diff_not_wrapped = a1 - a2\n    return (diff_not_wrapped + np.pi) % (2 * np.pi) - np.pi\n\ndef jacobian_of_exp_map(x_normal_coords, h=1e-6):\n    \"\"\"\n    Computes the Jacobian of the exponential map D(exp_p)(x)\n    using central finite differences.\n    \"\"\"\n    x_vec = np.array(x_normal_coords, dtype=float)\n    \n    # Perturbations along standard basis vectors e1 and e2\n    h_vec1 = np.array([h, 0.0])\n    h_vec2 = np.array([0.0, h])\n\n    # Column 1 of the Jacobian: ∂(exp_p)/∂x1\n    exp_plus_h1 = exponential_map(x_vec + h_vec1)\n    exp_minus_h1 = exponential_map(x_vec - h_vec1)\n    col1_u = angle_diff(exp_plus_h1[0], exp_minus_h1[0]) / (2 * h)\n    col1_v = angle_diff(exp_plus_h1[1], exp_minus_h1[1]) / (2 * h)\n    \n    # Column 2 of the Jacobian: ∂(exp_p)/∂x2\n    exp_plus_h2 = exponential_map(x_vec + h_vec2)\n    exp_minus_h2 = exponential_map(x_vec - h_vec2)\n    col2_u = angle_diff(exp_plus_h2[0], exp_minus_h2[0]) / (2 * h)\n    col2_v = angle_diff(exp_plus_h2[1], exp_minus_h2[1]) / (2 * h)\n    \n    return np.array([[col1_u, col2_u], [col1_v, col2_v]])\n\n# --- Main Solver Function ---\n\ndef solve():\n    \"\"\"\n    Main function to execute the full numerical procedure for all test cases.\n    \"\"\"\n    test_cases = [\n        (0.0, 0.0),\n        (0.05, 0.0),\n        (0.0, 0.05),\n        (0.2, 0.15),\n        (0.4, -0.3),\n        (1.0, 0.0)\n    ]\n    \n    results = []\n    \n    for x_test in test_cases:\n        x_vec = np.array(x_test, dtype=float)\n\n        # Handle the trivial case x=(0,0) where the result is exactly 0\n        if np.allclose(x_vec, 0.0):\n            results.append(0.0)\n            continue\n            \n        neg_x_vec = -x_vec\n\n        # --- Calculate g_tilde(x) ---\n        # 1. Compute exp_p(x)\n        exp_at_x = exponential_map(x_vec)\n        # 2. Compute the metric factor at the endpoint\n        lambda_at_exp_x = lambda_func(exp_at_x[0], exp_at_x[1])\n        # 3. Compute the Jacobian J(x)\n        J_at_x = jacobian_of_exp_map(x_vec)\n        # 4. Compute g_tilde(x) = λ(exp_p(x)) * J(x)^T * J(x)\n        g_tilde_at_x = lambda_at_exp_x * (J_at_x.T @ J_at_x)\n\n        # --- Calculate g_tilde(-x) ---\n        # 1. Compute exp_p(-x)\n        exp_at_neg_x = exponential_map(neg_x_vec)\n        # 2. Compute the metric factor at the endpoint\n        lambda_at_exp_neg_x = lambda_func(exp_at_neg_x[0], exp_at_neg_x[1])\n        # 3. Compute the Jacobian J(-x)\n        J_at_neg_x = jacobian_of_exp_map(neg_x_vec)\n        # 4. Compute g_tilde(-x)\n        g_tilde_at_neg_x = lambda_at_exp_neg_x * (J_at_neg_x.T @ J_at_neg_x)\n\n        # --- Compute the final result for this case ---\n        # 5. Calculate the difference matrix\n        diff_matrix = g_tilde_at_x - g_tilde_at_neg_x\n        # 6. Compute the Frobenius norm of the difference\n        frobenius_norm = np.linalg.norm(diff_matrix, 'fro')\n        \n        results.append(frobenius_norm)\n\n    # Format the output as specified\n    formatted_results = [f\"{r:.6f}\" for r in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\n# Run the solver\nsolve()\n\n```", "id": "3071564"}]}