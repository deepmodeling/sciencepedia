{"hands_on_practices": [{"introduction": "为了真正掌握霍普夫旋转定理（Hopf Umlaufsatz），没有什么比亲手构造具有特定拓扑性质的曲线更好的方法了。这个练习将引导我们从一个预设的整数 $k$ 出发，直接构建一族平面曲线，使其旋转数恰好为 $k$。通过这个构造过程 [@problem_id:3050426]，我们将深刻理解切向量的“缠绕”行为是如何决定曲线的总体曲率的，并揭示为何总曲率必须是 $2\\pi$ 的整数倍这一核心结论。", "problem": "令 $\\mathbb{C}$ 通过 $z=x+iy$ 等同于 $\\mathbb{R}^{2}$。固定一个整数 $k$，并令 $\\rho:[0,2\\pi]\\to(0,\\infty)$ 是一个光滑函数。通过指定其速度\n$$\nz'(t)=\\rho(t)\\,\\exp(i k t)\n$$\n并选择任意初始点 $z(0)\\in\\mathbb{C}$，定义一条平面曲线 $z:[0,2\\pi]\\to\\mathbb{C}$，因此\n$$\nz(t)=z(0)+\\int_{0}^{t}\\rho(\\tau)\\,\\exp(i k \\tau)\\,d\\tau.\n$$\n令 $s(t)$ 表示从 $t=0$ 开始测量的弧长参数，因此 $ds=|z'(t)|\\,dt=\\rho(t)\\,dt$。仅使用基本定义：正则平面曲线的有符号曲率 $\\kappa$ 满足 $\\kappa=\\frac{d\\theta}{ds}$（其中 $\\theta(s)$ 是单位切线与固定轴的夹角），以及区间上的总曲率是 $\\int\\kappa\\,ds$，计算 $z$ 在 $t\\in[0,2\\pi]$ 上的总曲率。请用弧度表示你的最终答案，并以 $k$ 的单个封闭形式解析表达式给出。", "solution": "问题要求计算平面曲线 $z(t)$ 在 $t \\in [0, 2\\pi]$ 上的总曲率。总曲率定义为有符号曲率 $\\kappa$ 关于弧长参数 $s$ 的积分。\n$$\n\\text{总曲率} = \\int_{C} \\kappa \\, ds\n$$\n有符号曲率由关系式 $\\kappa = \\frac{d\\theta}{ds}$ 给出，其中 $\\theta(s)$ 是单位切向量与固定轴之间的夹角。曲线 $C$ 是在参数 $t$ 从 $0$ 变化到 $2\\pi$ 时描绘出来的。令起始点的弧长为 $s_0=s(0)$，终点的弧长为 $s_f=s(2\\pi)$。\n\n根据微积分基本定理，总曲率是角度 $\\theta$ 的总变化量：\n$$\n\\text{总曲率} = \\int_{s_0}^{s_f} \\frac{d\\theta}{ds} \\, ds = \\theta(s_f) - \\theta(s_0)\n$$\n这等价于求最终切线角 $\\theta(t=2\\pi)$ 与初始切线角 $\\theta(t=0)$ 之间的差值。\n\n为了确定切线角，我们首先找到单位切向量。曲线的速度向量以复数形式给出为：\n$$\nz'(t) = \\rho(t) \\exp(i k t)\n$$\n这里，$\\rho(t)$ 是一个光滑函数，对于所有 $t \\in [0, 2\\pi]$，有 $\\rho(t) \\in (0, \\infty)$，并且 $k$ 是一个固定的整数。曲线的速率是速度向量的模：\n$$\n|z'(t)| = |\\rho(t) \\exp(i k t)| = |\\rho(t)| |\\exp(i k t)|\n$$\n因为 $\\rho(t)$ 是严格正的，所以 $|\\rho(t)| = \\rho(t)$。复指数的模总是 $1$，即 $|\\exp(i k t)| = \\sqrt{\\cos^2(kt) + \\sin^2(kt)} = 1$。\n因此，速率为 $|z'(t)| = \\rho(t)$。这与给定的弧长元 $ds = |z'(t)| \\, dt = \\rho(t) \\, dt$ 一致。条件 $\\rho(t) > 0$ 确保了曲线是正则的（其速率永远不为零）。\n\n单位切向量 $U(t)$ 是通过将速度向量归一化得到的：\n$$\nU(t) = \\frac{z'(t)}{|z'(t)|} = \\frac{\\rho(t) \\exp(i k t)}{\\rho(t)} = \\exp(i k t)\n$$\n将复平面 $\\mathbb{C}$ 等同于 $\\mathbb{R}^2$，单位切向量为 $U(t) = \\cos(k t) + i \\sin(k t)$。该向量与正实轴的夹角 $\\theta(t)$ 由其辐角给出。我们可以为角度函数选择一个连续分支：\n$$\n\\theta(t) = \\arg(U(t)) = \\arg(\\exp(i k t)) = k t\n$$\n现在，我们可以计算这个角度在区间 $t \\in [0, 2\\pi]$ 上的总变化量。\n在 $t=0$ 时的初始角度是：\n$$\n\\theta(0) = k \\cdot 0 = 0\n$$\n在 $t=2\\pi$ 时的最终角度是：\n$$\n\\theta(2\\pi) = k \\cdot (2\\pi) = 2\\pi k\n$$\n总曲率是这两个角度之差：\n$$\n\\text{总曲率} = \\theta(2\\pi) - \\theta(0) = 2\\pi k - 0 = 2\\pi k\n$$\n或者，我们可以更直接地计算积分 $\\int \\kappa ds$。从 $\\theta(t) = kt$，我们有 $\\frac{d\\theta}{dt} = k$。我们还已知 $\\frac{ds}{dt} = \\rho(t)$。使用链式法则，有符号曲率为：\n$$\n\\kappa(t) = \\frac{d\\theta}{ds} = \\frac{d\\theta/dt}{ds/dt} = \\frac{k}{\\rho(t)}\n$$\n然后通过对参数 $t$ 积分来计算总曲率：\n$$\n\\text{总曲率} = \\int_{C} \\kappa \\, ds = \\int_{0}^{2\\pi} \\kappa(t) \\frac{ds}{dt} \\, dt = \\int_{0}^{2\\pi} \\frac{k}{\\rho(t)} \\rho(t) \\, dt\n$$\n项 $\\rho(t)$ 被消去，从而显著简化了积分：\n$$\n\\text{总曲率} = \\int_{0}^{2\\pi} k \\, dt = k [t]_{0}^{2\\pi} = k(2\\pi - 0) = 2\\pi k\n$$\n两种方法都证实了曲线在指定区间上的总曲率为 $2\\pi k$。计算自然地得出了以弧度为单位的结果。", "answer": "$$\n\\boxed{2\\pi k}\n$$", "id": "3050426"}, {"introduction": "在构建了具有特定旋转数的曲线之后，我们转向分析一个给定的、更复杂的例子。这个练习 [@problem_id:3050391] 聚焦于一个经典的“8”字形利萨茹曲线 $\\gamma(t) = (\\sin(2t), \\sin(t))$。直观上看，这条曲线似乎包含了一个逆时针和一个顺时针的环路，它们的旋转效应可能会相互抵消。通过精确计算切向量角度的总变化，我们将验证这一直觉，并揭示自相交曲线的旋转数是如何由其各个环路的方向共同决定的。", "problem": "设 $\\,\\gamma : [0,2\\pi] \\to \\mathbb{R}^{2}\\,$ 是由 $\\,\\gamma(t) = \\big(\\sin(2t),\\, \\sin(t)\\big)\\,$ 定义的光滑闭合曲线。令 $\\,v(t) = \\gamma'(t)\\,$ 表示其速度（切）向量，并记作 $\\,v(t) = |v(t)|\\big(\\cos\\theta(t),\\,\\sin\\theta(t)\\big)\\,$，其中 $\\,\\theta(t)\\,$ 是沿 $[0,2\\pi]$ 上切向量的辐角的连续选择。根据定义，旋转指数 $\\,r(\\gamma)\\,$ 是高斯映射 $\\,t \\mapsto v(t)/|v(t)| \\in \\mathbb{S}^{1}\\,$ 的度数，等价地 $\\,r(\\gamma) = \\big(\\theta(2\\pi) - \\theta(0)\\big)/(2\\pi)\\,$。\n\n任务：\n1. 验证 $\\,\\gamma\\,$ 是一条闭合的浸入曲线；即 $\\,\\gamma(0) = \\gamma(2\\pi)\\,$ 且对所有 $\\,t \\in [0,2\\pi]\\,$ 都有 $\\,\\gamma'(t) \\neq 0\\,$。\n2. 仅使用基本定义和关于平面曲线的熟知事实，计算沿曲线遍历一次时切向辐角的总变化量 $\\,\\Delta\\theta = \\theta(2\\pi) - \\theta(0)\\,$。您计算的 $\\,\\Delta\\theta\\,$ 必须以弧度为单位。\n3. 推导出旋转指数 $\\,r(\\gamma)\\,$，并精确定性地描述在 $\\,t \\in [0,2\\pi]\\,$ 上，切向量 $\\,v(t)\\,$ 在速度平面中如何绕原点转动。\n\n将 $\\,r(\\gamma)\\,$ 的整数值作为您的最终答案。无需四舍五入，最终答案中不应包含单位。整个过程中，角度 $\\,\\Delta\\theta\\,$ 应以弧度为单位理解。", "solution": "**任务 1：验证 $\\,\\gamma\\,$ 是一条闭合的浸入曲线**\n\n首先，我们通过计算区间 $\\,[0, 2\\pi]\\,$ 端点处的 $\\,\\gamma(t)\\,$ 值来检查曲线是否闭合。\n起点为：\n$$ \\gamma(0) = \\big(\\sin(2 \\cdot 0),\\, \\sin(0)\\big) = (\\sin(0),\\, \\sin(0)) = (0, 0) $$\n终点为：\n$$ \\gamma(2\\pi) = \\big(\\sin(2 \\cdot 2\\pi),\\, \\sin(2\\pi)\\big) = (\\sin(4\\pi),\\, \\sin(2\\pi)) = (0, 0) $$\n由于 $\\,\\gamma(0) = \\gamma(2\\pi)\\,$，该曲线是闭合的。\n\n接着，我们检查曲线是否为浸入。浸入要求对所有 $\\,t \\in [0, 2\\pi]\\,$，切向量 $\\,\\gamma'(t)\\,$ 均不为零。我们首先计算切向量，记为 $\\,v(t)\\,$：\n$$ v(t) = \\gamma'(t) = \\frac{d}{dt} \\big(\\sin(2t),\\, \\sin(t)\\big) = \\big(2\\cos(2t),\\, \\cos(t)\\big) $$\n若曲线不是浸入，则必须存在某个 $\\,t\\,$ 使得 $\\,v(t) = (0, 0)\\,$。这要求 $\\,v(t)\\,$ 的两个分量同时为零：\n1.  $\\,2\\cos(2t) = 0 \\implies \\cos(2t) = 0\\,$\n2.  $\\,\\cos(t) = 0\\,$\n\n根据第二个条件，对于 $\\,t \\in [0, 2\\pi]\\,$，$\\,\\cos(t) = 0\\,$ 意味着 $\\,t = \\frac{\\pi}{2}\\,$ 或 $\\,t = \\frac{3\\pi}{2}\\,$。我们检查第一个条件 $\\,\\cos(2t) = 0\\,$ 对于这些 $\\,t\\,$ 值是否成立：\n-   如果 $\\,t = \\frac{\\pi}{2}\\,$，那么 $\\,2t = \\pi\\,$。我们有 $\\,\\cos(2t) = \\cos(\\pi) = -1 \\neq 0\\,$。\n-   如果 $\\,t = \\frac{3\\pi}{2}\\,$，那么 $\\,2t = 3\\pi\\,$。我们有 $\\,\\cos(2t) = \\cos(3\\pi) = -1 \\neq 0\\,$。\n\n由于 $\\,\\gamma'(t)\\,$ 的两个分量从不同时为零，因此对所有 $\\,t \\in [0, 2\\pi]\\,$ 都有 $\\,\\gamma'(t) \\neq (0, 0)\\,$。因此，曲线 $\\,\\gamma\\,$ 是一个浸入。\n这就完成了对 $\\,\\gamma\\,$ 是一条闭合浸入曲线的验证。\n\n**任务 2：计算总变化量 $\\,\\Delta\\theta = \\theta(2\\pi) - \\theta(0)\\,$**\n\n切向角的总变化量由其变化率的积分给出：\n$$ \\Delta\\theta = \\int_{0}^{2\\pi} \\frac{d\\theta}{dt} dt $$\n向量 $\\,(x(t), y(t))\\,$ 的角度 $\\,\\theta(t)\\,$ 满足 $\\,\\tan\\theta(t) = y(t)/x(t)\\,$。其导数由环绕数被积函数的公式给出：\n$$ \\frac{d\\theta}{dt} = \\frac{x(t)y'(t) - y(t)x'(t)}{x(t)^2 + y(t)^2} $$\n在我们的情况下，这个向量是切向量 $\\,v(t) = (x_v(t), y_v(t))\\,$，其中：\n-   $\\,x_v(t) = 2\\cos(2t)\\,$\n-   $\\,y_v(t) = \\cos(t)\\,$\n\n我们计算它们的导数：\n-   $\\,x_v'(t) = -4\\sin(2t)\\,$\n-   $\\,y_v'(t) = -\\sin(t)\\,$\n\n现在，我们计算被积函数的分子：\n$$ x_v(t)y_v'(t) - y_v(t)x_v'(t) = \\big(2\\cos(2t)\\big)\\big(-\\sin(t)\\big) - \\big(\\cos(t)\\big)\\big(-4\\sin(2t)\\big) $$\n$$ = -2\\cos(2t)\\sin(t) + 4\\cos(t)\\sin(2t) $$\n使用二倍角恒等式 $\\,\\sin(2t) = 2\\sin(t)\\cos(t)\\,$ 和 $\\,\\cos(2t) = 2\\cos^2(t)-1\\,$：\n$$ = -2\\big(2\\cos^2(t)-1\\big)\\sin(t) + 4\\cos(t)\\big(2\\sin(t)\\cos(t)\\big) $$\n$$ = \\big(-4\\cos^2(t)+2\\big)\\sin(t) + 8\\cos^2(t)\\sin(t) $$\n$$ = \\sin(t)\\big(-4\\cos^2(t)+2 + 8\\cos^2(t)\\big) = \\sin(t)\\big(4\\cos^2(t)+2\\big) $$\n分母是切向量模的平方：\n$$ x_v(t)^2 + y_v(t)^2 = \\big(2\\cos(2t)\\big)^2 + \\big(\\cos(t)\\big)^2 = 4\\cos^2(2t) + \\cos^2(t) $$\n所以被积函数是：\n$$ \\frac{d\\theta}{dt} = \\frac{2\\sin(t)(2\\cos^2(t)+1)}{4\\cos^2(2t) + \\cos^2(t)} $$\n让我们将此函数表示为 $\\,f(t)\\,$。我们需要计算 $\\,\\Delta\\theta = \\int_{0}^{2\\pi} f(t) dt\\,$。让我们分析被积函数的对称性。考虑 $\\,f(t+\\pi)\\,$：\n-   分子： $\\,2\\sin(t+\\pi)\\big(2\\cos^2(t+\\pi)+1\\big) = 2(-\\sin(t))\\big(2(-\\cos t)^2+1\\big) = -2\\sin(t)\\big(2\\cos^2(t)+1\\big)\\,$。\n-   分母： $\\,4\\cos^2\\big(2(t+\\pi)\\big) + \\cos^2(t+\\pi) = 4\\cos^2(2t+2\\pi) + (-\\cos t)^2 = 4\\cos^2(2t) + \\cos^2(t)\\,$。\n\n因此，我们发现被积函数具有性质 $\\,f(t+\\pi) = -f(t)\\,$。我们现在可以通过分割积分区间来计算该积分：\n$$ \\Delta\\theta = \\int_0^{2\\pi} f(t) dt = \\int_0^\\pi f(t) dt + \\int_\\pi^{2\\pi} f(t) dt $$\n在第二个积分中，我们进行换元 $\\,u = t - \\pi\\,$，因此 $\\,t = u + \\pi\\,$ 且 $\\,dt = du\\,$。积分限从 $\\,[\\pi, 2\\pi]\\,$ 变为 $\\,[0, \\pi]\\,$。\n$$ \\int_\\pi^{2\\pi} f(t) dt = \\int_0^\\pi f(u+\\pi) du = \\int_0^\\pi -f(u) du = -\\int_0^\\pi f(t) dt $$\n将此结果代回到 $\\,\\Delta\\theta\\,$ 的表达式中：\n$$ \\Delta\\theta = \\int_0^\\pi f(t) dt - \\int_0^\\pi f(t) dt = 0 $$\n切向角的总变化量为 $\\,\\Delta\\theta = 0\\,$ 弧度。\n\n**任务 3：推导旋转指数 $\\,r(\\gamma)\\,$ 并描述 $\\,v(t)\\,$ 的转动**\n\n旋转指数 $\\,r(\\gamma)\\,$ 定义为总角度变化量除以 $\\,2\\pi\\,$。使用我们从任务 2 中得到的结果：\n$$ r(\\gamma) = \\frac{\\Delta\\theta}{2\\pi} = \\frac{0}{2\\pi} = 0 $$\n曲线 $\\,\\gamma\\,$ 的旋转指数是 $\\,0\\,$。\n\n对切向量 $\\,v(t)\\,$ 转动的定性描述如下。关键在于向量 $\\,v(t)\\,$ 的端点在速度平面中扫过的路径。对于 $\\,t \\in [0, \\pi]\\,$，向量 $\\,v(t)\\,$ 从 $\\,v(0) = (2,1)\\,$ 移动到 $\\,v(\\pi) = (2,-1)\\,$。该路径经过点 $\\,v(\\pi/2) = (-2,0)\\,$。这对应于切向量的逆时针旋转。角度从 $\\,\\theta(0) = \\arctan(1/2)\\,$ 连续变化到 $\\,\\theta(\\pi) = 2\\pi - \\arctan(1/2)\\,$。变化量为 $\\,\\Delta\\theta_{[0, \\pi]} = \\theta(\\pi) - \\theta(0) = 2\\pi - 2\\arctan(1/2)\\,$。\n\n对于 $\\,t \\in [\\pi, 2\\pi]\\,$，切向量的路径与前半段的路径完全相反。它从 $\\,v(\\pi) = (2,-1)\\,$ 移回到 $\\,v(2\\pi) = (2,1)\\,$。当速度平面中的路径被反向追溯时，角度会“解开”。在这个区间上的角度变化量是第一个区间上变化量的负值：$\\,\\Delta\\theta_{[\\pi, 2\\pi]} = - \\Delta\\theta_{[0, \\pi]} = -(2\\pi - 2\\arctan(1/2))\\,$.\n\n总的角度变化是两个区间上变化量的总和：\n$$ \\Delta\\theta = \\Delta\\theta_{[0, \\pi]} + \\Delta\\theta_{[\\pi, 2\\pi]} = \\big(2\\pi - 2\\arctan(1/2)\\big) - \\big(2\\pi - 2\\arctan(1/2)\\big) = 0 $$\n总而言之，切向量先逆时针旋转了接近一整圈，然后顺时针旋转了相同的量，回到了其初始方向。这种零净旋转对应于曲线 $\\,\\gamma(t)\\,$ 的几何形状，这是一个8字形。它在 $\\,t \\in [0, \\pi]\\,$ 上描绘了一个逆时针的环（非正式地对指数贡献 $\\,+1\\,$），然后在 $\\,t \\in [\\pi, 2\\pi]\\,$ 上描绘了一个顺时针的环（贡献 $\\,-1\\,$），导致总旋转指数为 $\\,0\\,$。", "answer": "$$\\boxed{0}$$", "id": "3050391"}, {"introduction": "理论的深刻理解最终需要在实践中得到验证。最后一个练习 [@problem_id:3050398] 将带领我们将霍普夫旋转定理从抽象的数学概念转化为具体的计算算法。我们将学习如何通过对切向量进行离散采样和角度“展开”（unwrapping）来稳健地计算任意正则闭曲线的旋转数。这个练习不仅是编写代码，更是建立一种强大的工具，用以探索和验证从简单的圆到复杂波形曲线的各种情况，从而将理论直觉与计算结果联系起来。", "problem": "给定以下基于霍普夫旋转定理的任务。设 $\\gamma:[0,2\\pi]\\to\\mathbb{R}^2$ 为一条正则闭合平面曲线，其复数表示为 $z(t)=x(t)+\\mathrm{i}y(t)\\in\\mathbb{C}$，其中 $\\mathrm{i}^2=-1$。正则性假设意味着对于所有 $t\\in[0,2\\pi]$，$z'(t)\\neq 0$。定义单位切向量 $T(t)=\\dfrac{z'(t)}{\\lvert z'(t)\\rvert}$，并对一个连续角度函数 $\\theta(t)$ 写作 $T(t)=(\\cos\\theta(t),\\sin\\theta(t))$（角度必须以弧度为单位）。$\\gamma$ 的转数 $r(\\gamma)$ 是整数\n$$\nr(\\gamma)=\\frac{\\theta(2\\pi)-\\theta(0)}{2\\pi}.\n$$\n霍普夫旋转定理保证了 $r(\\gamma)\\in\\mathbb{Z}$ 并且在 $\\gamma$ 的正则同伦下保持不变。\n\n您的任务是实现一种数值方法，通过在 $[0,2\\pi]$ 的一个剖分上对 $z'(t)$ 的辐角进行采样，对采样角度进行展开以消除 $2\\pi$ 的跳跃，对展开后的差值求和，然后除以 $2\\pi$ 来得到一个整数，从而根据导数 $z'(t)$ 计算 $r(\\gamma)$。角度必须以弧度处理。该方法必须：\n- 在 $[0,2\\pi]$ 上使用足够精细的剖分对 $t$ 进行均匀采样。\n- 以弧度为单位计算采样点处的 $\\arg(z'(t_j))$。\n- 进行角度展开以生成 $[0,2\\pi]$ 上的连续角度剖面；也就是说，通过加或减 $2\\pi$ 的整数倍来调整连续的差值，以使局部跳跃保持在 $(-\\pi,\\pi]$ 范围内。\n- 计算展开后角度的总变化量，然后将该总变化量除以 $2\\pi$ 并取最接近的整数作为 $r(\\gamma)$。\n\n实现一个程序，为以下每个测试曲线计算 $r(\\gamma)$。在每种情况下，参数化都是通过 $z(t)$ 给出的，您必须在算法中使用其导数 $z'(t)$。所有函数都是关于 $t$ 的 $2\\pi$ 周期函数，所有角度都以弧度为单位。\n\n测试套件（每种情况都是 $[0,2\\pi]$ 上的一条独立曲线）：\n- 情况1（单位圆逆时针）：$z(t)=e^{\\mathrm{i}t}$，所以 $z'(t)=\\mathrm{i}e^{\\mathrm{i}t}$。\n- 情况2（单位圆顺时针）：$z(t)=e^{-\\mathrm{i}t}$，所以 $z'(t)=-\\mathrm{i}e^{-\\mathrm{i}t}$。\n- 情况3（逆时针缠绕两圈）：$z(t)=e^{\\mathrm{i}(2t)}$，所以 $z'(t)=2\\mathrm{i}e^{\\mathrm{i}(2t)}$。\n- 情况4（顺时针缠绕三圈）：$z(t)=e^{-\\mathrm{i}(3t)}$，所以 $z'(t)=-3\\mathrm{i}e^{-\\mathrm{i}(3t)}$。\n- 情况5（椭圆逆时针）：$z(t)=2\\cos t+\\mathrm{i}\\,0.5\\sin t$，所以 $z'(t)=-2\\sin t+\\mathrm{i}\\,0.5\\cos t$。\n- 情况6（波状圆逆时针，导数不为零）：$z(t)=e^{\\mathrm{i}t}+0.2\\,e^{\\mathrm{i}(3t)}$，所以 $z'(t)=\\mathrm{i}\\,e^{\\mathrm{i}t}+0.6\\,\\mathrm{i}\\,e^{\\mathrm{i}(3t)}$。\n- 情况7（波状圆顺时针，导数不为零）：$z(t)=e^{-\\mathrm{i}t}+0.2\\,e^{-\\mathrm{i}(3t)}$，所以 $z'(t)=-\\mathrm{i}\\,e^{-\\mathrm{i}t}-0.6\\,\\mathrm{i}\\,e^{-\\mathrm{i}(3t)}$。\n- 情况8（波状圆逆时针缠绕两圈，导数不为零）：$z(t)=e^{\\mathrm{i}(2t)}+0.1\\,e^{\\mathrm{i}(4t)}$，所以 $z'(t)=2\\mathrm{i}\\,e^{\\mathrm{i}(2t)}+0.4\\,\\mathrm{i}\\,e^{\\mathrm{i}(4t)}$。\n\n算法要求：\n- 使用 $[0,2\\pi]$ 的均匀剖分，并包含足够多的子区间，以确保所有情况下的数值稳定性。\n- 全程使用弧度。\n- 对于每种情况，通过将展开后的总角度变化量除以 $2\\pi$ 并四舍五入到最近的整数来返回整数转数。\n\n最终输出格式：\n- 您的程序应生成一行输出，其中包含一个用方括号括起来的逗号分隔列表形式的结果（例如，“[r1,r2,r3,r4,r5,r6,r7,r8]”）。\n- 每个 $r_k$ 都必须是整数。\n\n不涉及物理单位。角度必须以弧度处理。输出必须完全由上述定义和所描述的数值方法确定，无需任何用户输入或外部数据。", "solution": "## 问题验证\n\n### 步骤1：提取已知条件\n问题提供了以下数据和定义：\n- 一条正则闭合平面曲线 $\\gamma:[0,2\\pi]\\to\\mathbb{R}^2$，其复数表示为 $z(t)=x(t)+\\mathrm{i}y(t)$，其中对所有 $t$，$z'(t)\\neq 0$。\n- 单位切向量为 $T(t)=\\dfrac{z'(t)}{\\lvert z'(t)\\rvert} = (\\cos\\theta(t),\\sin\\theta(t))$。\n- 转数 $r(\\gamma)$ 定义为 $r(\\gamma)=\\dfrac{\\theta(2\\pi)-\\theta(0)}{2\\pi}$，其中 $\\theta(t)$ 是 $T(t)$ 的一个连续角度函数，且 $r(\\gamma)$ 是一个整数。\n- 指定了一种数值方法：\n    1. 在 $[0,2\\pi]$ 上均匀采样 $t$。\n    2. 在采样点计算 $\\arg(z'(t_j))$。\n    3. 对角度进行展开以处理 $2\\pi$ 的跳跃。\n    4. 计算展开后角度的总变化量，除以 $2\\pi$，然后四舍五入到最近的整数。\n- 角度必须以弧度为单位。\n- 提供了一个包含8条曲线的测试套件，由它们的复数表示 $z(t)$ 及其导数 $z'(t)$ 指定：\n    - 情况1：$z(t)=e^{\\mathrm{i}t}$，$z'(t)=\\mathrm{i}e^{\\mathrm{i}t}$。\n    - 情况2：$z(t)=e^{-\\mathrm{i}t}$，$z'(t)=-\\mathrm{i}e^{-\\mathrm{i}t}$。\n    - 情况3：$z(t)=e^{\\mathrm{i}(2t)}$，$z'(t)=2\\mathrm{i}e^{\\mathrm{i}(2t)}$。\n    - 情况4：$z(t)=e^{-\\mathrm{i}(3t)}$，$z'(t)=-3\\mathrm{i}e^{-\\mathrm{i}(3t)}$。\n    - 情况5：$z(t)=2\\cos t+\\mathrm{i}\\,0.5\\sin t$，$z'(t)=-2\\sin t+\\mathrm{i}\\,0.5\\cos t$。\n    - 情况6：$z(t)=e^{\\mathrm{i}t}+0.2\\,e^{\\mathrm{i}(3t)}$，$z'(t)=\\mathrm{i}\\,e^{\\mathrm{i}t}+0.6\\,\\mathrm{i}\\,e^{\\mathrm{i}(3t)}$。\n    - 情况7：$z(t)=e^{-\\mathrm{i}t}+0.2\\,e^{-\\mathrm{i}(3t)}$，$z'(t)=-\\mathrm{i}\\,e^{-\\mathrm{i}t}-0.6\\,\\mathrm{i}\\,e^{-\\mathrm{i}(3t)}$。\n    - 情况8：$z(t)=e^{\\mathrm{i}(2t)}+0.1\\,e^{\\mathrm{i}(4t)}$，$z'(t)=2\\mathrm{i}\\,e^{\\mathrm{i}(2t)}+0.4\\,\\mathrm{i}\\,e^{\\mathrm{i}(4t)}$。\n- 最终输出格式指定为方括号内以逗号分隔的整数列表。\n\n### 步骤2：使用提取的已知条件进行验证\n根据指定标准对问题进行验证：\n- **科学基础**：该问题基于霍普夫旋转定理，这是微分几何中的一个基本结果。所有数学定义，包括转数及其与切向量角度的关系，都是标准且正确的。为每个测试用例提供的导数 $z'(t)$ 都是从 $z(t)$ 正确计算得出的。正则性条件 $z'(t)\\neq 0$ 被明确说明对所有测试用例均成立，并且可以进行验证。例如，在情况6中，$\\lvert z'(t) \\rvert^2 = \\lvert \\mathrm{i}\\,e^{\\mathrm{i}t}+0.6\\,\\mathrm{i}\\,e^{\\mathrm{i}(3t)} \\rvert^2 = \\lvert e^{\\mathrm{i}t}+0.6\\,e^{\\mathrm{i}(3t)} \\rvert^2 = 1.36 + 1.2\\cos(2t)$，其最小值为 $1.36 - 1.2 = 0.16 > 0$。其他情况的分析类似。\n- **适定性**：该问题要求为一组特定的正则闭合曲线计算一个明确定义的整数——转数。数值算法有明确描述，对于足够精细的离散化，可以得到唯一、稳定且有意义的结果。\n- **客观性**：该问题使用精确的数学语言陈述，没有主观或模糊的术语。\n- **完整性与一致性**：该问题提供了求解所需的所有必要信息（函数、导数、区间、数值方法）。所提供的数据中没有矛盾。\n- **可行性**：这些计算在数值上是可行的，并且可以使用标准的数值库来实现。\n\n该问题没有表现出为无效问题所列出的任何缺陷。\n\n### 步骤3：结论与操作\n该问题是**有效的**。下面将提供一个解决方案。\n\n## 解决方案\n\n该问题要求对几条正则闭合平面曲线 $\\gamma$ 的转数 $r(\\gamma)$ 进行数值计算。转数是霍普夫旋转定理的一个结果，它是一个整数，量化了当一个人完全遍历曲线时单位切向量所旋转的总圈数。\n\n核心原理是在参数区间上对切向量角度的变化率进行积分。对于在 $[0, 2\\pi]$ 上参数化的曲线，其转数 $r(\\gamma)$ 由以下公式给出\n$$\nr(\\gamma) = \\frac{1}{2\\pi} \\int_{0}^{2\\pi} \\frac{d\\theta}{dt} dt = \\frac{\\theta(2\\pi) - \\theta(0)}{2\\pi}\n$$\n其中 $\\theta(t)$ 是单位切向量 $T(t) = \\frac{z'(t)}{|z'(t)|}$ 的角度。由于复数 $w$ 的角度由 $\\arg(w)$ 给出，我们有 $\\theta(t) = \\arg(T(t)) = \\arg(z'(t))$。模 $|z'(t)|$ 不影响角度。因此，我们可以直接使用导数 $z'(t)$ 的辐角。\n\n数值实现使用离散和来近似这个积分。算法流程如下：\n\n1.  **离散化**：将区间 $[0, 2\\pi]$ 剖分为 $N$ 个等距点，$t_j = j \\frac{2\\pi}{N-1}$，其中 $j=0, 1, \\dots, N-1$。选择一个足够大的 $N$ 值以确保连续点之间的角度变化小于 $\\pi$，从而防止混叠问题。\n\n2.  **角度计算**：对于由其导数 $z'(t)$ 定义的每个测试曲线，我们在每个采样点 $t_j$ 处评估此复变函数，得到一个复数序列 $\\{z'(t_j)\\}$。然后我们计算每个复数的主辐角 $\\phi_j = \\arg(z'(t_j))$。标准库函数通常返回此角度，其范围在区间 $(-\\pi, \\pi]$ 内。\n\n3.  **角度展开**：当连续变化的角度 $\\theta(t)$ 穿过 $(-\\pi, \\pi]$ 边界时，主辐角序列 $\\{\\phi_j\\}$ 将会表现出 $\\pm 2\\pi$ 的跳跃。为了获得连续角度函数 $\\theta(t)$ 的离散表示，我们必须对序列 $\\{\\phi_j\\}$ 进行“展开”。此过程涉及对后续角度值加上或减去 $2\\pi$ 的倍数，以确保任意两个连续值之间的差值最小化。具体来说，如果 $\\phi_{j+1} - \\phi_j > \\pi$，则表示从接近 $\\pi$ 跳跃到接近 $-\\pi$，因此我们通过减去 $2\\pi$ 来调整展开序列的后续部分。相反，如果 $\\phi_{j+1} - \\phi_j < -\\pi$，我们则加上 $2\\pi$。`numpy.unwrap` 函数可自动执行此过程。设得到的展开后角度序列为 $\\{\\theta_j\\}$。\n\n4.  **转数计算**：连续角度的总变化量可以通过展开序列的最后一个元素与第一个元素之差来近似，即 $\\Delta\\theta \\approx \\theta_{N-1} - \\theta_0$。然后转数计算如下\n    $$\n    r(\\gamma) \\approx \\frac{\\theta_{N-1} - \\theta_0}{2\\pi}\n    $$\n    由于霍普夫旋转定理保证了对于任何正则闭合曲线，$r(\\gamma)$ 是一个整数，我们将数值结果四舍五入到最近的整数，以校正任何浮点近似误差。\n\n此过程应用于所提供的八个测试用例中的每一个。使用足够多的点数（例如 $N=10000$）来保证所有给定曲线的准确性。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Computes the turning number for a list of complex-valued curves.\n    \"\"\"\n\n    # The problem defines z'(t), the derivative of the curve's complex representation z(t).\n    # The turning number can be computed from the argument of z'(t).\n    # Each function in the list corresponds to a test case for z'(t).\n    # Note: 1j is the Python syntax for the imaginary unit i.\n    z_prime_functions = [\n        # Case 1: Unit circle counterclockwise, z'(t) = i*e^(it)\n        lambda t: 1j * np.exp(1j * t),\n        # Case 2: Unit circle clockwise, z'(t) = -i*e^(-it)\n        lambda t: -1j * np.exp(-1j * t),\n        # Case 3: Double wrap counterclockwise, z'(t) = 2i*e^(i(2t))\n        lambda t: 2j * np.exp(1j * 2 * t),\n        # Case 4: Triple wrap clockwise, z'(t) = -3i*e^(-i(3t))\n        lambda t: -3j * np.exp(-1j * 3 * t),\n        # Case 5: Ellipse counterclockwise, z'(t) = -2sin(t) + i*0.5cos(t)\n        lambda t: -2 * np.sin(t) + 1j * 0.5 * np.cos(t),\n        # Case 6: Wavy circle counterclockwise, z'(t) = i*e^(it) + 0.6i*e^(i(3t))\n        lambda t: 1j * np.exp(1j * t) + 0.6j * np.exp(1j * 3 * t),\n        # Case 7: Wavy circle clockwise, z'(t) = -i*e^(-it) - 0.6i*e^(-i(3t))\n        lambda t: -1j * np.exp(-1j * t) - 0.6j * np.exp(-1j * 3 * t),\n        # Case 8: Double wrap wavy counterclockwise, z'(t) = 2i*e^(i(2t)) + 0.4i*e^(i(4t))\n        lambda t: 2j * np.exp(1j * 2 * t) + 0.4j * np.exp(1j * 4 * t),\n    ]\n\n    results = []\n    \n    # Use a sufficiently large number of points for numerical stability.\n    # This ensures that the angle change between samples is less than pi.\n    num_points = 10000\n    \n    # Create a uniform partition of the interval [0, 2*pi].\n    t = np.linspace(0, 2 * np.pi, num_points)\n\n    for z_prime_func in z_prime_functions:\n        # Step 1: Compute z'(t) at each sample point.\n        z_prime_values = z_prime_func(t)\n        \n        # Step 2: Compute the argument (angle) of each complex value.\n        # np.angle returns values in the interval (-pi, pi].\n        angles = np.angle(z_prime_values)\n        \n        # Step 3: Unwrap the angles to get a continuous angle profile.\n        # This removes the 2*pi jumps that occur when the angle crosses the -pi/pi boundary.\n        unwrapped_angles = np.unwrap(angles)\n        \n        # Step 4: Compute the total change in the unwrapped angle.\n        total_angle_change = unwrapped_angles[-1] - unwrapped_angles[0]\n        \n        # Step 5: Calculate the turning number by dividing by 2*pi and rounding.\n        # The turning number is guaranteed to be an integer by Hopf's Umlaufsatz.\n        turning_number = total_angle_change / (2 * np.pi)\n        \n        # Round to the nearest integer to account for floating-point inaccuracies.\n        results.append(int(np.round(turning_number)))\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "3050398"}]}