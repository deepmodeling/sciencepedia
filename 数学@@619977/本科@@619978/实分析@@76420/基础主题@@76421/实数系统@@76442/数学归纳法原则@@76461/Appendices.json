{"hands_on_practices": [{"introduction": "数学归纳法是证明对所有自然数都成立的命题的强大工具。第一个练习将演示归纳法在不等式证明中的经典应用，展示如何系统地建立基础情形，然后证明如果该性质对某一步成立，那么它也必然对下一步成立。这个问题中涉及的系统可靠性场景 [@problem_id:1316709] 说明了这类普适性不等式在工程和风险分析等领域中的实际重要性。", "problem": "一个工程团队正在设计一个深空探测器。该探测器的中央处理器由 $n$ 个关键且独立的模块组成。为了使探测器保持运行，所有 $n$ 个模块都必须正常工作。基于广泛的压力测试，团队确定在为期一年的任务中，第 $k$ 个模块的失效概率为 $p_k$，其中对于所有的 $k=1, 2, \\dots, n$ 都有 $0 \\le p_k \\le 1$。\n\n首席系统工程师计算出探测器精确的一年期可靠性 $R_{exact}$，即探测器在一年内不发生失效的概率。由于设计会议的时间限制，一位初级工程师提出了一个“线性失效聚合”（LFA）模型用于快速估算。在该模型中，近似可靠性 $R_{LFA}$ 的计算方法是将总失效概率视为各单个失效概率之和。\n\n设 $R_{exact}$ 为探测器的真实可靠性，$R_{LFA}$ 为使用LFA模型估算的可靠性。对于任何有效的概率集合 $\\{p_k\\}$ 和任意数量的模块 $n \\ge 1$，以下哪个陈述正确描述了 $R_{exact}$ 和 $R_{LFA}$ 之间的关系？\n\nA. $R_{exact} \\ge R_{LFA}$ 总是成立。\n\nB. $R_{exact} \\le R_{LFA}$ 总是成立。\n\nC. $R_{exact} = R_{LFA}$ 总是成立。\n\nD. 这种关系取决于 $p_k$ 的具体值。对于某些值的集合，$R_{exact} > R_{LFA}$，而对于另一些，$R_{exact} < R_{LFA}$。\n\nE. 两种模型都无效，因为可靠性不能这样计算。", "solution": "问题要求找出精确可靠性 $R_{exact}$ 与线性失效聚合（LFA）模型得出的近似可靠性 $R_{LFA}$ 之间的一般关系。我们必须首先根据问题描述为这两个量构建数学表达式。\n\n单个模块的可靠性是它不失效的概率。对于第 $k$ 个模块，这个概率是 $1 - p_k$。由于模块是独立的，并且所有模块都必须正常工作探测器才能运行，因此精确的总体可靠性 $R_{exact}$ 是各个模块可靠性的乘积：\n$$R_{exact} = \\prod_{k=1}^{n} (1 - p_k)$$\n\nLFA模型将总失效概率近似为各个失效概率之和，即 $\\sum_{k=1}^{n} p_k$。可靠性是1减去失效概率，因此在该模型下：\n$$R_{LFA} = 1 - \\sum_{k=1}^{n} p_k$$\n\n为了确定 $R_{exact}$ 和 $R_{LFA}$ 之间的关系，我们需要比较这两个表达式。具体来说，我们要确定 $\\prod_{k=1}^{n} (1 - p_k)$ 和 $1 - \\sum_{k=1}^{n} p_k$ 之间不等式的有效性。我们将对模块数量 $n$ 使用数学归纳法。\n\n设 $P(n)$ 为命题 $\\prod_{k=1}^{n} (1 - p_k) \\ge 1 - \\sum_{k=1}^{n} p_k$。\n\n**基础情形：** 对于 $n=1$，命题为：\n$$ \\prod_{k=1}^{1} (1 - p_k) \\ge 1 - \\sum_{k=1}^{1} p_k $$\n$$ 1 - p_1 \\ge 1 - p_1 $$\n这是成立的（等号成立）。所以，基础情形 $P(1)$ 是有效的。\n\n**归纳假设：** 假设对于某个整数 $m \\ge 1$，$P(m)$ 是成立的。即，假设：\n$$ \\prod_{k=1}^{m} (1 - p_k) \\ge 1 - \\sum_{k=1}^{m} p_k $$\n\n**归纳步骤：** 我们必须证明 $P(m+1)$ 也成立，即 $\\prod_{k=1}^{m+1} (1 - p_k) \\ge 1 - \\sum_{k=1}^{m+1} p_k$。\n\n从 $P(m+1)$ 不等式的左侧开始：\n$$ \\prod_{k=1}^{m+1} (1 - p_k) = \\left( \\prod_{k=1}^{m} (1 - p_k) \\right) (1 - p_{m+1}) $$\n\n根据归纳假设，我们知道 $\\prod_{k=1}^{m} (1 - p_k) \\ge 1 - \\sum_{k=1}^{m} p_k$。由于 $p_{m+1} \\in [0, 1]$，项 $(1 - p_{m+1})$ 是非负的。因此，我们可以将归纳假设不等式的两边同时乘以 $(1 - p_{m+1})$ 而不改变不等号的方向：\n$$ \\left( \\prod_{k=1}^{m} (1 - p_k) \\right) (1 - p_{m+1}) \\ge \\left( 1 - \\sum_{k=1}^{m} p_k \\right) (1 - p_{m+1}) $$\n\n现在，展开这个新不等式的右侧：\n$$ \\left( 1 - \\sum_{k=1}^{m} p_k \\right) (1 - p_{m+1}) = 1 - p_{m+1} - \\sum_{k=1}^{m} p_k + p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right) $$\n我们可以将各项重新组合，以匹配目标右侧的形式，即 $1 - \\sum_{k=1}^{m+1} p_k$：\n$$ 1 - \\left(p_{m+1} + \\sum_{k=1}^{m} p_k\\right) + p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right) = \\left(1 - \\sum_{k=1}^{m+1} p_k\\right) + p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right) $$\n\n我们需要将此表达式与 $1 - \\sum_{k=1}^{m+1} p_k$ 进行比较。多出来的项是 $p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right)$。\n由于对所有的 $k$ 都有 $p_k \\in [0, 1]$，我们有 $p_{m+1} \\ge 0$ 且 $\\sum_{k=1}^{m} p_k \\ge 0$。\n因此，它们的乘积是非负的：\n$$ p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right) \\ge 0 $$\n\n这意味着：\n$$ \\left(1 - \\sum_{k=1}^{m+1} p_k\\right) + p_{m+1}\\left(\\sum_{k=1}^{m} p_k\\right) \\ge 1 - \\sum_{k=1}^{m+1} p_k $$\n\n结合我们的不等式链，我们已经证明：\n$$ \\prod_{k=1}^{m+1} (1 - p_k) \\ge \\left( 1 - \\sum_{k=1}^{m} p_k \\right) (1 - p_{m+1}) \\ge 1 - \\sum_{k=1}^{m+1} p_k $$\n因此，$\\prod_{k=1}^{m+1} (1 - p_k) \\ge 1 - \\sum_{k=1}^{m+1} p_k$。这就完成了归纳步骤。\n\n根据数学归纳法原理，不等式 $P(n)$ 对所有整数 $n \\ge 1$ 均成立。\n这意味着对于任何 $n \\ge 1$ 和任何有效的概率集合 $\\{p_k\\}$，我们都有 $R_{exact} \\ge R_{LFA}$。这对应于选项 A。该不等式意味着初级工程师的 LFA 模型为探测器的真实可靠性提供了一个悲观估计（一个下界）。", "answer": "$$\\boxed{A}$$", "id": "1316709"}, {"introduction": "并非所有的数学命题都从 $n=1$ 开始成立。本练习将探讨一种常见的情形，即一个不等式仅对大于某个阈值 $n_0$ 的整数成立。你的任务不仅是找到这个起点，还要运用归纳法证明该命题对所有后续整数都成立 [@problem_id:1316741]，这体现了应用归纳法时的一项关键技能：确定正确的归纳基础。", "problem": "考虑不等式 $n! > 4^n$，其中 $n$ 是一个正整数。确定最小的正整数 $n_0$，使得对于所有整数 $n \\ge n_0$，该不等式都成立。", "solution": "我们通过考虑序列 $a_{n}=\\dfrac{n!}{4^{n}}$ 来比较 $n!$ 和 $4^{n}$。其递推比为\n$$\n\\frac{a_{n+1}}{a_{n}}=\\frac{(n+1)!/4^{n+1}}{n!/4^{n}}=\\frac{n+1}{4}.\n$$\n因此，当 $\\frac{n+1}{4} > 1$ 即 $n \\ge 4$ 时，$a_{n}$ 是严格递增的。从而，一旦对于某个 $n \\ge 4$ 有 $a_{n} > 1$，那么对于所有更大的 $n$，$a_{n}$ 将恒大于 $1$。\n\n我们计算一些值来找出 $a_{n}$ 首次超过 $1$ 的位置。对于 $n=1,2,3$，\n$$\na_{1}=\\frac{1}{4}1, \\quad a_{2}=\\frac{2}{16}=\\frac{1}{8}1, \\quad a_{3}=\\frac{6}{64}=\\frac{3}{32}1.\n$$\n由于 $a_{n}$ 在 $n \\ge 4$ 时是递增的，我们只需检验 $n=8$ 和 $n=9$ 的情况：\n$$\na_{8}=\\frac{8!}{4^{8}}=\\frac{40320}{65536}=\\frac{315}{512}1,\n$$\n所以对于所有 $4 \\le n \\le 8$，$a_{n}1$。接下来，\n$$\na_{9}=\\frac{9!}{4^{9}}=\\frac{8!}{4^{8}}\\cdot\\frac{9}{4}=\\frac{315}{512}\\cdot\\frac{9}{4}=\\frac{2835}{2048}>1.\n$$\n因此 $9! > 4^{9}$。由于 $a_{n}$ 在 $n \\ge 4$ 时是严格递增的，可得对于所有 $n \\ge 9$，$a_{n} > 1$（等价于 $n! > 4^{n}$）。因为该不等式在 $n=8$ 时不成立，所以最小的此类整数是 $n_{0}=9$。", "answer": "$$\\boxed{9}$$", "id": "1316741"}, {"introduction": "归纳法的原理远不止于代数推演，它体现了“分而治之”的思想，这在计算机科学和几何构造中是至关重要的。这个关于用L型三格骨牌覆盖网格的问题 [@problem_id:1316732] 为归纳推理提供了一个绝佳的、可视化的范例。通过遵循其递归算法，你将看到一个复杂问题如何被优雅地分解为若干个更小的、相同的子问题，而这正是归纳证明的精髓所在。", "problem": "一个L-形三格骨牌是由三个单位正方形组成，形成一个“L”形的形状。一个已知的结论是，一个移除了任意一个方格的 $2^n \\times 2^n$ 网格，可以被这种三格骨牌完美地密铺。\n\n构建这种密铺的一个标准递归算法如下。假设网格由坐标 $(r, c)$ 索引，其中 $1 \\le r, c \\le 2^n$。该算法将一个 $2^k \\times 2^k$ 的子网格（其中 $k1$ 且缺少一个方格）划分为四个相等的 $2^{k-1} \\times 2^{k-1}$ 象限。那个缺失的方格会恰好位于这四个象限中的一个。然后在四个象限的交汇点放置一个“中心”三格骨牌，其方向要保证它能覆盖三个“完整”象限（即不包含缺失方格的象限）中各一个方格。这就将原问题简化为四个更小的 $2^{k-1} \\times 2^{k-1}$ 子问题，每个子问题都缺少一个方格，然后重复此过程。\n\n对于一个左上角坐标为 $(r_{TL}, c_{TL})$ 的通用 $2^k \\times 2^k$ 子网格，其象限交界处的四个中心方格是：$(r_{TL} + 2^{k-1} - 1, c_{TL} + 2^{k-1} - 1)$、$(r_{TL} + 2^{k-1} - 1, c_{TL} + 2^{k-1})$、$(r_{TL} + 2^{k-1}, c_{TL} + 2^{k-1} - 1)$ 和 $(r_{TL} + 2^{k-1}, c_{TL} + 2^{k-1})$。\n\n考虑一个 $64 \\times 64$ 的网格（$n=6$），其中坐标为 $(17, 41)$ 的方格被移除。遵循所述的递归算法，当算法应用于包含原始移除方格的 $16 \\times 16$ 子网格时，会放置一个中心三格骨牌。设这个特定的三格骨牌所覆盖的三个方格的坐标为 $(r_1, c_1)、(r_2, c_2)$ 和 $(r_3, c_3)$。\n\n计算行坐标之和 $S_r = r_1+r_2+r_3$，以及列坐标之和 $S_c = c_1+c_2+c_3$。按顺序提供这两个和 $S_r$ 和 $S_c$ 作为你的最终答案。", "solution": "这个 $64 \\times 64$ 网格被划分为多个 $16 \\times 16$ 的子网格，其行区间为 $[1,16],[17,32],[33,48],[49,64]$，列区间为 $[1,16],[17,32],[33,48],[49,64]$。被移除的方格 $(17,41)$ 位于左上角为\n$$\n(r_{TL},c_{TL})=(17,33),\n$$\n的子网格中，该子网格跨越行 $17$ 到 $32$ 和列 $33$ 到 $48$。\n\n对于一个 $2^{k} \\times 2^{k}$ 的子网格，其四个中心方格位于\n$$\n(r_{TL} + 2^{k-1} - 1, c_{TL} + 2^{k-1} - 1),\\quad (r_{TL} + 2^{k-1} - 1, c_{TL} + 2^{k-1}),\\quad (r_{TL} + 2^{k-1}, c_{TL} + 2^{k-1} - 1),\\quad (r_{TL} + 2^{k-1}, c_{TL} + 2^{k-1}).\n$$\n这里 $k=4$，所以 $2^{k-1}=8$。代入可得这个 $16 \\times 16$ 子网格的四个中心方格：\n$$\n(17+7,33+7)=(24,40),\\quad (24,41),\\quad (25,40),\\quad (25,41).\n$$\n该子网格的象限是：\n- 左上象限：行 $17$–$24$，列 $33$–$40$（中心方格 $(24,40)$），\n- 右上象限：行 $17$–$24$，列 $41$–$48$（中心方格 $(24,41)$），\n- 左下象限：行 $25$–$32$，列 $33$–$40$（中心方格 $(25,40)$），\n- 右下象限：行 $25$–$32$，列 $41$–$48$（中心方格 $(25,41)$）。\n\n被移除的方格 $(17,41)$ 在右上象限中，所以中心三格骨牌必须覆盖属于其他象限的三个中心方格：\n$$\n(24,40),\\ (25,40),\\ (25,41).\n$$\n因此，\n$$\nS_{r}=24+25+25=74,\\qquad S_{c}=40+40+41=121.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}74  121\\end{pmatrix}}$$", "id": "1316732"}]}