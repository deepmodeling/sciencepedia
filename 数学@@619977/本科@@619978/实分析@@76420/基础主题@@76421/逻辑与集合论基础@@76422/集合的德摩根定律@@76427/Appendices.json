{"hands_on_practices": [{"introduction": "第一个练习是集合代数的基本训练。我们将运用德摩根定律以及分配律和补集律等其他性质，来化简一个看似复杂的集合表达式。掌握这种化简技巧至关重要，它不仅在抽象数学中很有价值，在数据库查询优化和数字电路设计等实际领域中，降低复杂性也是关键所在。[@problem_id:1786446]", "problem": "在设计数据库逻辑过滤器的背景下，设 $U$ 为一个代表所有用户资料的全集。考虑两个子集：集合 $A$ 包含在过去30天内有过购买行为的用户，集合 $B$ 包含订阅了推广简报的用户。一位数据科学家构建了一个复杂的筛选标准，其由集合表达式 $(A^c \\cup B)^c \\cup (A \\cap B)$ 表示，其中 $X^c$ 表示集合 $X$ 相对于 $U$ 的补集。您的任务是使用集合代数的基本定律将此表达式化简为其最基本的形式。", "solution": "设给定的表达式为\n$$\nS=(A^{c} \\cup B)^{c} \\cup (A \\cap B).\n$$\n对第一项应用德摩根定律：\n$$\n(A^{c} \\cup B)^{c}=(A^{c})^{c} \\cap B^{c}=A \\cap B^{c}.\n$$\n将此代入 $S$ 中：\n$$\nS=(A \\cap B^{c}) \\cup (A \\cap B).\n$$\n使用分配律提取因子 $A$：\n$$\n(A \\cap B^{c}) \\cup (A \\cap B)=A \\cap (B^{c} \\cup B).\n$$\n应用补集律 $B^{c} \\cup B=U$：\n$$\nA \\cap (B^{c} \\cup B)=A \\cap U.\n$$\n最后，使用恒等律 $A \\cap U=A$：\n$$\nS=A.\n$$\n因此，该表达式化简为 $A$。", "answer": "$$\\boxed{A}$$", "id": "1786446"}, {"introduction": "初学集合论时，一个常见的错误是记错德摩根定律。本练习旨在直接解决这个问题，它要求你量化正确法则 $(A \\cap B)^c = A^c \\cup B^c$ 与常见错误猜想 $A^c \\cap B^c$ 之间的差异。通过处理一个具体的整数例子，你将为这些定律的运作方式建立更强的直觉，并避免这个常见的陷阱。[@problem_id:1786479]", "problem": "在集合论的研究中，一个常见的错误是假设两个集合交集的补集等于它们各自补集的交集。本题要求您在一个具体案例中量化这一差异。\n\n设全集为 $U = \\{ n \\in \\mathbb{Z} \\mid 1 \\le n \\le 15 \\}$。\n考虑 $U$ 的以下两个子集：\n-   $A = \\{ n \\in U \\mid n \\text{ 是一个质数} \\}$\n-   $B = \\{ n \\in U \\mid n-1 \\text{ 是 } 4 \\text{ 的倍数} \\}$\n\n设集合 $S_1$ 定义为 $A$ 与 $B$ 交集的补集，即 $S_1 = (A \\cap B)^c$。\n设集合 $S_2$ 定义为 $A$ 与 $B$ 补集的交集，即 $S_2 = A^c \\cap B^c$。\n\n计算差集 $S_1 \\setminus S_2$ 中所有元素的和。", "solution": "目标是计算差集 $S_1 \\setminus S_2$ 中所有元素的和，其中 $S_1 = (A \\cap B)^c$ 且 $S_2 = A^c \\cap B^c$。全集为 $U = \\{ n \\in \\mathbb{Z} \\mid 1 \\le n \\le 15 \\}$。\n\n首先，我们明确列出全集 $U$ 的元素：\n$$U = \\{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\\}$$\n\n接着，我们确定子集 $A$ 和 $B$ 的元素。\n集合 $A$ 包含 $U$ 中所有的质数。1到15之间的质数有2, 3, 5, 7, 11和13。\n$$A = \\{2, 3, 5, 7, 11, 13\\}$$\n\n集合 $B$ 包含 $U$ 中满足 $n-1$ 是4的倍数的元素 $n$。我们可以通过求解整数 $k$ 的方程 $n-1 = 4k$ 来找到这些元素，即 $n = 4k+1$。\n当 $k=0$ 时，$n=1$。\n当 $k=1$ 时，$n=5$。\n当 $k=2$ 时，$n=9$。\n当 $k=3$ 时，$n=13$。\n当 $k=4$ 时，$n=17$，该元素不在 $U$ 中。\n所以，$B$ 的元素为：\n$$B = \\{1, 5, 9, 13\\}$$\n\n现在我们计算集合 $S_1 = (A \\cap B)^c$。\n首先，求交集 $A \\cap B$：\n$$A \\cap B = \\{ n \\mid n \\in A \\text{ 且 } n \\in B \\} = \\{5, 13\\}$$\n接着，求这个集合相对于 $U$ 的补集：\n$$S_1 = (A \\cap B)^c = U \\setminus \\{5, 13\\} = \\{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15\\}$$\n\n现在我们计算集合 $S_2 = A^c \\cap B^c$。\n首先，求 $A$ 的补集：\n$$A^c = U \\setminus A = \\{1, 4, 6, 8, 9, 10, 12, 14, 15\\}$$\n接着，求 $B$ 的补集：\n$$B^c = U \\setminus B = \\{2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15\\}$$\n现在，求这两个补集的交集：\n$$S_2 = A^c \\cap B^c = \\{1, 4, 6, 8, 9, 10, 12, 14, 15\\} \\cap \\{2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15\\}$$\n$$S_2 = \\{4, 6, 8, 10, 12, 14, 15\\}$$\n\n最后，我们计算差集 $D = S_1 \\setminus S_2$。这个集合包含所有在 $S_1$ 中但不在 $S_2$ 中的元素。\n$S_1 = \\{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15\\}$\n$S_2 = \\{4, 6, 8, 10, 12, 14, 15\\}$\n$$D = S_1 \\setminus S_2 = \\{1, 2, 3, 7, 9, 11\\}$$\n题目要求计算这个集合中所有元素的和。\n$$\\text{Sum} = 1 + 2 + 3 + 7 + 9 + 11 = 33$$\n\n另外，我们也可以使用集合恒等式来简化表达式 $S_1 \\setminus S_2$。德摩根定律之一指出 $(A \\cap B)^c = A^c \\cup B^c$。另一条则指出 $(A \\cup B)^c = A^c \\cap B^c$。\n题目要求计算 $S_1 \\setminus S_2 = (A \\cap B)^c \\setminus (A^c \\cap B^c)$。\n使用这些定律，这等价于 $(A^c \\cup B^c) \\setminus (A \\cup B)^c$。\n一个元素 $x$ 在这个集合中，当且仅当（$x \\in A^c$ 或 $x \\in B^c$）并且（$x \\notin (A \\cup B)^c$）。\n条件 $x \\notin (A \\cup B)^c$ 等价于 $x \\in (A \\cup B)$。\n所以，我们在寻找元素 $x \\in (A^c \\cup B^c) \\cap (A \\cup B)$。\n这可以简化为 $(A^c \\cap (A \\cup B)) \\cup (B^c \\cap (A \\cup B))$。\n使用分配律：\n$(A^c \\cap A) \\cup (A^c \\cap B) \\cup (B^c \\cap A) \\cup (B^c \\cap B)$\n因为 $A^c \\cap A = \\emptyset$ 且 $B^c \\cap B = \\emptyset$，所以上式简化为：\n$(A^c \\cap B) \\cup (A \\cap B^c) = (B \\setminus A) \\cup (A \\setminus B)$\n这就是 $A$ 和 $B$ 的对称差的定义，记作 $A \\Delta B$。\n让我们直接计算它：\n$A \\setminus B = \\{ n \\in A \\text{ 且 } n \\notin B \\} = \\{2, 3, 5, 7, 11, 13\\} \\setminus \\{1, 5, 9, 13\\} = \\{2, 3, 7, 11\\}$\n$B \\setminus A = \\{ n \\in B \\text{ 且 } n \\notin A \\} = \\{1, 5, 9, 13\\} \\setminus \\{2, 3, 5, 7, 11, 13\\} = \\{1, 9\\}$\n$A \\Delta B = (A \\setminus B) \\cup (B \\setminus A) = \\{2, 3, 7, 11\\} \\cup \\{1, 9\\} = \\{1, 2, 3, 7, 9, 11\\}$\n这与我们前面找到的集合 $D$ 相符。其元素的和为：\n$$\\text{Sum} = 1 + 2 + 3 + 7 + 9 + 11 = 33$$", "answer": "$$\\boxed{33}$$", "id": "1786479"}, {"introduction": "德摩根定律不仅是抽象的规则，它们也是具有现实世界影响的基本逻辑原理。这个问题将这些定律置于一个网络安全的实际场景中，在这个场景里，一个逻辑错误就可能导致系统故障。你的任务是诊断一个基于对如何否定复合条件的误解而产生的有缺陷的逻辑实现，这直接说明了集合求补与逻辑否定之间的联系。[@problem_id:1786450]", "problem": "一家为数据中心开发高级安全系统的公司定义了触发高级别警报的两个关键条件。该系统监控网络数据包流。如果一个数据包同时满足以下两个标准，则会触发警报：\n1. 数据包来自外部的、非白名单的IP地址。\n2. 数据包的有效载荷包含与已知恶意软件模式匹配的签名。\n\n设 `U` 为系统扫描的所有网络数据包的全集。\n设 `A` 为来自外部非白名单IP地址的数据包的子集。\n设 `B` 为其有效载荷包含已知恶意软件签名的数据包的子集。\n\n如果一个数据包属于集合 `A ∩ B`，则被认为是“高风险”的。所有其他数据包都被认为是“低风险”的。因此，所有低风险数据包的集合是高风险集合的补集，即 `(A ∩ B)ᶜ`。\n\n一名工程师的任务是配置一条日志记录规则，以记录每个被归类为“低风险”的数据包。该工程师实现了以下逻辑：\n\n“当且仅当数据包 `x` 不来自外部非白名单IP地址，并且数据包 `x` 不包含已知的恶意软件签名时，数据包 `x` 被记录为‘低风险’。”\n\n这个实现是有缺陷的，因为它未能记录某些类型的低风险数据包。您的任务是识别出那些确实是低风险，但*没有*被工程师有缺陷的规则所记录的数据包的确切集合。\n\n下列哪个集合论表达式正确地表示了这组未被记录的低风险数据包？\n\nA. `A ∩ B`\n\nB. `(A ∪ B)ᶜ`\n\nC. `Aᶜ ∩ Bᶜ`\n\nD. `(A ∩ Bᶜ) ∪ (Aᶜ ∩ B)`\n\nE. `A ∪ B`", "solution": "让我们根据提供的信息定义集合来分析问题。\n所有数据包的全集是 `U`。\n来自外部非白名单IP的数据包集合是 `A`。\n带有恶意软件签名的数据包集合是 `B`。\n\n首先，让我们确定“高风险”数据包的集合。如果一个数据包同时满足这两个条件，它就是高风险的。因此，高风险数据包的集合是 `A` 和 `B` 的交集。\n$$S_{\\text{high-risk}} = A \\cap B$$\n\n接下来，我们确定真正的“低风险”数据包的集合。这个集合包含了所有非高风险的数据包。这是高风险集合相对于全集 `U` 的补集。\n$$S_{\\text{low-risk, true}} = (A \\cap B)^{c}$$\n通过应用集合的德摩根定律，即 $(X \\cap Y)^{c} = X^{c} \\cup Y^{c}$，我们可以将真正的低风险数据包集合重写为：\n$$S_{\\text{low-risk, true}} = A^{c} \\cup B^{c}$$\n换句话说，如果一个数据包*不*来自外部IP，*或*它*不*包含恶意软件签名，或两者兼具，那么它就是真正的低风险。\n\n现在，我们来分析被工程师的有缺陷规则记录为“低风险”的数据包集合。该规则是：“当且仅当数据包 `x` 不来自外部非白名单IP地址，并且数据包 `x` 不包含已知的恶意软件签名时，数据包 `x` 被记录为‘低风险’。”\n一个数据包 `x` 不来自外部IP意味着 `x \\in A^{c}`。\n一个数据包 `x` 不包含恶意软件签名意味着 `x \\in B^{c}`。\n逻辑“与”（AND）对应于集合的交集。所以，被工程师记录的数据包集合是：\n$$S_{\\text{logged}} = A^{c} \\cap B^{c}$$\n\n问题要求的是那些确实是低风险，但*没有*被有缺陷的规则记录的数据包的集合。这对应于真正的低风险集合与被记录的数据包集合之间的差集。\n$$\\text{Unlogged packets} = S_{\\text{low-risk, true}} \\setminus S_{\\text{logged}}$$\n代入我们找到的表达式：\n$$\\text{Unlogged packets} = (A^{c} \\cup B^{c}) \\setminus (A^{c} \\cap B^{c})$$\n差集 `X \\ Y` 是指在 `X` 中但不在 `Y` 中的元素集合。表达式 `(X \\cup Y) \\setminus (X \\cap Y)` 是集合 `X` 和 `Y` 的对称差的定义，通常表示为 `X \\Delta Y`。\n在我们的例子中，未被记录的数据包集合是 `A^{c}` 和 `B^{c}` 的对称差。\n$$ \\text{Unlogged packets} = A^{c} \\Delta B^{c} = (A^{c} \\setminus B^{c}) \\cup (B^{c} \\setminus A^{c}) $$\n我们可以使用恒等式 `X \\setminus Y = X \\cap Y^{c}` 来简化这些项。\n第一项是 `A^{c} \\setminus B^{c} = A^{c} \\cap (B^{c})^{c} = A^{c} \\cap B`。\n第二项是 `B^{c} \\setminus A^{c} = B^{c} \\cap (A^{c})^{c} = B^{c} \\cap A`。\n将这两项合并，未被记录的数据包集合是：\n$$\\text{Unlogged packets} = (A^{c} \\cap B) \\cup (A \\cap B^{c})$$\n这个表达式代表了恰好满足两个条件之一的数据包集合：要么它们来自外部源但没有恶意软件签名（`A \\cap B^{c}`），要么它们不来自外部源但确实包含恶意软件签名（`A^{c} \\cap B`）。这些确实是低风险数据包（因为它们不同时满足两个高风险条件），但它们被工程师的逻辑遗漏了，该逻辑要求一个数据包必须*同时不满足*两个条件才被记录。\n\n将我们的结果与给定的选项进行比较：\nA. `A ∩ B`: 高风险数据包。不正确。\nB. `(A ∪ B)ᶜ`: 根据德摩根定律，这是 `Aᶜ ∩ Bᶜ`。这是*被*记录的集合。不正确。\nC. `Aᶜ ∩ Bᶜ`: 这是*被*记录的集合。不正确。\nD. `(A ∩ Bᶜ) ∪ (Aᶜ ∩ B)`: 这与我们推导出的未被记录的低风险数据包的表达式相匹配。正确。\nE. `A ∪ B`: 具有至少一个风险因素的数据包集合。不正确。\n\n因此，正确选项是 D。", "answer": "$$\\boxed{D}$$", "id": "1786450"}]}