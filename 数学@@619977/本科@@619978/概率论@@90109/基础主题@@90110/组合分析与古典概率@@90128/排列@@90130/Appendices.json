{"hands_on_practices": [{"introduction": "排列的核心是计算不同顺序的数量，但当元素出现重复时，我们该如何处理？这个问题提供了一个完美的起点，它模拟了从一组包含重复数字的序列中生成唯一访问代码的场景。通过解决这个问题，你将掌握处理多重集（即包含重复元素的集合）排列的基本公式 $$\\frac{n!}{n_{1}!n_{2}!\\cdots}$$，这是组合学中一项至关重要的技能。[@problem_id:1378986]", "problem": "一所大学的计算机科学系正在为实验室访问设计一种新的安全协议。该协议生成每日访问代码的方式如下：取YYYYMMDD格式的当前日期，并将其数字重新排列以创建所有可能的、不重复的序列。例如，在2024年2月24日，基础数字序列是20240224。从这个特定的数字序列可以生成多少个不同的访问代码？", "solution": "我们需要计算通过重新排列字符串“20240224”的数字可以获得的唯一序列的数量。这是一个多重集排列问题。\n\n首先，确定每个数字的多重性：\n- 总长度为 $8$。\n- 数字 $2$ 出现 $4$ 次。\n- 数字 $0$ 出现 $2$ 次。\n- 数字 $4$ 出现 $2$ 次。\n\n对于一个总大小为 $n$，各元素多重性为 $n_{1}, n_{2}, \\dots$ 的多重集，其不同排列的数量由多项式系数给出：\n$$\n\\frac{n!}{n_{1}!\\,n_{2}!\\,\\cdots}.\n$$\n\n在此问题中，$n=8$，且多重性为 $4,2,2$，因此总数为\n$$\n\\frac{8!}{4!\\,2!\\,2!}.\n$$\n通过约分计算：\n$$\n\\frac{8!}{4!\\,2!\\,2!}=\\frac{8\\cdot 7\\cdot 6\\cdot 5\\cdot 4!}{4!\\cdot 2\\cdot 2}=\\frac{8\\cdot 7\\cdot 6\\cdot 5}{4}=\\frac{1680}{4}=420.\n$$\n因此，共有 $420$ 个不同的访问代码。", "answer": "$$\\boxed{420}$$", "id": "1378986"}, {"introduction": "在掌握了基本的多重集排列后，让我们来增加一些现实世界中常见的复杂性：约束条件。在网络安全或系统设计等领域，排列常常需要遵循特定规则，例如某些元素必须位于开头或结尾，或者某些元素必须组合在一起。这个问题要求你在排列一组字节时，同时处理固定位置和连续数据块的约束，这能锻炼你将复杂问题分解为更小、更易于管理部分的能力。[@problem_id:1378958]", "problem": "一个物联网 (IoT) 网络的安全协议需要生成12字节的会话密钥。每个密钥都使用一个特定的可用字节池构建，该字节池包含：\n- 四个相同的‘标头’字节 (H)\n- 五个相同的‘数据’字节 (D)\n- 三个相同的‘终止符’字节 (T)\n\n一个密钥若要被视为有效，必须遵守以下结构规则：\n1. 密钥必须使用字节池中所有12个可用字节。\n2. 密钥的第一个字节必须是标头字节。\n3. 密钥的最后一个字节必须是终止符字节。\n4. 全部五个数据字节必须连续排列，在密钥内部形成一个单独的、不间断的块。\n\n可以生成多少个不同的有效会话密钥？", "solution": "我们必须使用恰好四个相同的 $H$、五个相同的 $D$ 和三个相同的 $T$ 来构成一个长度为12的序列，其中位置1固定为 $H$，位置12固定为 $T$，且所有五个 $D$ 必须作为一个连续的块排列。\n\n将位置1固定为 $H$、位置12固定为 $T$ 后，剩下位置2到11（共10个位置）用于放置剩余的多重集：3个 $H$、5个 $D$ 和2个 $T$。这五个 $D$ 必须在位置 $\\{2,3,\\ldots,11\\}$ 内占据一个连续的块。如果该块从位置 $s$ 开始，它将占据位置 $s,s+1,s+2,s+3,s+4$，这些位置必须包含在 $\\{2,\\ldots,11\\}$ 中。因此 $s$ 满足 $2 \\leq s \\leq 7$，这为 $D$ 块提供了恰好\n$$10 - 5 + 1 = 6$$\n种可能的起始位置。\n\n对于 $D$ 块的任何一种固定放置方式，位置2到11中剩余的 $10-5=5$ 个位置必须用3个相同的 $H$ 和2个相同的 $T$ 来填充。不同的填充方式的数量，就是从5个位置中选择3个来放置 $H$ 的方法数，即\n$$\\binom{5}{3} = 10.$$\n\n由于不同的 $D$ 块起始位置会产生不同的序列（五个 $D$ 的唯一连续段决定了该块的位置），因此有效密钥的总数为\n$$6 \\times \\binom{5}{3} = 6 \\times 10 = 60.$$", "answer": "$$\\boxed{60}$$", "id": "1378958"}, {"introduction": "许多排列问题不仅包含“必须”的条件，还包含“绝不”的否定约束。要计算满足“不相邻”这类条件的排列数量，一个强大的策略是先计算出总的排列数，然后减去不符合条件的“禁用”排列数——这就是容斥原理的精髓。这个问题模拟了一个团队座次安排，既要满足整体的交替模式，又要避开特定两人相邻的情况，让你能够亲手应用这一优雅的数学思想。[@problem_id:1379008]", "problem": "一家科技公司正在为一个关键项目组建一个新的跨学科团队。该团队由5名数据科学家和5名软件工程师组成。为了拍摄一张宣传照片，所有10名团队成员将坐成一排，共10个座位。为了直观地体现团队的协作性质，座位安排必须满足同一部门的员工不能相邻而坐（即任意两名数据科学家或任意两名软件工程师都不能坐在一起）。此外，由于众所周知的一项职业竞争关系，某位特定的数据科学家Alice，和某位特定的软件工程师Bob，座位不得相邻。\n\n请确定满足这两个条件的所有可能的座位安排总数。", "solution": "设D表示数据科学家，S表示软件工程师。问题要求计算一行中5个D和5个S的排列数量，这些排列需满足两个条件：\n1. 排列必须是交错的（任意两个D或两个S都不相邻）。\n2. 特定的数据科学家Alice (A) 和特定的软件工程师Bob (B) 不相邻。\n\n我们将使用容斥原理来解决这个问题。设 $N_{total}$ 为对Alice和Bob没有任何限制条件下的交错排列总数。设 $N_{forbidden}$ 为Alice和Bob *必须* 相邻的交错排列总数。那么，所求的排列数就是 $N_{total} - N_{forbidden}$。\n\n步骤1：计算交错排列的总数，$N_{total}$。\n对于5个D和5个S的交错排列，有两种可能的模式：\n情况1：该行以数据科学家开头。模式为 D S D S D S D S D S。\n- 数据科学家的5个位置可以由5位特定的数据科学家填充，有 $5!$ 种方式。\n- 软件工程师的5个位置可以由5位特定的软件工程师填充，有 $5!$ 种方式。\n- 这种情况下排列的总数为 $5! \\times 5!$。\n\n情况2：该行以软件工程师开头。模式为 S D S D S D S D S D。\n- 同样地，5位软件工程师可以有 $5!$ 种排列方式，5位数据科学家也可以有 $5!$ 种排列方式。\n- 这种情况下排列的总数为 $5! \\times 5!$。\n\n因此，交错排列的总数是两种情况的总和：\n$N_{total} = (5! \\times 5!) + (5! \\times 5!) = 2 \\times (5!)^2$。\n$5! = 120$。所以，$N_{total} = 2 \\times (120)^2 = 2 \\times 14400 = 28800$。\n\n步骤2：计算被禁止的排列数，$N_{forbidden}$，即排列是交错的并且Alice和Bob相邻。\n我们必须再次考虑两种交错模式。\n\n情况A：模式为 D S D S D S D S D S。\nAlice (A) 是一名数据科学家 (D)，所以她必须在奇数位置（1, 3, 5, 7, 9）。Bob (B) 是一名软件工程师 (S)，所以他必须在偶数位置（2, 4, 6, 8, 10）。要使他们相邻，他们的位置编号必须相差1。让我们计算一下可能的相邻位置对的数量。\n相邻的座位对是 (1,2), (2,3), (3,4), ..., (9,10)。\n- 如果A在位置1 (D)，B可以在位置2 (S)。\n- 如果A在位置3 (D)，B可以在位置2 (S) 或 4 (S)。\n- 如果A在位置5 (D)，B可以在位置4 (S) 或 6 (S)。\n- 如果A在位置7 (D)，B可以在位置6 (S) 或 8 (S)。\n- 如果A在位置9 (D)，B可以在位置8 (S) 或 10 (S)。\n将Alice和Bob相邻放置的总方式数为 $1 + 2 + 2 + 2 + 2 = 9$。\n对于这9种Alice和Bob的放置方式中的每一种，剩下的4名数据科学家可以在剩下的4个'D'位置上以 $4!$ 种方式排列，剩下的4名软件工程师可以在剩下的4个'S'位置上以 $4!$ 种方式排列。\n所以，在这种情况下，被禁止的排列数为 $9 \\times 4! \\times 4!$。\n\n情况B：模式为 S D S D S D S D S D。\nAlice (A) 必须在偶数位置 (2, 4, 6, 8, 10)。Bob (B) 必须在奇数位置 (1, 3, 5, 7, 9)。\n根据与情况A的对称性，也有9种方式可以使Alice和Bob相邻放置。\n- 如果B在位置1 (S)，A可以在位置2 (D)。\n- 如果B在位置3 (S)，A可以在位置2 (D) 或 4 (D)。\n- ……以此类推。逻辑是相同的，从而得到9种可能的(A,B)对的相邻放置方式。\n对于这9种放置方式中的每一种，剩下的4名数据科学家和4名软件工程师可以有 $4! \\times 4!$ 种排列方式。\n所以，在这种情况下，被禁止的排列数也是 $9 \\times 4! \\times 4!$。\n\n被禁止的排列总数是两种情况的总和：\n$N_{forbidden} = (9 \\times 4! \\times 4!) + (9 \\times 4! \\times 4!) = 18 \\times (4!)^2$。\n$4! = 24$。所以，$N_{forbidden} = 18 \\times (24)^2 = 18 \\times 576 = 10368$。\n\n步骤3：计算最终答案。\n有效排列的数量为 $N_{total} - N_{forbidden}$。\n方式数 = $(2 \\times (5!)^2) - (18 \\times (4!)^2)$\n在计算之前，我们可以简化这个表达式：\n方式数 = $2 \\times (5 \\times 4!)^2 - 18 \\times (4!)^2$\n$= 2 \\times 25 \\times (4!)^2 - 18 \\times (4!)^2$\n$= (50 - 18) \\times (4!)^2$\n$= 32 \\times (4!)^2$\n$= 32 \\times (24)^2$\n$= 32 \\times 576$\n$= 18432$。\n\n或者，使用预先计算好的值：\n方式数 = $28800 - 10368 = 18432$。", "answer": "$$\\boxed{18432}$$", "id": "1379008"}]}