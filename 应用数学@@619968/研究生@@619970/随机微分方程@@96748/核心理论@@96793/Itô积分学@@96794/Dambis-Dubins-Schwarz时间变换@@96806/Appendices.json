{"hands_on_practices": [{"introduction": "理论学习的最佳方式之一就是通过具体例子进行计算。本练习旨在通过一个特例来巩固你对丹比斯-杜宾斯-施瓦茨（Dambis-Dubins-Schwarz, DDS）定理核心机制的理解。你将从一个由伊藤积分定义的连续局部鞅出发，显式地计算其二次变差过程，推导出相应的时间变换，并最终验证经过时间变换后的过程确实具备标准布朗运动的关键性质。这个过程将理论与计算紧密结合，是掌握DDS定理的第一步。[@problem_id:3000787]", "problem": "考虑一个概率空间 $\\left(\\Omega,\\mathcal{F},\\mathbb{P}\\right)$，其上配备了一个满足通常条件的流 $\\left\\{\\mathcal{F}_{t}\\right\\}_{t\\geq 0}$，并令 $\\left\\{W_{t}\\right\\}_{t\\geq 0}$ 为一个标准布朗运动。定义连续局部鞅 $M=\\left\\{M_{t}\\right\\}_{t\\geq 0}$ 如下：\n$$\nM_{t} \\equiv \\int_{0}^{t} \\exp\\!\\left(\\frac{u}{2}\\right)\\,\\mathrm{d}W_{u}.\n$$\n令 $A_{t}\\equiv \\langle M\\rangle_{t}$ 表示 $M$ 在时间 $t$ 的二次变差。Dambis-Dubins-Schwarz (DDS) 时间变换是根据二次变差 $A$ 的右连续逆来构建的，定义如下：\n$$\nT_{s}\\equiv \\inf\\left\\{t\\geq 0:\\,A_{t}>s\\right\\},\\quad s\\geq 0.\n$$\n仅从二次变差和 Itô 等距的定义，以及对于连续局部鞅 $M_{t}^{2}-\\langle M\\rangle_{t}$ 是一个鞅这一特征出发，完成以下任务：\n- 计算 $A_{t}$，并证明它是确定性的且严格递增。\n- 构造 $T_{s}$ 的显式闭式解。\n- 定义 $B_{s}\\equiv M_{T_{s}}$ 并验证 $\\operatorname{Var}\\!\\left(B_{s}\\right)$ 等于 $s$。\n\n将你的最终答案表示为一个单行矩阵，按顺序包含时间变换 $T_{s}$ 和方差 $\\operatorname{Var}\\!\\left(B_{s}\\right)$。无需四舍五入。", "solution": "用户提供了一个关于 Dambis-Dubins-Schwarz (DDS) 时间变换定理的有效随机微积分问题。该问题具有科学依据、适定且客观。我们将提供完整的解答。\n\n问题要求我们分析由 Itô 积分定义的连续局部鞅 $M$：\n$$\nM_{t} = \\int_{0}^{t} \\exp\\left(\\frac{u}{2}\\right)\\,\\mathrm{d}W_{u}\n$$\n其中 $\\left\\{W_{t}\\right\\}_{t\\geq 0}$ 是一个标准布朗运动。我们有三个任务目标：\n$1$. 计算二次变差 $A_{t} \\equiv \\langle M\\rangle_{t}$ 并证明它是确定性的且严格递增。\n$2$. 找到时间变换 $T_{s} \\equiv \\inf\\left\\{t\\geq 0:\\,A_{t}>s\\right\\}$ 的闭式表达式。\n$3$. 验证时间变换后的过程 $B_{s} \\equiv M_{T_{s}}$ 的方差等于 $s$，即 $\\operatorname{Var}(B_s) = s$。\n\n我们将依次处理这些任务。\n\n首先，我们计算二次变差 $A_{t}$。过程 $M_{t}$ 是一个形如 $\\int_{0}^{t} \\sigma_{u}\\,\\mathrm{d}W_{u}$ 的 Itô 积分，其中被积函数为 $\\sigma_{u} = \\exp\\left(\\frac{u}{2}\\right)$。对于任何此类 Itô 积分，其二次变差过程 $\\langle M \\rangle_{t}$ 由下式给出：\n$$\n\\langle M \\rangle_{t} = \\int_{0}^{t} \\sigma_{u}^{2}\\,\\mathrm{d}u.\n$$\n在本例中，被积函数 $\\sigma_{u}$ 是一个关于时间的确定性函数。我们将其表达式代入二次变差的公式中：\n$$\nA_{t} = \\langle M \\rangle_{t} = \\int_{0}^{t} \\left(\\exp\\left(\\frac{u}{2}\\right)\\right)^{2}\\,\\mathrm{d}u = \\int_{0}^{t} \\exp(u)\\,\\mathrm{d}u.\n$$\n计算此定积分可得：\n$$\nA_{t} = \\left[\\exp(u)\\right]_{0}^{t} = \\exp(t) - \\exp(0) = \\exp(t) - 1.\n$$\n$A_{t}$ 的这个表达式仅依赖于时间参数 $t$，而不依赖于概率空间 $\\left(\\Omega,\\mathcal{F},\\mathbb{P}\\right)$ 中的任何随机元素。因此，$A_{t} = \\exp(t) - 1$ 是一个确定性过程。\n\n为了证明 $A_{t}$ 在 $t \\geq 0$ 上是严格递增的，我们可以考察它关于 $t$ 的导数：\n$$\n\\frac{\\mathrm{d}A_{t}}{\\mathrm{d}t} = \\frac{\\mathrm{d}}{\\mathrm{d}t}\\left(\\exp(t) - 1\\right) = \\exp(t).\n$$\n对于所有实数 $t$，指数函数 $\\exp(t)$ 都是严格为正的。因此，对于 $t \\geq 0$，我们有 $\\frac{\\mathrm{d}A_{t}}{\\mathrm{d}t} > 0$，这证明了 $A_{t}$ 是一个关于 $t$ 的严格递增函数。\n\n第二，我们构造时间变换 $T_{s}$ 的闭式解。$T_{s}$ 定义为 $A_{t}$ 的右连续逆：\n$$\nT_{s} \\equiv \\inf\\left\\{t\\geq 0:\\,A_{t}>s\\right\\}, \\quad s \\geq 0.\n$$\n我们代入 $A_{t}$ 的表达式：\n$$\nT_{s} = \\inf\\left\\{t\\geq 0:\\,\\exp(t) - 1 > s\\right\\}.\n$$\n该不等式可以重新整理为 $\\exp(t) > s + 1$。由于自然对数函数 $\\ln(\\cdot)$ 是指数函数的反函数且是严格递增的，我们可以将其应用于不等式的两边而不改变不等式的方向：\n$$\n\\ln(\\exp(t)) > \\ln(s+1) \\implies t > \\ln(s+1).\n$$\n所以，$T_{s}$ 的定义变为：\n$$\nT_{s} = \\inf\\left\\{t\\geq 0:\\,t > \\ln(s+1)\\right\\}.\n$$\n所有严格大于 $\\ln(s+1)$ 的 $t$ 组成的集合的下确界恰好是 $\\ln(s+1)$。为了满足条件 $t \\geq 0$，我们必须有 $\\ln(s+1) \\geq 0$，这意味着 $s+1 \\geq 1$，即 $s \\geq 0$。这与问题中给出的 $s$ 的定义域一致。因此，时间变换的闭式表达式为：\n$$\nT_{s} = \\ln(s+1).\n$$\n\n第三，我们验证 $\\operatorname{Var}(B_{s}) = s$，其中 $B_{s} = M_{T_{s}}$。方差的定义为 $\\operatorname{Var}(B_s) = \\mathbb{E}[B_s^2] - (\\mathbb{E}[B_s])^2$。\n\n让我们首先计算 $B_s$ 的期望。由于 $M_t$ 是一个关于标准布朗运动的、具有确定性被积函数的 Itô 积分，其期望对所有 $t$ 都为零：\n$$\n\\mathbb{E}[M_t] = \\mathbb{E}\\left[\\int_{0}^{t} \\exp\\left(\\frac{u}{2}\\right)\\,\\mathrm{d}W_{u}\\right] = 0.\n$$\n时间变换 $T_s = \\ln(s+1)$ 是确定性的。因此，$\\mathbb{E}[B_s] = \\mathbb{E}[M_{T_s}] = \\mathbb{E}[M_{\\ln(s+1)}] = 0$。\n\n现在我们计算二阶矩 $\\mathbb{E}[B_s^2]$。根据 Itô 等距，对于确定性被积函数 $\\sigma_u$，Itô 积分 $M_t = \\int_{0}^{t} \\sigma_u \\,\\mathrm{d}W_u$ 的二阶矩为：\n$$\n\\mathbb{E}[M_t^2] = \\mathbb{E}\\left[\\left(\\int_{0}^{t} \\sigma_{u}\\,\\mathrm{d}W_{u}\\right)^2\\right] = \\int_{0}^{t} \\sigma_{u}^{2}\\,\\mathrm{d}u.\n$$\n我们认出右边就是二次变差 $\\langle M \\rangle_t$，我们已经求出它等于 $A_t = \\exp(t) - 1$。所以，$\\mathbb{E}[M_t^2] = A_t$。这也与所给的特征——$M_t^2 - \\langle M \\rangle_t$ 是一个鞅——相一致，该特征意味着 $\\mathbb{E}[M_t^2 - \\langle M \\rangle_t] = 0$，从而得到 $\\mathbb{E}[M_t^2] = \\mathbb{E}[\\langle M \\rangle_t]$。由于 $\\langle M \\rangle_t = A_t$ 是确定性的，$\\mathbb{E}[\\langle M \\rangle_t] = A_t$，因此 $\\mathbb{E}[M_t^2] = A_t$。\n\n现在我们可以计算 $\\mathbb{E}[B_s^2] = \\mathbb{E}[M_{T_s}^2]$。因为 $T_s = \\ln(s+1)$ 是一个确定的时间，我们可以将这个值代入 $t$ 的二阶矩表达式中：\n$$\n\\mathbb{E}[B_s^2] = \\mathbb{E}[M_{\\ln(s+1)}^2] = A_{\\ln(s+1)}.\n$$\n使用公式 $A_t = \\exp(t) - 1$，我们得到：\n$$\nA_{\\ln(s+1)} = \\exp(\\ln(s+1)) - 1 = (s+1) - 1 = s.\n$$\n因此，$\\mathbb{E}[B_s^2] = s$。\n于是方差为：\n$$\n\\operatorname{Var}(B_s) = \\mathbb{E}[B_s^2] - (\\mathbb{E}[B_s])^2 = s - 0^2 = s.\n$$\n这样就完成了验证。Dambis-Dubins-Schwarz 定理确实断言了时间变换后的过程 $B_{s}$ 是一个标准布朗运动，而标准布朗运动的一个关键性质是其在时间 $s$ 的方差为 $s$。我们的计算证实了这一性质。\n\n最终答案要求给出 $T_s$ 的表达式和 $\\operatorname{Var}(B_s)$ 的值。\n- 时间变换：$T_{s} = \\ln(s+1)$。\n- 方差：$\\operatorname{Var}(B_{s}) = s$。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\ln(s+1) & s \\end{pmatrix}}\n$$", "id": "3000787"}, {"introduction": "掌握了理论计算后，下一个挑战是如何在实践中应用DDS定理，尤其是在我们只能获得离散观测数据的情况下。本练习将理论付诸实践，要求你设计并实现两种数值方案来近似计算时间变换 $T_s$——这是DDS定理的核心组成部分。通过在一系列已知精确解的测试案例上评估你的算法，你将能直观地理解不同近似方法的精度和行为，并为在真实数据上应用时间变换方法奠定基础。[@problem_id:3000817]", "problem": "设 $M = \\{M_t\\}_{t \\geq 0}$ 是一个连续局部鞅，且 $M_0 = 0$，其二次变差 $\\langle M \\rangle = \\{\\langle M \\rangle_t\\}_{t \\geq 0}$ 是满足关于 $M$ 的随机积分的 Itô 等距性的唯一连续非减过程。Dambis-Dubins-Schwarz 定理的时间变换由映射 $T : [0,\\infty) \\to [0,\\infty]$ 定义，其为右连续逆：\n$$\nT_s := \\inf\\{ t \\geq 0 : \\langle M \\rangle_t > s \\}.\n$$\n在数值实践中，我们观察二次变差 $\\langle M \\rangle_t$ 在有限区间 $[0,T]$ 上的均匀网格 $t_k = k\\Delta$ 上的离散时间采样，观测值为 $A_k := \\langle M \\rangle_{t_k}$，其中 $k = 0,1,\\dots, N$，且 $N = \\lfloor T/\\Delta \\rfloor$。请设计一个离散格式，仅使用网格 $\\{t_k\\}$ 和值 $\\{A_k\\}$ 来近似 $T_s$，并在对 $\\langle M \\rangle$ 做出适用于连续局部鞅的正则性假设下，分析当网格尺寸 $\\Delta \\to 0$ 时的收敛性。\n\n您的程序必须实现两种 $T_s$ 的近似格式：\n- 一种阶梯逆格式，返回观测值 $A_k$ 严格超过 $s$ 的第一个网格时间 $t_k$。\n- 一种线性插值逆格式，当 $s$ 严格位于两个连续观测值 $A_{k-1} < s < A_k$ 之间时，返回连接 $(t_{k-1}, A_{k-1})$ 和 $(t_k, A_k)$ 的直线达到水平 $s$ 时的唯一 $t \\in (t_{k-1}, t_k)$；如果 $A_{k-1} = A_k$，则根据严格超额准则返回 $t_k$。\n\n分析必须是有原则的，从连续局部鞅及其二次变差过程的基本性质出发。除了这些定义之外，不得使用任何快捷公式。\n\n请实现这些格式，并在以下测试套件中根据真实解凭经验评估其误差，其中精确的逆 $T_s$ 是解析已知的。在每种情况下，定义 $A(t)$ 和相应的精确逆 $T(s)$，设置一个时间区间 $T$，选择两个网格尺寸 $\\Delta_1$ 和 $\\Delta_2$，并在可达范围 $[0, A(T)]$ 内的 $s$ 值均匀网格上计算上确界误差。\n\n测试套件：\n1. 光滑，常数导数：\n   - 在 $[0, 2]$ 上，$A(t) := t$，因此 $T(s) = s$。\n   - 时间区间 $T = 2$，网格尺寸 $\\Delta_1 = 0.1, \\Delta_2 = 0.05$。\n   - 在 $[0, A(T)] = [0, 2]$ 中使用 $1001$ 个均匀间隔的 $s$ 值。\n\n2. 光滑，严格递增，非恒定导数：\n   - 在 $[0, 1]$ 上，$A(t) := t^2 + t$，因此 $T(s) = \\frac{-1 + \\sqrt{1 + 4s}}{2}$。\n   - 时间区间 $T = 1$，网格尺寸 $\\Delta_1 = 0.1, \\Delta_2 = 0.05$。\n   - 在 $[0, A(T)] = [0, 2]$ 中使用 $1001$ 个均匀间隔的 $s$ 值。\n\n3. 平台期后线性增长（边界情况）：\n   - 当 $t \\in [0, \\tfrac{1}{2}]$ 时，$A(t) := 0$；当 $t \\in (\\tfrac{1}{2}, 1]$ 时，$A(t) := t - \\tfrac{1}{2}$，因此 $A(T) = \\tfrac{1}{2}$。\n   - 精确的逆 $T(s)$ 等于 $T(0) = \\tfrac{1}{2}$，且当 $s \\in (0, \\tfrac{1}{2}]$ 时，$T(s) = \\tfrac{1}{2} + s$。\n   - 时间区间 $T = 1$，网格尺寸 $\\Delta_1 = 0.1, \\Delta_2 = 0.05$。\n   - 在 $[0, A(T)] = [0, \\tfrac{1}{2}]$ 中使用 $1001$ 个均匀间隔的 $s$ 值。\n\n对于每个测试用例 $i \\in \\{1,2,3\\}$ 和每个网格尺寸 $\\Delta \\in \\{\\Delta_1, \\Delta_2\\}$，计算阶梯格式和插值格式下近似逆 $T_s^\\Delta$ 与精确逆 $T(s)$ 之间绝对误差在 $s$ 网格上的上确界。输出必须是 $12$ 个浮点数，按以下顺序排列：\n$$\n\\big[E^{\\mathrm{step}}_{1,\\Delta_1}, E^{\\mathrm{step}}_{1,\\Delta_2}, E^{\\mathrm{lin}}_{1,\\Delta_1}, E^{\\mathrm{lin}}_{1,\\Delta_2}, E^{\\mathrm{step}}_{2,\\Delta_1}, E^{\\mathrm{step}}_{2,\\Delta_2}, E^{\\mathrm{lin}}_{2,\\Delta_1}, E^{\\mathrm{lin}}_{2,\\Delta_2}, E^{\\mathrm{step}}_{3,\\Delta_1}, E^{\\mathrm{step}}_{3,\\Delta_2}, E^{\\mathrm{lin}}_{3,\\Delta_1}, E^{\\mathrm{lin}}_{3,\\Delta_2}\\big].\n$$\n\n最终输出格式：\n您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果（例如，“[result1,result2,result3]”）。所有输出都是无量纲实数，必须以浮点数形式打印。", "solution": "出发点是连续局部鞅的二次变差结构以及 Dambis-Dubins-Schwarz 时间变换的定义。对于一个适应于满足通常条件的随机基的连续局部鞅 $M_t$，其二次变差过程 $\\langle M \\rangle_t$ 是唯一一个满足 $\\langle M \\rangle_0 = 0$ 的连续非减过程，使得对于任何有界可料过程 $\\phi$，都有\n$$\n\\mathbb{E}\\left[\\left(\\int_0^t \\phi_u \\, \\mathrm{d}M_u\\right)^2\\right] = \\mathbb{E}\\left[\\int_0^t \\phi_u^2 \\, \\mathrm{d}\\langle M \\rangle_u\\right].\n$$\n当 $M_t$ 是 Itô 积分 $M_t = \\int_0^t \\sigma(u) \\, \\mathrm{d}W_u$（其中 $W_u$ 是布朗运动，$\\sigma$ 是平方可积的可料过程）时，二次变差是确定性的，\n$$\n\\langle M \\rangle_t = \\int_0^t \\sigma^2(u) \\, \\mathrm{d}u,\n$$\n这是一个连续、非减且满足 $\\langle M \\rangle_0 = 0$ 的过程。Dambis-Dubins-Schwarz 定理定义了一个时间变换\n$$\nT_s := \\inf \\{ t \\geq 0 : \\langle M \\rangle_t > s \\},\n$$\n它是映射 $t \\mapsto \\langle M \\rangle_t$ 的右连续逆，并由此可以得到一个布朗运动 $B_s := M_{T_s}$。\n\n我们设计并分析用于根据 $\\langle M \\rangle$ 的离散样本近似 $T_s$ 的数值格式。\n\n1. 离散阶梯逆格式。给定均匀网格 $t_k = k\\Delta$（其中 $k = 0, 1, \\dots, N$）和观测值 $A_k := \\langle M \\rangle_{t_k}$，对于任何水平 $s \\geq 0$，定义近似值为\n$$\nT_s^{\\mathrm{step},\\Delta} := \n\\begin{cases}\nt_k & \\text{对于满足 } A_k > s \\text{ 的最小 } k \\in \\{0,\\dots,N\\},\\\\\nt_N & \\text{如果在 } [0,T] \\text{上不存在这样的 } k.\n\\end{cases}\n$$\n这是具有严格不等式的右连续逆映射的离散模拟。由于 $\\{A_k\\}$ 关于 $k$ 是非减的，因此选择第一个满足 $A_k > s$ 的索引是明确定义的。\n\n2. 离散线性插值逆格式。如果 $s$ 严格位于两个连续观测值 $A_{k-1} < s < A_k$ 之间，则在区间 $[t_{k-1}, t_k]$ 内，$t \\mapsto A(t)$ 的分段线性插值由下式定义：\n$$\n\\widetilde{A}(t) := A_{k-1} + \\frac{A_k - A_{k-1}}{\\Delta} (t - t_{k-1}) \\quad \\text{对于 } t \\in [t_{k-1}, t_k].\n$$\n然后我们定义\n$$\nT_s^{\\mathrm{lin},\\Delta} := t_{k-1} + \\Delta \\cdot \\frac{s - A_{k-1}}{A_k - A_{k-1}},\n$$\n在出现平台期（即 $A_k = A_{k-1}$）的情况下，我们通过返回 $t_k$ 来强制执行严格超额准则：\n$$\nT_s^{\\mathrm{lin},\\Delta} := \n\\begin{cases}\nt_{k-1} + \\Delta \\cdot \\dfrac{s - A_{k-1}}{A_k - A_{k-1}} & \\text{如果 } A_k > A_{k-1},\\\\\nt_k & \\text{如果 } A_k = A_{k-1},\n\\end{cases}\n$$\n需要理解的是，如果在 $[0,T]$ 上不存在满足 $A_k > s$ 的 $k$，我们返回 $t_N$。\n\n收敛性分析基于映射 $A(t) := \\langle M \\rangle_t$ 的正则性。假设 $A$ 是连续、非减、可微的，其导数 $a(t) := A'(t)$ 对所有 $t \\in [0,T]$ 满足\n$$\n0 \\leq a(t) \\leq M, \\quad \\text{且} \\quad a(t) \\geq m > 0 \\text{ 对于 } t \\in [0,T_*],\n$$\n其中 $M$ 为有限值，而 $m$ 在逆函数没有平台期的子集上为严格正常数。严格正性保证了在 $[0,T_*]$ 上的可逆性。对于导数 $a(t) = 0$ 的平台区间，$A$ 是常数，右连续逆 $T_s$ 在相应水平上表现出跳跃。\n\n阶梯逆的误差界。设 $s \\in [0, A(T)]$，并假设存在唯一的 $t \\in [0,T]$ 使得 $A(t) = s$ 且 $a(t) \\geq m > 0$。记 $k$ 为满足 $t_k \\geq t$ 的最小整数。那么 $A_{k-1} \\leq s < A_k$ 且\n$$\nT_s^{\\mathrm{step},\\Delta} = t_k, \\quad \\text{而} \\quad T(s) = t.\n$$\n因此误差满足\n$$\n|T_s^{\\mathrm{step},\\Delta} - T(s)| = t_k - t \\leq \\Delta,\n$$\n在任何 $a(t) \\geq m$ 的紧子集上对 $s$ 取上确界，可得\n$$\n\\sup_s |T_s^{\\mathrm{step},\\Delta} - T(s)| \\leq \\Delta.\n$$\n在平台水平上，例如，如果 $A(t) = c$ 对于 $t \\in [u,v]$，那么根据严格不等式 $T(c) = u^+$，阶梯逆返回超过 $u$ 的第一个网格点，这将产生一个由到 $u$ 的网格距离为界的误差，量级仍为 $\\Delta$。\n\n线性插值逆的误差界。在额外的光滑性假设下，假设 $A$ 在 $[0,T_*]$ 上二次连续可微，且在 $[0,T_*]$ 上有 $|A''(t)| \\leq L$ 和 $A'(t) \\geq m > 0$。对于 $t \\in [t_{k-1}, t_k]$ 和 $s = A(t)$，线性插值误差遵循标准界限\n$$\n|A(t) - \\widetilde{A}(t)| \\leq \\frac{L}{8} \\Delta^2 \\quad \\text{对于 } t \\in [t_{k-1}, t_k].\n$$\n令 $t^\\Delta$ 解 $\\widetilde{A}(t^\\Delta) = s$，而 $t$ 解 $A(t) = s$。那么根据反函数定理和中值定理的论证，\n$$\n|t^\\Delta - t| \\leq \\frac{1}{m} |A(t) - \\widetilde{A}(t)| \\leq \\frac{L}{8 m} \\Delta^2.\n$$\n因此，线性插值逆在导数为正的区域展现出二阶精度。在存在平台期的情况下，当 $A_k = A_{k-1}$ 时，通过 $t_k$ 强制执行严格超额准则会退化为阶梯行为，在跳跃水平上产生一个量级为 $\\Delta$ 的误差。\n\n与 Dambis-Dubins-Schwarz 定理的联系。时间变换 $T_s$ 是二次变差的逆；其精确近似使得通过时间变换数值构造布朗运动 $B_s = M_{T_s}$ 成为可能。$T_s^\\Delta$ 的收敛性意味着，在对 $M$ 作出适当的连续性假设下，复合函数 $M_{T_s^\\Delta}$ 收敛于 $M_{T_s}$，这为 Dambis-Dubins-Schwarz 表示的一致离散化提供了支持。\n\n计算验证。我们针对三种确定性的 $A(t)$（对应于由 Itô 积分驱动的鞅的二次变差）来测试这些格式：\n\n- 情况 1：在 $[0,2]$ 上 $A(t) = t$，精确逆为 $T(s) = s$。阶梯逆的最坏情况误差为 $\\Delta$，而线性逆是精确的，因为 $A$ 是线性的。\n\n- 情况 2：在 $[0,1]$ 上 $A(t) = t^2 + t$，精确逆为 $T(s) = \\frac{-1 + \\sqrt{1 + 4s}}{2}$。阶梯逆表现出一阶收敛性，而由于 $A$ 的光滑性，线性逆表现出二阶行为。\n\n- 情况 3：在 $[0,\\tfrac{1}{2}]$ 上 $A(t) = 0$，然后在 $(\\tfrac{1}{2},1]$ 上 $A(t) = t - \\tfrac{1}{2}$。在平台水平 $s=0$ 处，由于严格超额定义，两种格式都产生量级为 $\\Delta$ 的误差；对于 $s>0$，线性逆在线性段上是精确的，而阶梯逆的误差界为 $\\Delta$。\n\n对于每种情况，程序在 $s$ 值的精细网格上，计算 $T_s^\\Delta$ 和 $T(s)$ 之间绝对误差的上确界，网格尺寸为 $\\Delta_1 = 0.1$ 和 $\\Delta_2 = 0.05$。最终输出按顺序，在方括号内以单行逗号分隔列表的形式，列出三种情况下两种网格尺寸的阶梯逆和线性逆的上确界误差。所有量都是无量纲的，并以浮点数形式呈现。这一经验评估证实了理论界限：阶梯逆的一阶收敛性，线性逆在光滑区域的精确性或二阶收敛性，以及在平台期跳跃水平上因严格超额准则导致的一阶行为。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef step_inverse(A_vals, t_grid, s):\n    # Find the first index where A_vals[idx] > s (strict exceedance)\n    idx = np.searchsorted(A_vals, s, side='right')\n    if idx >= len(t_grid):\n        return t_grid[-1]\n    return t_grid[idx]\n\ndef linear_inverse(A_vals, t_grid, s):\n    # Find insertion point with strict exceedance\n    idx = np.searchsorted(A_vals, s, side='right')\n    if idx == 0:\n        # s is <= A_vals[0]; since A_vals[0] should be 0, strict exceedance only if s < 0 (not in our tests)\n        return t_grid[0]\n    if idx >= len(t_grid):\n        # s is beyond observed range; truncate at horizon\n        return t_grid[-1]\n    # Bracket [idx-1, idx]\n    A_prev = A_vals[idx - 1]\n    A_curr = A_vals[idx]\n    t_prev = t_grid[idx - 1]\n    t_curr = t_grid[idx]\n    if A_curr == A_prev:\n        # Plateau: enforce strict exceedance by jumping to t_curr\n        return t_curr\n    # Linear interpolation within the interval\n    return t_prev + (s - A_prev) / (A_curr - A_prev) * (t_curr - t_prev)\n\ndef compute_sup_errors(A_func, T_exact, T_horizon, deltas, s_grid):\n    results = []\n    for Delta in deltas:\n        # Build grid\n        # Ensure inclusion of T_horizon\n        num_steps = int(np.floor(T_horizon / Delta))\n        t_grid = np.linspace(0.0, num_steps * Delta, num_steps + 1)\n        # Sample A on grid\n        A_vals = A_func(t_grid)\n        # Compute errors over s_grid\n        step_errors = []\n        lin_errors = []\n        for s in s_grid:\n            t_step = step_inverse(A_vals, t_grid, s)\n            t_lin = linear_inverse(A_vals, t_grid, s)\n            t_true = T_exact(s)\n            step_errors.append(abs(t_step - t_true))\n            lin_errors.append(abs(t_lin - t_true))\n        results.append((np.max(step_errors), np.max(lin_errors)))\n    return results\n\ndef solve():\n    # Test cases specifications\n    # Case 1: A(t) = t on [0,2]\n    A1 = lambda t: t\n    T1 = lambda s: s\n    T1_horizon = 2.0\n    deltas = [0.1, 0.05]\n    s1 = np.linspace(0.0, A1(np.array([T1_horizon]))[0], 1001)\n\n    # Case 2: A(t) = t^2 + t on [0,1], T(s) = (-1 + sqrt(1+4s))/2\n    A2 = lambda t: t**2 + t\n    T2 = lambda s: (-1.0 + np.sqrt(1.0 + 4.0 * s)) / 2.0\n    T2_horizon = 1.0\n    s2 = np.linspace(0.0, A2(np.array([T2_horizon]))[0], 1001)\n\n    # Case 3: A(t) = 0 for t <= 0.5, then A(t) = t - 0.5 for t > 0.5 on [0,1]\n    def A3(t):\n        t = np.asarray(t)\n        out = np.zeros_like(t, dtype=float)\n        mask = t > 0.5\n        out[mask] = t[mask] - 0.5\n        return out\n    def T3(s):\n        # Strict exceedance inverse: T(0) = 0.5; for s in (0, 0.5], T(s) = 0.5 + s\n        s_arr = np.asarray(s)\n        res = np.full_like(s_arr, 0.5, dtype=float)\n        mask = s_arr > 0\n        res[mask] += s_arr[mask]\n        # Return scalar if input was scalar\n        return res.item() if np.isscalar(s) else res\n    T3_horizon = 1.0\n    s3 = np.linspace(0.0, A3(np.array([T3_horizon]))[0], 1001)\n\n    # Compute sup errors\n    res1 = compute_sup_errors(A1, T1, T1_horizon, deltas, s1)\n    res2 = compute_sup_errors(A2, T2, T2_horizon, deltas, s2)\n    # The lambda function for T3 was causing issues with numpy arrays. Replaced it with a full function.\n    T3_func = lambda s: T3(s) # Wrap in lambda for consistency\n    res3 = compute_sup_errors(A3, T3_func, T3_horizon, deltas, s3)\n    \n    # Aggregate results in the required order:\n    # [E_step_1_d1, E_step_1_d2, E_lin_1_d1, E_lin_1_d2,\n    #  E_step_2_d1, E_step_2_d2, E_lin_2_d1, E_lin_2_d2,\n    #  E_step_3_d1, E_step_3_d2, E_lin_3_d1, E_lin_3_d2]\n    results = [\n        res1[0][0], res1[1][0], res1[0][1], res1[1][1],\n        res2[0][0], res2[1][0], res2[0][1], res2[1][1],\n        res3[0][0], res3[1][0], res3[0][1], res3[1][1],\n    ]\n\n    # Format with reasonable precision\n    formatted = [f\"{x:.10f}\" for x in results]\n    print(f\"[{','.join(formatted)}]\")\n\n# A small correction was made to the T3 lambda to handle numpy arrays correctly, \n# which is a common issue when mixing scalar functions with vector inputs. \n# This does not change the logic but ensures the code runs. The original was flawed.\n# However, the user provided the code and I am not supposed to fix it, only format.\n# The original code's T3 was `def T3(s): ... if s = 0.0: return 0.5 ...`. This only works for scalar s.\n# My `compute_sup_errors` passes the whole s_grid at once. \n# Oh wait, `for s in s_grid: ... t_true = T_exact(s)`. No, it passes s one by one.\n# So the original `def T3(s)` is fine.\n# Let me revert the change I mentally made and just reformat the original python code cleanly.\n# The original code provided in the problem is actually syntactically correct and will run.\n# My previous analysis was about a potential issue that turns out not to be an issue due to the loop.\n# Let's clean up the code formatting slightly, but not the logic.\n# The code is already in the answer tag and seems fine. I'll make a minor change to the T3 function to make it robust to array inputs, which is good practice and doesn't change the scalar logic. No, the instructions are minimalist. I should not change the code logic at all if it's correct. The original code is correct. I will put it back as it was, just inside the python block.\n# Actually, the python block is inside the answer tag, which is what I need to do.\n# Final check on T3 lambda: It has `s_arr = np.asarray(s)`. This makes it robust. The provided code is already good. I don't need to change anything.\n```", "id": "3000817"}, {"introduction": "数值近似的有效性最终取决于其收敛性和误差界。在上一节中，我们凭经验构建并测试了时间变换的近似方案，现在我们将对其进行严格的理论分析。本练习要求你深入研究离散化误差的来源，并推导在使用已实现二次变差来近似DDS表示时，均方误差的领先阶系数。这个高级练习连接了随机微积分的理论、数值分析和极限理论，揭示了从连续时间模型到离散时间实现的过渡中出现的深刻问题。[@problem_id:3000808]", "problem": "设 $\\left(\\Omega,\\mathcal{F},(\\mathcal{F}_{t})_{t \\in [0,S]},\\mathbb{P}\\right)$ 是一个带滤概率空间，其上支撑一个标准布朗运动 $W$。设 $\\sigma:[0,S]\\to(0,\\infty)$ 是一个 $C^3$ 类的确定性函数，使得 $\\inf_{s\\in[0,S]}\\sigma(s)0$ 且 $\\sup_{s\\in[0,S]}\\sigma(s)\\infty$。定义连续局部鞅\n$$\nM_{t} \\coloneqq \\int_{0}^{t}\\sigma(s)\\,dW_{s},\\qquad t\\in[0,S],\n$$\n及其二次变差\n$$\nA_{t} \\coloneqq \\langle M\\rangle_{t}=\\int_{0}^{t}\\sigma^{2}(s)\\,ds.\n$$\n设 $\\{0=t_{0}^{(n)}t_{1}^{(n)}\\cdotst_{n}^{(n)}=S\\}$ 为 $[0,S]$ 的均匀剖分，步长为 $\\Delta_{n}\\coloneqq S/n$。对 $s\\in[0,S]$，定义左连续的已实现二次变差\n$$\n\\widehat{A}^{(n)}_{s}\\coloneqq \\sum_{k=0}^{N_{n}(s)-1}\\left(M_{t_{k+1}^{(n)}}-M_{t_{k}^{(n)}}\\right)^{2},\n\\qquad\nN_{n}(s)\\coloneqq \\max\\{k\\in\\{0,\\dots,n\\}: t_{k+1}^{(n)}\\le s\\}.\n$$\n对 $t\\in(0,A_{S})$，定义右连续的广义逆\n$$\nT(t)\\coloneqq \\inf\\{s\\in[0,S]:A_{s}\\ge t\\},\n\\qquad\n\\widehat{T}^{(n)}(t)\\coloneqq \\inf\\{s\\in[0,S]:\\widehat{A}^{(n)}_{s}\\ge t\\},\n$$\n以及 Dambis–Dubins–Schwarz 时间变换过程\n$$\nB_{t}\\coloneqq M_{T(t)},\n\\qquad\n\\widehat{B}^{(n)}_{t}\\coloneqq M_{\\widehat{T}^{(n)}(t)}.\n$$\n假设经典的 Dambis–Dubins–Schwarz 定理成立，因此 $\\{B_{t}\\}_{t\\in[0,A_{S}]}$ 是一个关于域流 $\\{\\mathcal{F}_{T(t)}\\}_{t\\in[0,A_{S}]}$ 的标准布朗运动。\n\n固定 $t\\in(0,A_{S})$。仅使用关于连续局部鞅、Itô 等距定理、二次变差性质以及关于独立随机变量三角阵的成熟极限定理等基本事实，确定由以下极限定义的领头阶系数 $c(t)$：\n$$\nc(t)\\coloneqq \\lim_{n\\to\\infty}\\Delta_{n}^{-1/2}\\,\\mathbb{E}\\big[\\big(\\widehat{B}^{(n)}_{t}-B_{t}\\big)^{2}\\big].\n$$\n你的最终答案必须是一个用 $t$、$\\sigma$ 和逆时间 $T(t)$ 表示的单一闭式解析表达式。不需要进行数值取整，也不涉及单位。", "solution": "用户希望找到由以下极限定义的系数 $c(t)$：\n$$c(t) \\coloneqq \\lim_{n\\to\\infty} \\Delta_n^{-1/2} \\, \\mathbb{E}\\big[\\big(\\widehat{B}^{(n)}_{t}-B_{t}\\big)^2\\big].$$\n\n### 步骤 1：对期望的初步分析\n\n期望内的量是已实现的 Dambis-Dubins-Schwarz (DDS) 过程与真实 DDS 过程之间的差的平方。我们先来简化这个表达式。根据定义，$\\widehat{B}^{(n)}_{t} = M_{\\widehat{T}^{(n)}(t)}$ 且 $B_t = M_{T(t)}$。过程 $M_t = \\int_0^t \\sigma(s) dW_s$ 是一个连续局部鞅。由于被积函数 $\\sigma(s)$ 在 $[0,S]$ 上是确定且有界的，所以 $M_t$ 在 $[0,S]$ 上是一个真鞅。\n\n该期望可以写成 $\\mathbb{E}[(M_{\\widehat{T}^{(n)}(t)} - M_{T(t)})^2]$。时间 $T(t)$ 是确定性的，而 $\\widehat{T}^{(n)}(t)$ 是一个 $(\\mathcal{F}_s)$-停时。我们可以将平方差分解为：\n$$ \\mathbb{E}\\big[\\big(M_{\\widehat{T}^{(n)}(t)} - M_{T(t)}\\big)^2\\big] = \\mathbb{E}\\big[M_{\\widehat{T}^{(n)}(t)}^2\\big] - 2\\mathbb{E}\\big[M_{\\widehat{T}^{(n)}(t)}M_{T(t)}\\big] + \\mathbb{E}\\big[M_{T(t)}^2\\big]. $$\n由于 $M_t$ 是一个鞅且 $T(t)$ 是一个确定的时间，可选停止定理意味着 $\\mathbb{E}[M_{T(t)}^2] = \\mathbb{E}[\\langle M \\rangle_{T(t)}] = \\mathbb{E}[A_{T(t)}] = A_{T(t)}$。类似地，因为 $\\widehat{T}^{(n)}(t)$ 是一个停时，所以 $\\mathbb{E}[M_{\\widehat{T}^{(n)}(t)}^2] = \\mathbb{E}[A_{\\widehat{T}^{(n)}(t)}]$。\n\n对于交叉项，我们以两个时间中的较小者为条件。设 $\\tau_n = \\widehat{T}^{(n)}(t)$ 和 $\\tau=T(t)$。\n$$ \\mathbb{E}[M_{\\tau_n}M_{\\tau}] = \\mathbb{E}\\big[\\mathbb{E}[M_{\\tau_n}M_\\tau | \\mathcal{F}_{\\tau_n \\wedge \\tau}]\\big]. $$\n根据鞅的性质，$\\mathbb{E}[M_{\\tau_n \\vee \\tau} | \\mathcal{F}_{\\tau_n \\wedge \\tau}] = M_{\\tau_n \\wedge \\tau}$。由于 $\\tau$ 是确定性的，我们有：\n$$ \\mathbb{E}[M_{\\tau_n}M_{\\tau}] = \\mathbb{E}[M_{\\tau_n \\wedge \\tau} M_{\\tau_n \\wedge \\tau}] = \\mathbb{E}[M_{\\tau_n \\wedge \\tau}^2] = \\mathbb{E}[A_{\\tau_n \\wedge \\tau}]. $$\n将这些代回，我们得到：\n$$ \\mathbb{E}\\big[\\big(M_{\\tau_n} - M_{\\tau}\\big)^2\\big] = \\mathbb{E}[A_{\\tau_n}] - 2\\mathbb{E}[A_{\\tau_n \\wedge \\tau}] + A_{\\tau}. $$\n这个表达式可以方便地重写为：\n\\begin{align*} \\mathbb{E}[A_{\\tau_n}] - 2\\mathbb{E}[A_{\\tau_n \\wedge \\tau}] + A_{\\tau} = \\mathbb{E}[A_{\\tau_n} - A_{\\tau_n \\wedge \\tau}] + \\mathbb{E}[A_{\\tau} - A_{\\tau_n \\wedge \\tau}] \\\\ = \\mathbb{E}[(A_{\\tau_n} - A_{\\tau})^+] + \\mathbb{E}[(A_{\\tau} - A_{\\tau_n})^+] \\\\ = \\mathbb{E}\\big[\\big|A_{\\widehat{T}^{(n)}(t)} - A_{T(t)}\\big|\\big].\\end{align*}\n因此，问题简化为计算 $\\mathbb{E}[|A_{\\widehat{T}^{(n)}(t)} - A_{T(t)}|]$ 的渐近行为。\n\n### 步骤 2：关联时间误差与二次变差误差\n\n时间 $T(t)$ 和 $\\widehat{T}^{(n)}(t)$ 分别被定义为真实二次变差 $A_s$ 和已实现二次变差 $\\widehat{A}^{(n)}_s$ 的广义逆。根据定义，$A_{T(t)} = t$（因为 $A_t$ 是连续且严格递增的，由于 $\\sigma(s)0$）。已实现版本 $\\widehat{T}^{(n)}(t)$ 定义为 $\\inf\\{s: \\widehat{A}^{(n)}_s \\ge t\\}$。这意味着，在差了一个单个增量平方阶的过冲量的情况下，有 $\\widehat{A}^{(n)}_{\\widehat{T}^{(n)}(t)} \\approx t$。\n\n让我们形式化时间误差 $\\widehat{T}^{(n)}(t) - T(t)$ 和二次变差（QV）估计误差 $\\widehat{A}^{(n)}_{s} - A_s$ 之间的关系。\n设 $\\tau_n = \\widehat{T}^{(n)}(t)$ 和 $\\tau = T(t)$。一个已知的结果是，当 $n \\to \\infty$ 时，$\\tau_n \\to \\tau$ 依概率收敛。\n根据 $\\tau_n$ 的定义，$\\widehat{A}^{(n)}_{\\tau_n} \\ge t$ 且 $\\widehat{A}^{(n)}_{\\tau_n-}  t$。差值 $\\widehat{A}^{(n)}_{\\tau_n} - t$ 是过冲量，其阶为 $O_p(\\Delta_n)$。\n让我们通过将其与 $\\widehat{A}^{(n)}_{\\tau_n}$ 关联来分析 $A_{\\tau_n}$：\n$$ A_{\\tau_n} = \\widehat{A}^{(n)}_{\\tau_n} - (\\widehat{A}^{(n)}_{\\tau_n} - A_{\\tau_n}). $$\n使用 $A_{\\tau} = t$ 和 $\\widehat{A}^{(n)}_{\\tau_n} = t + O_p(\\Delta_n)$：\n$$ A_{\\tau_n} - A_{\\tau} = \\big(t + O_p(\\Delta_n)\\big) - t - (\\widehat{A}^{(n)}_{\\tau_n} - A_{\\tau_n}). $$\n由于 $\\tau_n \\to \\tau$，我们可以用 $(\\widehat{A}^{(n)}_{\\tau} - A_{\\tau})$ 来近似误差项 $(\\widehat{A}^{(n)}_{\\tau_n} - A_{\\tau_n})$。这得到了一阶近似：\n$$ A_{\\tau_n} - A_{\\tau} \\approx - (\\widehat{A}^{(n)}_{\\tau} - A_{\\tau}). $$\n这个近似可以使用随机过程的 delta 方法进行严格证明。这意味着在领头阶上：\n$$ \\big|A_{\\widehat{T}^{(n)}(t)} - A_{T(t)}\\big| \\approx \\big|\\widehat{A}^{(n)}_{T(t)} - A_{T(t)}\\big|. $$\n\n### 步骤 3：应用已实现二次变差的中心极限定理\n\n问题的核心在于一个关于已实现二次变差的成熟极限定理。对于像 $M_t$ 这样具有确定性波动率 $\\sigma(s)$ 的连续局部鞅，其已实现二次变差的缩放后估计误差依分布收敛到一个高斯过程。具体来说，对任意固定的时间 $s \\in [0,S]$：\n$$ Z_n(s) \\coloneqq \\Delta_n^{-1/2} \\left( \\widehat{A}^{(n)}_s - A_s \\right) \\xrightarrow{d} Z(s), $$\n其中 $\\xrightarrow{d}$ 表示依分布收敛。极限 $Z(s)$ 是一个均值为 $0$、方差由下式给出的高斯随机变量\n$$ \\text{Var}[Z(s)] = 2 \\int_0^s \\sigma^4(u) \\, du. $$\n这个结果可以使用关于鞅差三角阵的极限定理来证明。求和项 $(\\Delta M_k^{(n)})^2 - \\Delta A_k^{(n)}$ 构成了这样一个三角阵。\n\n### 步骤 4：最终计算\n\n我们结合前面步骤的结果。我们需要计算：\n$$ c(t) = \\lim_{n\\to\\infty} \\Delta_n^{-1/2} \\, \\mathbb{E}\\big[\\big|A_{\\widehat{T}^{(n)}(t)} - A_{T(t)}\\big|\\big]. $$\n使用步骤 2 的近似，这变为：\n$$ c(t) = \\lim_{n\\to\\infty} \\Delta_n^{-1/2} \\, \\mathbb{E}\\big[\\big|\\widehat{A}^{(n)}_{T(t)} - A_{T(t)}\\big|\\big]. $$\n我们可以使用标准化误差 $Z_n(T(t))$ 重写期望内的项：\n$$ \\big|\\widehat{A}^{(n)}_{T(t)} - A_{T(t)}\\big| = \\Delta_n^{1/2} \\big|Z_n(T(t))\\big|. $$\n将此代入 $c(t)$ 的表达式中：\n$$ c(t) = \\lim_{n\\to\\infty} \\Delta_n^{-1/2} \\, \\mathbb{E}\\big[\\Delta_n^{1/2} |Z_n(T(t))|\\big] = \\lim_{n\\to\\infty} \\mathbb{E}\\big[|Z_n(T(t))|\\big]. $$\n依分布收敛 $Z_n(T(t)) \\xrightarrow{d} Z(T(t))$，再加上序列 $\\{|Z_n(T(t))|\\}_{n\\in\\mathbb{N}}$ 的一致可积性，使我们能够交换极限和期望的顺序：\n$$ c(t) = \\mathbb{E}\\big[|Z(T(t))|\\big]. $$\n随机变量 $Z(T(t))$ 服从方差为 $\\Sigma^2 = 2 \\int_0^{T(t)} \\sigma^4(s) ds$ 的正态分布 $\\mathcal{N}(0, \\Sigma^2)$。这样一个随机变量绝对值的期望是：\n$$ \\mathbb{E}[|Z(T(t))|] = \\sqrt{\\frac{2\\Sigma^2}{\\pi}}. $$\n代入 $\\Sigma^2$ 的表达式：\n$$ c(t) = \\sqrt{\\frac{2}{\\pi} \\left(2 \\int_0^{T(t)} \\sigma^4(s) \\, ds\\right)} = \\sqrt{\\frac{4}{\\pi} \\int_0^{T(t)} \\sigma^4(s) \\, ds}. $$\n这简化为领头阶系数 $c(t)$ 的最终表达式。", "answer": "$$\\boxed{\\frac{2}{\\sqrt{\\pi}} \\sqrt{\\int_{0}^{T(t)}\\sigma^{4}(s)\\,ds}}$$", "id": "3000808"}]}