{"hands_on_practices": [{"introduction": "理解扩散过程在其状态空间边界处的行为是至关重要的。本实践以金融数学中一个著名的过程——常弹性方差（CEV）模型为例，展示了费勒（Feller）边界分类如何在实践中应用。通过计算标度函数和速度测度，你将确定单个参数 $\\beta$ 如何决定原点是否为可达边界，以及需要施加何种边界条件来恰当地定义该过程。[@problem_id:2972793]", "problem": "考虑常弹性方差 (CEV) 扩散，其伊藤形式由以下随机微分方程 (SDE) 给出：\n$$\ndX_t=\\sigma X_t^{\\beta}\\,dW_t,\\qquad X_0=x\\in(0,\\infty),\n$$\n其中 $\\sigma>0$，$\\beta>0$，且 $(W_t)_{t\\ge 0}$ 是一个标准维纳过程（布朗运动）。在开放状态空间 $(0,\\infty)$ 上进行研究，并采用正则构造，即当过程到达一个被指定为出射或吸收边界的边界时，该过程被终止。令 $A$ 表示作用于一个合适的定义域 $D(A)\\subset C_0((0,\\infty))$ 中函数 $f$ 的无穷小生成元，其中 $C_0((0,\\infty))$ 是在 $(0,\\infty)$ 上且在无穷远处消失的连续函数空间。\n\n仅使用自然尺度下的一维扩散基本理论和 Feller 的边界分类，按以下步骤进行：\n\n1) 推导此 SDE 的尺度函数 $s$ 和速度测度 $m$。然后计算在左边界 $0$ 处的可达性积分，\n$$\n\\Sigma(0):=\\int_{0}^{1}\\bigl(s(x)-s(0)\\bigr)\\,m(dx),\n$$\n并确定对于哪些 $\\beta$ 值，边界 $0$ 是可达的。接着，计算积分\n$$\nM(0):=\\int_{0}^{1}m(dx),\n$$\n并使用这两个积分，针对 $\\beta$ 的不同取值范围，将边界 $0$ 分类为正则、出射、入射或自然边界。\n\n2) 根据此分类，确定在 $0$ 处的合适边界条件，该条件刻画了与上述 SDE 相关联的正则扩散（即不添加反射项或黏性）的生成元定义域 $D(A)$ 中函数 $f$ 的成员资格。根据情况，用 $f$ 在 $0$ 处的值或其一阶导数来表示该边界条件。\n\n3) 作为最终答案，报告在可达性积分 $\\Sigma(0)$ 有限的取值范围内，其关于 $\\beta$ 和 $\\sigma$ 的闭式表达式。你的最终答案必须是单一的闭式解析表达式。", "solution": "问题陈述已经过验证，并被确定为随机微分方程理论中一个适定且有科学依据的问题。\n\n所给的随机微分方程 (SDE) 描述了一个常弹性方差 (CEV) 过程：\n$$\ndX_t = \\sigma X_t^{\\beta} dW_t\n$$\n初始条件为 $X_0 = x \\in (0,\\infty)$，参数为 $\\sigma > 0, \\beta > 0$。这是一个形式为 $dX_t = b(X_t) dt + a(X_t) dW_t$ 的一维伊藤扩散，其漂移系数 $b(x) = 0$，扩散系数 $a(x) = \\sigma x^{\\beta}$。分析将在状态空间 $(0,\\infty)$ 上进行。\n\n1) 第一步是推导尺度函数 $s(x)$ 和速度测度 $m(dx)$。对于一般的一维扩散，尺度函数的密度 $s'(x)$ 由下式给出\n$$\ns'(x) = \\exp\\left( -\\int^x \\frac{2b(y)}{a(y)^2} dy \\right)\n$$\n在本例中，由于 $b(x) = 0$，指数中的积分为零。因此我们可以选择 $s'(x) = 1$，积分后得到尺度函数 $s(x) = x$。任何仿射变换 $c_1 s(x) + c_2$（其中 $c_1 > 0$）也是一个尺度函数，但选择 $s(x)=x$ 最为简单，且不影响边界分类。这个选择意味着该过程已经处于其自然尺度上。\n\n速度测度 $m(dx) = m(x)dx$ 的密度 $m(x)$ 由下式给出\n$$\nm(x) = \\frac{2}{s'(x)a(x)^2}\n$$\n代入 $s'(x) = 1$ 和 $a(x) = \\sigma x^{\\beta}$，我们得到\n$$\nm(x) = \\frac{2}{(\\sigma x^{\\beta})^2} = \\frac{2}{\\sigma^2 x^{2\\beta}}\n$$\n因此，速度测度为 $m(dx) = \\frac{2}{\\sigma^2 x^{2\\beta}} dx$。\n\n有了尺度函数和速度测度，我们就可以分析在左边界 $0$ 处的行为。我们计算问题陈述中指定的两个积分，取内部参考点为 $1$。\n\n第一个积分是\n$$\nM(0) = \\int_{0}^{1} m(dx) = \\int_{0}^{1} \\frac{2}{\\sigma^2 x^{2\\beta}} dx = \\frac{2}{\\sigma^2} \\int_{0}^{1} x^{-2\\beta} dx\n$$\n这个 p-积分收敛当且仅当指数大于 $-1$，即 $-2\\beta > -1$，这意味着 $2\\beta < 1$，或 $\\beta < 1/2$。\n对于 $\\beta < 1/2$，该积分的值为\n$$\nM(0) = \\frac{2}{\\sigma^2} \\left[ \\frac{x^{-2\\beta+1}}{-2\\beta+1} \\right]_{0}^{1} = \\frac{2}{\\sigma^2(1-2\\beta)}\n$$\n对于 $\\beta \\ge 1/2$，该积分发散，所以 $M(0) = \\infty$。\n\n第二个积分是可达性积分 $\\Sigma(0)$：\n$$\n\\Sigma(0) = \\int_{0}^{1} (s(x) - s(0)) m(dx)\n$$\n使用 $s(x)=x$，我们有 $s(0)=0$。因此，\n$$\n\\Sigma(0) = \\int_{0}^{1} x \\cdot m(dx) = \\int_{0}^{1} x \\left( \\frac{2}{\\sigma^2 x^{2\\beta}} \\right) dx = \\frac{2}{\\sigma^2} \\int_{0}^{1} x^{1-2\\beta} dx\n$$\n这个积分收敛当且仅当 $1-2\\beta > -1$，这意味着 $2\\beta < 2$，或 $\\beta < 1$。\n对于 $\\beta < 1$，该积分的值为\n$$\n\\Sigma(0) = \\frac{2}{\\sigma^2} \\left[ \\frac{x^{1-2\\beta+1}}{1-2\\beta+1} \\right]_{0}^{1} = \\frac{2}{\\sigma^2} \\left[ \\frac{x^{2-2\\beta}}{2-2\\beta} \\right]_{0}^{1} = \\frac{2}{\\sigma^2(2-2\\beta)} = \\frac{1}{\\sigma^2(1-\\beta)}\n$$\n对于 $\\beta \\ge 1$，该积分发散，所以 $\\Sigma(0) = \\infty$。\n\n如果过程可以在有限时间内从内部到达一个边界，则该边界被定义为可达的。这对应于条件 $\\Sigma(0) < \\infty$。根据我们的计算，边界 $0$ 是可达的当且仅当 $\\beta < 1$。\n\n现在，我们使用基于 $M(0)$ 和 $\\Sigma(0)$ 收敛性的 Feller 边界分类：\n- 如果 $\\Sigma(0) < \\infty$ 且 $M(0) < \\infty$，则边界为**正则**边界。\n- 如果 $\\Sigma(0) < \\infty$ 且 $M(0) = \\infty$，则边界为**出射**边界。\n- 如果 $\\Sigma(0) = \\infty$ 且 $M(0) < \\infty$，则边界为**入射**边界。\n- 如果 $\\Sigma(0) = \\infty$ 且 $M(0) = \\infty$，则边界为**自然**边界。\n\n我们分析 $\\beta > 0$ 的不同情况：\n- 若 $\\beta \\in (0, 1/2)$：我们有 $\\beta < 1/2$，这意味着 $\\beta < 1$。$M(0)$ 和 $\\Sigma(0)$ 均为有限值。因此，边界 $0$ 是**正则**的。\n- 若 $\\beta \\in [1/2, 1)$：在此范围内，$M(0) = \\infty$ 但 $\\Sigma(0) < \\infty$。因此，边界 $0$ 是**出射**的。\n- 若 $\\beta \\ge 1$：在此范围内，$\\Sigma(0) = \\infty$。由于 $\\beta \\ge 1$ 意味着 $\\beta > 1/2$，因此 $M(0)$ 也是无穷大。因此，边界 $0$ 是**自然**的。\n\n2) 接下来，我们确定在 $0$ 处的边界条件，以使函数 $f$ 属于在 $C_0((0,\\infty))$ 上的终止过程的生成元定义域 $D(A)$。该生成元为 $\\mathcal{L} = \\frac{1}{2}\\sigma^2 x^{2\\beta} \\frac{d^2}{dx^2}$。\n函数空间 $C_0((0,\\infty))$ 是在 $(0,\\infty)$ 上，并在区间两端都消失的连续函数空间，即 $\\lim_{x\\to 0^+} f(x) = 0$ 且 $\\lim_{x\\to\\infty} f(x) = 0$。因此，任何函数 $f \\in D(A) \\subset C_0((0,\\infty))$ 都必须满足 $f(0)=0$。关键在于这是一个为定义生成元而施加的条件，还是仅仅是函数空间选择的结果。\n\n- 对于 $\\beta \\in (0, 1)$（正则或出射边界）：边界 $0$ 是可达的。对于可达边界，可以指定多种类型的边界行为（例如，吸收、反射）。问题指定了一个终止过程，这对应于吸收。这需要在生成元的定义域中的函数上施加一个狄利克雷型边界条件。在这种情况下，确定终止过程的特定条件是 $f(0) = 0$。\n\n- 对于 $\\beta \\ge 1$（自然边界）：边界 $0$ 是不可达的。在 $(0,\\infty)$ 中开始的过程永远不会在有限时间内到达 $0$。因此，不能也无需在 $0$ 处施加边界条件来定义过程行为。对于空间 $C_0((0,\\infty))$，生成元是唯一的。对于 $f \\in D(A)$，要求 $f(0)=0$ 并不是一个额外施加的条件，而是定义域 $D(A)$ 是 $C_0((0,\\infty))$ 的一个子集的直接结果。\n\n总而言之，当边界是可达的（$\\beta < 1$）时，需要主动施加边界条件 $f(0)=0$ 来定义终止过程的生成元；而对于不可达的自然边界（$\\beta \\ge 1$），则不需要任何条件，$f(0)=0$ 是定义域中所有函数的內在属性。\n\n3) 最终答案是可达性积分 $\\Sigma(0)$ 在其为有限值的范围内的闭式表达式。我们发现这个范围是 $\\beta < 1$（根据题意，这包括了所有的 $\\beta \\in (0,1)$），其表达式为 $\\frac{1}{\\sigma^2(1-\\beta)}$。", "answer": "$$\n\\boxed{\\frac{1}{\\sigma^{2}(1-\\beta)}}\n$$", "id": "2972793"}, {"introduction": "超越一维分析的范畴，本问题旨在探索多维扩散生成元更深层次的代数结构。你将分析一个不可逆过程，其动力学不满足关于不变测度的细致平衡条件。核心任务是将生成元分解为其对称（梯度流）部分和反对称（无散度流）部分，从而揭示驱动系统的不同类型的力。[@problem_id:2972809]", "problem": "考虑二维随机微分方程 (SDE)\n$$\n\\mathrm{d}X_{t} = \\big(-X_{t} + J X_{t}\\big)\\,\\mathrm{d}t + \\sqrt{2}\\,\\mathrm{d}W_{t},\n$$\n其中 $X_{t} \\in \\mathbb{R}^{2}$，$W_{t}$ 是一个标准的二维布朗运动，$J$ 是 $2 \\times 2$ 矩阵\n$$\nJ = \\begin{pmatrix} 0 & -1 \\\\ 1 & 0 \\end{pmatrix}.\n$$\n令 $L$ 表示作用于光滑紧支集函数 $f \\in C_{c}^{\\infty}(\\mathbb{R}^{2})$ 上的无穷小生成元，其形式化表达式为\n$$\nL f(x) = \\Delta f(x) + \\big(-x + Jx\\big) \\cdot \\nabla f(x),\n$$\n其中 $\\Delta$ 是拉普拉斯算子，$\\nabla$ 是梯度。我们在希尔伯特空间 $L^{2}(\\mu)$ 中进行研究，其上的高斯概率测度为\n$$\n\\mathrm{d}\\mu(x) = (2\\pi)^{-1} \\exp\\big(-|x|^{2}/2\\big)\\,\\mathrm{d}x,\n$$\n内积为 $\\langle f, g \\rangle_{\\mu} = \\int_{\\mathbb{R}^{2}} f g \\,\\mathrm{d}\\mu$。\n\n任务：\n1. 从第一性原理出发，证明高斯测度 $\\mu$ 对于由 $L$ 生成的马尔可夫半群是不变的。\n2. 仅从 Itô SDE 生成元的定义以及在测度 $\\mu$ 下的加权分部积分恒等式出发，将 $L$ 分解为其在 $L^{2}(\\mu)$ 上的对称部分 $S$ 和反对称部分 $A$，即找到 $S$ 和 $A$ 使得在 $C_{c}^{\\infty}(\\mathbb{R}^{2})$ 上有 $L = S + A$，$\\langle f, S g \\rangle_{\\mu} = \\langle S f, g \\rangle_{\\mu}$ 以及 $\\langle f, A g \\rangle_{\\mu} = -\\langle A f, g \\rangle_{\\mu}$。\n3. 利用你的分解，推导出在 $C_{c}^{\\infty}(\\mathbb{R}^{2})$ 上展示 $S$ 的对称性和 $A$ 的反对称性的精确分部积分公式，并讨论这些恒等式所对应的自然算子域和型域。解释反对称扰动是否影响狄利克雷型域 (Dirichlet form domain)。\n4. 最后，令 $f(x) = x_{1}$ 和 $g(x) = x_{2}$，计算标量 $\\langle f, A g \\rangle_{\\mu}$。将你的最终答案以一个数字的形式给出，无需四舍五入。", "solution": "该问题陈述是随机微分方程及其生成元理论中一个适定且具有科学依据的数学问题。所有提供的信息都是一致且足以完成任务的。\n\n### 任务1：高斯测度 $\\mu$ 的不变性\n\n一个密度为 $\\rho(x)$ 的绝对连续测度是随机过程 $X_t$ 的不变测度，如果其密度是相关 Fokker-Planck 方程的平稳解。该 SDE 的生成元为 $L f(x) = \\Delta f(x) + b(x) \\cdot \\nabla f(x)$，其中漂移项为 $b(x) = -x + Jx$。密度 $p(t, x)$ 的 Fokker-Planck 方程为 $\\partial_t p = L_{FP}p$，其中 $L_{FP}$ 是 $L$ 关于 $\\mathbb{R}^2$ 上标准勒贝格测度的形式伴随算子。算子 $L_{FP}$ 由下式给出\n$$\nL_{FP} p(x) = \\frac{1}{2}\\sum_{i,j} \\frac{\\partial^2}{\\partial x_i \\partial x_j} ((\\sigma\\sigma^T)_{ij} p(x)) - \\sum_i \\frac{\\partial}{\\partial x_i} (b_i(x) p(x))\n$$\n对于我们的过程，扩散矩阵为 $\\sigma = \\sqrt{2}I$，因此 $\\sigma\\sigma^T = 2I$。Fokker-Planck 算子简化为\n$$\nL_{FP} p(x) = \\Delta p(x) - \\nabla \\cdot (b(x) p(x))\n$$\n如果 $L_{FP}\\rho = 0$，则密度 $\\rho$ 对应一个不变测度。我们必须为给定的高斯密度 $\\rho(x) = (2\\pi)^{-1} \\exp(-|x|^2/2)$ 验证这一点，该密度是测度 $\\mu$ 的密度。\n首先，我们计算 $\\rho(x)$ 的导数。为简单起见，我们可以忽略常数因子 $(2\\pi)^{-1}$，因为它最终会消去。令 $\\rho(x) \\propto \\exp(-|x|^2/2)$。\n密度的梯度是：\n$$\n\\nabla \\rho(x) = -x \\exp(-|x|^2/2) = -x \\rho(x)\n$$\n密度的拉普拉斯算子是：\n$$\n\\Delta \\rho(x) = \\nabla \\cdot (\\nabla \\rho(x)) = \\nabla \\cdot (-x \\rho(x)) = (\\nabla \\cdot (-x))\\rho(x) + (-x) \\cdot (\\nabla \\rho(x)) = -2\\rho(x) - x \\cdot (-x \\rho(x)) = (|x|^2 - 2)\\rho(x)\n$$\n接下来，我们计算散度项 $\\nabla \\cdot (b(x) \\rho(x))$：\n$$\n\\nabla \\cdot (b(x) \\rho(x)) = (\\nabla \\cdot b(x))\\rho(x) + b(x) \\cdot (\\nabla \\rho(x))\n$$\n漂移项为 $b(x) = -x + Jx$。其散度为：\n$$\n\\nabla \\cdot b(x) = \\nabla \\cdot (-x) + \\nabla \\cdot (Jx) = \\mathrm{tr}(-I) + \\mathrm{tr}(J) = -2 + 0 = -2\n$$\n第二项是：\n$$\nb(x) \\cdot (\\nabla \\rho(x)) = (-x + Jx) \\cdot (-x \\rho(x)) = (x \\cdot x - Jx \\cdot x)\\rho(x)\n$$\n由于 $J$ 是一个斜对称矩阵 ($J^T = -J$)，我们有 $Jx \\cdot x = x^T J^T x = -x^T J x = -(Jx \\cdot x)$，这意味着 $Jx \\cdot x = 0$。因此：\n$$\nb(x) \\cdot (\\nabla \\rho(x)) = |x|^2 \\rho(x)\n$$\n综合这些结果，我们得到：\n$$\n\\nabla \\cdot (b(x) \\rho(x)) = -2\\rho(x) + |x|^2 \\rho(x) = (|x|^2 - 2)\\rho(x)\n$$\n最后，代入 $L_{FP}\\rho$ 的表达式中：\n$$\nL_{FP}\\rho(x) = \\Delta \\rho(x) - \\nabla \\cdot (b(x) \\rho(x)) = (|x|^2 - 2)\\rho(x) - (|x|^2 - 2)\\rho(x) = 0\n$$\n这证实了高斯测度 $\\mu$ 是该动力系统的一个不变测度。\n\n### 任务2：将 $L$ 分解为对称和反对称部分\n\n我们需要将算子 $L$ 分解为 $L=S+A$，其中 $S$ 在希尔伯特空间 $L^2(\\mu)$ 中是自伴的（对称的），而 $A$ 是反自伴的（反对称的）。生成元是 $L f(x) = \\Delta f(x) + (-x + Jx) \\cdot \\nabla f(x)$。我们可以将其写作 $L = (\\Delta - x \\cdot \\nabla) + (Jx \\cdot \\nabla)$。\n我们定义 $S_0 = \\Delta - x \\cdot \\nabla$ 和 $A_0 = Jx \\cdot \\nabla$。现在我们将证明在 $L^2(\\mu)$ 中 $S_0$ 是自伴的，$A_0$ 是反自伴的。这将意味着 $S=S_0$ 和 $A=A_0$。\n\n对于任意两个函数 $f, g \\in C_c^\\infty(\\mathbb{R}^2)$，内积为 $\\langle f, g \\rangle_\\mu = \\int_{\\mathbb{R}^2} f(x) g(x) \\rho(x) dx$。\n\n我们首先分析算子 $S_0 = \\Delta - x \\cdot \\nabla$。\n$$\n\\langle f, S_0 g \\rangle_\\mu = \\int f (\\Delta g - x \\cdot \\nabla g) \\rho \\, dx = \\int f \\rho \\Delta g \\, dx - \\int f (x \\cdot \\nabla g) \\rho \\, dx\n$$\n对第一项使用分部积分（Green's identity），由于 $f, g$ 具有紧支集，边界项为零：\n$$\n\\int f \\rho \\Delta g \\, dx = -\\int \\nabla(f \\rho) \\cdot \\nabla g \\, dx = -\\int (\\rho \\nabla f + f \\nabla \\rho) \\cdot \\nabla g \\, dx\n$$\n代入 $\\nabla \\rho = -x \\rho$：\n$$\n-\\int (\\rho \\nabla f - x f \\rho) \\cdot \\nabla g \\, dx = -\\int \\rho \\nabla f \\cdot \\nabla g \\, dx + \\int f \\rho (x \\cdot \\nabla g) \\, dx = -\\langle \\nabla f, \\nabla g \\rangle_\\mu + \\int f (x \\cdot \\nabla g) d\\mu\n$$\n将此结果代回 $\\langle f, S_0 g \\rangle_\\mu$ 的表达式中：\n$$\n\\langle f, S_0 g \\rangle_\\mu = \\left( -\\langle \\nabla f, \\nabla g \\rangle_\\mu + \\int f (x \\cdot \\nabla g) d\\mu \\right) - \\int f (x \\cdot \\nabla g) d\\mu = -\\langle \\nabla f, \\nabla g \\rangle_\\mu\n$$\n最终表达式 $-\\langle \\nabla f, \\nabla g \\rangle_\\mu$ 关于 $f$ 和 $g$ 是对称的。因此，$\\langle f, S_0 g \\rangle_\\mu = \\langle g, S_0 f \\rangle_\\mu = \\langle S_0 f, g \\rangle_\\mu$，这证明了 $S_0$ 是 $C_c^\\infty(\\mathbb{R}^2)$ 上的一个自伴算子。所以，对称部分是 $S = S_0 = \\Delta - x \\cdot \\nabla$。\n\n接下来，我们分析算子 $A_0 = Jx \\cdot \\nabla$。\n$$\n\\langle f, A_0 g \\rangle_\\mu = \\int f (Jx \\cdot \\nabla g) \\rho \\, dx\n$$\n我们对向量场使用分部积分。对于任意向量场 $V$，对于紧支集函数，有 $\\int \\nabla \\cdot (f g V) dx = 0$。这给出了 $\\int g V \\cdot \\nabla f \\, dx = - \\int f (\\nabla \\cdot (g V)) \\, dx$。\n令 $V = Jx \\rho$。我们有 $\\int g (Jx \\rho) \\cdot \\nabla f \\, dx = - \\int f \\nabla \\cdot (g Jx \\rho) \\, dx$。\n散度项为 $\\nabla \\cdot (g Jx \\rho) = (\\nabla g) \\cdot (Jx \\rho) + g \\nabla \\cdot(Jx \\rho)$。\n我们计算 $\\nabla \\cdot (Jx \\rho)$：\n$$\n\\nabla \\cdot (Jx \\rho) = (\\nabla \\cdot (Jx)) \\rho + Jx \\cdot (\\nabla \\rho) = (\\mathrm{tr}(J)) \\rho + Jx \\cdot (-x \\rho) = 0 \\cdot \\rho - (Jx \\cdot x) \\rho = 0\n$$\n所以 $\\nabla \\cdot (g Jx \\rho) = \\rho Jx \\cdot \\nabla g$。\n因此，$\\int g (Jx \\cdot \\nabla f) \\rho \\, dx = - \\int f (\\rho Jx \\cdot \\nabla g) \\, dx$。\n这意味着 $\\langle g, A_0 f \\rangle_\\mu = - \\langle f, A_0 g \\rangle_\\mu$。这证明了 $A_0$ 是 $C_c^\\infty(\\mathbb{R}^2)$ 上的一个反自伴算子。所以，反对称部分是 $A = A_0 = Jx \\cdot \\nabla$。\n\n分解如下：\n$S(f)(x) = \\Delta f(x) - x \\cdot \\nabla f(x)$\n$A(f)(x) = Jx \\cdot \\nabla f(x)$\n\n### 任务3：分部积分公式和域\n\n通过任务2的分析，我们已经推导出了展示对称性和反对称性的关键分部积分公式。\n\n对于对称部分 $S$，公式为：\n$$\n\\langle f, S g \\rangle_{\\mu} = \\int_{\\mathbb{R}^2} f(x) (Sg)(x) \\,d\\mu(x) = - \\int_{\\mathbb{R}^2} \\nabla f(x) \\cdot \\nabla g(x) \\,d\\mu(x) = -\\langle \\nabla f, \\nabla g \\rangle_{\\mu}\n$$\n对于 $f,g \\in C_{c}^{\\infty}(\\mathbb{R}^{2})$，这个恒等式直接表明 $\\langle f, Sg \\rangle_\\mu = \\langle S f, g \\rangle_\\mu$。与 $S$ 相关的二次型是狄利克雷型 (Dirichlet form) $\\mathcal{E}(f, f) = -\\langle f, Sf \\rangle_\\mu = \\|\\nabla f\\|_{L^2(\\mu)}^2 = \\int |\\nabla f|^2 d\\mu$。此型的自然域，即型域，是在范数 $\\|f\\|^2_{H^1(\\mu)} = \\|f\\|_{L^2(\\mu)}^2 + \\|\\nabla f\\|_{L^2(\\mu)}^2$ 下 $C_c^\\infty(\\mathbb{R}^2)$ 的闭包。这是加权索博列夫空间 (weighted Sobolev space) $H^1(\\mu)$。\n\n对于反对称部分 $A$，公式为：\n$$\n\\langle f, A g \\rangle_{\\mu} = \\int_{\\mathbb{R}^2} f(x) (Jx \\cdot \\nabla g)(x) \\,d\\mu(x) = - \\int_{\\mathbb{R}^2} g(x) (Jx \\cdot \\nabla f)(x) \\,d\\mu(x) = -\\langle g, A f \\rangle_{\\mu} = -\\langle A f, g \\rangle_{\\mu}\n$$\n这个恒等式表明 $A$ 是反自伴的。完整算子 $L = S+A$ 的狄利克雷型由其对称部分定义：$\\mathcal{E}_L(f,g) = -\\frac{1}{2}(\\langle L f, g \\rangle_\\mu + \\langle f, L g \\rangle_\\mu)$。利用 $S$ 和 $A$ 的性质：\n$$\n\\mathcal{E}_L(f,g) = -\\frac{1}{2}(\\langle (S+A)f, g \\rangle_\\mu + \\langle f, (S+A)g \\rangle_\\mu) = -\\frac{1}{2}(\\langle Sf, g \\rangle_\\mu + \\langle Af, g \\rangle_\\mu + \\langle f, Sg \\rangle_\\mu + \\langle f, Ag \\rangle_\\mu)\n$$\n由于 $\\langle Af, g \\rangle_\\mu = -\\langle f, Ag \\rangle_\\mu$，这些项相互抵消，剩下：\n$$\n\\mathcal{E}_L(f,g) = -\\frac{1}{2}(\\langle Sf, g \\rangle_\\mu + \\langle f, Sg \\rangle_\\mu) = -\\langle f, Sg \\rangle_\\mu = \\mathcal{E}(f, g)\n$$\n$L$ 的狄利克雷型与其对称部分 $S$ 的狄利克雷型相同。因此，$L$ 的型域与 $S$ 的型域相同。反对称扰动 $A$ 不影响狄利克雷型或其域 $H^1(\\mu)$。\n\n### 任务4：计算 $\\langle f, A g \\rangle_{\\mu}$\n\n给定 $f(x) = x_1$ 和 $g(x) = x_2$。我们需要计算 $\\langle f, A g \\rangle_{\\mu}$。虽然 $x_1, x_2$ 不在 $C_c^\\infty(\\mathbb{R}^2)$ 中，但它们属于 $L^2(\\mu)$，并且算子 $A$ 可以作用于它们。\n\n首先，我们将算子 $A$ 应用于 $g(x) = x_2$。算子 $A$ 定义为 $A h(x) = Jx \\cdot \\nabla h(x)$。\n这里，$h(x) = g(x) = x_2$。$g$ 的梯度是 $\\nabla g(x) = \\nabla x_2 = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$。\n向量 $Jx$ 由下式给出：\n$$\nJx = \\begin{pmatrix} 0 & -1 \\\\ 1 & 0 \\end{pmatrix} \\begin{pmatrix} x_1 \\\\ x_2 \\end{pmatrix} = \\begin{pmatrix} -x_2 \\\\ x_1 \\end{pmatrix}\n$$\n现在，我们计算 $A g(x)$：\n$$\nA g(x) = Jx \\cdot \\nabla g = \\begin{pmatrix} -x_2 \\\\ x_1 \\end{pmatrix} \\cdot \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix} = 0 \\cdot (-x_2) + 1 \\cdot x_1 = x_1\n$$\n所以，我们需要计算内积 $\\langle f, Ag \\rangle_\\mu = \\langle x_1, x_1 \\rangle_\\mu$。\n根据内积的定义：\n$$\n\\langle x_1, x_1 \\rangle_\\mu = \\int_{\\mathbb{R}^2} x_1^2 \\, d\\mu(x) = \\int_{\\mathbb{R}^2} x_1^2 \\frac{1}{2\\pi} \\exp\\left(-\\frac{x_1^2+x_2^2}{2}\\right) dx_1 dx_2\n$$\n此积分表示 $X_1^2$ 的期望值，其中 $(X_1, X_2)$ 是一个服从分布 $\\mu$ 的随机向量，即标准二元正态分布 $N(0, I)$。这意味着 $X_1$ 和 $X_2$ 是独立的标准正态随机变量，$X_1, X_2 \\sim N(0, 1)$。\n积分的值是 $E[X_1^2]$。\n$X_1$ 的方差是 $\\text{Var}(X_1) = E[X_1^2] - (E[X_1])^2$。\n对于标准正态分布，$E[X_1] = 0$ 且 $\\text{Var}(X_1) = 1$。\n因此，$E[X_1^2] = \\text{Var}(X_1) + (E[X_1])^2 = 1 + 0^2 = 1$。\n该积分计算结果为：\n$$\n\\langle x_1, x_1 \\rangle_\\mu = \\left( \\int_{-\\infty}^{\\infty} x_1^2 \\frac{1}{\\sqrt{2\\pi}} \\exp(-x_1^2/2) dx_1 \\right) \\left( \\int_{-\\infty}^{\\infty} \\frac{1}{\\sqrt{2\\pi}} \\exp(-x_2^2/2) dx_2 \\right) = 1 \\times 1 = 1\n$$\n因此，该标量的值为 $1$。", "answer": "$$\n\\boxed{1}\n$$", "id": "2972809"}, {"introduction": "生成元定义域和边界条件的抽象理论在数值方法中找到了其实际应用。本练习旨在弥合理论与实践之间的差距，要求你为扩散生成元实现一个有限差分近似，并处理包括狄利克雷（Dirichlet/终止）、罗宾（Robin）和诺伊曼（Neumann/反射）在内的多种边界条件。这项实践对于理解如何在有界域上正确模拟随机过程或求解相关的偏微分方程至关重要。[@problem_id:2972794]", "problem": "考虑闭区间 $[0,1]$ 上的一维伊藤(Itô)随机微分方程(SDE)：\n$$\ndX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t,\n$$\n其中 $W_t$ 是一个标准维纳过程，$\\sigma(x) > 0$ 是连续的，$b(x)$ 也是连续的。令 $a(x) \\equiv \\sigma^2(x)$。该扩散过程的无穷小生成元 $A$ 作用于二次连续可微函数 $f$ 的方式为\n$$\nA f(x) = \\tfrac{1}{2} a(x) f''(x) + b(x) f'(x),\n$$\n其定义域取决于边界行为：\n- 在 $x=0$ (或 $x=1$) 处的终止(狄利克雷)边界意味着 $f(0)=0$ (或 $f(1)=0$)。\n- 在 $x=0$ 处参数为 $(\\alpha_0,\\beta_0)$ 的罗宾(Robin)边界意味着 $\\beta_0 f'(0) + \\alpha_0 f(0) = 0$，在 $x=1$ 处类似，参数为 $(\\alpha_1,\\beta_1)$：$\\beta_1 f'(1) + \\alpha_1 f(1) = 0$。特殊情况 $\\alpha=0, \\beta \\neq 0$ 产生反射(诺伊曼)边界。\n\n时间离散格式旨在通过一个构建在空间网格（网格尺寸为 $\\Delta x$）和时间步长 $\\Delta t$ 上的算子族 $P_{\\Delta t,\\Delta x}$ 来近似半群 $T_t = e^{tA}$，使得离散生成元\n$$\nG_{\\Delta t,\\Delta x} := \\frac{P_{\\Delta t,\\Delta x} - I}{\\Delta t}\n$$\n在其定义域上，当 $\\Delta t \\to 0$ 和 $\\Delta x \\to 0$ 时，近似于 $A$。在一个均匀网格 $x_i = i \\Delta x$，$i \\in \\{0,1,\\dots,N\\}$，其中 $N \\Delta x = 1$，考虑 $A$ 在内部节点 $i \\in \\{1,\\dots,N-1\\}$ 上的标准二阶中心有限差分格式：\n$$\n(Q_{\\Delta x} f)_i := \\tfrac{1}{2} a(x_i)\\,\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} + b(x_i)\\,\\frac{f_{i+1} - f_{i-1}}{2 \\Delta x}.\n$$\n通过 $P_{\\Delta t,\\Delta x} := I + \\Delta t\\, Q_{\\Delta x}$ 定义时间离散格式，因此离散生成元等于 $G_{\\Delta t,\\Delta x} = Q_{\\Delta x}$。\n\n边界条件的处理必须确保 $Q_{\\Delta x}$ 在其定义域上近似于 $A$：\n- 在任一端点处的终止(狄利克雷)边界是通过在边界附近构建模板时强制 $f(0)=0$ 和/或 $f(1)=0$ 来实现的（等效地，在连续时间跳跃的解释中，试图离开定义域的转移被发送到一个吸收态；在本问题中，您应通过在模板中直接代入边界值 $f(0)=0$ 或 $f(1)=0$ 来实现）。\n- 在端点处的罗宾边界是通过在函数空间上强制施加罗宾条件来实现的。在离散层面上，这可以通过离散边界关系式消除虚拟点的值来实现\n$$\n\\beta_0 \\frac{f_1 - f_{-1}}{2 \\Delta x} + \\alpha_0 f_0 = 0 \\quad \\text{在 } x=0,\\qquad\n\\beta_1 \\frac{f_{N+1} - f_{N-1}}{2 \\Delta x} + \\alpha_1 f_N = 0 \\quad \\text{在 } x=1,\n$$\n或者通过选择满足连续边界条件的函数 $f$ 来实现。为了保证生成元在定义域上的相容性，使用取自满足给定边界条件的函数 $f$ 的边界值 $f_0$ 和 $f_N$ 的内部模板就足够了。\n\n任务。从上述基本定义出发，实现离散生成元 $Q_{\\Delta x}$，并量化其在内部节点上与真实生成元 $A$ 的逐点相容性误差，针对几种边界类型。在所有测试用例中，使用 $a(x) \\equiv 1$。对于每种情况，选择一个位于指定边界条件下 $A$ 的定义域内的光滑测试函数 $f$，计算 $Af$ 在网格上的解析值，并报告最大绝对误差\n$$\nE := \\max_{1 \\le i \\le N-1} \\left| (Q_{\\Delta x} f)_i - (A f)(x_i) \\right|.\n$$\n您的程序必须实现并评估以下测试套件，涵盖终止和罗宾边界条件、漂移项的异质性以及收敛性检验：\n- 情况1 (标准情况，两端均为终止边界)：$b(x) \\equiv 0$，在 $x=0$ 和 $x=1$ 处为狄利克雷边界。使用 $f(x) = \\sin(\\pi x)$，网格 $N=200$，因此 $\\Delta x = 1/200$。以浮点数形式输出误差 $E_1$。\n- 情况2 (带漂移的终止)：$b(x) = x$，在 $x=0$ 和 $x=1$ 处为狄利克雷边界。使用 $f(x) = x(1-x)$，网格 $N=200$。以浮点数形式输出误差 $E_2$。\n- 情况3 (左端罗宾，右端终止)：$b(x) \\equiv 0.3$，在 $x=0$ 处为罗宾边界，参数 $(\\alpha_0,\\beta_0) = (2,1)$，在 $x=1$ 处为狄利克雷边界。构造一个三次多项式 $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$，其中 $c_2 = 0.2, c_3 = -0.1$，使得 $f'(0) + 2 f(0) = 0$ 和 $f(1) = 0$，并在 $N=200$ 的网格上使用此 $f$。以浮点数形式输出误差 $E_3$。\n- 情况4 (两端均为罗宾，包括一个反射边界)：$b(x) = -0.2 x$，在 $x=0$ 处为罗宾边界，参数 $(\\alpha_0,\\beta_0)=(2,1)$，在 $x=1$ 处为罗宾边界，参数 $(\\alpha_1,\\beta_1)=(0,1)$ (诺伊曼)。使用一个三次多项式 $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$，其中 $c_2 = 0.3, c_3 = -0.2$，选择系数以满足 $f'(0) + 2 f(0) = 0$ 和 $f'(1) = 0$，网格 $N=200$。以浮点数形式输出误差 $E_4$。\n- 情况5 (终止边界下的收敛性检验)：对情况1，分别使用 $N=100$ 和 $N=200$ 重复计算，得到 $E_{1,100}$ 和 $E_{1,200}$，并以浮点数形式输出比率 $R = E_{1,100} / E_{1,200}$。\n\n$f$ 和 $A f$ 的所有导数和求值都必须解析计算；只有 $Q_{\\Delta x}$ 的应用应使用有限差分。情况3和情况4中的所有函数都必须通过构造严格满足各自的边界条件。\n\n最终输出格式。您的程序应生成单行输出，包含五个结果，以逗号分隔的列表形式，并用方括号括起来，顺序为 $[E_1,E_2,E_3,E_4,R]$。\n\n不涉及物理单位。不使用角度。不使用百分比。所有输出都应为以标准十进制字符串表示的实数。", "solution": "我们从生成元及其定义域的基本定义开始。对于一维伊藤(Itô)随机微分方程(SDE) $dX_t = b(X_t)\\,dt + \\sigma(X_t)\\,dW_t$，无穷小生成元 $A$ 作用于一个光滑函数 $f$ 上为\n$$\nA f(x) = \\tfrac{1}{2} a(x) f''(x) + b(x) f'(x), \\quad a(x) := \\sigma^2(x).\n$$\n定义域 $\\mathcal{D}(A)$ 取决于边界行为。对于终止(狄利克雷)边界，$\\mathcal{D}(A)$ 包含满足 $f(0)=0$ 和/或 $f(1)=0$ 的函数。对于在端点处参数为 $(\\alpha_0,\\beta_0)$ 和 $(\\alpha_1,\\beta_1)$ 的罗宾(Robin)边界，它要求 $\\beta_0 f'(0) + \\alpha_0 f(0) = 0$ 和 $\\beta_1 f'(1) + \\alpha_1 f(1) = 0$。反射(诺伊曼)边界是 $\\alpha=0, \\beta \\neq 0$ 的特殊情况。\n\n为了用时间离散格式近似 $A$，我们在均匀网格 $x_i = i \\Delta x$，$i = 0,1,\\dots,N$（其中 $N \\Delta x = 1$）上定义一个空间离散化，并设置算子\n$$\n(Q_{\\Delta x} f)_i := \\tfrac{1}{2} a(x_i)\\,\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} + b(x_i)\\,\\frac{f_{i+1} - f_{i-1}}{2 \\Delta x}, \\quad i = 1,\\dots,N-1,\n$$\n这分别是二阶导数和一阶导数的标准中心有限差分格式。半群的前向欧拉时间离散近似为\n$$\nP_{\\Delta t,\\Delta x} := I + \\Delta t\\, Q_{\\Delta x},\n$$\n因此其离散生成元为 $G_{\\Delta t,\\Delta x} = (P_{\\Delta t,\\Delta x}-I)/\\Delta t = Q_{\\Delta x}$。在定义域上的相容性意味着对于每一个 $f \\in \\mathcal{D}(A)$，\n$$\n\\max_{1 \\le i \\le N-1} \\left| (Q_{\\Delta x} f)_i - (A f)(x_i) \\right| \\to 0 \\quad \\text{当 } \\Delta x \\to 0 \\text{ 时},\n$$\n如果 $a$ 和 $b$ 足够光滑且在内部使用标准中心差分，则其典型收敛率为 $\\mathcal{O}(\\Delta x^2)$。\n\n在时间离散格式中处理边界行为是微妙的，但指导原则是：离散生成元应在其定义域上近似连续生成元，而定义域的信息编码在 $f$ 的边界条件中。有两种互补的（且当 $\\Delta x \\to 0$ 时是等价的）方法来强制施加边界条件。\n\n1. 终止(狄利克雷)边界：从后向(生成元)的角度来看，我们在边界附近应用内部模板时直接强制 $f(0)=0$ 和/或 $f(1)=0$。例如，在 $i=1$ 处我们使用 $f_0 = f(0) = 0$，在 $i=N-1$ 处我们使用 $f_N = f(1) = 0$。在 $Q_{\\Delta x}$ 的连续时间马尔可夫链解释中，这对应于将“本应”离开定义域的转移率重定向到一个吸收态，从而使格式变为次马尔可夫的。在我们计算内部节点上的 $(Q_{\\Delta x} f)_i$ 时，只需代入与狄利克雷条件一致的边界值即可。\n\n2. 罗宾边界：在后向生成元的视角下，定义域条件是在边界处 $\\beta f' + \\alpha f = 0$。有两种常见的离散化方法：\n   - 虚拟点消除法：定义 $f_{-1}$ 和 $f_{N+1}$ 为虚拟值，并使用离散罗宾条件来消除它们\n     $$\n     \\beta_0 \\frac{f_1 - f_{-1}}{2 \\Delta x} + \\alpha_0 f_0 = 0 \\Rightarrow f_{-1} = f_1 + \\frac{2 \\Delta x\\,\\alpha_0}{\\beta_0} f_0,\n     $$\n     $$\n     \\beta_1 \\frac{f_{N+1} - f_{N-1}}{2 \\Delta x} + \\alpha_1 f_N = 0 \\Rightarrow f_{N+1} = f_{N-1} - \\frac{2 \\Delta x\\,\\alpha_1}{\\beta_1} f_N,\n     $$\n     当这些代入边界模板时，会得到一个封闭的格式。当必须在隐式时间步中将边界节点作为未知数更新时，这条路径最有用。\n   - 定义域相容检验法：为了验证生成元的相容性，选择精确满足连续边界条件的测试函数 $f$ 就足够了，这样带有边界值 $f_0$ 和 $f_N$ 的内部模板在边界附近也能达到二阶相容。这是因为中心有限差分的截断误差取决于内部光滑度，而边界条件仅通过模板中使用的值进入。我们的测试采用这种方法。\n\n测试的算法设计：\n- 在所有情况中，我们固定 $a(x) \\equiv 1$。对于每种情况，我们选择一个满足相关边界条件的光滑函数 $f$；对于狄利克雷情况，我们选择满足 $f(0)=0$ 和 $f(1)=0$ 的 $f$，对于罗宾情况，我们通过求解一个关于三次多项式 $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$ 系数的小型线性方程组来强制施加罗宾约束。然后我们：\n  1. 建立网格 $\\{x_i\\}_{i=0}^N$，其中 $\\Delta x = 1/N$。\n  2. 计算 $f_i := f(x_i)$ 并使用中心差分计算 $i=1,\\dots,N-1$ 的 $(Q_{\\Delta x} f)_i$。\n  3. 通过以下公式计算解析的 $A f(x_i)$：\n     $$\n     (A f)(x_i) = \\tfrac{1}{2} a(x_i) f''(x_i) + b(x_i) f'(x_i),\n     $$\n     其中对所选的 $f$ 的导数进行符号计算。\n  4. 报告最大绝对偏差 $E = \\max_{1 \\le i \\le N-1} |(Q_{\\Delta x} f)_i - (A f)(x_i)|$。\n\n各测试用例的详情：\n- 情况1：$b(x)\\equiv 0$，两端均为狄利克雷边界，$f(x) = \\sin(\\pi x)$。我们有 $f'(x) = \\pi \\cos(\\pi x)$，$f''(x) = -\\pi^2 \\sin(\\pi x)$，因此 $(A f)(x) = -\\tfrac{1}{2}\\pi^2 \\sin(\\pi x)$。中心差分的二阶相容性得出 $E_1 = \\mathcal{O}(\\Delta x^2)$。\n- 情况2：$b(x) = x$，两端均为狄利克雷边界，$f(x) = x(1-x)$。则 $f'(x) = 1 - 2x$，$f''(x) = -2$，$(A f)(x) = \\tfrac{1}{2}(-2) + x(1-2x) = -1 + x - 2x^2$。由于 $f$ 是一个二次多项式，一阶和二阶导数的中心有限差分是精确的，因此 $E_2$ 处于浮点舍入误差的水平。\n- 情况3：$b(x) \\equiv 0.3$，在 $x=0$ 处罗宾边界，参数 $(\\alpha_0,\\beta_0)=(2,1)$，在 $x=1$ 处狄利克雷边界。设 $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$，其中 $c_2 = 0.2$ 和 $c_3 = -0.1$。强制 $f'(0) + 2 f(0) = c_1 + 2 c_0 = 0$ 和 $f(1) = c_0 + c_1 + c_2 + c_3 = 0$。这个线性系统得出 $c_0 = c_2 + c_3 = 0.1$，$c_1 = -2 c_0 = -0.2$。然后 $f'(x) = c_1 + 2 c_2 x + 3 c_3 x^2$，$f''(x) = 2 c_2 + 6 c_3 x$，以及 $(A f)(x) = \\tfrac{1}{2} f''(x) + 0.3 f'(x)$。这里，对于三次多项式，二阶导数的离散化是精确的；一阶导数会产生一个量级为 $\\mathcal{O}(\\Delta x^2)$ 的截断误差，所以 $E_3 = \\mathcal{O}(\\Delta x^2)$，且常数较小。\n- 情况4：$b(x) = -0.2 x$，在 $x=0$ 处罗宾边界，参数 $(\\alpha_0,\\beta_0)=(2,1)$，在 $x=1$ 处诺伊曼边界，参数 $(\\alpha_1,\\beta_1)=(0,1)$。设 $f(x) = c_0 + c_1 x + c_2 x^2 + c_3 x^3$，其中 $c_2 = 0.3, c_3 = -0.2$。强制 $f'(0) + 2 f(0) = c_1 + 2 c_0 = 0$ 和 $f'(1) = c_1 + 2 c_2 + 3 c_3 = 0$。对于选定的 $c_2$ 和 $c_3$，第二个约束给出 $c_1 = 0$，因此 $c_0 = 0$。然后 $(A f)(x) = \\tfrac{1}{2} f''(x) - 0.2 x f'(x)$，其中 $f'(x) = 0.6 x - 0.6 x^2$，$f''(x) = 0.6 - 1.2 x$。同样，对于 $f''$ (因为 $f$ 是三次多项式)，中心差分是精确的，而一阶导数项产生 $\\mathcal{O}(\\Delta x^2)$ 的误差，所以 $E_4 = \\mathcal{O}(\\Delta x^2)$。\n- 情况5：我们在 $N=100$ 和 $N=200$ 的网格上重复情况1。对于一个光滑的 $f$，二阶导数的截断误差满足\n$$\n\\frac{f_{i+1} - 2 f_i + f_{i-1}}{\\Delta x^2} = f''(x_i) + \\frac{\\Delta x^2}{12} f^{(4)}(\\xi_i),\n$$\n其中某个 $\\xi_i$ 位于 $x_{i-1}$ 和 $x_{i+1}$ 之间。因此，当 $\\Delta x$ 减半时，误差会以二次方速率减半，所以比率 $R = E_{1,100}/E_{1,200}$ 应该接近 4。\n\n实现细节：\n- 对每种情况，我们解析地构造 $f$ 并解析地计算内部网格点上的 $f', f''$ 和 $A f$。\n- 我们直接使用中心有限差分公式，并使用与该情况一致的边界值（对于狄利克雷，$f(0)=0, f(1)=0$；对于罗宾，$f(0)$ 和 $f(1)$ 是构造的满足罗宾约束的 $f$ 的值），来组装 $i=1,\\dots,N-1$ 的 $(Q_{\\Delta x} f)_i$。\n- 我们计算并输出五个浮点数 $[E_1,E_2,E_3,E_4,R]$ 于单行中，如指定格式。\n\n这种基于原理的构造演示了如何通过在边界上进行定义域相容的强制约束，将终止边界和罗宾边界条件整合到时间离散格式中，从而确保离散生成元 $G_{\\Delta t,\\Delta x} = Q_{\\Delta x}$ 在其定义域上收敛到 $A$，并且在使用中心差分时具有二阶空间精度。", "answer": "```python\nimport numpy as np\n\ndef centered_second_diff(f_vals, dx):\n    # Assumes f_vals is array of length N+1; returns interior second derivative approx of length N-1\n    return (f_vals[2:] - 2.0 * f_vals[1:-1] + f_vals[:-2]) / (dx * dx)\n\ndef centered_first_diff(f_vals, dx):\n    # Interior centered first differences of length N-1\n    return (f_vals[2:] - f_vals[:-2]) / (2.0 * dx)\n\ndef apply_Q(ax_func, bx_func, f_func, N):\n    # Build grid\n    x = np.linspace(0.0, 1.0, N + 1)\n    dx = 1.0 / N\n    # Evaluate f on grid\n    f_vals = f_func(x)\n    # Evaluate a(x), b(x) on interior\n    a_vals = ax_func(x[1:-1])\n    b_vals = bx_func(x[1:-1])\n    # Finite differences on interior\n    d2 = centered_second_diff(f_vals, dx)\n    d1 = centered_first_diff(f_vals, dx)\n    # Q f on interior\n    Qf = 0.5 * a_vals * d2 + b_vals * d1\n    return x[1:-1], Qf\n\ndef case1(N):\n    # a(x)=1, b(x)=0, f(x)=sin(pi x), Dirichlet at both ends\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: np.zeros_like(x)\n    f = lambda x: np.sin(np.pi * x)\n    # True Af: -0.5 * pi^2 * sin(pi x)\n    Atrue = lambda x: -0.5 * (np.pi ** 2) * np.sin(np.pi * x)\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case2(N):\n    # a(x)=1, b(x)=x, f(x)=x(1-x), Dirichlet at both ends\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: x\n    f = lambda x: x * (1.0 - x)\n    # f' = 1 - 2x, f'' = -2 => Af = 0.5*(-2) + x*(1-2x) = -1 + x - 2x^2\n    Atrue = lambda x: -1.0 + x - 2.0 * x * x\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case3(N):\n    # a(x)=1, b(x)=0.3, Robin at 0: f'(0)+2 f(0)=0, Dirichlet at 1: f(1)=0\n    # Choose cubic f(x) = c0 + c1 x + c2 x^2 + c3 x^3 with c2=0.2, c3=-0.1\n    c2 = 0.2\n    c3 = -0.1\n    # Constraints: c1 + 2 c0 = 0, and c0 + c1 + c2 + c3 = 0\n    # Solve: c0 = c2 + c3, c1 = -2 c0\n    c0 = c2 + c3\n    c1 = -2.0 * c0\n    # Define f and derivatives\n    f = lambda x: c0 + c1 * x + c2 * x**2 + c3 * x**3\n    # Af = 0.5 f'' + 0.3 f'\n    fprime = lambda x: c1 + 2.0 * c2 * x + 3.0 * c3 * x**2\n    fsecond = lambda x: 2.0 * c2 + 6.0 * c3 * x\n    Atrue = lambda x: 0.5 * fsecond(x) + 0.3 * fprime(x)\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: 0.3 * np.ones_like(x)\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef case4(N):\n    # a(x)=1, b(x)=-0.2 x, Robin at 0: f'(0)+2 f(0)=0, Neumann at 1: f'(1)=0\n    # Choose cubic f(x) = c0 + c1 x + c2 x^2 + c3 x^3 with c2=0.3, c3=-0.2\n    c2 = 0.3\n    c3 = -0.2\n    # Constraints: c1 + 2 c0 = 0, and c1 + 2 c2 + 3 c3 = 0\n    # With chosen c2,c3, 2 c2 + 3 c3 = 0 => c1 = 0 => c0 = 0\n    c1 = 0.0\n    c0 = 0.0\n    f = lambda x: c0 + c1 * x + c2 * x**2 + c3 * x**3\n    fprime = lambda x: c1 + 2.0 * c2 * x + 3.0 * c3 * x**2\n    fsecond = lambda x: 2.0 * c2 + 6.0 * c3 * x\n    Atrue = lambda x: 0.5 * fsecond(x) - 0.2 * x * fprime(x)\n    ax = lambda x: np.ones_like(x)\n    bx = lambda x: -0.2 * x\n    xi, Qf = apply_Q(ax, bx, f, N)\n    Af = Atrue(xi)\n    err = np.max(np.abs(Qf - Af))\n    return err\n\ndef solve():\n    # Define test cases as specified\n    E1 = case1(N=200)\n    E2 = case2(N=200)\n    E3 = case3(N=200)\n    E4 = case4(N=200)\n    # Convergence ratio for case 1\n    E1_100 = case1(N=100)\n    E1_200 = E1\n    R = E1_100 / E1_200 if E1_200 != 0.0 else float('inf')\n\n    results = [E1, E2, E3, E4, R]\n    print(f\"[{','.join(map(str, results))}]\")\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2972794"}]}