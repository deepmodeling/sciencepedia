{"hands_on_practices": [{"introduction": "要理解反射边界，第一步是掌握过程与边界相互作用的数学描述，其中“局部时”是一个核心概念，它精确量化了过程在边界上所花费的时间。本练习将引导你运用占有时间公式，为标准布朗运动在原点的预期局部时推导出精确表达式，从而为更复杂的反射问题打下坚实的理论基础。[@problem_id:2993643]", "problem": "考虑一个从 $B_{0} = 0$ 开始的一维标准布朗运动 $B = \\{B_{t}\\}_{t \\geq 0}$。到时刻 $t$ 为止，在水平 $x \\in \\mathbb{R}$ 处的局部时记作 $L_{t}^{x}(B)$，它被定义为 $B$ 在 $x$ 处的占据密度，也就是说，$L^{x}_{t}(B)$ 是占据测度 $\\mu_{t}(A) = \\int_{0}^{t} \\mathbf{1}_{\\{B_{s} \\in A\\}} \\,\\mathrm{d}s$ 相对于勒贝格测度的拉东-尼科迪姆 (Radon–Nikodym) 导数，即它对所有有界可测函数 $g$ 满足占据时公式 $\\int_{0}^{t} g(B_{s}) \\,\\mathrm{d}s = \\int_{\\mathbb{R}} g(x) \\, L_{t}^{x}(B) \\,\\mathrm{d}x$。仅使用标准布朗运动的基本性质（独立平稳增量、路径的连续性及其高斯转移密度）和占据时公式，推导期望 $E[L_{t}^{0}(B)]$ 作为 $t$ 的函数的闭式表达式。你的最终答案必须是一个解析表达式。无需四舍五入，也不涉及任何单位。", "solution": "问题要求计算一维标准布朗运动 $B_t$ 在水平 $0$ 处的局部时的期望，记为 $E[L_{t}^{0}(B)]$。我们已知占据时公式，它对任何有界可测函数 $g: \\mathbb{R} \\to \\mathbb{R}$ 都成立：\n$$\n\\int_{0}^{t} g(B_{s}) \\,\\mathrm{d}s = \\int_{\\mathbb{R}} g(x) \\, L_{t}^{x}(B) \\,\\mathrm{d}x\n$$\n我们首先对该方程的两边取期望。\n$$\nE\\left[\\int_{0}^{t} g(B_{s}) \\,\\mathrm{d}s\\right] = E\\left[\\int_{\\mathbb{R}} g(x) \\, L_{t}^{x}(B) \\,\\mathrm{d}x\\right]\n$$\n通过应用 Fubini 定理（或 Tonelli 定理，因为我们可以不失一般性地假设 $g \\ge 0$，然后通过线性性进行推广），我们可以在两边交换期望和积分算子。\n\n在左侧（LHS），我们将期望与时间积分交换：\n$$\n\\text{LHS} = \\int_{0}^{t} E[g(B_{s})] \\,\\mathrm{d}s\n$$\n在右侧（RHS），我们将期望与空间积分交换：\n$$\n\\text{RHS} = \\int_{\\mathbb{R}} g(x) E[L_{t}^{x}(B)] \\,\\mathrm{d}x\n$$\n令两边相等，得到恒等式：\n$$\n\\int_{0}^{t} E[g(B_{s})] \\,\\mathrm{d}s = \\int_{\\mathbb{R}} g(x) E[L_{t}^{x}(B)] \\,\\mathrm{d}x\n$$\n接下来，我们计算 $E[g(B_{s})]$ 这一项。过程 $B$ 是一个从 $B_{0}=0$ 开始的标准布朗运动。对于任意时刻 $s > 0$，随机变量 $B_{s}$ 服从均值为 $0$、方差为 $s$ 的正态分布。其概率密度函数 (PDF) $p_{s}(y)$ 由高斯核给出：\n$$\np_{s}(y) = \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{y^{2}}{2s}\\right)\n$$\n因此，$g(B_{s})$ 的期望由 $g(y)$ 对此密度函数的积分给出：\n$$\nE[g(B_{s})] = \\int_{\\mathbb{R}} g(y) p_{s}(y) \\,\\mathrm{d}y = \\int_{\\mathbb{R}} g(y) \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{y^{2}}{2s}\\right) \\,\\mathrm{d}y\n$$\n将此表达式代入我们恒等式的左侧得到：\n$$\n\\text{LHS} = \\int_{0}^{t} \\left( \\int_{\\mathbb{R}} g(y) \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{y^{2}}{2s}\\right) \\,\\mathrm{d}y \\right) \\,\\mathrm{d}s\n$$\n我们再次应用 Fubini 定理来交换关于时间 $s$ 和空间 $y$ 的积分顺序：\n$$\n\\text{LHS} = \\int_{\\mathbb{R}} g(y) \\left( \\int_{0}^{t} \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{y^{2}}{2s}\\right) \\,\\mathrm{d}s \\right) \\,\\mathrm{d}y\n$$\n现在，我们将左侧的这个表达式与我们找到的右侧表达式相等。为了保持积分变量的符号一致，我们使用 $x$ 代替 $y$：\n$$\n\\int_{\\mathbb{R}} g(x) \\left( \\int_{0}^{t} \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{x^{2}}{2s}\\right) \\,\\mathrm{d}s \\right) \\,\\mathrm{d}x = \\int_{\\mathbb{R}} g(x) E[L_{t}^{x}(B)] \\,\\mathrm{d}x\n$$\n这个等式必须对任何有界可测函数 $g$ 成立。这意味着相对于测度 $g(x)\\mathrm{d}x$ 的被积函数必须几乎处处相等。因此，我们可以确定 $E[L_{t}^{x}(B)]$ 为：\n$$\nE[L_{t}^{x}(B)] = \\int_{0}^{t} \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{x^{2}}{2s}\\right) \\,\\mathrm{d}s\n$$\n问题要求的是在原点处的期望局部时，这对应于设 $x=0$：\n$$\nE[L_{t}^{0}(B)] = \\int_{0}^{t} \\frac{1}{\\sqrt{2\\pi s}} \\exp\\left(-\\frac{0^{2}}{2s}\\right) \\,\\mathrm{d}s = \\int_{0}^{t} \\frac{1}{\\sqrt{2\\pi s}} \\,\\mathrm{d}s\n$$\n我们现在计算这个定积分：\n$$\nE[L_{t}^{0}(B)] = \\frac{1}{\\sqrt{2\\pi}} \\int_{0}^{t} s^{-1/2} \\,\\mathrm{d}s\n$$\n$s^{-1/2}$ 的反导数是 $2s^{1/2}$。该积分在下限 $s=0$ 处是瑕积分，但它是收敛的。\n$$\n\\int_{0}^{t} s^{-1/2} \\,\\mathrm{d}s = \\left[ 2s^{1/2} \\right]_{0}^{t} = 2t^{1/2} - 2(0)^{1/2} = 2\\sqrt{t}\n$$\n将这个结果代回我们的期望表达式中，我们得到：\n$$\nE[L_{t}^{0}(B)] = \\frac{1}{\\sqrt{2\\pi}} (2\\sqrt{t}) = \\frac{2\\sqrt{t}}{\\sqrt{2\\pi}} = \\sqrt{\\frac{4t}{2\\pi}} = \\sqrt{\\frac{2t}{\\pi}}\n$$\n这就是标准布朗运动在原点处的期望局部时的闭式表达式。", "answer": "$$\\boxed{\\sqrt{\\frac{2t}{\\pi}}}$$", "id": "2993643"}, {"introduction": "在掌握了局部时的基本概念后，我们可以将其推广到更一般的 Skorokhod 问题框架中，用以分析受约束的系统。本练习将理论付诸实践，要求你为一个具体的双服务台串联排队网络建立半鞅反射布朗运动 (SRBM) 模型。你将学习如何从系统的基本参数出发，推导出模型的漂移向量 $\\theta$、协方差矩阵 $\\Gamma$ 和反射矩阵 $R$，并利用这些参数来评估系统的稳定性。[@problem_id:2993602]", "problem": "考虑一个在重载扩散尺度下运行的两站串联开放网络。外部顾客根据一个更新过程到达站 $1$，其速率为 $\\lambda = \\frac{9}{10}$，变异系数的平方为 $c_{a}^{2} = 2$。站 $1$ 和站 $2$ 的服务时间对于不同任务和不同站点是独立的，平均服务速率分别为 $\\mu_{1} = 1$ 和 $\\mu_{2} = \\frac{11}{10}$，变异系数的平方分别为 $c_{s,1}^{2} = \\frac{3}{2}$ 和 $c_{s,2}^{2} = \\frac{1}{2}$。所有原始过程都是相互独立的。离开站 $1$ 的任务以概率 $1$ 立即进入站 $2$，离开站 $2$ 的任务则离开网络。假设两个站都采用先进先出 (FIFO) 服务。\n\n在扩散尺度下，缓冲区内容向量 $Q(t) \\in \\mathbb{R}_{+}^{2}$ 的中心化净输入过程 $W(t)$ 被建模为一个二维布朗运动，其漂移向量为 $\\theta \\in \\mathbb{R}^{2}$，协方差矩阵为 $\\Gamma \\in \\mathbb{R}^{2 \\times 2}$。队长过程通过一个斜反射 Skorokhod 映射被约束在非负象限，因此有\n$$\nQ(t) \\;=\\; Q(0) \\;+\\; W(t) \\;+\\; R\\,Y(t),\n$$\n其中 $R \\in \\mathbb{R}^{2 \\times 2}$ 的列向量为反射方向，$Y(t) \\in \\mathbb{R}_{+}^{2}$ 是一个非减调节过程向量，其分量仅在 $Q(t)$ 的对应分量处于边界上时才增加。假设反射方向是由与路由一致的瞬时流量守恒引起的：当在站 $1$ 发生反射时，一个单位的调节量会增加缓冲区 $1$，同时减少对缓冲区 $2$ 的路由推送；当在站 $2$ 发生反射时，一个单位的调节量仅增加缓冲区 $2$（离去任务离开网络）。\n\n从第一性原理推导描述 $Q(t)$ 的半鞅反射布朗运动 (SRBM) 的数据 $(\\theta,\\Gamma,R)$。\n\n定义稳定裕度\n$$\nm \\;:=\\; \\max\\bigl\\{ \\bigl(R^{-1}\\theta\\bigr)_{1},\\; \\bigl(R^{-1}\\theta\\bigr)_{2} \\bigr\\}.\n$$\n精确计算 $m$。你的最终答案必须是单个精确值（无近似或四舍五入）。不需要单位。", "solution": "该问题要求推导用于在重载情况下近似两站串联排队网络的半鞅反射布朗运动 (SRBM) 的参数 $(\\theta, \\Gamma, R)$。随后，我们必须计算稳定裕度 $m$。\n\n该系统由两个串联的站组成。我们将原始随机过程表示如下：\n1.  $A(t)$：到达站 $1$ 的外部到达过程。这是一个更新过程，其速率为 $\\lambda = \\frac{9}{10}$，变异系数的平方 (SCV) 为 $c_{a}^{2} = 2$。\n2.  $S_1(t)$：站 $1$ 的潜在服务完成过程。这是一个更新过程，其速率为 $\\mu_1 = 1$，SCV 为 $c_{s,1}^{2} = \\frac{3}{2}$。\n3.  $S_2(t)$：站 $2$ 的潜在服务完成过程。这是一个更新过程，其速率为 $\\mu_2 = \\frac{11}{10}$，SCV 为 $c_{s,2}^{2} = \\frac{1}{2}$。\n假设这三个过程是相互独立的。\n\n在扩散尺度下，每个速率为 $\\nu$、SCV 为 $c^2$ 的更新过程 $N(t)$ 可由一个带漂移的布朗运动近似：$N(t) \\approx \\nu t + \\sqrt{\\nu c^2} B(t)$，其中 $B(t)$ 是一个标准一维布朗运动。\n\n无约束净输入过程 $W(t) = (W_1(t), W_2(t))^T$ 表示没有边界约束时的队长变化。对于串联队列，流量是顺序的：到达站 $1$ 的是外部到达，而到达站 $2$ 的是从站 $1$ 离去的任务。\n站 $1$ 的净输入是外部到达与站 $1$ 潜在服务完成之差。\n$$W_1(t) = A(t) - S_1(t)$$\n站 $2$ 的净输入是来自站 $1$ 的到达（即其潜在离去）与站 $2$ 潜在服务完成之差。\n$$W_2(t) = S_1(t) - S_2(t)$$\n因此，向量净输入过程为 $W(t) = (A(t) - S_1(t), S_1(t) - S_2(t))^T$。\n\n**1. 漂移向量 $\\theta$ 的推导**\n\n布朗运动 $W(t)$ 的漂移向量 $\\theta$ 由净输入过程的平均速率向量给出。\n$$\n\\theta = \\lim_{t\\to\\infty} \\frac{1}{t} E[W(t)] = \\begin{pmatrix} E[A(t)]/t - E[S_1(t)]/t \\\\ E[S_1(t)]/t - E[S_2(t)]/t \\end{pmatrix}\n$$\n平均速率由底层更新过程的速率给出。\n$$\n\\theta = \\begin{pmatrix} \\lambda - \\mu_1 \\\\ \\mu_1 - \\mu_2 \\end{pmatrix}\n$$\n代入给定值：\n$\\theta_1 = \\frac{9}{10} - 1 = -\\frac{1}{10}$\n$\\theta_2 = 1 - \\frac{11}{10} = -\\frac{1}{10}$\n因此，漂移向量为 $\\theta = \\begin{pmatrix} -1/10 \\\\ -1/10 \\end{pmatrix}$。\n\n**2. 协方差矩阵 $\\Gamma$ 的推导**\n\n协方差矩阵 $\\Gamma$ 由 $\\Gamma_{ij} = \\lim_{t\\to\\infty} \\frac{1}{t} \\text{Cov}(W_i(t), W_j(t))$ 给出。\n独立原始过程的扩散近似为：\n$A(t) \\approx \\lambda t + \\sqrt{\\lambda c_a^2} B_a(t)$\n$S_1(t) \\approx \\mu_1 t + \\sqrt{\\mu_1 c_{s,1}^2} B_1(t)$\n$S_2(t) \\approx \\mu_2 t + \\sqrt{\\mu_2 c_{s,2}^2} B_2(t)$\n其中 $B_a, B_1, B_2$ 是独立的标准布朗运动。\n\n$\\Gamma$ 的对角元素是方差：\n$\\Gamma_{11} = \\lim_{t\\to\\infty} \\frac{1}{t} \\text{Var}(A(t) - S_1(t)) = \\lambda c_a^2 + \\mu_1 c_{s,1}^2$\n$\\Gamma_{22} = \\lim_{t\\to\\infty} \\frac{1}{t} \\text{Var}(S_1(t) - S_2(t)) = \\mu_1 c_{s,1}^2 + \\mu_2 c_{s,2}^2$\n\n非对角元素是协方差：\n$\\Gamma_{12} = \\lim_{t\\to\\infty} \\frac{1}{t} \\text{Cov}(A(t) - S_1(t), S_1(t) - S_2(t))$\n由于 $A(t)$、$S_1(t)$ 和 $S_2(t)$ 是独立过程，协方差仅由公共项 $S_1(t)$ 引起：\n$\\Gamma_{12} = \\lim_{t\\to\\infty} \\frac{1}{t} \\text{Cov}(-S_1(t), S_1(t)) = -\\lim_{t\\to\\infty} \\frac{1}{t} \\text{Var}(S_1(t)) = -\\mu_1 c_{s,1}^2$\n由于 $\\Gamma$ 是对称的，$\\Gamma_{21} = \\Gamma_{12}$。\n\n代入给定值：\n$\\lambda c_a^2 = \\frac{9}{10} \\times 2 = \\frac{9}{5}$\n$\\mu_1 c_{s,1}^2 = 1 \\times \\frac{3}{2} = \\frac{3}{2}$\n$\\mu_2 c_{s,2}^2 = \\frac{11}{10} \\times \\frac{1}{2} = \\frac{11}{20}$\n\n$\\Gamma_{11} = \\frac{9}{5} + \\frac{3}{2} = \\frac{18}{10} + \\frac{15}{10} = \\frac{33}{10}$\n$\\Gamma_{22} = \\frac{3}{2} + \\frac{11}{20} = \\frac{30}{20} + \\frac{11}{20} = \\frac{41}{20}$\n$\\Gamma_{12} = \\Gamma_{21} = -\\frac{3}{2}$\n\n因此，协方差矩阵为 $\\Gamma = \\begin{pmatrix} 33/10 & -3/2 \\\\ -3/2 & 41/20 \\end{pmatrix}$。\n\n**3. 反射矩阵 $R$ 的推导**\n\n反射矩阵 $R$ 描述了在状态空间 $\\mathbb{R}_{+}^{2}$ 的边界上施加的控制方向。\n- 当站 $1$ 的队列为空 ($Q_1(t) = 0$) 时，调节过程 $Y_1(t)$ 起作用。问题描述这会“增加缓冲区 $1$，同时减少对缓冲区 $2$ 的路由推送”。增加缓冲区 $1$ 意味着反射向量 $R_1$ 的第一个分量是正的（归一化为 $1$）。减少对缓冲区 $2$ 的路由推送意味着一个本应到达站 $2$ 的到达没有发生，这对队长 $Q_2$ 是一个负贡献。这被建模为 $R_1$ 中的一个负的第二个分量（归一化为 $-1$）。因此，$R$ 的第一列是 $R_1 = \\begin{pmatrix} 1 \\\\ -1 \\end{pmatrix}$。\n- 当站 $2$ 的队列为空 ($Q_2(t) = 0$) 时，调节过程 $Y_2(t)$ 起作用。问题描述这“仅增加缓冲区 $2$”。这意味着对应的反射向量 $R_2$ 对于站 $1$ 的分量为零，对于站 $2$ 的分量为正（归一化为 $1$）。因此，$R$ 的第二列是 $R_2 = \\begin{pmatrix} 0 \\\\ 1 \\end{pmatrix}$。\n\n综合这些，反射矩阵为 $R = \\begin{pmatrix} 1 & 0 \\\\ -1 & 1 \\end{pmatrix}$。\nSRBM 的参数为 $(\\theta, \\Gamma, R) = \\left( \\begin{pmatrix} -1/10 \\\\ -1/10 \\end{pmatrix}, \\begin{pmatrix} 33/10 & -3/2 \\\\ -3/2 & 41/20 \\end{pmatrix}, \\begin{pmatrix} 1 & 0 \\\\ -1 & 1 \\end{pmatrix} \\right)$。\n\n**4. 稳定裕度 $m$ 的计算**\n\n稳定裕度定义为 $m = \\max\\bigl\\{ \\bigl(R^{-1}\\theta\\bigr)_{1},\\; \\bigl(R^{-1}\\theta\\bigr)_{2} \\bigr\\}$。\n首先，我们求 $R$ 的逆矩阵：\n$\\det(R) = (1)(1) - (0)(-1) = 1$。\n$R^{-1} = \\frac{1}{\\det(R)} \\begin{pmatrix} 1 & -0 \\\\ -(-1) & 1 \\end{pmatrix} = \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\end{pmatrix}$。\n\n接下来，我们计算向量 $\\delta = R^{-1}\\theta$，它代表工作负载过程的漂移。\n$$\n\\delta = R^{-1}\\theta = \\begin{pmatrix} 1 & 0 \\\\ 1 & 1 \\end{pmatrix} \\begin{pmatrix} -1/10 \\\\ -1/10 \\end{pmatrix}\n$$\n$\\delta$ 的分量是：\n$\\delta_1 = (1)(-\\frac{1}{10}) + (0)(-\\frac{1}{10}) = -\\frac{1}{10}$\n$\\delta_2 = (1)(-\\frac{1}{10}) + (1)(-\\frac{1}{10}) = -\\frac{2}{10} = -\\frac{1}{5}$\n\n最后，我们通过取这些分量的最大值来计算稳定裕度 $m$：\n$$\nm = \\max\\{-\\frac{1}{10}, -\\frac{1}{5}\\}\n$$\n由于 $-\\frac{1}{10} = -0.1$ 且 $-\\frac{1}{5} = -0.2$，最大值是 $-\\frac{1}{10}$。\n$$\nm = -\\frac{1}{10}\n$$", "answer": "$$\\boxed{-\\frac{1}{10}}$$", "id": "2993602"}, {"introduction": "理论分析固然重要，但许多现实世界中的反射过程由于其复杂性而无法求得解析解，此时数值模拟便成为不可或缺的研究工具。本练习将带你进入计算随机过程的世界，通过编写程序来模拟一个在圆盘内反射的布朗运动。你不仅将实现一个经典的投影算法，还将通过将模拟数据与已知的平稳分布理论矩进行比较来验证模型的正确性，从而搭建起理论与计算实践之间的桥梁。[@problem_id:2993620]", "problem": "考虑一个在以原点为中心、半径为 $R$ 的闭圆盘中的平面反射布朗运动。设 $W_t$ 是一个协方差矩阵为单位矩阵的二维布朗运动，且 $x_0 \\in \\overline{D}$，其中 $\\overline{D} := \\{ x \\in \\mathbb{R}^2 : \\lVert x \\rVert \\le R \\}$。反射过程 $X_t$ 定义为该圆盘中 Skorokhod 问题的解，即找到一对 $(X_t, L_t)$ 使得对于所有 $t \\ge 0$ 都有 $X_t \\in \\overline{D}$，$L_t$ 是一个连续的、非递减的过程，仅当 $X_t$ 位于边界 $\\partial D = \\{ x : \\lVert x \\rVert = R \\}$ 上时才增加，并且\n$$\nX_t = x_0 + W_t + \\int_0^t n\\!\\left(X_s\\right)\\, dL_s,\n$$\n其中 $n(x)$ 是在 $x \\in \\partial D$ 处的内向单位法向量，即 $n(x) = -\\frac{x}{\\lVert x \\rVert}$。\n\n基本事实：\n- 在 $D$ 的内部，$X_t$ 的生成元是 $\\frac{1}{2}\\Delta$，对于生成元定义域中的函数，在边界 $\\partial D$ 上满足 Neumann 边界条件（法向导数为零）。\n- 在具有 Neumann 边界条件的连通有界域上，唯一的不变（平稳）概率分布是在该域上的均匀分布。\n\n由此可知，对于圆盘而言，$X_t$ 的不变分布是在 $\\overline{D}$ 上的均匀分布。如果 $(R,\\Theta)$ 表示在圆盘上均匀分布的一个点的极坐标，则 $\\Theta$ 在 $[0,2\\pi)$ 上均匀分布且与 $R$ 无关，径向坐标的密度为\n$$\nf_R(r) = \\frac{2r}{R^2}, \\quad 0 \\le r \\le R.\n$$\n因此，不变分布的矩满足\n$$\n\\mathbb{E}[R] = \\frac{2R}{3}, \\quad \\mathbb{E}[R^2] = \\frac{R^2}{2}, \\quad \\mathbb{E}[X] = 0, \\quad \\mathbb{E}[X^2] = \\frac{R^2}{4},\n$$\n其中 $X$ 表示圆盘上均匀分布点的一个笛卡尔坐标（由对称性，另一坐标也同样）。\n\n任务：实现一个完整的程序，通过步长为 $\\Delta t$ 的时间离散化来模拟圆盘中的反射布朗运动。在每一步，提出一个自由布朗增量，并通过一个最小的内向法向校正来强制执行 Skorokhod 约束，以使状态保持在 $\\overline{D}$ 内。在数值上，如果一个自由增量后的建议位置 $Y$ 位于圆盘外，即 $\\lVert Y \\rVert > R$，则通过将 $Y$ 映射到 $\\frac{R}{\\lVert Y \\rVert}Y$ 来校正到 $\\overline{D}$ 上的欧几里得投影。每个测试用例使用单条长轨迹，丢弃初始的预烧期分数部分，并从保留的样本中估计矩 $\\mathbb{E}[R]$、$\\mathbb{E}[R^2]$、$\\mathbb{E}[X]$ 和 $\\mathbb{E}[X^2]$。\n\n验证：对于每个测试用例，将估计的矩与上面给出的理论不变矩进行比较。使用根据每个矩的自然量级缩放的绝对误差阈值：一个特定于用例的容差因子 $\\tau$ 决定了四个阈值\n$$\n\\varepsilon_R = \\tau R, \\quad \\varepsilon_{R^2} = \\tau R^2, \\quad \\varepsilon_X = \\tau R, \\quad \\varepsilon_{X^2} = \\tau R^2.\n$$\n如果所有四个绝对误差都不超过其各自的阈值，则该测试用例通过。\n\n单位：所有量均为无量纲。\n\n测试套件：\n- 用例 1（通用，正常路径）：$R=1.0$，$\\Delta t = 0.002$，总模拟时间 $T=400$（因此 $N = T/\\Delta t = 200000$ 步），预烧期分数 $b=0.20$，初始位置 $x_0=(0.0,0.0)$，随机种子 $12345$，容差因子 $\\tau=0.02$。\n- 用例 2（边界起始）：$R=2.0$，$\\Delta t = 0.002$，$T=400$，$b=0.20$，$x_0=(R,0)$，种子 $23456$，$\\tau=0.02$。\n- 用例 3（较粗时间步长）：$R=1.0$，$\\Delta t = 0.05$，$T=2000$，$b=0.20$，$x_0=(0.0,0.0)$，种子 $34567$，$\\tau=0.03$。\n- 用例 4（小半径）：$R=0.25$，$\\Delta t = 0.002$，$T=400$，$b=0.20$，$x_0=(0.0,0.0)$，种子 $45678$，$\\tau=0.02$。\n\n程序要求：\n- 按照描述实现模拟和验证。\n- 对于每个测试用例，输出一个布尔值，指示所有四个矩的验证是否在相应阈值下通过。\n- 最终输出格式：您的程序应生成单行输出，其中包含用方括号括起来的逗号分隔列表形式的结果，例如 `[result_1,result_2,result_3,result_4]`，其中每个 `result_i` 是 `True` 或 `False`。", "solution": "问题陈述经评估有效。它在科学上基于随机微分方程理论，特别是针对反射布朗运动的 Skorokhod 问题。该问题是适定的，提供了所有必要的参数、初始条件和一个清晰、客观的验证标准。不变分布矩的理论值是正确的，并且是从基本原理推导出来的。该任务要求实现一个标准的数值方案，并将其输出与理论结果直接比较，使其成为计算数学中一个明确定义的问题。\n\n目标是模拟一个在以原点为中心的半径为 $R$ 的闭圆盘 $\\overline{D}$ 内的二维反射布朗运动 $X_t$。已知此过程的长期行为会收敛到圆盘上的均匀概率分布。任务是数值上验证此性质。对于一组给定的参数，我们将模拟过程的一条轨迹，估计其径向坐标 $r = \\lVert X_t \\rVert$ 的前两个矩以及其一个笛卡尔坐标（例如，第一个坐标 $x$）的前两个矩，并将这些估计值与其理论值进行比较。\n\n过程 $X_t$ 由以下随机微分方程控制：\n$$\nX_t = x_0 + W_t + \\int_0^t n(X_s)\\, dL_s\n$$\n其中 $W_t$ 是一个标准二维布朗运动，$x_0$ 是初始位置，$L_t$ 是一个代表反射力的非递减过程，而 $n(x) = -x/\\lVert x \\rVert$ 是边界 $\\partial D$ 处的内向单位法向量。\n\n我们将采用一种基于时间离散化的数值方法，使用小的时间步长 $\\Delta t$。这是一种基于投影的 Euler-Maruyama 格式。在每个时间步 $k$，我们首先通过将一个自由布朗增量加到当前位置 $X_k$，来计算一个建议位置 $Y_{k+1}$：\n$$\nY_{k+1} = X_k + \\Delta W_{k+1}\n$$\n其中增量 $\\Delta W_{k+1}$ 是一个从均值为 $0$、协方差矩阵为 $\\Delta t \\cdot I$（$I$ 是 $2 \\times 2$ 单位矩阵）的二维正态分布中抽取的随机向量。这可以写成 $\\Delta W_{k+1} = \\sqrt{\\Delta t} Z_{k+1}$，其中 $Z_{k+1} \\sim \\mathcal{N}(0, I)$。\n\n接下来，我们强制执行边界条件。如果建议位置 $Y_{k+1}$ 位于圆盘内部或边界上（即 $\\lVert Y_{k+1} \\rVert \\le R$），我们接受它：$X_{k+1} = Y_{k+1}$。如果它位于圆盘外部（$\\lVert Y_{k+1} \\rVert > R$），我们将其投影回边界上。指定的投影方法将 $Y_{k+1}$ 映射到 $\\overline{D}$ 中最近的点，该点位于边界上：\n$$\nX_{k+1} = \\frac{R}{\\lVert Y_{k+1} \\rVert} Y_{k+1}\n$$\n这个两步过程定义了离散时间过程 $X_k$ 的演化。\n\n对于每个测试用例，我们生成一条包含 $N = T/\\Delta t$ 步的单条长轨迹。过程 $X_t$ 关于其均匀不变分布是各态遍历的。因此，根据各态遍历定理，沿单条轨迹的时间平均值会收敛到关于不变测度的空间平均值。为了估计这些矩，我们首先丢弃轨迹的初始部分 $b$（“预烧期”），以使过程接近其平稳状态。然后，我们从剩余的 $N(1-b)$ 个数据点中计算四个量的样本均值：径向坐标 $r_k = \\lVert X_k \\rVert$、其平方 $r_k^2$、第一个笛卡尔坐标 $x_k$ 及其平方 $x_k^2$。这些样本均值是我们对理论矩的估计。\n\n从半径为 $R$ 的圆盘中均匀选择一个点的理论矩是：\n1.  $\\mathbb{E}[r] = \\int_0^R r \\frac{2r}{R^2} dr = \\frac{2R}{3}$\n2.  $\\mathbb{E}[r^2] = \\int_0^R r^2 \\frac{2r}{R^2} dr = \\frac{R^2}{2}$\n3.  $\\mathbb{E}[x] = 0$ (由对称性)\n4.  $\\mathbb{E}[x^2] = \\frac{1}{2}\\mathbb{E}[r^2] = \\frac{R^2}{4}$ (由对称性，因为 $\\mathbb{E}[x^2]=\\mathbb{E}[y^2]$ 且 $r^2=x^2+y^2$)\n\n如果所有四个估计矩都接近其理论对应值，则认为测试用例通过。每个矩的绝对误差必须在特定容差范围内。这些容差定义为 $\\varepsilon_R = \\tau R$（对于 $\\mathbb{E}[r]$），$\\varepsilon_{R^2} = \\tau R^2$（对于 $\\mathbb{E}[r^2]$），$\\varepsilon_X = \\tau R$（对于 $\\mathbb{E}[x]$），以及 $\\varepsilon_{X^2} = \\tau R^2$（对于 $\\mathbb{E}[x^2]$），其中 $\\tau$ 是一个特定于用例的容差因子。一个测试当且仅当以下条件全部满足时通过：\n-   $|\\text{est}(\\mathbb{E}[r]) - \\frac{2R}{3}| \\le \\tau R$\n-   $|\\text{est}(\\mathbb{E}[r^2]) - \\frac{R^2}{2}| \\le \\tau R^2$\n-   $|\\text{est}(\\mathbb{E}[x]) - 0| \\le \\tau R$\n-   $|\\text{est}(\\mathbb{E}[x^2]) - \\frac{R^2}{4}| \\le \\tau R^2$\n\n最终的程序将为问题陈述中指定的每个测试用例执行此模拟和验证过程，并报告每个用例的成功或失败的布尔值。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef run_simulation_case(R, dt, T, b, x0, seed, tau):\n    \"\"\"\n    Simulates reflected Brownian motion in a disk and validates its moments.\n\n    Args:\n        R (float): Radius of the disk.\n        dt (float): Time step for the simulation.\n        T (float): Total simulation time.\n        b (float): Burn-in fraction to discard.\n        x0 (tuple): Initial position (x, y).\n        seed (int): Random seed for reproducibility.\n        tau (float): Tolerance factor for validation.\n\n    Returns:\n        bool: True if all moment validations pass, False otherwise.\n    \"\"\"\n    # Set the random seed\n    np.random.seed(seed)\n\n    # Simulation parameters\n    num_steps = int(T / dt)\n    burn_in_steps = int(num_steps * b)\n    \n    # Initialize the process\n    x_current = np.array(x0, dtype=float)\n\n    # Lists to store samples after the burn-in period\n    samples_r = []\n    samples_r2 = []\n    samples_x = []\n    samples_x2 = []\n\n    sqrt_dt = np.sqrt(dt)\n\n    # Simulation loop\n    for k in range(num_steps):\n        # Propose a free Brownian step\n        dW = np.random.randn(2) * sqrt_dt\n        y_next = x_current + dW\n        \n        # Enforce the reflection boundary condition\n        norm_y = np.linalg.norm(y_next)\n        if norm_y > R:\n            x_next = y_next * (R / norm_y)\n        else:\n            x_next = y_next\n        \n        x_current = x_next\n        \n        # Collect samples after burn-in\n        if k >= burn_in_steps:\n            r = np.linalg.norm(x_current)\n            x_coord = x_current[0]\n            \n            samples_r.append(r)\n            samples_r2.append(r**2)\n            samples_x.append(x_coord)\n            samples_x2.append(x_coord**2)\n\n    # Estimate moments from samples\n    est_E_r = np.mean(samples_r)\n    est_E_r2 = np.mean(samples_r2)\n    est_E_x = np.mean(samples_x)\n    est_E_x2 = np.mean(samples_x2)\n    \n    # Theoretical moments\n    th_E_r = 2.0 * R / 3.0\n    th_E_r2 = R**2 / 2.0\n    th_E_x = 0.0\n    th_E_x2 = R**2 / 4.0\n\n    # Validation thresholds\n    eps_R = tau * R\n    eps_R2 = tau * R**2\n    # Note: The problem defines thresholds for E[X] and E[X^2] as tau*R and tau*R^2\n    # which is slightly unusual for E[X] but we follow the spec.\n    eps_X = tau * R\n    eps_X2 = tau * R**2\n    \n    # Perform validation checks\n    check_r = abs(est_E_r - th_E_r) <= eps_R\n    check_r2 = abs(est_E_r2 - th_E_r2) <= eps_R2\n    check_x = abs(est_E_x - th_E_x) <= eps_X\n    check_x2 = abs(est_E_x2 - th_E_x2) <= eps_X2\n\n    return all([check_r, check_r2, check_x, check_x2])\n\ndef solve():\n    \"\"\"\n    Main function to run all test cases and print results.\n    \"\"\"\n    # Define the test cases from the problem statement.\n    test_cases = [\n        # Case 1: general, happy path\n        {'R': 1.0, 'dt': 0.002, 'T': 400, 'b': 0.20, 'x0': (0.0, 0.0), 'seed': 12345, 'tau': 0.02},\n        # Case 2: boundary start\n        {'R': 2.0, 'dt': 0.002, 'T': 400, 'b': 0.20, 'x0': (2.0, 0.0), 'seed': 23456, 'tau': 0.02},\n        # Case 3: coarser time step\n        {'R': 1.0, 'dt': 0.05, 'T': 2000, 'b': 0.20, 'x0': (0.0, 0.0), 'seed': 34567, 'tau': 0.03},\n        # Case 4: small radius\n        {'R': 0.25, 'dt': 0.002, 'T': 400, 'b': 0.20, 'x0': (0.0, 0.0), 'seed': 45678, 'tau': 0.02}\n    ]\n\n    results = []\n    for case in test_cases:\n        result = run_simulation_case(\n            R=case['R'],\n            dt=case['dt'],\n            T=case['T'],\n            b=case['b'],\n            x0=case['x0'],\n            seed=case['seed'],\n            tau=case['tau']\n        )\n        results.append(result)\n\n    # Final print statement in the exact required format.\n    print(f\"[{','.join(map(str, results))}]\")\n\nsolve()\n```", "id": "2993620"}]}