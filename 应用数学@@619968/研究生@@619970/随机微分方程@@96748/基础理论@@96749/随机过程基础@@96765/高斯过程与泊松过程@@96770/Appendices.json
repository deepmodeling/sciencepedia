{"hands_on_practices": [{"introduction": "本练习将探讨高斯过程的基石——布朗运动的一个基本性质。我们将运用强大的反射原理，推导布朗运动路径上运行最大值的分布，这一结果在金融和物理学中都有应用。[@problem_id:2978015]该实践旨在通过优美的对称性论证，加强对随机过程路径性质的推理能力。", "problem": "设 $\\{W_{t}\\}_{t \\ge 0}$ 是一个标准布朗运动，即一个零均值高斯过程，其具有连续路径、平稳独立增量，且满足 $W_{0} = 0$ 和方差 $\\mathrm{Var}(W_{t}) = t$。对于一个固定的时间域 $T > 0$，定义运行最大值 $M_{T} := \\sup_{0 \\le t \\le T} W_{t}$。请从高斯过程的第一性原理、布朗运动的反射原理以及正态分布的基本性质出发进行推导。\n\na) 使用反射原理，推导出当 $a \\ge 0$ 时 $M_{T}$ 的分布函数，然后计算期望 $\\mathbb{E}[M_{T}]$，结果表示为关于 $T$ 的闭式解。\n\nb) 结合使用反射原理、指数马尔可夫不等式以及高斯随机变量的矩生成函数 (MGF)，推导一个对所有 $a \\ge 0$ 成立的，形如 $\\mathbb{P}(M_{T} \\ge a) \\le C \\exp\\!\\big(-a^{2}/(2T)\\big)$ 的非渐近上界。找出你的方法所能得到的最小常数 $C$，并明确地给出作为 $a$ 和 $T$ 的函数的最终界。\n\n将你的最终结果以两个表达式的形式报告：首先是 $\\mathbb{E}[M_{T}]$，其次是你得到的 $\\mathbb{P}(M_{T} \\ge a)$ 的明确尾部上界。不需要进行数值近似。", "solution": "该问题要求解标准布朗运动的运行最大值 $M_{T} = \\sup_{0 \\le t \\le T} W_{t}$ 的性质。我们将依次解决问题的两个部分。\n\na) $M_{T}$ 的分布和期望的推导。\n\n第一步是求出 $M_T$ 的累积分布函数 (CDF)，记为 $F_{M_T}(a) = \\mathbb{P}(M_{T} \\le a)$。对于 $a < 0$ 的情况，由于 $W_0=0$ 且路径是连续的，上确界 $M_T$ 必须是非负的，因此 $\\mathbb{P}(M_T \\le a) = 0$。我们关注 $a \\ge 0$ 的情况。先计算尾部概率 $\\mathbb{P}(M_T > a)$ 会更方便。由于 $M_T$ 是一个连续随机变量，这与 $\\mathbb{P}(M_T \\ge a)$ 是相同的。\n\n对于 $a > 0$，事件 $\\{M_T \\ge a\\}$ 等价于布朗运动在某个时间 $t \\in [0, T]$ 达到水平 $a$ 的事件。设 $\\tau_a = \\inf\\{t \\ge 0 : W_t = a\\}$ 为到达水平 $a$ 的首次到达时间。那么 $\\{M_T \\ge a\\} = \\{\\tau_a \\le T\\}$。\n\n我们使用布朗运动的反射原理。事件 $\\{\\tau_a \\le T\\}$ 可以被划分为两个不相交的事件：$\\{\\tau_a \\le T \\text{ and } W_T \\ge a\\}$ 和 $\\{\\tau_a \\le T \\text{ and } W_T < a\\}$。\n根据路径的连续性，事件 $\\{W_T \\ge a\\}$ 必然要求路径在某一点已经穿过水平 $a$，因此 $\\{W_T \\ge a\\} \\subseteq \\{\\tau_a \\le T\\}$。所以，第一个事件就是 $\\{W_T \\ge a\\}$。\n因此，我们有：\n$$\n\\mathbb{P}(M_T \\ge a) = \\mathbb{P}(\\tau_a \\le T) = \\mathbb{P}(W_T \\ge a) + \\mathbb{P}(\\tau_a \\le T, W_T < a)\n$$\n反射原理指出，在到达水平 $a$ 的条件下，由于其增量的对称性，过程最终停在 $a$ 之上或之下的可能性是相等的。更正式地说，根据在时间 $\\tau_a$ 的强马尔可夫性，过程 $W'_{s} = W_{\\tau_a+s} - W_{\\tau_a}$ 是一个标准的布朗运动，且独立于 $\\tau_a$ 前的 $\\sigma$-代数。由于 $W'_{s}$ 关于0对称，对于任意时间 $u > 0$，有 $\\mathbb{P}(W'_{u} < 0) = \\mathbb{P}(W'_{u} > 0) = 1/2$。将此应用于我们的问题：\n$$\n\\mathbb{P}(\\tau_a \\le T, W_T < a) = \\mathbb{P}(\\tau_a \\le T, W_T - W_{\\tau_a} < 0)\n$$\n根据从 $\\tau_a$ 开始的过程增量的对称性：\n$$\n\\mathbb{P}(\\tau_a \\le T, W_T - W_{\\tau_a} < 0) = \\mathbb{P}(\\tau_a \\le T, W_T - W_{\\tau_a} > 0) = \\mathbb{P}(\\tau_a \\le T, W_T > a)\n$$\n如前所述，$\\{W_T > a\\}$ 蕴含 $\\{\\tau_a \\le T\\}$，因此事件 $\\{\\tau_a \\le T, W_T > a\\}$ 与 $\\{W_T > a\\}$ 相同。于是，\n$$\n\\mathbb{P}(\\tau_a \\le T, W_T < a) = \\mathbb{P}(W_T > a)\n$$\n将其代回，并利用对于连续随机变量 $W_T$ 有 $\\mathbb{P}(W_T=a)=0$ 这一性质，我们得到：\n$$\n\\mathbb{P}(M_T \\ge a) = \\mathbb{P}(W_T \\ge a) + \\mathbb{P}(W_T > a) = 2 \\mathbb{P}(W_T \\ge a)\n$$\n这个结果对 $a > 0$ 成立。对于 $a=0$，$\\mathbb{P}(M_T \\ge 0)=1$ 且 $2\\mathbb{P}(W_T \\ge 0) = 2(1/2) = 1$，所以该公式对所有 $a \\ge 0$ 都成立。\n\n一个标准布朗运动 $W_t$ 是一个高斯过程，其中 $W_T \\sim \\mathcal{N}(0, T)$。设 $Z \\sim \\mathcal{N}(0, 1)$ 是一个标准正态随机变量。那么 $W_T$ 与 $\\sqrt{T}Z$ 同分布。\n$$\n\\mathbb{P}(W_T \\ge a) = \\mathbb{P}(\\sqrt{T}Z \\ge a) = \\mathbb{P}(Z \\ge a/\\sqrt{T}) = 1 - \\Phi(a/\\sqrt{T})\n$$\n其中 $\\Phi(\\cdot)$ 是标准正态分布的累积分布函数。\n因此 $M_T$ 的尾部概率为：\n$$\n\\mathbb{P}(M_T \\ge a) = 2(1 - \\Phi(a/\\sqrt{T})) \\quad \\text{for } a \\ge 0\n$$\n$M_T$ 的累积分布函数是 $F_{M_T}(a) = \\mathbb{P}(M_T \\le a) = 1 - \\mathbb{P}(M_T > a) = 1 - \\mathbb{P}(M_T \\ge a)$。\n$$\nF_{M_T}(a) = 1 - 2(1 - \\Phi(a/\\sqrt{T})) = 2\\Phi(a/\\sqrt{T}) - 1, \\quad \\text{for } a \\ge 0\n$$\n为计算期望 $\\mathbb{E}[M_T]$，我们首先通过对 $a>0$ 时的CDF求导来找到概率密度函数 (PDF) $f_{M_T}(a)$。设 $\\phi(\\cdot)$ 为标准正态分布的PDF。\n$$\nf_{M_T}(a) = \\frac{d}{da} F_{M_T}(a) = \\frac{d}{da} (2\\Phi(a/\\sqrt{T}) - 1) = 2\\phi(a/\\sqrt{T}) \\cdot \\frac{1}{\\sqrt{T}}\n$$\n代入 $\\phi(z) = \\frac{1}{\\sqrt{2\\pi}}\\exp(-z^2/2)$ 的表达式：\n$$\nf_{M_T}(a) = \\frac{2}{\\sqrt{T}} \\frac{1}{\\sqrt{2\\pi}} \\exp\\left(-\\frac{(a/\\sqrt{T})^2}{2}\\right) = \\frac{2}{\\sqrt{2\\pi T}} \\exp\\left(-\\frac{a^2}{2T}\\right), \\quad \\text{for } a \\ge 0\n$$\n且当 $a < 0$ 时 $f_{M_T}(a)=0$。这是一个折叠正态分布的PDF。\n期望通过在其支撑集上对 $a \\cdot f_{M_T}(a)$ 进行积分来计算：\n$$\n\\mathbb{E}[M_T] = \\int_0^\\infty a f_{M_T}(a) da = \\int_0^\\infty a \\frac{2}{\\sqrt{2\\pi T}} \\exp\\left(-\\frac{a^2}{2T}\\right) da\n$$\n我们进行换元。设 $u = a^2/(2T)$。则 $du = (2a)/(2T) da = a/T da$，这意味着 $a da = T du$。积分限仍然是 $0$ 和 $\\infty$。\n$$\n\\mathbb{E}[M_T] = \\frac{2}{\\sqrt{2\\pi T}} \\int_0^\\infty \\exp(-u) (T du) = \\frac{2T}{\\sqrt{2\\pi T}} \\int_0^\\infty \\exp(-u) du\n$$\n积分 $\\int_0^\\infty \\exp(-u) du$ 是伽马函数 $\\Gamma(1)$，其值等于 $1$。\n$$\n\\mathbb{E}[M_T] = \\frac{2T}{\\sqrt{2\\pi T}} = \\frac{2\\sqrt{T}}{\\sqrt{2\\pi}} = \\sqrt{\\frac{4T}{2\\pi}} = \\sqrt{\\frac{2T}{\\pi}}\n$$\n\nb) $M_T$ 尾部界的推导。\n\n题目要求我们推导一个形如 $C \\exp(-a^{2}/(2T))$ 的 $\\mathbb{P}(M_{T} \\ge a)$ 的上界，其中 $C$ 是某个常数。推导必须使用反射原理、指数马尔可夫不等式和高斯随机变量的MGF。\n\n根据(a)部分，反射原理给出了对 $a \\ge 0$ 的精确恒等式：\n$$\n\\mathbb{P}(M_T \\ge a) = 2\\mathbb{P}(W_T \\ge a)\n$$\n现在我们使用指定的工具来推导高斯尾部概率 $\\mathbb{P}(W_T \\ge a)$ 的一个上界。\n指数马尔可夫不等式（也称为切尔诺夫界）指出，对于一个随机变量 $X$，任意 $a \\in \\mathbb{R}$ 和任意 $\\lambda > 0$：\n$$\n\\mathbb{P}(X \\ge a) = \\mathbb{P}(\\exp(\\lambda X) \\ge \\exp(\\lambda a)) \\le \\frac{\\mathbb{E}[\\exp(\\lambda X)]}{\\exp(\\lambda a)} = \\exp(-\\lambda a) \\mathbb{E}[\\exp(\\lambda X)]\n$$\n我们将此应用于 $X = W_T$。随机变量 $W_T$ 服从正态分布 $\\mathcal{N}(0, T)$。一个一般的高斯变量 $Y \\sim \\mathcal{N}(\\mu, \\sigma^2)$ 的矩生成函数 (MGF) 是 $M_Y(\\lambda) = \\mathbb{E}[\\exp(\\lambda Y)] = \\exp(\\mu\\lambda + \\frac{1}{2}\\sigma^2\\lambda^2)$。对于 $W_T$，我们有 $\\mu=0$ 和 $\\sigma^2=T$，所以其MGF是：\n$$\n\\mathbb{E}[\\exp(\\lambda W_T)] = \\exp\\left(\\frac{1}{2}T\\lambda^2\\right)\n$$\n将MGF代入 $W_T$ 的切尔诺夫界：\n$$\n\\mathbb{P}(W_T \\ge a) \\le \\exp(-\\lambda a) \\exp\\left(\\frac{1}{2}T\\lambda^2\\right) = \\exp\\left(-\\lambda a + \\frac{1}{2}T\\lambda^2\\right)\n$$\n这个不等式对任何 $\\lambda > 0$ 都成立。为了从该方法中获得最紧的上界，我们对指数中的表达式关于 $\\lambda$ 进行最小化。设 $g(\\lambda) = -\\lambda a + \\frac{1}{2}T\\lambda^2$。通过将其导数设为零来找到最小值：\n$$\ng'(\\lambda) = -a + T\\lambda = 0 \\implies \\lambda = \\frac{a}{T}\n$$\n由于问题是针对 $a \\ge 0$ 的，我们有 $\\lambda \\ge 0$。我们需要 $\\lambda > 0$，因此这个选择对 $a > 0$ 是有效的。\n将这个最优的 $\\lambda$ 值代回界中：\n$$\n\\mathbb{P}(W_T \\ge a) \\le \\exp\\left(-\\left(\\frac{a}{T}\\right)a + \\frac{1}{2}T\\left(\\frac{a}{T}\\right)^2\\right) = \\exp\\left(-\\frac{a^2}{T} + \\frac{a^2}{2T}\\right) = \\exp\\left(-\\frac{a^2}{2T}\\right)\n$$\n这就为高斯变量 $W_T$ 的尾部提供了所期望的指数界。\n\n最后，我们将此结果与来自反射原理的恒等式结合起来：\n$$\n\\mathbb{P}(M_T \\ge a) = 2 \\mathbb{P}(W_T \\ge a) \\le 2 \\exp\\left(-\\frac{a^2}{2T}\\right)\n$$\n这个界的形式为 $\\mathbb{P}(M_{T} \\ge a) \\le C \\exp(-a^{2}/(2T))$。所述方法（反射原理后跟对得到的高斯尾部应用切尔诺夫界）直接得到常数 $C=2$。这是此特定推导所能产生的最小常数。所得上界对所有 $a \\ge 0$ 有效。\n最终的明确界是 $\\mathbb{P}(M_T \\ge a) \\le 2 \\exp(-a^2/(2T))$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\sqrt{\\frac{2T}{\\pi}} & \\mathbb{P}(M_{T} \\ge a) \\le 2 \\exp\\left(-\\frac{a^{2}}{2T}\\right)\n\\end{pmatrix}\n}\n$$", "id": "2978015"}, {"introduction": "从非平稳的布朗运动出发，本练习将聚焦于 Ornstein-Uhlenbeck 过程，它是平稳高斯过程的一个关键范例。您将把时域描述（自协方差）与频域描述（谱密度）联系起来，这是信号处理和统计力学中的一个核心概念。[@problem_id:2978037]该练习展示了随机微分方程如何定义过程的特性，并揭示了傅里叶分析在研究平稳过程中的威力。", "problem": "设 $\\{X_{t}\\}_{t \\in \\mathbb{R}}$ 为 Ornstein–Uhlenbeck (OU) 过程，定义为线性随机微分方程 (SDE) 的唯一严格平稳解\n$$\n\\mathrm{d}X_{t} \\;=\\; -\\beta\\, X_{t}\\,\\mathrm{d}t \\;+\\; \\sqrt{2\\gamma}\\,\\mathrm{d}W_{t},\n$$\n其中 $\\beta > 0$，$\\gamma > 0$，并且 $\\{W_{t}\\}_{t \\in \\mathbb{R}}$ 是一个标准布朗运动（也称为维纳过程）。考虑零均值平稳高斯过程 $\\{X_{t}\\}_{t \\in \\mathbb{R}}$，其自协方差函数为\n$$\nK(\\tau) \\;=\\; \\mathbb{E}\\!\\left[X_{t}\\,X_{t+\\tau}\\right], \\quad \\tau \\in \\mathbb{R}.\n$$\n零均值平稳过程的谱密度 $S(\\omega)$ 由傅里叶反演关系定义\n$$\nK(\\tau) \\;=\\; \\int_{\\mathbb{R}} \\exp\\!\\big(i\\,\\omega\\,\\tau\\big)\\; S(\\omega)\\,\\mathrm{d}\\omega,\n$$\n其中 $i$ 是虚数单位，$\\omega \\in \\mathbb{R}$ 是角频率。\n\n从该 SDE 出发，并将 $\\xi(t) = \\sqrt{2\\gamma}\\,\\frac{\\mathrm{d}W_{t}}{\\mathrm{d}t}$ 解释为协方差为 $\\mathbb{E}[\\xi(t)\\,\\xi(s)] = 2\\gamma\\,\\delta(t-s)$ 的高斯白噪声，其中 $\\delta(\\cdot)$ 是狄拉克 $\\delta$ 分布，推导出 OU 过程在上述傅里叶约定下的谱密度 $S(\\omega)$。然后，直接从 SDE 的平稳解计算 $K(\\tau)$，并明确验证\n$$\nK(\\tau) \\;=\\; \\int_{\\mathbb{R}} \\exp\\!\\big(i\\,\\omega\\,\\tau\\big)\\; S(\\omega)\\,\\mathrm{d}\\omega.\n$$\n你的最终答案必须是 $S(\\omega)$ 作为 $\\omega$、$\\beta$ 和 $\\gamma$ 的函数的闭式解析表达式。不需要数值近似。", "solution": "问题要求我们完成三项任务：\n1.  推导 OU 过程的谱密度 $S(\\omega)$。\n2.  从 SDE 的平稳解推导自协方差函数 $K(\\tau)$。\n3.  验证 $S(\\omega)$ 的傅里叶积分得出 $K(\\tau)$。\n\n**1. 谱密度 $S(\\omega)$ 的推导**\n\n我们从 SDE 开始，使用白噪声过程 $\\xi(t)$ 将其写成 Langevin 形式：\n$$\n\\frac{\\mathrm{d}X_{t}}{\\mathrm{d}t} \\;+\\; \\beta X_{t} \\;=\\; \\xi(t)\n$$\n其中 $\\xi(t) = \\sqrt{2\\gamma}\\,\\frac{\\mathrm{d}W_{t}}{\\mathrm{d}t}$。这是一个线性时不变 (LTI) 系统，输入为 $\\xi(t)$，输出为 $X_t$。输出的谱密度 $S_X(\\omega)$ 可以通过系统的传递函数与输入的谱密度 $S_\\xi(\\omega)$ 相关联。\n\n问题通过关系式 $K(\\tau) = \\int_{\\mathbb{R}} \\exp(i\\omega\\tau) S(\\omega) \\mathrm{d}\\omega$ 定义谱密度 $S(\\omega)$。这对应于傅里叶逆变换。因此，傅里叶正变换为：\n$$\nS(\\omega) = \\frac{1}{2\\pi} \\int_{\\mathbb{R}} K(\\tau) \\exp(-i\\omega\\tau) \\mathrm{d}\\tau\n$$\n这种关系是 Wiener-Khinchin 定理的一种表述。\n\n首先，我们求出输入白噪声的谱密度 $S_\\xi(\\omega)$。我们已知其自协方差函数：\n$$\nK_\\xi(\\tau) = \\mathbb{E}[\\xi(t)\\xi(t+\\tau)] = \\mathbb{E}[\\xi(0)\\xi(\\tau)] = 2\\gamma\\,\\delta(\\tau)\n$$\n使用谱密度的傅里叶变换定义：\n$$\nS_\\xi(\\omega) = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} K_\\xi(\\tau) \\exp(-i\\omega\\tau) \\mathrm{d}\\tau = \\frac{1}{2\\pi} \\int_{-\\infty}^{\\infty} 2\\gamma\\,\\delta(\\tau) \\exp(-i\\omega\\tau) \\mathrm{d}\\tau = \\frac{2\\gamma}{2\\pi} \\exp(-i\\omega \\cdot 0) = \\frac{\\gamma}{\\pi}\n$$\n白噪声输入的谱密度是一个常数，$\\frac{\\gamma}{\\pi}$。\n\n接下来，我们求 LTI 系统的传递函数 $H(\\omega)$。对 Langevin 方程进行傅里叶变换（其中 $\\mathcal{F}\\{f(t)\\} = \\hat{f}(\\omega)$）：\n$$\n\\mathcal{F}\\left\\{\\frac{\\mathrm{d}X_{t}}{\\mathrm{d}t}\\right\\} + \\beta\\,\\mathcal{F}\\{X_t\\} = \\mathcal{F}\\{\\xi(t)\\}\n$$\n$$\ni\\omega \\hat{X}(\\omega) + \\beta \\hat{X}(\\omega) = \\hat{\\xi}(\\omega)\n$$\n$$\n\\hat{X}(\\omega) = \\frac{1}{\\beta + i\\omega} \\hat{\\xi}(\\omega)\n$$\n传递函数为 $H(\\omega) = \\frac{\\hat{X}(\\omega)}{\\hat{\\xi}(\\omega)} = \\frac{1}{\\beta + i\\omega}$。\n\n对于 LTI 系统，输入和输出谱密度之间的关系是 $S_X(\\omega) = |H(\\omega)|^2 S_\\xi(\\omega)$。让我们计算 $|H(\\omega)|^2$：\n$$\n|H(\\omega)|^2 = \\left|\\frac{1}{\\beta + i\\omega}\\right|^2 = \\frac{1}{(\\beta + i\\omega)(\\beta - i\\omega)} = \\frac{1}{\\beta^2 + \\omega^2}\n$$\n现在，我们可以求出 OU 过程的谱密度，我们将其记为 $S(\\omega)$：\n$$\nS(\\omega) = |H(\\omega)|^2 S_\\xi(\\omega) = \\frac{1}{\\beta^2 + \\omega^2} \\cdot \\frac{\\gamma}{\\pi} = \\frac{\\gamma}{\\pi(\\beta^2 + \\omega^2)}\n$$\n\n**2. 自协方差函数 $K(\\tau)$ 的推导**\n\nOU 过程是 SDE 的平稳解。通过对 SDE 从 $-\\infty$ 到 $t$ 进行形式上的积分，该解可以表示为 Itô 积分：\n$$\nX_t = \\sqrt{2\\gamma} \\int_{-\\infty}^{t} \\exp(-\\beta(t-u)) \\mathrm{d}W_u\n$$\n这将 $X_t$ 表示为 Wiener 过程历史的加权积分。作为高斯过程的线性泛函，$X_t$ 本身也是一个高斯过程。其均值为 $\\mathbb{E}[X_t] = 0$，因为具有确定性被积函数的 Itô 积分的期望值为零。\n\n现在我们计算自协方差 $K(\\tau) = \\mathbb{E}[X_t X_{t+\\tau}]$。不失一般性，我们假设 $\\tau \\geq 0$。\n$$\nK(\\tau) = \\mathbb{E}\\left[ \\left(\\sqrt{2\\gamma} \\int_{-\\infty}^{t} e^{-\\beta(t-u)} \\mathrm{d}W_u\\right) \\left(\\sqrt{2\\gamma} \\int_{-\\infty}^{t+\\tau} e^{-\\beta(t+\\tau-v)} \\mathrm{d}W_v\\right) \\right]\n$$\n$$\nK(\\tau) = 2\\gamma\\, \\mathbb{E}\\left[ \\left(\\int_{-\\infty}^{t} e^{-\\beta(t-u)} \\mathrm{d}W_u\\right) \\left(\\int_{-\\infty}^{t+\\tau} e^{-\\beta(t+\\tau-v)} \\mathrm{d}W_v\\right) \\right]\n$$\n使用 Itô 等距性质，$\\mathbb{E}[(\\int f(s)\\mathrm{d}W_s)(\\int g(s)\\mathrm{d}W_s)] = \\int f(s)g(s)\\mathrm{d}s$，我们有：\n$$\nK(\\tau) = 2\\gamma \\int_{-\\infty}^{\\min(t, t+\\tau)} e^{-\\beta(t-u)} e^{-\\beta(t+\\tau-u)} \\mathrm{d}u\n$$\n由于 $\\tau \\geq 0$，$\\min(t, t+\\tau) = t$。积分变为：\n$$\nK(\\tau) = 2\\gamma \\int_{-\\infty}^{t} e^{-2\\beta t - \\beta\\tau + 2\\beta u} \\mathrm{d}u = 2\\gamma e^{-2\\beta t - \\beta\\tau} \\int_{-\\infty}^{t} e^{2\\beta u} \\mathrm{d}u\n$$\n$$\nK(\\tau) = 2\\gamma e^{-2\\beta t - \\beta\\tau} \\left[ \\frac{1}{2\\beta} e^{2\\beta u} \\right]_{u=-\\infty}^{u=t} = 2\\gamma e^{-2\\beta t - \\beta\\tau} \\left( \\frac{1}{2\\beta} e^{2\\beta t} - 0 \\right)\n$$\n$$\nK(\\tau) = \\frac{\\gamma}{\\beta} e^{-2\\beta t - \\beta\\tau + 2\\beta t} = \\frac{\\gamma}{\\beta} e^{-\\beta\\tau} \\quad (\\text{对于 } \\tau \\geq 0)\n$$\n根据平稳性，$K(\\tau) = K(-\\tau)$。对于 $\\tau < 0$，我们有 $K(\\tau) = \\frac{\\gamma}{\\beta} e^{-\\beta(-\\tau)} = \\frac{\\gamma}{\\beta} e^{\\beta\\tau}$。\n综合两种情况，我们可以使用绝对值来写出自协方差函数：\n$$\nK(\\tau) = \\frac{\\gamma}{\\beta} \\exp(-\\beta|\\tau|)\n$$\n\n**3. 傅里叶关系的验证**\n\n最后，我们必须验证 $K(\\tau) = \\int_{\\mathbb{R}} \\exp(i\\omega\\tau) S(\\omega) \\mathrm{d}\\omega$。我们代入推导出的 $S(\\omega)$ 和 $K(\\tau)$ 的表达式。需要计算以下积分：\n$$\nI = \\int_{-\\infty}^{\\infty} e^{i\\omega\\tau} S(\\omega) \\mathrm{d}\\omega = \\int_{-\\infty}^{\\infty} e^{i\\omega\\tau} \\frac{\\gamma}{\\pi(\\beta^2 + \\omega^2)} \\mathrm{d}\\omega = \\frac{\\gamma}{\\pi} \\int_{-\\infty}^{\\infty} \\frac{e^{i\\omega\\tau}}{\\beta^2 + \\omega^2} \\mathrm{d}\\omega\n$$\n该积分可以使用复分析中的留数定理来计算。被积函数在 $\\omega = \\pm i\\beta$ 处有简单极点。\n\n情况 1：$\\tau > 0$。我们在上半平面闭合积分围道，当 $|\\omega| \\to \\infty$ 时，因子 $e^{i\\omega\\tau}$ 在上半平面衰减为零。此围道内唯一的极点在 $\\omega = +i\\beta$。\n$$\nI = \\frac{\\gamma}{\\pi} \\left( 2\\pi i \\cdot \\text{Res}_{\\omega=i\\beta}\\left[ \\frac{e^{i\\omega\\tau}}{(\\omega-i\\beta)(\\omega+i\\beta)} \\right] \\right)\n$$\n留数为：\n$$\n\\text{Res}_{\\omega=i\\beta} = \\lim_{\\omega \\to i\\beta} (\\omega - i\\beta) \\frac{e^{i\\omega\\tau}}{(\\omega-i\\beta)(\\omega+i\\beta)} = \\frac{e^{i(i\\beta)\\tau}}{i\\beta + i\\beta} = \\frac{e^{-\\beta\\tau}}{2i\\beta}\n$$\n将留数代回积分表达式：\n$$\nI = \\frac{\\gamma}{\\pi} \\left( 2\\pi i \\cdot \\frac{e^{-\\beta\\tau}}{2i\\beta} \\right) = \\frac{\\gamma}{\\beta} e^{-\\beta\\tau}\n$$\n这与我们对 $\\tau > 0$ 时的 $K(\\tau)$ 表达式相匹配。\n\n情况 2：$\\tau < 0$。我们在下半平面闭合围道。围道是沿顺时针方向遍历的，所以我们乘以 $-2\\pi i$。此围道内唯一的极点在 $\\omega = -i\\beta$。\n$$\nI = \\frac{\\gamma}{\\pi} \\left( -2\\pi i \\cdot \\text{Res}_{\\omega=-i\\beta}\\left[ \\frac{e^{i\\omega\\tau}}{(\\omega-i\\beta)(\\omega+i\\beta)} \\right] \\right)\n$$\n留数为：\n$$\n\\text{Res}_{\\omega=-i\\beta} = \\lim_{\\omega \\to -i\\beta} (\\omega + i\\beta) \\frac{e^{i\\omega\\tau}}{(\\omega-i\\beta)(\\omega+i\\beta)} = \\frac{e^{i(-i\\beta)\\tau}}{-i\\beta - i\\beta} = \\frac{e^{\\beta\\tau}}{-2i\\beta}\n$$\n将留数代回：\n$$\nI = \\frac{\\gamma}{\\pi} \\left( -2\\pi i \\cdot \\frac{e^{\\beta\\tau}}{-2i\\beta} \\right) = \\frac{\\gamma}{\\beta} e^{\\beta\\tau}\n$$\n这与我们对 $\\tau < 0$ 时的 $K(\\tau)$ 表达式相匹配。\n\n综合两种情况，该积分确实等于 $\\frac{\\gamma}{\\beta} \\exp(-\\beta|\\tau|)$，也就是 $K(\\tau)$。验证完成。所推导的谱密度 $S(\\omega)$ 表达式是正确的。", "answer": "$$\n\\boxed{\\frac{\\gamma}{\\pi(\\beta^2 + \\omega^2)}}\n$$", "id": "2978037"}, {"introduction": "作为对解析推导的补充，这个动手实践将通过编写代码，通过模拟将泊松过程付诸实践。通过实现一个基于指数分布的到达间隔时间的算法，您将对这一基本计数过程的演变建立具体的理解。[@problem_id:2978061]该练习连接了理论与实践，培养了算法思维、复杂度分析和随机模型经验验证的技能。", "problem": "设计并实现一个程序，该程序使用指数分布的到达间隔时间来模拟区间 $[0,T]$ 上的齐次泊松过程。你的设计必须基于随机过程的第一性原理，并从泊松过程和指数分布的核心定义出发进行明确推理，不得引用任何未经论证的公式。然后，根据算法产生的随机到达次数及其期望值（作为速率参数的函数），分析你的模拟算法的计算复杂度。最后，通过一种非参数差异度量来验证模拟出的到达间隔时间的某个分布特性。\n\n具体要求：\n\n1. 基本原理与算法设计\n   - 从速率为 $\\lambda$ 的齐次泊松过程的定义属性出发：该过程具有独立平稳增量，任何长度为 $t$ 的区间中的事件数是服从泊松分布的随机变量（这等价于可以从独立增量属性和微小区间特征推导得出），并且到达间隔时间是参数为 $\\lambda$ 的独立同分布的指数随机变量。利用指数分布的无记忆性来论证顺序模拟到达间隔时间的合理性。\n   - 构建一个算法，该算法抽取参数为 $\\lambda$ 的独立指数到达间隔时间，并累加它们，直到运行总和首次超过 $T$。算法必须返回所有位于 $[0,T]$ 区间内的到达时间的列表。对于 $\\lambda \\le 0$ 或 $T \\le 0$ 的情况，算法必须返回一个空列表。\n\n2. 计算复杂度核算\n   - 定义成本模型，其中生成一个指数随机变量的单位成本为1。令 $N_T$ 表示在 $[0,T]$ 区间内的到达次数，令 $D_T$ 表示你的算法在单次运行中抽取的指数变量的数量。对于 $\\lambda>0$ 和 $T>0$ 的情况，用实现的 $N_T$ 来表示 $D_T$；并根据你的实现选择，为边界情况 $\\lambda \\le 0$ 或 $T \\le 0$ 约定并指定 $D_T$ 的值。利用期望的线性性质和 $N_T$ 的标准期望，推导出对于 $\\lambda>0$ 和 $T>0$ 的情况，期望成本 $\\mathbb{E}[D_T]$ 作为 $\\lambda$ 和 $T$ 的函数。\n\n3. 到达间隔定律的验证统计量\n   - 令模拟的到达间隔时间为 $X_1,\\dots,X_n$，其中 $n=N_T$。定义经验单样本 Kolmogorov–Smirnov 差异\n     $$D_n \\equiv \\sup_{x \\in \\mathbb{R}} \\left| F_n(x) - F(x) \\right|,$$\n     其中 $F_n$ 是 $\\{X_i\\}$ 的经验分布函数，而 $F(x) = 1 - e^{-\\lambda x}$ 是指数累积分布函数。使用 $F_n$ 和 $F$ 的定义，从第一性原理出发实现 $D_n$ 的计算。如果 $n=0$，按惯例设 $D_n=0$。\n\n4. 实现约束\n   - 使用固定种子 $123456789$ 的伪随机数生成器，以确保模拟输出的可复现性。在单次程序运行中，不同测试用例之间应使用独立的随机数抽取。\n   - 所有实数值输出均使用浮点运算。如果没有到达事件，则将最后到達時間定义为 $0$。\n\n5. 测试套件\n   - 对以下参数对 $(\\lambda,T)$ 运行你的程序：\n     - 情况 1：$\\lambda = 3.5$, $T = 2.0$。\n     - 情况 2：$\\lambda = 0.0$, $T = 5.0$。\n     - 情况 3：$\\lambda = 10.0$, $T = 0.0$。\n     - 情况 4：$\\lambda = 50.0$, $T = 0.1$。\n     - 情况 5：$\\lambda = 0.2$, $T = 100.0$。\n   - 对于每种情况，按顺序生成一个包含以下五个条目的列表：\n     - 实现的到达次数 $N_T$ (一个整数)。\n     - 在单位成本模型下，你的算法所使用的指数随机数抽取次数 $D_T$ (一个整数)。\n     - 经验到达间隔分布与参数为 $\\lambda$ 的指数累积分布函数之间的 Kolmogorov–Smirnov 差异 $D_n$ (一个浮点数)。\n     - $[0,T]$ 区间内的最后到达时间，若无到达则为 $0$ (一个浮点数)。\n     - 理论上的期望到达次数 $\\lambda T$ (一个浮点数)。\n   - 因此，整个程序的输出是一个包含五个此类列表的列表，每个测试用例对应一个。\n\n6. 输出格式\n   - 你的程序应生成单行输出，其中包含一个用方括号括起来的、以逗号分隔的列表，列表内不含空格。每个测试用例的结果本身也是一个用方括号括起来的、以逗号分隔的列表，且不含空格。例如，如果有两个测试用例的结果分别为 $[1,2,0.0,0.1,3.14]$ 和 $[0,0,0.0,0.0,0.0]$，则输出行应为：\n     [[1,2,0.0,0.1,3.14],[0,0,0.0,0.0,0.0]]\n\n本问题中的所有数值量均应视为无单位的实数；不涉及任何物理单位或角度。最终输出必须严格遵循上述单行格式。", "solution": "按照要求，解决方案分为三个部分：理论基础与算法设计、计算复杂度分析，以及验证统计量的实现。\n\n**1. 理论基础与算法设计**\n\n齐次泊松过程，记为 $\\{N_t\\}_{t \\ge 0}$，是一个计数过程，用于模拟截至时间 $t$ 发生的事件数量。对于一个具有常数速率 $\\lambda > 0$ 的过程，它由以下性质定义：\n1.  过程从零个事件开始：$N_0 = 0$。\n2.  增量是独立的：对于任何时间序列 $0 \\le t_1 < t_2 < \\dots < t_k$，表示在不相交区间内事件数量的随机变量 $N_{t_2}-N_{t_1}, N_{t_3}-N_{t_2}, \\dots, N_{t_k}-N_{t_{k-1}}$ 是相互独立的。\n3.  增量是平稳的：任何区间内事件数量的分布 $N_{t+s} - N_s$ 仅取决于区间的长度 $t$，而不取决于其起始点 $s$。\n\n从这些公理可以推导出，任何长度为 $t$ 的区间内的事件数量遵循均值为 $\\lambda t$ 的泊松分布，即 $\\mathbb{P}(N_t=k) = \\frac{(\\lambda t)^k e^{-\\lambda t}}{k!}$，其中 $k \\in \\{0, 1, 2, \\dots\\}$。\n\n泊松过程的一个等价且有力的刻画是通过其到达间隔时间。设 $S_k$ 为第 $k$ 个事件的发生时间，其中 $S_0 = 0$。到达间隔时间定义为 $X_k = S_k - S_{k-1}$（对于 $k \\ge 1$）。随机过程理论中的一个基础性结果指出，对于速率为 $\\lambda$ 的齐次泊松过程，其到达间隔时间 $\\{X_k\\}_{k \\ge 1}$ 是服从速率参数为 $\\lambda$ 的指数分布的独立同分布 (i.i.d.) 随机变量。该分布的概率密度函数 (PDF) 为 $f(x) = \\lambda e^{-\\lambda x}$（对于 $x \\ge 0$），累积分布函数 (CDF) 为 $F(x) = 1 - e^{-\\lambda x}$（对于 $x \\ge 0$）。\n\n这种等价性为模拟过程的事件时间提供了一种直接方法。我们可以生成一系列 i.i.d. 的指数随机变量，它们代表连续事件之间的时间。指数分布的无记忆性在此是基础性的：对于 $s,t > 0$，有 $\\mathbb{P}(X > t+s | X > s) = \\mathbb{P}(X > t)$。这意味着等待下一个事件的时间与已经等待了多长时间无关，这与泊松过程的独立增量性质相符。\n\n用于在区间 $[0, T]$ 上生成到达时间的模拟算法如下：\n1.  初始化当前时间 $t_{\\text{current}} = 0$ 和一个空的到达时间列表 `arrivals`。\n2.  处理边界情况：如果速率 $\\lambda \\le 0$ 或时间范围 $T \\le 0$，则不会有事件发生。过程是空的，因此我们返回一个空列表。\n3.  对于 $\\lambda > 0$ 和 $T > 0$ 的情况，进入一个顺序生成循环：\n    a. 从参数为 $\\lambda$ 的指数分布中抽取一个随机变量 $\\Delta t$。一种标准方法是逆变换采样：如果 $U$ 是 $(0,1)$ 上的均匀随机变量，则 $\\Delta t = - \\frac{1}{\\lambda} \\ln(U)$ 是一个指数($\\lambda$)变量。\n    b. 更新下一个潜在事件的时间：$t_{\\text{next}} = t_{\\text{current}} + \\Delta t$。\n    c. 如果 $t_{\\text{next}} > T$，则下一个事件发生在观察窗口之外。对于区间 $[0, T]$ 的模拟完成。我们终止循环。\n    d. 如果 $t_{\\text{next}} \\le T$，则事件在区间内。我们通过将 $t_{\\text{next}}$ 添加到我们的到达时间列表中来记录此事件，并更新当前时间：$t_{\\text{current}} = t_{\\text{next}}$。然后，我们继续循环以生成下一个到达间隔时间。\n4.  最终输出是所有记录的到达时间的列表。\n\n**2. 计算复杂度核算**\n\n我们根据生成的随机变量数量来定义计算成本。设从指数分布中进行一次抽取的单位成本为 $1$。\n\n令 $N_T$ 为区间 $[0, T]$ 内到达次数的随机变量。令 $D_T$ 为算法抽取的指数变量总数的随机变量。\n\n对于一般情况 $\\lambda > 0$ 和 $T > 0$：\n算法生成到达间隔时间 $X_1, X_2, \\dots$，并在累积和首次超过 $T$ 时停止。到达时间为 $S_k = \\sum_{i=1}^k X_i$。\n如果在 $[0, T]$ 中实现的到达次数为 $N_T = n$，这意味着 $S_n \\le T$ 且 $S_{n+1} > T$。为了确定这一点，算法必须生成到达间隔时间 $X_1, \\dots, X_n, X_{n+1}$。因此，总的抽取次数为 $n+1$。因此，对于给定的实现，成本 $D_T$ 与到达次数 $N_T$ 的关系为：\n$$D_T = N_T + 1$$\n即使在 $N_T=0$ 的情况下，此关系也成立，此时 $S_1 = X_1 > T$。算法执行一次抽取（$D_T=1$）并发现零次到达，满足 $1 = 0 + 1$。\n\n对于边界情况 $\\lambda \\le 0$ 或 $T \\le 0$，算法被设计为立即终止而不抽取任何随机变量。在这些情况下，成本是确定性的：$D_T = 0$。\n\n为了求出在 $\\lambda > 0$ 和 $T > 0$ 时的期望成本 $\\mathbb{E}[D_T]$，我们对关系 $D_T = N_T + 1$ 使用期望的线性性：\n$$\\mathbb{E}[D_T] = \\mathbb{E}[N_T + 1] = \\mathbb{E}[N_T] + \\mathbb{E}[1]$$\n根据齐次泊松过程的定义，随机变量 $N_T$ 服从参数为 $\\lambda T$ 的泊松分布。泊松($\\mu$)随机变量的期望为 $\\mu$。因此，期望到达次数为：\n$$\\mathbb{E}[N_T] = \\lambda T$$\n将此代入期望成本的方程中，得到：\n$$\\mathbb{E}[D_T] = \\lambda T + 1$$\n对于边界情况，由于 $D_T$ 确定为 $0$，期望成本也是 $\\mathbb{E}[D_T] = 0$。\n\n**3. 到达间隔定律的验证统计量**\n\n问题要求使用单样本 Kolmogorov–Smirnov (KS) 差异来验证模拟的到达间隔时间的分布。令对应于 $[0, T]$ 区间内事件的实现到达间隔时间为 $\\{X_1, \\dots, X_n\\}$，其中 $n=N_T$。请注意，最后一次抽取的指数变量 $X_{n+1}$（它导致总时间超过 $T$）不属于这个集合。\n\nKS 差异定义为：\n$$D_n = \\sup_{x \\in \\mathbb{R}} \\left| F_n(x) - F(x) \\right|$$\n此处，$F(x) = 1 - e^{-\\lambda x}$（对于 $x \\ge 0$）是参数为 $\\lambda$ 的指数分布的理论 CDF。$F_n(x)$ 是样本 $\\{X_1, \\dots, X_n\\}$ 的经验分布函数 (EDF)，定义为：\n$$F_n(x) = \\frac{1}{n} \\sum_{i=1}^n \\mathbb{I}(X_i \\le x)$$\n其中 $\\mathbb{I}(\\cdot)$ 是指示函数。如果 $n=0$，我们按惯例定义 $D_n = 0$。\n\n为了在 $n>0$ 时从第一性原理计算 $D_n$，我们首先对观察到的到达间隔时间进行排序得到顺序统计量 $x_{(1)} \\le x_{(2)} \\le \\dots \\le x_{(n)}$。EDF $F_n(x)$ 是一个阶梯函数，在每个 $x_{(i)}$ 处跳跃 $1/n$。由于理论 CDF $F(x)$ 是连续的，绝对差 $|F_n(x) - F(x)|$ 的上确界必然在某个跳跃点 $x_{(i)}$ 处取得。具体来说，我们需要在每个跳跃点之前和之时评估这个差值。这导出了众所周知的计算公式：\n$$D_n = \\max_{i=1, \\dots, n} \\left\\{ \\frac{i}{n} - F(x_{(i)}), F(x_{(i)}) - \\frac{i-1}{n} \\right\\}$$\n实现将计算这 $n$ 个排序后的到达间隔时间上的最大值。对于从 $1$ 到 $n$ 的每个 $i$，我们计算理论 CDF 的值 $F(x_{(i)}) = 1 - e^{-\\lambda x_{(i)}}$，然后计算上述两个差值。这 $2n$ 个值中的最大值就是所求的统计量 $D_n$。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Main function to run the Poisson process simulation for all test cases.\n    \"\"\"\n    test_cases = [\n        # (lambda, T)\n        (3.5, 2.0),\n        (0.0, 5.0),\n        (10.0, 0.0),\n        (50.0, 0.1),\n        (0.2, 100.0),\n    ]\n\n    # Initialize a single random number generator for reproducibility across all cases.\n    rng = np.random.default_rng(123456789)\n    \n    all_results = []\n    for lmbda, T in test_cases:\n        result = simulate_and_analyze(lmbda, T, rng)\n        all_results.append(result)\n\n    # Format the final output string exactly as required.\n    # e.g., [[1,2,0.1,0.2,0.3],[4,5,0.4,0.5,0.6]]\n    output_str = \"[\" + \",\".join(\n        \"[\" + \",\".join(map(str, res)) + \"]\" for res in all_results\n    ) + \"]\"\n    print(output_str)\n\ndef simulate_and_analyze(lmbda, T, rng):\n    \"\"\"\n    Simulates a homogeneous Poisson process and computes required statistics.\n\n    Args:\n        lmbda (float): The rate parameter lambda of the Poisson process.\n        T (float): The time horizon for the simulation interval [0, T].\n        rng (np.random.Generator): The random number generator instance.\n\n    Returns:\n        list: A list containing [N_T, D_T, D_n, last_arrival_time, E_N_T].\n    \"\"\"\n    # Requirement: for lambda = 0 or T = 0, return an empty list of arrivals.\n    # The derived statistics are [0, 0, 0.0, 0.0, lambda*T].\n    if lmbda = 0 or T = 0:\n        expected_arrivals = lmbda * T\n        return [0, 0, 0.0, 0.0, expected_arrivals]\n    \n    # 1. Algorithmic Design: Simulate using exponential interarrivals.\n    arrivals = []\n    inter_arrivals = []\n    current_time = 0.0\n    draw_count = 0\n\n    while True:\n        # NumPy's exponential uses scale parameter beta = 1/lambda.\n        inter_arrival_time = rng.exponential(scale=1.0/lmbda)\n        draw_count += 1\n        current_time += inter_arrival_time\n\n        if current_time  T:\n            # The next arrival is after T, so we stop.\n            break\n        \n        arrivals.append(current_time)\n        inter_arrivals.append(inter_arrival_time)\n\n    # 2. Computational Complexity Accounting\n    N_T = len(arrivals)\n    # D_T is the total number of draws, which is N_T + 1 for the general case.\n    D_T = draw_count\n\n    # 3. Verification Statistic (Kolmogorov-Smirnov)\n    if N_T == 0:\n        D_n = 0.0\n    else:\n        # Calculate D_n from first principles.\n        n = N_T\n        # Sort the interarrival times to get the order statistics.\n        sorted_inter_arrivals = np.sort(inter_arrivals)\n        \n        max_discrepancy = 0.0\n        # Iterate through the sorted interarrivals to find the max discrepancy.\n        for i in range(n):\n            # Using 0-based index i for the i-th point (x_{i+1} in 1-based math)\n            x_i_sorted = sorted_inter_arrivals[i]\n            # Theoretical CDF value at the data point.\n            F_x_i = 1.0 - np.exp(-lmbda * x_i_sorted)\n            \n            # The supremum is found at the jump points. We check the difference\n            # from both sides of the jump.\n            # Using 1-based indexing for formula: D_n = max(i/n - F(x_i), F(x_i) - (i-1)/n)\n            # In 0-based index `i`, this corresponds to:\n            d1 = (i + 1) / n - F_x_i\n            d2 = F_x_i - i / n\n            \n            max_discrepancy = max(max_discrepancy, d1, d2)\n        D_n = max_discrepancy\n\n    # 4. Collect Final Statistics\n    last_arrival_time = arrivals[-1] if N_T  0 else 0.0\n    expected_arrivals = lmbda * T\n\n    return [N_T, D_T, float(D_n), float(last_arrival_time), float(expected_arrivals)]\n\nif __name__ == \"__main__\":\n    solve()\n```", "id": "2978061"}]}