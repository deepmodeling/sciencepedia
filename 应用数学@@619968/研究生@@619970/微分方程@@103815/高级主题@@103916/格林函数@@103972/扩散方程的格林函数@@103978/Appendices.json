{"hands_on_practices": [{"introduction": "格林函数是扩散方程的基本解，描述了单个点源的演化过程。对于无限域上的任意初始条件，其解可以通过将初始分布与格林函数进行卷积得到。这个练习 [@problem_id:1108226] 将通过分析一个物理上直观的场景——两个初始温度不同的区域交界处的温度演化——来让你亲手实践这一强大技术，从而加深对扩散过程的理解。", "problem": "考虑一个一维无限长介质，其温度分布 $T(x,t)$ 遵循一维扩散方程演化：\n$$\n\\frac{\\partial T(x,t)}{\\partial t} = D \\frac{\\partial^2 T(x,t)}{\\partial x^2}\n$$\n其中 $D$ 是介质的恒定热扩散系数。\n\n在时间 $t=0$ 时，介质在原点 $x=0$ 处存在一个急剧的温度不连续性。初始温度分布由一个阶跃函数给出：\n$$\nT(x,0) = \\begin{cases} T_L & \\text{for } x < 0 \\\\ T_R & \\text{for } x > 0 \\end{cases}\n$$\n其中 $T_L$ 和 $T_R$ 是常数，且 $T_R > T_L$。\n\n在无限定义域上，对于给定的初始条件 $T(x',0)$，扩散方程的解可以通过将初始条件与扩散方程的格林函数（或基本解）进行卷积求得：\n$$\nT(x,t) = \\int_{-\\infty}^{\\infty} G(x,t; x',0) T(x',0) dx'\n$$\n其中格林函数为\n$$\nG(x,t; x',0) = \\frac{1}{\\sqrt{4\\pi D t}} \\exp\\left(-\\frac{(x-x')^2}{4Dt}\\right)\n$$\n\n热量根据傅里叶定律流动，该定律指出热通量 $j(x,t)$（单位面积的热能传输率）与温度梯度的负值成正比：\n$$\nj(x,t) = -k \\frac{\\partial T(x,t)}{\\partial x}\n$$\n其中 $k$ 是介质的热导率，也是一个常数。\n\n推导在时间间隔 $t=0$ 到 $t=\\tau$ 内，单位面积上，从右侧 ($x>0$) 穿过界面 $x=0$ 流向左侧 ($x<0$) 的总热能 $Q(\\tau)$ 的表达式。", "solution": "1. 相关方程\n   扩散方程：\n   $$\\frac{\\partial T}{\\partial t}=D\\frac{\\partial^2T}{\\partial x^2}$$  \n   在 $(-\\infty,\\infty)$ 上的卷积解：\n   $$T(x,t)=\\int_{-\\infty}^{\\infty}G(x,t;x',0)\\,T(x',0)\\,dx',\\quad G=\\frac{1}{\\sqrt{4\\pi Dt}}e^{-\\frac{(x-x')^2}{4Dt}}$$  \n   热通量（傅里叶定律）：\n   $$j(x,t)=-k\\frac{\\partial T}{\\partial x}$$  \n   从 $x>0$ 流向 $x<0$ 的单位面积总热量：\n   $$Q(\\tau)=\\int_{0}^{\\tau}[-\\,j(0,t)]\\,dt$$\n\n2. 阶跃初始数据的温度分布\n   在 $x'=0$ 处分割卷积：\n   $$T(x,t)=T_L\\int_{-\\infty}^{0}G\\,dx'+T_R\\int_{0}^{\\infty}G\\,dx'$$  \n   标准高斯积分给出\n   $$T(x,t)=\\frac{T_L+T_R}{2}+\\frac{T_R-T_L}{2}\\erf\\!\\Bigl(\\frac{x}{2\\sqrt{Dt}}\\Bigr)\\,. $$\n\n3. 界面处的温度梯度\n   $$\\frac{\\partial T}{\\partial x}\n     =\\frac{T_R-T_L}{2}\\,\\frac{d}{dx}\\erf\\!\\Bigl(\\frac{x}{2\\sqrt{Dt}}\\Bigr)\n     =\\frac{T_R-T_L}{2}\\,\\frac{1}{\\sqrt{\\pi D t}}\\,\\exp\\!\\Bigl(-\\frac{x^2}{4Dt}\\Bigr)\\,. $$\n   因此在 $x=0$ 处：\n   $$\\frac{\\partial T}{\\partial x}\\Big|_{x=0}\n     =\\frac{T_R-T_L}{2\\sqrt{\\pi D t}}\\,. $$\n\n4. 热通量和积分热量\n   $$j(0,t)=-k\\frac{T_R-T_L}{2\\sqrt{\\pi D t}}\\,,\\qquad\n     Q(\\tau)=\\int_{0}^{\\tau}[-j(0,t)]\\,dt\n     =\\frac{k\\,(T_R-T_L)}{2\\sqrt{\\pi D}}\\int_{0}^{\\tau}t^{-\\frac12}dt$$  \n   计算积分：\n   $$\\int_{0}^{\\tau}t^{-\\frac12}dt=2\\sqrt{\\tau}\\,. $$\n   因此\n   $$Q(\\tau)\n     =\\frac{k\\,(T_R-T_L)}{2\\sqrt{\\pi D}}\\;2\\sqrt{\\tau}\n     =k\\,(T_R-T_L)\\sqrt{\\frac{\\tau}{\\pi D}}\\,. $$", "answer": "$$\\boxed{k\\,(T_{R}-T_{L})\\sqrt{\\frac{\\tau}{\\pi D}}}$$", "id": "1108226"}, {"introduction": "现实世界的问题通常包含边界，这要求我们调整格林函数以满足特定的边界条件。“镜像法”是构建此类解的一种巧妙技巧，尤其适用于简单几何形状。这个问题 [@problem_id:1108092] 邀请你将此方法应用于一个具有零温度边界的半无限长杆，探究初始点状热量沉积的最终归宿，并由此得出一个关于能量守恒的深刻见解。", "problem": "考虑一个占据区域 $x \\ge 0$ 的一维半无限长杆。杆中的温度演化 $T(x,t)$ 由热方程决定：\n$$\n\\frac{\\partial T}{\\partial t} = D \\frac{\\partial^2 T}{\\partial x^2}\n$$\n其中 $D$ 是热扩散率。杆在 $x=0$ 的一端保持恒定的零温度，即对于所有 $t > 0$，有 $T(0, t) = 0$。在远离端点处，假定温度为零，即 $\\lim_{x\\to\\infty} T(x,t) = 0$。\n\n在时间 $t=0$ 时，总量为 $Q_{tot}$ 的热能沉积在单点 $x=x_0 > 0$ 处。杆的单位体积热容是一个常数，由比热容 $c$ 和质量密度 $\\rho$ 的乘积给出。初始温度分布可以表示为：\n$$\nT(x, 0) = \\frac{Q_{tot}}{c\\rho A} \\delta(x-x_0)\n$$\n其中 $A$ 是杆的恒定横截面积，$\\delta(x)$ 是狄拉克δ函数。\n\n沿杆的热通量（单位时间单位面积的能量）由傅里叶定律给出：$J(x,t) = -k \\frac{\\partial T}{\\partial x}(x,t)$，其中 $k$ 是热导率。热扩散率通过 $D=k/(c\\rho)$ 与这些常数相关联。\n\n任务是推导在所有时间（$t>0$）内，被 $x=0$ 处的零温边界吸收的总热能 $Q_{abs}$ 的表达式。这是从杆中流出并进入边界的总能量。用初始沉积热量 $Q_{tot}$ 来表示最终答案。", "solution": "我们用像源法求解在 $x\\ge0$ 上且在 $x=0$ 处为狄利克雷边界条件的热方程。对于 $x_0>0$ 处的一个点源，其格林函数为\n$$\nT(x,t)=\\frac{Q_{tot}}{c\\rho A}\\frac{1}{\\sqrt{4\\pi Dt}}\n\\Bigl[e^{-\\frac{(x-x_0)^2}{4Dt}}-e^{-\\frac{(x+x_0)^2}{4Dt}}\\Bigr],\n$$\n这确保了 $T(0,t)=0$。流入边界的热通量为\n$$\nJ(0,t)=-k\\frac{\\partial T}{\\partial x}\\Big|_{x=0}\n=-k\\frac{Q_{tot}}{c\\rho A}\\frac{x_0}{D\\,t\\sqrt{4\\pi Dt}}\ne^{-\\frac{x_0^2}{4Dt}}\\,.\n$$\n吸收的总功率为 $P(t)=A[-J(0,t)]$，因此\n$$\nQ_{abs}=\\int_0^\\infty P(t)\\,dt\n=\\int_0^\\infty\\frac{Q_{tot}\\,x_0}{t\\sqrt{4\\pi Dt}}\ne^{-\\frac{x_0^2}{4Dt}}\\,dt.\n$$\n令 $a=x_0^2/(4D)$。则\n$$\n\\int_0^\\infty t^{-3/2}e^{-a/t}\\,dt\n=a^{-1/2}\\Gamma\\bigl(\\tfrac12\\bigr)\n=\\frac{\\sqrt\\pi}{\\sqrt a}\n=\\frac{2\\sqrt{\\pi D}}{x_0}\\,.\n$$\n因此\n$$\nQ_{abs}\n=Q_{tot}\\,\\frac{x_0}{2\\sqrt{\\pi D}}\\;\n\\frac{2\\sqrt{\\pi D}}{x_0}\n=Q_{tot}\\,.\n$$", "answer": "$$\\boxed{Q_{tot}}$$", "id": "1108092"}, {"introduction": "扩散方程格林函数的一个关键特性是其在整个空间上的积分随时间保持不变，这反映了总量（如热量或概率）的守恒。虽然这一特性可以解析证明，但通过数值方法进行验证可以增强理解并培养实用技能。在这个计算练习 [@problem_id:2419418] 中，你将编写程序来计算此积分，从而确认基本解在一维和二维空间中都正确地模拟了一个守恒过程。", "problem": "考虑一维和二维空间中，扩散（热）方程的基本解（格林函数）。对于正的扩散系数 $D$ 和时间 $t>0$，一维格林函数为\n$$\nG_{1}(x,t;D)=\\frac{1}{\\sqrt{4\\pi D t}}\\exp\\!\\left(-\\frac{x^{2}}{4Dt}\\right),\n$$\n其定义域为 $x\\in\\mathbb{R}$。二维格林函数为\n$$\nG_{2}(\\mathbf{r},t;D)=\\frac{1}{4\\pi D t}\\exp\\!\\left(-\\frac{\\|\\mathbf{r}\\|^{2}}{4Dt}\\right),\n$$\n其定义域为 $\\mathbf{r}\\in\\mathbb{R}^{2}$。对于这些基本解，总“能量”（总概率质量）守恒的数学表述是，其在整个空间域上的相应反常积分等于 $1$，即\n$$\nI_{1}(D,t)=\\int_{-\\infty}^{\\infty} G_{1}(x,t;D)\\,dx,\n\\quad\nI_{2}(D,t)=\\iint_{\\mathbb{R}^{2}} G_{2}(\\mathbf{r},t;D)\\,d^{2}\\mathbf{r},\n$$\n并且守恒定律要求对于所有 $D>0$ 和 $t>0$ 都有 $I_{1}(D,t)=1$ 和 $I_{2}(D,t)=1$。\n\n您的任务是编写一个完整、可运行的程序，分别对一维和二维空间中给定的参数值 $(D,t)$ 数值计算这些反常积分，并返回计算结果。程序必须通过在全域 $\\mathbb{R}$ 和 $\\mathbb{R}^{2}$ 上进行数值积分来计算 $I_{1}(D,t)$ 和 $I_{2}(D,t)$，不得使用任何闭式反导数。\n\n测试套件：\n- 案例 $1$（一维）：$D=0.5$, $t=2.0$；计算 $I_{1}(D,t)$。\n- 案例 $2$（二维）：$D=1.0$, $t=0.1$；计算 $I_{2}(D,t)$。\n- 案例 $3$（二维，小时间）：$D=1.0$, $t=10^{-4}$；计算 $I_{2}(D,t)$。\n- 案例 $4$（一维，大时间和扩散系数）：$D=3.0$, $t=100.0$；计算 $I_{1}(D,t)$。\n- 案例 $5$（二维，小扩散系数）：$D=10^{-3}$, $t=5.0$；计算 $I_{2}(D,t)$。\n\n您的程序必须生成单行输出，其中包含以上述案例相同顺序排列的结果，形式为方括号括起来的逗号分隔列表。每个结果都必须是精确到 $10$ 位小数的浮点数。例如，输出形式必须为\n$[r_{1},r_{2},r_{3},r_{4},r_{5}]$,\n其中 $r_{k}$ 是案例 $k$ 的四舍五入后的数值。", "solution": "该问题要求数值计算两个反常积分 $I_1$ 和 $I_2$，它们分别表示一维和二维扩散方程基本解的总概率质量。这是一个适定、科学上合理且完备的问题。扩散过程内在的守恒定律决定了对于任何有效的参数 $D>0$ 和 $t>0$，这些积分的解析值都精确为 $1$。我们的任务是数值验证这一性质。\n\n数值方法将依赖于 `scipy.integrate.quad` 函数，该函数实现了一种适用于反常积分的稳健自适应求积算法。\n\n对于一维情况，需要计算的积分是\n$$\nI_{1}(D,t)=\\int_{-\\infty}^{\\infty} G_{1}(x,t;D)\\,dx = \\int_{-\\infty}^{\\infty} \\frac{1}{\\sqrt{4\\pi D t}}\\exp\\!\\left(-\\frac{x^{2}}{4Dt}\\right) dx\n$$\n该积分通过将被积函数 $G_{1}(x,t;D)$ 和积分域 $(-\\infty, \\infty)$ 传递给数值求积程序来直接计算。\n\n对于二维情况，直接对下式进行数值积分\n$$\nI_{2}(D,t)=\\iint_{\\mathbb{R}^{2}} G_{2}(\\mathbf{r},t;D)\\,d^{2}\\mathbf{r} = \\iint_{\\mathbb{R}^{2}} \\frac{1}{4\\pi D t}\\exp\\!\\left(-\\frac{\\|\\mathbf{r}\\|^{2}}{4Dt}\\right) d^{2}\\mathbf{r}\n$$\n效率低下。一种更优的方法是将积分变换到极坐标 $(r, \\theta)$，其中 $\\|\\mathbf{r}\\| = r$，面积元为 $d^{2}\\mathbf{r} = r\\,dr\\,d\\theta$。积分域 $\\mathbb{R}^{2}$ 对应于 $r \\in [0, \\infty)$ 和 $\\theta \\in [0, 2\\pi)$。积分变换为\n$$\nI_{2}(D, t) = \\int_0^{2\\pi} \\int_0^{\\infty} \\frac{1}{4\\pi D t}\\exp\\left(-\\frac{r^2}{4Dt}\\right) r\\,dr\\,d\\theta\n$$\n由于被积函数不依赖于 $\\theta$，角度积分是平凡的，其结果为一个因子 $2\\pi$。这将问题简化为单个一维积分：\n$$\nI_{2}(D, t) = \\frac{2\\pi}{4\\pi D t} \\int_0^{\\infty} r \\exp\\left(-\\frac{r^2}{4Dt}\\right) dr = \\frac{1}{2Dt} \\int_0^{\\infty} r \\exp\\left(-\\frac{r^2}{4Dt}\\right) dr\n$$\n然后，这个在定义域 $[0, \\infty)$ 上的简化积分可以高效且精确地进行数值计算。\n\n程序将处理所提供的全部 $5$ 个测试案例：\n1.  一维：$D=0.5$, $t=2.0$\n2.  二维：$D=1.0$, $t=0.1$\n3.  二维：$D=1.0$, $t=10^{-4}$\n4.  一维：$D=3.0$, $t=100.0$\n5.  二维：$D=10^{-3}$, $t=5.0$\n\n它将为每个案例选择合适的积分方法（一维或极坐标简化后的二维）。最终的数值结果将四舍五入到小数点后 $10$ 位，并以指定的列表格式呈现。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.integrate import quad\n\ndef solve():\n    \"\"\"\n    Numerically evaluates the improper integrals for the Green's functions\n    of the 1D and 2D diffusion equations for specified test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    # Each tuple contains: (dimensionality, D, t)\n    test_cases = [\n        (1, 0.5, 2.0),\n        (2, 1.0, 0.1),\n        (2, 1.0, 1e-4),\n        (1, 3.0, 100.0),\n        (2, 10**-3, 5.0)\n    ]\n\n    # Define the integrand for the 1D case, G_1(x, t; D).\n    def g1_integrand(x, D, t):\n        \"\"\"Integrand for the 1D Green's function G_1.\"\"\"\n        denominator = 4.0 * D * t\n        prefactor = 1.0 / np.sqrt(np.pi * denominator)\n        return prefactor * np.exp(-x**2 / denominator)\n\n    # Define the integrand for the 2D case after reduction to 1D via polar coordinates.\n    # This corresponds to f(r) = (r / (2*D*t)) * exp(-r^2 / (4*D*t)).\n    def g2_integrand_polar(r, D, t):\n        \"\"\"Integrand for the 2D Green's function in polar coordinates.\"\"\"\n        denominator = 4.0 * D * t\n        prefactor = r / (2.0 * D * t)\n        return prefactor * np.exp(-r**2 / denominator)\n\n    results = []\n    for case in test_cases:\n        dim, D, t = case\n        \n        integral_value = 0.0\n        if dim == 1:\n            # Perform the 1D improper integral from -inf to +inf.\n            integral_value, _ = quad(g1_integrand, -np.inf, np.inf, args=(D, t))\n        else:  # dim == 2\n            # Perform the 1D improper integral from 0 to +inf for the polar-reduced problem.\n            integral_value, _ = quad(g2_integrand_polar, 0, np.inf, args=(D, t))\n        \n        results.append(integral_value)\n\n    # Final print statement in the exact required format.\n    # Each result is formatted to 10 decimal places.\n    print(f\"[{','.join(f'{res:.10f}' for res in results)}]\")\n\nsolve()\n```", "id": "2419418"}]}