{"hands_on_practices": [{"introduction": "第一个练习将我们带入迷人的非线性动力学世界。我们将处理一个广义的杜芬振子（Duffing oscillator），这是一个用于研究混沌等复杂行为的基本模型。通过将描述其运动 $x(t)$ 的二阶非线性微分方程转化为一个一阶方程组，我们迈出了在相空间中分析其轨迹的关键第一步，这对于理解其长期动力学行为至关重要。[@problem_id:1089504]", "problem": "标准的杜芬(Duffing)振子是研究非线性动力学和混沌的一个基本模型。在某些物理系统中，例如包含相对论运动学或特定流固耦合的系统，其有效质量或惯性可能依赖于速度。\n\n考虑一个广义的、受迫的、有阻尼的杜芬振子，其运动 $x(t)$ 由以下二阶非线性常微分方程描述：\n$$\nm_0 \\frac{d^2 x}{dt^2} \\left(1 - \\frac{1}{c^2}\\left(\\frac{dx}{dt}\\right)^2\\right)^{-3/2} + \\delta \\frac{dx}{dt} + \\alpha x + \\beta x^3 = \\gamma \\cos(\\omega t)\n$$\n此处，$m_0$ 是静止质量，$c$ 是一个特征速度参数，$\\delta$ 是阻尼系数，$\\alpha$ 和 $\\beta$ 是非线性恢复力的参数，而 $\\gamma$ 和 $\\omega$ 分别是正弦驱动力的振幅和角频率。所有这些参数都是正常数。我们感兴趣的物理情景是振子的速度 $|\\frac{dx}{dt}|$ 始终小于 $c$。\n\n为了在相空间中分析此系统的动力学，通常将二阶常微分方程转换为一个由两个一阶常微分方程组成的方程组。设系统的状态由向量 $\\mathbf{y}(t) = \\begin{pmatrix} y_1(t) \\\\ y_2(t) \\end{pmatrix}$ 描述，其中 $y_1(t) = x(t)$ 且 $y_2(t) = \\frac{dx}{dt}$。系统的演化则由形如 $\\frac{d\\mathbf{y}}{dt} = \\mathbf{F}(\\mathbf{y}, t)$ 的方程所支配。\n\n求此动力学系统的非自治向量场 $\\mathbf{F}(\\mathbf{y}, t)$。", "solution": "我们设 $y_1=x$ 和 $y_2=\\dot x$，于是\n$$\\dot y_1=y_2\\,. $$\n原方程为\n$$\nm_0\\bigl(1-\\frac{y_2^2}{c^2}\\bigr)^{-3/2}\\ddot x+\\delta y_2+\\alpha y_1+\\beta y_1^3=\\gamma\\cos(\\omega t)\\,.\n$$\n解出 $\\ddot x$ 可得\n$$\n\\ddot x\n=\\frac{\\bigl(1-\\frac{y_2^2}{c^2}\\bigr)^{3/2}}{m_0}\\bigl[\\gamma\\cos(\\omega t)-\\delta y_2-\\alpha y_1-\\beta y_1^3\\bigr].\n$$\n因此\n$$\n\\dot y_2\n=\\frac{(1-\\frac{y_2^2}{c^2})^{3/2}}{m_0}\\bigl(\\gamma\\cos(\\omega t)-\\delta y_2-\\alpha y_1-\\beta y_1^3\\bigr).\n$$\n所以，非自治向量场是\n$$\n\\mathbf F(\\mathbf{y},t)\n=\\begin{pmatrix}\ny_2\\\\\n\\displaystyle\\frac{\\bigl(1-\\frac{y_2^2}{c^2}\\bigr)^{3/2}}{m_0}\\bigl(\\gamma\\cos(\\omega t)-\\delta y_2-\\alpha y_1-\\beta y_1^3\\bigr)\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\ny_2\\\\\n\\displaystyle\\frac{(1-\\tfrac{y_2^2}{c^2})^{3/2}}{m_0}\\bigl(\\gamma\\cos(\\omega t)-\\delta y_2-\\alpha y_1-\\beta y_1^3\\bigr)\n\\end{pmatrix}}$$", "id": "1089504"}, {"introduction": "从理论物理学转向实际工程应用，我们的下一个练习将探索控制系统领域。现代控制理论建立在状态空间表示法（形如 $\\dot{\\mathbf{x}}(t) = A \\mathbf{x}(t)$）之上。本练习将演示如何将一个包含物理“被控对象”（plant）和PID控制器的完整闭环系统建模为一个统一的一阶常微分方程组，这对于分析系统稳定性和设计控制器至关重要。[@problem_id:1089737]", "problem": "在控制工程中，使用微分方程对物理系统的行为进行建模是一种标准做法。考虑一个二阶线性时不变系统，通常称为“被控对象”，其动力学由以下方程描述：\n$$ m \\frac{d^2y(t)}{dt^2} + c \\frac{dy(t)}{dt} + k y(t) = u(t) $$\n此处，$y(t)$ 是系统输出（例如位置），$u(t)$ 是控制输入（例如施加的力），而 $m, c, k$ 是代表系统内在物理属性（例如质量、阻尼系数和弹簧常数）的正常数。\n\n为确保输出 $y(t)$ 跟踪期望的设定点 $r(t)$，我们使用一个比例-积分-微分（PID）控制器。该控制器计算误差 $e(t) = r(t) - y(t)$ 并基于以下定律生成控制输入：\n$$ u(t) = K_p e(t) + K_i \\int_0^t e(\\tau) d\\tau + K_d \\frac{de(t)}{dt} $$\n其中 $K_p, K_i, K_d$ 分别是比例、积分和微分增益。\n\n对于本问题，考虑一个常见的调节任务，其中设定点是常数零，即 $r(t)=0$。结合被控对象和控制器的闭环系统，可以用形式为 $\\dot{\\mathbf{x}}(t) = A \\mathbf{x}(t)$ 的一阶常微分方程组来描述，这被称为状态空间表示。\n\n将闭环系统的状态向量 $\\mathbf{x}(t)$ 定义为：\n$$ \\mathbf{x}(t) = \\begin{pmatrix} x_1(t) \\\\ x_2(t) \\\\ x_3(t) \\end{pmatrix} = \\begin{pmatrix} y(t) \\\\ \\dot{y}(t) \\\\ \\int_0^t e(\\tau) d\\tau \\end{pmatrix} $$\n你的任务是推导状态空间矩阵 $A$。最终答案应为用参数 $m, c, k, K_p, K_i, K_d$ 表示的矩阵 $A$。", "solution": "我们有被控对象动力学和 PID 控制定律：\n$$m\\ddot y + c\\dot y + k y = u,$$\n$$u = K_p e + K_i\\int_0^t e(\\tau)\\,d\\tau + K_d\\dot e,$$\n其中 $e = r - y$，且此处 $r=0$，因此 $e = -y$ 且 $\\dot e = -\\dot y$。\n\n定义状态向量\n$$x_1 = y,\\quad x_2 = \\dot y,\\quad x_3 = \\int_0^t e(\\tau)\\,d\\tau = \\int_0^t(-y(\\tau))\\,d\\tau.$$\n\n1. 计算 $x_1'$：\n$$x_1' = \\dot y = x_2.$$\n\n2. 使用被控对象方程计算 $x_2'$：\n$$m\\ddot y = -c\\dot y - k y + u\n= -c x_2 - k x_1 +\\bigl(K_p(-x_1) + K_i x_3 + K_d(-x_2)\\bigr).$$\n两边除以 $m$ 得到\n$$x_2' = \\ddot y\n= -\\frac{c+K_d}{m}\\,x_2 - \\frac{k+K_p}{m}\\,x_1 + \\frac{K_i}{m}\\,x_3.$$\n\n3. 计算 $x_3'$：\n$$x_3' = e = -y = -x_1.$$\n\n综合以上结果，状态空间形式 $\\dot{\\mathbf x}=A\\mathbf x$ 为\n$$\n\\begin{pmatrix}x_1'\\\\x_2'\\\\x_3'\\end{pmatrix}\n=\n\\begin{pmatrix}\n0 & 1 & 0\\\\\n-\\frac{k+K_p}{m} & -\\frac{c+K_d}{m} & \\frac{K_i}{m}\\\\\n-1 & 0 & 0\n\\end{pmatrix}\n\\begin{pmatrix}x_1\\\\x_2\\\\x_3\\end{pmatrix}.\n$$\n因此矩阵 $A$ 如上所示。", "answer": "$$\\boxed{\\begin{pmatrix}\n0 & 1 & 0\\\\\n-\\dfrac{k+K_p}{m} & -\\dfrac{c+K_d}{m} & \\dfrac{K_i}{m}\\\\\n-1 & 0 & 0\n\\end{pmatrix}}$$", "id": "1089737"}, {"introduction": "这最后一个练习旨在弥合解析变换与计算求解之间的鸿沟，将理论真正付诸实践。我们将处理经典的欧拉-伯努利梁方程（Euler-Bernoulli beam equation），这是一个描述梁的横向振幅 $Y(x)$ 的四阶常微分方程。这个综合性练习不仅要求我们将该方程转化为一阶方程组，还需要我们运用数值方法求解由此产生的边值问题，从而为一个真实的工程场景计算出梁的尖端挠度 $Y(L)$ 这一具体结果。[@problem_id:2444880]", "problem": "考虑一根细长、等截面的 Euler–Bernoulli 梁，在分布荷载作用下进行小振幅、时谐横向振动。设 $x \\in [0,L]$ 为沿梁的轴向坐标，$t$ 为时间，$w(x,t)$ 为横向挠度。假设对分布荷载 $q(x,t) = \\Re\\{q(x)\\,\\mathrm{e}^{\\mathrm{i}\\,\\omega t}\\}$ 的稳态谐波响应形式为 $w(x,t) = \\Re\\{Y(x)\\,\\mathrm{e}^{\\mathrm{i}\\,\\omega t}\\}$，其中 $Y(x)$ 和 $q(x)$ 是实值振幅，$\\omega$ 是角频率，单位为弧度/秒。忽略阻尼和转动惯性。在这些假设下，控制方程简化为关于 $x$ 的四阶常微分方程\n$$\nE I\\,\\frac{\\mathrm{d}^{4} Y}{\\mathrm{d} x^{4}}(x) - \\rho A\\,\\omega^{2} Y(x) = q(x),\n$$\n对于悬臂梁（在 $x=0$ 处固支，在 $x=L$ 处自由）的边界条件为\n$$\nY(0)=0,\\quad Y'(0)=0,\\quad Y''(L)=0,\\quad Y'''(L)=0.\n$$\n这里 $E$ 是杨氏模量，$I$ 是截面惯性矩，$\\rho$ 是材料质量密度，$A$ 是横截面积，$L$ 是梁长。分布荷载振幅指定为 $q(x) = q_{0}\\,\\sin\\!\\big(\\pi x/L\\big)$。\n\n任务：\n- 将关于 $x$ 的单个四阶常微分方程转换为一个等效的四元一阶耦合常微分方程组。\n- 对下面测试套件中的每个参数集，在区间 $x \\in [0,L]$ 上求解得到的边值问题，以获得 $Y(x)$。\n- 对于每种情况，报告梁尖端的挠度振幅 $Y(L)$。\n\n所有输入参数均使用国际单位制 (SI)。报告所有的尖端挠度振幅，单位为米，使用科学记数法，四舍五入到小数点后六位。\n\n测试套件：\n- 案例 1 (一般情况)：$E = 210\\times 10^{9}\\,\\mathrm{Pa}$，$I = 1.0\\times 10^{-6}\\,\\mathrm{m}^{4}$，$\\rho = 7800\\,\\mathrm{kg/m^{3}}$，$A = 1.0\\times 10^{-3}\\,\\mathrm{m}^{2}$，$L = 2.0\\,\\mathrm{m}$，$q_{0} = 100.0\\,\\mathrm{N/m}$，$\\omega = 50.0\\,\\mathrm{rad/s}$。\n- 案例 2 (零荷载边界情况)：$E = 210\\times 10^{9}\\,\\mathrm{Pa}$，$I = 1.0\\times 10^{-6}\\,\\mathrm{m}^{4}$，$\\rho = 7800\\,\\mathrm{kg/m^{3}}$，$A = 1.0\\times 10^{-3}\\,\\mathrm{m}^{2}$，$L = 2.0\\,\\mathrm{m}$，$q_{0} = 0.0\\,\\mathrm{N/m}$，$\\omega = 50.0\\,\\mathrm{rad/s}$。\n- 案例 3 (准静态情况)：$E = 70\\times 10^{9}\\,\\mathrm{Pa}$，$I = 5.0\\times 10^{-6}\\,\\mathrm{m}^{4}$，$\\rho = 2700\\,\\mathrm{kg/m^{3}}$，$A = 2.0\\times 10^{-3}\\,\\mathrm{m}^{2}$，$L = 1.0\\,\\mathrm{m}$，$q_{0} = 1000.0\\,\\mathrm{N/m}$，$\\omega = 0.01\\,\\mathrm{rad/s}$。\n- 案例 4 (刚性梁)：$E = 210\\times 10^{9}\\,\\mathrm{Pa}$，$I = 5.0\\times 10^{-5}\\,\\mathrm{m}^{4}$，$\\rho = 7800\\,\\mathrm{kg/m^{3}}$，$A = 1.0\\times 10^{-3}\\,\\mathrm{m}^{2}$，$L = 2.0\\,\\mathrm{m}$，$q_{0} = 100.0\\,\\mathrm{N/m}$，$\\omega = 20.0\\,\\mathrm{rad/s}$。\n\n要求的最终输出格式：\n- 你的程序应生成单行输出，其中包含四个尖端挠度振幅，形式为逗号分隔的列表，并用方括号括起来，例如，“[v1,v2,v3,v4]”。\n- 每个条目使用科学记数法，小数点后精确到六位，且无空格，例如，“[1.234567e-03,0.000000e+00,...]”。\n- 数值单位必须是米。", "solution": "对用户提供的问题陈述进行验证。\n\n### 步骤 1：提取已知条件\n- **控制方程**：Euler–Bernoulli 梁横向振动的稳态振幅 $Y(x)$ 由以下四阶常微分方程 (ODE) 控制：\n$$\nE I\\,\\frac{\\mathrm{d}^{4} Y}{\\mathrm{d} x^{4}}(x) - \\rho A\\,\\omega^{2} Y(x) = q(x)\n$$\n- **定义域**：轴向坐标 $x$ 位于区间 $[0,L]$。\n- **边界条件（悬臂梁）**：\n  - 在 $x=0$ 处固支：$Y(0)=0$, $Y'(0)=0$.\n  - 在 $x=L$ 处自由：$Y''(L)=0$, $Y'''(L)=0$.\n- **分布荷载**：分布荷载的振幅为 $q(x) = q_{0}\\,\\sin(\\pi x/L)$。\n- **常数**：\n  - $E$：杨氏模量\n  - $I$：截面惯性矩\n  - $\\rho$：材料质量密度\n  - $A$：横截面积\n  - $L$：梁长\n  - $q_{0}$：荷载大小\n  - $\\omega$：角频率\n- **任务**：\n  1. 将四阶 ODE 转换为一个四元一阶耦合 ODE 系统。\n  2. 对四个不同的参数集求解得到的边值问题 (BVP) 以获得 $Y(x)$。\n  3. 报告每种情况下梁尖端的挠度振幅 $Y(L)$。\n- **测试套件（国际单位制）**：\n  - 案例 1：$E = 210 \\times 10^{9}$，$I = 1.0 \\times 10^{-6}$，$\\rho = 7800$，$A = 1.0 \\times 10^{-3}$，$L = 2.0$，$q_{0} = 100.0$，$\\omega = 50.0$。\n  - 案例 2：$E = 210 \\times 10^{9}$，$I = 1.0 \\times 10^{-6}$，$\\rho = 7800$，$A = 1.0 \\times 10^{-3}$，$L = 2.0$，$q_{0} = 0.0$，$\\omega = 50.0$。\n  - 案例 3：$E = 70 \\times 10^{9}$，$I = 5.0 \\times 10^{-6}$，$\\rho = 2700$，$A = 2.0 \\times 10^{-3}$，$L = 1.0$，$q_{0} = 1000.0$，$\\omega = 0.01$。\n  - 案例 4：$E = 210 \\times 10^{9}$，$I = 5.0 \\times 10^{-5}$，$\\rho = 7800$，$A = 1.0 \\times 10^{-3}$，$L = 2.0$，$q_{0} = 100.0$，$\\omega = 20.0$。\n\n### 步骤 2：使用提取的已知条件进行验证\n根据既定标准对问题进行评估。\n- **科学性**：控制方程是公认的用于受迫、无阻尼振动的 Euler–Bernoulli 梁方程。所有概念和参数（$E, I, \\rho, A, L, \\omega, q_0$）都是经典力学和结构工程中的标准参数。该问题具有科学合理性。\n- **适定性**：该问题是一个线性四阶 ODE 的两点边值问题。边界条件是悬臂梁的标准条件，足以确保唯一解的存在，前提是驱动频率 $\\omega$ 不是梁的固有频率之一（否则会在该无阻尼模型中引起共振）。在案例 2 中，荷载为零，齐次问题在非固有频率下考虑，正确地导出了平凡解。该问题是适定的。\n- **客观性**：问题使用了精确的数学和物理语言进行陈述。任务是具体且定量的。该问题是客观的。\n- **完整性**：解决问题所需的所有必要参数、方程和边界条件都已提供。\n- **相关性**：任务涉及将一个高阶 ODE 转换为一个一阶 ODE 系统并进行数值求解，这是计算物理学中的一个典型问题。\n\n### 步骤 3：结论与操作\n该问题具有科学合理性、适定性、客观性和完整性。这是一个可以构建解决方案的有效问题。\n\n### 求解推导\n\n第一步是将单个四阶 ODE 转换为一个等效的四元一阶 ODE 系统。这是一种标准技术。我们定义一个包含四个分量的状态向量 $\\mathbf{y}(x)$：\n\\begin{align*}\n    y_1(x) &= Y(x) & & \\text{(挠度)} \\\\\n    y_2(x) &= Y'(x) & & \\text{(转角)} \\\\\n    y_3(x) &= Y''(x) & & \\text{(与弯矩成正比, } $M=EIY''$) \\\\\n    y_4(x) &= Y'''(x) & & \\text{(与剪力成正比, } $V=EIY'''$)\n\\end{align*}\n通过对每个分量关于 $x$ 求导，我们可以用状态向量分量本身来表示它们的导数：\n\\begin{align*}\n    y_1'(x) &= y_2(x) \\\\\n    y_2'(x) &= y_3(x) \\\\\n    y_3'(x) &= y_4(x)\n\\end{align*}\n第四个分量的导数 $y_4'(x) = Y''''(x)$ 通过整理控制 ODE 得到：\n$$\n\\frac{\\mathrm{d}^{4} Y}{\\mathrm{d} x^{4}}(x) = \\frac{\\rho A \\omega^2}{EI} Y(x) + \\frac{q(x)}{EI}\n$$\n代入状态向量分量和给定的荷载函数 $q(x) = q_0\\sin(\\pi x/L)$：\n$$\ny_4'(x) = \\frac{\\rho A \\omega^2}{EI} y_1(x) + \\frac{q_0}{EI} \\sin\\left(\\frac{\\pi x}{L}\\right)\n$$\n这就构成了一个线性一阶 ODE 系统，可以写成矩阵形式 $\\mathbf{y}'(x) = \\mathbf{F}(x, \\mathbf{y}(x))$：\n$$\n\\frac{d}{dx}\n\\begin{pmatrix}\ny_1 \\\\\ny_2 \\\\\ny_3 \\\\\ny_4\n\\end{pmatrix}\n=\n\\begin{pmatrix}\ny_2 \\\\\ny_3 \\\\\ny_4 \\\\\n\\frac{\\rho A \\omega^2}{EI} y_1 + \\frac{q_0}{EI} \\sin\\left(\\frac{\\pi x}{L}\\right)\n\\end{pmatrix}\n$$\n该系统必须在边界条件下求解。用状态向量表示，悬臂梁的条件是：\n-   在固支端 $x=0$：\n    -   $Y(0) = 0 \\implies y_1(0) = 0$\n    -   $Y'(0) = 0 \\implies y_2(0) = 0$\n-   在自由端 $x=L$：\n    -   $Y''(L) = 0 \\implies y_3(L) = 0$\n    -   $Y'''(L) = 0 \\implies y_4(L) = 0$\n\n这构成了一个两点边值问题 (BVP)。我们将使用合适的算法对该 BVP 进行数值求解。SciPy 库中的 `scipy.integrate.solve_bvp` 函数是一个合适的工具。它实现了一种配置法 (collocation method)，对于此类问题既高效又准确。\n\n数值求解步骤如下：\n1.  定义一个 Python 函数来表示 ODE 系统，该函数以 $x$ 和 $\\mathbf{y}$ 作为输入，并返回 $\\mathbf{y}'$。此函数还需要问题的物理参数。\n2.  为边界条件定义一个 Python 函数，该函数计算四个条件的残差：$[y_1(0), y_2(0), y_3(L), y_4(L)]$。对于有效解，这些残差必须为零。\n3.  为定义域 $[0,L]$ 创建一个初始点网格。均匀网格即可。\n4.  在此网格上为解 $\\mathbf{y}(x)$ 提供一个初始猜测。将所有分量猜测为零是一个合理的起点。\n5.  使用 ODE 函数、边界条件函数、初始网格和初始猜测调用 `scipy.integrate.solve_bvp`。\n6.  求解器迭代地优化解，直到满足边界条件并且 ODE 在指定的容差内求解。\n7.  一旦找到解，就可以从得到的解对象中评估梁尖端的挠度值 $Y(L) = y_1(L)$。\n\n对问题陈述中提供的四个测试用例中的每一个重复此过程。每个案例的最终结果按要求格式化。", "answer": "```python\nimport numpy as np\nfrom scipy.integrate import solve_bvp\n\ndef solve():\n    \"\"\"\n    Solves the Euler-Bernoulli beam BVP for four test cases.\n    \"\"\"\n\n    test_cases = [\n        # Case 1 (general)\n        {\n            \"E\": 210.0e9, \"I\": 1.0e-6, \"rho\": 7800.0, \"A\": 1.0e-3,\n            \"L\": 2.0, \"q0\": 100.0, \"omega\": 50.0\n        },\n        # Case 2 (zero load edge case)\n        {\n            \"E\": 210.0e9, \"I\": 1.0e-6, \"rho\": 7800.0, \"A\": 1.0e-3,\n            \"L\": 2.0, \"q0\": 0.0, \"omega\": 50.0\n        },\n        # Case 3 (quasi-static regime)\n        {\n            \"E\": 70.0e9, \"I\": 5.0e-6, \"rho\": 2700.0, \"A\": 2.0e-3,\n            \"L\": 1.0, \"q0\": 1000.0, \"omega\": 0.01\n        },\n        # Case 4 (stiff beam)\n        {\n            \"E\": 210.0e9, \"I\": 5.0e-5, \"rho\": 7800.0, \"A\": 1.0e-3,\n            \"L\": 2.0, \"q0\": 100.0, \"omega\": 20.0\n        }\n    ]\n\n    def ode_system(x, y, p):\n        \"\"\"\n        Defines the system of 4 first-order ODEs.\n        y is a vector [y1, y2, y3, y4]\n        y1 = Y, y2 = Y', y3 = Y'', y4 = Y'''\n        p is a tuple of parameters (E, I, rho, A, L, q0, omega)\n        \"\"\"\n        E, I, rho, A, L, q0, omega = p\n        \n        dy1_dx = y[1]\n        dy2_dx = y[2]\n        dy3_dx = y[3]\n\n        q_x = q0 * np.sin(np.pi * x / L)\n        \n        # From EI Y'''' - rho*A*omega^2*Y = q(x)\n        dy4_dx = (rho * A * omega**2 * y[0] + q_x) / (E * I)\n\n        return np.vstack((dy1_dx, dy2_dx, dy3_dx, dy4_dx))\n\n    def boundary_conditions(ya, yb, p):\n        \"\"\"\n        Defines the boundary conditions for the cantilever beam.\n        ya: solution at x=0\n        yb: solution at x=L\n        BCs: Y(0)=0, Y'(0)=0, Y''(L)=0, Y'''(L)=0\n        In state vector terms: y1(0)=0, y2(0)=0, y3(L)=0, y4(L)=0\n        \"\"\"\n        return np.array([ya[0], ya[1], yb[2], yb[3]])\n\n    results = []\n\n    for case in test_cases:\n        p = (\n            case[\"E\"], case[\"I\"], case[\"rho\"], case[\"A\"],\n            case[\"L\"], case[\"q0\"], case[\"omega\"]\n        )\n        L = case[\"L\"]\n\n        # Set up the initial mesh and guess for the solution\n        x_mesh = np.linspace(0, L, 201)  # 201 points for good resolution\n        y_guess = np.zeros((4, x_mesh.size))\n\n        # Solve the boundary value problem\n        sol = solve_bvp(\n            lambda x, y: ode_system(x, y, p),\n            lambda ya, yb: boundary_conditions(ya, yb, p),\n            x_mesh,\n            y_guess,\n            tol=1e-8\n        )\n        \n        # As a check, for q0=0 and omega != natural frequency, solution must be trivial\n        if case[\"q0\"] == 0.0:\n            tip_deflection = 0.0\n        else:\n            if sol.success:\n                # Evaluate the solution at the tip of the beam (x=L)\n                # sol.sol(L)[0] corresponds to y1(L) = Y(L)\n                tip_deflection = sol.sol(L)[0]\n            else:\n                # This should not happen for the given test cases\n                tip_deflection = np.nan\n\n        # Format the result to scientific notation with 6 decimal places\n        results.append(f\"{tip_deflection:.6e}\")\n    \n    # Print the final result in the specified format\n    print(f\"[{','.join(results)}]\")\n\nsolve()\n```", "id": "2444880"}]}