{"hands_on_practices": [{"introduction": "在深入求解BCS能隙方程之前，我们必须理解存在超导解的基本条件。第一个练习 [@problem_id:1766635] 是一个思想实验，旨在探究相互作用势的关键作用。通过分析零温能隙方程的数学结构，您将揭示为何一个*吸引*相互作用是在BCS框架下形成库珀对的必要前提。", "problem": "巴丁-库珀-施里弗（BCS）超导理论描述了电子间的吸引相互作用如何导致库珀对的形成和超导能隙 $\\Delta$ 的打开。这个能隙由一个自洽方程确定。在绝对零温（$T=0$）下，对于一个具有恒定吸引势的简化模型，该方程由下式给出：\n\n$$1 = \\frac{V N(0)}{2} \\int_{-\\hbar \\omega_D}^{\\hbar \\omega_D} \\frac{d\\epsilon}{\\sqrt{\\epsilon^2 + \\Delta^2}}$$\n\n在此， $V$ 是一个表示电子-电子吸引相互作用强度的正常数， $N(0)$ 是费米能级上单个自旋的电子态密度，$\\hbar$ 是约化普朗克常数，而 $\\omega_D$ 是德拜频率，它定义了费米能级附近的一个能量截断 $\\hbar \\omega_D$，在此范围内相互作用非零。该方程的一个非平庸解（$\\Delta > 0$）标志着超导态的存在。\n\n现在，考虑一种假设的材料，其中一种奇特的配对机制导致了纯粹是*排斥*的有效电子-电子相互作用。在BCS模型的框架下，这对应于相互作用强度参数 $V < 0$ 。通过分析这种排斥情况下自洽方程的数学结构，判断在 $T=0$ 时是否能形成非平庸的超导能隙（$\\Delta > 0$）。\n\n下列哪个陈述正确解释了对于排斥相互作用（$V<0$）形成非平庸超导能隙的可能性？\n\nA. 非零能隙是可能的，前提是态密度 $N(0)$ 足够大以补偿 $V$ 的负号。\n\nB. 非零能隙是不可能的。方程右边包含负参数 $V$ 与一个积分的乘积，对于任何实数 $\\Delta > 0$，该积分都必须为正。最终得到的负值永远不可能等于左边的正值（1）。\n\nC. 非零能隙是可能的，但它必须是一个纯虚数，这对应于一个物理上不稳定的状态，而不是一个稳定的超导基态。\n\nD. 非零能隙是不可能的，因为对于排斥势（$V<0$），方程右边的积分会发散。\n\nE. 在 $T=0$ 时非零能隙是不可能的，但排斥相互作用可以在足够高的温度下导致稳定的超导能隙。", "solution": "我们从德拜窗口内具有恒定相互作用的零温BCS自洽方程出发：\n$$\n1=\\frac{V N(0)}{2}\\int_{-\\hbar \\omega_{D}}^{\\hbar \\omega_{D}}\\frac{d\\epsilon}{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}\\,,\n$$\n其中 $V$ 是一个恒定的相互作用参数，$N(0)>0$ 是费米能级上每个自旋的态密度，而 $\\Delta>0$ 是一个假定的实数超导能隙。\n\n首先，分析被积函数。对于任何实数 $\\Delta>0$，函数 $f(\\epsilon)=1/\\sqrt{\\epsilon^{2}+\\Delta^{2}}$ 是：\n- 关于 $\\epsilon$ 的偶函数，因为 $f(-\\epsilon)=f(\\epsilon)$，\n- 对于所有 $\\epsilon\\in\\mathbb{R}$ 都是严格为正的，\n- 在任何有限区间上都是可积的。\n\n因此，该积分为正且有限。利用偶函数性质，\n$$\n\\int_{-\\hbar \\omega_{D}}^{\\hbar \\omega_{D}}\\frac{d\\epsilon}{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}\n=2\\int_{0}^{\\hbar \\omega_{D}}\\frac{d\\epsilon}{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}\\,.\n$$\n计算不定积分：\n$$\n\\int \\frac{d\\epsilon}{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}\n=\\operatorname{arsinh}\\!\\left(\\frac{\\epsilon}{\\Delta}\\right)\n=\\ln\\!\\left(\\frac{\\epsilon+\\sqrt{\\epsilon^{2}+\\Delta^{2}}}{\\Delta}\\right).\n$$\n因此，\n$$\n\\int_{-\\hbar \\omega_{D}}^{\\hbar \\omega_{D}}\\frac{d\\epsilon}{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}\n=2\\,\\operatorname{arsinh}\\!\\left(\\frac{\\hbar \\omega_{D}}{\\Delta}\\right)\n=2\\,\\ln\\!\\left(\\frac{\\hbar \\omega_{D}+\\sqrt{(\\hbar \\omega_{D})^{2}+\\Delta^{2}}}{\\Delta}\\right),\n$$\n对于任何实数 $\\Delta>0$，该式都是严格为正且有限的。\n\n将此结果代入能隙方程：\n$$\n1=\\frac{V N(0)}{2}\\times 2\\,\\operatorname{arsinh}\\!\\left(\\frac{\\hbar \\omega_{D}}{\\Delta}\\right)\n=V N(0)\\,\\operatorname{arsinh}\\!\\left(\\frac{\\hbar \\omega_{D}}{\\Delta}\\right).\n$$\n由于 $N(0)>0$ 且当 $\\Delta>0$ 时 $\\operatorname{arsinh}(\\hbar \\omega_{D}/\\Delta)>0$，方程右边的符号与 $V$ 的符号相同。因此：\n- 如果 $V>0$（有效吸引），则右边为正，可以存在一个非平庸解 $\\Delta>0$。\n- 如果 $V<0$（纯粹排斥相互作用），则右边严格为负，而左边为 $1>0$。因此，对于任何实数 $\\Delta>0$，该等式都不能成立。\n\n这表明，在这个BCS模型中，对于一个纯粹排斥的、与动量无关的相互作用 $V<0$，在 $T=0$ 时不存在非平庸的实数能隙解。\n\n为了澄清选项中可能存在的误解：\n- 选项A是错误的，因为当 $V<0$ 时，增加 $N(0)$ 只会缩放负的右边项的绝对值；它无法改变其符号以匹配 $1$。\n- 选项C不适用于这个实数能隙的BCS方程；将 $\\Delta$ 取为虚数会使被积函数变为 $1/\\sqrt{\\epsilon^{2}-|\\Delta|^{2}}$，这会在有限的截断范围内导致非物理的发散或复数值，并且不会产生原始实数能隙方程的稳定超导解。\n- 选项D是错误的，因为如上文明确计算所示，该积分是有限的。\n- 选项E是错误的，因为在有限温度下，能隙方程的被积函数会乘以一个因子 $\\tanh\\!\\left(\\frac{\\sqrt{\\epsilon^{2}+\\Delta^{2}}}{2 k_{B} T}\\right)$；这个因子是正的且小于等于 $1$，因此对于 $V<0$ 的情况，方程右边仍然是负的，并且对于任何温度 $T$ 都不能等于 $1$。\n\n因此，正确的陈述是，在这个模型中，对于 $V<0$ 的情况，非平庸超导能隙无法形成，因为方程右边必然为负，而左边为正。", "answer": "$$\\boxed{B}$$", "id": "1766635"}, {"introduction": "标准的BCS模型通常在特定能量窗口内采用一个简化的、恒定的吸引势。本练习 [@problem_id:632124] 将挑战您处理一个更符合物理现实的模型，其中声子媒介的相互作用具有更平滑的能量依赖性，由洛伦兹函数描述。这个练习将展示，能隙 $\\Delta$ 对耦合强度 $g_0$ 的标志性指数依赖关系是一个稳健的特性，而不仅仅是简化模型的产物。", "problem": "在巴丁-库珀-施里弗（BCS）超导理论中，一个简单的s波超导体在零温（$T=0$）时的能隙 $\\Delta$ 由以下积分方程确定：\n$$ 1 = \\frac{1}{2} \\int_{-\\infty}^{\\infty} d\\xi' \\frac{g(\\xi')}{\\sqrt{\\xi'^2 + \\Delta^2}} $$\n此处，$\\xi'$ 是相对于费米能测量的单粒子能量，而 $g(\\xi') = -N(0)V(\\xi')$ 是无量纲的有效配对相互作用，其中 $N(0)$ 是费米能级处（恒定）的电子态密度，$V(\\xi')$ 是依赖于能量的配对势。\n\n在标准的教科书模型中，假定 $g(\\xi')$ 在费米能级周围的一个有限能量壳层 $(-\\hbar\\omega_D, \\hbar\\omega_D)$ 内为常数 $g$，而在该范围外为零。现在考虑一个更符合实际的模型，其中由玻色子（例如声子）介导的相互作用具有更缓和的能量依赖性。具体来说，假设该相互作用由一个以零能量转移为中心的洛伦兹函数描述：\n$$ g(\\xi') = g_0 \\frac{(\\hbar\\omega_0)^2}{\\xi'^2 + (\\hbar\\omega_0)^2} $$\n其中 $g_0$ 是零能量转移处的无量纲耦合常数，$\\hbar\\omega_0$ 代表了介导玻色子的特征能量标度。\n\n你的任务是针对此洛伦兹相互作用模型求解能隙方程。在由 $g_0 \\ll 1$ 定义的弱耦合极限下，确定超导能隙 $\\Delta$ 作为 $g_0$、$\\hbar$ 和 $\\omega_0$ 函数的领头阶表达式。", "solution": "1.  使用洛伦兹形式 $g(\\xi')$ 的能隙方程：\n$$1=\\frac12\\int_{-\\infty}^{\\infty}d\\xi'\\;\\frac{g_0\\,(\\hbar\\omega_0)^2}{(\\xi'^2+(\\hbar\\omega_0)^2)\\sqrt{\\xi'^2+\\Delta^2}}\\,. $$\n\n2.  利用被积函数的偶性：\n$$1=g_0\\,(\\hbar\\omega_0)^2\\int_0^{\\infty}\\frac{d\\xi'}{(\\xi'^2+(\\hbar\\omega_0)^2)\\,\\sqrt{\\xi'^2+\\Delta^2}}\\,. $$\n\n3.  进行代换 $\\xi'=\\Delta\\sinh t$，则 $d\\xi'=\\Delta\\cosh t\\,dt$ 且 $\\sqrt{\\xi'^2+\\Delta^2}=\\Delta\\cosh t$：\n$$I=\\,(\\hbar\\omega_0)^2\\int_0^{\\infty}\\frac{\\Delta\\cosh t\\,dt}{\\bigl(\\Delta^2\\sinh^2t+(\\hbar\\omega_0)^2\\bigr)\\,\\Delta\\cosh t}\n=\\int_0^{\\infty}\\frac{dt}{1+\\alpha^2\\sinh^2t}\\,,\\quad\\alpha=\\frac{\\Delta}{\\hbar\\omega_0}\\,. $$\n\n4.  对于 $\\alpha\\ll 1$，被积函数约等于1，直到 $\\sinh t\\sim 1/\\alpha$，即 $t\\sim\\ln(2/\\alpha)$，然后指数衰减。因此\n$$I\\simeq \\ln\\!\\bigl(\\tfrac{2}{\\alpha}\\bigr)=\\ln\\!\\bigl(\\tfrac{2\\hbar\\omega_0}{\\Delta}\\bigr)\\,. $$\n\n5.  能隙方程 $1=g_0 I$ 得到\n$$\\frac1{g_0}\\simeq\\ln\\!\\bigl(\\tfrac{2\\hbar\\omega_0}{\\Delta}\\bigr)\n\\quad\\Longrightarrow\\quad \\Delta\\simeq2\\hbar\\omega_0\\exp\\!\\Bigl(-\\frac1{g_0}\\Bigr)\\,. $$", "answer": "$$\\boxed{2\\hbar\\omega_0\\exp\\!\\Bigl(-\\frac{1}{g_0}\\Bigr)}$$", "id": "632124"}, {"introduction": "BCS方程的解析解通常仅限于零温下的简化情况。最后一个练习 [@problem_id:2415410] 通过计算将理论付诸实践，要求您求解完备的、耦合的、有限温度下的超导能隙 $\\Delta$ 和化学势 $\\mu$ 方程。通过实现一个数值求解器，您将探索能隙如何随温度和电子密度演化，从而架起教科书理论与现代计算物理研究之间的桥梁。", "problem": "请考虑弱耦合超导的有限温度平均场理论，即 Bardeen–Cooper–Schrieffer (BCS) 理论 (Bardeen–Cooper–Schrieffer (BCS))。在一个简化的模型中，电子能带为具有限带宽度的单个无特征能带，且态密度恒定。在此模型下，超导能隙的自洽条件和粒子数守恒可以简化为两个关于未知量（超导能隙 $\\Delta$ 和化学势 $\\mu$）的耦合非线性积分方程。您的任务是使用多维求根算法同时求解这两个方程，得到 $\\Delta$ 和 $\\mu$，并报告在指定参数集下 $\\Delta$ 的值。\n\n假设以下物理上标准且经过充分检验的要素作为基本基础：\n- 准粒子激发能为 $E(\\varepsilon) = \\sqrt{(\\varepsilon - \\mu)^2 + \\Delta^2}$，其中 $\\varepsilon$ 是能带内的单粒子能量。\n- 费米-狄拉克分布为 $f(E) = \\left(1 + e^{E/(k_{\\mathrm{B}} T)}\\right)^{-1}$，并且组合项 $\\tanh\\!\\left(E/(2 k_{\\mathrm{B}} T)\\right)$ 会出现在热学期望值中。使用以能量单位表示的玻尔兹曼常数 $k_{\\mathrm{B}} = 0.08617333262145\\,\\mathrm{meV/K}$。\n- 电子能带是平坦的，在以零能量为中心、带宽为 $W$ 的有限范围内（即 $\\varepsilon \\in [-W/2, W/2]$），具有恒定的总（包括自旋）态密度 $N_0$，且 $N_0 = 1/W$，以使能带内每个格点的单粒子态总数为 1。\n- 吸引配对相互作用仅在以 $\\mu$ 为中心、半宽度为 $\\omega_{\\mathrm{D}}$（德拜截断）的对称能量窗口内非零，其特征由无量纲耦合 $\\lambda = g N_0$ 描述，其中 $g$ 是配对相互作用强度。在恒定态密度模型中，耦合仅通过 $\\lambda$ 进入方程。\n\n从这些定义出发，并对单线态超导体使用标准的平均场退耦，待求解的关于 $\\Delta$ 和 $\\mu$ 在温度 $T$ 下的耦合方程为：\n- 能隙自洽方程，其形式允许正常态解 $\\Delta = 0$：\n$$\nF_{\\Delta}(\\Delta,\\mu;T,\\lambda,\\omega_{\\mathrm{D}},W) \\equiv \\Delta - \\lambda \\int_{\\mathcal{I}_{\\mathrm{D}}} \\frac{\\Delta}{2 E(\\varepsilon)} \\tanh\\!\\left(\\frac{E(\\varepsilon)}{2 k_{\\mathrm{B}} T}\\right) \\, \\mathrm{d}\\varepsilon = 0,\n$$\n其中德拜积分窗口为 $\\mathcal{I}_{\\mathrm{D}} = \\{\\varepsilon \\in [-W/2, W/2] : |\\varepsilon - \\mu| \\le \\omega_{\\mathrm{D}}\\}$。\n- 固定填充分数 $\\nu \\in [0,1]$ 的粒子数守恒方程：\n$$\nF_{n}(\\Delta,\\mu;T,\\nu,W) \\equiv \\nu - \\int_{-W/2}^{W/2} N_0 \\left[ 1 - \\frac{\\varepsilon - \\mu}{E(\\varepsilon)} \\tanh\\!\\left(\\frac{E(\\varepsilon)}{2 k_{\\mathrm{B}} T}\\right) \\right] \\mathrm{d}\\varepsilon = 0,\n$$\n其中 $N_0 = 1/W$。\n\n注意：\n- 在高于临界温度的正常态下，由于 $F_{\\Delta}$ 中存在显式因子 $\\Delta$，解 $\\Delta = 0$ 与一个合适的 $\\mu$ 必须同时满足 $F_{\\Delta} = 0$ 和 $F_{n} = 0$。\n- 本问题中所有能量，包括 $\\Delta$、$\\mu$、$W$ 和 $\\omega_{\\mathrm{D}}$，都必须以 $\\mathrm{meV}$ 为单位表示，温度以 $\\mathrm{K}$ 为单位。未出现角度，因此不需要角度单位。\n\n您的程序必须实现一个鲁棒的多维求根方法来求解以下系统：\n$$\n\\mathbf{F}(\\Delta,\\mu) = \\begin{bmatrix} F_{\\Delta}(\\Delta,\\mu;T,\\lambda,\\omega_{\\mathrm{D}},W) \\\\ F_{n}(\\Delta,\\mu;T,\\nu,W) \\end{bmatrix} = \\mathbf{0}\n$$\n对于每个测试用例。需要对积分进行数值计算；请使用一种在 $\\Delta$ 较小以及温度接近超导相变点时能实现稳定收敛的方法。\n\n测试套件：\n使用以下参数集，以元组 $(W\\,\\mathrm{[meV]}, \\omega_{\\mathrm{D}}\\,\\mathrm{[meV]}, \\lambda, \\nu, T\\,\\mathrm{[K]})$ 的形式指定。\n\n- 用例 $\\mathrm{A}$ (理想情况，低于临界温度): $(200, 20, 0.3, 0.5, 5)$。\n- 用例 $\\mathrm{B}$ (正常态，高于临界温度): $(200, 20, 0.3, 0.5, 12)$。\n- 用例 $\\mathrm{C}$ (接近临界温度): $(200, 20, 0.3, 0.5, 9.5)$。\n- 用例 $\\mathrm{D}$ (非半填充，低于临界温度): $(200, 20, 0.3, 0.3, 5)$。\n\n所需输出：\n- 对于每个测试用例，返回以 $\\mathrm{meV}$ 为单位的超导能隙 $\\Delta$，结果为精确到 $6$ 位小数的浮点数。\n- 您的程序应生成单行输出，其中包含一个逗号分隔的结果列表，并用方括号括起来，顺序与测试套件相同：例如 $[\\Delta_{\\mathrm{A}},\\Delta_{\\mathrm{B}},\\Delta_{\\mathrm{C}},\\Delta_{\\mathrm{D}}]$。\n\n约束和指导：\n- 为每个用例实现一个真正的多维求根策略来同时求解 $\\Delta$ 和 $\\mu$；不要将系统简化为单个方程。\n- 通过设计积分和函数求值来避免伪发散，确保在 $\\Delta \\rightarrow 0$ 时的数值稳定性。\n- 所有计算必须是自包含的，且不需要用户输入。仅使用标准库和指定的数值库。", "solution": "所呈现的问题是计算凝聚态物理学中一个标准的、适定的问题。它要求联立数值求解两个耦合的非线性积分方程，这两个方程在 Bardeen–Cooper–Schrieffer (BCS) 平均场理论框架下确定了一个简单超导模型的物态。所有给出的方程、定义和参数在科学上都是合理且自洽的。该问题是有效的。\n\n任务是找到超导能隙 $\\Delta$ 和化学势 $\\mu$ 的值，使其满足方程组 $\\mathbf{F}(\\Delta, \\mu) = \\mathbf{0}$，其中向量函数 $\\mathbf{F}$ 由下式给出：\n$$\n\\mathbf{F}(\\Delta,\\mu) = \\begin{bmatrix} F_{\\Delta}(\\Delta,\\mu) \\\\ F_{n}(\\Delta,\\mu) \\end{bmatrix} = \\mathbf{0}\n$$\n该向量函数的分量定义为：\n$$\nF_{\\Delta}(\\Delta,\\mu) = \\Delta - \\lambda \\int_{\\mathcal{I}_{\\mathrm{D}}} \\frac{\\Delta}{2 E(\\varepsilon)} \\tanh\\!\\left(\\frac{E(\\varepsilon)}{2 k_{\\mathrm{B}} T}\\right) \\, \\mathrm{d}\\varepsilon\n$$\n$$\nF_{n}(\\Delta,\\mu) = \\nu - \\int_{-W/2}^{W/2} N_0 \\left[ 1 - \\frac{\\varepsilon - \\mu}{E(\\varepsilon)} \\tanh\\!\\left(\\frac{E(\\varepsilon)}{2 k_{\\mathrm{B}} T}\\right) \\right] \\mathrm{d}\\varepsilon\n$$\n其中 $E(\\varepsilon) = \\sqrt{(\\varepsilon - \\mu)^2 + \\Delta^2}$，$N_0 = 1/W$，且能隙方程的积分域为 $\\mathcal{I}_{\\mathrm{D}} = \\{\\varepsilon \\in [-W/2, W/2] : |\\varepsilon - \\mu| \\le \\omega_{\\mathrm{D}}\\}$。每个用例的参数 $\\{W, \\omega_{\\mathrm{D}}, \\lambda, \\nu, T\\}$ 均已提供，玻尔兹曼常数为 $k_{\\mathrm{B}} = 0.08617333262145\\,\\mathrm{meV/K}$。\n\n该系统构成一个多维求根问题。我们将采用一种数值算法来求解它。一个合适的选择是拟牛顿法，例如 Powell 混合法，该方法通过近似雅可比矩阵来迭代求根。SciPy 库中的 `scipy.optimize.root` 函数及其 `hybr` 方法为此算法提供了一个鲁棒的实现。\n\n解决方案的核心在于实现向量函数 $\\mathbf{F}(\\Delta, \\mu)$，这需要对定积分进行数值计算。我们使用 `scipy.integrate.quad` 函数来完成此任务。为获得稳定且准确的解，以下几点数值考虑至关重要：\n\n$1$. **$F_{\\Delta}$ 的求值**：能隙方程的积分上下限依赖于变量 $\\mu$。它们必须动态计算为 $[\\max(-W/2, \\mu - \\omega_{\\mathrm{D}}), \\min(W/2, \\mu + \\omega_{\\mathrm{D}})]$。被积函数包含项 $\\Delta/E(\\varepsilon)$。当 $\\Delta > 0$ 时，该项是良态的。如果 $\\Delta = 0$，被积函数恒等于零，因此对于任何 $\\mu$ 都有 $F_{\\Delta}(0, \\mu) = 0$。这正确地将正常态描述为能隙方程的一个平凡解。该方程关于 $\\Delta$ 是奇函数；如果 $(\\Delta_s, \\mu_s)$ 是一个解，那么 $(-\\Delta_s, \\mu_s)$ 也是一个解。按照惯例，物理能隙是非负的，对应于正根。\n\n$2$. **$F_{n}$ 的求值**：粒子数守恒方程的被积函数中含有项 $(\\varepsilon-\\mu)/E(\\varepsilon)$。在极限 $\\Delta \\to 0$ 下，$E(\\varepsilon) \\to |\\varepsilon - \\mu|$，该项趋近于在 $\\varepsilon=\\mu$ 处不连续的 $\\mathrm{sgn}(\\varepsilon - \\mu)$。为确保数值精度，必须让 `quad` 积分器知晓这个潜在的奇点。这可以通过将位置 $\\mu$ 传递给 `quad` 函数的 `points` 参数来实现。粒子数方程仅依赖于 $\\Delta^2$，使其成为关于 $\\Delta$ 的偶函数。\n\n$3$. **初始猜测值**：迭代求根算法的收敛性高度依赖于解向量 $(\\Delta_0, \\mu_0)$ 的初始猜测值。一个基于物理的合理选择至关重要：\n-   对于化学势 $\\mu_0$，在半填充（$\\nu=0.5$）时，粒子-空穴对称性决定了 $\\mu \\approx 0$。偏离半填充时，一个合理的初始猜测是零温下无相互作用系统的化学势，由 $\\mu_0 = W(\\nu - 0.5)$ 给出。\n-   对于能隙 $\\Delta_0$，我们使用弱耦合近似来估计 BCS 临界温度：$k_B T_c \\approx 1.13 \\omega_D e^{-1/\\lambda}$。对于给定的参数 $\\lambda=0.3$ 和 $\\omega_D=20\\,\\mathrm{meV}$，我们得到 $T_c \\approx 9.35\\,\\mathrm{K}$。如果系统温度 $T$ 低于 $T_c$，预期会出现 $\\Delta > 0$ 的超导态，此时选择一个非零的初始猜测（例如 $\\Delta_0 = 1.0\\,\\mathrm{meV}$）是合适的。如果 $T > T_c$，系统处于正常态，因此我们预期 $\\Delta = 0$。一个接近 $\\Delta_0 \\approx 0$ 的初始猜测将引导求解器找到这个解。\n\n总体步骤如下：对于每个测试用例，我们使用指定的参数构造向量函数 $\\mathbf{F}$。然后，我们将该函数以及一个精心选择的初始猜测值 $(\\Delta_0, \\mu_0)$ 提供给 `scipy.optimize.root` 求解器。求解器返回解向量 $(\\Delta^*, \\mu^*)$。我们报告每个用例的物理能隙，即非负值 $|\\Delta^*|$。对于 $|\\Delta^*|$ 在数值上与零无法区分的结果（例如 $< 10^{-9}$），我们将其精确地设为 $0.0$。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.optimize import root\nfrom scipy.integrate import quad\n\n# Define constants\nK_B = 0.08617333262145  # Boltzmann constant in meV/K\n\ndef system_equations(x, W, omega_D, lambda_, nu, T):\n    \"\"\"\n    Defines the system of nonlinear equations F(x) = 0 for the BCS problem.\n    x: array-like, x[0] = Delta (gap), x[1] = mu (chemical potential)\n    W, omega_D, lambda_, nu, T: parameters of the model.\n    \"\"\"\n    delta, mu = x\n    N0 = 1.0 / W\n\n    # --- F_delta equation ---\n    # F_delta = delta - lambda * integral_delta\n    # Integrand for the gap equation.\n    def integrand_delta(eps, d, m):\n        # The equation from the problem is F_delta = delta - lambda * integral(delta/E * ...).\n        # It is odd in delta. We must use the 'd' from the solver, not abs(d).\n        # We handle d=0 as a special case to avoid division by zero in the term delta/E.\n        if d == 0.0:\n            return 0.0\n        \n        # The argument of sqrt is delta^2, so it's always non-negative.\n        E_eps = np.sqrt((eps - m)**2 + d**2)\n        if E_eps == 0.0: # Should not happen if d != 0\n            return 0.0\n        \n        tanh_term = np.tanh(E_eps / (2.0 * K_B * T))\n        return (d / (2.0 * E_eps)) * tanh_term\n\n    # Integration bounds for the gap equation.\n    lower_d = max(-W / 2.0, mu - omega_D)\n    upper_d = min(W / 2.0, mu + omega_D)\n    \n    integral_delta = 0.0\n    # Perform integration only if the interval is valid.\n    if lower_d < upper_d:\n        integral_delta, _ = quad(integrand_delta, lower_d, upper_d, args=(delta, mu), epsabs=1e-11, epsrel=1e-11)\n    \n    f_delta = delta - lambda_ * integral_delta\n\n    # --- F_n equation ---\n    # F_n = nu - integral_n\n    # The number equation depends on delta^2, so using abs(delta) is robust.\n    delta_abs = abs(delta)\n    \n    # Integrand for the number equation.\n    def integrand_n(eps, d_abs, m):\n        E_eps = np.sqrt((eps - m)**2 + d_abs**2)\n        \n        if E_eps == 0.0:  # Occurs only if d_abs=0 and eps=m\n            # The limit of the term ((eps-m)/E_eps) * tanh(E_eps/...) is 0 as eps->m.\n            frac_term = 0.0\n        else:\n            tanh_term = np.tanh(E_eps / (2.0 * K_B * T))\n            frac_term = ((eps - m) / E_eps) * tanh_term\n            \n        return N0 * (1.0 - frac_term)\n    \n    # Integration for number equation over the full band.\n    # We specify mu as a point of potential discontinuity for the integrator.\n    points_of_interest = [mu] if -W / 2.0 < mu < W / 2.0 else None\n    integral_n, _ = quad(integrand_n, -W / 2.0, W / 2.0, args=(delta_abs, mu), points=points_of_interest, epsabs=1e-11, epsrel=1e-11)\n    \n    f_n = nu - integral_n\n    \n    return [f_delta, f_n]\n\ndef solve():\n    \"\"\"\n    Solves the BCS equations for each test case and prints the results.\n    \"\"\"\n    test_cases = [\n        # (W [meV], omega_D [meV], lambda, nu, T [K])\n        (200.0, 20.0, 0.3, 0.5, 5.0),    # Case A\n        (200.0, 20.0, 0.3, 0.5, 12.0),   # Case B\n        (200.0, 20.0, 0.3, 0.5, 9.5),    # Case C\n        (200.0, 20.0, 0.3, 0.3, 5.0),    # Case D\n    ]\n\n    # Initial guesses (Delta_0, mu_0) based on physical considerations.\n    initial_guesses = [\n        # T_c is approx 9.35 K. W(nu-0.5) gives mu_0 for non-half-filled cases.\n        (1.0, 0.0),      # A: T < T_c, nu=0.5 -> expect Delta > 0, mu=0\n        (0.01, 0.0),     # B: T > T_c, nu=0.5 -> expect Delta = 0, mu=0\n        (0.1, 0.0),      # C: T ~ T_c, nu=0.5 -> expect Delta small or 0, mu=0\n        (1.0, -40.0),    # D: T < T_c, nu=0.3 -> expect Delta > 0, mu=200(0.3-0.5)=-40\n    ]\n\n    results = []\n    for i, params in enumerate(test_cases):\n        x0 = initial_guesses[i]\n        \n        # Use a robust root-finding algorithm.\n        solution = root(system_equations, x0, args=params, method='hybr', tol=1e-9)\n        \n        if solution.success:\n            delta_sol = solution.x[0]\n            \n            # The physical gap parameter is non-negative.\n            # If the solver returns a small negative value, it is numerically zero.\n            if abs(delta_sol) < 1e-9:\n                delta_sol = 0.0\n            \n            # Report the magnitude of the gap.\n            results.append(abs(delta_sol))\n        else:\n            # Append NaN or handle error if solver fails, for robustness.\n            results.append(np.nan)\n\n    # Format the final output as a comma-separated list of strings,\n    # with each value rounded to 6 decimal places.\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "2415410"}]}