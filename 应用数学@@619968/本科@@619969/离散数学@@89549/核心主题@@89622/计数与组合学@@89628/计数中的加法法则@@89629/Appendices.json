{"hands_on_practices": [{"introduction": "许多计数问题可以通过将其分解为几个独立的、互不重叠的子问题来简化。这个练习是一个典型的例子，我们需要计算符合两种完全不同格式的特殊车牌的总数。通过分别计算每种类型的可能数量，然后将结果相加，你可以直接应用加法法则来解决看似复杂的问题 [@problem_id:1410901]。", "problem": "某州的机动车管理局（DMV）发放特殊牌照，其格式遵循以下两种类型之一：A型或B型。假设英文字母表有26个字母，其中元音字母集合定义为 {A, E, I, O, U}，所有其他字母定义为辅音字母。可用数字为 {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}。\n\nA型牌照由三个字母后跟两个数字组成。对于此类型，第一个字母必须是元音。对其余的字母或数字没有其他限制。\n\nB型牌照由两个字母后跟三个数字组成。对于此类型，两个字母都必须是辅音，且三个数字中的第一个不能为零。\n\n根据这些规则，可以创建多少种不同的特殊牌照？A型和B型这两种格式是互斥的类别。除非规则另有明确规定，否则字母和数字允许重复。", "solution": "我们应用基本的计数原理：乘法原理（将独立选择的数量相乘）和加法原理（将互斥情况的数量相加）。设字母数量为 $26$，元音数量为 $5$，辅音数量为 $26-5=21$，数字数量为 $10$。\n\nA型（格式 LLLDD）：第一个字母必须是元音，有 $5$ 种选择。接下来的两个字母无限制，各有 $26$ 种选择。两个数字无限制，各有 $10$ 种选择。因此，\n$$\nN_{A}=5\\cdot 26^{2}\\cdot 10^{2}.\n$$\n\nB型（格式 LLDDD）：两个字母都必须是辅音，各有 $21$ 种选择。第一个数字不能为零，有 $9$ 种选择。其余两个数字无限制，各有 $10$ 种选择。因此，\n$$\nN_{B}=21^{2}\\cdot 9\\cdot 10^{2}.\n$$\n\n由于这两种类型是互斥的，总数为\n$$\nN_{\\text{total}}=N_{A}+N_{B}=5\\cdot 26^{2}\\cdot 10^{2}+21^{2}\\cdot 9\\cdot 10^{2}\n=10^{2}\\bigl(5\\cdot 26^{2}+9\\cdot 21^{2}\\bigr).\n$$\n计算得，\n$$\n26^{2}=676,\\quad 21^{2}=441,\\quad 5\\cdot 676=3380,\\quad 9\\cdot 441=3969,\n$$\n所以\n$$\nN_{\\text{total}}=10^{2}(3380+3969)=10^{2}\\cdot 7349=734900.\n$$", "answer": "$$\\boxed{734900}$$", "id": "1410901"}, {"introduction": "在应用加法法则时，一个关键步骤是确认所考虑的集合是否真正互斥。此问题要求计算满足至少两个条件之一的任务小组的数量，这自然地引导我们思考使用加法法则甚至更具一般性的容斥原理。这个练习将促使你仔细分析问题条件，以确定两种类型的团队之间是否存在重叠，从而加深对加法法则应用前提的理解 [@problem_id:1410842]。", "problem": "一家科技公司正在从其员工中组建一个专门的任务小组。可用的人员库包括4名项目经理（PM）、7名软件工程师（SE）和5名质量保证（QA）专家。其中一名项目经理名叫David。\n\n一个任务小组必须恰好由3人组成。如果团队必须满足以下两个条件中的至少一个，可以组建多少个不同的3人任务小组：\n1. 任务小组包含David。\n2. 任务小组由一名软件工程师和两名质量保证专家组成。", "solution": "设$A$为包含David的3人团队的集合，设$B$为由一名软件工程师和两名质量保证专家组成的3人团队的集合。我们要求解$|A \\cup B|$，根据容斥原理，它等于\n$$\n|A \\cup B|=|A|+|B|-|A \\cap B|.\n$$\n总共有 $4+7+5=16$ 名员工。由于David是4名项目经理之一，包含David的团队数量可以通过从剩下的15名员工中选择另外2名成员来得到：\n$$\n|A|=\\binom{15}{2}.\n$$\n对于$B$，一个团队必须恰好有1名软件工程师和2名质量保证专家。有7名软件工程师和5名质量保证专家，所以\n$$\n|B|=\\binom{7}{1}\\binom{5}{2}.\n$$\n因为$B$中只包含软件工程师和质量保证专家，所以$B$中的任何团队都不能包含身为项目经理的David。因此，\n$$\n|A \\cap B|=0.\n$$\n所以，\n$$\n|A \\cup B|=\\binom{15}{2}+\\binom{7}{1}\\binom{5}{2}=\\frac{15 \\cdot 14}{2}+7 \\cdot \\frac{5 \\cdot 4}{2}=105+70=175.\n$$", "answer": "$$\\boxed{175}$$", "id": "1410842"}, {"introduction": "计数原理的强大之处在于其普遍性，它不仅适用于对具体物品进行计数，也适用于分析抽象的数学结构。本挑战性问题将加法法则的应用扩展到了置换领域，你需要对密码系统中的“密钥”按其循环结构进行分类和计数。在这里，判断集合是否不相交不再是简单的分类，而是需要你理解这些数学对象（如 $8$-循环和对合）的内在性质，这是一个将组合计数与抽象代数思想相结合的绝佳实践 [@problem_id:1410885]。", "problem": "一个密码系统作用于一个由8个不同基本消息组成的集合，标记为 $\\{1, 2, ..., 8\\}$。该系统中的“密钥”是这些消息的一个置换。密钥根据其轮换结构进行分类：\n- 如果一个密钥将所有8个消息排成一个单一的连续循环，则该密钥是“全循环”的。\n- 如果将一个密钥应用两次后，每个消息都返回其原始状态，则该密钥是“双稳态”的。\n- 如果一个“双稳态”密钥至少使一个消息保持不变，则它被进一步指定为“根植的”。\n\n为进行全系统安全性分析，您必须确定是全循环的或根植双稳态的唯一密钥的数量。求出这个总数。", "solution": "设密钥是这8个已标记消息上的置换。如果一个密钥是单个8-轮换，则称其为全循环的；如果它是一个对合（即其平方为恒等置换的置换），则称其为双稳态的。一个根植双稳态密钥是至少有一个不动点的对合。\n\n首先，计算全循环密钥的数量。在 $S_{8}$ 中，8-轮换的数量为\n$$\n(8-1)! = 7!.\n$$\n\n接下来，计算根植双稳态密钥的数量。一个8元集合上的对合是 $k$ 个不相交的2-轮换与 $8-2k$ 个不动点的乘积，其中 $k \\in \\{0,1,2,3,4\\}$。恰好有 $k$ 个2-轮换的对合数量为\n$$\n\\frac{8!}{2^{k}\\,k!\\,(8-2k)!},\n$$\n因为我们选择 $2k$ 个元素进行配对，然后将它们划分为 $k$ 个无序对。根植要求至少有一个不动点，所以 $8-2k \\geq 1$，即 $k \\in \\{0,1,2,3\\}$。因此，根植双稳态密钥的数量是\n$$\n\\sum_{k=0}^{3} \\frac{8!}{2^{k}\\,k!\\,(8-2k)!}\n= \\frac{8!}{8!} + \\frac{8!}{2\\cdot 6!} + \\frac{8!}{2^{2}\\cdot 2!\\cdot 4!} + \\frac{8!}{2^{3}\\cdot 3!\\cdot 2!}\n= 1 + 28 + 210 + 420 = 659.\n$$\n\n一个8-轮换的阶是8，因此它不是一个对合，所以这两个类别是不相交的。因此，全循环或根植双稳态密钥的总数为\n$$\n7! + 659 = 5040 + 659 = 5699.\n$$", "answer": "$$\\boxed{5699}$$", "id": "1410885"}]}