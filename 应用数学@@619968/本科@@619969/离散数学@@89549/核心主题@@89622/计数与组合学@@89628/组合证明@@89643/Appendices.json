{"hands_on_practices": [{"introduction": "组合学的许多问题本质上是关于分配的。经典的“隔板法”是解决此类问题的利器，但它通常用于等式约束。本练习 [@problem_id:1356638] 提出了一个更贴近现实的挑战：在资源分配总数不超过一个上限的情况下，有多少种分配方案？解决此问题的关键在于引入一个“虚拟”的接收者来吸收所有剩余的资源，从而巧妙地将不等式问题转化为我们熟悉的等式问题，这是一个优雅的双射证明的应用。", "problem": "在一个简化的内容分发网络模型中，一个由 $n$ 个相同数据对象组成的流将被缓存在一个由 $k$ 个不同区域服务器组成的序列中。该流到达第一个服务器。在每个服务器上，当前可用的数据对象中的任意数量（从零到全部）都可以存储在其缓存中。剩余的对象随后被传递到序列中的下一个服务器。在通过最后一个服务器（服务器 $k$）后，任何剩余的数据对象都将被丢弃。\n\n一个完整的“缓存配置”由元组 $(c_1, c_2, \\dots, c_k)$ 描述，其中 $c_i$ 是服务器 $i$ 缓存的数据对象的非负整数数量。确定所有可能的不同缓存配置的总数。将您的答案表示为关于 $n$ 和 $k$ 的单一闭式解析表达式。", "solution": "我们将此过程建模为将 $n$ 个相同数据对象的计数 $c_{1},\\dots,c_{k}$ 分配给 $k$ 个不同的服务器，并在服务器 $k$ 之后丢弃任何剩余对象的过程。一个有效的缓存配置是一个 $k$-元组 $(c_{1},\\dots,c_{k})$，其中 $c_{i}\\in \\mathbb{Z}_{\\ge 0}$ 且满足\n$$\n\\sum_{i=1}^{k} c_{i} \\le n.\n$$\n令 $r$ 表示最后一个服务器之后丢弃的对象数量。根据定义，\n$$\nr = n - \\sum_{i=1}^{k} c_{i}, \\quad r \\in \\mathbb{Z}_{\\ge 0}.\n$$\n这在满足 $\\sum_{i=1}^{k} c_{i} \\le n$ 的 $k$-元组 $(c_{1},\\dots,c_{k})$ 与满足\n$$\n\\sum_{i=1}^{k} c_{i} + r = n.\n$$\n的非负整数的 $(k+1)$-元组 $(c_{1},\\dots,c_{k},r)$ 之间建立了一个双射。\n因此，缓存配置的数量等于方程\n$$\nc_{1} + c_{2} + \\dots + c_{k} + r = n.\n$$\n的非负整数解的数量。\n根据隔板法，$m$ 个变量之和等于 $n$ 的非负整数解的个数为 $\\binom{n + m - 1}{m - 1}$。这里 $m = k+1$，所以总数为\n$$\n\\binom{n + (k+1) - 1}{(k+1) - 1} = \\binom{n + k}{k}.\n$$\n因此，不同缓存配置的总数为 $\\binom{n + k}{k}$。", "answer": "$$\\boxed{\\binom{n+k}{k}}$$", "id": "1356638"}, {"introduction": "除了直接构造和计数，递归思想是解决组合问题的另一条强大路径。面对一个看似复杂的问题，我们可以尝试将其分解为更小且结构相同的子问题。本练习 [@problem_id:1356611] 将引导你通过分析一个元素（例如，书架上的最后一本书）是否被选中，来构建一个递推关系。这个过程不仅能有效地解决问题，还会揭示出组合问题与著名数列（如斐波那契数列）之间深刻而有趣的联系。", "problem": "一名学生正在从一个书架上选书，书架上排成一行放着12本书，编号从1到12。这名学生很迷信，不会选择任何两本相邻的书。一个有效的选择可以包含任意数量的书，包括零本（即空集）。这名学生可以做出多少种不同的有效选择？", "solution": "设 $a_{n}$ 表示集合 $\\{1,2,\\dots,n\\}$ 中没有两个连续整数的子集的数量。考虑最后一个元素 $n$：\n- 如果不选择 $n$，则剩下的选择是 $\\{1,\\dots,n-1\\}$ 中的任意一个有效选择，贡献了 $a_{n-1}$ 种可能性。\n- 如果选择 $n$，那么 $n-1$ 就不能被选择，剩下的选择是 $\\{1,\\dots,n-2\\}$ 中的任意一个有效选择，贡献了 $a_{n-2}$ 种可能性。\n因此，对于 $n \\geq 2$，\n$$\na_{n} = a_{n-1} + a_{n-2}.\n$$\n基本情况是 $a_{0} = 1$（仅空集）和 $a_{1} = 2$（空集或 $\\{1\\}$）。这是一个带有移位的斐波那契递推关系。如果我们定义斐波那契数为 $F_{0}=0$，$F_{1}=1$，$F_{n}=F_{n-1}+F_{n-2}$，那么通过匹配基本情况可得 $a_{0}=F_{2}$ 和 $a_{1}=F_{3}$，因此通过归纳法可得\n$$\na_{n} = F_{n+2}.\n$$\n对于 $n=12$，我们得到 $a_{12} = F_{14}$。计算所需的斐波那契数，\n$$\nF_{2}=1,\\;F_{3}=2,\\;F_{4}=3,\\;F_{5}=5,\\;F_{6}=8,\\;F_{7}=13,\\;F_{8}=21,\\;F_{9}=34,\\;F_{10}=55,\\;F_{11}=89,\\;F_{12}=144,\\;F_{13}=233,\\;F_{14}=377,\n$$\n所以 $a_{12}=377$。\n\n作为直接的组合学验证，从排成一行的 $n$ 本书中选择恰好 $k$ 本不相邻的书的方法数是 $\\binom{n-k+1}{k}$，因此总数为\n$$\n\\sum_{k=0}^{6} \\binom{13-k}{k} = \\binom{13}{0}+\\binom{12}{1}+\\binom{11}{2}+\\binom{10}{3}+\\binom{9}{4}+\\binom{8}{5}+\\binom{7}{6} = 1+12+55+120+126+56+7=377,\n$$\n与斐波那契结果一致。", "answer": "$$\\boxed{377}$$", "id": "1356611"}, {"introduction": "“双重计数”是组合证明中最优雅和强大的技巧之一，其精髓在于“用两种不同的方式去数同一个集合”。本练习 [@problem_id:1356619] 表面上要求计算三个复杂的多项式系数之和，直接计算会相当繁琐。然而，通过构造一个相关的、更大的计数问题，并从两个不同的视角进行计数，我们可以得出一个简洁的恒等式，从而轻松地求得结果。这个练习完美地展示了如何通过转换视角来发现问题的简单本质。", "problem": "一家科技公司正在一个计算集群上部署一系列微服务。这些服务分为三种不同类型：A型（分析）、B型（业务逻辑）和C型（缓存）。同一类型的服务被认为是不可区分的。集群中的每个节点只能托管一个服务，集群配置由分配给节点的服务类型的唯一序列定义，这些节点排列成一条固定的、有序的线。\n\n一位初级网站可靠性工程师（Site Reliability Engineer, SRE）的任务是通过计算在以下三种不同场景下，一个拥有11个节点的集群可能的部署配置数量，来评估资源分配：\n\n*   **场景1：**部署4个A型服务，4个B型服务和3个C型服务。令 $N_1$ 为此场景下不同配置的数量。\n*   **场景2：**部署5个A型服务，3个B型服务和3个C型服务。令 $N_2$ 为此场景下不同配置的数量。\n*   **场景3：**部署5个A型服务，4个B型服务和2个C型服务。令 $N_3$ 为此场景下不同配置的数量。\n\n该SRE需要报告所有三种场景下的总配置数，即总和 $N_{total} = N_1 + N_2 + N_3$。请不要分别计算 $N_1$、$N_2$ 和 $N_3$ 再求和，而是通过构建并解决一个单一的、等价的计数问题来找出 $N_{total}$ 的值。$N_{total}$ 的数值是多少？", "solution": "我们要求解的总数是 $N_{total} = N_1 + N_2 + N_3$，其中：\n- $N_1$ 是由4个A、4个B、3个C构成的11节点序列的数量，即多项式系数 $\\binom{11}{4,4,3} = \\frac{11!}{4!4!3!}$。\n- $N_2$ 是由5个A、3个B、3个C构成的11节点序列的数量，即 $\\binom{11}{5,3,3} = \\frac{11!}{5!3!3!}$。\n- $N_3$ 是由5个A、4个B、2个C构成的11节点序列的数量，即 $\\binom{11}{5,4,2} = \\frac{11!}{5!4!2!}$。\n\n直接计算这些值并相加是可行的，但问题要求我们通过构建一个单一的等价计数问题来求解。\n\n考虑一个更大的、相关的计数问题：在一个拥有12个节点的集群上，部署5个A型服务、4个B型服务和3个C型服务，有多少种不同的配置？这个数量由多项式系数给出：\n$$ N_{larger} = \\binom{12}{5,4,3} = \\frac{12!}{5!4!3!} $$\n\n现在，我们用组合论证（分而治之）来从另一个角度计算 $N_{larger}$。考虑这12个节点中的最后一个节点（第12号节点）。该节点上的服务类型只有三种可能：\n1.  **第12个节点是A型服务**：那么剩下的11个节点必须由4个A型、4个B型和3个C型服务填充。这正好是场景1的配置数量，即 $N_1$。\n2.  **第12个节点是B型服务**：那么剩下的11个节点必须由5个A型、3个B型和3个C型服务填充。这正好是场景2的配置数量，即 $N_2$。\n3.  **第12个节点是C型服务**：那么剩下的11个节点必须由5个A型、4个B型和2个C型服务填充。这正好是场景3的配置数量，即 $N_3$。\n\n由于这三种情况是互斥且穷尽了所有可能性，根据加法原理，总配置数 $N_{larger}$ 必须等于这三种情况之和。因此，我们得到了一个恒等式：\n$$ N_1 + N_2 + N_3 = \\binom{12}{5,4,3} $$\n这个恒等式是多项式系数的帕斯卡法则的一个实例。\n\n所以，我们要求的总和 $N_{total}$ 就等于这个单一的多项式系数的值。现在我们计算这个值：\n$$\nN_{total} = \\frac{12!}{5! \\cdot 4! \\cdot 3!} = \\frac{479,001,600}{120 \\cdot 24 \\cdot 6} = \\frac{479,001,600}{17,280} = 27720.\n$$", "answer": "$$\\boxed{27720}$$", "id": "1356619"}]}