{"hands_on_practices": [{"introduction": "我们从一个基础练习开始，这个练习将帮助你巩固带重复元素排列的核心原理。我们将把基本公式应用到一个计算材料科学的场景中，计算在一个假设的分子中排列原子的不同方式。通过这个练习 [@problem_id:1391257]，你将能熟练掌握多项式系数的直接应用，为解决更复杂的问题打下坚实的基础。", "problem": "在计算材料科学领域，研究人员正在研究一种新合成的分子“Flexamine”，该分子在下一代柔性电子学领域显示出应用前景。单个 Flexamine 分子的分子式确定为 $C_8H_{12}N_4Si_2$。在一个简化的模拟中，该分子被建模为其组成原子的一维链。你的任务是确定使用一个 Flexamine 分子中的所有原子可以形成的不同线性序列的总数。当且仅当两个序列在一个或多个位置上的原子类型不同时，它们才被认为是不同的。计算此类不同序列的确切总数。", "solution": "问题要求计算一个分子式为 $C_8H_{12}N_4Si_2$ 的 Flexamine 分子中，其原子可以形成的不同线性序列的数量。这是一个多重集排列的计数问题。\n\n首先，我们确定分子中的原子总数，该总数对应于线性序列中的位置总数。设此总数为 $n$。\n每种原子的数量如下：\n- 碳 (C)：$n_C = 8$\n- 氢 (H)：$n_H = 12$\n- 氮 (N)：$n_N = 4$\n- 硅 (Si)：$n_{Si} = 2$\n\n原子总数是各种元素数量之和：\n$$ n = n_C + n_H + n_N + n_{Si} = 8 + 12 + 4 + 2 = 26 $$\n\n对于有 $n$ 个对象，若其中有 $k$ 种不同的对象，其数量分别为 $n_1, n_2, \\dots, n_k$，则其不同排列的数量由多项式系数公式给出：\n$$ N = \\frac{n!}{n_1! n_2! \\cdots n_k!} $$\n\n在本例中，该公式可写为：\n$$ N = \\frac{26!}{8! \\cdot 12! \\cdot 4! \\cdot 2!} $$\n\n为计算此值，我们可以展开阶乘并进行化简。我们可从展开分子中最大的阶乘 $26!$ 开始，直到遇到分母中最大的阶乘 $12!$：\n$$ N = \\frac{26 \\times 25 \\times 24 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 16 \\times 15 \\times 14 \\times 13 \\times 12!}{8! \\cdot 12! \\cdot 4! \\cdot 2!} $$\n\n我们可以约掉 $12!$ 项：\n$$ N = \\frac{26 \\times 25 \\times 24 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 16 \\times 15 \\times 14 \\times 13}{8! \\cdot 4! \\cdot 2!} $$\n\n现在，计算分母中剩余的阶乘：$4! = 4 \\times 3 \\times 2 \\times 1 = 24$ 且 $2! = 2 \\times 1 = 2$。\n$$ N = \\frac{26 \\times 25 \\times 24 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 16 \\times 15 \\times 14 \\times 13}{8! \\cdot 24 \\cdot 2} $$\n分子中的 $24$ 与分母中的 $4! = 24$ 相互抵消：\n$$ N = \\frac{26 \\times 25 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 16 \\times 15 \\times 14 \\times 13}{8! \\cdot 2} $$\n接下来可以进一步简化，例如：\n$8! = 40320$\n$8! \\cdot 2 = 80640$\n$16/ (8 \\cdot 2) = 1$\n因此，我们可以将分子中的 $16$ 与分母中的 $8 \\cdot 2$ 抵消。\n$$ N = 26 \\times 25 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 15 \\times 14 \\times 13 \\times \\frac{1}{8!/16} $$\n一个更简单的化简方式是：\n$$ N = \\frac{26 \\times 25 \\times 23 \\times 22 \\times 21 \\times 20 \\times 19 \\times 18 \\times 17 \\times 16 \\times 15 \\times 14 \\times 13}{40320 \\times 24 \\times 2} $$\n让我们重新进行简化计算以确保准确性。\n$$ N = \\frac{26!}{8!12!4!2!} $$\n计算结果为 435,031,096,500。\n我们验证在solution中提出的简化步骤：\n$ N = \\frac{26 \\times 25 \\times 23 \\times 22 \\times 21 \\times 19 \\times 17 \\times 16 \\times 15 \\times 13 \\times (20 \\times 18 \\times 14)}{8! \\times 2} $\n$ 20 \\times 18 \\times 14 = 5040 = 7! $\n$ 8! = 8 \\times 7! $\n所以 $N = \\frac{26 \\times ... \\times 13 \\times 7!}{8 \\times 7! \\times 2} = \\frac{26 \\times ... \\times 13}{16}$\n其中的 $16$ 与分子中的 $16$ 相抵消。\n所以 $N = 26 \\times 25 \\times 23 \\times 22 \\times 21 \\times 19 \\times 17 \\times 15 \\times 13$\n$26 \\times 25 = 650$\n$23 \\times 22 = 506$\n$21 \\times 19 = 399$\n$17 \\times 15 = 255$\n$255 \\times 13 = 3315$\n$N = 650 \\times 506 \\times 399 \\times 3315$\n$650 \\times 506 = 328900$\n$399 \\times 3315 = 1322685$\n$N = 328900 \\times 1322685 = 435031096500$。\n计算过程是正确的。\n\n不同线性序列的总数是 435,031,096,500。", "answer": "$$\\boxed{435031096500}$$", "id": "1391257"}, {"introduction": "在掌握了基本原理之后，这个练习引入了一层额外的复杂性：固定位置约束。在许多现实世界的应用中，例如设计序列号或密码密钥，都会遇到这类限制条件。这个实践 [@problem_id:1391246] 将教你如何系统地处理这些固定元素，将问题简化为对剩余可变部分的排列计数，从而提高你解决实际问题的能力。", "problem": "一家名为ProGen的公司为其先进的微控制器设计了一个生成唯一序列号的系统。每个序列号是一个由13个字符组成的序列。根据批量生产协议，每个有效的序列号都必须由一组特定字符排列而成：五个数字'8'，四个字母'X'和四个字母'Z'。此外，为了进行质量控制追踪，每个序列号都必须以字母'X'开头，并以数字'8'结尾。在这些规则下，可以生成多少个不同的有效序列号？", "solution": "我们需要将一个包含五个$8$、四个$X$和四个$Z$的多重集排列成一个长度为13的序列，并附加约束条件：第一个字符是$X$，最后一个字符是$8$。\n\n将第一个字符固定为$X$，最后一个字符固定为$8$。这会从可用的多重集中用掉一个$X$和一个$8$。需要在中间$11$个位置上排列的剩余多重集包含四个$8$、三个$X$和四个$Z$。\n\n排列一个总共有$n$个项目且各元素重复数分别为$n_{1}, n_{2}, \\dots$的多重集所形成的不同序列的数量，由多项式系数公式给出\n$$\n\\frac{n!}{n_{1}!\\,n_{2}!\\,\\cdots}.\n$$\n在这里，$n=11$，各元素的重复数分别为$4$（对于$8$），$3$（对于$X$）和$4$（对于$Z$）。因此，有效序列号的数量为\n$$\n\\frac{11!}{4!\\,3!\\,4!}.\n$$\n计算该值：\n$$ \\frac{11!}{4! \\cdot 3! \\cdot 4!} = \\frac{39916800}{24 \\cdot 6 \\cdot 24} = \\frac{39916800}{3456} = 11550 $$", "answer": "$$\\boxed{11550}$$", "id": "1391246"}, {"introduction": "最后的这个练习将挑战你处理一类更复杂且常见的约束：非邻接要求。我们将探索一种强大的组合技巧，用来解决如何排列元素，以确保某些相同类型的元素永远不相邻的问题。掌握这种通常被称为“插空法”的策略 [@problem_id:1391230]，对于解决各种高级计数问题至关重要，它能极大地扩展你的解题工具箱。", "problem": "在一个数字信号处理系统中，一种特定类型的信息包被构造成一个脉冲序列。每个信息包的长度恰好为12个脉冲。这些脉冲取自一个包含三种不同类型的字母表：阿尔法（`α`）、贝塔（`β`）和伽马（`γ`）。\n\n一个有效的信息包必须使用一个特定的脉冲多重集来构建，该多重集恰好包含3个`α`脉冲、4个`β`脉冲和5个`γ`脉冲。然而，由于硬件限制导致信号干扰，序列中任意两个`β`脉冲不能处于相邻位置。\n\n在这些规则下，可以形成多少个不同的有效信息包？", "solution": "设这三种脉冲类型用字母表示：A型代表阿尔法，B型代表贝塔，C型代表伽马。信息包必须恰好包含3个A型、4个B型和5个C型脉冲，总长度为12，且任意两个B型脉冲不相邻。\n\n我们可以使用“插空法”来解决这个问题。首先，排列那些没有邻接限制的脉冲，即3个A型和5个C型脉冲。这些脉冲共有 $3+5=8$ 个。\n这8个脉冲排列起来，会形成 $8+1=9$ 个可供插入B型脉冲的“空隙”（包括序列的两端）。\n$$ \\text{_ (A/C) _ (A/C) _ (A/C) _ (A/C) _ (A/C) _ (A/C) _ (A/C) _ (A/C) _} $$\n为了确保B型脉冲不相邻，我们必须从这9个空隙中选择4个不同的空隙来放置4个B型脉冲。选择空隙的方法数是组合数：\n$$ \\binom{9}{4} $$\n接下来，我们需要计算排列3个A型和5个C型脉冲的方法数。这是一个带重复元素的排列问题：\n$$ \\frac{8!}{3!5!} = \\binom{8}{3} $$\n根据乘法原理，有效信息包的总数是这两部分的乘积：\n$$ \\text{总数} = \\binom{9}{4} \\times \\binom{8}{3} $$\n计算这些值：\n$$ \\binom{9}{4} = \\frac{9 \\times 8 \\times 7 \\times 6}{4 \\times 3 \\times 2 \\times 1} = 9 \\times 2 \\times 7 = 126 $$\n$$ \\binom{8}{3} = \\frac{8 \\times 7 \\times 6}{3 \\times 2 \\times 1} = 8 \\times 7 = 56 $$\n所以，总数为：\n$$ 126 \\times 56 = 7056. $$", "answer": "$$\\boxed{7056}$$", "id": "1391230"}]}