{"hands_on_practices": [{"introduction": "判断一个图是否具有哈密顿回路是一个著名的难题。我们可能会想，是否能通过一些简单、易于计算的属性（如图的度序列）来找到捷径。本练习将挑战这一想法，要求你找出两个度序列完全相同，但一个有哈密顿回路而另一个没有的图，从而证明哈密顿性取决于图的具体连接结构，而不仅仅是顶点的局部信息。[@problem_id:1373357]", "problem": "在图论中，一个顶点的度是与它相连的边的数量，而一个图的度序列是其所有顶点度的列表。哈密顿回路是图中的一个闭合回路，它恰好访问每个顶点一次，并返回到起始顶点。\n\n两个非同构的简单图有时可以共享完全相同的度序列，但表现出不同的性质。考虑下面的四对简单图，$(G_A, H_A)$、$(G_B, H_B)$、$(G_C, H_C)$ 和 $(G_D, H_D)$。每个图由其顶点集 $V$ 和边集 $E$ 定义。\n\n找出哪一对 $(G_i, H_i)$ 同时满足以下所有三个条件：\n1. 图 $G_i$ 和图 $H_i$ 具有相同的度序列。\n2. 图 $G_i$ 包含一个哈密顿回路。\n3. 图 $H_i$ 不包含哈密顿回路。\n\n**A.**\n$G_A$: $V = \\{1, 2, 3, 4, 5\\}$, $E = \\{(1,2), (2,3), (3,4), (4,5), (5,1), (1,3)\\}$\n$H_A$: $V = \\{a, b, c, d, e\\}$, $E = \\{(a,c), (b,c), (d,c), (a,e), (b,e), (d,e)\\}$\n\n**B.**\n$G_B$: $V = \\{1, 2, 3, 4, 5\\}$, $E = \\{(1,2), (2,3), (3,4), (4,5), (5,1), (1,3)\\}$\n$H_B$: $V = \\{u, v, w, x, y\\}$, $E = \\{(u,v), (v,w), (w,x), (x,y), (y,u)\\}$\n\n**C.**\n$G_C$: $V = \\{a, b, c, d, e\\}$, $E = \\{(a,c), (b,c), (d,c), (a,e), (b,e), (d,e)\\}$\n$H_C$: $V = \\{p, q, r, s, t\\}$, $E = \\{(p,r), (q,r), (s,r), (p,t), (q,t), (s,t)\\}$\n\n**D.**\n$G_D$: $V = \\{a, b, c, d, e\\}$, $E = \\{(a,c), (b,c), (d,c), (a,e), (b,e), (d,e)\\}$\n$H_D$: $V = \\{1, 2, 3, 4, 5\\}$, $E = \\{(1,2), (2,3), (3,4), (4,5), (5,1), (1,3)\\}$", "solution": "我们根据这三个条件检查每一对 $(G_{i}, H_{i})$。\n\nA 对：\n对于 $G_{A}$，其顶点集为 $V=\\{1,2,3,4,5\\}$，边集为 $E=\\{(1,2),(2,3),(3,4),(4,5),(5,1),(1,3)\\}$：\n- 度：$\\deg(1)=3$（与 $2,3,5$ 相邻），$\\deg(2)=2$（与 $1,3$ 相邻），$\\deg(3)=3$（与 $2,4,1$ 相邻），$\\deg(4)=2$（与 $3,5$ 相邻），$\\deg(5)=2$（与 $4,1$ 相邻）。\n- 度序列（排序后）为 $\\{3,3,2,2,2\\}$。\n- 它包含一个由 5-圈 $(1,2,3,4,5,1)$ 构成的哈密顿回路。\n\n对于 $H_{A}$，其顶点集为 $V=\\{a,b,c,d,e\\}$，边集为 $E=\\{(a,c),(b,c),(d,c),(a,e),(b,e),(d,e)\\}$：\n- 这是完全二分图 $K_{3,2}$，其两部分别为 $\\{a,b,d\\}$ 和 $\\{c,e\\}$。\n- 度：$\\deg(c)=3$，$\\deg(e)=3$，以及 $\\deg(a)=\\deg(b)=\\deg(d)=2$，因此度序列为 $\\{3,3,2,2,2\\}$，与 $G_{A}$ 匹配。\n- 二分图中的任何圈都具有偶数长度。由于 $|V|=5$，$H_{A}$ 不可能有一个哈密顿回路。因此，$H_{A}$ 没有哈密顿回路。\n\n因此，A 对满足所有三个条件。\n\nB 对：\n$G_{B}$ 与 $G_{A}$ 相同，所以其度序列为 $\\{3,3,2,2,2\\}$。$H_{B}$ 是 5-圈 $C_{5}$，其边集为 $\\{(u,v),(v,w),(w,x),(x,y),(y,u)\\}$，因此所有顶点的度均为 2，度序列为 $\\{2,2,2,2,2\\}$。度序列不匹配，所以 B 对不满足条件 1。\n\nC 对：\n$G_{C}$ 和 $H_{C}$ 都同构于 $K_{3,2}$，因此它们都具有度序列 $\\{3,3,2,2,2\\}$，但出于与上述相同的二分性原因，两者都没有哈密顿回路。因此 C 对不满足条件 2。\n\nD 对：\n$G_{D}$ 是 $K_{3,2}$ 且没有哈密顿回路，而 $H_{D}$ 与 $G_{A}$ 相同，确实有哈密顿回路。要求是 $G_{i}$ 有哈密顿回路而 $H_{i}$ 没有，所以 D 对不满足所指定方向的条件 2 和 3。\n\n只有 A 对同时满足所有三个条件。", "answer": "$$\\boxed{A}$$", "id": "1373357"}, {"introduction": "从理论上的回路存在性问题转向实际应用，我们常常希望找到最短的路径，正如旅行商问题（Traveling Salesperson Problem）一样。最近邻算法是解决此类问题的一种直观的“贪心”启发式方法。本练习将让你亲手应用此算法，并将其结果与真正的最优解进行比较，揭示一个重要教训：简单的启发式算法并不总能保证得到最佳结果。[@problem_id:1373387]", "problem": "一家电信公司正在设计一个光纤网络，以连接位于A、B、C、D四个点的主要数据中心。目标是创建一个通过每个中心一次且仅一次的单一闭合回路（哈密顿回路）。在任意两个中心之间铺设直连光缆的成本（以任意单位计）如下表所示。\n\n| 点对 | 成本 |\n| :--- | :--- |\n| A-B  | 3    |\n| A-C  | 1    |\n| A-D  | 12   |\n| B-C  | 2    |\n| B-D  | 11   |\n| C-D  | 10   |\n\n为了确定路线，规划团队使用了一种称为最近邻（NN）算法的启发式方法。NN算法的步骤如下：\n1. 选择一个起始中心。\n2. 从当前中心出发，沿着成本最低的边行进到一个未访问过的中心。\n3. 重复步骤2，直到所有中心都被访问过。\n4. 最后，从最后一个访问的中心返回到起始中心，以闭合回路。\n\n一位工程师的任务是从中心A开始运行此算法。你需要分析其结果。\n\n计算从中心A开始，通过NN算法找到的哈密顿回路的总成本，我们称之为 $C_{NN}$。然后，确定真正的最优（成本最低）哈密顿回路的成本，我们称之为 $C_{opt}$。\n\n将你的最终答案表示为一个有序整数对 $(C_{NN}, C_{opt})$。", "solution": "设 $c(X,Y)$ 表示中心 $X$ 和 $Y$ 之间边的给定成本。\n\n从 $A$ 开始的最近邻（NN）算法：\n- 步骤1：从 $A$ 出发，在 $\\{c(A,B)=3,\\ c(A,C)=1,\\ c(A,D)=12\\}$ 中选择成本最低的边。最小值是到 $C$ 的边，所以选择路径 $A \\to C$，成本为 $1$。\n- 步骤2：从 $C$ 出发，在未访问的中心 $\\{B,D\\}$ 中，从 $\\{c(C,B)=2,\\ c(C,D)=10\\}$ 中选择成本最低的边。最小值是到 $B$ 的边，所以选择路径 $C \\to B$，成本为 $2$。\n- 步骤3：从 $B$ 出发，唯一未访问的中心是 $D$，所以选择路径 $B \\to D$，成本为 $11$。\n- 步骤4：返回起点以闭合回路：$D \\to A$，成本为 $12$。\n\n因此，NN算法找到的路径是 $A \\to C \\to B \\to D \\to A$，总成本为\n$$\nC_{NN} = 1 + 2 + 11 + 12 = 26.\n$$\n\n最优哈密顿回路 $C_{opt}$：\n枚举从 $A$ 开始的不同路径（不考虑反向对称性）并计算它们的成本：\n- $A \\to B \\to C \\to D \\to A$：成本 $c(A,B)+c(B,C)+c(C,D)+c(D,A)=3+2+10+12=27$。\n- $A \\to B \\to D \\to C \\to A$：成本 $3+11+10+1=25$。\n- $A \\to C \\to B \\to D \\to A$：成本 $1+2+11+12=26$。\n\n因此，最小成本是\n$$\nC_{opt} = 25.\n$$\n\n因此，有序对是 $\\left(C_{NN}, C_{opt}\\right) = \\left(26, 25\\right)$。", "answer": "$$\\boxed{\\begin{pmatrix} 26 & 25 \\end{pmatrix}}$$", "id": "1373387"}, {"introduction": "哈密顿回路问题在计算上是困难的（NP完全问题）。这个思想实验将引入计算复杂性理论中的一个强大概念：自归约（self-reduction）。通过假设你拥有一个能立即解决“判定”问题（是否存在哈密顿回路？）的“神谕机”，你将设计一个算法来解决“搜索”问题（这个回路是什么？），从而揭示“知其然”（知道解是否存在）与“知其所以然”（找到解本身）之间的深刻联系。[@problem_id:1457285]", "problem": "你是一名计算机科学家，任务是分析网络拓扑。你有一个特殊的子程序，我们称之为`HC_Oracle`。这个预言机接收任意无向图 $G$ 的描述作为输入，并返回一个布尔值：如果图包含哈密顿回路，则返回`True`，否则返回`False`。哈密顿回路是图中的一条路径，它恰好访问每个顶点一次，然后返回到起始顶点。\n\n你的目标是设计一个通用算法，利用这个 `HC_Oracle` 在给定图中找出一个哈密顿回路的实际边序列，前提是假设至少存在一个这样的回路。你的算法必须保证对任何图都有效。\n\n考虑你的算法性能的最坏情况。对于一个恰好有 $n=20$ 个顶点的任意无向图，你需要调用 `HC_Oracle` 的最大次数是多少，才能找到一个完整的哈密顿回路，或者在一开始就确定不存在哈密顿回路？", "solution": "我们给定一个预言机 `HC_Oracle`，它可以判断一个无向图是否含有哈密顿回路。我们必须设计一个算法，利用该预言机来 (i) 在哈密顿回路存在时找出一个，或 (ii) 证明其不存在。同时，我们必须确定对于有 $n=20$ 个顶点的图，在最坏情况下调用预言机的次数上限。\n\n算法（通过删边进行自归约）：\n1. 在 $G$ 上调用 `HC_Oracle`。如果返回 `False`，则 $G$ 没有哈密顿回路，算法结束。\n2. 否则，令 $H \\leftarrow G$。按任意固定顺序遍历 $H$ 的边 $e \\in E(H)$。对于当前的边 $e$，在图 $H-e$ 上查询 `HC_Oracle`：\n   - 如果 `HC_Oracle(H-e)` 返回 `True`，则令 $H \\leftarrow H-e$ (边 $e$ 是可删除的，因为删除它之后仍然存在某个哈密顿回路)。\n   - 如果 `HC_Oracle(H-e)` 返回 `False`，则保留 $e$ (边 $e$ 是必要的：$H$ 中的每个哈密顿回路都使用 $e$)。\n3. 继续此过程，直到遍历中的所有边都已处理。输出 $H$ 中包含的唯一的哈密顿回路。\n\n正确性：\n- 初始的预言机调用确保了在没有哈密顿回路时，算法能立即终止并给出正确答案。\n- 如果初始答案为 `True`，我们只在预言机确认哈密顿回路仍然存在时才删除边，因此 $H$ 始终含有一个哈密顿回路。\n- “边 $e$ 是必要的”这一性质在进一步删边操作下是单调的：如果 $H-e$ 没有哈密顿回路，那么任何子图 $H' \\subseteq H$ 也满足 $H'-e$ 没有哈密顿回路，因为删除边不可能创造出哈密顿回路。因此，在对所有边进行一轮遍历后，所有不可删除的边仍然是必要的，并且之后不再需要重新测试。\n- 我们在一轮遍历后停止。最终的 $H$ 是 $G$ 的一个包含哈密顿回路的（关于删边操作）最小子图。在这种最小子图中，每条边都是必要的；如果它有多于 $n$ 条边，那么没有哈密顿回路可以包含所有边，因此至少有一条边是不必要的，这与最小性相矛盾。因此 $|E(H)|=n$，并且 $H$ 恰好是一个哈密顿回路，这个回路可以通过遍历这个2-正则连通生成子图来读出。\n\n预言机调用复杂度：\n- 一次初始调用以判断存在性。\n- 然后，在最坏情况下，我们在单次遍历中对每条边最多测试一次。设 $m=|E(G)|$。遍历过程中的预言机调用次数最多为 $m$（每次测试调用一次，且我们不重复测试边）。\n- 因此，在最坏情况下，预言机调用的总次数是\n$$\n1 + m.\n$$\n对于一个有 $n$ 个顶点的无向简单图，最大边数为\n$$\nm_{\\max}=\\binom{n}{2}。\n$$\n因此，对于 $n=20$，\n$$\nm_{\\max}=\\binom{20}{2}=\\frac{20 \\cdot 19}{2}=190,\n$$\n并且最坏情况下的预言机调用次数是\n$$\n1 + \\binom{20}{2} = 191。\n$$\n\n这个界是紧确的：在存在哈密顿回路的情况下，对于一个最大密度的图，算法可能需要尝试删除每一条边一次，才能将其简化为单个哈密顿回路，此外还有一次初始的存在性检查。在不存在哈密顿回路的情况下，算法只使用初始调用，但问题要求的是所有图中的最大值，这个最大值在哈密顿回路存在且图尽可能稠密时达到。", "answer": "$$\\boxed{191}$$", "id": "1457285"}]}