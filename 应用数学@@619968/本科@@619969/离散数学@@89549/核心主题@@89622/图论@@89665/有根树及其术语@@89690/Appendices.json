{"hands_on_practices": [{"introduction": "在计算机科学中，为了提高效率，树结构常使用数组来表示。第一个练习将让你亲手实践父节点数组表示法，这是一种常见且实用的方法[@problem_id:1397558]。通过计算每个节点的深度并最终得出一个“层次不平衡指数”，你将巩固自己以编程方式遍历树形结构的能力。", "problem": "在一个分层数据处理系统的设计中，一个由 $n$ 个节点（索引从 $0$ 到 $n-1$）组成的网络被结构化为一棵有根树。任何非根节点 $i$ 的父节点由 $P[i]$ 给出，而唯一的根节点 $r$ 则由特定值 $P[r] = -1$ 标识。\n\n节点的“深度”定义为从根节点到该节点的唯一路径上的边数。因此，根节点本身的深度为 $0$。\n\n该网络的一个关键性能指标，称为“层次不平衡指数”($I$)，定义为系统中所有节点深度的平方和。也就是说，如果 $d(i)$ 是节点 $i$ 的深度，则该指数由 $I = \\sum_{i=0}^{n-1} [d(i)]^2$ 给出。\n\n考虑一个包含 $n=12$ 个节点的系统。其树形结构由父节点数组 $P$ 指定：\n$P = [1, 4, 10, 1, -1, 3, 7, 9, 9, 4, 4, 8]$\n\n计算该系统的层次不平衡指数。", "solution": "给定一棵有根树，其节点索引为 $0$ 到 $11$，父节点数组为 $P$。其中，根节点 $r$ 是满足 $P[r] = -1$ 的唯一索引。由 $P[4] = -1$ 可知根节点为 $r=4$，因此 $d(4)=0$。对于任何非根节点 $i$，其深度满足递推关系 $d(i) = d(P[i]) + 1$。\n\n使用 $P = [1, 4, 10, 1, -1, 3, 7, 9, 9, 4, 4, 8]$:\n- 节点 $4$ 的子节点是 $1, 9, 10$；因此 $d(1)=1$，$d(9)=1$，$d(10)=1$。\n- 接着：\n$$d(0) = d(1)+1 = 2,\\quad d(3) = d(1)+1 = 2,$$\n$$d(2) = d(10)+1 = 2,$$\n$$d(7) = d(9)+1 = 2,\\quad d(8) = d(9)+1 = 2,$$\n$$d(5) = d(3)+1 = 3,\\quad d(6) = d(7)+1 = 3,\\quad d(11) = d(8)+1 = 3.$$\n\n汇总各节点深度：\n$$d(4)=0,$$\n$$d(1)=d(9)=d(10)=1,$$\n$$d(0)=d(2)=d(3)=d(7)=d(8)=2,$$\n$$d(5)=d(6)=d(11)=3.$$\n\n层次不平衡指数为 $I = \\sum_{i=0}^{11} d(i)^{2}$。按深度分组：\n- 深度为 $0$ 的节点有一个：贡献为 $0$。\n- 深度为 $1$ 的节点有三个：贡献为 $3 \\cdot 1^{2} = 3$。\n- 深度为 $2$ 的节点有五个：贡献为 $5 \\cdot 2^{2} = 20$。\n- 深度为 $3$ 的节点有三个：贡献为 $3 \\cdot 3^{2} = 27$。\n\n因此，\n$$I = 0 + 3 + 20 + 27 = 50.$$", "answer": "$$\\boxed{50}$$", "id": "1397558"}, {"introduction": "树的许多重要性质可以从简单的定理中推导出来，这些定理为解决问题提供了强大的捷径。本练习将展示满二叉树中内部节点和叶子节点之间的基本关系如何直接应用于涉及资源分配和成本分析的实际场景[@problem_id:1397591]。这凸显了抽象图论概念在现实世界中的实用价值。", "problem": "一家科技公司使用一种特定的层级数据结构来组织其分布式计算任务。该结构被建模为一棵有根树，其中每个节点代表一个任务。在这棵树中，如果一个节点至少有一个子节点，则称其为**内部节点**；如果没有子节点，则称其为**叶节点**。公司的设计要求这棵树必须是一棵**满二叉树**，即树中的每个节点要么没有子节点，要么恰好有两个子节点。\n\n这些任务在两种不同类型的虚拟机上运行。执行计算和路由的内部节点在“处理”型机器上运行。代表最终输出或数据存储点的叶节点在“存储”型机器上运行。一台“处理”型机器的每日运营成本为350美元，一台“存储”型机器的每日运营成本为120美元。\n\n如果该数据结构被设计为恰好有125个内部节点，那么运行整个任务树所需的所有机器的每日总运营成本是多少？请用美元作答。", "solution": "该问题要求计算一个被建模为满二叉树的层级任务结构的每日总运营成本。该成本由内部节点和叶节点的数量决定。\n\n首先，我们根据问题陈述中给出的信息来定义变量：\n- 令 $I$ 为内部节点的数量。已知 $I = 125$。\n- 令 $L$ 为叶节点的数量。这个值目前是未知的。\n- 令 $C_P$ 为一个内部节点所用的“处理”型机器的成本。已知 $C_P = 350$ 美元。\n- 令 $C_S$ 为一个叶节点所用的“存储”型机器的成本。已知 $C_S = 120$ 美元。\n\n每日总运营成本，我们称之为 $C_{\\text{total}}$，可以表示为所有内部节点和所有叶节点成本的总和：\n$$C_{\\text{total}} = (I \\times C_P) + (L \\times C_S)$$\n\n为了求出 $C_{\\text{total}}$，我们首先需要确定 $L$ 的值。问题中说明该树是一棵**满二叉树**。对于任何非空的满二叉树，内部节点数（$I$）和叶节点数（$L$）之间存在一个基本关系。这个关系是 $L = I + 1$。\n\n我们可以如下推导这个性质。设 $n$ 为树中节点的总数。根据定义，每个节点要么是内部节点，要么是叶节点，所以 $n = I + L$。\n另一种计算节点数的方法是考虑父子关系。树中的每个节点，除了根节点外，都有且仅有一个父节点。因此，树中子节点的总数为 $n-1$。\n在满二叉树中，只有内部节点有子节点，并且每个内部节点恰好有两个子节点。所以，子节点的总数也可以表示为 $2 \\times I$。\n通过令这两个关于子节点总数的表达式相等，我们得到：\n$$n - 1 = 2I$$\n现在，我们将 $n = I + L$ 代入这个方程：\n$$(I + L) - 1 = 2I$$\n两边同时减去 $I$ 可得：\n$$L - 1 = I$$\n$$L = I + 1$$\n这证实了对于任何非空满二叉树该关系都成立。\n\n现在我们可以用这个关系来求出我们特定树中的叶节点数量。已知 $I = 125$：\n$$L = 125 + 1 = 126$$\n\n所以，该数据结构有125个内部节点和126个叶节点。我们现在可以使用成本公式来计算每日总成本：\n$$C_{\\text{total}} = (I \\times C_P) + (L \\times C_S)$$\n代入已知值：\n$$C_{\\text{total}} = (125 \\times 350) + (126 \\times 120)$$\n\n我们来分别计算每一部分：\n内部节点的成本：\n$$125 \\times 350 = 43750$$\n叶节点的成本：\n$$126 \\times 120 = 15120$$\n\n最后，将这些成本相加得到总成本：\n$$C_{\\text{total}} = 43750 + 15120 = 58870$$\n\n整个任务树的每日总运营成本为58870美元。问题要求以美元作答，所以数值是58870。", "answer": "$$\\boxed{58870}$$", "id": "1397591"}, {"introduction": "理解树的高度 $h$、总顶点数 $N$ 和叶子数 $L$ 之间的关系，对于设计高效的层次化数据结构至关重要。最后一个练习将挑战你思考结构优化问题[@problem_id:1397568]。通过确定在给定大小和高度下，一棵树可能拥有的最大叶子数，你将探索支配树形结构的各种权衡因素。", "problem": "在数据科学领域，层次数据通常使用一种称为有根树的结构进行建模。这种树的属性的形式化定义如下：\n\n- **有根树**是由称为**顶点**的节点集合以及连接它们的有向**边**组成的，其中有一个特别指定的顶点称为**根**，并且对于其他每个顶点，都有一条从根到它的唯一边路径。\n- 如果存在一条从顶点 $u$ 到顶点 $v$ 的边，则 $u$ 称为 $v$ 的**父节点**，$v$ 称为 $u$ 的**子节点**。\n- 没有子节点的顶点称为**叶节点**。至少有一个子节点的顶点称为**内部顶点**。\n- 顶点的**层级**是指从根到该顶点的唯一路径上的边数。根的层级为0。\n- 有根树的**高度**是树中所有顶点的层级的最大值。\n\n考虑一棵特定的有根树，已知其恰好有20个顶点且高度为5。这棵树最多可能有多少个叶节点？", "solution": "设 $N$ 为顶点总数，$h$ 为高度，$L$ 为叶节点数量，$I$ 为内部顶点数量。对于任意有根树，有\n$$\nN = L + I.\n$$\n给定 $h=5$，从根到某个顶点必须存在一条长度为5的路径，即树中存在层级为 $0,1,2,3,4,5$ 的顶点。层级为 $0$到$4$的顶点每个都至少有一个子节点（即路径上的下一个顶点），因此它们都是内部顶点。因此，\n$$\nI \\geq 5.\n$$\n当 $N=20$ 时，这意味着\n$$\nL = N - I \\leq 20 - 5 = 15.\n$$\n为了证明这个上界是可达的，我们可以构造一棵树：首先构造一条从根开始的长度为5的路径（包含层级为$0$到$5$的顶点），这会使用6个顶点。其中，层级为$0$到$4$的顶点是内部顶点，层级为$5$的顶点是一个叶节点。将剩余的 $20 - 6 = 14$ 个顶点均作为子节点附加到层级为$0$到$4$的任意一个内部顶点上（例如，全部附加到层级为$4$的顶点上）。这些新添加的顶点都是叶节点，其层级最多为5，因此树的高度保持为5，并且除了原有的5个内部顶点外，没有产生新的内部顶点。这样，就实现了 $L=1+14=15$ 个叶节点。\n\n因此，叶节点的最大可能数量是 $15$。", "answer": "$$\\boxed{15}$$", "id": "1397568"}]}