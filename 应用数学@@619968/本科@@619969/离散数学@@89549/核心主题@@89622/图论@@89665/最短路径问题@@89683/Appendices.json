{"hands_on_practices": [{"introduction": "让我们从一个基础练习开始。这个问题要求你将一个最短路径算法（如 Dijkstra 算法）应用于一个代表服务器网络的有向加权图。通过系统地计算从源服务器 $A$ 到所有其他节点的最小延迟，你将亲手掌握算法在初始化、松弛和选择等方面的核心步骤。[@problem_id:1400399]", "problem": "一位系统管理员正在分析一个小型实验性服务器网络中的延迟。该网络由六台服务器组成，分别标记为 A、B、C、D、E 和 F。这些服务器之间的连接是有向的，一个数据包从一台服务器传输到另一台服务器所需的时间（即延迟）已被测量。下面列出了所有现有的直接连接及其相关的延迟。\n\n- 从 A 到 B：10 毫秒\n- 从 A 到 C：3 毫秒\n- 从 B 到 C：4 毫秒\n- 从 B 到 D：2 毫秒\n- 从 C 到 B：1 毫秒\n- 从 C 到 D：8 毫秒\n- 从 C 到 E：2 毫秒\n- 从 D 到 E：5 毫秒\n- 从 D 到 F：1 毫秒\n- 从 E 到 F：3 毫秒\n\n该管理员需要确定源自于主网关服务器 A 的最优路由路径。为此，他们必须首先找到一个从服务器 A 出发的数据包到达网络中其他每一台服务器的可能的最短传输时间（最小总延迟）。\n\n计算从服务器 A 到其他五台服务器（B、C、D、E 和 F）的最小延迟之和。将您的最终答案表示为一个整数。", "solution": "我们将该网络建模为一个以服务器 A 为源点的有向加权图。所有边的延迟都是正数，所以 Dijkstra 算法可以得出最短路径距离。设从 A 到节点 X 的暂定距离表示为 $d(X)$。初始化 $d(A)=0$，对于所有其他节点，初始化 $d(X)=+\\infty$。迭代地选择具有最小 $d(\\cdot)$ 值的未确定节点，并使用以下公式对其出边进行松弛操作\n$$\nd(v) \\leftarrow \\min\\big(d(v),\\, d(u)+w(u,v)\\big),\n$$\n其中 $w(u,v)$ 是边 $u \\to v$ 上的延迟。\n\n初始化并从 A 开始进行第一次松弛：\n- $d(A)=0$。\n- 松弛 $A \\to B$ 和 $A \\to C$：$d(B)=\\min(+\\infty, 0+10)=10$，$d(C)=\\min(+\\infty, 0+3)=3$。\n\n确定具有最小暂定距离的节点：\n- 确定 C，因为 $d(C)=3$ 是未确定节点中的最小值。\n\n对 C 的出边进行松弛：\n- $C \\to B$：$d(B)=\\min(10, 3+1)=4$。\n- $C \\to D$：$d(D)=\\min(+\\infty, 3+8)=11$。\n- $C \\to E$：$d(E)=\\min(+\\infty, 3+2)=5$。\n\n确定下一个最小的节点：\n- 确定 B，因为 $d(B)=4$。\n\n对 B 的出边进行松弛：\n- $B \\to C$：$d(C)=\\min(3, 4+4)=3$（无变化）。\n- $B \\to D$：$d(D)=\\min(11, 4+2)=6$。\n\n确定下一个最小的节点：\n- 确定 E，因为 $d(E)=5$。\n\n对 E 的出边进行松弛：\n- $E \\to F$：$d(F)=\\min(+\\infty, 5+3)=8$。\n\n确定下一个最小的节点：\n- 确定 D，因为 $d(D)=6$。\n\n对 D 的出边进行松弛：\n- $D \\to E$：$d(E)=\\min(5, 6+5)=5$（无变化）。\n- $D \\to F$：$d(F)=\\min(8, 6+1)=7$。\n\n确定最后一个节点：\n- 确定 F，因为 $d(F)=7$。\n\n因此，从 A 出发的最短路径延迟为\n$$\nd(B)=4,\\quad d(C)=3,\\quad d(D)=6,\\quad d(E)=5,\\quad d(F)=7.\n$$\n所求的总和是\n$$\nd(B)+d(C)+d(D)+d(E)+d(F)=4+3+6+5+7=25.\n$$", "answer": "$$\\boxed{25}$$", "id": "1400399"}, {"introduction": "现实世界中的问题常常伴随着各种约束条件。这个练习挑战你在避开一个指定地点的情况下找到最短路径，模拟了现实中某个位置暂时关闭或无法访问的场景。这项实践旨在培养一项关键的解题技巧：在应用标准算法之前，如何修改图模型以准确地反映新的问题条件。[@problem_id:1400390]", "problem": "一所大学校园正在安装一个自主配送机器人网络。该网络可以建模为一个加权无向图，其中节点是关键位置，边权重表示位置之间的行驶时间（单位：分钟）。校园地图已简化为以下位置和直达路径：\n\n- **位置（节点）：**\n  - A: 主实验室\n  - B: 工程大楼\n  - C: 中央食堂\n  - D: 数据中心\n  - E: 学生宿舍\n  - F: 校园图书馆\n\n- **路径与行驶时间（边）：**\n  - 主实验室 (A) 到工程大楼 (B)：10 分钟\n  - 主实验室 (A) 到中央食堂 (C)：3 分钟\n  - 工程大楼 (B) 到数据中心 (D)：2 分钟\n  - 工程大楼 (B) 到学生宿舍 (E)：20 分钟\n  - 中央食堂 (C) 到数据中心 (D)：4 分钟\n  - 中央食堂 (C) 到学生宿舍 (E)：5 分钟\n  - 数据中心 (D) 到校园图书馆 (F)：8 分钟\n  - 学生宿舍 (E) 到校园图书馆 (F)：6 分钟\n\n一个机器人需要从主实验室 (A) 行驶到校园图书馆 (F)。然而，在配送当天，中央食堂 (C) 以及所有直接通往或来自该食堂的路径都因维护而关闭。在此约束条件下，机器人完成配送所需的最短行驶时间是多少？\n\n请以一个数字作为答案，表示总行驶时间。最终答案以分钟为单位。", "solution": "我们将校园建模为一个加权无向图。中央食堂节点 $C$ 的关闭移除了节点 $C$ 及其所有关联边 $(A,C)$、$(C,D)$ 和 $(C,E)$。剩余的边为：\n- $(A,B)$，权重为 $10$，\n- $(B,D)$，权重为 $2$，\n- $(B,E)$，权重为 $20$，\n- $(D,F)$，权重为 $8$，\n- $(E,F)$，权重为 $6$。\n\n我们需要在这个简化的图中寻找从 $A$ 到 $F$ 的最短行驶时间。这是一个最短路径问题。使用 Dijkstra 的迭代松弛原理：\n\n初始化距离，$d(A)=0$ 且对于 $X\\in\\{B,D,E,F\\}$，$d(X)=\\infty$。从 $A$ 出发，\n$$\nd(B)=\\min\\{d(B),\\,d(A)+10\\}=\\min\\{\\infty,\\,0+10\\}=10.\n$$\n选择具有最小暂定距离的未访问节点，即 $B$，其 $d(B)=10$。松弛其邻居节点：\n$$\nd(D)=\\min\\{d(D),\\,d(B)+2\\}=\\min\\{\\infty,\\,10+2\\}=12,\n$$\n$$\nd(E)=\\min\\{d(E),\\,d(B)+20\\}=\\min\\{\\infty,\\,10+20\\}=30.\n$$\n接下来选择具有最小暂定距离的节点，即 $D$，其 $d(D)=12$。松弛到 $F$：\n$$\nd(F)=\\min\\{d(F),\\,d(D)+8\\}=\\min\\{\\infty,\\,12+8\\}=20.\n$$\n此时，到 $F$ 的已知最优路径成本为 $20$。为了完整起见，考虑经过 $E$ 的路径：\n从 $B$ 到 $E$ 得到 $d(E)=30$，然后\n$$\nd(F)\\leq d(E)+6=30+6=36,\n$$\n这比 $20$ 要大。因此，最短路径为 $A\\to B\\to D\\to F$，总时间为\n$$\n10+2+8=20.\n$$\n\n因此，在此约束条件下的最短行驶时间为 $20$ 分钟。", "answer": "$$\\boxed{20}$$", "id": "1400390"}, {"introduction": "在掌握了基本的路径寻找后，这个更进一步的问题将带你进入网络分析和弹性的领域。你需要通过识别最关键的连接，来研究单个链路故障如何影响整体网络性能。这项实践展示了最短路径算法如何成为漏洞评估和设计稳健系统的重要工具。[@problem_id:1400403]", "problem": "一家公司正在设计一个连接两个关键数据中心的容错光纤网络，这两个数据中心分别是源服务器 (S) 和终端服务器 (T)。该网络由多个路由节点组成，这些节点通过双向光纤链路连接，每条链路都有特定的延迟（时间延迟），单位为毫秒 (ms)。工程师需要分析该网络的脆弱性。具体来说，他们希望确定在单条网络链路发生故障时，对延迟产生的最坏情况下的影响。\n\n网络拓扑由以下节点和链路定义。节点包括：Source (S)、Terminus (T)、Arcadia (A)、Brookside (B)、Central (C)、Downtown (D)、Eastwood (E)、Fairview (F) 和 Greenfield (G)。\n\n双向链路及其对应的延迟如下：\n- (Source, Arcadia): 5 ms\n- (Arcadia, Brookside): 5 ms\n- (Brookside, Central): 5 ms\n- (Central, Terminus): 5 ms\n- (Arcadia, Downtown): 7 ms\n- (Downtown, Brookside): 7 ms\n- (Brookside, Eastwood): 6 ms\n- (Eastwood, Central): 6 ms\n- (Source, Fairview): 8 ms\n- (Fairview, Greenfield): 8 ms\n- (Greenfield, Terminus): 20 ms\n\n您的任务是找出网络中的某一条链路，移除该链路将导致源服务器 (S) 和终端服务器 (T) 之间的最短路径延迟出现最大可能的增加。这个最大可能的增量是多少？\n\n请用一个整数表示最终答案，代表以毫秒 (ms) 为单位的最大延迟增量。", "solution": "设 $G$ 是一个无向加权图，其顶点为 $S,T,A,B,C,D,E,F,G$，边权重为给定的延迟。定义 $d(S,T)$ 为 $S$ 到 $T$ 的最短路径长度。\n\n首先，在完整网络中计算 $d(S,T)$。路径 $S \\to A \\to B \\to C \\to T$ 的长度为\n$$5+5+5+5=20.$$\n其他可选路径：\n- 使用绕行 $A$–$B$ 的路径：$S \\to A \\to D \\to B \\to C \\to T$ 的长度为 $5+7+7+5+5=29$。\n- 使用绕行 $B$–$C$ 的路径：$S \\to A \\to B \\to E \\to C \\to T$ 的长度为 $5+5+6+6+5=27$。\n- 使用南部路径：$S \\to F \\to G \\to T$ 的长度为 $8+8+20=36$。\n因此，$d(S,T)=20$，路径为 $S \\to A \\to B \\to C \\to T$。\n\n现在考虑移除每条边 $e$ 的影响，并令 $d_{-e}(S,T)$ 为新的最短路径长度；延迟增量为 $\\Delta_{e}=d_{-e}(S,T)-20$。\n\n1) 移除 $S$–$A$：路径 $S \\to A \\to B \\to C \\to T$ 在起点处中断。从 $S$ 到 $T$ 唯一剩下的路由是 $S \\to F \\to G \\to T$，其长度为 $36$。因此，$d_{-SA}(S,T)=36$，$\\Delta_{SA}=36-20=16$。\n\n2) 移除 $A$–$B$：用成本为 $7+7=14$ 的路径 $A \\to D \\to B$ 替代 $A$–$B$。一条最短的 $S$–$T$ 路径是\n$$S \\to A \\to D \\to B \\to C \\to T,$$\n其长度为 $5+7+7+5+5=29$。与通过 $S \\to F \\to G \\to T$ 的路径长度 $36$ 相比，我们得到 $d_{-AB}(S,T)=29$，且 $\\Delta_{AB}=29-20=9$。\n\n3) 移除 $B$–$C$：用成本为 $6+6=12$ 的路径 $B \\to E \\to C$ 替代 $B$–$C$。一条最短的 $S$–$T$ 路径是\n$$S \\to A \\to B \\to E \\to C \\to T,$$\n其长度为 $5+5+6+6+5=27$。由于 $27<36$，我们得到 $d_{-BC}(S,T)=27$，且 $\\Delta_{BC}=27-20=7$。\n\n4) 移除 $C$–$T$：从 $C$ 到 $T$ 的直接链路已断开。到达 $T$ 的唯一剩余方式是通过 $G$，这产生了路径\n$$S \\to F \\to G \\to T,$$\n其长度为 $36$。任何从 $S$ 进入 $A$–$B$–$C$ 子图，然后返回 $S$ 再走 $F \\to G \\to T$ 路径的路由，其长度都会超过 $36$。因此，$d_{-CT}(S,T)=36$，且 $\\Delta_{CT}=36-20=16$。\n\n5) 移除 $A$–$D$：长度为 $20$ 的原始路径 $S \\to A \\to B \\to C \\to T$ 仍然可用，所以 $d_{-AD}(S,T)=20$，且 $\\Delta_{AD}=0$。\n\n6) 移除 $D$–$B$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-DB}(S,T)=20$，且 $\\Delta_{DB}=0$。\n\n7) 移除 $B$–$E$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-BE}(S,T)=20$，且 $\\Delta_{BE}=0$。\n\n8) 移除 $E$–$C$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-EC}(S,T)=20$，且 $\\Delta_{EC}=0$。\n\n9) 移除 $S$–$F$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-SF}(S,T)=20$，且 $\\Delta_{SF}=0$。\n\n10) 移除 $F$–$G$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-FG}(S,T)=20$，且 $\\Delta_{FG}=0$。\n\n11) 移除 $G$–$T$：长度为 $20$ 的原始路径仍然可用，所以 $d_{-GT}(S,T)=20$，且 $\\Delta_{GT}=0$。\n\n在所有单边移除情况下的最大增量是\n$$\\max\\{16,9,7,16,0,0,0,0,0,0,0\\}=16.$$\n因此，由于单条链路故障导致 $S$ 和 $T$ 之间最短路径延迟的最大可能增量是 $16$ ms。", "answer": "$$\\boxed{16}$$", "id": "1400403"}]}