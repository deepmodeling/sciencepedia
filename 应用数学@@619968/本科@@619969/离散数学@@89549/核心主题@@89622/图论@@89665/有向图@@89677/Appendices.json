{"hands_on_practices": [{"introduction": "理论学习的最终目的是解决实际问题。此练习将引导你将一个常见的项目管理场景——任务依赖关系——转化为一个精确的数学模型。通过构建有向图的邻接表，你将掌握表示非对称关系的基本方法，这是利用图论解决更复杂问题的第一步。[@problem_id:1364479]", "problem": "在现代软件开发中，项目通常被分解为更小、更易于管理的任务。这些任务之间的关系可以用一个有向图来建模，其中从一个任务到另一个任务的边表示一个依赖关系。\n\n考虑一个由四个主要任务组成的小型软件项目：\n*   T1: 开发应用程序编程接口 (API) 端点\n*   T2: 设计数据库模式\n*   T3: 构建前端用户界面\n*   T4: 编写用户文档\n\n项目经理概述了以下依赖关系：\n1.  开发 API 端点 (T1) 必须在数据库模式 (T2) 设计完成后才能开始。\n2.  构建前端用户界面 (T3) 要求 API 端点 (T1) 和数据库模式 (T2) 都已完成。\n3.  编写用户文档 (T4) 依赖于 API 端点 (T1) 和前端用户界面 (T3) 的完成。\n\n设这些依赖关系由一个有向图 $G = (V, E)$ 建模，其中顶点集 $V = \\{\\text{T1, T2, T3, T4}\\}$ 代表这些任务。如果任务 $u$ 是任务 $v$ 的直接先决条件，则存在一条有向边 $(u, v) \\in E$。\n\n你的任务是确定这个有向图的正确邻接表表示。邻接表必须根据以下规则进行格式化：\n*   源顶点列表 (T1, T2, T3, T4) 必须按字典序排序。\n*   对于每个源顶点，其邻接顶点列表也必须按字典序排序（例如，`[T1, T3]` 是正确的，`[T3, T1]` 是不正确的）。\n*   空的邻接顶点列表用 `[]` 表示。\n\n下列哪个选项正确地表示了所述任务依赖图的邻接表？\n\nA.\nT1: [T2]\nT2: []\nT3: [T1, T2]\nT4: [T1, T3]\n\nB.\nT1: [T3, T4]\nT2: [T1]\nT3: [T4]\nT4: []\n\nC.\nT1: [T3, T4]\nT2: [T1, T3]\nT3: [T4]\nT4: []\n\nD.\nT1: [T3, T4]\nT2: [T3, T1]\nT3: [T4]\nT4: []\n\nE.\nT1: [T3, T4]\nT2: [T1, T3, T4]\nT3: [T4]\nT4: []", "solution": "一条有向边从每个先决条件任务指向依赖于它的任务。设 $G=(V,E)$ 且 $V=\\{\\mathrm{T1},\\mathrm{T2},\\mathrm{T3},\\mathrm{T4}\\}$。根据依赖关系：\n1. T1 只能在 T2 之后开始，所以 $(\\mathrm{T2},\\mathrm{T1})\\in E$。\n2. T3 要求 T1 和 T2，所以 $(\\mathrm{T1},\\mathrm{T3})\\in E$ 和 $(\\mathrm{T2},\\mathrm{T3})\\in E$。\n3. T4 依赖于 T1 和 T3，所以 $(\\mathrm{T1},\\mathrm{T4})\\in E$ 和 $(\\mathrm{T3},\\mathrm{T4})\\in E$。\n\n因此，出邻接集为：\n$$\\mathrm{Adj}(\\mathrm{T1})=\\{\\mathrm{T3},\\mathrm{T4}\\},\\quad \\mathrm{Adj}(\\mathrm{T2})=\\{\\mathrm{T1},\\mathrm{T3}\\},\\quad \\mathrm{Adj}(\\mathrm{T3})=\\{\\mathrm{T4}\\},\\quad \\mathrm{Adj}(\\mathrm{T4})=\\varnothing.$$\n将每个列表按字典序排序，得到：\nT1: [T3, T4], T2: [T1, T3], T3: [T4], T4: []。\n与选项比较，这完全匹配选项 C，并且遵守了所要求的排序规则。", "answer": "$$\\boxed{C}$$", "id": "1364479"}, {"introduction": "在许多规划问题中，例如软件部署或课程安排，依赖关系不能形成循环。这类问题可以用一种特殊的有向图——有向无环图（Directed Acyclic Graph, DAG）——来建模。这个练习探讨了如何在一个具有并行任务流的场景中，计算所有可能的有效执行顺序，这本质上是探索图的拓扑排序问题。[@problem_id:1364426]", "problem": "一家软件公司正在为一个新项目构建其部署流水线，该项目由三个独立的微服务组成：认证服务、计费服务和目录服务。每个服务的部署都涉及两个不同的任务：部署后端和部署前端。\n\n对于这三个服务中的每一个，必须先成功部署其后端组件，然后才能部署其对应的前端组件。\n设任务表示如下：\n- 认证服务：$A_B$ (后端) 和 $A_F$ (前端)。\n- 计费服务：$B_B$ (后端) 和 $B_F$ (前端)。\n- 目录服务：$C_B$ (后端) 和 $C_F$ (前端)。\n\n依赖关系如下：\n1. $A_B$ 必须在 $A_F$ 之前完成。\n2. $B_B$ 必须在 $B_F$ 之前完成。\n3. $C_B$ 必须在 $C_F$ 之前完成。\n\n这六个任务之间没有其他依赖关系。一个完整的部署计划是所有六个任务的一个特定线性序列。有多少种不同的有效部署计划是可能的？", "solution": "我们有六个不同的任务：$A_B, A_F, B_B, B_F, C_B, C_F$，其先后次序约束为 $A_B \\prec A_F$、$B_B \\prec B_F$ 和 $C_B \\prec C_F$，且没有其他依赖关系。一个有效的部署计划是这六个任务在遵守这三个约束条件下的一个线性顺序（排列）。\n\n如果没有约束，六个不同任务的线性顺序数量为\n$$\n6!。\n$$\n这三个约束各自限制了一个不相交任务对内的相对顺序。考虑以下组合学论证。将所有 $6!$ 个排列的集合划分为等价类，其中如果一个排列可以通过在三个不相交对 $\\{A_B, A_F\\}$、$\\{B_B, B_F\\}$ 和 $\\{C_B, C_F\\}$ 的任意子集中独立地交换两个元素而从另一个排列得到，则这两个排列是等价的。对于这三对中的每一对，都有正好 $2$ 种可能的内部顺序，因此每个等价类的大小为\n$$\n2^{3}。\n$$\n在任何一个这样的类中，恰好有一个排列将每个后端都排在其对应的前端之前，因此恰好有一个排列满足所有三个先后次序约束。因此，有效的部署计划总数为\n$$\n\\frac{6!}{2^{3}}。\n$$\n计算得，\n$$\n\\frac{6!}{2^{3}}=\\frac{720}{8}=90。\n$$\n因此，有 $90$ 种不同的有效部署计划。", "answer": "$$\\boxed{90}$$", "id": "1364426"}, {"introduction": "并非所有有向图都是无环的；网络中的反馈循环和相互依赖关系是普遍存在的。为了理解这些复杂系统的结构，我们可以将其分解为“强连通分量”（Strongly Connected Components, SCCs）。此练习要求你识别给定有向图中的所有强连通分量，从而将一个看似复杂的网络分解为一组更易于理解的基本构建块。[@problem_id:1497280]", "problem": "有向图（digraph）是一种基本结构，用于建模具有方向性的关系，例如单行道网络、项目管理中的依赖关系图或通信网络中的信息流。分析有向图的一个关键概念是将其分解为强连通分量。\n\n有向图的**强连通分量 (SCC)** 是一个顶点的极大集合 $C$，使得对于 $C$ 中的每一对顶点 $u$ 和 $v$，都存在一条从 $u$ 到 $v$ 的有向路径和一条从 $v$ 到 $u$ 的有向路径。所有强连通分量的集合构成了对图的顶点集的划分。\n\n考虑一个有向图 $G = (V, E)$，其顶点集为 $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$，边集 $E$ 包含以下有向边：\n$E = \\{(1, 2), (2, 3), (2, 7), (3, 1), (3, 4), (4, 5), (5, 6), (6, 4), (6, 8)\\}$.\n\n确定顶点集 $V$ 到其强连通分量的划分。下列哪个选项表示了这个划分？\n\nA. $\\{\\{1, 2, 3\\}, \\{4, 5, 6\\}, \\{7\\}, \\{8\\}\\}$\nB. $\\{\\{1, 2, 3, 4, 5, 6, 7, 8\\}\\}$\nC. $\\{\\{1, 2, 3, 7\\}, \\{4, 5, 6\\}, \\{8\\}\\}$\nD. $\\{\\{1\\}, \\{2, 3\\}, \\{4, 5, 6\\}, \\{7\\}, \\{8\\}\\}$\nE. $\\{\\{1, 2, 3\\}, \\{4, 5, 6, 8\\}, \\{7\\}\\}$", "solution": "我们通过分析相互可达性来确定有向图 $G=(V,E)$（其中 $V=\\{1,2,3,4,5,6,7,8\\}$，$E=\\{(1,2),(2,3),(2,7),(3,1),(3,4),(4,5),(5,6),(6,4),(6,8)\\}$）的强连通分量 (SCC)。根据定义，一个 SCC 是一个极大子集 $C \\subseteq V$，使得对于任意 $u,v \\in C$，都存在从 $u$ 到 $v$ 和从 $v$ 到 $u$ 的有向路径。\n\n首先，考虑顶点 $\\{1,2,3\\}$。边 $(1,2)$、$(2,3)$ 和 $(3,1)$ 构成了一个有向环 $1 \\to 2 \\to 3 \\to 1$。因此：\n- 从 $1$ 到 $2$ 是直接的，从 $2$ 到 $1$ 可通过 $2 \\to 3 \\to 1$，\n- 从 $2$ 到 $3$ 是直接的，从 $3$ 到 $2$ 可通过 $3 \\to 1 \\to 2$，\n- 从 $1$ 到 $3$ 可通过 $1 \\to 2 \\to 3$，而从 $3$ 到 $1$ 是直接的。\n因此，$\\{1,2,3\\}$ 中的所有顶点对都是相互可达的。有离开这个集合的边，即 $(2,7)$ 和 $(3,4)$，但是 $E$ 中没有从 $7$ 或 $\\{4,5,6,8\\}$ 中任何顶点返回到 $\\{1,2,3\\}$ 的边。具体来说，$7$ 没有出边，而在 $\\{4,5,6,8\\}$ 内部，仅有的出边是 $(4,5)$、$(5,6)$、$(6,4)$ 和 $(6,8)$，其中没有一条指向 $\\{1,2,3\\}$。因此，不存在从 $\\{1,2,3\\}$ 外部的任何顶点回到 $\\{1,2,3\\}$ 内部的有向路径，所以包含 $1$ 的极大强连通分量是 $C_{1}=\\{1,2,3\\}$。\n\n接下来，考虑顶点 $\\{4,5,6\\}$。边 $(4,5)$、$(5,6)$ 和 $(6,4)$ 形成了一个有向环 $4 \\to 5 \\to 6 \\to 4$。因此：\n- 从 $4$ 到 $5$ 是直接的，从 $5$ 到 $4$ 可通过 $5 \\to 6 \\to 4$，\n- 从 $5$ 到 $6$ 是直接的，从 $6$ 到 $5$ 可通过 $6 \\to 4 \\to 5$，\n- 从 $4$ 到 $6$ 可通过 $4 \\to 5 \\to 6$，而从 $6$ 到 $4$ 是直接的。\n因此，$\\{4,5,6\\}$ 中的所有顶点对都是相互可达的。有一条离开这个集合的出边 $(6,8)$，但 $8$ 没有出边，因此无法返回到 $\\{4,5,6\\}$ 中的任何顶点。有一条来自 $\\{1,2,3\\}$ 的入边 $(3,4)$，但没有从 $\\{4,5,6\\}$ 返回到 $\\{1,2,3\\}$ 中任何顶点的路径。因此，这里的极大强连通分量是 $C_{2}=\\{4,5,6\\}$。\n\n现在考虑顶点 $7$。它只有一条入边 $(2,7)$，在 $E$ 中没有出边。因此，从 $7$ 不存在到任何其他顶点的有向路径，除了通过平凡路径到达自身外，从 $7$ 无法到达任何其他顶点。因此，$7$ 自身构成一个强连通分量，即 $C_{3}=\\{7\\}$。\n\n最后，考虑顶点 $8$。它只有一条入边 $(6,8)$，在 $E$ 中没有出边。因此，从 $8$ 不存在到任何其他顶点的有向路径，除了通过平凡路径到达自身外，从 $8$ 无法到达任何其他顶点。因此，$8$ 自身构成一个强连通分量，即 $C_{4}=\\{8\\}$。\n\n综上所述，$V$ 到强连通分量的划分为 $\\{\\{1,2,3\\},\\{4,5,6\\},\\{7\\},\\{8\\}\\}$，这与选项 A 相符。", "answer": "$$\\boxed{A}$$", "id": "1497280"}]}