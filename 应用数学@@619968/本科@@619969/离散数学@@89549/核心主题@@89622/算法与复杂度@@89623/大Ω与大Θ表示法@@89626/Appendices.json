{"hands_on_practices": [{"introduction": "要真正掌握大$\\Theta$表示法，我们必须从其形式化定义入手。本练习将挑战你应用基本不等式 $0 < c_1 g(n) \\le f(n) \\le c_2 g(n)$ 来分析一个简单但非平凡的函数。通过分析函数 $f(n) = 5 + \\cos(n\\pi)$ 的振荡行为，你将具体理解常数 $c_1$、$c_2$和 $n_0$ 如何共同作用，从而确定一个紧的渐近界。[@problem_id:1351964]", "problem": "设 $f(n) = 5 + \\cos(n\\pi)$，其中 $n$ 为整数且 $n \\ge 0$。\n如果存在正常数 $c_1$、$c_2$ 和一个非负整数 $n_0$，使得对于所有整数 $n \\ge n_0$，不等式 $0 < c_1 g(n) \\le f(n) \\le c_2 g(n)$ 均成立，则称函数 $f(n)$ 属于 $\\Theta(g(n))$。\n\n以下哪组常数元组 $(c_1, c_2, n_0)$（如果存在）能正确证明 $f(n)$ 属于 $\\Theta(1)$？\n\nA. $(c_1, c_2, n_0) = (5, 6, 1)$\n\nB. $(c_1, c_2, n_0) = (4, 5, 2)$\n\nC. $(c_1, c_2, n_0) = (3, 7, 0)$\n\nD. $(c_1, c_2, n_0) = (4, 6, 0)$\n\nE. $(c_1, c_2, n_0) = (1, 5, 1)", "solution": "给定 $f(n)=5+\\cos(n\\pi)$（对于整数 $n\\ge 0$），我们要检验能证明 $f(n)\\in\\Theta(1)$（其中 $g(n)=1$）的常数 $(c_{1},c_{2},n_{0})$。根据定义，我们需要找到正常数 $c_{1}$、$c_{2}$ 和一个非负整数 $n_{0}$，使得对于所有整数 $n\\ge n_{0}$，有\n$$\n0<c_{1}\\cdot 1\\le f(n)\\le c_{2}\\cdot 1.\n$$\n因此，我们需要 $0<c_{1}\\le f(n)\\le c_{2}$ 对所有 $n\\ge n_{0}$ 成立。\n\n使用 $\\cos(n\\pi)=(-1)^{n}$（对于整数 $n$）来显式计算 $f(n)$：\n$$\nf(n)=5+(-1)^{n}=\n\\begin{cases}\n6, & \\text{$n$ 为偶数},\\\\\n4, & \\text{$n$ 为奇数}.\n\\end{cases}\n$$\n对于任何 $n_{0}\\ge 0$，整数集合 $n\\ge n_{0}$ 中既包含偶数也包含奇数，所以 $f(n)$ 在 $n\\ge n_{0}$ 上的值域始终是两点集 $\\{4,6\\}$。因此，不等式对所有 $n\\ge n_{0}$ 恒成立的充分必要条件是\n$$\nc_{1}\\le 4\\quad\\text{且}\\quad c_{2}\\ge 6,\n$$\n并且 $c_{1}>0$。\n\n现在检验每个选项：\n- 选项 A：$(5,6,1)$ 中有 $c_{1}=5$，这违反了 $c_{1}\\le 4$。无效。\n- 选项 B：$(4,5,2)$ 中有 $c_{2}=5$，这违反了 $c_{2}\\ge 6$。无效。\n- 选项 C：$(3,7,0)$ 中有 $3\\le 4$ 且 $7\\ge 6$。有效。\n- 选项 D：$(4,6,0)$ 中有 $4\\le 4$ 且 $6\\ge 6$。有效。\n- 选项 E：$(1,5,1)$ 中有 $c_{2}=5$，这违反了 $c_{2}\\ge 6$。无效。\n\n因此，正确的元组是选项 C 和 D。", "answer": "$$\\boxed{CD}$$", "id": "1351964"}, {"introduction": "尽管基于不等式的定义是基础，但极限法通常为比较两个函数的增长率提供了更直接的工具。本练习要求你使用两个函数 $T_A(n) = 4^n$ 和 $T_B(n) = 2^n$ 的比值极限，来判断它们是否属于同一复杂度类。这是一个至关重要的练习，有助于消除所有指数函数增长率都相似的常见误解。[@problem_id:1351959]", "problem": "在计算复杂性理论领域，工程师们经常比较各种算法，以理解它们的性能如何随输入规模而变化。考虑为解决某一特定问题而设计的两种算法：算法 A 和算法 B。对于规模为 $n$ 的输入，算法 A 所需的基本操作数由函数 $T_A(n) = 4^n$ 给出，而算法 B 所需的基本操作数则为 $T_B(n) = 2^n$。\n\n为了确定这两种算法是否属于同一渐近复杂性类别，我们可以使用大Theta ($\\Theta$) 记号。如果函数 $f(n)$ 和 $g(n)$ 在 $n$ 很大时以相同的速率增长，则称 $f(n)$ 为 $\\Theta(g(n))$。这可以通过以下极限测试来正式判定：\n\n$f(n) = \\Theta(g(n))$ 当且仅当 $\\lim_{n \\to \\infty} \\frac{f(n)}{g(n)} = L$，其中 $L$ 是一个满足 $0 < L < \\infty$ 的常数。\n\n根据此定义，以下哪个陈述正确地描述了算法 A 和算法 B 的复杂度之间的关系？\n\nA. $T_A(n) = \\Theta(T_B(n))$，因为 $T_A(n)$ 和 $T_B(n)$ 都是指数函数。\n\nB. $T_A(n)$ 不是 $\\Theta(T_B(n))$，因为极限 $\\lim_{n \\to \\infty} \\frac{T_A(n)}{T_B(n)}$ 等于 0。\n\nC. $T_A(n)$ 不是 $\\Theta(T_B(n))$，因为极限 $\\lim_{n \\to \\infty} \\frac{T_A(n)}{T_B(n)}$ 是 $\\infty$。\n\nD. $T_A(n) = \\Theta(T_B(n))$，因为极限 $\\lim_{n \\to \\infty} \\frac{T_B(n)}{T_A(n)}$ 等于 0。\n\nE. 极限检验不适用于比较这两个函数。", "solution": "我们已知 $T_{A}(n)=4^{n}$ 和 $T_{B}(n)=2^{n}$。为了检验 $T_{A}(n)=\\Theta(T_{B}(n))$ 是否成立，我们使用极限检验：$f(n)=\\Theta(g(n))$ 当且仅当 $\\lim_{n\\to\\infty}\\frac{f(n)}{g(n)}=L$ 且 $0<L<\\infty$。\n\n令 $f(n)=T_{A}(n)$ 且 $g(n)=T_{B}(n)$。则\n$$\n\\frac{T_{A}(n)}{T_{B}(n)}=\\frac{4^{n}}{2^{n}}=\\frac{(2^{2})^{n}}{2^{n}}=\\frac{2^{2n}}{2^{n}}=2^{n}.\n$$\n取极限，\n$$\n\\lim_{n\\to\\infty}\\frac{T_{A}(n)}{T_{B}(n)}=\\lim_{n\\to\\infty}2^{n}=\\infty.\n$$\n因为极限为 $\\infty$，而不是一个正的有限常数，所以 $T_{A}(n)\\neq\\Theta(T_{B}(n))$。在选项中，这对应于陈述“$T_{A}(n)$ 不是 $\\Theta(T_{B}(n))$，因为极限是 $\\infty$”，即选项 C。\n\n为了完整起见，注意到\n$$\n\\lim_{n\\to\\infty}\\frac{T_{B}(n)}{T_{A}(n)}=\\lim_{n\\to\\infty}\\frac{2^{n}}{4^{n}}=\\lim_{n\\to\\infty}2^{-n}=0,\n$$\n这证实了 $T_{B}(n)=o(T_{A}(n))$，而不是 $\\Theta(T_{A}(n))$；因此选项 A 和 D 是不正确的。极限检验是适用的，所以选项 E 是不正确的；而选项 B 也不正确，因为它断言极限为 0，但这实际上是反向比率的极限值。", "answer": "$$\\boxed{C}$$", "id": "1351959"}, {"introduction": "在实际的算法分析中，我们经常将简单的顺序组件组合成复杂的算法。本练习模拟了这样一个场景：总运行时间是两个阶段运行时间之和。通过应用大$\\Theta$表示法的性质，你将学会如何确定一个组合算法的总体复杂度，这是任何计算机科学家都应具备的一项基本技能。[@problem_id:1352012]", "problem": "一位工程师正在分析一个新算法，该算法处理大小为 $n$ 的输入。该算法由两个不同的、顺序的阶段组成。\n\n第一阶段的运行时间记为 $T_1(n)$，经过分析发现其紧渐近界为 $T_1(n) = \\Theta(n)$。\n\n第二阶段是一个计算密集度更高的过程，其运行时间记为 $T_2(n)$，并已被确定为 $T_2(n) = \\Theta(n^2)$。\n\n该算法的总运行时间 $T(n)$ 是两个顺序阶段运行时间之和，因此 $T(n) = T_1(n) + T_2(n)$。\n\n下列哪项代表了算法总运行时间 $T(n)$ 的最紧渐近界（大Theta，$\\Theta$）？\n\nA. $\\Theta(1)$\n\nB. $\\Theta(n)$\n\nC. $\\Theta(n \\log n)$\n\nD. $\\Theta(n^2)$\n\nE. $\\Theta(n^3)$", "solution": "给定两个顺序阶段，其运行时间分别为 $T_{1}(n)=\\Theta(n)$ 和 $T_{2}(n)=\\Theta(n^{2})$。根据大Theta的定义，存在正常数 $c_{1},c_{2},d_{1},d_{2}$ 和 $n_{1},n_{2}$，使得对于所有 $n \\geq n_{1}$，\n$$\nc_{1} n \\leq T_{1}(n) \\leq c_{2} n,\n$$\n并且对于所有 $n \\geq n_{2}$，\n$$\nd_{1} n^{2} \\leq T_{2}(n) \\leq d_{2} n^{2}.\n$$\n总时间为 $T(n)=T_{1}(n)+T_{2}(n)$。令 $N=\\max\\{n_{1},n_{2},1\\}$。对于所有 $n \\geq N$，我们有下界\n$$\nT(n)=T_{1}(n)+T_{2}(n) \\geq T_{2}(n) \\geq d_{1} n^{2}.\n$$\n对于上界，对于所有 $n \\geq N$，\n$$\nT(n)=T_{1}(n)+T_{2}(n) \\leq c_{2} n + d_{2} n^{2} \\leq (c_{2}+d_{2}) n^{2},\n$$\n因为 $n \\geq 1$ 意味着 $c_{2} n \\leq c_{2} n^{2}$。因此，存在正常数 $C_{1}=d_{1}$ 和 $C_{2}=c_{2}+d_{2}$ 以及 $N$，使得对于所有 $n \\geq N$，\n$$\nC_{1} n^{2} \\leq T(n) \\leq C_{2} n^{2}.\n$$\n根据大Theta的定义，这确立了 $T(n)=\\Theta(n^{2})$。在给定的选项中，这对应于选项D。", "answer": "$$\\boxed{D}$$", "id": "1352012"}]}