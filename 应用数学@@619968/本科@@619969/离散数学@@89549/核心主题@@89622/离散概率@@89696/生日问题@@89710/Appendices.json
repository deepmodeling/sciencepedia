{"hands_on_practices": [{"introduction": "生日问题常常带来与我们直觉相悖的惊奇结果。让我们从一个经典场景开始，建立解决这类问题的基础技能。这个练习将引导你计算至少出现一次“碰撞”（即重复）的概率，我们将运用概率论中一个常见而强大的技巧——补集法则，首先计算所有项目都独一无二的概率，然后再求其对立事件的概率。[@problem_id:1404660] 掌握这种计算方法，是理解为何共享生日或其他巧合事件比我们想象中更常见的第一步。", "problem": "一家专门从事收藏品的科技公司发布了一个新系列的“CryptoCritters”，这是一套与独特的数字代币相关联的实体微型手办。在完整的第一版套装中，有50种不同的CryptoCritter手办。这些手办在相同的密封“盲盒”中出售，这意味着购买者不知道他们购买的是哪一个具体的手办。假设该公司为50种不同的手办中的每一种都生产了数量相等且极其巨大的数量，因此每个手办的选择可以被视为一个具有均匀概率的独立事件。\n\n一位收藏家购买了8个这样的盲盒。在他购买的8个手办中，他至少获得一个重复手办的概率是多少？\n\n将您的答案计算为保留四位有效数字的小数。", "solution": "将每个盒子建模为从50种等可能性类型中进行的独立抽取。设 $D$ 为在8次抽取中至少出现一个重复的事件。使用补集法则：$P(D) = 1 - P(\\text{全部8个都不同})$。\n\n所有8个手办都不同的概率是单射序列的数量除以序列总数：\n$$\nP(\\text{全部不同}) = \\frac{50 \\cdot 49 \\cdot 48 \\cdot 47 \\cdot 46 \\cdot 45 \\cdot 44 \\cdot 43}{50^{8}} = \\prod_{k=0}^{7} \\frac{50-k}{50} = 1 \\cdot \\frac{49}{50} \\cdot \\frac{48}{50} \\cdot \\frac{47}{50} \\cdot \\frac{46}{50} \\cdot \\frac{45}{50} \\cdot \\frac{44}{50} \\cdot \\frac{43}{50}.\n$$\n进行数值计算：\n$$\nP(\\text{全部不同}) = 0.98 \\times 0.96 \\times 0.94 \\times 0.92 \\times 0.90 \\times 0.88 \\times 0.86 = 0.5541618475008.\n$$\n因此，\n$$\nP(D) = 1 - 0.5541618475008 = 0.4458381524992.\n$$\n四舍五入到四位有效数字得到$0.4458$。", "answer": "$$\\boxed{0.4458}$$", "id": "1404660"}, {"introduction": "在学会了如何为单一场景计算碰撞概率之后，让我们来挑战一下自己的直觉。为了避免碰撞，是不是拥有更多的“箱子”（在此例中是服务器）总是更好呢？这个问题要求你比较两个不同的系统配置。[@problem_id:1404673] 你需要分别计算并对比它们的碰撞概率，以判断哪种情况风险更高，这将促使你更深入地审视项目数量 $k$ 和可能性总数 $N$ 之间的相互作用。这种练习能够提升你的分析能力，并帮助你建立对碰撞概率如何变化的更细致、量化的直觉，这在系统设计和风险评估中至关重要。", "problem": "一家分布式计算公司正在为其新服务评估两种不同的数据存储配置。在这两种配置中，新的数据记录都基于一种简单的均匀随机哈希算法分配给服务器。当至少有两条记录被分配到同一台服务器时，就会发生“冲突”。该公司需要确定哪种配置更容易发生冲突。\n\n两种配置如下：\n\n- **场景A**：将 $4$ 条新数据记录存储在 $20$ 台可用服务器的集群中。\n- **场景B**：将 $5$ 条新数据记录存储在 $30$ 台可用服务器的集群中。\n\n假设对于每条记录，选择任何一台服务器的概率都是相等的，那么以下哪个陈述是正确的？\n\nA. 场景A发生冲突的概率更高。\n\nB. 场景B发生冲突的概率更高。\n\nC. 两种场景发生冲突的概率相等。\n\nD. 根据所给信息无法确定关系。", "solution": "解读：每条记录独立且均匀地哈希到任何一台可用的服务器上。如果至少有两条记录被分配到同一台服务器，则发生冲突。对于 $n$ 台服务器和 $k$ 条记录，不发生冲突（所有记录都在不同的服务器上）的概率是单射分配的数量除以总分配数量：\n$$\nP_{\\text{no coll}}(n,k)=\\frac{n(n-1)\\cdots(n-k+1)}{n^{k}}=\\frac{(n)_{k}}{n^{k}}.\n$$\n因此，发生冲突的概率是\n$$\nP_{\\text{coll}}(n,k)=1-P_{\\text{no coll}}(n,k).\n$$\n我们计算并比较两种场景下不发生冲突的概率；不发生冲突概率较小的那一个，其发生冲突的概率就较大。\n\n场景A：$n=20$, $k=4$,\n$$\nP_{\\text{no coll},A}=\\frac{20\\cdot 19\\cdot 18\\cdot 17}{20^{4}}=\\frac{19}{20}\\cdot\\frac{18}{20}\\cdot\\frac{17}{20}.\n$$\n\n场景B：$n=30$, $k=5$,\n$$\nP_{\\text{no coll},B}=\\frac{30\\cdot 29\\cdot 28\\cdot 27\\cdot 26}{30^{5}}=\\frac{29}{30}\\cdot\\frac{28}{30}\\cdot\\frac{27}{30}\\cdot\\frac{26}{30}.\n$$\n\n通过比值来比较 $P_{\\text{no coll},A}$ 和 $P_{\\text{no coll},B}$\n$$\nR=\\frac{P_{\\text{no coll},A}}{P_{\\text{no coll},B}}=\\frac{\\frac{19\\cdot 18\\cdot 17}{20^{3}}}{\\frac{29\\cdot 28\\cdot 27\\cdot 26}{30^{4}}}=\\frac{19\\cdot 18\\cdot 17}{20^{3}}\\cdot\\frac{30^{4}}{29\\cdot 28\\cdot 27\\cdot 26}.\n$$\n化简 $30^{4}/20^{3}$：\n$$\n\\frac{30^{4}}{20^{3}}=\\frac{3^{4}\\cdot 10^{4}}{2^{3}\\cdot 10^{3}}=\\frac{81}{8}\\cdot 10=\\frac{405}{4}.\n$$\n因此\n$$\nR=\\frac{19\\cdot 18\\cdot 17}{1}\\cdot\\frac{405}{4}\\cdot\\frac{1}{29\\cdot 28\\cdot 27\\cdot 26}.\n$$\n使用 $405=27\\cdot 15$ 来约掉 $27$：\n$$\nR=\\frac{19\\cdot 18\\cdot 17\\cdot 15}{4\\cdot 29\\cdot 28\\cdot 26}.\n$$\n将 $18/4$ 约分为 $9/2$：\n$$\nR=\\frac{19\\cdot 9\\cdot 17\\cdot 15}{2\\cdot 29\\cdot 28\\cdot 26}=\\frac{19\\cdot 17\\cdot 135}{2\\cdot 29\\cdot 28\\cdot 26}.\n$$\n将分子和分母计算为整数：\n$$\n19\\cdot 17=323,\\quad 323\\cdot 135=43605,\n$$\n$$\n29\\cdot 28=812,\\quad 812\\cdot 26=21112,\\quad 2\\cdot 21112=42224.\n$$\n于是\n$$\nR=\\frac{43605}{42224}.\n$$\n由于 $43605>42224$，我们得到 $R>1$，所以 $P_{\\text{no coll},A}>P_{\\text{no coll},B}$。\n因此\n$$\nP_{\\text{coll},A}=1-P_{\\text{no coll},A}<1-P_{\\text{no coll},B}=P_{\\text{coll},B}.\n$$\n所以，场景B发生冲突的概率更高。", "answer": "$$\\boxed{B}$$", "id": "1404673"}, {"introduction": "现在我们来探讨“生日悖论”的核心问题：一个房间里需要多少人，才能使至少有两个人生日相同的概率超过 50%？答案出奇地小。这个最后的练习将我们的理解应用到一个计算机科学领域的实际问题——哈希碰撞。[@problem_id:1404642] 你将确定在一个拥有 $N=64$ 台服务器的系统中，至少需要插入多少个数据密钥 $m$，才能使发生碰撞的概率严格大于 $0.5$。解决这个问题揭示了生日问题强大且常常反直觉的本质，凸显了它在密码学和数据管理等领域中避免碰撞的关键重要性。", "problem": "一个大规模分布式数据库系统使用一种简单的哈希方案来将其数据键分布到各个服务器上。该集群中有 $N=64$ 台服务器。当添加一个新键时，会对其应用一个哈希函数，然后该键被存储在由 `hash(key) mod N` 的结果索引的服务器上。假设该哈希函数是理想的，即它将键均匀且随机地分布到各个服务器上。必须向数据库中插入至少多少个键，才能使得至少发生一次“碰撞”（即至少有两个键被分配到同一台服务器）的概率严格大于 $0.5$？", "solution": "令 $N=64$ 为服务器数量，$m$ 为插入的键的数量。我们想找到最小的整数 $m$，使得至少发生一次碰撞的概率严格大于 $0.5$。\n\n这等价于寻找最小的 $m$，使得“无碰撞”的概率小于 $0.5$。\n$$ P(\\text{碰撞}) > 0.5 \\iff 1 - P(\\text{无碰撞}) > 0.5 \\iff P(\\text{无碰撞})  0.5 $$\n在文章的“一个强大的近似”部分，我们推导出了无碰撞概率的近似公式：\n$$ P(\\text{无碰撞}) \\approx e^{-\\frac{m(m-1)}{2N}} $$\n将 $N=64$ 代入，我们得到不等式：\n$$ e^{-\\frac{m(m-1)}{128}}  0.5 $$\n对两边取自然对数：\n$$ -\\frac{m(m-1)}{128}  \\ln(0.5) \\approx -0.693 $$\n两边同乘 $-128$（并反转不等号）：\n$$ m(m-1) > 0.693 \\times 128 \\approx 88.7 $$\n现在我们只需测试连续的整数 $m$，看哪个满足这个条件。\n- 对于 $m=9$：$m(m-1) = 9 \\times 8 = 72$。这不大于 $88.7$。\n- 对于 $m=10$：$m(m-1) = 10 \\times 9 = 90$。这大于 $88.7$。\n\n因此，根据近似计算，需要插入的最小键数为 $10$。我们可以通过精确计算来验证这个近似结果的准确性：\n$$P_{\\text{no coll}}(9) = \\prod_{i=0}^{8}\\frac{64-i}{64} = \\frac{64 \\cdot 63 \\cdots 56}{64^9} \\approx 0.569 > 0.5$$\n$$P_{\\text{no coll}}(10) = P_{\\text{no coll}}(9) \\times \\frac{64-9}{64} \\approx 0.569 \\times \\frac{55}{64} \\approx 0.490  0.5$$\n精确计算证实了 $m=10$ 是使碰撞概率首次超过 $0.5$ 所需的键数。", "answer": "$$\\boxed{10}$$", "id": "1404642"}]}