{"hands_on_practices": [{"introduction": "让我们从一个基础练习开始，直接应用鞍点的核心定义。在这个练习中 [@problem_id:1383774]，你将通过计算行玩家的‘最大化最小值’ ($v_{\\text{maximin}}$) 和列玩家的‘最小化最大值’ ($v_{\\text{minimax}}$) 来找到博弈的均衡点。这个过程是识别纯策略纳什均衡（即鞍点）的基石，能帮助你理解玩家在信息完全但决策独立的情况下如何达到一个稳定的结果。", "problem": "一家名为“InnovateSoft”的软件公司刚刚发布了一款新的生产力套件，包含两大主要功能：“项目组织器”和“数据可视化工具”。发布后，用户报告了两个严重错误。错误 A 主要损坏“项目组织器”中的数据，而错误 B 则导致“数据可视化工具”崩溃。工程团队资源有限，在下一个补丁周期中只能集中精力修复这两个错误中的一个。\n\n与此同时，一位代表用户群体策略选择的高级用户必须决定在接下来的一个关键项目中依赖哪一个功能。该用户将在不知道公司会优先修复哪个错误的情况下做出决定。\n\n用户与公司之间的这种策略互动可以被建模为一个双人零和博弈。用户是行参与者，其目标是最大化其生产力，该生产力被量化为“满意度分数”。公司是列参与者，它采取保守策略，旨在最小化用户可以获得的最大满意度分数。\n\n基于用户选择（行）和公司选择（列）的组合，用户的满意度分数在以下支付矩阵中给出：\n\n| | 公司：修复错误 A | 公司：修复错误 B |\n| :--- | :---: | :---: |\n| **用户：使用项目组织器** | 8 | 2 |\n| **用户：使用数据可视化工具** | 6 | 5 |\n\n假设公司和用户都根据最小最大定理进行最优博弈，以达到纯策略下的稳定均衡，请确定该博弈的值。这个值代表了在此均衡结果下用户的满意度分数。", "solution": "将此互动建模为零和矩阵博弈，用户（行参与者）的支付矩阵为\n$$A=\\begin{pmatrix}8 & 2 \\\\ 6 & 5\\end{pmatrix}.$$\n为了通过最小最大定理检查纯策略鞍点，计算行最小值（用户在每一行中能保证的支付）：\n$$r_{1}=\\min\\{8,2\\}=2,\\quad r_{2}=\\min\\{6,5\\}=5.$$\n用户的最大最小值为\n$$v_{\\text{maximin}}=\\max\\{r_{1},r_{2}\\}=\\max\\{2,5\\}=5,$$\n通过选择第二行（使用数据可视化工具）达到。\n\n接下来，计算列最大值（给定公司的每一列选择，用户的最佳响应支付）：\n$$c_{1}=\\max\\{8,6\\}=8,\\quad c_{2}=\\max\\{2,5\\}=5.$$\n公司的最小最大值为\n$$v_{\\text{minimax}}=\\min\\{c_{1},c_{2}\\}=\\min\\{8,5\\}=5,$$\n通过选择第二列（修复错误 B）达到。\n\n由于 $v_{\\text{maximin}}=v_{\\text{minimax}}=5$，在元素 $a_{22}=5$ 处存在一个鞍点。因此，在纯策略下的最优博弈中，该博弈的值（用户在均衡状态下的满意度分数）为 $5$。", "answer": "$$\\boxed{5}$$", "id": "1383774"}, {"introduction": "在更复杂的博弈中，直接寻找鞍点可能很繁琐。这个练习 [@problem_id:1383764] 介绍了一种强大的简化技术：迭代剔除严格劣策略。通过首先识别并移除那些无论对手如何选择都显然更差的策略，你可以将一个大矩阵简化为一个更易于分析的小博弈，从而高效地找到鞍点。", "problem": "两家科技初创公司，“Innovate Inc.”（玩家R）和“MarketMover”（玩家C），正在决定它们下一个季度的主要商业策略。这是一个零和博弈，其支付代表Innovate Inc.所获得的净市场份额百分点增益。正值表示Innovate Inc.从MarketMover那里获得了市场份额，而MarketMover则试图最小化这一增益。\n\nInnovate Inc.（玩家R，行玩家）可以从三种策略中选择：\n- R1：专注于激进的市场营销。\n- R2：推出一款新的旗舰产品。\n- R3：对现有产品提供大幅折扣。\n\nMarketMover（玩家C，列玩家）有四种可用策略：\n- C1：增加其自身的研发预算。\n- C2：发起反向营销活动。\n- C3：与分销商建立战略伙伴关系。\n- C4：维持现状。\n\nInnovate Inc.的支付矩阵如下所示：\n\n$$\n\\begin{array}{c|cccc}\n & C1 & C2 & C3 & C4 \\\\\n\\hline\nR1 & 2 & 1 & 3 & 4 \\\\\nR2 & 6 & 5 & 6 & 7 \\\\\nR3 & 3 & 2 & 4 & 5 \\\\\n\\end{array}\n$$\n\n你的任务是分析这个博弈。首先，找出玩家R的所有被其另一策略严格劣势的策略。然后独立地找出玩家C的所有被其另一策略严格劣势的策略。移除双方所有已识别的严格劣势策略，以形成一个简化博弈。\n\n下列哪个陈述正确地指出了原始博弈中严格劣势策略的全集，以及简化博弈所得到的鞍点策略对和博弈值？\n\nA. 劣势策略：R1, C1。鞍点：(R2, C3)，博弈值：6。\n\nB. 劣势策略：R1, R3, C1, C3, C4。鞍点：(R2, C2)，博弈值：5。\n\nC. 劣势策略：R3, C3。鞍点：(R2, C1)，博弈值：6。\n\nD. 劣势策略：R1, R3。简化博弈没有鞍点。\n\nE. 劣势策略：C1, C4。鞍点：(R3, C2)，博弈值：2。", "solution": "在一个零和博弈中，对于玩家R，如果对于每一列 $j$ 都有 $a_{r'j} > a_{rj}$，则称行 $r'$ 严格优于行 $r$。对于玩家C，如果对于每一行 $i$ 都有 $a_{ic'} < a_{ic}$，则称列 $c'$ 严格优于列 $c$，因为玩家C的目标是最小化玩家R的支付。\n\n比较玩家R的各行：\n- $R2$ 对比 $R1$：对于 $C1, C2, C3, C4$，比较结果为 $6>2$, $5>1$, $6>3$, $7>4$，因此 $R2$ 严格优于 $R1$。\n- $R2$ 对比 $R3$：对于 $C1, C2, C3, C4$，比较结果为 $6>3$, $5>2$, $6>4$, $7>5$，因此 $R2$ 严格优于 $R3$。\n因此，玩家R的严格劣势策略是 $R1$ 和 $R3$。\n\n比较玩家C的各列（寻找数值统一更小的列）：\n- $C2$ 对比 $C1$：对于 $R1, R2, R3$，比较结果为 $1<2$, $5<6$, $2<3$，因此 $C2$ 严格优于 $C1$。\n- $C2$ 对比 $C3$：对于 $R1, R2, R3$，比较结果为 $1<3$, $5<6$, $2<4$，因此 $C2$ 严格优于 $C3$。\n- $C2$ 对比 $C4$：对于 $R1, R2, R3$，比较结果为 $1<4$, $5<7$, $2<5$，因此 $C2$ 严格优于 $C4$。\n因此，玩家C的严格劣势策略是 $C1$、$C3$ 和 $C4$。\n\n移除 $R1$、$R3$、$C1$、$C3$ 和 $C4$ 后，简化博弈只剩下位于 $(R2, C2)$ 的单个条目，其值为 $5$。一个 $1\\times 1$ 的博弈在其剩余的策略处有一个鞍点，因此鞍点为 $(R2, C2)$，博弈值为 $5$。\n\n这与选项B完全匹配。", "answer": "$$\\boxed{B}$$", "id": "1383764"}, {"introduction": "当策略空间巨大以至于无法写出完整的支付矩阵时，我们需要采取更巧妙的方法。这个练习 [@problem_id:1383770] 挑战你超越矩阵计算，转向分析性思维。通过洞察支付函数的数学结构，例如它是否可以分解为与每个玩家选择相关的独立部分，你可以独立地确定每个玩家的最优选择，这展示了从代数结构直接推导战略决策的优雅和力量。", "problem": "在一个零和博弈中，有两名参与者，分别为行参与者和列参与者。行参与者从集合 $S_R = \\{1, 2, \\ldots, 12\\}$ 中选择一个整数 $i$，同时，列参与者从集合 $S_C = \\{1, 2, \\ldots, 18\\}$ 中选择一个整数 $j$。\n\n行参与者的支付由函数 $P(i, j) = (i - k)^2 - (j - m)^2$ 决定，其中 $k=7$ 且 $m=11$。列参与者的支付为 $-P(i,j)$。两位参与者都是完全理性的，并且都旨在优化自己的结果。行参与者寻求最大化支付 $P(i,j)$，而列参与者则寻求最小化它。\n\n假设存在纯策略均衡（一个鞍点），请分别确定行参与者和列参与者的最优策略对 $(i^*, j^*)$。您的分析不应依赖于构建完整的 $12 \\times 18$ 支付矩阵。\n\n请以整数对 $(i^*, j^*)$ 的形式给出您的答案。", "solution": "题目要求我们找到由支付函数 $P(i, j) = (i - 7)^2 - (j - 11)^2$ 定义的零和博弈的鞍点 $(i^*, j^*)$。行参与者选择 $i \\in \\{1, 2, \\ldots, 12\\}$ 以最大化 $P(i, j)$，而列参与者选择 $j \\in \\{1, 2, \\ldots, 18\\}$ 以最小化 $P(i, j)$。\n\n鞍点 $(i^*, j^*)$ 是一个策略对，使得任何一方参与者都无法通过单方面改变其策略而获益。对于形式为 $P(i, j) = f(i) - g(j)$ 的可分离支付函数，可以通过独立分析每个参与者的最优选择来找到鞍点。\n\n支付函数为 $P(i,j) = (i-7)^2 - (j-11)^2$。我们可以识别出 $f(i) = (i-7)^2$ 和 $g(j) = (j-11)^2$。\n\n**行参与者的最优策略：**\n行参与者的目标是选择一个整数 $i \\in \\{1, 2, \\ldots, 12\\}$ 来最大化支付 $P(i, j)$。由于参与者对 $i$ 的选择只影响第一项 $(i-7)^2$，而对第二项 $(j-11)^2$ 没有影响，因此行参与者的问题简化为最大化 $f(i) = (i-7)^2$。\n\n函数 $f(i) = (i-7)^2$ 描述了一个开口向上、顶点（最小值）在 $i=7$ 处的抛物线。当 $i$ 离 7 越远，函数的值就越大。为了在离散集合 $\\{1, 2, \\ldots, 12\\}$ 中找到 $f(i)$ 的最大值，我们必须找到该集合中离 7 最远的整数。\n\n我们计算区间 $[1, 12]$ 的端点到 $i=7$ 处最小值的距离：\n- 距离 $i=1$：$|1 - 7| = 6$。\n- 距离 $i=12$：$|12 - 7| = 5$。\n\n最大距离是 6，出现在 $i=1$ 处。因此，行参与者的最优策略是 $i^*=1$。\n\n**列参与者的最优策略：**\n列参与者的目标是选择一个整数 $j \\in \\{1, 2, \\ldots, 18\\}$ 来最小化支付 $P(i, j)$。由于参与者对 $j$ 的选择只影响第二项 $-(j-11)^2$，因此列参与者的问题简化为最小化该项。\n\n最小化 $-(j-11)^2$ 等价于最大化其对应的正数项 $g(j) = (j-11)^2$。函数 $g(j) = (j-11)^2$ 是一个开口向上、顶点（最小值）在 $j=11$ 处的抛物线。当 $j$ 离 11 越远，函数的值就越大。为了在离散集合 $\\{1, 2, \\ldots, 18\\}$ 中找到 $g(j)$ 的最大值，我们必须找到该集合中离 11 最远的整数。\n\n我们计算区间 $[1, 18]$ 的端点到 $j=11$ 处最小值的距离：\n- 距离 $j=1$：$|1 - 11| = 10$。\n- 距离 $j=18$：$|18 - 11| = 7$。\n\n最大距离是 10，出现在 $j=1$ 处。因此，列参与者的最优策略是 $j^*=1$。\n\n**结论：**\n鞍点是最优策略对 $(i^*, j^*)$。综合我们的结果，鞍点是 $(1, 1)$。", "answer": "$$\\boxed{\\begin{pmatrix}1 & 1\\end{pmatrix}}$$", "id": "1383770"}]}