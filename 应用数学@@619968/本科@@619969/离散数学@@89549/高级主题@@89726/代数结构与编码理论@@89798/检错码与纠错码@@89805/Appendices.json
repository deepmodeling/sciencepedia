{"hands_on_practices": [{"introduction": "线性码的基础是其生成矩阵$G$。本练习将让你亲手体验如何从一个给定的生成矩阵出发，构建出整个码字集合。通过为所有可能的消息生成对应的码字并计算其汉明重量，你将能确定该码的一个核心参数——最小重量，它直接决定了码的检错和纠错能力。[@problem_id:1367884]", "problem": "在数字通信中，线性分组码用于检测和纠正错误。一个线性码 $C$ 是一组固定长度的二进制串，称为码字。定义这种码的一种常见方法是使用生成矩阵。\n\n考虑一个将2比特信息字编码为4比特码字的系统。编码通过一个 $2 \\times 4$ 的生成矩阵 $G$ 来执行。一个表示为长度为2的行向量的信息字 $u$，通过矩阵乘法 $c = uG$ 被编码为一个长度为4的行向量的码字 $c$。所有算术运算都在模2下进行（即 $1+1=0$）。\n\n该系统的生成矩阵由下式给出：\n$$G = \\begin{pmatrix} 1 & 1 & 0 & 1 \\\\ 0 & 1 & 1 & 0 \\end{pmatrix}$$\n\n一个码字的汉明重量，记作 $w(c)$，是码字中1的个数。码 $C$ 的最小重量是 $C$ 中所有非零码字中的最小汉明重量。\n\n确定由矩阵 $G$ 生成的码的最小重量。", "solution": "由矩阵 $G$ 生成的二进制线性码包含所有形如 $c = uG$ 的码字 $c$，其中 $u$ 是一个二进制行向量。对于给定的生成矩阵\n$$\nG=\\begin{pmatrix}\n1 & 1 & 0 & 1\\\\\n0 & 1 & 1 & 0\n\\end{pmatrix},\n$$\n设其两行分别记为 $g_{1}$ 和 $g_{2}$：\n$$\ng_{1}=(1,1,0,1), \\quad g_{2}=(0,1,1,0).\n$$\n由于所有运算都是模2运算，码字的集合为\n$$\nC=\\{u_{1}g_{1}+u_{2}g_{2} \\mid u_{1},u_{2}\\in\\{0,1\\}\\}.\n$$\n我们枚举所有可能的非零信息向量 $u=(u_{1},u_{2})$ 并计算相应的码字：\n- 对于 $u=(1,0)$：\n$$\nc=g_{1}=(1,1,0,1), \\quad w(c)=3.\n$$\n- 对于 $u=(0,1)$：\n$$\nc=g_{2}=(0,1,1,0), \\quad w(c)=2.\n$$\n- 对于 $u=(1,1)$：\n$$\nc=g_{1}+g_{2}=(1,1,0,1)+(0,1,1,0)=(1,0,1,1), \\quad w(c)=3.\n$$\n零信息 $u=(0,0)$ 产生零码字，这在最小重量的定义中被排除。因此，所有非零码字中的最小汉明重量是\n$$\n\\min\\{3,2,3\\}=2.\n$$\n因此，由 $G$ 生成的码的最小重量是 $2$。", "answer": "$$\\boxed{2}$$", "id": "1367884"}, {"introduction": "在了解如何使用生成矩阵$G$将消息编码为码字后，一个自然的问题是如何进行逆向操作。本练习将引导你在一个理想的无错误场景下，从一个接收到的码字恢复出原始消息。你将看到，当生成矩阵采用一种被称为“系统形式”的特殊结构时，解码过程可以变得非常直观和高效。[@problem_id:1367870]", "problem": "在一个简化的数字通信协议中，消息向量使用线性分组码进行编码，以增加冗余并实现错误检测。该协议使用一种特定的 $(6, 3)$ 码，它将 3 比特的消息向量转换为 6 比特的码字。编码通过与一个生成矩阵 $G$ 相乘来执行。\n\n3 比特消息向量 $m = [m_1, m_2, m_3]$ 与其对应的 6 比特码字 $c$ 之间的关系由方程 $c = mG$ 给出，其中所有算术运算都在二元域 $GF(2)$ 上进行（即，加法等同于异或运算，且 $1+1=0$）。\n\n该码的生成矩阵为：\n$$ G = \\begin{pmatrix} 1 & 1 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 1 & 0 \\\\ 1 & 0 & 1 & 0 & 0 & 1 \\end{pmatrix} $$\n\n假设接收到的码字为 $c = [0, 1, 1, 1, 0, 1]$，并且已知在传输过程中没有发生错误。确定被编码的原始 3 比特消息向量 $m$。将您的答案表示为一个 $1 \\times 3$ 的行矩阵。", "solution": "我们在二元域 $GF(2)$ 上进行计算，因此所有加法都是模 2 运算。编码规则是 $c = mG$，其中 $m$ 是一个 $1 \\times 3$ 的行向量，$G$ 是一个 $3 \\times 6$ 的矩阵，$c$ 是一个 $1 \\times 6$ 的行向量。\n\n观察到给定的生成矩阵可以分块为\n$$\nG = \\begin{pmatrix} 1 & 1 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 1 & 0 & 1 & 0 \\\\ 1 & 0 & 1 & 0 & 0 & 1 \\end{pmatrix}\n= \\bigl[\\,P \\;\\big|\\; I_{3}\\,\\bigr],\n$$\n其中\n$$\nP = \\begin{pmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 1 \\\\ 1 & 0 & 1 \\end{pmatrix}, \\quad I_{3} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\end{pmatrix}.\n$$\n因此，对于任何消息 $m$，码字可以分解为\n$$\nc = mG = \\bigl[\\, mP \\;\\big|\\; mI_{3} \\,\\bigr] = \\bigl[\\, mP \\;\\big|\\; m \\,\\bigr].\n$$\n因此，$c$ 的最后三个分量等于原始消息 $m$。\n\n给定接收到的码字 $c = [0, 1, 1, 1, 0, 1]$ 且无传输错误，我们可以直接读出\n$$\nm = [c_{4}, c_{5}, c_{6}] = [1, 0, 1].\n$$\n作为一致性检查，在 $GF(2)$ 上计算 $mP$：\n$$\nmP = [1,0,1] \\begin{pmatrix} 1 & 1 & 0 \\\\ 0 & 1 & 1 \\\\ 1 & 0 & 1 \\end{pmatrix}\n= \\bigl[\\, 1\\cdot 1 + 0\\cdot 0 + 1\\cdot 1,\\; 1\\cdot 1 + 0\\cdot 1 + 1\\cdot 0,\\; 1\\cdot 0 + 0\\cdot 1 + 1\\cdot 1 \\,\\bigr]\n= [0, 1, 1],\n$$\n这与 $c$ 的前三个分量相匹配，证实了其正确性。\n\n因此，原始消息向量是 $1 \\times 3$ 的行矩阵 $\\begin{pmatrix} 1 & 0 & 1 \\end{pmatrix}$。", "answer": "$$\\boxed{\\begin{pmatrix} 1 & 0 & 1 \\end{pmatrix}}$$", "id": "1367870"}, {"introduction": "纠错码的真正价值体现在它们处理传输错误的能力上。本练习将向你介绍错误检测的核心工具：伴随式，它通过与码相关联的校验矩阵$H$来计算。通过对一个接收到的字串进行伴随式计算，你将实践检测传输错误的基本机制，为后续更复杂的纠错算法打下基础。[@problem_id:1367894]", "problem": "在线性分组码理论中，对于二元域 $\\mathbb{F}_2 = \\{0, 1\\}$，一个接收字 $y$ 的校正子（syndrome）是一个用于检错的向量 $s$。它通过矩阵向量积 $s = H y^T$ 计算得出，其中 $H$ 是码的奇偶校验矩阵，而 $y^T$ 是字 $y$ 的转置。所有的算术运算都在模2下进行，其中 $1+1=0$。\n\n考虑一个由以下奇偶校验矩阵定义的特定线性码：\n$$\nH = \\begin{pmatrix}\n1 & 1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 & 1 \\\\\n1 & 0 & 1 & 1 & 0\n\\end{pmatrix}\n$$\n假设接收到的字为 $y = (1, 0, 1, 1, 0)$。计算其对应的校正子 $s$。将你的答案表示为一个行矩阵。", "solution": "我们在 $\\mathbb{F}_{2}$ 上使用 $s=H y^{T}$ 来计算校正子 $s$，其中的算术运算是模2的。给定的奇偶校验矩阵是\n$$\nH=\\begin{pmatrix}\n1 & 1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 & 1 \\\\\n1 & 0 & 1 & 1 & 0\n\\end{pmatrix},\n$$\n接收到的字表示为列向量是\n$$\ny^{T}=\\begin{pmatrix}1 \\\\ 0 \\\\ 1 \\\\ 1 \\\\ 0\\end{pmatrix}.\n$$\n将 $s$ 的每个分量计算为 $H$ 的对应行与 $y^{T}$ 的点积，所有运算均在模2下进行：\n- 第一个分量：$(1)(1)+(1)(0)+(0)(1)+(1)(1)+(0)(0)=1+0+0+1+0=2\\equiv 0 \\pmod{2}$。\n- 第二个分量：$(0)(1)+(1)(0)+(1)(1)+(0)(1)+(1)(0)=0+0+1+0+0=1\\equiv 1 \\pmod{2}$。\n- 第三个分量：$(1)(1)+(0)(0)+(1)(1)+(1)(1)+(0)(0)=1+0+1+1+0=3\\equiv 1 \\pmod{2}$。\n\n因此，作为列向量的 $s=\\begin{pmatrix}0 \\\\ 1 \\\\ 1\\end{pmatrix}$，表示为行矩阵即为 $\\begin{pmatrix}0 & 1 & 1\\end{pmatrix}$。", "answer": "$$\\boxed{\\begin{pmatrix}0 & 1 & 1\\end{pmatrix}}$$", "id": "1367894"}]}