{"hands_on_practices": [{"introduction": "计算复杂性理论的威力不仅在于其深刻的数学内涵，更在于它能为现实世界的问题提供一个分析框架。许多日常生活中遇到的规划和调度问题，本质上都可以抽象为经典的计算问题。本练习将引导你将一个常见的委员会筛选场景转化为一个标准的图论问题 [@problem_id:1357916]，这是进行复杂性分析的第一步，也是培养计算思维的关键。", "problem": "一所大学正在组建一个学生咨询委员会。这个现实世界中的遴选过程可以被建模为一个计算机科学中的形式化问题。考虑以下情景：\n\n有 $n$ 名申请人申请加入该委员会。由于各种利益冲突和人际关系问题，我们获得了一份名单，其中列出了互不相容的申请人对。目标是组建一个规模为 $k$ 的委员会，使得委员会中任意两名成员之间都不存在不相容关系。\n\n为了分析此任务的计算复杂性，该问题被建模为一个图 $G=(V, E)$，其中顶点集 $V$ 对应 $n$ 名申请人，当且仅当申请人 $u$ 和 $v$ 互不相容时，边集 $E$ 中存在一条无向边 $(u, v)$。\n\n其判定问题是：“给定图 $G$ 和一个整数 $k$，是否存在一个规模为 $k$ 的有效委员会？”\n\n这个委员会遴选问题等价于复杂性理论中的一个著名问题。它是下列哪个标准计算问题？\n\nA. CLIQUE\n\nB. INDEPENDENT SET\n\nC. VERTEX COVER\n\nD. HAMILTONIAN PATH\n\nE. 2-SATISFIABILITY (2-SAT)\n\nF. EULERIAN PATH", "solution": "我们将委员会遴选问题形式化如下。设 $G=(V,E)$ 是一个无向图，其中 $V$ 是 $n$ 名申请人的集合，且当且仅当申请人 $u$ 和 $v$ 互不相容时，有 $(u,v)\\in E$。一个规模为 $k$ 的有效委员会是顶点集 $V$ 的一个子集 $S\\subseteq V$，满足 $|S|=k$ 且 $S$ 中任意两名成员都互不相容。形式上，这要求\n$$\n\\forall u,v\\in S,\\ u\\neq v \\implies (u,v)\\notin E.\n$$\n根据图论的定义，一个集合 $S\\subseteq V$ 是一个独立集，当且仅当 $E$ 中没有边的两个端点都位于 $S$ 中，这等价于\n$$\n\\forall u,v\\in S,\\ u\\neq v \\implies (u,v)\\notin E.\n$$\n比较这两个条件，可以发现委员会可行性的条件恰好是独立集的定义。因此，判定问题“给定 $G$ 和 $k$，是否存在一个规模为 $k$ 且没有不相容成员对的委员会？” 正是 INDEPENDENT SET 问题：判定 $G$ 是否有一个大小至少为 $k$ 的独立集。\n\n为完整起见，请注意，CLIQUE 要求 $S$ 中的所有点对都相邻，这对应于将“相容”而不是“不相容”建模为边；VERTEX COVER、HAMILTONIAN PATH、2-SATISFIABILITY 和 EULERIAN PATH 与所述的约束结构不符。因此，正确的标准问题是 INDEPENDENT SET。", "answer": "$$\\boxed{B}$$", "id": "1357916"}, {"introduction": "一个问题的计算复杂性并非一成不变，它与问题的具体结构密切相关。一个在一般情况下被认为是“难”解（NP-hard）的问题，在施加了特定结构约束后，可能变得出人意料地“简单”（在 $P$ 中）。本练习 [@problem_id:1357913] 探讨了这一重要现象，通过分析树这种特殊结构下的最长路径问题，展示了结构如何显著改变问题的可解性边界。", "problem": "一位网络架构师正在为新的企业园区设计一个通信网络。为了最小化延迟和潜在的故障点，该网络拓扑被设计为一棵**树**，即一个没有环的连通图。在这个网络中，每个节点代表一个路由器，每条边代表一个直接的、对称的通信链路。\n\n该架构师需要找出网络中任意两个路由器之间可能具有最大延迟的路径。这对应于在图中找到**最长简单路径**，其中简单路径是指不重复任何节点的路径，而路径的长度定义为其包含的边的数量。\n\n在一般算法理论中，问题通常被划分为不同的复杂性类别。**P**类（Polynomial time，多项式时间）包括所有能由一个算法在输入规模的多项式函数时间内解决的判定问题。**NP**类（Nondeterministic Polynomial time，非确定性多项式时间）包括所有其给定解的正确性可以在多项式时间内验证的判定问题。众所周知，对于一个一般的、任意的图，找到最长简单路径的问题是NP-hard的，这意味着它至少与NP中最困难的问题一样难。\n\n考虑到该网络被特别构造成一棵树，这个约束如何影响找到任意两个节点之间最长简单路径的计算复杂性？\n\n为“树中的最长路径”问题选择正确的分类。\n\nA. 该问题属于P类。\n\nB. 该问题是NP-complete的（因此假设 P ≠ NP，则不属于P类）。\n\nC. 该问题属于NP类但不是NP-complete的，并且目前未知其是否属于P类。\n\nD. 该问题是不可判定的。", "solution": "将网络建模为一棵树 $T=(V,E)$，根据定义，$T$ 是连通且无环的，因此 $|E|=|V|-1$。树中的最长简单路径即为其直径，定义为\n$$\nD \\equiv \\max_{x,y \\in V} \\mathrm{dist}(x,y),\n$$\n其中 $\\mathrm{dist}(x,y)$ 是 $x$ 和 $y$ 之间唯一简单路径上的边数。\n\n有一个线性时间算法可以在树中使用两次广度优先搜索（或深度优先搜索）来计算 $D$，该算法依赖于这样一个事实：在树中，任意两个顶点之间都存在唯一的简单路径：\n1. 任选一个节点 $r \\in V$，运行一次广度优先搜索（BFS）以计算所有 $v \\in V$ 的 $d_{r}(v)=\\mathrm{dist}(r,v)$。令\n$$\nu \\in \\arg\\max_{v \\in V} d_{r}(v).\n$$\n2. 从 $u$ 开始运行一次BFS以计算所有 $v \\in V$ 的 $d_{u}(v)=\\mathrm{dist}(u,v)$。令\n$$\nv \\in \\arg\\max_{w \\in V} d_{u}(w).\n$$\n那么从 $u$ 到 $v$ 的路径就是 $T$ 中的一条最长简单路径，其长度就是直径：\n$$\nD = d_{u}(v).\n$$\n\n正确性简述：在树中，任意两个顶点之间存在唯一的简单路径，因此从任何起始顶点开始的BFS都能计算出精确的图距离。距离任意起始点 $r$ 最远的顶点是一个叶节点，并且是某条直径的一个端点；从这样一个端点 $u$ 开始运行BFS，可以找到另一个使 $\\mathrm{dist}(u,\\cdot)$ 最大化的端点 $v$，从而得到直径长度 $D$。\n\n时间复杂度：在 $T$ 上进行一次BFS的时间复杂度为 $O(|V|+|E|)$。由于 $|E|=|V|-1$，在树上进行一次BFS的时间复杂度为 $O(|V|)$。因此，执行两次BFS遍历的时间复杂度为 $O(|V|)$，这是输入规模的多项式时间。因此，树中的最长路径可以在多项式（实际上是线性）时间内找到。\n\n所以，该问题的计算复杂性分类是它属于P类。\n\n因此，正确选项是A。", "answer": "$$\\boxed{A}$$", "id": "1357913"}, {"introduction": "归约（Reduction）是 $NP$-完全性理论的基石，它使我们能够比较不同问题的计算难度。通过展示如何用一个问题的求解器来解决另一个问题，我们可以证明它们之间的难度关系。本练习 [@problem_id:1357884] 将通过一个经典例子——在社交网络中寻找“朋友圈”（CLIQUE）与寻找“陌生人圈”（INDEPENDENT SET）——来实践这一核心概念，让你亲身体会问题间的等价转换。", "problem": "在社交网络的研究中，我们可以将网络建模为一个图 $G = (V, E)$，其中顶点集 $V$ 代表人，而一条边 $(u, v) \\in E$ 表示人 $u$ 和人 $v$ 是朋友。我们可以定义两个基本的群体发现问题：\n\n1.  **FRIEND-GROUP** 问题：给定一个社交网络图 $G$ 和一个正整数 $k$，判断是否存在一个由 $k$ 个互相都是朋友的人组成的群体。形式上，是否存在一个顶点子集 $C \\subseteq V$，使得 $|C|=k$ 并且对于 $C$ 中每一对不同的顶点 $u, v$，边 $(u, v)$ 都在 $E$ 中？\n\n2.  **STRANGER-GROUP** 问题：给定一个社交网络图 $G$ 和一个正整数 $k$，判断是否存在一个由 $k$ 个互相都是陌生人的人组成的群体。形式上，是否存在一个顶点子集 $I \\subseteq V$，使得 $|I|=k$ 并且对于 $I$ 中每一对不同的顶点 $u, v$，边 $(u, v)$ *不*在 $E$ 中？\n\n假设你被给予一台假设的超级计算机，一个“神谕机”（oracle），它能立即解决任何 STRANGER-GROUP 问题的实例。你的任务是使用这个神谕机来解决 FRIEND-GROUP 问题。你必须设计一个过程，该过程接收 FRIEND-GROUP 问题的输入 $(G, k)$，将其转换为 STRANGER-GROUP 问题的输入 $(G', k')$，用 $(G', k')$ 查询神谕机，并使用神谕机的“是/否”答案来正确地解决原始问题。整个转换过程必须是计算高效的（即，相对于输入图 $G$ 的大小，可在多项式时间内执行）。\n\n下列哪个过程正确地描述了如何使用 STRANGER-GROUP 神谕机来解决 FRIEND-GROUP 问题的输入 $(G, k)$？\n\nA. 构建一个新图 $G'$，其顶点集与 $G$ 相同。$G'$ 中两顶点之间存在一条边，当且仅当 $G$ 中它们之间*没有*边。用输入 $(G', k)$ 调用神谕机。\n\nB. 使用原始图 $G$ 并用输入 $(G, k)$ 调用神谕机。\n\nC. 构建一个新图 $G'$，其顶点集与 $G$ 相同。$G'$ 中两顶点之间存在一条边，当且仅当 $G$ 中它们之间*没有*边。令 $|V|$ 为网络中的总人数。用输入 $(G', |V| - k)$ 调用神谕机。\n\nD. 通过添加一个新顶点并将其连接到 $G$ 中的每个顶点来构建新图 $G'$。用输入 $(G', k)$ 调用神谕机。\n\nE. 构建一个新图 $G'$，其顶点集与 $G$ 相同。$G'$ 中两顶点之间存在一条边，当且仅当 $G$ 中它们之间*有*边。用输入 $(G', k)$ 调用神谕机。", "solution": "我们用图论的术语来形式化这两个判定问题。FRIEND-GROUP 问题在输入 $(G,k)$ 上，询问 $G=(V,E)$ 是否包含一个大小为 $k$ 的团 (clique) $C \\subseteq V$，即对于所有不同的 $u,v \\in C$，都有 $(u,v) \\in E$。STRANGER-GROUP 问题在输入 $(G,k)$ 上，询问 $G$ 是否包含一个大小为 $k$ 的独立集 (independent set) $I \\subseteq V$，即对于所有不同的 $u,v \\in I$，都有 $(u,v) \\notin E$。\n\n为了使用 STRANGER-GROUP 神谕机解决 FRIEND-GROUP 问题，我们构造 $G$ 的补图 $G'=(V,E')$，其定义为\n$$\nE' \\;=\\; \\{\\, (u,v) \\in V \\times V \\;\\mid\\; u \\neq v \\text{ and } (u,v) \\notin E \\,\\}.\n$$\n这个构造可以在关于 $|V|$ 的多项式时间内完成，因为它需要为每一对无序的不同顶点检查邻接关系。\n\n我们证明这个归约的正确性：\n- 如果 $|C|=k$ 的 $C \\subseteq V$ 是 $G$ 中的一个团，那么对于所有不同的 $u,v \\in C$，我们有 $(u,v) \\in E$。根据 $G'$ 的定义，这意味着 $(u,v) \\notin E'$，因此 $C$ 中的任意两个顶点在 $G'$ 中都不相邻。所以 $C$ 是 $G'$ 中一个大小为 $k$ 的独立集。\n- 反之，如果 $|I|=k$ 的 $I \\subseteq V$ 是 $G'$ 中的一个独立集，那么对于所有不同的 $u,v \\in I$，我们有 $(u,v) \\notin E'$，根据补图的性质，这意味着 $(u,v) \\in E$。所以 $I$ 是 $G$ 中一个大小为 $k$ 的团。\n\n因此，$G$ 有一个大小为 $k$ 的团当且仅当 $G'$ 有一个大小为 $k$ 的独立集。所以，对于 FRIEND-GROUP 的给定输入 $(G,k)$，我们如上所述构造 $G'$，并用 $(G', k)$ 查询 STRANGER-GROUP 神谕机。神谕机回答“是”当且仅当原始的 FRIEND-GROUP 实例是一个“是”实例。\n\n在所提供的过程中，选项 A 精确地描述了此归约。选项 B 用 $(G,k)$ 查询神谕机，这是在测试 $G$ 中的独立集，而不是 $G$ 中的团。选项 C 错误地将参数更改为 $|V|-k$，这与独立集和顶点覆盖之间的关系有关，而与团无关。选项 D 的图修改未建立所需的等价关系。选项 E 等同于 B，并因相同原因而不正确。\n\n因此，正确的选项是 A。", "answer": "$$\\boxed{A}$$", "id": "1357884"}]}