{"hands_on_practices": [{"introduction": "在深入研究 NP-完备性理论的复杂性之前，打下坚实的基础至关重要。这个练习将带你回到根本，通过直接评估一个给定的 3-CNF 公式来检验一个特定的真值赋值。通过这个直接的计算 [@problem_id:1410968]，你将加深对“满足”一个逻辑子句和整个公式究竟意味着什么的理解。", "problem": "在计算复杂性理论中，布尔可满足性问题 (SAT) 是一个基础性问题。一个常见的变体是 3-可满足性问题 (3-SAT)。如果一个布尔公式是若干子句的合取，其中每个子句是恰好三个文字的析取，那么该公式就处于 3-合取范式 (3-CNF) 中。一个文字是一个布尔变量或其否定。我们使用符号 $\\land$ 表示逻辑与 (合取)，$\\lor$ 表示逻辑或 (析取)，以及 $\\neg$ 表示逻辑非 (否定)。\n\n考虑一个定义在四个布尔变量集合 $\\{x_1, x_2, x_3, x_4\\}$ 上的 3-CNF 公式 $\\phi$。公式 $\\phi$ 由以下五个子句的合取给出：\n$C_1 = (\\neg x_1 \\lor x_2 \\lor \\neg x_3)$\n$C_2 = (\\neg x_1 \\lor x_2 \\lor x_4)$\n$C_3 = (x_1 \\lor x_2 \\lor x_3)$\n$C_4 = (\\neg x_2 \\lor \\neg x_3 \\lor x_4)$\n$C_5 = (x_3 \\lor \\neg x_4 \\lor x_2)$\n\n所以，完整的公式是 $\\phi = C_1 \\land C_2 \\land C_3 \\land C_4 \\land C_5$。\n\n如果一个子句中至少有一个文字在某个真值指派下求值为 True，则称该子句被该真值指派所满足。仅当所有子句都被满足时，整个公式 $\\phi$ 才被满足。\n\n给你以下真值指派 $A$：\n$x_1 = \\text{True}$\n$x_2 = \\text{False}$\n$x_3 = \\text{True}$\n$x_4 = \\text{False}$\n\n请确定公式 $\\phi$ 中被真值指派 $A$ 满足的子句总数。", "solution": "在 3-CNF 公式中，如果一个子句的至少一个文字求值为 $\\text{True}$，则该子句被满足。如果至少一个操作数为 $\\text{True}$，逻辑析取 $\\lor$ 的求值结果为 $\\text{True}$，而否定运算满足 $\\neg \\text{True}=\\text{False}$ 和 $\\neg \\text{False}=\\text{True}$。在指派 $A$ 下，有 $x_{1}=\\text{True}$、$x_{2}=\\text{False}$、$x_{3}=\\text{True}$、$x_{4}=\\text{False}$，我们首先计算所需的否定值：$\\neg x_{1}=\\text{False}$、$\\neg x_{2}=\\text{True}$、$\\neg x_{3}=\\text{False}$、$\\neg x_{4}=\\text{True}$。\n\n计算每个子句的值：\n$$C_{1}=(\\neg x_{1}\\lor x_{2}\\lor \\neg x_{3})=(\\text{False}\\lor \\text{False}\\lor \\text{False})=\\text{False},$$\n$$C_{2}=(\\neg x_{1}\\lor x_{2}\\lor x_{4})=(\\text{False}\\lor \\text{False}\\lor \\text{False})=\\text{False},$$\n$$C_{3}=(x_{1}\\lor x_{2}\\lor x_{3})=(\\text{True}\\lor \\text{False}\\lor \\text{True})=\\text{True},$$\n$$C_{4}=(\\neg x_{2}\\lor \\neg x_{3}\\lor x_{4})=(\\text{True}\\lor \\text{False}\\lor \\text{False})=\\text{True},$$\n$$C_{5}=(x_{3}\\lor \\neg x_{4}\\lor x_{2})=(\\text{True}\\lor \\text{True}\\lor \\text{False})=\\text{True}.$$\n\n因此，恰好有三个子句 $C_{3}$、$C_{4}$ 和 $C_{5}$ 被指派 $A$ 满足。", "answer": "$$\\boxed{3}$$", "id": "1410968"}, {"introduction": "NP-完备性证明的核心在于“规约”——将一个问题转化为另一个问题的能力。这个练习 [@problem_id:1410930] 为你提供了一个将一个较长的逻辑子句（k-SAT 的一部分）转化为一组等价的 3-SAT 子句的实践机会。掌握这种使用辅助变量的构造性技术，是理解为什么 3-SAT 在计算复杂性中扮演着核心角色的关键一步。", "problem": "在一门计算复杂性理论课程中，一位名叫 Alex 的学生正在学习 3-可满足性问题 (3-SAT) 是 NP-完备的证明。许多相关证明中的一个关键步骤是，将一个通用的 k-可满足性问题归约到 3-SAT。这涉及到将任何含有超过3个文字的子句转换成一组每个子句最多有3个文字的子句集合，同时保持可满足性。\n\nAlex 考虑一个大小为4的特定子句 $C = (x_1 \\lor x_2 \\lor x_3 \\lor \\neg x_4)$，其中 $x_1, x_2, x_3, x_4$ 是布尔变量。一个文字是一个变量或其否定。一个子句是文字的析取 (OR)。一个合取范式 (CNF) 公式是子句的合取 (AND)。如果一个公式是 CNF 形式，并且每个子句都恰好有3个文字，那么它就是 3-CNF 公式。\n\n任务是找到一个新公式 $C'$，它是若干个3文字子句的合取，使得 $C'$ 可满足当且仅当原始子句 $C$ 可满足。这个转换可以通过引入一个新的辅助布尔变量（我们称之为 $z_1$）来实现。\n\n下列哪个公式是 $C$ 的一个正确的转换，该转换产生一个等可满足的 CNF 公式，其中每个子句都有3个文字？选择所有适用的选项。\n\nA. $(x_1 \\lor x_2 \\lor z_1) \\land (\\neg z_1 \\lor x_3 \\lor \\neg x_4)$\n\nB. $(x_1 \\lor x_2 \\lor z_1) \\land (\\neg z_1 \\lor x_3 \\lor x_4)$\n\nC. $(x_1 \\lor x_2 \\lor \\neg z_1) \\land (z_1 \\lor x_3 \\lor \\neg x_4)$\n\nD. $(x_1 \\lor z_1 \\lor \\neg z_1) \\land (x_2 \\lor x_3 \\lor \\neg x_4)", "solution": "我们需要一个使用新变量 $z_{1}$ 的 3-CNF 公式 $C'$，使得对于原始变量 $(x_{1},x_{2},x_{3},x_{4})$ 的每一个固定赋值，原始子句 $C=(x_{1}\\lor x_{2}\\lor x_{3}\\lor \\neg x_{4})$ 为真，当且仅当存在一个对 $z_{1}$ 的赋值使得 $C'$ 为真。这就是从 $k$-SAT 到 $3$-SAT 的标准归约中所需的等可满足性条件。\n\n我们逐一验证每个选项。\n\n选项 A: $C'=(x_{1}\\lor x_{2}\\lor z_{1})\\land(\\neg z_{1}\\lor x_{3}\\lor \\neg x_{4})$。\n- 如果 $C$ 为真：\n  - 如果 $(x_{1}\\lor x_{2})$ 为真，设置 $z_{1}=0$。那么第一个子句变为 $(x_{1}\\lor x_{2}\\lor 0)=(x_{1}\\lor x_{2})$，为真；第二个子句变为 $(1\\lor x_{3}\\lor \\neg x_{4})$，也为真。\n  - 如果 $(x_{1}\\lor x_{2})$ 为假，则 $(x_{3}\\lor \\neg x_{4})$ 必须为真。设置 $z_{1}=1$。那么第一个子句变为 $(x_{1}\\lor x_{2}\\lor 1)$，为真；第二个子句变为 $(0\\lor x_{3}\\lor \\neg x_{4})=(x_{3}\\lor \\neg x_{4})$，也为真。\n  因此，如果 $C$ 为真，则存在一个 $z_{1}$ 使得 $C'$ 为真。\n- 反之，如果对于某个 $z_{1}$，$C'$ 为真：\n  - 如果 $z_{1}=0$，那么第一个子句是 $(x_{1}\\lor x_{2})$，所以 $(x_{1}\\lor x_{2})$ 为真，从而 $C$ 为真。\n  - 如果 $z_{1}=1$，那么第二个子句是 $(x_{3}\\lor \\neg x_{4})$，所以 $(x_{3}\\lor \\neg x_{4})$ 为真，从而 $C$ 为真。\n因此 A 是一个正确的等可满足转换。\n\n选项 B: $C'=(x_{1}\\lor x_{2}\\lor z_{1})\\land(\\neg z_{1}\\lor x_{3}\\lor x_{4})$。\n考虑赋值 $x_{1}=0$, $x_{2}=0$, $x_{3}=0$, $x_{4}=1$。此时 $C=(0\\lor 0\\lor 0\\lor 0)=0$。但 $C'$ 变为 $(0\\lor 0\\lor z_{1})\\land(\\neg z_{1}\\lor 0\\lor 1)=z_{1}\\land 1$，通过选择 $z_{1}=1$ 可使其为真。因此，$C$ 为假而 $C'$ 可满足，所以 B 与 $C$ 不是等可满足的。\n\n选项 C: $C'=(x_{1}\\lor x_{2}\\lor \\neg z_{1})\\land(z_{1}\\lor x_{3}\\lor \\neg x_{4})$。\n- 如果 $C$ 为真：\n  - 如果 $(x_{1}\\lor x_{2})$ 为真，设置 $z_{1}=1$。那么第一个子句是 $(x_{1}\\lor x_{2}\\lor 0)=(x_{1}\\lor x_{2})$，为真；第二个子句是 $(1\\lor x_{3}\\lor \\neg x_{4})$，也为真。\n  - 如果 $(x_{1}\\lor x_{2})$ 为假，则 $(x_{3}\\lor \\neg x_{4})$ 必须为真。设置 $z_{1}=0$。那么第一个子句是 $(x_{1}\\lor x_{2}\\lor 1)$，为真；第二个子句是 $(0\\lor x_{3}\\lor \\neg x_{4})=(x_{3}\\lor \\neg x_{4})$，也为真。\n  因此，如果 $C$ 为真，则存在一个 $z_{1}$ 使得 $C'$ 为真。\n- 反之，如果对于某个 $z_{1}$，$C'$ 为真：\n  - 如果 $z_{1}=1$，那么第一个子句简化为 $(x_{1}\\lor x_{2})$，所以 $C$ 为真。\n  - 如果 $z_{1}=0$，那么第二个子句简化为 $(x_{3}\\lor \\neg x_{4})$，所以 $C$ 为真。\n因此 C 是一个正确的等可满足转换。\n\n选项 D: $C'=(x_{1}\\lor z_{1}\\lor \\neg z_{1})\\land(x_{2}\\lor x_{3}\\lor \\neg x_{4})$。\n第一个子句是一个永真式，因为 $(z_{1}\\lor \\neg z_{1})$ 总是为真，所以 $C'$ 等价于 $(x_{2}\\lor x_{3}\\lor \\neg x_{4})$。取 $x_{1}=1$, $x_{2}=0$, $x_{3}=0$, $x_{4}=1$。此时 $C=(1\\lor 0\\lor 0\\lor 0)=1$，但 $C'=(0\\lor 0\\lor 0)=0$，这与 $z_{1}$ 的取值无关。因此，D 与 $C$ 不是等可满足的。\n\n因此，只有选项A和C是正确的。", "answer": "$$\\boxed{AC}$$", "id": "1410930"}, {"introduction": "虽然我们已经看到了如何执行规约，但理解其背后的逻辑同样重要，特别是规约的方向。这个练习 [@problem_id:1388452] 提出了一个看似合理的 NP-完备性证明，但其中包含一个常见的逻辑谬误。通过分析这个错误，你将学会区分正确的规约方向（从一个已知的 NP-hard 问题到一个新问题）和错误的方向，从而巩固你对 NP-hardness 证明的严谨性要求。", "problem": "一家政治咨询公司正在分析两个关键战略规划问题的计算复杂性：竞选人员配置 (Campaign Staffing, CS) 和信息控制 (Message Control, MC)。\n\n**竞选人员配置 (CS)** 问题定义如下：\n- 给定一个包含 $n$ 个潜在竞选项目的集合 $P$，一个不兼容项目对的列表 $C$，以及一个整数 $k$。\n- 问题：是否可能从 $P$ 中选择一个大小至少为 $k$ 的子集 $P' \\subseteq P$，使得 $P'$ 中没有两个项目是不兼容的？\n\n**信息控制 (MC)** 问题定义如下：\n- 给定一个政治辩论主题的集合 $T$，一个主题的“风险对”列表 $L$，以及一个整数 $j$。\n- 问题：是否可能从 $T$ 中选择一个大小至多为 $j$ 的子集 $T' \\subseteq T$，使得对于 $L$ 中的每一个风险对，该对中至少有一个主题是 $T'$ 的成员？\n\n该公司的首席理论家已经确定信息控制 (MC) 问题是 NP-完备的。\n\n一名初级分析师的任务是确定竞选人员配置 (CS) 问题的复杂性。该分析师声称 CS 也是 NP-完备的。为了证明这一点，他们提出了以下从 CS 的任意实例到 MC 实例的多项式时间转换：\n\n1.  给定一个 CS 实例，包含 $n$ 个项目 $P$、不兼容性列表 $C$ 和一个整数 $k$。\n2.  创建一个 MC 实例，其中主题集合 $T$ 与项目集合 $P$ 相同。\n3.  风险对列表 $L$ 与不兼容性列表 $C$ 相同。\n4.  MC 实例的整数设置为 $j = n - k$。\n\n该分析师正确地论证了，当且仅当这个新构建的 MC 实例也有“是”的答案时，原始的 CS 实例才有“是”的答案。基于此转换，分析师得出结论，其证明已完成。\n\n假设分析师关于解等价性的论证是正确的，下列哪项陈述准确地描述了分析师的贡献？\n\nA. 分析师正确地证明了 CS 是 NP-完备的。\nB. 分析师证明了 CS 属于 NP，但没有证明它是 NP难的。\nC. 分析师证明了如果 CS 属于 NP，那么 CS就是 NP-完备的。\nD. 分析师展示了一个错误方向的归约；这个转换无助于证明 CS 是 NP-完备的。\nE. 分析师证明了 CS 可以在多项式时间内解决。", "solution": "要确定分析师结论的有效性，我们必须理解证明一个问题是 NP-完备的所需条件。一个问题 $X$ 是 NP-完备的，如果它满足两个条件：\n1.  $X$ 属于复杂性类 NP（非确定性多项式时间）。这意味着一个为 $X$ 实例提出的解，其正确性可以在多项式时间内被验证。\n2.  $X$ 是 NP难的。这意味着 NP 中的每个问题都可以在多项式时间内归约到 $X$。\n\n在实践中，要证明一个问题 $X$ 是 NP难的，我们不会将 NP 中的每个问题都归约到它。相反，我们选择一个已知的 NP-完备问题，称之为 $Y$，并证明 $Y$ 可以在多项式时间内归约到 $X$。这表示为 $Y \\le_p X$。从 $Y$到 $X$ 的多项式时间归约是一种算法，它在多项式时间内将 $Y$ 的任何实例转换为 $X$ 的一个实例，使得当且仅当转换后的 $X$ 实例是“是”实例时，原始的 $Y$ 实例才是“是”实例。这表明 $X$ 至少和 $Y$ 一样难。由于 $Y$ 是 NP难的（对所有 NP 问题都难），$X$ 也必然是 NP难的。\n\n在这个问题中，两个问题是竞选人员配置 (CS) 和信息控制 (MC)。我们已知 MC 是 NP-完备的。分析师想要证明 CS 是 NP-完备的。要做到这一点，他们需要证明：\n1.  CS 属于 NP。\n2.  CS 是 NP难的。\n\n要证明 CS 是 NP难的，分析师本应选择已知的 NP-完备问题 MC，并展示一个 MC $\\le_p$ CS 的归约。\n\n然而，分析师做的恰恰相反。他们创建了一个从 CS 到 MC 的归约，写作 CS $\\le_p$ MC。分析师证明了 CS 的任何实例都可以在多项式时间内转换为 MC 的一个实例。\n\nCS $\\le_p$ MC 这个归约告诉我们什么？它意味着如果我们有一个多项式时间算法来解决 MC，我们就可以用它在多项式时间内解决 CS。由于 MC 是 NP-完备的，人们相信不存在这样的多项式时间算法。这个归约给出了 CS 相对于 MC 的难度上限；它表明 CS “不比” MC 更难。它没有提供 CS 难度的下限。证明 NP难度需要表明一个问题至少和一个已知的 NP难问题一样难。\n\n因此，为了证明 CS 是 NP难的，分析师的归约方向是“错误”的。他们构建的转换对证明 CS 的 NP完全性没有帮助。\n\n我们来评估一下给出的选项：\nA. 分析师正确地证明了 CS 是 NP-完备的。这是错误的。归约的方向对于证明 NP难度是错误的。\nB. 分析师证明了 CS 属于 NP，但没有证明它是 NP难的。分析师的转换没有涉及 CS 是否属于 NP。（注意：CS *确实*属于 NP，因为可以轻易地检查一个给定的包含 $k$ 个项目的集合是否存在不兼容性，但分析师的工作并未证明这一事实）。这项工作也未能证明 NP难度。\nC. 分析师证明了如果 CS 属于 NP，那么 CS 就是 NP-完备的。这是错误的。要成为 NP-完备的，CS 还必须被证明是 NP难的，而分析师没有做到这一点。\nD. 分析师展示了一个错误方向的归约；这个转换无助于证明 CS 是 NP-完备的。这是正确的陈述。为了证明 CS 是 NP-完备的，分析师需要将一个已知的 NP-完备问题归约*到* CS（例如，MC $\\le_p$ CS），而不是反过来。\nE. 分析师证明了 CS 可以在多项式时间内解决。这是错误的。这个归约只意味着*如果* MC 能在多项式时间内解决，那么 CS 也能，而前者被普遍认为是错误的。\n\n分析师的根本错误在于误解了证明 NP难度所需的归约方向性。", "answer": "$$\\boxed{D}$$", "id": "1388452"}]}