{"hands_on_practices": [{"introduction": "掌握了泵引理的基本原理后，让我们通过一个经典的例子来实践。这个练习将引导你证明语言 $L = \\{a^{m} \\mid m \\text{ 是一个完全平方数}\\}$ 是非正则的，它展示了一种优雅的证明技巧：通过巧妙地选择字符串 $s=a^{p^2}$，我们将泵送后字符串的长度“挤压”在两个连续的完全平方数之间，从而揭示矛盾。[@problem_id:1410613]", "problem": "考虑定义在字母表 $\\Sigma = \\{a\\}$ 上的语言 $L = \\{a^{m} \\mid m \\text{ 是一个完全平方数且 } m \\ge 0\\}$。我们在假设该语言是正则语言的前提下对其进行分析。如果一个语言是正则的，它必须满足一个特定的泵引性质，该性质由一个称为“泵引长度”的整数 $p \\ge 1$ 来刻画。该性质规定，任何在 $L$ 中且长度 $|s| \\ge p$ 的字符串 $s$ 都可以被分割成三个子串 $s = xyz$，并满足以下三个条件：\n(i) $|y| \\ge 1$\n(ii) $|xy| \\le p$\n(iii) 对于所有整数 $i \\ge 0$，字符串 $s_i = xy^iz$ 也属于 $L$。\n\n现在，我们用特定的字符串 $s = a^{p^2}$ 来检验这个性质。由于 $p \\ge 1$，$s$ 的长度为 $|s| = p^2 \\ge p$，这意味着该字符串必须能如上所述被分割。设子串 $y$ 的长度为 $k$，即 $|y|=k$。\n\n如果我们通过选择 $i=2$ 进行“泵引”，我们会得到字符串 $s_2 = xy^2z$。根据条件 (iii) 的要求，为了使该字符串属于 $L$，其长度必须是一个完全平方数。$s_2$ 的长度是 $|s_2| = |s| + |y| = p^2 + k$。下列哪个由给定条件推导出的不等式，能正确证明长度 $p^2+k$ 不可能是一个完全平方数，从而产生矛盾？\n\nA. $p^2 + k > (p+1)^2$\n\nB. $p^2 + k < p^2$\n\nC. $p^2 < p^2 + k < (p+1)^2$\n\nD. $p^2 + k = (p+1)^2$\n\nE. $p^2 + k > (p+2)^2$", "solution": "使用反证法，假设 $L=\\{a^{m}\\mid m\\text{ 是一个完全平方数且 }m\\ge 0\\}$ 是正则语言。根据泵引理，存在一个 $p\\ge 1$，使得任何满足 $|s|\\ge p$ 的字符串 $s\\in L$ 都可以写成 $s=xyz$ 的形式，其中 $|y|\\ge 1$，$|xy|\\le p$，且对于所有 $i\\ge 0$，$xy^{i}z\\in L$。\n\n选择 $s=a^{p^{2}}$，所以 $|s|=p^{2}\\ge p$。在这个一元字母表上，记 $|x|=r$, $|y|=k$, $|z|=p^{2}-r-k$，其中 $r\\ge 0$, $k\\ge 1$。条件 $|xy|\\le p$ 给出\n$$\nr+k\\le p.\n$$\n由于 $r\\ge 0$，可得\n$$\nk\\le p.\n$$\n现在用 $i=2$ 进行泵引。泵引后的字符串长度为\n$$\n|xy^{2}z|=|s|+|y|=p^{2}+k.\n$$\n由 $k\\ge 1$ 我们得到\n$$\np^{2}<p^{2}+k,\n$$\n并且由 $k\\le p$ 我们得到\n$$\np^{2}+k\\le p^{2}+p<p^{2}+2p+1=(p+1)^{2}.\n$$\n因此\n$$\np^{2}<p^{2}+k<(p+1)^{2}.\n$$\n一个严格介于两个连续完全平方数之间的数其本身不可能是完全平方数，这与 $xy^{2}z\\in L$ 的要求相矛盾。因此，证明该矛盾的不等式是 $p^{2}<p^{2}+k<(p+1)^{2}$，也就是选项C。", "answer": "$$\\boxed{C}$$", "id": "1410613"}, {"introduction": "在构建一个泵引理证明时，第一步——选择一个合适的字符串——至关重要。这个练习探讨了一个常见的错误：选择一个对某些泵送长度 $p$ 而言实际上并不属于目标语言的字符串。通过分析为何选择 $s=(ab)^p$ 对于语言 $L = \\{a^n b^n \\mid n \\ge 0\\}$ 是一个有缺陷的策略，你将学会如何验证和确保你证明的前提是坚实的。[@problem_id:1410578]", "problem": "在一门计算理论课程中，一名学生需要分析字母表 $\\Sigma = \\{a, b\\}$ 上的语言 $L = \\{a^n b^n \\mid n \\ge 0\\}$。该学生旨在使用正则语言的泵引理来证明 $L$ 不是一个正则语言。\n\n泵引理陈述如下：\n如果一个语言 $A$ 是正则的，那么存在一个数 $p \\ge 1$（泵引长度），使得对于 $A$ 中任意长度 $|s| \\ge p$ 的字符串 $s$，可将 $s$ 分为三部分 $s=xyz$，且满足以下条件：\n1. 对于每个整数 $i \\ge 0$，字符串 $xy^iz$ 都在 $A$ 中。\n2. $y$ 的长度大于零，即 $|y| > 0$。\n3. $x$ 和 $y$ 的总长度最多为 $p$，即 $|xy| \\le p$。\n\n为了构造一个反证法证明，该学生假设 $L$ 是正则的，并由对手给出一个任意的泵引长度 $p \\ge 1$。学生必须选择一个特定的字符串 $s \\in L$ 且 $|s| \\ge p$，这个字符串将导致矛盾。\n\n学生考虑选择字符串 $s = (ab)^p$。以下哪个陈述为这一选择是证明中的一个有缺陷的策略提供了最准确和根本的原因？\n\nA. 字符串的长度 $|s|=2p$ 不保证大于或等于泵引长度 $p$。\n\nB. 对于字符串 $s=(ab)^p$，不可能找到一个满足条件 $|xy| \\le p$ 的分解 $s=xyz$。\n\nC. 对于任何泵引长度 $p \\ge 2$，字符串 $s=(ab)^p$ 都不是语言 $L$ 的成员。\n\nD. 对于 $s=(ab)^p$ 的任何有效分解 $s=xyz$，总能找到一个整数 $i \\ge 0$ 使得 $xy^iz$ 仍然在语言 $L$ 中。\n\nE. 字符串 $s=(ab)^p$ 是一个有效的选择，但它没有用，因为对子串 $y=ab$进行泵引会得到 $(ab)^{p+i-1}$，这是一个遵循简单模式的字符串。", "solution": "我们从泵引理的设定开始：为了通过反证法证明 $L=\\{a^{n}b^{n}\\mid n\\ge 0\\}$ 不是正则的，我们假设 $L$是正则的，获得一个任意的泵引长度 $p\\ge 1$，然后必须选择一个字符串 $s\\in L$ 且 $|s|\\ge p$ 来进行泵引。引理的前提条件明确要求 $s\\in L$。\n\n考虑所提议的选择 $s=(ab)^{p}$。我们检查对于任意的 $p$，是否有 $s\\in L$。\n\n语言 $L$ 中任何字符串的一个必要结构属性是，它由一个 $a$ 块后跟一个 $b$ 块组成，且不出现子串 $ba$。等价地，任何 $n\\ge 2$ 的 $a^{n}b^{n}$ 都包含子串 $aa$，且都不包含子串 $ba$。\n\n另一方面，对于 $p\\ge 2$，字符串 $(ab)^{p}$ 的符号是交替出现的，因此：\n- 包含子串 $ba$，并且\n- 不包含子串 $aa$。\n\n因此，对于每个 $p\\ge 2$，我们都有 $(ab)^{p}\\notin L$。只有当 $p=1$ 时，$(ab)^{p}=ab=a^{1}b^{1}\\in L$ 才成立。\n\n因为对手可以给出任何 $p\\ge 1$，所以学生的选择必须对该 $p$ 产生一个字符串 $s\\in L$。选择 $s=(ab)^{p}$ 对所有 $p\\ge 2$ 都不满足这个基本要求，因此它对于泵引理的论证是一个无效的选择。\n\n评估选项：\n- A 是错误的，因为对于 $p\\ge 1$，$|s|=2p\\ge p$ 总是成立。\n- B 是错误的，因为找到满足 $|xy|\\le p$ 的某个 $xyz$ 并不存在障碍；引理保证了正则语言存在这样的分解，但这里的问题是对于 $p\\ge 2$，$s\\notin L$。\n- C 是正确的：对于任何 $p\\ge 2$，$(ab)^{p}\\notin L$，这违反了 $s\\in L$ 这个基本要求。\n- D 是不正确的，因为它断言了一个泵引成功的条件，而这个条件与分解的选择无关，这通常是不成立的；此外，它忽略了对于 $p\\ge 2$，$s\\notin L$ 的事实。\n- E 是不正确的，因为它声称 $s$ 是一个有效的选择；而对于 $p\\ge 2$ 它并非有效。\n\n因此，选择 $s=(ab)^{p}$ 存在缺陷的最准确和根本的原因是，对于 $p\\ge 2$，它不属于 $L$。", "answer": "$$\\boxed{C}$$", "id": "1410578"}, {"introduction": "泵引理的真正挑战往往在于其严密的逻辑结构，尤其是量词“存在”（$\\exists$）和“对于所有”（$\\forall$）的交替使用。这个练习提供了一个学生错误的论证，他试图“证明”一个实际上是正则的语言为非正则语言。你的任务是找出其论证中的根本性逻辑漏洞，这将加深你对“必须对*所有*可能的分解都导出矛盾”这一核心要求的理解。[@problem_id:1410583]", "problem": "一名学生正尝试使用正则语言的泵引理来证明一个特定的语言不是正则的。该学生的过程如下所示。\n\n**该语言：**\n设 $L$ 是所有表示偶数的非空二进制字符串的语言。这可以被定义为字母表 $\\{0, 1\\}$ 上所有以 '0' 结尾的字符串的集合。\n$L = \\{w \\in \\{0, 1\\}^* \\mid w \\text{ ends with a '0' and } |w| \\ge 1 \\}$\n\n**该学生的论证：**\n\n1.  **假设：** 为了引出矛盾，假设语言 $L$ 是正则的。\n2.  **泵引长度：** 根据泵引理，对于语言 $L$ 必然存在一个泵引长度 $p \\ge 1$。\n3.  **字符串选择：** 我选择字符串 $s = 1^{p-1}0$。这个字符串在 $L$ 中，因为它以 '0' 结尾。其长度为 $|s| = p$，满足条件 $|s| \\ge p$。\n4.  **分解：** 根据泵引理，$s$ 可以被分解为三部分，$s = xyz$，使得以下条件成立：\n    (i) $|xy| \\le p$\n    (ii) $|y| \\ge 1$\n    (iii) 对于所有整数 $i \\ge 0$，字符串 $xy^iz$ 都在 $L$ 中。\n5.  **我选择的分解：** 我将分解选择如下：$x = 1^{p-1}$，$y = 0$，以及 $z = \\epsilon$（空字符串）。这是一个有效的分解，因为 $|xy| = |1^{p-1}0| = p \\le p$ 并且 $|y| = |0| = 1 \\ge 1$。\n6.  **泵引：** 现在，我将测试泵引条件 (iii)。我们选择 $i=0$。得到的字符串是 $s' = xy^0z = xz = (1^{p-1})(\\epsilon) = 1^{p-1}$。\n7.  **矛盾：** 字符串 $s' = 1^{p-1}$ 不以 '0' 结尾。因此，$s'$ 不在语言 $L$ 中。这与泵引理的条件 (iii) 相矛盾。\n8.  **结论：** 由于我选择的字符串和分解导致了矛盾，最初的假设必定是错误的。因此，语言 $L$ 不是正则的。\n\n该学生的结论是错误的；语言 $L$ 实际上是正则的。下列哪个陈述正确地指出了该学生论证中的根本性错误？\n\nA. 该论证错误地选择了字符串 $s$ 的一个特定分解。一个正确的证明必须表明，对于所选的字符串 $s$，其*所有*可能的有效分解都会产生矛盾。\n\nB. 字符串 $s = 1^{p-1}0$ 的选择是错误的。为了应用泵引理，所选字符串的长度必须严格大于泵引长度 $p$。\n\nC. 语言 $L$ 实际上是非正则的，但该论证因选择 $i=0$ 进行泵引而失败。矛盾只能通过向上泵引（即选择 $i \\ge 2$）来达成。\n\nD. 步骤 5 中选择的分解 $x = 1^{p-1}, y=0, z=\\epsilon$ 不是一个有效的分解，因为子字符串 $y$ 不能由字符串 $s$ 的最后一个字符组成。\n\nE. 字符串 $s' = 1^{p-1}$ 不会引起矛盾，因为泵引理只适用于长度至少为 $p$ 的字符串，而 $s'$ 的长度是 $p-1$。", "solution": "将语言定义为 $L=\\{w\\in\\{0,1\\}^{*}:\\ |w|\\ge 1\\ \\text{and }w\\text{ ends in }0\\}$，该语言是正则的（可以被一个通过两个状态来追踪最后一位的确定有限状态自动机(DFA)识别）。正则语言的泵引理陈述如下：如果 $L$ 是正则的，那么\n$$\n\\exists p\\ge 1\\ \\forall s\\in L\\ (|s|\\ge p\\ \\Rightarrow\\ \\exists x,y,z\\ (s=xyz\\ \\land\\ |xy|\\le p\\ \\land\\ |y|\\ge 1\\ \\land\\ \\forall i\\ge 0,\\ xy^{i}z\\in L)).\n$$\n要使用泵引理证明一个语言不是正则的，必须通过证明以下命题来反驳上述陈述：\n$$\n\\forall p\\ge 1\\ \\exists s\\in L\\ (|s|\\ge p\\ \\land\\ \\forall x,y,z\\ (s=xyz,\\ |xy|\\le p,\\ |y|\\ge 1\\ \\Rightarrow\\ \\exists i\\ge 0,\\ xy^{i}z\\notin L)).\n$$\n该学生假设 $L$ 是正则的，并根据引理选取 $p$。他们选择 $s=1^{p-1}0$，该字符串满足 $|s|=p$ 和 $s\\in L$，所以这个选择是有效的，因为引理要求 $|s|\\ge p$，而不是 $|s|>p$。接下来，他们选择了一个特定的分解 $x=1^{p-1}$，$y=0$，$z=\\epsilon$，然后用 $i=0$ 进行泵引，得到 $xy^{0}z=1^{p-1}\\notin L$。然而，这并不与引理相矛盾，因为引理只保证了存在至少一个分解，对于该分解，所有泵引后的字符串都仍在 $L$ 中；它并不要求每个有效的分解都必须具有此属性。因此，仅仅展示一个失败的分解并不能推翻语言的正则性。\n\n事实上，对于同一个字符串 $s=1^{p-1}0$，存在一个满足引理结论的分解，例如：\n$$\nx=1^{p-2},\\quad y=1,\\quad z=0,\n$$\n该分解满足 $|xy|=p-1\\le p$ 和 $|y|=1\\ge 1$，并且对于所有 $i\\ge 0$，\n$$\nxy^{i}z=1^{p-2}1^{i}0=1^{p-2+i}0\\in L,\n$$\n因为该字符串仍然以 $0$ 结尾。因此，该学生的“矛盾”之所以产生，仅仅是因为他们选择了一个不能通过泵引留在语言内的分解，而这种情况与语言的正则性是相容的。要推翻正则性，他们必须证明对于他们所选择的字符串 $s$，*所有*有效的分解都会导致存在某个 $i$ 使得 $xy^{i}z\\notin L$，而这一点他们没有做到，在此情况下也无法做到。\n\n因此，根本性的错误在于对泵引理中量词的错误使用：学生不恰当地指定了一个特定的分解，而没有论证所有有效的分解都会失败。选项 B 是不正确的，因为 $|s|=p$ 是允许的。选项 C 是错误的，因为 $L$ 是正则的。选项 D 是错误的，因为 $y$ 可以是最后一个字符。选项 E 是错误的，因为引理没有对 $xy^{i}z$ 的长度施加要求；只有原始字符串 $s$ 必须满足 $|s|\\ge p$。", "answer": "$$\\boxed{A}$$", "id": "1410583"}]}