{"hands_on_practices": [{"introduction": "掌握 Ford-Fulkerson 方法始于理解其核心的迭代步骤。第一个练习将引导您完成一次至关重要的迭代：您将学习如何根据现有流构建一个残差网络，找到一条增广路径，并用它来增加总流量。这个基础练习旨在巩固您对该算法基本机制的理解。[@problem_id:1387823]", "problem": "一家物流公司管理着一个由有向图表示的分销网络。图中的节点包括一个源仓库 (S)、一个目的地城市 (T) 和四个中间转运枢纽 (U, V, W, X)。节点之间的有向链接代表单向道路，每条道路都有一个以“货物单位/小时”为单位的最大容量。\n\n该网络的结构和容量（从节点 $i$ 到节点 $j$ 的链接容量表示为 $c(i, j)$）如下：\n- $c(S, U) = 10$\n- $c(S, V) = 8$\n- $c(U, V) = 4$\n- $c(U, W) = 7$\n- $c(V, W) = 3$\n- $c(V, X) = 6$\n- $c(W, T) = 9$\n- $c(X, T) = 5$\n任何未列出的链接的容量均为零。\n\n一次交通分析揭示了部分链接上的当前流量 $f(i, j)$：\n- $f(S, U) = 6$\n- $f(U, W) = 6$\n- $f(W, T) = 6$\n- $f(S, V) = 4$\n- $f(V, X) = 4$\n- $f(X, T) = 4$\n所有其他链接上的流量均为零。当前从源点 S 到汇点 T 的总流量为 10 货物单位/小时。\n\n为了提高吞吐量，您必须执行一次 Ford-Fulkerson 算法的迭代。您的任务是在残差网络中找到一条从 S 到 T 的增广路径。为确保路径的唯一性，您必须使用广度优先搜索 (BFS)，并按字母顺序探索任何给定节点的邻居。基于这条特定的增广路径，从 S 到 T 的新总流量值是多少？\n\n请用一个整数表示您的答案，代表以“货物单位/小时”为单位的总流量。", "solution": "我们为当前流量构建残差网络。对于每条容量为 $c(i,j)$、当前流量为 $f(i,j)$ 的有向链接，其正向前向边的残差容量为 $r(i,j)=c(i,j)-f(i,j)$，反向后向边的残差容量为 $r(j,i)=f(i,j)$。根据给定的数据：\n- 在 $S \\to U$ 上：$r(S,U)=10-6=4$ 且 $r(U,S)=6$。\n- 在 $S \\to V$ 上：$r(S,V)=8-4=4$ 且 $r(V,S)=4$。\n- 在 $U \\to V$ 上：$r(U,V)=4-0=4$ 且 $r(V,U)=0$。\n- 在 $U \\to W$ 上：$r(U,W)=7-6=1$ 且 $r(W,U)=6$。\n- 在 $V \\to W$ 上：$r(V,W)=3-0=3$ 且 $r(W,V)=0$。\n- 在 $V \\to X$ 上：$r(V,X)=6-4=2$ 且 $r(X,V)=4$。\n- 在 $W \\to T$ 上：$r(W,T)=9-6=3$ 且 $r(T,W)=6$。\n- 在 $X \\to T$ 上：$r(X,T)=5-4=1$ 且 $r(T,X)=4$。\n\n我们在残差网络中从 $S$ 开始运行一次 BFS，按字母顺序探索每个节点的邻居。\n1.  队列：[S]\n2.  取出 S。S 的邻居是 U 和 V。按字母顺序将 U, V 入队。队列：[U, V]\n3.  取出 U。U 的邻居中，V 已在队列中，W 是新节点。将 W 入队。队列：[V, W]\n4.  取出 V。V 的邻居中，W 已在队列中，X 是新节点。将 X 入队。队列：[W, X]\n5.  取出 W。W 的邻居中，T 是新节点。将 T 入队。已找到汇点 T，路径为 $S \\to U \\to W \\to T$。\n\n因此，BFS 找到的增广路径是 $S \\to U \\to W \\to T$。\n\n这条路径上的瓶颈残差容量是其路径上所有边的残差容量的最小值：\n$$\\Delta=\\min\\{r(S,U),\\,r(U,W),\\,r(W,T)\\}=\\min\\{4,\\,1,\\,3\\}=1.$$\n通过 $\\Delta$ 进行增广会使总流量增加 $1$，因此新的总流量值为\n$$|f'|=|f|+\\Delta=10+1=11.$$", "answer": "$$\\boxed{11}$$", "id": "1387823"}, {"introduction": "当您熟悉了单次迭代后，下一步就是将算法运行到底以找到最大可能流。这个练习要求您重复寻找增ɣ广路径，直到找不到为止，从而完整地应用 Ford-Fulkerson 方法。此外，它也是对著名的最大流最小割定理的一次实践验证，因为您将需要确认所找到的最大流值恰好等于网络中某个最小割的容量。[@problem_id:1408993]", "problem": "考虑一个由有向图表示的小型数据传输网络。该网络有一个源节点 `S`、一个汇点 `T` 和四个中间路由节点 `A`、`B`、`C` 和 `D`。有向链路及其相应的最大数据承载容量（以任意流量单位计）如下：\n- 从 `S` 到 `A`，容量为 10。\n- 从 `S` 到 `C`，容量为 12。\n- 从 `A` 到 `B`，容量为 7。\n- 从 `A` 到 `D`，容量为 4。\n- 从 `B` 到 `T`，容量为 10。\n- 从 `C` 到 `D`，容量为 9。\n- 从 `D` 到 `B`，容量为 3。\n- 从 `D` 到 `T`，容量为 8。\n\n所有链路都是指定的单向链路。网络中没有其他链路。目标是确定该网络的吞吐量。\n\n计算从源 `S` 到汇 `T` 的最大流量值，并计算最小 `S-T` 割的容量。按指定顺序提供这两个整数值：首先是最大流量值，然后是最小割容量。", "solution": "我们应用 Ford-Fulkerson 方法寻找最大流。\n\n1.  **第一次增广**: 选择路径 $S\\to A\\to B\\to T$。其瓶颈容量为 $\\min\\{c(S,A), c(A,B), c(B,T)\\} = \\min\\{10, 7, 10\\} = 7$。我们沿此路径发送 7 单位流量。当前总流量为 7。\n\n2.  **第二次增广**: 选择路径 $S\\to C\\to D\\to T$。其瓶颈容量为 $\\min\\{c(S,C), c(C,D), c(D,T)\\} = \\min\\{12, 9, 8\\} = 8$。我们沿此路径发送 8 单位流量。当前总流量为 $7 + 8 = 15$。\n\n3.  **第三次增广**: 在更新后的残差网络中寻找新路径。考虑路径 $S\\to A\\to D\\to B\\to T$。\n    - 边 $(S,A)$ 的残差容量为 $10 - 7 = 3$。\n    - 边 $(A,D)$ 的残差容量为 $4 - 0 = 4$。\n    - 边 $(D,B)$ 的残差容量为 $3 - 0 = 3$。\n    - 边 $(B,T)$ 的残差容量为 $10 - 7 = 3$。\n    此路径的瓶颈容量为 $\\min\\{3, 4, 3, 3\\} = 3$。我们沿此路径发送 3 单位流量。\n\n经过这次增广，总流量为 $15 + 3 = 18$。\n\n让我们检查最终的流量分配：\n- $f(S,A) = 7+3 = 10$\n- $f(S,C) = 8$\n- $f(A,B) = 7$\n- $f(A,D) = 3$\n- $f(C,D) = 8$\n- $f(D,B) = 3$\n- $f(B,T) = 7+3 = 10$\n- $f(D,T) = 8$\n\n总流量为 $f(S,A) + f(S,C) = 10 + 8 = 18$。\n\n现在，我们在最终的残差网络中寻找从 $S$ 可达的节点，以确定最小割。\n- 从 $S$ 出发，边 $(S,C)$ 有残差容量 $12-8=4$，所以 $C$ 是可达的。\n- 从 $C$ 出发，边 $(C,D)$ 有残差容量 $9-8=1$，所以 $D$ 是可达的。\n- 从 $D$ 出发，边 $(A,D)$ 存在流量，所以后向边 $(D,A)$ 有残差容量 $3$，因此 $A$ 是可达的。\n- 所有从 $\\{S,A,C,D\\}$ 到 $\\{B,T\\}$ 的前向边都已饱和，且不存在后向边可以到达 $\\{B,T\\}$。\n\n因此，从 $S$ 可达的节点集是 $R = \\{S, A, C, D\\}$，不可达的节点集是 $\\overline{R} = \\{B, T\\}$。这构成了一个 $S-T$ 割。\n该割的容量是所有从 $R$ 到 $\\overline{R}$ 的边的容量之和：\n$$ \\text{capacity}(R, \\overline{R}) = c(A,B) + c(D,B) + c(D,T) = 7 + 3 + 8 = 18. $$\n根据最大流-最小割定理，既然我们找到了一个值为 18 的流和一个容量为 18 的割，那么这个流就是最大流，这个割就是最小割。\n\n因此，最大流量为 18，最小割容量为 18。", "answer": "$$\\boxed{\\begin{pmatrix} 18 & 18 \\end{pmatrix}}$$", "id": "1408993"}, {"introduction": "Ford-Fulkerson 算法的效率在很大程度上取决于增广路径的选择。这个有趣的思维实验将您置于一个强制选择特定（看似“糟糕”）路径的场景中，揭示算法的性能会如何受到影响。通过解决这个问题，您将更深刻地体会到为什么需要更高级的路径选择策略（例如 Edmonds-Karp 算法中使用的策略）来保证算法的效率。[@problem_id:1541549]", "problem": "考虑一个流网络，其顶点集为 $V = \\{s, a, b, t\\}$，其中 $s$ 是源点，$t$ 是汇点。该网络有一组带有关联整数容量的有向边。设从顶点 $u$ 到顶点 $v$ 的边的容量记为 $c(u, v)$。各边及其容量定义如下：\n- $c(s, a) = C$\n- $c(s, b) = C$\n- $c(a, t) = C$\n- $c(b, t) = C$\n- $c(a, b) = 1$\n所有未列出的其他边的容量均为0。在本题中，设常数 $C = 500$。\n\n你需要使用 Ford-Fulkerson 算法找出从 $s$ 到 $t$ 的最大流。但是，在每次迭代中选择增广路径时，你必须遵循一个特定规则：如果当前残留图中存在多条增广路径，你必须始终选择瓶颈容量最小的那条路径。如果最小瓶颈容量存在多条路径相同，你可以选择其中任意一条。\n\n计算在该特定路径选择策略下，Ford-Fulkerson 算法为找到最大流将执行的增广（即迭代）总次数。", "solution": "我们根据题目给定的特殊规则来追踪 Ford-Fulkerson 算法的执行过程。\n\n1.  **第 1 次迭代**:\n    在初始的残差网络中，有三条可能的增广路径：\n    -   $P_1: s \\to a \\to t$ (瓶颈容量为 $C=500$)\n    -   $P_2: s \\to b \\to t$ (瓶颈容量为 $C=500$)\n    -   $P_3: s \\to a \\to b \\to t$ (瓶颈容量为 $\\min(C, 1, C) = 1$)\n    根据规则，我们必须选择瓶颈容量最小的路径，即 $P_3$。算法沿 $P_3$ 增广 1 单位流量。总流量现在为 1。\n\n2.  **第 2 次迭代**:\n    上一次增广后，边 $(a,b)$ 在残差网络中饱和，但出现了一条残差容量为 1 的后向边 $(b,a)$。现在可能的增广路径包括：\n    -   $P_1: s \\to a \\to t$ (瓶颈容量为 $C-1=499$)\n    -   $P_2: s \\to b \\to t$ (瓶颈容量为 $C-1=499$)\n    -   $P_4: s \\to b \\to a \\to t$ (瓶颈容量为 $\\min(c(s,b), c(b,a), c(a,t)) = \\min(C, 1, C) = 1$)\n    瓶颈容量最小的路径是 $P_4$，其瓶颈为 1。算法沿 $P_4$ 增广 1 单位流量。总流量现在为 $1+1=2$。\n\n3.  **模式识别**:\n    我们观察到一个“拉锯”模式。\n    -   在奇数次迭代（1, 3, 5, ...）中，算法选择路径 $s \\to a \\to b \\to t$，瓶颈为 1。这会用掉 $(a,b)$ 上的容量，并创建后向边 $(b,a)$。\n    -   在偶数次迭代（2, 4, 6, ...）中，算法选择路径 $s \\to b \\to a \\to t$，瓶颈为 1。这利用了后向边 $(b,a)$，实际上是“撤销”了前一步在 $(a,b)$ 上的流，并将流量重新路由。这会使 $(a,b)$ 的残差容量恢复为 1。\n    \n    每一次迭代，无论选择哪条路径，瓶颈容量始终是 1。因此，每次迭代总流量只增加 1。\n\n4.  **计算总迭代次数**:\n    该网络的最大流显然是通过两条不相交的大容量路径 $s \\to a \\to t$ 和 $s \\to b \\to t$ 实现的。最大流值为 $C+C = 2C$。\n    由于我们所遵循的特定规则迫使算法在每次迭代中只增加 1 单位的总流量，要从 0 达到最大流 $2C$，算法必须执行 $2C$ 次迭代。\n\n代入 $C = 500$，总的增广次数为：\n$$ \\text{总迭代次数} = 2 \\times C = 2 \\times 500 = 1000 $$", "answer": "$$\\boxed{1000}$$", "id": "1541549"}]}