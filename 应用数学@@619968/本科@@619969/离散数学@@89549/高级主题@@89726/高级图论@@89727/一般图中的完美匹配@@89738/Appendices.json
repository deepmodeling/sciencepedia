{"hands_on_practices": [{"introduction": "掌握了完美匹配的定义之后，一个自然而然的问题就是：在一个给定的图中，究竟有多少种不同的完美匹配？这个练习将从一个基本且高度对称的结构——完全图 $K_6$——入手，带你实践计算完美匹配数量的核心组合学技巧。通过这个计算，你将深化对完美匹配是“将所有顶点配对的方式”这一本质的理解。[@problem_id:1390456]", "problem": "在图论中，一个无向图由一个顶点集合和一个边集合组成，其中每条边连接一对不同的顶点。图中的一个**匹配**是一个边的集合，其中任意两条边都不共享公共顶点。如果图中的每个顶点都恰好是匹配中一条边的端点，那么这个匹配被称为**完美匹配**。\n\n一个包含 $n$ 个顶点的**完全图**，记作 $K_n$，是这样一个图，其中每对不同的顶点都由一条唯一的边连接。\n\n考虑一个有6个顶点的完全图 $K_6$。计算该图中不同完美匹配的总数。", "solution": "$K_{6}$ 中的一个完美匹配对应于将这 $6$ 个带标签的顶点划分为 $3$ 个不相交的无序对。计算这 6 个顶点的所有排列方式，然后除以配对产生的对称性：\n- 这 $6$ 个顶点有 $6!$ 种排列。\n- 每对顶点可以在内部以 $2$ 种方式交换，因此 $3$ 对顶点贡献了一个 $2^{3}$ 的因子。\n- 这 $3$ 对顶点本身可以有 $3!$ 种排序方式。\n\n因此，不同完美匹配的总数是\n$$\n\\frac{6!}{2^{3} 3!}.\n$$\n计算得，\n$$\n\\frac{6!}{2^{3} 3!}=\\frac{720}{8 \\cdot 6}=\\frac{720}{48}=15.\n$$\n等价地，使用 $K_{2n}$ 的双阶乘形式，计数为 $(2n-1)!!$，当 $n=3$ 时，得到 $5 \\cdot 3 \\cdot 1=15$。", "answer": "$$\\boxed{15}$$", "id": "1390456"}, {"introduction": "计数问题之后，我们转向一个更深刻的问题：我们能否保证某个特定类型的图一定存在完美匹配？这个问题引导我们从计数转向结构分析。此练习以一个具体的图类——$8$ 个顶点的 $3$-正则图——为例，让你运用图的结构属性（如度和桥）来论证完美匹配的存在性，这是理解如图论中 Petersen 定理等深刻结果的关键一步。[@problem_id:1390472]", "problem": "在网络理论中，一种常见的拓扑是*$k$-正则图*，其中每个节点（顶点）恰好有*$k$*个连接（边）。*简单图*是指没有自环（从一个顶点到其自身的边）且任意两个顶点之间最多只有一条边的图。对于一些网络协议来说，一个关键属性是*完美匹配*的存在性，它是一个边的集合，其中任意两条边都不共享顶点，并且图中的每个顶点都恰好是集合中一条边的端点。这相当于将所有节点划分为由直接相连的节点组成的、互不相交的点对。\n\n在连通图中，如果移除一条边会增加图的连通分量数量，则称该边为*桥*。\n\n一位系统架构师正在研究包含 $8$ 个节点的通信网络，其中每个节点都恰好连接到另外 $3$ 个节点。他们感兴趣的是，是否存在这样一种网络设计，它*不能*被完美地划分为通信对。下列哪个陈述正确地描述了这种情况？\n\nA. 每个有 $8$ 个顶点的简单 $3$-正则图都有一个完美匹配。\n\nB. （在同构意义下）存在且仅存在一个没有完美匹配的、有 $8$ 个顶点的简单 $3$-正则图。\n\nC. （在同构意义下）存在且仅存在两个没有完美匹配的、不同的有 $8$ 个顶点的简单 $3$-正则图。\n\nD. （在同构意义下）存在两个以上没有完美匹配的、不同的有 $8$ 个顶点的简单 $3$-正则图。", "solution": "设$G$是一个有$n=8$个顶点的简单$3$-正则图。我们证明$G$必有完美匹配。\n\n我们使用以下定理：彼得森定理指出，每个无桥的三次（即$3$-正则）图都有一个完美匹配。因此，如果一个三次图没有完美匹配，它必定包含一个桥。\n\n用反证法，假设$G$没有完美匹配。那么$G$必定有一个桥$e=uv$。考虑图$G-e$，它恰好有两个连通分量；设一个分量为$H$，有$m$个顶点（包含$u$），另一个分量为$H'$，有$n-m$个顶点（包含$v$），其中$n=8$。\n\n在分量$H$中，顶点的度如下：顶点$u$的度为 $2$（因为它失去了边$e$），而其他每个顶点的度仍为 $3$（没有其他边被移除）。因此，$H$中的度数和为\n$$\n\\sum_{x \\in V(H)} \\deg_{H}(x) = 2 + 3(m-1) = 3m - 1.\n$$\n根据握手引理，任何有限图的度数和是边数的两倍，因此为偶数。因此 $3m-1$ 是偶数，这意味着$m$是奇数：\n$$\n3m - 1 \\equiv 0 \\pmod{2} \\;\\Longrightarrow\\; 3m \\equiv 1 \\pmod{2} \\;\\Longrightarrow\\; m \\equiv 1 \\pmod{2}.\n$$\n同样的推理也适用于$H'$，因此两个分量都有奇数个顶点。由于$m + (n - m) = n = 8$，两个分量的大小都为奇数的唯一可能是，一个的大小为 $3$，另一个的大小为 $5$。\n\n现在，由于$G$是简单$3$-正则图，在每个分量中，除了桥的端点外，所有顶点的度都必须是 $3$。在一个有$m$个顶点的简单图中，最大可能度为$m-1$。因此，要使$H$中存在度为 $3$ 的顶点，我们必须有\n$$\nm - 1 \\geq 3 \\;\\Longrightarrow\\; m \\geq 4.\n$$\n将其与$m$为奇数的奇偶性约束结合，可得$m \\geq 5$。因此，$G-e$的每个分量都必须至少有$5$个顶点，这意味着\n$$\nn \\geq 5 + 5 = 10,\n$$\n这与$n=8$矛盾。\n\n因此，$G$没有桥。根据彼得森定理，每个无桥的三次图都有完美匹配，所以$G$有完美匹配。由于我们的论证除了在关于桥的论证部分外，并不依赖于连通性，因此这个结论对所有具有 $8$ 个顶点的简单 $3$-正则图都成立。\n\n因此，每个有 $8$ 个顶点的简单 $3$-正则图都有一个完美匹配，这对应于选项A。", "answer": "$$\\boxed{A}$$", "id": "1390472"}, {"introduction": "即使我们知道一个图存在完美匹配，找到它也未必是一件易事。这个实践练习将视角转向算法层面，要求你分析一个直观的“贪心”算法为何会失败。通过构建一个反例，你将亲身体会到局部最优选择不一定导向全局最优解，这是算法设计中一个至关重要的教训，也揭示了为什么寻找完美匹配需要更复杂的算法。[@problem_id:1390501]", "problem": "一位系统架构师正在设计一个通信网络。该网络表示为一个图 $G=(V, E)$，其中 $V$ 中的顶点是服务器，$E$ 中的边是直接的通信链路。一个“配对”是一组链路的集合，其中任意两条链路都不共享同一个服务器。一个“完美配对”，也称为完美匹配，是一个覆盖了网络中所有服务器的配对。\n\n该架构师提出了一个简单的贪心算法，我们称之为 `MinDegree-Greedy`，用于寻找完美配对：\n1. 初始化一个空配对 $M$。\n2. 当网络中仍有服务器时：\n   a. 识别一个具有最少活动连接数的服务器 $u$（即，当前图中的最小度顶点）。\n   b. 选择 $u$ 的一个连接，例如连接到服务器 $v$，并将链路 $\\{u, v\\}$ 添加到配对 $M$ 中。\n   c. 从网络中移除服务器 $u$ 和 $v$ 以及所有与它们相连的链路。\n3. 最终的集合 $M$ 就是所提出的配对。\n\n如果算法终止时 $M$ 不是一个完美配对（即有些服务器未被配对），则认为该算法“失败”了。架构师需要识别出一种网络拓扑结构，在此拓扑上 `MinDegree-Greedy` 算法可能会失败，尽管该拓扑结构保证存在完美配对。\n\n给定以下图的描述，哪一个代表了 `MinDegree-Greedy` 算法可能失败的网络？假设对于最小度顶点或与其相连的边存在多种选择时，算法可以做出其中任意一种选择。下面列出的所有图都保证至少存在一个完美配对。\n\nA. 一个由 $6$ 个顶点排列成一个单环的图（一个六边形网络，通常表示为 $C_6$）。\n\nB. 一个由 $8$ 个顶点组成的图，包含两个独立的、不相连的正方形（两个不相交的 $4$-环，表示为 $C_4 \\cup C_4$）。\n\nC. 一个由 $6$ 个顶点构成的图，其构造方法是取两个独立的三角形（$3$-环），然后添加一条边，连接第一个三角形中的一个顶点和第二个三角形中的一个顶点。\n\nD. 一个由 $8$ 个顶点排列成一条单路径的图（一条包含8个服务器的线，表示为 $P_8$）。", "solution": "我们分析列出的每个图，并使用失败的定义：如果算法仅做出允许的选择（总是选择一个最小度顶点及其任意一条邻边），但最终因为下一步变得不可能（例如，在仍有顶点剩余时遇到了一个度为零的顶点）而导致至少有一个顶点未被匹配，则算法失败。\n\nA. 对于 $C_{6}$，所有顶点初始度都为 $2$。选择任意一条边 $\\{u,v\\}$ 会移除 $u$ 和 $v$，剩下的 $4$ 个顶点形成一条路径 $P_{4}$。在路径上，端点的度为 $1$，算法每次都必须选择一个端点边。迭代过程将 $P_{4}$ 简化为 $P_{2}$，然后是空图，从而产生一个完美匹配。因此，该算法在 $C_{6}$ 上不会失败。\n\nB. 对于 $C_{4} \\cup C_{4}$，每个顶点的初始度都为 $2$。如果算法在其中一个 $C_{4}$ 中选择一条边，例如 $\\{u,v\\}$，移除它们会使其所在的分支在剩下的两个顶点上留下一条边，而另一个 $C_{4}$ 保持不变。这条单边的端点现在的度为 $1$，严格小于未受影响的 $C_{4}$ 中的度 $2$，因此算法下一步必须选择这条单边，从而完成该分支的匹配。然后，算法对剩下的 $C_{4}$ 进行与 A 部分完全相同的操作，最终得到一个完美匹配。因此，在 $C_{4} \\cup C_{4}$ 上不会发生失败。\n\nC. 考虑由一条桥连接的两个三角形。将第一个三角形的顶点标记为 $a_{1},a_{2},a_{3}$，其中 $a_{1}$ 与桥相连；将第二个三角形的顶点标记为 $b_{1},b_{2},b_{3}$，其中 $b_{1}$ 与桥相连。各顶点的度为 $\\deg(a_{1})=\\deg(b_{1})=3$ 和 $\\deg(a_{2})=\\deg(a_{3})=\\deg(b_{2})=\\deg(b_{3})=2$，因此最小度为 $2$，由顶点 $a_{2},a_{3},b_{2},b_{3}$ 达到。该图存在一个完美匹配：取桥边 $\\{a_{1},b_{1}\\}$，然后在每个三角形内部匹配两个非桥顶点，例如 $\\{a_{2},a_{3}\\}$ 和 $\\{b_{2},b_{3}\\}$。\n\n然而，该算法可以通过允许的选择而失败。选择一个最小度顶点，例如 $a_{2}$，然后选择其邻边 $\\{a_{2},a_{1}\\}$。移除 $a_{2}$ 和 $a_{1}$ 会删除所有与它们相连的边，特别是会移除从 $a_{3}$ 出发的两条边（即 $\\{a_{3},a_{1}\\}$ 和 $\\{a_{3},a_{2}\\}$）。这会使 $a_{3}$ 被孤立，其度变为 $0$，而此时图中仍有其他顶点。下一步无法选择与 $a_{3}$ 相连的边，因此算法卡住，留下未匹配的顶点。因此，尽管存在完美匹配，`MinDegree-Greedy` 算法仍可能在此图上失败。\n\nD. 对于 $P_{8}$，两个端点的度为 $1$，这是最小度。算法必须选择一个端点及其唯一的邻边，将 $P_{8}$ 简化为 $P_{6}$；重复此过程会依次简化为 $P_{4}$、$P_{2}$，最后是空图。这总是能得到一个完美匹配，因此算法在 $P_{8}$ 上不会失败。\n\n因此，在给定的选项中，只有选项 C 中的图允许存在一个导致失败的有效贪心选择序列。", "answer": "$$\\boxed{C}$$", "id": "1390501"}]}