{"hands_on_practices": [{"introduction": "要想理解网络中的瓶颈，我们首先必须学会如何量化它们。网络割为我们衡量网络中某个特定分割的容量提供了一种精确的方法。本练习将让你直接实践如何应用割容量的定义，这是进行任何网络流分析所必需的基础技能。[@problem_id:1360965]", "problem": "考虑一个小型数据中心网络，该网络设计用于将数据从一个主要入口点（记作源点 $s$）传输到一个主要出口点（记作汇点 $t$）。该网络由一组服务器节点 $V = \\{s, a, b, c, d, e, t\\}$ 组成。数据沿着有向链接（边）流动，每条边都有一个以千兆比特每秒（Gbps）为单位的特定最大数据传输速率（容量）。\n\n该网络的有向边及其各自的容量 $c(u,v)$ 定义如下：\n- $c(s, a) = 15$\n- $c(s, b) = 10$\n- $c(a, c) = 7$\n- $c(a, d) = 12$\n- $c(b, c) = 4$\n- $c(b, e) = 8$\n- $c(c, t) = 18$\n- $c(d, e) = 5$\n- $c(d, t) = 6$\n- $c(e, d) = 3$\n- $c(e, t) = 11$\n\n$s-t$ 割是将节点集 $V$ 划分为两个不相交的集合 $S$ 和 $T$ 的一种划分，其中 $s$ 在 $S$ 中，而 $t$ 在 $T$ 中。割 $(S, T)$ 的容量是所有起点在 $S$ 中、终点在 $T$ 中的边的容量之和。\n\n现提出两个不同的 $s-t$ 割进行分析：\n1. 割 1: $(S_1, T_1)$，其中源点侧的节点集为 $S_1 = \\{s, a, b\\}$。\n2. 割 2: $(S_2, T_2)$，其中源点侧的节点集为 $S_2 = \\{s, a, d, e\\}$。\n\n设 $C_1$ 为割 1 的容量，$C_2$ 为割 2 的容量。计算这两个容量的和 $C_1 + C_2$。以 Gbps 为单位，给出一个单一数值作为最终答案。", "solution": "一个 $s$-$t$ 割 $(S,T)$ 的容量定义为所有起点在 $S$ 中、终点在 $T$ 中的有向边容量之和：\n$$\nC(S,T)=\\sum_{(u,v):\\,u\\in S,\\,v\\in T} c(u,v).\n$$\n对于割 1，$S_{1}=\\{s,a,b\\}$，因此 $T_{1}=V\\setminus S_{1}=\\{c,d,e,t\\}$。从 $S_1$ 到 $T_1$ 的边为 $(a,c)$、$(a,d)$、$(b,c)$ 和 $(b,e)$。因此，\n$$\nC_{1}=c(a,c)+c(a,d)+c(b,c)+c(b,e)=7+12+4+8=31.\n$$\n对于割 2，$S_{2}=\\{s,a,d,e\\}$，因此 $T_{2}=V\\setminus S_{2}=\\{b,c,t\\}$。从 $S_2$ 到 $T_2$ 的边为 $(s,b)$、$(a,c)$、$(d,t)$ 和 $(e,t)$。因此，\n$$\nC_{2}=c(s,b)+c(a,c)+c(d,t)+c(e,t)=10+7+6+11=34.\n$$\n将两个容量相加得到\n$$\nC_{1}+C_{2}=31+34=65.\n$$", "answer": "$$\\boxed{65}$$", "id": "1360965"}, {"introduction": "仅仅计算一个任意割的容量只是开始，真正的挑战在于找到容量最小的那个割，即“最小割”。本练习将带你向这个目标迈进一步，探索如何迭代地“改进”一个已知的割。你将通过分析移动单个顶点如何改变割的容量，来洞察最小割的结构以及搜索最小割算法背后的逻辑。[@problem_id:1360971]", "problem": "考虑一个由有向图 $G = (V, E)$ 表示的流量网络，其顶点集为 $V = \\{s, a, b, c, d, t\\}$，其中 $s$ 是源点，$t$ 是汇点。边及其对应的容量以元组（边，容量）的列表形式给出：\n*   $(s, a), 10$\n*   $(s, b), 12$\n*   $(a, c), 8$\n*   $(a, d), 4$\n*   $(b, a), 3$\n*   $(b, d), 9$\n*   $(c, t), 15$\n*   $(d, c), 5$\n*   $(d, t), 7$\n\n一个 $s-t$ 割是顶点集 $V$ 的一个划分，将其分为两个集合 $S$ 和 $T$，使得 $s \\in S$ 且 $t \\in T$。割的容量，记为 $c(S, T)$，是从 $S$ 中的顶点出发、终点在 $T$ 中的所有边的容量之和。\n\n我们考虑一个初始割，由集合 $S_0 = \\{s, a, b\\}$ 及其补集 $T_0 = V \\setminus S_0 = \\{c, d, t\\}$ 定义。\n\n我们想确定是否可以通过将单个顶点从 $T_0$ 移动到 $S_0$ 来改进这个割（即减小其容量）。汇点顶点 $t$ 必须留在汇点侧的集合中。以下哪个顶点如果从 $T_0$ 移动到 $S_0$，会得到一个容量严格更小的新割？\n\nA. 顶点 $c$\n\nB. 顶点 $d$\n\nC. 顶点 $c$ 和 $d$\n\nD. 顶点 $c$ 和 $d$ 都不是\n\nE. 初始割已经是最小割。", "solution": "问题要求我们确定将一个顶点从集合 $T_0 = \\{c, d, t\\}$ 移动到集合 $S_0 = \\{s, a, b\\}$ 是否会减小割 $(S_0, T_0)$ 的容量。汇点顶点 $t$ 不能移动。因此，可以移动的候选顶点是 $c$ 和 $d$。\n\n首先，我们计算初始割的容量 $c(S_0, T_0)$。一个割 $(S, T)$ 的容量是所有边 $(u, v)$（其中 $u \\in S$ 且 $v \\in T$）的容量之和。\n对于初始割 $(S_0, T_0)$，其中 $S_0 = \\{s, a, b\\}$ 且 $T_0 = \\{c, d, t\\}$，从 $S_0$ 指向 $T_0$ 的边有：\n- $(a, c)$，容量为 8\n- $(a, d)$，容量为 4\n- $(b, d)$，容量为 9\n\n初始割的容量是这些容量的总和：\n$c(S_0, T_0) = c(a, c) + c(a, d) + c(b, d) = 8 + 4 + 9 = 21$。\n\n现在，我们来分析将一个顶点 $v \\in T_0$（其中 $v \\neq t$）移动到 $S_0$ 的效果。设新的割为 $(S', T')$，其中 $S' = S_0 \\cup \\{v\\}$ 且 $T' = T_0 \\setminus \\{v\\}$。我们想求出容量的变化量 $\\Delta c(v) = c(S', T') - c(S_0, T_0)$。容量减小意味着 $\\Delta c(v) < 0$。\n\n当我们将顶点 $v$ 从 $T_0$ 移动到 $S_0$ 时：\n1.  任何 $u \\in S_0$ 的边 $(u, v)$ 曾是原始割容量的一部分。在新割中，这条边成为 $S'$ 内部的边，所以它的容量从割的总容量中移除。这对容量变化的贡献是 $-\\sum_{u \\in S_0} c(u, v)$。\n2.  任何 $w \\in T_0, w \\neq v$ 的边 $(v, w)$ 曾是 $T_0$ 内部的边，对原始割容量没有贡献。在新割中，这条边从 $S'$ 指向 $T'$，所以它的容量被加到割的总容量中。这对容量变化的贡献是 $+\\sum_{w \\in T_0 \\setminus \\{v\\}} c(v, w)$。\n\n综合这两点，移动顶点 $v$ 导致的容量总变化为：\n$\\Delta c(v) = \\left( \\sum_{w \\in T_0 \\setminus \\{v\\}} c(v, w) \\right) - \\left( \\sum_{u \\in S_0} c(u, v) \\right)$。\n\n现在我们将此公式应用于我们的候选顶点 $c$ 和 $d$。\n\n**情况1：移动顶点 $c$**\n这里，$v=c$。新的集合将是 $S' = \\{s, a, b, c\\}$ 和 $T' = \\{d, t\\}$。\n- 从 $c$ 到 $T_0 = \\{c, d, t\\}$ 中其他顶点的边的容量总和，也就是从 $c$ 到 $\\{d, t\\}$ 的边的容量总和。唯一的这样的边是 $(c, t)$。所以，$\\sum_{w \\in T_0 \\setminus \\{c\\}} c(c, w) = c(c, t) = 15$。\n- 从 $S_0 = \\{s, a, b\\}$ 到 $c$ 的边的容量总和。唯一的这样的边是 $(a, c)$。所以，$\\sum_{u \\in S_0} c(u, c) = c(a, c) = 8$。\n\n容量的变化量是 $\\Delta c(c) = 15 - 8 = 7$。\n由于 $\\Delta c(c) > 0$，移动顶点 $c$ 会使割的容量从 21 增加到 $21 + 7 = 28$。因此，这不是一个改进。\n\n**情况2：移动顶点 $d$**\n这里，$v=d$。新的集合将是 $S'' = \\{s, a, b, d\\}$ 和 $T'' = \\{c, t\\}$。\n- 从 $d$ 到 $T_0 = \\{c, d, t\\}$ 中其他顶点的边的容量总和，也就是从 $d$ 到 $\\{c, t\\}$ 的边的容量总和。这些边是 $(d, c)$ 和 $(d, t)$。所以，$\\sum_{w \\in T_0 \\setminus \\{d\\}} c(d, w) = c(d, c) + c(d, t) = 5 + 7 = 12$。\n- 从 $S_0 = \\{s, a, b\\}$ 到 $d$ 的边的容量总和。这些边是 $(a, d)$ 和 $(b, d)$。所以，$\\sum_{u \\in S_0} c(u, d) = c(a, d) + c(b, d) = 4 + 9 = 13$。\n\n容量的变化量是 $\\Delta c(d) = 12 - 13 = -1$。\n由于 $\\Delta c(d) < 0$，移动顶点 $d$ 会使割的容量从 21 减少到 $21 - 1 = 20$。这是一个改进。\n\n根据我们的分析，只有将顶点 $d$ 从 $T_0$ 移动到 $S_0$ 会得到一个容量严格更小的新割。因此，选项B是正确答案。既然我们找到了一个改进，初始割就不是最小割，所以选项E是错误的。", "answer": "$$\\boxed{B}$$", "id": "1360971"}, {"introduction": "现在，让我们将所学知识应用于一个更接近现实的场景：在一个拥有多个数据源和多个处理中心的分布式系统中，识别其主要瓶颈。这个问题要求你找到能将所有源点与所有汇点完全分离的最小割，这是网络可靠性分析和设计中的一个常见任务。它将最小割的理论概念与其在识别系统性脆弱点方面的强大应用连接了起来。[@problem_id:1360967]", "problem": "一家分布式计算公司为大规模数据处理流水线运营着一个服务器网络。该网络由一组服务器组成，它们通过有向光纤链路互连，每条链路都具有特定的最大数据传输速率（带宽）。\n\n该网络有八台服务器，标记为 $v_1, v_2, \\dots, v_8$。\n其中两台服务器构成集合 $A = \\{v_1, v_2\\}$，作为主要数据源，持续生成原始数据。\n另外两台服务器构成集合 $B = \\{v_7, v_8\\}$，被指定为处理中心，用于进行最终的数据分析。集合 $A$ 和 $B$ 是不相交的。\n剩余的服务器（$v_3, v_4, v_5, v_6$）是中间路由器，负责在网络中转发数据。\n\n有向连接及其各自的带宽（单位：千兆比特每秒，Gbps）如下所列：\n- 从 $v_1$ 到 $v_3$，容量 10\n- 从 $v_1$ 到 $v_4$，容量 15\n- 从 $v_2$ 到 $v_4$，容量 8\n- 从 $v_3$ 到 $v_5$，容量 12\n- 从 $v_3$ 到 $v_6$，容量 5\n- 从 $v_4$ 到 $v_5$，容量 7\n- 从 $v_4$ 到 $v_6$，容量 10\n- 从 $v_5$ 到 $v_7$，容量 18\n- 从 $v_5$ 到 $v_8$，容量 6\n- 从 $v_6$ 到 $v_7$，容量 4\n- 从 $v_6$ 到 $v_8$，容量 20\n\n为了评估网络的弹性，该公司希望确定系统的主要瓶颈。具体来说，他们需要找到一组链路的最小总带宽，这组链路的同时失效将完全切断从集合 $A$ 中任意服务器到集合 $B$ 中任意服务器的所有可能的数据路径。\n\n计算这个最小总带宽。答案以 Gbps 为单位表示。", "solution": "将此任务解释为有向容量网络中的一个最小 $A$–$B$ 割问题，其中 $A=\\{v_{1},v_{2}\\}$ 是源点，$B=\\{v_{7},v_{8}\\}$ 是汇点。根据最大流最小割定理，为分隔所有 $A \\to B$ 路径而需要移除的最小总带宽，等于从 $A$ 到 $B$ 的最大流的值。这等同于添加一个连接到 $v_{1},v_{2}$ 且容量无穷大的超级源点，以及一个由 $v_{7},v_{8}$ 汇入且容量无穷大的超级汇点，然后计算原始边构成的最小 $s$–$t$ 割。\n\n由于该图是分层的，边仅从 $\\{v_{1},v_{2}\\}$ 连接到 $\\{v_{3},v_{4}\\}$，然后再到 $\\{v_{5},v_{6}\\}$，最后到 $\\{v_{7},v_{8}\\}$，因此任何 $A$–$B$ 割都可以通过选择哪些中间节点位于源点侧来表示。将 $v_{1},v_{2}$ 固定在源点侧，将 $v_{7},v_{8}$ 固定在汇点侧。令 $x_{3},x_{4}\\in\\{0,1\\}$ 表示 $v_{3},v_{4}$ 是位于源点侧（值为 $1$）还是汇点侧（值为 $0$），并令 $y_{5},y_{6}\\in\\{0,1\\}$ 表示 $v_{5},v_{6}$ 是位于源点侧（值为 $1$）还是汇点侧（值为 $0$）。\n\n割的容量 $C$ 是从源点侧指向汇点侧的边的容量之和。逐条边计算：\n- 从 $v_{1}$ 出发：$v_{1}\\to v_{3}$ 的贡献为 $10(1-x_{3})$，$v_{1}\\to v_{4}$ 的贡献为 $15(1-x_{4})$。\n- 从 $v_{2}$ 出发：$v_{2}\\to v_{4}$ 的贡献为 $8(1-x_{4})$。\n- 从 $v_{3}$ 出发：$v_{3}\\to v_{5}$ 的贡献为 $12\\,x_{3}(1-y_{5})$，$v_{3}\\to v_{6}$ 的贡献为 $5\\,x_{3}(1-y_{6})$。\n- 从 $v_{4}$ 出发：$v_{4}\\to v_{5}$ 的贡献为 $7\\,x_{4}(1-y_{5})$，$v_{4}\\to v_{6}$ 的贡献为 $10\\,x_{4}(1-y_{6})$。\n- 从 $v_{5}$ 出发：$v_{5}\\to v_{7}$ 和 $v_{5}\\to v_{8}$ 的贡献分别为 $18\\,y_{5}$ 和 $6\\,y_{5}$，总计 $24\\,y_{5}$。\n- 从 $v_{6}$ 出发：$v_{6}\\to v_{7}$ 和 $v_{6}\\to v_{8}$ 的贡献分别为 $4\\,y_{6}$ 和 $20\\,y_{6}$，总计 $24\\,y_{6}$。\n\n因此\n$$\nC(x_{3},x_{4},y_{5},y_{6})\n=10(1-x_{3})+23(1-x_{4})\n+x_{3}\\bigl[12(1-y_{5})+5(1-y_{6})\\bigr]\n+x_{4}\\bigl[7(1-y_{5})+10(1-y_{6})\\bigr]\n+24y_{5}+24y_{6}.\n$$\n\n对 $(x_{3},x_{4})$ 的四种选择进行评估和最小化，并对每种情况优化 $(y_{5},y_{6})$：\n\n1) $x_{3}=0,x_{4}=0$：则\n$$\nC=10+23+24y_{5}+24y_{6},\n$$\n在 $y_{5}=y_{6}=0$ 时取得最小值，得到 $C=33$。\n\n2) $x_{3}=1,x_{4}=0$：则\n$$\nC=23+\\bigl[12(1-y_{5})+5(1-y_{6})\\bigr]+24y_{5}+24y_{6}\n=23+17+12y_{5}+19y_{6},\n$$\n在 $y_{5}=y_{6}=0$ 时取得最小值，得到 $C=40$。\n\n3) $x_{3}=0,x_{4}=1$：则\n$$\nC=10+\\bigl[7(1-y_{5})+10(1-y_{6})\\bigr]+24y_{5}+24y_{6}\n=10+17+17y_{5}+14y_{6},\n$$\n在 $y_{5}=y_{6}=0$ 时取得最小值，得到 $C=27$。\n\n4) $x_{3}=1,x_{4}=1$：则\n$$\nC=\\bigl[12(1-y_{5})+5(1-y_{6})\\bigr]+\\bigl[7(1-y_{5})+10(1-y_{6})\\bigr]+24y_{5}+24y_{6}\n=34+5y_{5}+9y_{6},\n$$\n在 $y_{5}=y_{6}=0$ 时取得最小值，得到 $C=34$。\n\n所有情况下的最小值为 $27$。因此，一组链路同时失效会切断所有 $A$–$B$ 路径，这组链路的最小总带宽为 $27$。\n\n为验证该值的紧确性，我们构建一个值为 $27$ 的可行流。从 $v_{1}$ 向 $v_{3}$ 发送 $10$，从 $v_{1}$ 向 $v_{4}$ 发送 $9$，从 $v_{2}$ 向 $v_{4}$ 发送 $8$，源点流出总流量为 $27$。从 $v_{3}$ 向 $v_{5}$ 发送 $5$、向 $v_{6}$ 发送 $5$；从 $v_{4}$ 向 $v_{5}$ 发送 $7$、向 $v_{6}$ 发送 $10$；然后从 $v_{5}$ 向 $v_{7}$ 发送 $12$，从 $v_{6}$ 向 $v_{8}$ 发送 $15$。所有边的容量约束都得到满足，因此存在一个值为 $27$ 的流。根据最大流最小割定理，最小割容量等于 $27$。\n\n因此，所需的最小总带宽为 $27$ Gbps。", "answer": "$$\\boxed{27}$$", "id": "1360967"}]}