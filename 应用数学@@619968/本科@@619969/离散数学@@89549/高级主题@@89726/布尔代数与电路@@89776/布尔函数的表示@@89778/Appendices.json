{"hands_on_practices": [{"introduction": "将现实世界中的逻辑规则转化为数学形式是数字逻辑设计的第一步。这个练习将带你体验如何将一个带权重的投票场景转换为布尔函数 [@problem_id:1396779]。通过这个过程，你将练习如何系统地识别使函数为真的所有条件，并利用布尔代数法则将其化简为最简形式，这突显了布尔代数在精确建模和简化复杂逻辑方面的强大能力。", "problem": "一个由三名成员——Alex、Ben和Casey——组成的委员会对提案进行投票。设布尔变量 $x, y, \\text{和 } z$ 分别代表Alex、Ben和Casey的投票，其中值1表示“赞成”票，值0表示“反对”票。\n\n由于资历原因，Alex的“赞成”票权重为2，而Ben和Casey的“赞成”票权重各为1。任何成员的“反对”票权重为0。如果“赞成”票的权重之和至少为3，则提案获得批准。\n\n确定布尔函数 $F(x, y, z)$ 的最简积之和（SOP）表达式，该函数在提案被批准时输出1，否则输出0。在你的最终表达式中，每个乘积项内的变量必须按字母顺序排列（例如，$xyz$）。", "solution": "设 $x,y,z \\in \\{0,1\\}$ 分别代表Alex、Ben和Casey的投票。投票的加权和为 $2x + y + z$，当 $2x + y + z \\geq 3$ 时，提案获得批准。因此，\n$$\nF(x,y,z)=1 \\iff 2x + y + z \\geq 3.\n$$\n如果 $x=0$，那么 $2x + y + z = y + z \\leq 2 < 3$，因此不可能批准；故 $x=1$ 是必要的。当 $x=1$ 时，条件变为\n$$\n2 + y + z \\geq 3 \\iff y + z \\geq 1,\n$$\n这意味着 $y$ 或 $z$ 中至少有一个必须为1。因此，批准的输入组合是 $(x,y,z)=(1,1,0),(1,0,1),(1,1,1)$。其规范积之和为\n$$\nF = x y z' + x y' z + x y z.\n$$\n使用布尔代数化简：\n$$\nx y z' + x y z = x y(z' + z) = x y,\n$$\n所以\n$$\nF = x y + x y' z = x(y + y' z).\n$$\n使用恒等式 $y + y' z = (y + y')(y + z) = y + z$ 可得\n$$\nF = x(y + z) = x y + x z.\n$$\n每个乘积项都按字母顺序排列，得到最简积之和表达式。", "answer": "$$\\boxed{xy+xz}$$", "id": "1396779"}, {"introduction": "在表示一个布尔函数之后，优化的目标往往是使其尽可能地简洁，以节约硬件成本和提升性能。这个练习引入了“无关项”($don't-care$ conditions)这一实用概念，它为逻辑化简提供了极大的灵活性 [@problem_id:1396752]。你的任务是找出包含无关项的函数的最简“与或式”(Sum-of-Products, SOP)，这是优化数字电路的一项核心技能。", "problem": "一个定义在四个变量上的布尔函数 $F(w, x, y, z)$。对于十进制索引 $\\sum m(0, 2, 8, 10)$ 标识的最小项集合，该函数的值为 1。对于对应于十进制索引 $d(5, 13)$ 的输入组合，函数的输出被视为“无关项”。对于所有其他输入组合，函数的值为 0。\n\n求函数 $F$ 的最小积之和 (SOP) 表达式。在您的答案中，请使用并列表示与 (AND) 运算，使用 `+` 符号表示或 (OR) 运算，并使用撇号表示变量的补 (例如，$w$ 的补是 $w'$)。", "solution": "我们给定一个四变量布尔函数，其最小项位于十进制索引 0, 2, 8, 10，无关项位于 5, 13。使用标准变量顺序 $(w,x,y,z)$，其中 $w$ 是最高有效位，$z$ 是最低有效位，这些最小项对应于：\n- $m(0) = w'x'y'z'$，\n- $m(2) = w'x'yz'$，\n- $m(8) = wx'y'z'$，\n- $m(10) = wx'yz'$。\n\n因此，其规范积之和形式为\n$$\nF = w'x'y'z' + w'x'yz' + wx'y'z' + wx'yz'.\n$$\n使用布尔代数通过分组进行因式分解。首先将带有 $w'$ 和带有 $w$ 的项分组：\n$$\nF = w'x'z'(y' + y) + wx'z'(y' + y).\n$$\n使用互补律 $y' + y = 1$ 进行化简：\n$$\nF = w'x'z' + wx'z'.\n$$\n现在提出公因子 $x'z'$：\n$$\nF = x'z'(w' + w).\n$$\n再次使用互补律 $w' + w = 1$：\n$$\nF = x'z'.\n$$\n这个单一的蕴涵项 $x'z'$ 恰好覆盖了四个指定的最小项 $(0,2,8,10)$，并且不包含任何其他最小项。对于此化简，索引为 $d(5,13)$ 的无关项是不需要的，并且它们不能实现任何进一步的简化，因为任何单文字蕴涵项都会覆盖那些被明确定义为 $0$ 的最小项。\n\n因此，最小积之和表达式为 $x'z'$。", "answer": "$$\\boxed{x'z'}$$", "id": "1396752"}, {"introduction": "理论的最终目的是应用于实践，将抽象的数学表达式变为具体的物理实现是数字系统设计的关键环节。这个练习将让你直面从布尔表达式到逻辑门电路的转换过程 [@problem_id:1396742]。你需要在不进行任何代数化简的情况下，直接根据给定的“或与式”(Product-of-Sums, POS)表达式来构建一个多级逻辑电路，并计算出所需的最少逻辑门数量，从而深入理解表达式结构与硬件资源之间的直接对应关系。", "problem": "一个数字电路需要实现以其和之积形式给出的布尔函数 $f(w, x, y, z)$：\n$$f(w, x, y, z) = ((\\neg w) \\lor x \\lor (\\neg z)) \\land (w \\lor (\\neg y) \\lor z)$$\n该实现必须仅使用标准逻辑门构建：双输入或门、双输入与门和单输入非门。电路应为所写表达式的直接、多级实现，不进行任何代数化简。\n\n构建此电路所需的最小总门数是多少？\n\nA. 5\n\nB. 6\n\nC. 7\n\nD. 8\n\nE. 9", "solution": "我们直接实现给定的和之积表达式\n$$f(w,x,y,z)=((\\neg w)\\lor x\\lor(\\neg z))\\land(w\\lor(\\neg y)\\lor z)$$\n，且仅使用双输入或门、双输入与门和单输入非门。\n\n首先，通过识别反变量来计算所需的非门数量。表达式包含 $(\\neg w)$、$(\\neg z)$ 和 $(\\neg y)$，而 $w$、$x$ 和 $z$ 也以原变量形式出现。每个反变量需要一个反相器，并且单个反相器的输出可以扇出到该反变量的所有出现位置。因此，非门的数量为\n$$\\text{NOT gates} = 3 \\quad \\text{for } \\neg w,\\ \\neg z,\\ \\neg y.$$\n\n接下来，我们用双输入或门来实现每个三输入或运算。一个由双输入或门构成的二叉树实现的 $n$ 输入或运算需要 $n-1$ 个门。对于 $n=3$，每个子句需要\n$$\\text{OR gates per clause} = 3-1=2.$$\n表达式中有两个这样的子句，所以\n$$\\text{total OR gates} = 2+2=4.$$\n\n最后，顶层的合取是两个子句输出的与运算，这使用一个双输入与门：\n$$\\text{AND gates} = 1.$$\n\n将所有需要的门加起来，得到总数：\n$$\\text{total gates} = \\text{NOT}+\\text{OR}+\\text{AND} = 3+4+1=8.$$\n\n由于没有进行代数化简，并且允许通过扇出共享反相信号，因此这是在规定约束条件下的最小门数。在选项中，这对应于D。", "answer": "$$\\boxed{D}$$", "id": "1396742"}]}