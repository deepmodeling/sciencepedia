{"hands_on_practices": [{"introduction": "理论学习之后，最好的消化方式就是动手实践。让我们从一个基础练习开始，逐步骤地应用共轭梯度算法。这个练习 [@problem_id:1393666] 将引导你为一个简单的 $2 \\times 2$ 线性系统执行第一次迭代计算，让你熟悉算法的核心公式，包括如何计算残差、搜索方向和步长。这是掌握共轭梯度法力学基础的第一步。", "problem": "考虑线性方程组 $A\\mathbf{x}=\\mathbf{b}$，其中矩阵 $A$ 和向量 $\\mathbf{b}$ 由下式给出：\n$$\nA = \\begin{pmatrix} 2 & -1 \\\\ -1 & 3 \\end{pmatrix}, \\quad \\mathbf{b} = \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix}\n$$\n矩阵 $A$ 是对称正定的。\n\n从初始猜测 $\\mathbf{x}_0 = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$ 开始，应用一次共轭梯度法迭代来求得第一次更新后的解 $\\mathbf{x}_1$。\n\n将您的答案表示为一个行矩阵，其元素为 $\\mathbf{x}_1$ 的分量，并以精确分数形式表示。", "solution": "我们从 $\\mathbf{x}_{0}$ 开始，对对称正定矩阵 $A$ 应用共轭梯度法。标准的首次迭代公式为：\n$$\n\\mathbf{r}_{0} = \\mathbf{b} - A \\mathbf{x}_{0}, \\quad \\mathbf{p}_{0} = \\mathbf{r}_{0}, \\quad \\alpha_{0} = \\frac{\\mathbf{r}_{0}^{T} \\mathbf{r}_{0}}{\\mathbf{p}_{0}^{T} A \\mathbf{p}_{0}}, \\quad \\mathbf{x}_{1} = \\mathbf{x}_{0} + \\alpha_{0} \\mathbf{p}_{0}.\n$$\n给定 $\\mathbf{x}_{0} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix}$ 和 $\\mathbf{b} = \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix}$，我们计算\n$$\n\\mathbf{r}_{0} = \\mathbf{b} - A \\mathbf{x}_{0} = \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix}, \\quad \\mathbf{p}_{0} = \\mathbf{r}_{0} = \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix}.\n$$\n接下来，计算 $A \\mathbf{p}_{0}$：\n$$\nA \\mathbf{p}_{0} = \\begin{pmatrix} 2 & -1 \\\\ -1 & 3 \\end{pmatrix} \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix} = \\begin{pmatrix} 2 \\cdot 4 + (-1)(-3) \\\\ (-1) \\cdot 4 + 3 \\cdot (-3) \\end{pmatrix} = \\begin{pmatrix} 11 \\\\ -13 \\end{pmatrix}.\n$$\n计算标量积：\n$$\n\\mathbf{r}_{0}^{T} \\mathbf{r}_{0} = 4^{2} + (-3)^{2} = 16 + 9 = 25, \\quad \\mathbf{p}_{0}^{T} A \\mathbf{p}_{0} = \\mathbf{r}_{0}^{T} (A \\mathbf{p}_{0}) = 4 \\cdot 11 + (-3) \\cdot (-13) = 44 + 39 = 83.\n$$\n因此，\n$$\n\\alpha_{0} = \\frac{\\mathbf{r}_{0}^{T} \\mathbf{r}_{0}}{\\mathbf{p}_{0}^{T} A \\mathbf{p}_{0}} = \\frac{25}{83}.\n$$\n更新解：\n$$\n\\mathbf{x}_{1} = \\mathbf{x}_{0} + \\alpha_{0} \\mathbf{p}_{0} = \\begin{pmatrix} 0 \\\\ 0 \\end{pmatrix} + \\frac{25}{83} \\begin{pmatrix} 4 \\\\ -3 \\end{pmatrix} = \\begin{pmatrix} \\frac{100}{83} \\\\ -\\frac{75}{83} \\end{pmatrix}.\n$$\n表示为行矩阵，$\\mathbf{x}_{1}$ 的分量为 $\\begin{pmatrix} \\frac{100}{83} & -\\frac{75}{83} \\end{pmatrix}$。", "answer": "$$\\boxed{\\begin{pmatrix} \\frac{100}{83} & -\\frac{75}{83} \\end{pmatrix}}$$", "id": "1393666"}, {"introduction": "共轭梯度法在理论上能在 $n$ 步内收敛，但有时它的表现会出人意料地好。这个练习 [@problem_id:1393668] 邀请你进行一次“思想实验”，探索何种条件下算法能够一步到位，直接找到精确解。通过解决这个问题，你将发现初始猜测的误差向量与系统矩阵的特征向量之间存在着深刻的联系，这不仅加深了你对算法收敛性的理解，也揭示了其背后优美的几何原理。", "problem": "共轭梯度（CG）法是一种迭代算法，用于求解形如 $A\\mathbf{x} = \\mathbf{b}$ 的线性方程组，其中 $A$ 是一个对称正定矩阵。该方法的性能可能取决于初始猜测 $\\mathbf{x}_0$ 的选择。\n\n考虑由矩阵 $A = \\begin{pmatrix} 2 & -1 \\\\ -1 & 2 \\end{pmatrix}$ 和向量 $\\mathbf{b} = \\begin{pmatrix} 1 \\\\ 3 \\end{pmatrix}$ 定义的线性系统。CG 方法使用形如 $\\mathbf{x}_0 = \\begin{pmatrix} 1 \\\\ y_0 \\end{pmatrix}$ 的初始向量进行初始化，其中 $y_0$ 是一个实数。\n\n找出所有可能的 $y_0$ 值，使得 CG 方法在单次迭代中收敛到精确解。这意味着第一次迭代的结果 $\\mathbf{x}_1$ 就是精确解。你可以假设初始猜测 $\\mathbf{x}_0$ 本身不是精确解。计算所有这些满足条件的 $y_0$ 值之和。", "solution": "对于对称正定矩阵 $A$，共轭梯度法从 $\\mathbf{x}_{0}$ 开始，残差为 $\\mathbf{r}_{0}=\\mathbf{b}-A\\mathbf{x}_{0}$，搜索方向为 $\\mathbf{p}_{0}=\\mathbf{r}_{0}$，步长为\n$$\n\\alpha_{0}=\\frac{\\mathbf{r}_{0}^{T}\\mathbf{r}_{0}}{\\mathbf{p}_{0}^{T}A\\mathbf{p}_{0}},\n$$\n并更新 $\\mathbf{x}_{1}=\\mathbf{x}_{0}+\\alpha_{0}\\mathbf{p}_{0}$。精确解 $\\mathbf{x}^{*}$ 满足 $A\\mathbf{x}^{*}=\\mathbf{b}$。定义初始误差 $\\mathbf{e}_{0}=\\mathbf{x}^{*}-\\mathbf{x}_{0}$。那么\n$$\n\\mathbf{r}_{0}=\\mathbf{b}-A\\mathbf{x}_{0}=A\\mathbf{x}^{*}-A\\mathbf{x}_{0}=A(\\mathbf{x}^{*}-\\mathbf{x}_{0})=A\\mathbf{e}_{0}.\n$$\n在一次迭代中收敛意味着 $\\mathbf{x}_{1}=\\mathbf{x}^{*}$，即\n$$\n\\mathbf{x}^{*}=\\mathbf{x}_{0}+\\alpha_{0}\\mathbf{r}_{0}\\quad\\Longleftrightarrow\\quad \\mathbf{e}_{0}=\\alpha_{0}\\mathbf{r}_{0}=\\alpha_{0}A\\mathbf{e}_{0}.\n$$\n因此 $A\\mathbf{e}_{0}=(1/\\alpha_{0})\\mathbf{e}_{0}$，所以 $\\mathbf{e}_{0}$ 必须是 $A$ 的一个特征向量。反之，如果 $A\\mathbf{e}_{0}=\\lambda \\mathbf{e}_{0}$，那么 $\\mathbf{r}_{0}=\\lambda \\mathbf{e}_{0}$ 且\n$$\n\\alpha_{0}=\\frac{\\mathbf{r}_{0}^{T}\\mathbf{r}_{0}}{\\mathbf{r}_{0}^{T}A\\mathbf{r}_{0}}=\\frac{\\lambda^{2}\\mathbf{e}_{0}^{T}\\mathbf{e}_{0}}{\\lambda^{3}\\mathbf{e}_{0}^{T}\\mathbf{e}_{0}}=\\frac{1}{\\lambda},\n$$\n这得到 $\\mathbf{x}_{1}=\\mathbf{x}_{0}+\\alpha_{0}\\mathbf{r}_{0}=\\mathbf{x}_{0}+(1/\\lambda)\\lambda \\mathbf{e}_{0}=\\mathbf{x}^{*}$。因此，单步收敛的充要条件是 $\\mathbf{e}_{0}$ 是 $A$ 的一个特征向量。\n\n计算对于 $A=\\begin{pmatrix}2 & -1\\\\ -1 & 2\\end{pmatrix}$ 和 $\\mathbf{b}=\\begin{pmatrix}1\\\\ 3\\end{pmatrix}$ 的精确解 $\\mathbf{x}^{*}$。求解\n$$\n\\begin{cases}\n2x_{1}-x_{2}=1,\\\\\n-x_{1}+2x_{2}=3,\n\\end{cases}\n$$\n解得 $x_{1}=5/3$，$x_{2}=7/3$，因此 $\\mathbf{x}^{*}=\\begin{pmatrix}5/3\\\\ 7/3\\end{pmatrix}$。\n\n给定 $\\mathbf{x}_{0}=\\begin{pmatrix}1\\\\ y_{0}\\end{pmatrix}$，初始误差为\n$$\n\\mathbf{e}_{0}=\\mathbf{x}^{*}-\\mathbf{x}_{0}=\\begin{pmatrix}5/3-1\\\\ 7/3-y_{0}\\end{pmatrix}=\\begin{pmatrix}2/3\\\\ 7/3-y_{0}\\end{pmatrix}.\n$$\n$A$ 的特征值为 $\\lambda_{1}=1$（对应特征向量 $\\mathbf{v}_{1}=\\begin{pmatrix}1\\\\ 1\\end{pmatrix}$）和 $\\lambda_{2}=3$（对应特征向量 $\\mathbf{v}_{2}=\\begin{pmatrix}1\\\\ -1\\end{pmatrix}$）。因此 $\\mathbf{e}_{0}$ 必须与 $\\mathbf{v}_{1}$ 或 $\\mathbf{v}_{2}$ 平行。\n\n情况1：$\\mathbf{e}_{0}=c\\begin{pmatrix}1\\\\ 1\\end{pmatrix}$。则 $2/3=c$ 且 $7/3-y_{0}=c$，所以 $y_{0}=7/3-2/3=5/3$。\n\n情况2：$\\mathbf{e}_{0}=c\\begin{pmatrix}1\\\\ -1\\end{pmatrix}$。则 $2/3=c$ 且 $7/3-y_{0}=-c=-2/3$，所以 $y_{0}=7/3+2/3=3$。\n\n这两个值都使得 $\\mathbf{e}_{0}\\neq \\mathbf{0}$，因此满足 $\\mathbf{x}_{0}\\neq \\mathbf{x}^{*}$ 的要求。所有满足条件的 $y_{0}$ 之和为\n$$\n\\frac{5}{3}+3=\\frac{5}{3}+\\frac{9}{3}=\\frac{14}{3}.\n$$", "answer": "$$\\boxed{\\frac{14}{3}}$$", "id": "1393668"}, {"introduction": "在优化算法中，我们通常期望误差或某个性能指标是单调下降的。然而，共轭梯度法给我们带来了一个有趣的“意外”。虽然该方法保证了误差的 $A$-范数是单调递减的，但我们更常监测的残差的欧几里得范数（$L^2$-范数）却可能在迭代过程中出现短暂的上升。这个练习 [@problem_id:1393663] 通过一个具体的例子让你亲手计算并观察到这一现象，这有助于纠正对收敛行为的普遍误解，并强调了理解算法优化目标的精确含义的重要性。", "problem": "共轭梯度法 (Conjugate Gradient, CG) 是一种用于求解线性方程组 $A\\mathbf{x}=\\mathbf{b}$ 的迭代算法，其中矩阵 $A$ 是对称正定的。该算法生成一个解序列 $\\mathbf{x}_k$，该序列收敛于真实解。\n\n标准算法定义如下，从一个初始猜测 $\\mathbf{x}_0$ 开始：\n1.  初始化残差 $\\mathbf{r}_0 = \\mathbf{b} - A\\mathbf{x}_0$ 和搜索方向 $\\mathbf{p}_0 = \\mathbf{r}_0$。\n2.  对于 $k = 0, 1, 2, \\dots$ 直到收敛：\n    a. 计算步长：$\\alpha_k = \\frac{\\mathbf{r}_k^T \\mathbf{r}_k}{\\mathbf{p}_k^T A \\mathbf{p}_k}$\n    b. 更新解：$\\mathbf{x}_{k+1} = \\mathbf{x}_k + \\alpha_k \\mathbf{p}_k$\n    c. 更新残差：$\\mathbf{r}_{k+1} = \\mathbf{r}_k - \\alpha_k A \\mathbf{p}_k$\n    d. 计算改进因子：$\\beta_k = \\frac{\\mathbf{r}_{k+1}^T \\mathbf{r}_{k+1}}{\\mathbf{r}_k^T \\mathbf{r}_k}$\n    e. 更新搜索方向：$\\mathbf{p}_{k+1} = \\mathbf{r}_{k+1} + \\beta_k \\mathbf{p}_k$\n\n考虑线性系统 $A\\mathbf{x}=\\mathbf{b}$，其中矩阵 $A$ 和向量 $\\mathbf{b}$ 由以下公式给出：\n$$ A = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 10 & 0 \\\\ 0 & 0 & 100 \\end{pmatrix}, \\quad \\mathbf{b} = \\begin{pmatrix} 1 \\\\ 0.1 \\\\ 0.01 \\end{pmatrix} $$\n使用初始猜测 $\\mathbf{x}_0 = (0, 0, 0)^T$，执行一次完整的共轭梯度算法迭代（即循环中对应于 $k=0$ 的计算），以确定第一个更新后的残差向量 $\\mathbf{r}_1$。\n\n计算该残差向量的欧几里得范数（也称为 $L^2$-范数）$\\|\\mathbf{r}_1\\|_2$。将您的答案报告为一个四舍五入到四位有效数字的数值。", "solution": "我们应用共轭梯度 (CG) 算法进行一次迭代，从 $\\mathbf{x}_{0} = \\begin{pmatrix} 0 \\\\ 0 \\\\ 0 \\end{pmatrix}$ 开始。\n\n计算初始残差和搜索方向：\n$$\n\\mathbf{r}_{0} = \\mathbf{b} - A \\mathbf{x}_{0} = \\mathbf{b} = \\begin{pmatrix} 1 \\\\ 0.1 \\\\ 0.01 \\end{pmatrix}, \\quad \\mathbf{p}_{0} = \\mathbf{r}_{0}.\n$$\n步长为\n$$\n\\alpha_{0} = \\frac{\\mathbf{r}_{0}^{T} \\mathbf{r}_{0}}{\\mathbf{p}_{0}^{T} A \\mathbf{p}_{0}} = \\frac{1^{2} + 0.1^{2} + 0.01^{2}}{1 \\cdot 1^{2} + 10 \\cdot (0.1)^{2} + 100 \\cdot (0.01)^{2}} = \\frac{1.0101}{1.11} = 0.91.\n$$\n计算 $A \\mathbf{p}_{0}$：\n$$\nA \\mathbf{p}_{0} = A \\mathbf{r}_{0} = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 10 & 0 \\\\ 0 & 0 & 100 \\end{pmatrix} \\begin{pmatrix} 1 \\\\ 0.1 \\\\ 0.01 \\end{pmatrix} = \\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix}.\n$$\n更新残差：\n$$\n\\mathbf{r}_{1} = \\mathbf{r}_{0} - \\alpha_{0} A \\mathbf{p}_{0} = \\begin{pmatrix} 1 \\\\ 0.1 \\\\ 0.01 \\end{pmatrix} - 0.91 \\begin{pmatrix} 1 \\\\ 1 \\\\ 1 \\end{pmatrix} = \\begin{pmatrix} 0.09 \\\\ -0.81 \\\\ -0.9 \\end{pmatrix}.\n$$\n计算其欧几里得范数：\n$$\n\\|\\mathbf{r}_{1}\\|_{2} = \\sqrt{(0.09)^{2} + (-0.81)^{2} + (-0.9)^{2}} = \\sqrt{0.0081 + 0.6561 + 0.81} = \\sqrt{1.4742} \\approx 1.214.\n$$\n四舍五入到四位有效数字，范数为 $1.214$。", "answer": "$$\\boxed{1.214}$$", "id": "1393663"}]}