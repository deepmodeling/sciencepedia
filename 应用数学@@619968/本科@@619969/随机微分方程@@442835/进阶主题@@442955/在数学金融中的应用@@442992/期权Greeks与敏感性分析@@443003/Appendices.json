{"hands_on_practices": [{"introduction": "我们的实践始于推导期权最基本的敏感性指标——Delta。Delta，即 $\\Delta$，衡量了期权价格相对于标的资产价格变化的速率，是进行对冲和风险管理的核心工具。通过从风险中性定价的第一性原理出发进行推导，你将深刻理解Black-Scholes模型下的资产动态如何转化为具体的风险度量，并为后续更复杂的分析奠定坚实的数学基础。[@problem_id:3069345]", "problem": "设 $(\\Omega,\\mathcal{F},(\\mathcal{F}_{\\tau})_{\\tau \\ge 0},\\mathbb{Q})$ 为一个过滤概率空间，其在风险中性测度 $\\mathbb{Q}$ 下支持一个标准布朗运动 $W$。考虑一个标的资产价格过程 $(S_{\\tau})_{\\tau \\ge 0}$，它在测度 $\\mathbb{Q}$ 下满足布莱克-斯科尔斯-默顿 (BSM) 随机微分方程，\n$$\n\\mathrm{d}S_{\\tau} = r S_{\\tau}\\,\\mathrm{d}\\tau + \\sigma S_{\\tau}\\,\\mathrm{d}W_{\\tau},\n$$\n其中无风险利率 $r \\ge 0$ 和波动率 $\\sigma  0$ 为常数，当前时间 $t \\in [0,T)$ 且 $S_t = S  0$。令 $\\tau := T - t$。一份行权价为 $K  0$、到期日为 $T$ 的欧式看涨期权在时间 $t$ 的价格由风险中性定价公式给出\n$$\nC(t,S) = \\exp(-r \\tau)\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[(S_T - K)^{+}\\,\\big|\\,S_t = S\\right].\n$$\n仅使用 BSM 模型和风险中性定价作为基本基础，推导期权 Delta 值，其定义为\n$$\n\\Delta(t,S) := \\frac{\\partial C}{\\partial S}(t,S),\n$$\n将其表示为以 $S$、$K$、$r$、$\\sigma$、$t$、$T$ 以及标准正态累积分布函数 (CDF) 表示的闭式解析表达式。您可以假设根据控制收敛定理，微分与期望的顺序可以交换。将您的最终答案呈现为单个解析表达式。无需四舍五入，也无需单位。", "solution": "本题旨在布莱克-斯科尔斯-默顿 (BSM) 框架内，推导欧式看涨期权的 Delta 值，$\\Delta(t,S) := \\frac{\\partial C}{\\partial S}(t,S)$。\n\n首先，我们对问题陈述进行验证。\n\n**步骤1：提取已知条件**\n- 过滤概率空间：$(\\Omega,\\mathcal{F},(\\mathcal{F}_{\\tau})_{\\tau \\ge 0},\\mathbb{Q})$\n- 布朗运动：$W$ 是在风险中性测度 $\\mathbb{Q}$ 下的标准布朗运动。\n- 资产价格过程SDE：$\\mathrm{d}S_{\\tau} = r S_{\\tau}\\,\\mathrm{d}\\tau + \\sigma S_{\\tau}\\,\\mathrm{d}W_{\\tau}$ for $\\tau \\ge 0$。\n- 无风险利率：$r \\ge 0$，常数。\n- 波动率：$\\sigma  0$，常数。\n- 当前时间：$t \\in [0,T)$。\n- 到期时间：$T$。\n- 当前资产价格：$S_t = S  0$。\n- 行权价：$K  0$。\n- 距到期时间：$\\tau := T - t$。\n- 看涨期权价格公式：$C(t,S) = \\exp(-r \\tau)\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[(S_T - K)^{+}\\,\\big|\\,S_t = S\\right]$。\n- Delta的定义：$\\Delta(t,S) := \\frac{\\partial C}{\\partial S}(t,S)$。\n- 假设：根据控制收敛定理，微分与期望的顺序可以交换。\n\n**步骤2：使用提取的已知条件进行验证**\n该问题具有科学依据，是适定且客观的。它是金融数学中的一个标准推导，基于经典的布莱克-斯科尔斯-默顿模型。所有必要信息，包括标的资产的随机微分方程、风险中性定价公式以及所有相关参数，均已提供。定义清晰明确。该问题是自洽、一致的，并且不违反任何科学或数学原理。\n\n**步骤3：结论与行动**\n问题有效。我们继续进行推导。\n\n欧式看涨期权在时间 $t$ 的价格由下式给出\n$$\nC(t,S) = \\exp(-r(T-t))\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[(S_T - K)^{+}\\,\\big|\\,S_t = S\\right]\n$$\n期权 Delta 定义为期权价格关于标的资产价格 $S$ 的偏导数：\n$$\n\\Delta(t,S) = \\frac{\\partial C}{\\partial S}(t,S) = \\frac{\\partial}{\\partial S} \\left( \\exp(-r(T-t))\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[(S_T - K)^{+}\\,\\big|\\,S_t = S\\right] \\right)\n$$\n由于折现因子 $\\exp(-r(T-t))$ 不依赖于 $S$，并且已知我们可以交换微分和期望的顺序，我们有：\n$$\n\\Delta(t,S) = \\exp(-r(T-t))\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[\\frac{\\partial}{\\partial S} (S_T - K)^{+}\\,\\bigg|\\,S_t = S\\right]\n$$\n为了计算期望内的导数，我们首先需要到期日资产价格 $S_T$ 与其在时间 $t$ 的价格 $S_t=S$ 之间的关系。给定的随机微分方程描述了一个几何布朗运动。其解为：\n$$\nS_T = S_t \\exp\\left( \\left(r - \\frac{1}{2}\\sigma^2\\right)(T-t) + \\sigma (W_T - W_t) \\right)\n$$\n给定 $S_t = S$，我们可以将 $S_T$ 写成 $S_T = S \\cdot X$，其中 $X = \\exp\\left( \\left(r - \\frac{1}{2}\\sigma^2\\right)(T-t) + \\sigma (W_T - W_t) \\right)$ 是一个随机变量，其分布不依赖于 $S$。我们使用链式法则对收益 $(S_T - K)^{+}$ 关于 $S$ 求导：\n$$\n\\frac{\\partial}{\\partial S} (S_T - K)^{+} = \\frac{\\partial (S \\cdot X - K)^{+}}{\\partial(S \\cdot X - K)} \\cdot \\frac{\\partial (S \\cdot X - K)}{\\partial S}\n$$\n函数 $f(y) = (y-K)^+$ 的导数是亥维赛阶跃函数 $I(y>K)$，当 $y>K$ 时为 $1$，当 $y\\le K$ 时为 $0$。而 $\\frac{\\partial (S \\cdot X)}{\\partial S} = X$。因此，根据链式法则，我们有：\n$$\n\\frac{\\partial}{\\partial S} (S_T - K)^{+} = X \\cdot I(S \\cdot X > K) = \\frac{S_T}{S} I(S_T > K)\n$$\n将此代入 Delta 的表达式中：\n$$\n\\Delta(t,S) = \\exp(-r(T-t))\\,\\mathbb{E}^{\\mathbb{Q}}\\!\\left[\\frac{S_T}{S} I(S_T > K)\\,\\bigg|\\,S_t = S\\right] = \\frac{e^{-r\\tau}}{S} \\mathbb{E}^{\\mathbb{Q}}[S_T \\cdot I(S_T > K)]\n$$\n期望 $\\mathbb{E}^{\\mathbb{Q}}[S_T \\cdot I(S_T > K)]$ 是在一个对数正态分布上的积分。令 $Y = \\ln S_T$，我们知道在风险中性测度 $\\mathbb{Q}$ 下，$Y \\sim \\mathcal{N}(\\mu, v^2)$，其中均值 $\\mu = \\ln S + (r - \\frac{1}{2}\\sigma^2)\\tau$，方差 $v^2 = \\sigma^2\\tau$。\n期望值可以写作积分：\n$$\n\\mathbb{E}^{\\mathbb{Q}}[S_T \\cdot I(S_T > K)] = \\int_{\\ln K}^\\infty e^y \\frac{1}{\\sqrt{2\\pi}v} e^{-\\frac{(y-\\mu)^2}{2v^2}} dy\n$$\n通过在指数项中配方法，我们可以将积分化简。指数部分 $y - \\frac{(y-\\mu)^2}{2v^2}$ 可以重写为 $-\\frac{(y - (\\mu+v^2))^2}{2v^2} + \\mu + \\frac{v^2}{2}$。\n积分变为：\n$$\ne^{\\mu+v^2/2} \\int_{\\ln K}^\\infty \\frac{1}{\\sqrt{2\\pi}v} e^{-\\frac{(y-(\\mu+v^2))^2}{2v^2}} dy\n$$\n这个积分等于一个均值为 $\\mu+v^2$、方差为 $v^2$ 的正态随机变量大于 $\\ln K$ 的概率，乘以因子 $e^{\\mu+v^2/2}$。经过标准化，该概率为 $N(d_1)$，其中\n$$\nd_1 = \\frac{(\\mu+v^2) - \\ln K}{v} = \\frac{\\ln(S/K) + (r + \\frac{1}{2}\\sigma^2)\\tau}{\\sigma\\sqrt{\\tau}}\n$$\n因子 $e^{\\mu+v^2/2} = e^{\\ln S + (r - \\sigma^2/2)\\tau + \\sigma^2\\tau/2} = S e^{r\\tau}$。\n因此，$\\mathbb{E}^{\\mathbb{Q}}[S_T \\cdot I(S_T > K)] = S e^{r\\tau} N(d_1)$。\n最后，将此结果代回 Delta 的表达式：\n$$\n\\Delta(t,S) = \\frac{e^{-r\\tau}}{S} \\left( S e^{r\\tau} N(d_1) \\right) = N(d_1)\n$$\n这就是欧式看涨期权的 Delta。", "answer": "$$\\boxed{N\\left(\\frac{\\ln\\left(\\frac{S}{K}\\right) + \\left(r + \\frac{1}{2}\\sigma^2\\right)(T-t)}{\\sigma\\sqrt{T-t}}\\right)}$$", "id": "3069345"}, {"introduction": "在掌握了基础的Delta之后，我们将转向一个更有挑战性的场景：分析奇异期权（exotic option）的风险。本练习要求你推导现金或无收益（cash-or-nothing）数字期权的Vega（$\\mathcal{V}$），即其价格对波动率的敏感度。与普通期权不同，数字期权不连续的收益结构会导致其Vega出现独特的、甚至违反直觉的行为，这个练习将加深你对收益函数如何决定风险特征的理解。[@problem_id:3069280]", "problem": "考虑一个金融市场，其中标的资产价格过程 $\\{S_{t}\\}_{t \\ge 0}$ 在风险中性概率测度 $\\mathbb{Q}$ 下遵循由随机微分方程 $\\,\\mathrm{d}S_{t} = (r - q) S_{t} \\,\\mathrm{d}t + \\sigma S_{t} \\,\\mathrm{d}W_{t}$ 指定的几何布朗运动，其中 $r$ 是恒定无风险利率，$q$ 是连续股息率，$\\sigma$ 是恒定波动率，$\\{W_{t}\\}_{t \\ge 0}$ 是一个标准布朗运动。考虑一个现金或无价值数字（二元）看涨期权，如果在到期日 $T$ 时 $S_{T}  K$，则该期权支付 1 单位现金，否则支付 0。\n\n从风险中性定价原理和给定随机微分方程导出的 $S_{T}$ 分布出发，从第一性原理推导此二元看涨期权的 Vega（期权价格对 $\\sigma$ 的敏感度）的解析表达式。然后，对于参数集 $S_{0} = 100$, $K = 110$, $r = 0.05$, $q = 0.02$, $\\sigma = 0.2$ 和 $T = 1$，计算该 Vega 的值。将您的最终数值结果四舍五入到 4 位有效数字。\n\n在您的推导中，请清楚阐明所使用的假设，并与基于相同标的资产和相同参数的普通欧式看涨期权相比，说明执行价格 $K$ 处支付的不连续性如何影响 Vega 的符号和定性行为。", "solution": "在时间 $t=0$ 时，一个衍生品的价格（记为 $C_0$）由风险中性定价原理给出，即其未来支付在风险中性概率测度 $\\mathbb{Q}$ 下的贴现期望值。对于到期日为 $T$、执行价格为 $K$ 的现金或无价值数字看涨期权，如果终端资产价格 $S_T$ 大于 $K$，则支付为 $1$，否则为 $0$。这个支付可以用指示函数 $I(S_T  K)$ 来表示。因此，期权价格为：\n$$ C_0 = \\exp(-rT) \\mathbb{E}^{\\mathbb{Q}}[I(S_T  K) | \\mathcal{F}_0] $$\n指示函数的期望是其所指示事件的概率。因此，期权价格是期权在风险中性测度 $\\mathbb{Q}$ 下以价内状态结束的贴现概率：\n$$ C_0 = \\exp(-rT) \\mathbb{Q}(S_T  K) $$\n为了计算这个概率，我们必须首先确定 $S_T$ 的分布。资产价格在 $\\mathbb{Q}$ 下遵循几何布朗运动的随机微分方程：\n$$ \\mathrm{d}S_{t} = (r - q) S_{t} \\,\\mathrm{d}t + \\sigma S_{t} \\,\\mathrm{d}W_{t} $$\n给定初始价格 $S_0$，此随机微分方程关于 $S_T$ 的解为：\n$$ S_T = S_0 \\exp\\left( \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T + \\sigma W_T \\right) $$\n其中在测度 $\\mathbb{Q}$ 下，$W_T$ 是一个服从均值为 $0$、方差为 $T$ 的正态分布的随机变量，即 $W_T \\sim \\mathcal{N}(0, T)$。因此，$S_T$ 的自然对数服从正态分布：\n$$ \\ln(S_T) \\sim \\mathcal{N}\\left(\\ln(S_0) + \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T, \\sigma^2 T\\right) $$\n我们现在可以计算概率 $\\mathbb{Q}(S_T  K)$：\n$$ \\mathbb{Q}(S_T  K) = \\mathbb{Q}(\\ln(S_T)  \\ln(K)) $$\n为了用标准正态累积分布函数 (CDF) $N(x)$ 来表示，我们对随机变量 $\\ln(S_T)$ 进行标准化：\n$$ \\mathbb{Q}\\left(\\frac{\\ln(S_T) - \\left(\\ln(S_0) + \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T\\right)}{\\sigma\\sqrt{T}}  \\frac{\\ln(K) - \\left(\\ln(S_0) + \\left(r - q - \\frac{1}{2}\\sigma^2\\right)T\\right)}{\\sigma\\sqrt{T}}\\right) $$\n令 $Z$ 为一个标准正态随机变量，$Z \\sim \\mathcal{N}(0,1)$。该表达式变为：\n$$ \\mathbb{Q}(Z  -d_2) = \\mathbb{Q}(Z  d_2) = N(d_2) $$\n其中我们按照标准的 Black-Scholes-Merton 惯例定义了 $d_2$：\n$$ d_2 = \\frac{\\ln(S_0/K) + (r - q - \\frac{1}{2}\\sigma^2)T}{\\sigma\\sqrt{T}} $$\n将这个概率代回价格公式，我们得到数字看涨期权的价格：\n$$ C_0 = \\exp(-rT) N(d_2) $$\nVega，记为 $\\mathcal{V}$，是期权价格关于波动率 $\\sigma$ 的一阶偏导数。我们对 $C_0$ 的表达式应用链式法则：\n$$ \\mathcal{V} = \\frac{\\partial C_0}{\\partial \\sigma} = \\frac{\\partial}{\\partial \\sigma} \\left[ \\exp(-rT) N(d_2) \\right] = \\exp(-rT) \\frac{\\partial N(d_2)}{\\partial \\sigma} $$\n$$ \\mathcal{V} = \\exp(-rT) N'(d_2) \\frac{\\partial d_2}{\\partial \\sigma} $$\n标准正态CDF的导数 $N'(x)$ 是标准正态概率密度函数 (PDF) $n(x) = \\frac{1}{\\sqrt{2\\pi}} \\exp(-\\frac{x^2}{2})$。因此：\n$$ \\mathcal{V} = \\exp(-rT) n(d_2) \\frac{\\partial d_2}{\\partial \\sigma} $$\n接下来，我们计算 $d_2$ 关于 $\\sigma$ 的偏导数：\n$$ d_2 = \\frac{\\ln(S_0/K) + (r-q)T}{\\sigma\\sqrt{T}} - \\frac{1}{2}\\sigma\\sqrt{T} $$\n$$ \\frac{\\partial d_2}{\\partial \\sigma} = -\\frac{\\ln(S_0/K) + (r-q)T}{\\sigma^2\\sqrt{T}} - \\frac{1}{2}\\sqrt{T} $$\n为了简化这个表达式，我们引入标准参数 $d_1$：\n$$ d_1 = \\frac{\\ln(S_0/K) + (r - q + \\frac{1}{2}\\sigma^2)T}{\\sigma\\sqrt{T}} = \\frac{\\ln(S_0/K) + (r-q)T}{\\sigma\\sqrt{T}} + \\frac{1}{2}\\sigma\\sqrt{T} $$\n根据这个定义，我们有恒等式 $d_2 = d_1 - \\sigma\\sqrt{T}$。我们也可以用 $d_1$ 来表示 $\\frac{\\partial d_2}{\\partial \\sigma}$。重排 $d_1$ 的公式：\n$$ \\frac{\\ln(S_0/K) + (r-q)T}{\\sigma\\sqrt{T}} = d_1 - \\frac{1}{2}\\sigma\\sqrt{T} $$\n将此代入 $\\frac{\\partial d_2}{\\partial \\sigma}$ 的表达式中：\n$$ \\frac{\\partial d_2}{\\partial \\sigma} = -\\frac{1}{\\sigma}\\left(d_1 - \\frac{1}{2}\\sigma\\sqrt{T}\\right) - \\frac{1}{2}\\sqrt{T} = -\\frac{d_1}{\\sigma} + \\frac{1}{2}\\sqrt{T} - \\frac{1}{2}\\sqrt{T} = -\\frac{d_1}{\\sigma} $$\n将这个简化的导数代回 Vega 的公式中，我们得到最终的解析表达式：\n$$ \\mathcal{V} = \\exp(-rT) n(d_2) \\left(-\\frac{d_1}{\\sigma}\\right) = -\\exp(-rT) \\frac{d_1}{\\sigma} n(d_2) $$\n此推导的基本假设是 Black-Scholes-Merton 模型的假设：资产价格遵循几何布朗运动，交易是连续的，没有交易成本或税收，并且无风险利率、股息率和波动率是恒定且已知的。\n\n定性地看，由于数字期权支付的不连续性，其 Vega 的行为与普通欧式看涨期权不同。对于普通看涨期权，Vega 总是正的，因为波动率增加会扩大 $S_T$ 的分布，增加了无限上行潜力的价值，而下行损失则有底线。对于数字期权，支付上限为 $1$。Vega 的符号，$\\mathcal{V} = -\\exp(-rT) \\frac{d_1}{\\sigma} n(d_2)$，由 $-d_1$ 的符号决定，因为所有其他项都是正的。\n1. 当期权为价外（$S_0  K$）时，$\\ln(S_0/K)  0$ 的可能性更大，这通常导致 $d_1  0$。在这种情况下，Vega 是正的。波动率的增加会提高资产价格上涨超过执行价格 $K$ 的概率，从而增加期权的价值。\n2. 当期权为价内（$S_0 > K$）时，$\\ln(S_0/K) > 0$ 的可能性更大，导致 $d_1 > 0$。在这种情况下，Vega 是负的。期权已经很可能获得支付。波动率的增加会提高资产价格可能下跌到执行价格 $K$ 以下的概率，这将导致零支付。这种零支付风险的增加会降低期权的价值。\n当期权接近平价时，Vega 的绝对值最大，因为此时波动率的变化对最终是价内还是价外的概率影响最大。这体现在 $n(d_2)$ 项中，该项是标准正态分布的概率密度函数，在 $d_2=0$ 时达到峰值。\n\n我们现在用给定的参数计算此 Vega 的值：$S_{0} = 100$, $K = 110$, $r = 0.05$, $q = 0.02$, $\\sigma = 0.2$ 和 $T = 1$。\n首先，计算 $d_1$ 和 $d_2$：\n$$ \\ln\\left(\\frac{S_0}{K}\\right) = \\ln\\left(\\frac{100}{110}\\right) \\approx -0.09531018 $$\n$$ d_1 = \\frac{-0.09531018 + (0.05 - 0.02 + \\frac{1}{2}(0.2)^2) \\times 1}{0.2 \\sqrt{1}} = \\frac{-0.09531018 + 0.05}{0.2} = \\frac{-0.04531018}{0.2} = -0.2265509 $$\n$$ d_2 = d_1 - \\sigma\\sqrt{T} = -0.2265509 - 0.2\\sqrt{1} = -0.4265509 $$\n由于 $d_1  0$，Vega 将为正，这对于此价外期权是符合预期的。\n接下来，我们计算标准正态PDF，$n(d_2)$：\n$$ n(d_2) = n(-0.4265509) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left(-\\frac{(-0.4265509)^2}{2}\\right) \\approx 0.364250 $$\n最后，我们计算 Vega：\n$$ \\mathcal{V} = -\\exp(-0.05 \\times 1) \\frac{-0.2265509}{0.2} (0.364250) $$\n$$ \\mathcal{V} \\approx -(0.95122942) \\times (-1.1327545) \\times (0.364250) \\approx 0.392471 $$\n四舍五入到 4 位有效数字，结果是 $0.3925$。", "answer": "$$\\boxed{0.3925}$$", "id": "3069280"}, {"introduction": "理论推导为我们提供了精确的公式，但在现实世界中，我们常常需要通过数值方法来估计风险敏感度。这个实践练习将引导你使用蒙特卡洛模拟和有限差分法来估计Vega（$\\nu$），并将结果与解析解进行比较。通过这个过程，你不仅能掌握一种重要的计算金融技术，还将亲身体验和分析数值估计中普遍存在的偏误-方差权衡（bias-variance trade-off）问题。[@problem_id:3069321]", "problem": "考虑一个欧式看涨期权，其标的资产的价格过程 $\\{S_t\\}_{t \\ge 0}$ 在风险中性测度下遵循 Black–Scholes 随机微分方程 (SDE)：\n$$\ndS_t = r S_t \\, dt + \\sigma S_t \\, dW_t,\n$$\n其中 $r$ 是恒定的无风险利率，$\\sigma$ 是恒定的波动率，$\\{W_t\\}_{t \\ge 0}$ 是一个标准布朗运动。令 $S_0$ 表示初始资产价格，$T$ 表示到期时间。到期价格 $S_T$ 服从对数正态分布，可以表示为\n$$\nS_T = S_0 \\exp\\left((r - \\tfrac{1}{2}\\sigma^2)T + \\sigma \\sqrt{T} Z\\right),\n$$\n其中 $Z \\sim \\mathcal{N}(0,1)$ 是一个标准正态随机变量。到期时的贴现欧式看涨期权收益为\n$$\nX(\\sigma) = e^{-rT} \\max(S_T - K, 0),\n$$\n其中 $K$ 是行权价格。期权价值 $C(\\sigma)$ 是风险中性期望 $C(\\sigma) = \\mathbb{E}[X(\\sigma)]$。定义敏感度 $\\nu$ (vega) 为\n$$\n\\nu = \\frac{\\partial C(\\sigma)}{\\partial \\sigma}.\n$$\n\n您的任务是实现一个用于 $\\nu$ 的蒙特卡洛有限差分估计量，采用前向差分格式，基于在 $\\sigma$ 和 $\\sigma + \\varepsilon$ 下的模拟。请使用公共随机数，以便对 $\\sigma$ 和 $\\sigma+\\varepsilon$ 重复使用相同的标准正态抽样 $Z_i$。对于给定数量的独立同分布样本 $\\{Z_i\\}_{i=1}^N$，定义路径差分\n$$\nD_i(\\varepsilon) = \\frac{X_i(\\sigma+\\varepsilon) - X_i(\\sigma)}{\\varepsilon},\n$$\n其中 $X_i(\\cdot)$ 是使用 $Z_i$ 计算的贴现收益。该估计量是样本均值\n$$\n\\widehat{\\nu}(\\varepsilon) = \\frac{1}{N} \\sum_{i=1}^N D_i(\\varepsilon),\n$$\n估计量的方差是 $D_i(\\varepsilon)$ 的样本方差除以 $N$，即\n$$\n\\widehat{\\mathrm{Var}}[\\widehat{\\nu}(\\varepsilon)] = \\frac{1}{N} \\cdot \\widehat{\\mathrm{Var}}[D_i(\\varepsilon)],\n$$\n其中样本方差 $\\widehat{\\mathrm{Var}}[D_i(\\varepsilon)]$ 使用带 Bessel 校正的无偏估计量。\n\n从给定的 SDE 出发，推导 Black–Scholes 框架中 $\\nu$ 的解析表达式，并用它计算偏差 $\\widehat{\\nu}(\\varepsilon) - \\nu$。基于泰勒展开所蕴含的主阶行为以及使用公共随机数的蒙特卡洛估计量的结构，讨论 $\\varepsilon$ 中的偏差-方差权衡。\n\n实现一个完整的、可运行的程序，该程序：\n- 使用上述 $S_T$ 的表示法进行模拟。\n- 对每对 $(\\sigma,\\sigma+\\varepsilon)$ 使用公共随机数。\n- 对每个测试用例，按以下顺序计算包含四个值的元组\n$$\n\\left[\\widehat{\\nu}(\\varepsilon), \\nu, \\widehat{\\nu}(\\varepsilon) - \\nu, \\widehat{\\mathrm{Var}}[\\widehat{\\nu}(\\varepsilon)]\\right]。\n$$\n\n使用以下测试套件，固定参数为 $S_0 = 100$，$K = 100$，$r = 0.05$，$\\sigma = 0.2$，$T = 1.0$，以及 $N = 200000$ 个独立样本，并在集合 $\\{0.1, 0.01, 0.0001, 0.000001\\}$ 中改变 $\\varepsilon$。\n\n您的程序应生成单行输出，其中包含一个由逗号分隔的列表组成的列表，并用方括号括起来（例如：\"[[case1_result1,case1_result2,case1_result3,case1_result4],[case2_result1,...],...]\"）。不涉及物理单位；所有量均为实数。问题中不出现角度。不使用百分比；请将所有数值表示为实数。", "solution": "该问题经评估为有效。它在科学上基于金融数学的 Black–Scholes 模型，具有一套完整的参数和明确的目标，问题提法适定，并且没有任何主观或矛盾的陈述。\n\n### 1. Vega ($\\nu$) 的解析推导\n\n在 Black–Scholes 模型中，一个欧式看涨期权在时间 $t=0$ 的价值 $C$ 由以下公式给出：\n$$\nC = S_0 \\Phi(d_1) - K e^{-rT} \\Phi(d_2)\n$$\n其中 $\\Phi(\\cdot)$ 是标准正态分布的累积分布函数 (CDF)，$S_0$ 是初始资产价格，$K$ 是行权价格，$r$ 是无风险利率，$T$ 是到期时间，$\\sigma$ 是波动率。项 $d_1$ 和 $d_2$ 定义如下：\n$$\nd_1 = \\frac{\\ln(S_0/K) + (r + \\frac{1}{2}\\sigma^2)T}{\\sigma\\sqrt{T}}\n$$\n$$\nd_2 = d_1 - \\sigma\\sqrt{T}\n$$\nVega，记为 $\\nu$，是期权价格 $C$ 相对于波动率 $\\sigma$ 的一阶偏导数：\n$$\n\\nu = \\frac{\\partial C}{\\partial \\sigma}\n$$\n为了计算这个导数，我们应用链式法则。令 $\\phi(\\cdot)$ 为标准正态分布的概率密度函数 (PDF)，因此有 $\\frac{d\\Phi(x)}{dx} = \\phi(x)$。\n$$\n\\frac{\\partial C}{\\partial \\sigma} = S_0 \\frac{\\partial \\Phi(d_1)}{\\partial \\sigma} - K e^{-rT} \\frac{\\partial \\Phi(d_2)}{\\partial \\sigma} = S_0 \\phi(d_1) \\frac{\\partial d_1}{\\partial \\sigma} - K e^{-rT} \\phi(d_2) \\frac{\\partial d_2}{\\partial \\sigma}\n$$\n接下来，我们求 $d_1$ 和 $d_2$ 关于 $\\sigma$ 的偏导数。对于 $d_1$，我们可以将其重写为：\n$$\nd_1 = \\frac{\\ln(S_0/K) + rT}{\\sigma\\sqrt{T}} + \\frac{\\sigma\\sqrt{T}}{2}\n$$\n其导数为：\n$$\n\\frac{\\partial d_1}{\\partial \\sigma} = -\\frac{\\ln(S_0/K) + rT}{\\sigma^2\\sqrt{T}} + \\frac{\\sqrt{T}}{2}\n$$\n对于 $d_2$，其导数为：\n$$\n\\frac{\\partial d_2}{\\partial \\sigma} = \\frac{\\partial}{\\partial \\sigma} (d_1 - \\sigma\\sqrt{T}) = \\frac{\\partial d_1}{\\partial \\sigma} - \\sqrt{T}\n$$\n现在我们将这些代入 $\\nu$ 的表达式中：\n$$\n\\nu = S_0 \\phi(d_1) \\frac{\\partial d_1}{\\partial \\sigma} - K e^{-rT} \\phi(d_2) \\left(\\frac{\\partial d_1}{\\partial \\sigma} - \\sqrt{T}\\right)\n$$\nBlack–Scholes 框架中的一个关键恒等式是 $S_0 \\phi(d_1) = K e^{-rT} \\phi(d_2)$。我们可以通过检验 $\\phi(d_1)$ 和 $\\phi(d_2)$ 之间的关系来证明这一点：\n$$\n\\phi(d_2) = \\phi(d_1 - \\sigma\\sqrt{T}) = \\frac{1}{\\sqrt{2\\pi}} \\exp\\left(-\\frac{(d_1 - \\sigma\\sqrt{T})^2}{2}\\right) = \\phi(d_1) \\exp\\left(d_1\\sigma\\sqrt{T} - \\frac{\\sigma^2T}{2}\\right)\n$$\n指数部分可以简化为：\n$$\nd_1\\sigma\\sqrt{T} - \\frac{\\sigma^2T}{2} = \\left(\\ln(S_0/K) + rT + \\frac{\\sigma^2T}{2}\\right) - \\frac{\\sigma^2T}{2} = \\ln(S_0/K) + rT\n$$\n因此，$\\exp\\left(d_1\\sigma\\sqrt{T} - \\frac{\\sigma^2T}{2}\\right) = \\exp(\\ln(S_0/K) + rT) = \\frac{S_0}{K}e^{rT}$。\n将此代回，我们得到 $\\phi(d_2) = \\phi(d_1) \\frac{S_0}{K}e^{rT}$，这证实了恒等式 $K e^{-rT} \\phi(d_2) = S_0 \\phi(d_1)$。\n\n使用这个恒等式，$\\nu$ 的表达式可以显著简化：\n$$\n\\nu = S_0 \\phi(d_1) \\frac{\\partial d_1}{\\partial \\sigma} - S_0 \\phi(d_1) \\left(\\frac{\\partial d_1}{\\partial \\sigma} - \\sqrt{T}\\right)\n$$\n$$\n\\nu = S_0 \\phi(d_1) \\frac{\\partial d_1}{\\partial \\sigma} - S_0 \\phi(d_1) \\frac{\\partial d_1}{\\partial \\sigma} + S_0 \\phi(d_1) \\sqrt{T}\n$$\n这就给出了 Vega 的最终解析表达式：\n$$\n\\nu = S_0 \\sqrt{T} \\phi(d_1)\n$$\n\n### 2. 偏差-方差权衡分析\n\nVega 的蒙特卡洛估计量由 $\\widehat{\\nu}(\\varepsilon) = \\frac{1}{N} \\sum_{i=1}^N D_i(\\varepsilon)$ 给出，其中 $D_i(\\varepsilon) = \\frac{X_i(\\sigma+\\varepsilon) - X_i(\\sigma)}{\\varepsilon}$。该估计量的期望值为：\n$$\n\\mathbb{E}[\\widehat{\\nu}(\\varepsilon)] = \\mathbb{E}\\left[\\frac{X(\\sigma+\\varepsilon) - X(\\sigma)}{\\varepsilon}\\right] = \\frac{\\mathbb{E}[X(\\sigma+\\varepsilon)] - \\mathbb{E}[X(\\sigma)]}{\\varepsilon} = \\frac{C(\\sigma+\\varepsilon) - C(\\sigma)}{\\varepsilon}\n$$\n真实的 Vega 是 $\\nu = C'(\\sigma)$。估计量的偏差是其期望值与真实值之间的差：\n$$\n\\text{Bias}[\\widehat{\\nu}(\\varepsilon)] = \\mathbb{E}[\\widehat{\\nu}(\\varepsilon)] - \\nu = \\frac{C(\\sigma+\\varepsilon) - C(\\sigma)}{\\varepsilon} - C'(\\sigma)\n$$\n假设 $C$ 足够光滑，对 $C(\\sigma+\\varepsilon)$ 在 $\\sigma$ 附近进行泰勒展开：\n$$\nC(\\sigma+\\varepsilon) = C(\\sigma) + C'(\\sigma)\\varepsilon + \\frac{1}{2} C''(\\sigma)\\varepsilon^2 + O(\\varepsilon^3)\n$$\n将此代入偏差表达式中：\n$$\n\\text{Bias}[\\widehat{\\nu}(\\varepsilon)] = \\frac{C(\\sigma) + C'(\\sigma)\\varepsilon + \\frac{1}{2} C''(\\sigma)\\varepsilon^2 + \\dots - C(\\sigma)}{\\varepsilon} - C'(\\sigma) = \\frac{1}{2} C''(\\sigma)\\varepsilon + O(\\varepsilon^2)\n$$\n偏差是 $O(\\varepsilon)$ 阶的。这表明，随着有限差分步长 $\\varepsilon$ 的减小，估计量的偏差线性减小，并在 $\\varepsilon \\to 0$ 时趋近于零。\n\n估计量的方差为：\n$$\n\\mathrm{Var}[\\widehat{\\nu}(\\varepsilon)] = \\mathrm{Var}\\left[\\frac{1}{N} \\sum_{i=1}^N D_i(\\varepsilon)\\right] = \\frac{1}{N} \\mathrm{Var}[D_i(\\varepsilon)]\n$$\n其中 $\\mathrm{Var}[D_i(\\varepsilon)] = \\frac{1}{\\varepsilon^2} \\mathrm{Var}[X_i(\\sigma+\\varepsilon) - X_i(\\sigma)]$。此处使用公共随机数 (CRN) 至关重要。使用相同的基础随机变量 $Z_i$ 来生成 $X_i(\\sigma)$ 和 $X_i(\\sigma+\\varepsilon)$，使它们呈强正相关。\n$$\n\\mathrm{Var}[X_i(\\sigma+\\varepsilon) - X_i(\\sigma)] = \\mathrm{Var}[X_i(\\sigma+\\varepsilon)] + \\mathrm{Var}[X_i(\\sigma)] - 2\\mathrm{Cov}[X_i(\\sigma+\\varepsilon), X_i(\\sigma)]\n$$\n当 $\\varepsilon \\to 0$ 时，$X_i(\\sigma+\\varepsilon)$ 趋近于 $X_i(\\sigma)$，它们的协方差趋近于 $X_i(\\sigma)$ 的方差。一阶泰勒展开揭示了其行为：$X_i(\\sigma+\\varepsilon) - X_i(\\sigma) \\approx \\frac{\\partial X_i(\\sigma)}{\\partial \\sigma} \\varepsilon$。\n因此，$\\mathrm{Var}[X_i(\\sigma+\\varepsilon) - X_i(\\sigma)] \\approx \\varepsilon^2 \\mathrm{Var}[\\frac{\\partial X_i(\\sigma)}{\\partial \\sigma}]$。这意味着 $\\mathrm{Var}[D_i(\\varepsilon)] \\approx \\mathrm{Var}[\\frac{\\partial X_i(\\sigma)}{\\partial \\sigma}]$，这是一个常数，独立于 $\\varepsilon$。因此，在使用 CRN 的情况下，估计量的方差 $\\mathrm{Var}[\\widehat{\\nu}(\\varepsilon)]$ 是 $O(1/N)$ 阶的，并且在 $\\varepsilon$ 变化时应相对稳定。如果不使用 CRN，协方差项将为零，方差项将与 $1/\\varepsilon^2$ 成正比，在 $\\varepsilon \\to 0$ 时发散。\n\n这种权衡源于这两种相互竞争的影响。为了最小化通常由均方误差 (MSE) $\\text{MSE} = \\text{Bias}^2 + \\text{Variance}$ 衡量的总误差，我们必须在偏差和方差之间取得平衡。\n$$\n\\text{MSE}[\\widehat{\\nu}(\\varepsilon)] \\approx \\left(\\frac{1}{2} C''(\\sigma)\\varepsilon\\right)^2 + \\frac{1}{N}\\mathrm{Var}\\left[\\frac{\\partial X(\\sigma)}{\\partial \\sigma}\\right]\n$$\n理论上，较小的 $\\varepsilon$ 总能更好地减小偏差。然而，在有限精度算术中，当 $\\varepsilon$ 变得极小时，分子 $X_i(\\sigma+\\varepsilon) - X_i(\\sigma)$ 会遭受灾难性抵消——即两个几乎相等的浮点数相减。这种有效数字的损失会引入大量的数值噪声，导致估计量的实际方差在 $\\varepsilon$ 非常小时反而增大。因此，存在一个最优的 $\\varepsilon$ 选择，它能在有限差分近似带来的系统性偏差和有限精度放大的数值方差之间取得平衡。\n\n### 3. 实现计划\n\n程序将按所述实现蒙特卡洛模拟。对于测试套件中的每个 $\\varepsilon$ 值：\n1. 将生成一组固定的 $N = 200000$ 个标准正态随机数 $\\{Z_i\\}_{i=1}^N$。这确保了公共随机数的使用。\n2. 将使用提供的对数正态公式和公共的 $Z_i$ 计算两组到期价格 $S_T(\\sigma)$ 和 $S_T(\\sigma+\\varepsilon)$。\n3. 计算相应的贴现收益 $X_i(\\sigma)$ 和 $X_i(\\sigma+\\varepsilon)$。\n4. 计算路径差分 $D_i(\\varepsilon)$。\n5. 蒙特卡洛估计值 $\\widehat{\\nu}(\\varepsilon)$ 计算为 $D_i(\\varepsilon)$ 的均值。\n6. 使用推导出的公式 $\\nu = S_0 \\sqrt{T} \\phi(d_1)$ 计算解析 Vega $\\nu$。这需要 `scipy.stats.norm.pdf`。\n7. 确定偏差 $\\widehat{\\nu}(\\varepsilon) - \\nu$。\n8. 估计量的方差 $\\widehat{\\mathrm{Var}}[\\widehat{\\nu}(\\varepsilon)]$ 计算为 $D_i(\\varepsilon)$ 的样本方差（带 Bessel 校正，$ddof=1$）除以 $N$。\n9. 将四个结果值存储为列表。然后将所有结果格式化为所需的输出字符串。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import norm\n\ndef solve():\n    \"\"\"\n    Computes the Monte Carlo finite difference estimator for Vega and compares it\n    to the analytical Black-Scholes Vega for a European call option.\n    \"\"\"\n    # Fixed parameters from the problem statement\n    S0 = 100.0\n    K = 100.0\n    r = 0.05\n    sigma = 0.2\n    T = 1.0\n    N = 200000\n\n    # Test cases for epsilon\n    epsilon_values = [0.1, 0.01, 0.0001, 0.000001]\n\n    # Use a fixed seed for the random number generator for reproducibility\n    rng = np.random.default_rng(seed=42)\n\n    # Calculate analytical Vega (this is constant for all test cases)\n    d1_analytical = (np.log(S0 / K) + (r + 0.5 * sigma**2) * T) / (sigma * np.sqrt(T))\n    vega_analytical = S0 * np.sqrt(T) * norm.pdf(d1_analytical)\n\n    all_results = []\n\n    # Generate common random numbers once for all epsilon values to ensure\n    # that the base random draws are consistent across simulations.\n    # The problem implies CRN per (sigma, sigma+eps) pair, which is what we do\n    # inside the loop. Generating Z inside ensures independence between epsilon cases.\n    for eps in epsilon_values:\n        # Generate N standard normal random variables (Common Random Numbers)\n        Z = rng.standard_normal(N)\n\n        # 1. Calculate terminal prices for sigma\n        drift_sigma = (r - 0.5 * sigma**2) * T\n        diffusion_sigma = sigma * np.sqrt(T) * Z\n        S_T_sigma = S0 * np.exp(drift_sigma + diffusion_sigma)\n\n        # 2. Calculate terminal prices for sigma + epsilon\n        sigma_eps = sigma + eps\n        drift_sigma_eps = (r - 0.5 * sigma_eps**2) * T\n        diffusion_sigma_eps = sigma_eps * np.sqrt(T) * Z\n        S_T_sigma_eps = S0 * np.exp(drift_sigma_eps + diffusion_sigma_eps)\n\n        # 3. Calculate discounted payoffs\n        discount_factor = np.exp(-r * T)\n        payoff_sigma = discount_factor * np.maximum(S_T_sigma - K, 0)\n        payoff_sigma_eps = discount_factor * np.maximum(S_T_sigma_eps - K, 0)\n\n        # 4. Calculate pathwise differences\n        D_eps = (payoff_sigma_eps - payoff_sigma) / eps\n\n        # 5. Compute the Monte Carlo Vega estimator\n        vega_hat = np.mean(D_eps)\n\n        # 6. Compute the bias\n        bias = vega_hat - vega_analytical\n        \n        # 7. Compute the variance of the estimator\n        # This is the sample variance of D_eps (with Bessel's correction)\n        # divided by N, as per the problem description.\n        var_of_estimator = np.var(D_eps, ddof=1) / N\n\n        current_result = [vega_hat, vega_analytical, bias, var_of_estimator]\n        all_results.append(current_result)\n\n    # Format the final output string as a comma-separated list of lists\n    # e.g., \"[[r1_c1, r2_c1, ...], [r1_c2, r2_c2, ...]]\"\n    # Using str() on a list automatically includes brackets and spaces.\n    # The required format is strict.\n    output_str = \"[\" + \",\".join([str(res) for res in all_results]) + \"]\"\n    \n    # Print the final output in the exact required format.\n    print(output_str)\n\nsolve()\n```", "id": "3069321"}]}