{"hands_on_practices": [{"introduction": "理解任何随机微分方程模型的第一步是求出其解析解。这个练习将引导你使用积分因子法，从基本原理出发求解Vasicek模型的随机微分方程。通过这个过程，你不仅能掌握求解线性随机微分方程的关键技巧，还能深刻理解为何Vasicek过程（即Ornstein-Uhlenbeck过程）服从高斯分布，其条件期望和方差是未来利率预测和衍生品定价的基石。[@problem_id:3074350]", "problem": "考虑一个短期利率模型，其中瞬时利率过程 $\\{r_{t}\\}_{t \\geq 0}$ 在一个固定的概率测度下，根据随机微分方程（SDE，全称为 \"stochastic differential equation\"）演化，其形式为：\n$$\n\\mathrm{d}r_{t} = \\kappa \\left(\\theta - r_{t}\\right)\\mathrm{d}t + \\sigma \\,\\mathrm{d}W_{t}, \\quad r_{0} \\in \\mathbb{R},\n$$\n其中 $\\kappa > 0$，$\\theta \\in \\mathbb{R}$ 和 $\\sigma > 0$ 是常数，$\\{W_{t}\\}_{t \\geq 0}$ 是一个标准一维布朗运动（维纳过程）。该设定是经典的 Vasicek 短期利率模型，其解已知为一个 Ornstein-Uhlenbeck (OU) 过程。对于固定的时间 $0 \\leq s  t$，从 Itô 积分的基本定义和原理出发，推导出显式的路径解 $r_t$，并根据您的显式解，计算条件期望 $\\mathbb{E}\\!\\left[r_{t}\\mid r_{s}\\right]$ 和条件方差 $\\operatorname{Var}\\!\\left(r_{t}\\mid r_{s}\\right)$，将其表示为以 $\\kappa$、$\\theta$、$\\sigma$、$s$、$t$ 和 $r_s$ 表示的闭式解析表达式。将您的最终答案表示为一对闭式表达式，不包含任何单位。无需进行四舍五入。", "solution": "问题陈述经核实具有科学依据、适定、客观且内部一致。它提出了一个在随机微积分应用于数学金融领域内的标准且非平凡的问题。因此，我们可以进行推导。\n\nVasicek 模型的随机微分方程（SDE）由下式给出：\n$$\n\\mathrm{d}r_{t} = \\kappa \\left(\\theta - r_{t}\\right)\\mathrm{d}t + \\sigma \\,\\mathrm{d}W_{t}\n$$\n其中 $\\kappa  0$、$\\theta \\in \\mathbb{R}$ 和 $\\sigma  0$ 为常数，$\\{W_{t}\\}_{t \\geq 0}$ 是一个标准维纳过程。这是一个线性 SDE，可以使用积分因子求解。首先，我们将 SDE 重新整理为：\n$$\n\\mathrm{d}r_{t} + \\kappa r_{t} \\mathrm{d}t = \\kappa \\theta \\mathrm{d}t + \\sigma \\mathrm{d}W_{t}\n$$\n左侧的积分因子是 $I(t) = \\exp(\\kappa t)$。我们定义一个新过程 $Y_{t} = r_{t} I(t) = r_{t} \\exp(\\kappa t)$。我们使用 Itô 乘积法则来求其微分。对于两个过程 $X_t$ 和 $Z_t$，$\\mathrm{d}(X_t Z_t) = X_t \\mathrm{d}Z_t + Z_t \\mathrm{d}X_t + \\mathrm{d}\\langle X, Z \\rangle_t$。这里，$X_t = \\exp(\\kappa t)$ 是一个确定性过程，所以它的微分是 $\\mathrm{d}X_t = \\kappa \\exp(\\kappa t) \\mathrm{d}t$，并且其二次变差为零，这使得二次协变差项 $\\mathrm{d}\\langle X, r \\rangle_t$ 等于零。\n因此，我们有：\n$$\n\\mathrm{d}Y_{t} = \\mathrm{d}\\left(r_{t} \\exp(\\kappa t)\\right) = r_{t} \\, \\mathrm{d}(\\exp(\\kappa t)) + \\exp(\\kappa t) \\, \\mathrm{d}r_{t}\n$$\n$$\n\\mathrm{d}Y_{t} = r_{t} (\\kappa \\exp(\\kappa t) \\mathrm{d}t) + \\exp(\\kappa t) \\, \\mathrm{d}r_{t}\n$$\n代入 $\\mathrm{d}r_{t}$ 的 SDE：\n$$\n\\mathrm{d}Y_{t} = \\kappa r_{t} \\exp(\\kappa t) \\mathrm{d}t + \\exp(\\kappa t) \\left( \\kappa \\theta \\mathrm{d}t - \\kappa r_{t} \\mathrm{d}t + \\sigma \\mathrm{d}W_{t} \\right)\n$$\n通过消项来化简表达式：\n$$\n\\mathrm{d}Y_{t} = \\kappa r_{t} \\exp(\\kappa t) \\mathrm{d}t + \\kappa \\theta \\exp(\\kappa t) \\mathrm{d}t - \\kappa r_{t} \\exp(\\kappa t) \\mathrm{d}t + \\sigma \\exp(\\kappa t) \\mathrm{d}W_{t}\n$$\n$$\n\\mathrm{d}Y_{t} = \\kappa \\theta \\exp(\\kappa t) \\mathrm{d}t + \\sigma \\exp(\\kappa t) \\mathrm{d}W_{t}\n$$\n现在，我们将此表达式从一个起始时间 $s$ 积分到一个未来时间 $t$，其中 $0 \\leq s  t$：\n$$\n\\int_{s}^{t} \\mathrm{d}Y_{u} = \\int_{s}^{t} \\kappa \\theta \\exp(\\kappa u) \\mathrm{d}u + \\int_{s}^{t} \\sigma \\exp(\\kappa u) \\mathrm{d}W_{u}\n$$\n$$\nY_{t} - Y_{s} = \\kappa \\theta \\left[ \\frac{1}{\\kappa} \\exp(\\kappa u) \\right]_{s}^{t} + \\sigma \\int_{s}^{t} \\exp(\\kappa u) \\mathrm{d}W_{u}\n$$\n代回 $Y_{u} = r_{u}\\exp(\\kappa u)$：\n$$\nr_{t}\\exp(\\kappa t) - r_{s}\\exp(\\kappa s) = \\theta \\left( \\exp(\\kappa t) - \\exp(\\kappa s) \\right) + \\sigma \\int_{s}^{t} \\exp(\\kappa u) \\mathrm{d}W_{u}\n$$\n为了求得 $r_t$ 的显式解，我们通过将整个方程乘以 $\\exp(-\\kappa t)$ 来分离出 $r_t$：\n$$\nr_{t} = r_{s} \\exp(-\\kappa(t-s)) + \\theta \\left( 1 - \\exp(-\\kappa(t-s)) \\right) + \\sigma \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u}\n$$\n这是在给定时间 $s$ 的值 $r_s$ 的条件下，$r_t$ 的显式路径解。\n\n接下来，我们计算条件期望 $\\mathbb{E}[r_{t}\\mid r_{s}]$。由于 $r_s$ 在时间 $s$ 是已知的，它是 $\\mathcal{F}_{s}$-可测的，其中 $\\{\\mathcal{F}_{t}\\}_{t \\geq 0}$ 是由维纳过程生成的滤子。我们以 sigma-代数 $\\mathcal{F}_{s}$ 为条件。\n$$\n\\mathbb{E}[r_{t}\\mid \\mathcal{F}_{s}] = \\mathbb{E}\\left[ r_{s} \\exp(-\\kappa(t-s)) + \\theta \\left( 1 - \\exp(-\\kappa(t-s)) \\right) + \\sigma \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u} \\mid \\mathcal{F}_{s} \\right]\n$$\n根据条件期望的线性性：\n$$\n\\mathbb{E}[r_{t}\\mid \\mathcal{F}_{s}] = \\mathbb{E}[r_{s} \\exp(-\\kappa(t-s)) \\mid \\mathcal{F}_{s}] + \\mathbb{E}[\\theta (1 - \\exp(-\\kappa(t-s))) \\mid \\mathcal{F}_{s}] + \\mathbb{E}\\left[\\sigma \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u} \\mid \\mathcal{F}_{s}\\right]\n$$\n前两项是 $r_s$ 和常数的函数，它们是 $\\mathcal{F}_{s}$-可测的，因此在条件期望下它们是固定的。第三项涉及一个在区间 $[s, t]$ 上的带有确定性被积函数的 Itô 积分。Itô 积分的一个基本性质是其条件期望为零：$\\mathbb{E}\\left[\\int_{s}^{t} f(u) \\mathrm{d}W_u \\mid \\mathcal{F}_{s}\\right] = 0$。\n因此，条件期望为：\n$$\n\\mathbb{E}[r_{t}\\mid r_{s}] = r_{s} \\exp(-\\kappa(t-s)) + \\theta \\left( 1 - \\exp(-\\kappa(t-s)) \\right)\n$$\n最后，我们计算条件方差 $\\operatorname{Var}(r_{t}\\mid r_{s}) = \\mathbb{E}\\left[ (r_{t} - \\mathbb{E}[r_{t}\\mid r_{s}])^2 \\mid r_{s} \\right]$。根据我们之前的结果：\n$$\nr_{t} - \\mathbb{E}[r_{t}\\mid r_{s}] = \\sigma \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u}\n$$\n所以，条件方差为：\n$$\n\\operatorname{Var}(r_{t}\\mid r_{s}) = \\mathbb{E}\\left[ \\left( \\sigma \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u} \\right)^2 \\mid \\mathcal{F}_{s} \\right]\n$$\n由于对于 $u  s$，维纳过程的增量 $W_u - W_s$ 独立于 $\\mathcal{F}_{s}$，因此条件期望等于无条件期望。\n$$\n\\operatorname{Var}(r_{t}\\mid r_{s}) = \\sigma^2 \\mathbb{E}\\left[ \\left( \\int_{s}^{t} \\exp(-\\kappa(t-u)) \\mathrm{d}W_{u} \\right)^2 \\right]\n$$\n使用 Itô 等距性质，即 $\\mathbb{E}\\left[ \\left(\\int_{s}^{t} f(u) \\mathrm{d}W_u\\right)^2 \\right] = \\int_{s}^{t} \\mathbb{E}[f(u)^2] \\mathrm{d}u$，并注意到我们的被积函数 $f(u) = \\exp(-\\kappa(t-u))$ 是确定性的：\n$$\n\\operatorname{Var}(r_{t}\\mid r_{s}) = \\sigma^2 \\int_{s}^{t} \\left( \\exp(-\\kappa(t-u)) \\right)^2 \\mathrm{d}u = \\sigma^2 \\int_{s}^{t} \\exp(-2\\kappa(t-u)) \\mathrm{d}u\n$$\n我们计算该积分：\n$$\n\\int_{s}^{t} \\exp(-2\\kappa(t-u)) \\mathrm{d}u = \\left[ \\frac{1}{2\\kappa} \\exp(-2\\kappa(t-u)) \\right]_{u=s}^{u=t} = \\frac{1}{2\\kappa} \\left( \\exp(0) - \\exp(-2\\kappa(t-s)) \\right) = \\frac{1 - \\exp(-2\\kappa(t-s))}{2\\kappa}\n$$\n因此，条件方差为：\n$$\n\\operatorname{Var}(r_{t}\\mid r_{s}) = \\frac{\\sigma^2}{2\\kappa} \\left(1 - \\exp(-2\\kappa(t-s))\\right)\n$$\n这就完成了对条件期望和方差的推导。", "answer": "$$\n\\boxed{\\begin{pmatrix} r_{s} \\exp(-\\kappa (t - s)) + \\theta \\left(1 - \\exp(-\\kappa (t - s))\\right)  \\frac{\\sigma^{2}}{2 \\kappa} \\left(1 - \\exp(-2 \\kappa (t - s))\\right) \\end{pmatrix}}\n$$", "id": "3074350"}, {"introduction": "在掌握了利率过程的瞬时动态之后，分析其长期行为同样至关重要。此练习要求你运用Kolmogorov前向方程（或称Fokker-Planck方程）来推导Vasicek模型的稳态分布，从而揭示利率在长期内将围绕哪个中心值（均值）波动，以及波动的幅度（方差）。这不仅加深了你对“均值回归”概念的理解，也展示了随机过程理论在金融模型长期稳定性分析中的强大作用。[@problem_id:3074338]", "problem": "考虑时齐的 Vasicek 短期利率模型，其中短期利率 $r_t$ 满足线性随机微分方程 (SDE)\n$$\n\\mathrm{d} r_t = \\kappa \\left( \\theta - r_t \\right) \\mathrm{d} t + \\sigma \\,\\mathrm{d} W_t,\n$$\n其中常数 $\\kappa  0$，$\\theta \\in \\mathbb{R}$，$\\sigma  0$，且 $\\{W_t\\}_{t \\ge 0}$ 为标准布朗运动（也称为维纳过程）。假设该模型定义在一个支持唯一强解的带流概率空间上，并且对于相关的柯尔莫哥洛夫前向方程，自然边界条件在 $\\pm \\infty$ 处成立。仅使用 Itô 积分和马尔可夫扩散理论的既定原理，确定 $\\{r_t\\}_{t \\ge 0}$ 的平稳分布，明确给出平稳概率密度函数 $\\pi(r)$，并计算其均值和方差。将您的最终答案表示为单个解析表达式，按顺序依次列出平稳密度、其均值和方差。不要使用或引用任何快捷公式；从适用于随机微分方程和时齐扩散的第一性原理推导您的结果。不需要进行数值舍入。", "solution": "该问题要求推导 Vasicek 短期利率模型的平稳概率密度函数 $\\pi(r)$、其均值和方差。该模型由以下随机微分方程 (SDE) 描述：\n$$\n\\mathrm{d} r_t = \\kappa \\left( \\theta - r_t \\right) \\mathrm{d} t + \\sigma \\,\\mathrm{d} W_t\n$$\n其中 $\\kappa  0$，$\\theta \\in \\mathbb{R}$ 和 $\\sigma  0$ 是常数，$\\{W_t\\}_{t \\ge 0}$ 是标准维纳过程。该 SDE 描述了一个时齐的 Itô 扩散过程，具体来说是一个 Ornstein-Uhlenbeck 过程。条件 $\\kappa  0$ 确保了过程的均值回归性，这是存在平稳分布的必要条件。\n\n推导将从第一性原理出发，通过求解柯尔莫哥洛夫前向方程（也称为福克-普朗克方程）的平稳形式来进行。\n\n对于一个一般的时齐 SDE $\\mathrm{d}X_t = \\mu(X_t)\\mathrm{d}t + b(X_t)\\mathrm{d}W_t$，其概率密度函数 $p(x,t)$ 的柯尔莫哥洛夫前向方程为：\n$$\n\\frac{\\partial p(x, t)}{\\partial t} = -\\frac{\\partial}{\\partial x} [\\mu(x) p(x, t)] + \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2} [b(x)^2 p(x, t)]\n$$\n对于 Vasicek 模型，过程是 $r_t$，漂移系数是 $\\mu(r) = \\kappa(\\theta - r)$，扩散系数是 $b(r) = \\sigma$。将这些代入通用方程得到：\n$$\n\\frac{\\partial p(r, t)}{\\partial t} = -\\frac{\\partial}{\\partial r} [\\kappa(\\theta - r) p(r, t)] + \\frac{1}{2} \\frac{\\partial^2}{\\partial r^2} [\\sigma^2 p(r, t)]\n$$\n平稳分布由一个不依赖于时间的概率密度函数 $\\pi(r)$ 来刻画，它是上述方程在 $\\frac{\\partial p(r, t)}{\\partial t} = 0$ 时的解。因此，$\\pi(r)$ 必须满足以下常微分方程 (ODE)：\n$$\n0 = -\\frac{\\mathrm{d}}{\\mathrm{d} r} [\\kappa(\\theta - r) \\pi(r)] + \\frac{1}{2} \\frac{\\mathrm{d}}{\\mathrm{d} r} \\left( \\frac{\\mathrm{d}}{\\mathrm{d} r} [\\sigma^2 \\pi(r)] \\right)\n$$\n由于 $\\sigma$ 是一个常数，上式简化为：\n$$\n0 = \\frac{\\mathrm{d}}{\\mathrm{d} r} \\left( -\\kappa(\\theta - r) \\pi(r) + \\frac{\\sigma^2}{2} \\frac{\\mathrm{d}\\pi(r)}{\\mathrm{d}r} \\right)\n$$\n对该方程关于 $r$ 积分一次得到：\n$$\nC = -\\kappa(\\theta - r) \\pi(r) + \\frac{\\sigma^2}{2} \\frac{\\mathrm{d}\\pi(r)}{\\mathrm{d}r}\n$$\n右侧的表达式表示概率流的负值。问题指明了在 $\\pm \\infty$ 处的自然边界条件，这意味着概率密度及其导数在无穷远处消失（即，当 $r \\to \\pm\\infty$ 时，$\\pi(r) \\to 0$ 且 $\\frac{\\mathrm{d}\\pi(r)}{\\mathrm{d}r} \\to 0$）。这使得积分常数 $C$ 必须为零。设 $C=0$，我们得到一个关于 $\\pi(r)$ 的一阶可分离常微分方程：\n$$\n\\kappa(\\theta - r) \\pi(r) = \\frac{\\sigma^2}{2} \\frac{\\mathrm{d}\\pi(r)}{\\mathrm{d}r}\n$$\n我们可以分离变量来求解 $\\pi(r)$：\n$$\n\\frac{\\mathrm{d}\\pi(r)}{\\pi(r)} = \\frac{2\\kappa}{\\sigma^2}(\\theta-r)\\mathrm{d}r\n$$\n对两边积分：\n$$\n\\int \\frac{1}{\\pi(r)}\\mathrm{d}\\pi(r) = \\int \\frac{2\\kappa}{\\sigma^2}(\\theta-r)\\mathrm{d}r\n$$\n$$\n\\ln(\\pi(r)) = \\frac{2\\kappa}{\\sigma^2} \\left( \\theta r - \\frac{r^2}{2} \\right) + K\n$$\n其中 $K$ 是积分常数。我们可以通过配方法重写指数中的表达式：\n$$\n\\ln(\\pi(r)) = -\\frac{\\kappa}{\\sigma^2} (r^2 - 2\\theta r) + K = -\\frac{\\kappa}{\\sigma^2} ((r - \\theta)^2 - \\theta^2) + K = -\\frac{\\kappa}{\\sigma^2} (r - \\theta)^2 + \\frac{\\kappa\\theta^2}{\\sigma^2} + K\n$$\n对两边取指数，得到未归一化的密度函数：\n$$\n\\pi(r) = \\exp\\left(-\\frac{\\kappa}{\\sigma^2} (r - \\theta)^2 + \\frac{\\kappa\\theta^2}{\\sigma^2} + K\\right) = C \\exp\\left(-\\frac{\\kappa}{\\sigma^2} (r - \\theta)^2\\right)\n$$\n其中 $C$ 是一个归一化常数。这个函数形式是高斯（正态）分布的形式。正态分布 $\\mathcal{N}(\\mu_{dist}, \\sigma_{dist}^2)$ 的标准概率密度函数是：\n$$\nf(x) = \\frac{1}{\\sqrt{2\\pi\\sigma_{dist}^2}} \\exp\\left(-\\frac{(x - \\mu_{dist})^2}{2\\sigma_{dist}^2}\\right)\n$$\n通过将我们推导出的 $\\pi(r)$ 的指数与标准形式进行比较，我们可以确定平稳分布的均值和方差。\n通过观察，可以立即确定均值为 $\\mu_{dist} = \\theta$。\n为了求出方差，我们令指数中二次项的系数相等：\n$$\n\\frac{1}{2\\sigma_{dist}^2} = \\frac{\\kappa}{\\sigma^2} \\implies \\sigma_{dist}^2 = \\frac{\\sigma^2}{2\\kappa}\n$$\n因此，Vasicek 过程的平稳分布是一个均值为 $\\theta$、方差为 $\\frac{\\sigma^2}{2\\kappa}$ 的正态分布：\n$$\nr_t \\xrightarrow{d} \\mathcal{N}\\left(\\theta, \\frac{\\sigma^2}{2\\kappa}\\right) \\quad \\text{as } t \\to \\infty\n$$\n平稳概率密度函数 $\\pi(r)$ 是此正态分布的概率密度函数 (PDF)。通过将推导出的均值和方差代入标准正态 PDF 公式，我们得到归一化的密度：\n$$\n\\pi(r) = \\frac{1}{\\sqrt{2\\pi \\left(\\frac{\\sigma^2}{2\\kappa}\\right)}} \\exp\\left(-\\frac{(r - \\theta)^2}{2\\left(\\frac{\\sigma^2}{2\\kappa}\\right)}\\right) = \\frac{1}{\\sqrt{\\frac{\\pi\\sigma^2}{\\kappa}}} \\exp\\left(-\\frac{\\kappa(r - \\theta)^2}{\\sigma^2}\\right) = \\sqrt{\\frac{\\kappa}{\\pi\\sigma^2}} \\exp\\left(-\\frac{\\kappa(r - \\theta)^2}{\\sigma^2}\\right)\n$$\n问题要求给出平稳概率密度函数 $\\pi(r)$、其均值和方差。根据从柯尔莫哥洛夫前向方程的严格推导，这些是：\n1.  平稳 PDF：$\\pi(r) = \\sqrt{\\frac{\\kappa}{\\pi\\sigma^2}} \\exp\\left(-\\frac{\\kappa(r - \\theta)^2}{\\sigma^2}\\right)$\n2.  平稳分布的均值：$\\mathbb{E}[r_\\infty] = \\theta$\n3.  平稳分布的方差：$\\mathrm{Var}(r_\\infty) = \\frac{\\sigma^2}{2\\kappa}$\n现在将这些结果汇编成所需的最终答案格式。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\n\\sqrt{\\frac{\\kappa}{\\pi\\sigma^2}} \\exp\\left(-\\frac{\\kappa(r - \\theta)^2}{\\sigma^2}\\right)  \\theta  \\frac{\\sigma^2}{2\\kappa}\n\\end{pmatrix}\n}\n$$", "id": "3074338"}, {"introduction": "理论分析与数值计算是金融建模的左膀右臂。这个高级练习将挑战你超越常规的蒙特卡洛模拟，通过利用Vasicek模型及其离散格式的线性高斯特性，来确定性地计算零息债券定价中的数值误差（离散化偏差）。这个过程不仅能让你深入理解数值格式的弱收敛阶，还能让你学会如何量化并控制金融计算中的误差，这是成为一名合格的量化分析师所需具备的核心技能。[@problem_id:3074299]", "problem": "考虑一个风险中性短率模型，其中瞬时短率 $r_t$ 服从 Vasicek 随机微分方程 (SDE)：\n$$\ndr_t = \\kappa \\left(\\theta - r_t\\right)\\,dt + \\sigma\\, dW_t,\n$$\n其中 $\\kappa  0$ 是均值回归速度，$\\theta$ 是长期水平，$\\sigma \\ge 0$ 是波动率，而 $W_t$ 是一个标准布朗运动。根据定义，到期时间为 $T$ 的零息债券在时间 $0$ 的价格为\n$$\nP(0,T) \\equiv \\mathbb{E}\\left[\\exp\\left(-\\int_0^T r_s\\,ds\\right)\\right],\n$$\n期望是在风险中性测度下计算的。\n\n一种常见的数值方法是在一个包含 $N$ 个宽度为 $\\Delta \\equiv T/N$ 的等距步长的网格上，用左黎曼和来近似该积分。在网格点 $t_n = n\\Delta$ 上，$r_t$ 的欧拉-丸山离散化为\n$$\nr_{n+1} = r_n + \\kappa\\left(\\theta - r_n\\right)\\Delta + \\sigma \\sqrt{\\Delta}\\, Z_n,\\quad n=0,1,\\dots,N-1,\n$$\n其中 $r_0$ 是给定的，$\\{Z_n\\}$ 是独立的标准正态随机变量。定义时间积分的离散时间近似为\n$$\nS_\\Delta \\equiv \\Delta \\sum_{n=0}^{N-1} r_n,\n$$\n以及相应的基于欧拉法的债券价格近似为\n$$\nP_\\Delta(0,T) \\equiv \\mathbb{E}\\left[\\exp\\left(-S_\\Delta\\right)\\right].\n$$\n步长为 $\\Delta$ 时的离散化偏差是其差值\n$$\n\\mathrm{bias}_\\Delta \\equiv P_\\Delta(0,T) - P(0,T).\n$$\n\n你的任务是编写一个确定性程序（无蒙特卡洛抽样），该程序：\n- 对于给定的 $\\Delta$，计算绝对离散化偏差 $\\left|\\mathrm{bias}_\\Delta\\right|$，\n- 仅使用逻辑上合理的、模型和高斯过程的基本属性，从两个步长 $\\Delta$ 和 $\\Delta/2$ 估计弱收敛阶 $p$ 和领头常数 $C$，以及\n- 提出一个形式为 $h = T/N$（其中 $N \\ge 1$ 为整数）的最大时间步长 $h$，使得在弱误差的标准幂律假设下，即 $\\left|P_h(0,T) - P(0,T)\\right| \\approx C\\, h^p$，步长为 $h$ 时的预测绝对偏差保证小于或等于给定的绝对容差 $\\varepsilon$。\n\n科学和算法要求：\n- 从适用于线性高斯系统的第一性原理出发。你的程序必须是完全确定性的：不要使用任何随机抽样。\n- 你可以假设 Vasicek 模型的 $P(0,T)$ 有闭式解，但问题陈述未提供任何此类公式。你的推导应基于核心定义以及关于仿射期限结构和正态分布的经过检验的事实。\n- 确保 $\\Delta$ 能整除 $T$，即 $N = T/\\Delta$ 是一个整数。使用 $\\Delta$ 和 $\\Delta/2$（它也能整除 $T$）来估计观测到的收敛阶 $p$ 和一个保守的领头常数 $C$。然后选择\n$$\nh_{\\max} \\equiv \\left(\\frac{\\varepsilon}{C}\\right)^{1/p},\n$$\n并返回形式为 $T/N$ 的不超过 $h_{\\max}$ 的最大网格步长，即 $N = \\lceil T/h_{\\max} \\rceil$ 且 $h = T/N$。\n- 如果估计得到的 $C=0$（在机器精度内），你可以返回 $h = T$。\n\n测试套件：\n对于下面的每个元组 $(\\kappa,\\theta,\\sigma,r_0,T,\\Delta,\\varepsilon)$，计算并返回两个数：在 $\\Delta$ 处的绝对离散化偏差，即 $\\left|P_\\Delta(0,T) - P(0,T)\\right|$，以及上述推荐的步长 $h$。\n\n使用以下参数集，每个元组的顺序为 $(\\kappa,\\theta,\\sigma,r_0,T,\\Delta,\\varepsilon)$：\n- 测试 1：$(0.5,\\,0.04,\\,0.01,\\,0.03,\\,5.0,\\,0.25,\\,10^{-5})$\n- 测试 2：$(1.2,\\,0.03,\\,0.02,\\,0.02,\\,1.0,\\,0.2,\\,5\\times 10^{-5})$\n- 测试 3：$(0.1,\\,0.05,\\,0.015,\\,0.08,\\,10.0,\\,1.0,\\,10^{-4})$\n- 测试 4：$(0.7,\\,0.05,\\,0.03,\\,0.05,\\,0.25,\\,0.25,\\,10^{-5})$\n\n最终输出格式：\n你的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。每个测试用例的输出必须是一个双元素列表，顺序为 $[\\left|\\mathrm{bias}_\\Delta\\right|, h]$。例如，一个包含两个假设案例的有效输出行是\n$[[0.00123,0.05],[0.00001,0.1]]$。", "solution": "该问题要求对 Vasicek 债券价格的欧拉-丸山近似进行离散化偏差的确定性计算，然后利用此结果估计收敛参数，并为给定的误差容差确定一个合适的时间步长。此任务需在不使用任何蒙特卡洛模拟的情况下完成。该方法必须基于 Vasicek 模型的解析性质，该模型是一个线性高斯过程，这使得涉及其状态的期望可以精确计算。\n\n分析过程主要分为四个步骤：\n1.  推导精确零息债券价格 $P(0,T)$ 的闭式表达式。\n2.  推导在欧拉-丸山近似下债券价格 $P_\\Delta(0,T)$ 的闭式表达式。\n3.  使用推导出的表达式计算两个不同步长 $\\Delta$ 和 $\\Delta/2$ 的离散化偏差，并估计弱收敛阶 $p$ 和常数 $C$。\n4.  使用估计的收敛参数推荐一个满足误差容差 $\\varepsilon$ 的最大步长 $h$。\n\n### 步骤 1：解析债券价格 $P(0,T)$\n\nVasicek 短率模型是一个仿射期限结构模型。这意味着到期日为 $T$ 的零息债券在时间 $t$ 的价格 $P(t,T)$ 是短率 $r_t$ 的一个指数-仿射函数：\n$$\nP(t,T) = \\exp\\left(A(t,T) - B(t,T)r_t\\right)\n$$\n函数 $A(t,T)$ 和 $B(t,T)$ 是确定性的，可以通过求解一组由债券预期回报等于短率的无套利条件推导出的常微分方程 (ODEs) 来找到。这些 ODEs 在边界条件 $A(T,T)=0$ 和 $B(T,T)=0$ 下的解是众所周知的：\n$$\nB(t,T) = \\frac{1}{\\kappa}\\left(1 - e^{-\\kappa(T-t)}\\right)\n$$\n$$\nA(t,T) = \\left(\\theta - \\frac{\\sigma^2}{2\\kappa^2}\\right)\\left(B(t,T) - (T-t)\\right) - \\frac{\\sigma^2}{4\\kappa}B(t,T)^2\n$$\n对于时间 $0$ 的价格，我们令 $t=0$：\n$$\nP(0,T) = \\exp\\left(A(0,T) - B(0,T)r_0\\right)\n$$\n其中\n$$\nB(0,T) = \\frac{1}{\\kappa}\\left(1 - e^{-\\kappa T}\\right)\n$$\n$$\nA(0,T) = \\left(\\theta - \\frac{\\sigma^2}{2\\kappa^2}\\right)\\left(B(0,T) - T\\right) - \\frac{\\sigma^2}{4\\kappa}B(0,T)^2\n$$\n这些公式允许直接、确定性地计算真实债券价格。\n\n### 步骤 2：近似债券价格 $P_\\Delta(0,T)$\n\n近似债券价格定义为 $P_\\Delta(0,T) \\equiv \\mathbb{E}\\left[\\exp\\left(-S_\\Delta\\right)\\right]$，其中 $S_\\Delta = \\Delta \\sum_{n=0}^{N-1} r_n$ 且 $r_n$ 服从欧拉-丸山离散化：\n$$\nr_{n+1} = (1-\\kappa\\Delta)r_n + \\kappa\\theta\\Delta + \\sigma\\sqrt{\\Delta}Z_n, \\quad Z_n \\sim \\mathcal{N}(0,1)\n$$\n由于这是一个由高斯噪声驱动的线性递推关系，利率向量 $[r_0, r_1, \\dots, r_{N-1}]$ 是一个多元高斯过程。因此，它们的和 $S_\\Delta$ 是一个高斯随机变量。期望 $\\mathbb{E}\\left[\\exp(-S_\\Delta)\\right]$ 可以使用正态分布的矩生成函数来计算。如果 $S_\\Delta \\sim \\mathcal{N}(\\mu_{S_\\Delta}, \\sigma^2_{S_\\Delta})$，那么：\n$$\nP_\\Delta(0,T) = \\exp\\left(-\\mu_{S_\\Delta} + \\frac{1}{2}\\sigma^2_{S_\\Delta}\\right)\n$$\n我们的任务简化为求 $S_\\Delta$ 的均值 $\\mu_{S_\\Delta}$ 和方差 $\\sigma^2_{S_\\Delta}$。\n\n**$S_\\Delta$ 的均值**：\n期望 $\\mu_n = \\mathbb{E}[r_n]$ 服从递推关系 $\\mu_{n+1} = (1-\\kappa\\Delta)\\mu_n + \\kappa\\theta\\Delta$，其中 $\\mu_0=r_0$。解为 $\\mu_n = (r_0 - \\theta)(1-\\kappa\\Delta)^n + \\theta$。\n$S_\\Delta$ 的均值为 $\\mu_{S_\\Delta} = \\mathbb{E}\\left[\\Delta \\sum_{n=0}^{N-1} r_n\\right] = \\Delta \\sum_{n=0}^{N-1} \\mu_n$。对几何级数求和得到：\n$$\n\\mu_{S_\\Delta} = (r_0 - \\theta)\\frac{1-(1-\\kappa\\Delta)^N}{\\kappa} + T\\theta \\quad (\\text{因为 } N\\Delta=T)\n$$\n\n**$S_\\Delta$ 的方差**：\n令 $r'_n = r_n - \\mu_n$。$S_\\Delta$ 的方差为 $\\sigma^2_{S_\\Delta} = \\mathrm{Var}\\left(\\Delta \\sum_{n=0}^{N-1} r_n\\right) = \\Delta^2 \\mathrm{Var}\\left(\\sum_{n=0}^{N-1} r'_n\\right)$。\n中心化过程服从 $r'_{n+1} = (1-\\kappa\\Delta)r'_n + \\sigma\\sqrt{\\Delta}Z_n$，其中 $r'_0=0$。\n通过展开递推关系，我们可以将 $\\sum r'_n$ 表示为独立同分布的标准正态变量 $\\{Z_k\\}_{k=0}^{N-2}$ 的线性组合。\n$$\n\\sum_{n=0}^{N-1} r'_n = \\sum_{n=1}^{N-1} \\sum_{k=0}^{n-1} \\sigma\\sqrt{\\Delta}(1-\\kappa\\Delta)^{n-1-k} Z_k\n$$\n通过改变求和顺序，这变成了 $\\sum_{k=0}^{N-2} c_k Z_k$，其中 $c_k$ 为某些系数。方差为 $\\sum c_k^2$。经过代数简化后，$S_\\Delta$ 的方差为：\n$$\n\\sigma^2_{S_\\Delta} = \\frac{\\Delta\\sigma^2}{\\kappa^2}\\left( (N-1) - 2S_1 + S_2 \\right)\n$$\n其中 $a = 1-\\kappa\\Delta$ 且 $S_1, S_2$ 是几何级数的和：\n$$\nS_1 = \\sum_{j=1}^{N-1} a^j = a \\frac{1-a^{N-1}}{1-a}\n$$\n$$\nS_2 = \\sum_{j=1}^{N-1} (a^2)^j = a^2 \\frac{1-a^{2(N-1)}}{1-a^2}\n$$\n有了 $\\mu_{S_\\Delta}$ 和 $\\sigma^2_{S_\\Delta}$ 的这些闭式表达式，$P_\\Delta(0,T)$ 就可以确定性地计算出来。\n\n### 步骤 3：估计收敛参数\n\n弱误差假定服从幂律：$|\\mathrm{bias}_h| = |P_h(0,T) - P(0,T)| \\approx C h^p$。\n给定两个步长 $\\Delta$ 和 $\\Delta/2$，我们可以写出：\n$$\n\\mathrm{bias}_{\\Delta} \\approx C \\Delta^p\n$$\n$$\n\\mathrm{bias}_{\\Delta/2} \\approx C (\\Delta/2)^p\n$$\n取比值可以得到收敛阶 $p$ 的估计值：\n$$\n\\frac{\\mathrm{bias}_{\\Delta}}{\\mathrm{bias}_{\\Delta/2}} \\approx 2^p \\implies p \\approx \\log_2\\left(\\frac{\\mathrm{bias}_{\\Delta}}{\\mathrm{bias}_{\\Delta/2}}\\right)\n$$\n为保证鲁棒性，特别是在误差项振荡的情况下，使用绝对值更安全：$p \\approx \\log_2\\left(|\\mathrm{bias}_{\\Delta}| / |\\mathrm{bias}_{\\Delta/2}|\\right)$。对于应用于此 SDE 的欧拉-丸山格式，我们预期 $p \\approx 1$。\n一旦估计出 $p$，常数 $C$ 可以使用较小步长得到的更精确结果来找到：\n$$\nC \\approx \\frac{|\\mathrm{bias}_{\\Delta/2}|}{(\\Delta/2)^p}\n$$\n\n### 步骤 4：推荐步长\n\n我们寻求形式为 $h=T/N$（$N$ 为整数且 $N \\ge 1$）的最大步长 $h$，使得预测的绝对偏差最多为 $\\varepsilon$。\n$$\nC h^p \\le \\varepsilon \\implies h \\le \\left(\\frac{\\varepsilon}{C}\\right)^{1/p}\n$$\n令 $h_{\\max} = (\\varepsilon/C)^{1/p}$。我们需要找到不超过 $h_{\\max}$ 的最大 $h = T/N$。\n$$\n\\frac{T}{N} \\le h_{\\max} \\implies N \\ge \\frac{T}{h_{\\max}}\n$$\n由于 $N$ 必须是整数，满足此条件的最小整数 $N$ 是 $N = \\lceil T/h_{\\max} \\rceil$。所需的步长便是 $h = T/N$。如果估计的常数 $C$ 为零（或在数值上无法区分），则偏差对于任何步长都可以忽略不计，我们可以取 $h=T$（即 $N=1$）。\n\n实现将利用数值稳定函数，如 `numpy.expm1` 和 `numpy.log1p`，来处理当指数或对数的参数接近 $0$ 或 $1$ 时可能出现的抵消误差。这对于像 $1-e^{-x}$ 或 $1-a^k$ 这样的表达式尤其重要，当 $x$ 或 $k\\ln(a)$ 很小时。", "answer": "```python\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Solves the problem for the given test cases.\n    For each test case, it computes the absolute discretization bias and a recommended step size.\n    \"\"\"\n    \n    test_cases = [\n        (0.5, 0.04, 0.01, 0.03, 5.0, 0.25, 1e-5),\n        (1.2, 0.03, 0.02, 0.02, 1.0, 0.2, 5e-5),\n        (0.1, 0.05, 0.015, 0.08, 10.0, 1.0, 1e-4),\n        (0.7, 0.05, 0.03, 0.05, 0.25, 0.25, 1e-5),\n    ]\n\n    results = []\n    for case in test_cases:\n        kappa, theta, sigma, r0, T, delta, eps = case\n        \n        # --- Analytical Bond Price P(0,T) ---\n        # Using numerically stable expm1(x) = exp(x) - 1\n        B_0T = -np.expm1(-kappa * T) / kappa\n        A_0T = (theta - sigma**2 / (2 * kappa**2)) * (B_0T - T) - \\\n               (sigma**2 / (4 * kappa)) * B_0T**2\n        P_exact = np.exp(A_0T - B_0T * r0)\n        \n        # --- Helper function for Approximate Bond Price P_h(0,T) ---\n        def get_approx_price(h):\n            \"\"\"\n            Calculates the approximate bond price for a given step size h\n            using the derived deterministic formula.\n            \"\"\"\n            N = int(round(T / h))\n            if N == 0: return 1.0 # T=0 case\n            \n            # Use numerically stable log1p(x) = log(1+x) and expm1(x)\n            a = 1.0 - kappa * h\n            log_a = np.log1p(-kappa * h)\n            \n            # Mean of S_h\n            # The term (1-a^N) / kappa can be simplified\n            term = -np.expm1(N * log_a) / kappa\n            mu_Sh = (r0 - theta) * term + T * theta\n\n            # Variance of S_h\n            if N == 1:\n                # Sum from j=1 to 0 is empty. S1=0, S2=0.\n                sigma2_Sh = 0.0\n            else:\n                one_minus_a_inv = 1.0 / (kappa * h)\n                \n                sum1_term = -np.expm1((N - 1) * log_a)\n                S1 = a * sum1_term * one_minus_a_inv\n\n                one_minus_a2_inv = 1.0 / (h * (2 * kappa - kappa**2 * h))\n                sum2_term = -np.expm1(2 * (N-1) * log_a)\n                S2 = a**2 * sum2_term * one_minus_a2_inv\n                \n                sigma2_Sh = (h * sigma**2 / kappa**2) * ((N-1) - 2 * S1 + S2)\n\n            return np.exp(-mu_Sh + 0.5 * sigma2_Sh)\n\n        # --- Calculate biases for delta and delta/2 ---\n        P_delta = get_approx_price(delta)\n        P_delta_half = get_approx_price(delta / 2.0)\n\n        bias_delta = P_delta - P_exact\n        bias_delta_half = P_delta_half - P_exact\n\n        abs_bias_delta = np.abs(bias_delta)\n        \n        # --- Estimate convergence parameters p and C ---\n        if np.abs(bias_delta_half)  1e-16 or np.abs(bias_delta)  1e-16:\n             # If bias is already tiny, C is effectively zero.\n            C = 0.0\n            p = 1.0 # Assume default order\n        else:\n            # Use absolute values for robustness in case of sign change\n            ratio = np.abs(bias_delta) / np.abs(bias_delta_half)\n            # If ratio is = 1, the convergence assumption is failing.\n            # Fallback to p=1, the theoretical order.\n            if ratio = 1.0:\n                p = 1.0\n            else:\n                p = np.log2(ratio)\n            \n            C = np.abs(bias_delta_half) / ((delta / 2.0)**p)\n            \n        # --- Calculate recommended step size h ---\n        if C  1e-15:\n            # If C is negligible, error is always below tolerance.\n            # Largest allowed step size is T (N=1).\n            h = T\n        else:\n            h_max = (eps / C)**(1.0 / p)\n            if h_max  T:\n                # If required h is larger than T, N would be  1. Smallest N is 1.\n                N_new = 1\n            else:\n                N_new = np.ceil(T / h_max)\n            \n            h = T / N_new\n\n        results.append([abs_bias_delta, h])\n\n    # Final print statement in the exact required format.\n    # str().replace(\" \", \"\") produces the required compact format.\n    print(str(results).replace(\" \", \"\"))\n\nsolve()\n```", "id": "3074299"}]}