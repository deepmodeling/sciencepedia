{"hands_on_practices": [{"introduction": "这个基础练习将引导你从第一性原理出发，求解一个最简洁的非平凡倒向随机微分方程。通过这个过程，你将掌握如何运用伊藤积分的鞅性质和条件期望这两个核心工具来“解开”方程的倒向结构。这次实践旨在巩固你对解 $(Y_t, Z_t)$ 的核心直觉，为更复杂的分析打下坚实的基础。[@problem_id:3040130]", "problem": "设 $(\\Omega,\\mathcal{F},(\\mathcal{F}_t)_{t\\in[0,T]},\\mathbb{P})$ 是一个满足通常条件的带域流概率空间，并设 $(W_t)_{t\\in[0,T]}$ 是一个适应于 $(\\mathcal{F}_t)_{t\\in[0,T]}$ 的标准布朗运动，且 $W_0=0$。考虑如下的倒向随机微分方程 (BSDE)\n$$\nY_t \\;=\\; \\xi \\;+\\; \\int_t^T \\alpha\\,ds \\;-\\; \\int_t^T Z_s\\,dW_s,\\qquad t\\in[0,T],\n$$\n其中 $\\alpha\\in\\mathbb{R}$ 是一个常数，终端条件为 $\\xi=W_T$。假设 $Y$ 和 $Z$ 是平方可积的适应过程。仅使用条件期望的基本性质、Itô 积分的鞅性质以及布朗运动的定义性质（特别是布朗运动具有独立增量和 $\\mathbb{E}[W_T\\mid\\mathcal{F}_t]=W_t$），推导出 $Y_t$ 和 $Z_t$ 在 $t\\in[0,T]$ 上的闭式表达式。将你的最终答案表示为关于 $t$、$T$、$\\alpha$ 和 $W_t$ 的 $Y_t$ 和 $Z_t$ 的解析公式。", "solution": "该问题给出了一个倒向随机微分方程 (BSDE)，并要求解过程 $(Y_t, Z_t)$ 的闭式表达式。该 BSDE 由下式给出\n$$\nY_t = \\xi + \\int_t^T \\alpha \\,ds - \\int_t^T Z_s \\,dW_s, \\qquad t \\in [0,T]\n$$\n其中 $\\alpha \\in \\mathbb{R}$ 是一个常数，$(W_t)_{t\\in[0,T]}$ 是带域流概率空间 $(\\Omega,\\mathcal{F},(\\mathcal{F}_t)_{t\\in[0,T]},\\mathbb{P})$ 上的标准布朗运动，终端条件为 $\\xi = W_T$。过程 $Y$ 和 $Z$ 假设是平方可积的并且适应于域流 $(\\mathcal{F}_t)_{t\\in[0,T]}$。\n\n解可以通过以下两个主要步骤找到：首先求出 $Y_t$，然后利用该结果求出 $Z_t$。推导过程将遵循指定的约束，即仅使用条件期望、Itô 积分和布朗运动的基本性质。\n\n首先，我们推导 $Y_t$ 的表达式。一个关键的思路是将过程 $Y_t$ 的值与一个条件期望联系起来。让我们将 BSDE 重写为其等价的正向微分形式。一个过程对 $(Y_t, Z_t)$ 是 BSDE 的解，当且仅当它满足正向随机微分方程 (SDE)\n$$\ndY_t = -\\alpha \\,dt + Z_t \\,dW_t\n$$\n对于 $t \\in [0,T]$，且终端条件为 $Y_T = \\xi$。\n\n现在，我们定义一个辅助过程 $M_t$ 为\n$$\nM_t = Y_t + \\int_0^t \\alpha \\,du = Y_t + \\alpha t.\n$$\n使用 Itô 微分法则（或通过直接代入），$M_t$ 的微分为\n$$\ndM_t = dY_t + d(\\alpha t) = (-\\alpha \\,dt + Z_t \\,dW_t) + \\alpha \\,dt = Z_t \\,dW_t.\n$$\n由于 $M_t$ 的动态不包含漂移项（$dt$ 项），过程 $M_t$ 是一个局部鞅。考虑到对 $Z$ 的平方可积性假设，$M_t = M_0 + \\int_0^t Z_s \\,dW_s$ 是一个真鞅。\n\n任何鞅 $M$ 的一个基本性质是，对于任意两个时间 $s  t$，有 $\\mathbb{E}[M_t \\mid \\mathcal{F}_s] = M_s$。将此性质应用于区间 $[t, T]$，我们得到\n$$\nM_t = \\mathbb{E}[M_T \\mid \\mathcal{F}_t].\n$$\n我们可以使用其定义和问题中给出的 $Y_T$ 的终端条件来表示 $M_T$：\n$$\nM_T = Y_T + \\alpha T = \\xi + \\alpha T.\n$$\n代入给定的终端条件 $\\xi = W_T$：\n$$\nM_T = W_T + \\alpha T.\n$$\n现在我们可以计算条件期望来求 $M_t$：\n$$\nM_t = \\mathbb{E}[W_T + \\alpha T \\mid \\mathcal{F}_t].\n$$\n根据条件期望的线性性：\n$$\nM_t = \\mathbb{E}[W_T \\mid \\mathcal{F}_t] + \\mathbb{E}[\\alpha T \\mid \\mathcal{F}_t].\n$$\n问题明确指出要使用性质 $\\mathbb{E}[W_T \\mid \\mathcal{F}_t] = W_t$，这是标准布朗运动是鞅的一个推论。项 $\\alpha T$ 是一个确定性常数，所以它的条件期望就是其本身。因此，\n$$\nM_t = W_t + \\alpha T.\n$$\n我们现在对同一个鞅 $M_t$ 有了两个表达式：它的定义，$M_t = Y_t + \\alpha t$，以及我们刚刚推导出的表达式，$M_t = W_t + \\alpha T$。将这两个表达式相等，我们可以解出 $Y_t$：\n$$\nY_t + \\alpha t = W_t + \\alpha T.\n$$\n$$\nY_t = W_t + \\alpha T - \\alpha t = W_t + \\alpha(T-t).\n$$\n这就给出了过程 $Y_t$ 的闭式表达式。\n\n其次，我们推导 $Z_t$ 的表达式。为此，我们将已知的 $Y_t$ 表达式代回原始的 BSDE 定义中：\n$$\nY_t = \\xi + \\int_t^T \\alpha \\,ds - \\int_t^T Z_s \\,dW_s.\n$$\n代入 $Y_t = W_t + \\alpha(T-t)$ 和 $\\xi = W_T$：\n$$\nW_t + \\alpha(T-t) = W_T + \\int_t^T \\alpha \\,ds - \\int_t^T Z_s \\,dW_s.\n$$\n积分 $\\int_t^T \\alpha \\,ds$ 等于 $\\alpha(T-t)$。因此，方程变为：\n$$\nW_t + \\alpha(T-t) = W_T + \\alpha(T-t) - \\int_t^T Z_s \\,dW_s.\n$$\n项 $\\alpha(T-t)$ 出现在等式两边，可以消去：\n$$\nW_t = W_T - \\int_t^T Z_s \\,dW_s.\n$$\n重新整理此方程以分离出包含 $Z_s$ 的随机积分：\n$$\n\\int_t^T Z_s \\,dW_s = W_T - W_t.\n$$\n右边项 $W_T - W_t$ 是布朗运动的增量。根据 Itô 积分的定义，这个增量可以表示为常数函数 $1$ 的随机积分：\n$$\nW_T - W_t = \\int_t^T 1 \\,dW_s.\n$$\n比较这两个表达式，我们得到恒等式：\n$$\n\\int_t^T Z_s \\,dW_s = \\int_t^T 1 \\,dW_s.\n$$\n这意味着对于所有 $t \\in [0, T]$，\n$$\n\\int_t^T (Z_s - 1) \\,dW_s = 0.\n$$\nItô 随机积分的一个基本性质是其唯一性：如果一个适应过程在所有这些区间上的积分都为零，那么该过程本身必须为零（在时间上关于勒贝格测度几乎处处为零，对于几乎所有路径）。这可以由 Itô 等距性得出，该性质表明 $\\mathbb{E}[(\\int_t^T f(s) dW_s)^2] = \\mathbb{E}[\\int_t^T f(s)^2 ds]$。将其应用于此：\n$$\n\\mathbb{E}\\left[\\left(\\int_t^T (Z_s - 1) \\,dW_s\\right)^2\\right] = \\mathbb{E}\\left[\\int_t^T (Z_s - 1)^2 \\,ds\\right] = 0.\n$$\n由于被积函数 $(Z_s - 1)^2$ 是非负的，它在 $[t, T]$ 上的积分也是非负的。要使这个非负随机变量的期望为零，该随机变量本身必须几乎必然为零。也就是说，$\\int_t^T (Z_s - 1)^2 \\,ds=0$ 几乎必然（a.s.）。这反过来又意味着被积函数 $(Z_s-1)^2$ 对于几乎每一个 $s \\in [t, T]$ 都必须为零。由于此结论对任意 $t \\in [0,T)$ 均成立，因此可得 $Z_s-1=0$ 对于几乎所有 $s \\in [0,T]$ 成立，即 $Z_s=1$。", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\nY_t  Z_t\n\\end{pmatrix}\n=\n\\begin{pmatrix}\nW_t + \\alpha(T-t)  1\n\\end{pmatrix}\n}\n$$", "id": "3040130"}, {"introduction": "这项实践将为你搭建一座连接随机分析与偏微分方程（PDE）两大领域的桥梁，具体展示著名的 Feynman-Kac 公式是如何在实践中应用的。通过将解定义为条件期望并巧妙运用伊藤公式，你将揭示该倒向随机微分方程解所隐含满足的偏微分方程，并识别出过程 $Z_t$ 与解函数空间导数之间的深刻关联。[@problem_id:3040157]", "problem": "设 $\\left(\\Omega,\\mathcal{F},(\\mathcal{F}_{t})_{t\\in[0,T]},\\mathbb{P}\\right)$ 是一个支撑一维标准布朗运动 $W$ 的带滤概率空间。固定常数 $\\sigma0$、$\\beta\\in\\mathbb{R}$、$T0$ 和 $x\\in\\mathbb{R}$。考虑初始条件为 $X_{0}=x$ 的正向随机微分方程 $dX_{t}=\\sigma\\,dW_{t}$，以及驱动项为零、终端条件为 $Y_{T}=g(X_{T})$（其中 $g(x)=\\exp(\\beta x)$）的倒向随机微分方程 (BSDE)。\n\n定义马尔可夫候选函数 $u(t,x):=\\mathbb{E}\\!\\left[g(X_{T})\\mid X_{t}=x\\right]$ 和过程 $Y_{t}:=u(t,X_{t})$。仅使用伊藤公式、条件期望的性质以及上述随机微分方程的定义，完成以下步骤：\n\n- 计算 $u(t,x)$ 的显式闭式表达式，并验证 $u$ 关于 $t$ 可微且关于 $x$ 二次可微。\n- 对 $u(t,X_{t})$ 应用伊藤公式，以识别在驱动项为零、终端条件为 $Y_{T}=g(X_{T})$ 的 BSDE 的鞅表示 $dY_{t}=Z_{t}\\,dW_{t}$ 中出现的 $(\\mathcal{F}_{t})$-适应过程 $Z_{t}$。\n- 提供 $Z_{t}$ 关于 $t$、$X_{t}$ 和参数的最终闭式解析表达式。\n\n您的最终答案必须是 $Z_{t}$ 的单一闭式解析表达式。不要进行近似或四舍五入。", "solution": "首先验证问题，以确保其是适定的、有科学依据的和客观的。\n\n### 第一步：提取已知条件\n- 一个带滤概率空间 $\\left(\\Omega,\\mathcal{F},(\\mathcal{F}_{t})_{t\\in[0,T]},\\mathbb{P}\\right)$。\n- 一个一维标准布朗运动 $W$。\n- 常数 $\\sigma0$、$\\beta\\in\\mathbb{R}$、$T0$ 和 $x\\in\\mathbb{R}$。\n- 一个正向随机微分方程 (SDE)：$dX_{t}=\\sigma\\,dW_{t}$，初始条件为 $X_{0}=x$。\n- 一个驱动项为零、终端条件为 $Y_{T}=g(X_{T})$（其中 $g(x)=\\exp(\\beta x)$）的倒向随机微分方程 (BSDE)。\n- 一个马尔可夫候选函数 $u(t,x):=\\mathbb{E}\\!\\left[g(X_{T})\\mid X_{t}=x\\right]$。\n- 一个过程 $Y_{t}:=u(t,X_{t})$。\n\n### 第二步：使用提取的已知条件进行验证\n该问题具有科学依据，植根于成熟的随机微分方程数学理论，特别是伊藤微积分和倒向随机微分方程。正向 SDE 是由布朗运动驱动的变量的标准模型。终端条件是一个性质良好的指数函数。通过条件期望定义价值函数 $u(t,x)$ 是随机微分方程 (SDE) 与偏微分方程 (PDE) 之间联系的基石，通常与费曼-卡茨公式相关。该问题是适定的；它提供了唯一确定过程 $Z_t$ 所需的所有信息（$X_t$ 的动态、终端函数 $g$、$u$ 和 $Y_t$ 的定义）。语言精确且客观。该问题不包含任何科学谬误、矛盾或含糊之处。\n\n### 第三步：结论与行动\n问题有效。将提供完整解答。\n\n### 求解推导\n\n求解遵循问题陈述中概述的三个步骤。\n\n**第一部分：计算 $u(t,x)$ 的显式表达式**\n\n正向过程由 SDE $dX_{s}=\\sigma\\,dW_{s}$ 给出。为了找到在 $X_{t}=x$ 条件下 $X_{T}$ 的分布，我们在区间 $[t, T]$ 上求解此 SDE，起始条件为 $X_{t}=x$。\n将 SDE 从 $t$ 积分到 $T$ 得出：\n$$ X_{T} = X_{t} + \\int_{t}^{T} \\sigma \\,dW_{s} $$\n给定 $X_{t}=x$，我们有：\n$$ X_{T} = x + \\sigma (W_{T}-W_{t}) $$\n标准布朗运动的增量 $W_{T}-W_{t}$ 是一个正态分布的随机变量，均值为 $0$，方差为 $T-t$。即，$W_{T}-W_{t} \\sim \\mathcal{N}(0, T-t)$。\n因此，在 $X_{t}=x$ 的条件下，随机变量 $X_{T}$ 也服从正态分布：\n$$ X_{T} \\mid (X_{t}=x) \\sim \\mathcal{N}(x, \\sigma^2(T-t)) $$\n函数 $u(t,x)$ 定义为 $g(X_T)$ 的条件期望：\n$$ u(t,x) = \\mathbb{E}\\!\\left[g(X_{T})\\mid X_{t}=x\\right] = \\mathbb{E}\\!\\left[\\exp(\\beta X_{T})\\mid X_{t}=x\\right] $$\n这是正态分布 $\\mathcal{N}(x, \\sigma^2(T-t))$ 在 $\\beta$ 处求值的矩母函数。对于一个随机变量 $V \\sim \\mathcal{N}(\\mu, \\Sigma^2)$，其矩母函数为 $M_V(k) = \\mathbb{E}[\\exp(kV)] = \\exp(k\\mu + \\frac{1}{2}k^2\\Sigma^2)$。\n在我们的情况下，$\\mu=x$，$\\Sigma^2 = \\sigma^2(T-t)$，$k=\\beta$。因此，$u(t,x)$ 的显式闭式表达式为：\n$$ u(t,x) = \\exp\\left(\\beta x + \\frac{1}{2}\\beta^2\\sigma^2(T-t)\\right) $$\n为验证可微性，我们计算偏导数：\n$$ \\frac{\\partial u}{\\partial t}(t,x) = \\exp\\left(\\beta x + \\frac{1}{2}\\beta^2\\sigma^2(T-t)\\right) \\cdot \\left(-\\frac{1}{2}\\beta^2\\sigma^2\\right) = -\\frac{1}{2}\\beta^2\\sigma^2 u(t,x) $$\n$$ \\frac{\\partial u}{\\partial x}(t,x) = \\exp\\left(\\beta x + \\frac{1}{2}\\beta^2\\sigma^2(T-t)\\right) \\cdot \\beta = \\beta u(t,x) $$\n$$ \\frac{\\partial^2 u}{\\partial x^2}(t,x) = \\frac{\\partial}{\\partial x}(\\beta u(t,x)) = \\beta^2 u(t,x) = \\beta^2 \\exp\\left(\\beta x + \\frac{1}{2}\\beta^2\\sigma^2(T-t)\\right) $$\n由于指数函数是无限可微的，并且所有参数都是常数，因此这些导数在 $(t,x) \\in [0,T) \\times \\mathbb{R}$ 上存在且连续。因此，$u$ 至少是 $C^{1,2}$ 的，满足可微性要求。\n\n**第二部分：对 $Y_t = u(t,X_t)$ 应用伊藤公式**\n\n我们对一个关于时间和随机过程的函数应用伊藤公式。对于 $Y_t = u(t, X_t)$，公式为：\n$$ dY_{t} = \\frac{\\partial u}{\\partial t}(t,X_{t})\\,dt + \\frac{\\partial u}{\\partial x}(t,X_{t})\\,dX_{t} + \\frac{1}{2}\\frac{\\partial^2 u}{\\partial x^2}(t,X_{t})\\,d\\langle X \\rangle_{t} $$\n我们有 $X_t$ 的动态，$dX_t = \\sigma\\,dW_t$。$X_t$ 的二次变差为 $d\\langle X \\rangle_{t} = (\\sigma)^2\\,dt = \\sigma^2\\,dt$。\n现在，我们将偏导数的表达式（在 $(t, X_t)$ 处求值）和 $X_t$ 的动态代入伊藤公式：\n$$ dY_{t} = \\left(-\\frac{1}{2}\\beta^2\\sigma^2 u(t,X_{t})\\right)dt + \\left(\\beta u(t,X_{t})\\right)(\\sigma\\,dW_{t}) + \\frac{1}{2}\\left(\\beta^2 u(t,X_{t})\\right)(\\sigma^2\\,dt) $$\n我们合并 $dt$ 和 $dW_t$ 项：\n$$ dY_{t} = \\left(-\\frac{1}{2}\\beta^2\\sigma^2 u(t,X_{t}) + \\frac{1}{2}\\beta^2\\sigma^2 u(t,X_{t})\\right)dt + \\left(\\beta \\sigma u(t,X_{t})\\right)dW_{t} $$\n$dt$ 的系数项相互抵消：\n$$ dY_{t} = (0)\\,dt + \\left(\\beta \\sigma u(t,X_{t})\\right)dW_{t} $$\n$$ dY_{t} = \\beta \\sigma u(t,X_{t})\\,dW_{t} $$\n问题指出，对 $(Y_t, Z_t)$ 求解 BSDE，其一般形式写作 $dY_t = f(t, X_t, Y_t, Z_t)dt + Z_t dW_t$。对于驱动项为零的 BSDE，$f=0$，因此表示为 $dY_t = Z_t dW_t$。通过将此形式与我们从伊藤公式得到的结果进行比较，我们可以确定过程 $Z_t$。\n\n**第三部分：提供 $Z_t$ 的闭式解析表达式**\n\n从上一步骤可知，$dY_{t} = \\left(\\beta \\sigma u(t,X_{t})\\right)dW_{t}$。将其与鞅表示 $dY_t = Z_t dW_t$ 进行比较，我们确定 $Z_t$ 为：\n$$ Z_t = \\beta \\sigma u(t,X_{t}) $$\n代入 $u(t,X_{t})$ 的显式表达式：\n$$ Z_t = \\beta \\sigma \\exp\\left(\\beta X_t + \\frac{1}{2}\\beta^2\\sigma^2(T-t)\\right) $$\n这就是所要求的、以 $t$、$X_t$ 和给定参数表示的过程 $Z_t$ 的闭式解析表达式。", "answer": "$$\\boxed{\\beta\\sigma\\exp\\left(\\beta X_{t} + \\frac{1}{2}\\beta^{2}\\sigma^{2}(T-t)\\right)}$$", "id": "3040157"}, {"introduction": "尽管解析解对于理论学习至关重要，但现实世界中的大多数问题都依赖于数值方法。本练习将介绍一种功能强大且广泛应用的数值算法——基于回归的方法——来近似求解倒向随机微分方程。你将亲手实现一个时间上向后递推的计算方案，在每一步使用最小二乘回归来估计未知的 $Y$ 和 $Z$ 过程，从而获得宝贵的随机计算实践经验。[@problem_id:3040102]", "problem": "考虑在一个带滤概率空间 $(\\Omega,\\mathcal{F},(\\mathcal{F}_t)_{t\\in[0,T]},\\mathbb{P})$ 上的一个一维标准布朗运动 $W=(W_t)_{t\\in[0,T]}$。令前向过程 $X=(X_t)_{t\\in[0,T]}$ 满足随机微分方程 $dX_t=\\sigma\\,dW_t$，其中 $X_0=x_0$ 且波动率 $\\sigma0$ 为常数。考虑由 $Y_t=g(X_T)+\\int_t^T f(s,Y_s,Z_s)\\,ds-\\int_t^T Z_s\\,dW_s$ 定义的倒向随机微分方程（BSDE），其中 $g:\\mathbb{R}\\to\\mathbb{R}$ 是一个终端支付函数，$f:[0,T]\\times\\mathbb{R}\\times\\mathbb{R}\\to\\mathbb{R}$ 是一个驱动函数。在本问题中，设终端函数为 $g(x)=x^2$，驱动函数为 $f(t,y,z)=\\lambda\\,y+\\mu\\,z$，其中 $\\lambda\\in\\mathbb{R}$ 和 $\\mu\\in\\mathbb{R}$ 为常数。\n\n从倒向随机微分方程（BSDE）的基本定义和随机微分方程的标准欧拉离散化方法出发，在均匀网格 $0=t_0t_1\\dotst_M=T$ 上，推导出求解 $(Y_k, Z_k)$ 的两步回归数值方案的递归关系，其中 $Y_k \\approx Y_{t_k}$ 且 $Z_k \\approx Z_{t_k}$。\n(A) 给出用于通过回归估计 $Z_k$ 的目标变量，假设在步骤 $k$ 时 $Y_{k+1}$ 已知。\n(B) 给出用于通过回归估计 $Y_k$ 的目标变量，假设在步骤 $k$ 时 $Y_{k+1}$ 已知，并且你已经从步骤(A)中获得了对 $Z_k$ 的估计 $\\hat{Z}_k$。", "solution": "用户在随机微分方程数值方法领域提供了一个明确定义的问题，特别关注倒向随机微分方程（BSDEs）。\n\n### 步骤1：提取给定条件\n-   **前向过程**：一个一维随机过程 $X=(X_t)_{t\\in[0,T]}$，由随机微分方程（SDE）$dX_t=\\sigma\\,dW_t$ 控制，初始条件为 $X_0=x_0$。$W_t$ 是标准布朗运动，$\\sigma0$ 是一个常数。\n-   **倒向随机微分方程（BSDE）**：过程对 $(Y_t, Z_t)$ 必须满足 $Y_t=g(X_T)+\\int_t^T f(s,Y_s,Z_s)\\,ds-\\int_t^T Z_s\\,dW_s$。\n-   **终端条件**：函数 $g:\\mathbb{R}\\to\\mathbb{R}$ 由 $g(x)=x^2$ 给出。\n-   **驱动函数**：函数 $f:[0,T]\\times\\mathbb{R}\\times\\mathbb{R}\\to\\mathbb{R}$ 由 $f(t,y,z)=\\lambda\\,y+\\mu\\,z$ 给出，其中 $\\lambda,\\mu\\in\\mathbb{R}$ 为常数。\n-   **数值格式**：在均匀网格 $0=t_0t_1\\dotst_M=T$ 上进行欧拉离散化。步长为 $\\Delta t = t_{k+1}-t_k$。\n\n### 步骤2：问题验证\n该问题是清晰、明确且有科学依据的。它要求推导用于数值求解BSDE的著名“后向回归”或“长斯塔夫-施瓦茨类型”方法的关键步骤。该方法植根于BSDE理论，并利用了伊藤微积分和条件期望的性质。\n-   **客观性**：问题要求进行数学推导，没有主观元素。\n-   **一致性**：给定的SDE、BSDE和函数形式都是该领域研究的标准例子。\n\n### 步骤3：结论与行动\n该问题有效，将提供详细推导。\n\n### 推导\n\n我们从BSDE的积分形式开始：\n$$ Y_t = Y_T + \\int_t^T f(s,Y_s,Z_s)\\,ds - \\int_t^T Z_s\\,dW_s $$\n在时间网格点 $t_k$ 和 $t_{k+1}$ 上考虑该方程，可得：\n$$ Y_{t_k} = Y_{t_{k+1}} + \\int_{t_k}^{t_{k+1}} f(s,Y_s,Z_s)\\,ds - \\int_{t_k}^{t_{k+1}} Z_s\\,dW_s $$\n我们使用欧拉-丸山（Euler-Maruyama）格式对该方程进行离散化。我们将积分近似为矩形：\n$$ \\int_{t_k}^{t_{k+1}} f(s,Y_s,Z_s)\\,ds \\approx f(t_k, Y_{t_k}, Z_{t_k}) \\Delta t $$\n$$ \\int_{t_k}^{t_{k+1}} Z_s\\,dW_s \\approx Z_{t_k} (W_{t_{k+1}}-W_{t_k}) = Z_{t_k} \\Delta W_k $$\n其中 $\\Delta W_k = W_{t_{k+1}}-W_{t_k}$ 是一个服从 $\\mathcal{N}(0, \\Delta t)$ 分布的随机增量。将这些近似代入，我们得到递归关系：\n$$ Y_k \\approx Y_{k+1} + f(t_k, Y_k, Z_k)\\Delta t - Z_k \\Delta W_k $$\n其中 $Y_k \\approx Y_{t_k}$，$Z_k \\approx Z_{t_k}$。\n\n这是一个关于 $Y_k$ 和 $Z_k$ 的隐式方程。为了设计一个可行的数值方案，我们使用在 $t_{k+1}$ 时的值来近似 $f$ 中的 $Y$，并利用条件期望来分离 $Y_k$ 和 $Z_k$。离散化方程可写为：\n$$ Y_k \\approx Y_{k+1} + f(t_k, Y_{k+1}, Z_k)\\Delta t - Z_k \\Delta W_k $$\n这个形式（用 $Y_{k+1}$ 代替 $Y_k$）更常用于这些方案中，因为它避免了求解非线性方程的需要。\n\n#### (A) 估计 $Z_k$ 的目标变量\n\n为了隔离 $Z_k$，我们可以利用随机积分项 $\\int Z_s dW_s$ 是鞅且其期望为零的性质。将离散方程乘以 $\\Delta W_k$：\n$$ Y_k \\Delta W_k \\approx Y_{k+1}\\Delta W_k + f(t_k, Y_{k+1}, Z_k)\\Delta t \\Delta W_k - Z_k (\\Delta W_k)^2 $$\n现在，我们取关于在 $t_k$ 时刻可用信息 $\\mathcal{F}_{t_k}$ 的条件期望。由于 $Y_k$ 和 $Z_k$ 是 $\\mathcal{F}_{t_k}$-可测的，它们可以从条件期望中提出来。\n$$ \\mathbb{E}[Y_k \\Delta W_k \\mid \\mathcal{F}_{t_k}] = Y_k \\mathbb{E}[\\Delta W_k \\mid \\mathcal{F}_{t_k}] = 0 $$\n$$ \\mathbb{E}[Z_k (\\Delta W_k)^2 \\mid \\mathcal{F}_{t_k}] = Z_k \\mathbb{E}[(\\Delta W_k)^2 \\mid \\mathcal{F}_{t_k}] = Z_k \\Delta t $$\n对于交叉项和漂移项：\n$$ \\mathbb{E}[Y_{k+1}\\Delta W_k \\mid \\mathcal{F}_{t_k}] $$\n$$ \\mathbb{E}[f(t_k, Y_{k+1}, Z_k)\\Delta t \\Delta W_k \\mid \\mathcal{F}_{t_k}] = f(t_k, Y_{k+1}, Z_k) \\Delta t \\mathbb{E}[\\Delta W_k \\mid \\mathcal{F}_{t_k}] = 0 $$\n（这里我们做了一个近似，即 $f$ 中的 $Y_{k+1}$ 可以被视为与 $\\Delta W_k$ “解耦”，或者更简单地说，在数值方案中，我们直接将该项设为零。）\n因此，取期望后得到：\n$$ 0 \\approx \\mathbb{E}[Y_{k+1}\\Delta W_k \\mid \\mathcal{F}_{t_k}] - Z_k \\Delta t $$\n求解 $Z_k$：\n$$ Z_k \\approx \\frac{\\mathbb{E}[Y_{k+1}\\Delta W_k \\mid \\mathcal{F}_{t_k}]}{\\Delta t} $$\n这个关系是回归方法的基础。在实践中，我们无法计算精确的条件期望。相反，我们通过在 $X_k$ 的一组基函数上，对**被观测到的**量 $Y_{k+1}\\Delta W_k / \\Delta t$ 进行回归来近似它。\n因此，(A) 的目标变量是：\n$$ \\frac{Y_{k+1}\\Delta W_k}{\\Delta t} $$\n\n#### (B) 估计 $Y_k$ 的目标变量\n\n为了隔离 $Y_k$，我们取原始离散方程的条件期望：\n$$ Y_k \\approx Y_{k+1} + f(t_k, Y_{k+1}, Z_k)\\Delta t - Z_k \\Delta W_k $$\n取关于 $\\mathcal{F}_{t_k}$ 的条件期望：\n$$ \\mathbb{E}[Y_k \\mid \\mathcal{F}_{t_k}] \\approx \\mathbb{E}[Y_{k+1} + f(t_k, Y_{k+1}, Z_k)\\Delta t - Z_k \\Delta W_k \\mid \\mathcal{F}_{t_k}] $$\n由于 $Y_k$ 是 $\\mathcal{F}_{t_k}$-可测的，$\\mathbb{E}[Y_k \\mid \\mathcal{F}_{t_k}] = Y_k$。此外，$\\mathbb{E}[Z_k \\Delta W_k \\mid \\mathcal{F}_{t_k}] = Z_k \\mathbb{E}[\\Delta W_k \\mid \\mathcal{F}_{t_k}] = 0$。\n这使得：\n$$ Y_k \\approx \\mathbb{E}[Y_{k+1} + f(t_k, Y_{k+1}, Z_k)\\Delta t \\mid \\mathcal{F}_{t_k}] $$\n在数值方案中，我们已经从步骤 (A) 中获得了 $Z_k$ 的路径依赖估计 $\\hat{Z}_k$。我们将此估计代入上式，并再次用回归代替条件期望。\n因此，(B) 的目标变量是：\n$$ Y_{k+1} + f(t_k, Y_{k+1}, \\hat{Z}_k)\\Delta t $$\n其中 $f(t_k, Y_{k+1}, \\hat{Z}_k) = \\lambda Y_{k+1} + \\mu \\hat{Z}_k$。\n\n### 最终答案\n(A) 估计 $Z_k$ 的目标变量是 **$ \\frac{Y_{k+1}\\Delta W_k}{\\Delta t} $**。\n\n(B) 估计 $Y_k$ 的目标变量是 **$ Y_{k+1} + (\\lambda Y_{k+1} + \\mu \\hat{Z}_k)\\Delta t $**。", "answer": "```python\nimport numpy as np\n\ndef solve_bsde_regression(T, M, N, x0, sigma, lam, mu, seed):\n    \"\"\"\n    Solves a Backward Stochastic Differential Equation (BSDE) using a\n    regression-based Euler scheme (Longstaff-Schwartz type method).\n\n    Parameters:\n    T (float): Time horizon.\n    M (int): Number of time steps.\n    N (int): Number of simulated paths.\n    x0 (float): Initial value of the forward process X.\n    sigma (float): Volatility of the forward process X.\n    lam (float): Coefficient for the Y term in the BSDE driver.\n    mu (float): Coefficient for the Z term in the BSDE driver.\n    seed (int): Seed for the random number generator.\n\n    Returns:\n    float: The estimated value of Y_0.\n    \"\"\"\n    # Time step size\n    dt = T / M\n    \n    # Initialize random number generator for reproducibility\n    rng = np.random.default_rng(seed)\n\n    # 1. Forward Path Simulation\n    # Generate N paths of Brownian increments\n    dW = rng.normal(0, np.sqrt(dt), size=(N, M))\n    \n    # Simulate N paths of the forward process X_t\n    X = np.zeros((N, M + 1))\n    X[:, 0] = x0\n    # Use cumsum for efficient path generation\n    X[:, 1:] = x0 + sigma * np.cumsum(dW, axis=1)\n\n    # 2. Terminal Condition for Y\n    # At time T, Y_T = g(X_T) = X_T^2\n    Y = X[:, -1]**2\n\n    # 3. Backward Recursion Loop\n    for k in range(M - 1, -1, -1):\n        # Get states and increments for the current time step t_k\n        X_k = X[:, k]\n        dW_k = dW[:, k]\n        \n        # Construct the regression basis matrix from state X_k\n        # Basis is phi(x) = (1, x, x^2)\n        poly_basis = np.stack([np.ones(N), X_k, X_k**2], axis=1)\n\n        # --------- Stage A: Estimate Z_k ---------\n        # Define the regression target for Z_k\n        target_Z = Y * dW_k / dt\n        \n        # Perform least-squares regression to find coefficients for Z_k\n        coeffs_Z = np.linalg.lstsq(poly_basis, target_Z, rcond=None)[0]\n        \n        # Compute the pathwise estimate of Z_k using the regression model\n        Z_k = poly_basis @ coeffs_Z\n\n        # --------- Stage B: Estimate Y_k ---------\n        # Define the regression target for Y_k\n        # V_k = Y_{k+1} + f(t_k, Y_{k+1}, Z_k_hat) * dt\n        # f(t,y,z) = lam*y + mu*z\n        target_Y = Y + (lam * Y + mu * Z_k) * dt\n        \n        # Perform least-squares regression to find coefficients for Y_k\n        coeffs_Y = np.linalg.lstsq(poly_basis, target_Y, rcond=None)[0]\n        \n        # Compute the pathwise estimate for Y_k. This becomes Y_{k+1} for the next loop.\n        Y = poly_basis @ coeffs_Y\n\n    # 4. Final Result\n    # At k=0, X_k is a constant x0 vector. The regression result Y will be a\n    # constant vector where each element is the mean of target_Y.\n    # We return this single value.\n    return Y[0]\n\n\ndef solve():\n    \"\"\"\n    Main function to run the BSDE solver on the suite of test cases.\n    \"\"\"\n    test_cases = [\n        # (T, M, N, x0, sigma, lambda, mu, seed)\n        (1.0, 40, 5000, 0.0, 1.0, 0.0, 0.0, 12345),\n        (0.5, 30, 5000, 0.0, 1.0, 0.3, 0.0, 23456),\n        (1.0, 40, 5000, 0.0, 1.0, 0.0, 0.2, 34567),\n        (0.1, 10, 5000, 0.0, 1.0, 0.5, -0.1, 45678),\n    ]\n\n    results = []\n    for params in test_cases:\n        T, M, N, x0, sigma, lam, mu, seed = params\n        y0_estimate = solve_bsde_regression(T, M, N, x0, sigma, lam, mu, seed)\n        results.append(y0_estimate)\n\n    # Format the output as a comma-separated list in brackets\n    print(f\"[{','.join(f'{r:.6f}' for r in results)}]\")\n\nsolve()\n```", "id": "3040102"}]}