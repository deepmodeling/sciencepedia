{"hands_on_practices": [{"introduction": "这项练习是理解 Doob-Meyer 分解的基石。我们将从一个简单直观的过程入手：一个带有恒定向上或向下推动（即“漂移”）的随机游走。通过运用核心定义，我们将练习如何精确地从随机波动中分离出这种可预测的趋势，从而将抽象的“可预测过程”概念具体化。[@problem_id:3050559]", "problem": "考虑一个带流概率空间 $(\\Omega, \\mathcal{F}, (\\mathcal{F}_n)_{n \\geq 0}, \\mathbb{P})$ 和一个适应的可积序列 $(\\xi_n)_{n \\geq 1}$，对所有 $n \\geq 1$ 都满足 $E[\\xi_n \\mid \\mathcal{F}_{n-1}] = 0$。定义鞅差和 $S_n = \\sum_{k=1}^{n} \\xi_k$，其中 $S_0 = 0$，并固定一个常数漂移 $\\mu \\geq 0$。考虑过程 $X_n = S_n + \\mu n$，其中 $n \\geq 0$。\n\n仅使用鞅、下鞅和离散时间Doob分解（离散时间下的Doob-Meyer分解）的核心定义，确定下鞅 $(X_n)$ 到和式 $X_n = M_n + A_n$ 的分解，其中 $(M_n)$ 是一个鞅，而 $(A_n)$ 是一个满足 $A_0 = 0$ 的可预知的增过程。找出用 $S_n$ 和 $\\mu$ 表示的 $M_n$ 和 $A_n$ 的显式表达式。\n\n你的最终答案必须是单个解析表达式，使用 $\\mathrm{pmatrix}$ 环境将 $M_n$ 和 $A_n$ 列为一个行向量。无需四舍五入。", "solution": "首先根据指定标准对问题进行验证。\n\n### 第1步：提取已知条件\n- 一个带流概率空间 $(\\Omega, \\mathcal{F}, (\\mathcal{F}_n)_{n \\geq 0}, \\mathbb{P})$。\n- 一个适应的可积随机变量序列 $(\\xi_n)_{n \\geq 1}$。\n- 序列上的一个条件：对所有 $n \\geq 1$，有 $E[\\xi_n \\mid \\mathcal{F}_{n-1}] = 0$。这表明 $(\\xi_n)$ 是一个鞅差序列。\n- 一个过程 $S_n = \\sum_{k=1}^{n} \\xi_k$（$n \\geq 1$），初始条件为 $S_0 = 0$。\n- 一个常数漂移 $\\mu \\geq 0$。\n- 一个过程 $X_n = S_n + \\mu n$（$n \\geq 0$）。\n- 任务是找到 $(X_n)$ 的Doob分解，题目说明其为下鞅，分解为 $X_n = M_n + A_n$。\n- $(M_n)$ 必须是相对于 $(\\mathcal{F}_n)_{n \\geq 0}$ 的鞅。\n- $(A_n)$ 必须是满足 $A_0 = 0$ 的可预知的增过程。\n- 最终答案应该是 $M_n$ 和 $A_n$ 的显式表达式。\n\n### 第2步：使用提取的已知条件进行验证\n该问题在离散时间随机过程的数学框架内是良定义的。\n- **科学基础**：所有概念——带流概率空间、适应过程、鞅差序列、鞅、下鞅和Doob分解——都是现代概率论中的标准和基本概念。该设置在逻辑上和数学上都是合理的。\n- **适定性**：Doob分解定理保证了任何下鞅的分解的存在性和唯一性。该问题提供了应用此定理并找到唯一分量 $M_n$ 和 $A_n$ 所需的所有信息。\n- **客观性**：该问题使用形式化、精确的数学语言陈述，没有歧义或主观因素。\n- **完备性与一致性**：该问题提供了一套完整的定义和条件。我们可以从已知条件中验证 $(X_n)$ 是一个下鞅的前提。条件 $\\mu \\geq 0$ 至关重要，并且与下鞅的性质一致。\n\n### 第3步：结论与行动\n问题有效。将提供完整的解答。\n\n### 解答推导\n目标是找到过程 $X_n = S_n + \\mu n$ 的Doob分解。该分解将一个下鞅 $(X_n)$ 表示为一个鞅 $(M_n)$ 和一个满足 $A_0 = 0$ 的可预知的增过程 $(A_n)$ 的和。\n\n首先，我们必须确认 $(X_n)_{n \\geq 0}$ 确实是关于流 $(\\mathcal{F}_n)_{n \\geq 0}$ 的下鞅。如果一个过程是适应的、可积的，并且对所有 $n \\geq 1$ 都满足 $E[X_n \\mid \\mathcal{F}_{n-1}] \\geq X_{n-1}$，那么它就是一个下鞅。\n\n1.  **适应性**：序列 $(\\xi_k)_{k \\geq 1}$ 是适应的，意味着每个 $\\xi_k$ 都是 $\\mathcal{F}_k$-可测的。因此，$S_n = \\sum_{k=1}^{n} \\xi_k$ 是 $\\mathcal{F}_n$-可测的，因为它是 $\\mathcal{F}_n$-可测随机变量的和。项 $\\mu n$ 对每个 $n$ 都是一个确定性常数，因此它对于任何 $\\sigma$-代数（包括 $\\mathcal{F}_n$）都是可测的。因此，$X_n = S_n + \\mu n$ 是 $\\mathcal{F}_n$-适应的。\n\n2.  **可积性**：我们已知 $(\\xi_n)$ 是一个可积序列，所以对所有 $n \\geq 1$ 都有 $E[|\\xi_n|]  \\infty$。根据期望的三角不等式，$E[|S_n|] = E\\left[\\left|\\sum_{k=1}^{n} \\xi_k\\right|\\right] \\leq \\sum_{k=1}^{n} E[|\\xi_k|]$。由于这是有限个有限数的和，所以 $E[|S_n|]  \\infty$。因此，$E[|X_n|] = E[|S_n + \\mu n|] \\leq E[|S_n|] + |\\mu n|  \\infty$。所以，$(X_n)$ 是一个可积过程。\n\n3.  **下鞅性质**：我们计算 $X_n$ 在给定 $\\mathcal{F}_{n-1}$ 下的条件期望（对 $n \\geq 1$）：\n    $$E[X_n \\mid \\mathcal{F}_{n-1}] = E[S_n + \\mu n \\mid \\mathcal{F}_{n-1}]$$\n    使用定义 $S_n = S_{n-1} + \\xi_n$ 和条件期望的线性性：\n    $$E[X_n \\mid \\mathcal{F}_{n-1}] = E[S_{n-1} + \\xi_n + \\mu n \\mid \\mathcal{F}_{n-1}] = E[S_{n-1} \\mid \\mathcal{F}_{n-1}] + E[\\xi_n \\mid \\mathcal{F}_{n-1}] + E[\\mu n \\mid \\mathcal{F}_{n-1}]$$\n    - 由于 $S_{n-1}$ 是 $\\mathcal{F}_{n-1}$-可测的，所以 $E[S_{n-1} \\mid \\mathcal{F}_{n-1}] = S_{n-1}$。\n    - 根据题目陈述，$E[\\xi_n \\mid \\mathcal{F}_{n-1}] = 0$。\n    - 由于 $\\mu n$ 是一个常数，它是 $\\mathcal{F}_{n-1}$-可测的，所以 $E[\\mu n \\mid \\mathcal{F}_{n-1}] = \\mu n$。\n    综合这些结果：\n    $$E[X_n \\mid \\mathcal{F}_{n-1}] = S_{n-1} + 0 + \\mu n = S_{n-1} + \\mu n$$\n    我们将其与 $X_{n-1} = S_{n-1} + \\mu(n-1)$ 进行比较：\n    $$E[X_n \\mid \\mathcal{F}_{n-1}] = (S_{n-1} + \\mu(n-1)) + \\mu = X_{n-1} + \\mu$$\n    因为我们已知 $\\mu \\geq 0$，所以有 $E[X_n \\mid \\mathcal{F}_{n-1}] \\geq X_{n-1}$。这证实了 $(X_n)$ 是一个下鞅。\n\n现在我们应用离散时间Doob分解定理。唯一的分解 $X_n = M_n + A_n$ 由以下公式给出：\n- $A_0 = 0$\n- $A_n = \\sum_{k=1}^{n} (E[X_k \\mid \\mathcal{F}_{k-1}] - X_{k-1})$ for $n \\geq 1$\n- $M_n = X_n - A_n$ for $n \\geq 0$\n\n让我们计算可预知的增过程 $(A_n)$。使用我们之前得到的结果 $E[X_k \\mid \\mathcal{F}_{k-1}] = X_{k-1} + \\mu$：\n$$E[X_k \\mid \\mathcal{F}_{k-1}] - X_{k-1} = \\mu$$\n因此，对于 $n \\geq 1$：\n$$A_n = \\sum_{k=1}^{n} \\mu = \\mu n$$\n对于 $n=0$，$A_0 = \\mu \\cdot 0 = 0$。这符合要求。\n让我们检查 $A_n = \\mu n$ 的性质：\n- **可预知性**：对于任何 $n \\geq 1$，$A_n = \\mu n$ 是一个确定性常数。任何常数对于任何 $\\sigma$-代数（包括 $\\mathcal{F}_{n-1}$）都是可测的。因此，$(A_n)$ 是一个可预知过程。\n- **递增性**：对于任何 $n \\geq 1$，$A_n - A_{n-1} = \\mu n - \\mu(n-1) = \\mu$。因为 $\\mu \\geq 0$，所以序列 $(A_n)$ 是非减的（递增的）。\n\n现在，我们求鞅分量 $(M_n)$：\n$$M_n = X_n - A_n = (S_n + \\mu n) - (\\mu n) = S_n$$\n所以，对所有 $n \\geq 0$ 都有 $M_n = S_n$。我们必须验证 $(M_n) = (S_n)$ 是一个鞅。\n- **适应性与可积性**：我们已经证明了 $(S_n)$ 是适应且可积的。\n- **鞅性质**：对于 $n \\geq 1$，我们需要检查是否 $E[M_n \\mid \\mathcal{F}_{n-1}] = M_{n-1}$。\n$$E[S_n \\mid \\mathcal{F}_{n-1}] = E[S_{n-1} + \\xi_n \\mid \\mathcal{F}_{n-1}] = E[S_{n-1} \\mid \\mathcal{F}_{n-1}] + E[\\xi_n \\mid \\mathcal{F}_{n-1}]$$\n由于 $S_{n-1}$ 是 $\\mathcal{F}_{n-1}$-可测的，且 $E[\\xi_n \\mid \\mathcal{F}_{n-1}] = 0$：\n$$E[S_n \\mid \\mathcal{F}_{n-1}] = S_{n-1} + 0 = S_{n-1}$$\n因为 $M_n = S_n$ 且 $M_{n-1} = S_{n-1}$，所以条件 $E[M_n \\mid \\mathcal{F}_{n-1}] = M_{n-1}$ 得到满足。因此，$(M_n)$ 是一个鞅。\n\n$X_n$ 的Doob分解是 $X_n = S_n + \\mu n$，其中鞅部分是 $M_n = S_n$，可预知的增过程部分是 $A_n = \\mu n$。\n\n显式表达式是：\n- $M_n = S_n$\n- $A_n = \\mu n$", "answer": "$$\n\\boxed{\n\\begin{pmatrix}\nS_n  \\mu n\n\\end{pmatrix}\n}\n$$", "id": "3050559"}, {"introduction": "现在，我们进入更复杂的连续时间领域。本练习将展示伊藤公式（Itô's formula）作为分解布朗运动相关过程的关键工具。我们将分析一个带漂移的布朗运动的平方过程，通过计算揭示其 Doob-Meyer 分解不仅能分离出由漂移引起的趋势，还会产生一个源于布朗运动自身非零二次变差的补偿项。[@problem_id:3050549]", "problem": "考虑一个带滤的概率空间，其上支撑一个标准布朗运动 $B_t$ 满足 $B_0=0$ 及其通常的增广流。固定一个实常数 $\\mu \\in \\mathbb{R}$，并定义连续适应过程 $X_t$ 为 $X_t = (B_t - \\mu t)^2$。仅从布朗运动的核心性质（独立增量、平稳性以及二次变差 $\\langle B \\rangle_t = t$）和适用于伊藤过程的二次连续可微函数的伊藤公式出发，计算 $X_t$ 相对于 $B_t$ 的流的典范分解，即分解为一个连续局部鞅和一个可料的有限变差过程之和。特别地，确定分解 $X_t = X_0 + M_t + A_t$ 中的补偿器（即可料的有限变差部分）$A_t$，并将其明确地表示为 $t$、$\\mu$ 和 $B$ 的路径的函数。\n\n您的最终答案必须仅为 $A_t$ 的闭式解析表达式。在您的推导中，请解释该补偿器如何能被解释为 $t$ 加上一个依赖于漂移的项。不需要进行数值近似。", "solution": "首先验证问题，以确保其是适定的、有科学依据的和客观的。\n\n### 第1步：提取已知条件\n-   一个带滤概率空间上的标准布朗运动 $B_t$，满足 $B_0 = 0$。\n-   流是由 $B_t$ 生成的通常的增广流。\n-   一个常数 $\\mu \\in \\mathbb{R}$。\n-   一个由 $X_t = (B_t - \\mu t)^2$ 定义的连续适应过程 $X_t$。\n-   所需工具：布朗运动的核心性质（独立增量、平稳性、二次变差 $\\langle B \\rangle_t = t$）和伊藤公式。\n-   目标：计算 $X_t$ 的典范分解，即分解为一个连续局部鞅 $M_t$ 和一个可料的有限变差过程 $A_t$ 的和，使得 $X_t = X_0 + M_t + A_t$。\n-   具体任务：求出补偿器 $A_t$。\n\n### 第2步：使用提取的已知条件进行验证\n该问题在数学上是严谨的，完全属于随机分析的范畴。过程 $X_t$ 的定义、底层的布朗运动以及所要求的分解都是标准概念。问题是自洽的，提供了所有必要信息。它是适定的，因为一个连续半鞅的典范（Doob-Meyer）分解是已知存在且唯一的。问题是客观的，没有任何科学或逻辑上的缺陷。\n\n### 第3步：结论与行动\n问题被判定为**有效**。我们继续进行求解。\n\n过程 $X_t$ 由 $X_t = (B_t - \\mu t)^2$ 给出。我们可以将其表示为 $X_t = f(t, B_t)$，其中函数为 $f(t, x) = (x - \\mu t)^2$。函数 $f(t,x)$ 关于 $x$ 是二次连续可微的，关于 $t$ 是一次连续可微的。我们可以应用关于时间和随机过程的函数的伊藤公式。\n\n对于一个过程 $Y_t = f(t, W_t)$，其中 $W_t$ 是一个伊藤过程，伊藤公式的一般形式为：\n$$dY_t = \\frac{\\partial f}{\\partial t}(t, W_t) dt + \\frac{\\partial f}{\\partial x}(t, W_t) dW_t + \\frac{1}{2} \\frac{\\partial^2 f}{\\partial x^2}(t, W_t) d\\langle W \\rangle_t$$\n在我们的例子中，该过程是标准布朗运动 $W_t = B_t$。其二次变差由 $\\langle B \\rangle_t = t$ 给出，其微分形式为 $d\\langle B \\rangle_t = dt$。\n\n首先，我们计算 $f(t, x) = (x - \\mu t)^2$ 的必要偏导数：\n1.  关于时间 $t$ 的偏导数：\n    $$\\frac{\\partial f}{\\partial t} = \\frac{\\partial}{\\partial t} (x^2 - 2\\mu tx + \\mu^2 t^2) = -2\\mu x + 2\\mu^2 t$$\n2.  关于空间变量 $x$ 的偏导数：\n    $$\\frac{\\partial f}{\\partial x} = \\frac{\\partial}{\\partial x} (x - \\mu t)^2 = 2(x - \\mu t)$$\n3.  关于 $x$ 的二阶偏导数：\n    $$\\frac{\\partial^2 f}{\\partial x^2} = \\frac{\\partial}{\\partial x} (2(x - \\mu t)) = 2$$\n\n现在，我们将这些在 $(t, B_t)$ 处求值的导数代入 $X_t = f(t, B_t)$ 的伊藤公式中：\n$$dX_t = \\left(-2\\mu B_t + 2\\mu^2 t\\right) dt + 2(B_t - \\mu t) dB_t + \\frac{1}{2}(2) d\\langle B \\rangle_t$$\n使用 $d\\langle B \\rangle_t = dt$，表达式变为：\n$$dX_t = \\left(-2\\mu B_t + 2\\mu^2 t\\right) dt + 2(B_t - \\mu t) dB_t + dt$$\n我们可以合并乘以 $dt$ 的项：\n$$dX_t = (1 - 2\\mu B_t + 2\\mu^2 t) dt + 2(B_t - \\mu t) dB_t$$\n这是过程 $X_t$ 的随机微分方程（SDE）。为了找到 $X_t$ 的分解，我们将此SDE从 $0$ 积分到 $t$：\n$$X_t - X_0 = \\int_0^t (1 - 2\\mu B_s + 2\\mu^2 s) ds + \\int_0^t 2(B_s - \\mu s) dB_s$$\n过程的初始值为 $X_0 = (B_0 - \\mu \\cdot 0)^2 = (0 - 0)^2 = 0$。\n因此，我们得到分解：\n$$X_t = \\int_0^t (1 - 2\\mu B_s + 2\\mu^2 s) ds + \\int_0^t 2(B_s - \\mu s) dB_s$$\n该分解的形式为 $X_t = A_t + M_t$，如果 $A_t$ 是一个可料的有限变差过程且 $M_t$ 是一个连续局部鞅，且 $A_0 = M_0 = 0$，那么这就是一个连续半鞅的典范分解。\n\n我们来确定这两个部分：\n1.  鞅部分 $M_t$：\n    $$M_t = \\int_0^t 2(B_s - \\mu s) dB_s$$\n    这是一个伊藤积分。被积函数 $2(B_s - \\mu s)$ 是一个连续且适应的过程。因此，$M_t$ 是一个连续局部鞅，且 $M_0 = 0$。\n\n2.  有限变差部分 $A_t$（补偿器）：\n    $$A_t = \\int_0^t (1 - 2\\mu B_s + 2\\mu^2 s) ds$$\n    这是一个关于时间的黎曼积分。被积函数 $(1 - 2\\mu B_s + 2\\mu^2 s)$ 是一个连续且适应的过程，这意味着它是一个可料过程。一个可料过程关于时间的积分会产生一个可料过程。此外，由于被积函数在任何有限时间区间 $[0, T]$ 上几乎必然连续，其积分在 $[0, T]$ 上几乎必然是有限变差的。我们还有 $A_0 = 0$。因此，$A_t$ 是 $X_t$ 典范分解中唯一的可料有限变差过程。\n\n问题要求给出补偿器 $A_t$ 的显式表达式。我们可以明确地计算积分中依赖于 $s$ 的部分：\n$$A_t = \\int_0^t (1 - 2\\mu B_s) ds + \\int_0^t 2\\mu^2 s ds$$\n$$A_t = \\int_0^t ds - 2\\mu \\int_0^t B_s ds + 2\\mu^2 \\left[\\frac{s^2}{2}\\right]_0^t$$\n$$A_t = t - 2\\mu \\int_0^t B_s ds + \\mu^2 t^2$$\n该表达式给出了作为 $t$、$\\mu$ 和布朗运动 $B$ 的路径（通过积分 $\\int_0^t B_s ds$）的函数的 $A_t$。\n\n根据要求，我们可以将此补偿器解释为 $t$ 加上一个依赖于漂移的项。项 $t$ 来自于伊藤修正项，该修正项解释了布朗运动的非零二次变差。它是项 $\\frac{1}{2} \\int_0^t \\frac{\\partial^2 f}{\\partial x^2} d\\langle B \\rangle_s = \\frac{1}{2} \\int_0^t 2 ds = t$。剩余部分 $\\mu^2 t^2 - 2\\mu \\int_0^t B_s ds$ 源于经典链式法则项 $\\int_0^t \\frac{\\partial f}{\\partial s}(s, B_s) ds$，并且显然依赖于漂移参数 $\\mu$。", "answer": "$$\\boxed{t + \\mu^2 t^2 - 2\\mu \\int_0^t B_s ds}$$", "id": "3050549"}, {"introduction": "在最后的这项练习中，理论将与实践相结合。我们将处理在时间序列分析和经济学中广泛应用的自回归模型（AR(1) 过程），并为其设计一个数值计算 Doob-Meyer 分解的算法。这个动手编程任务旨在帮助你跨越从抽象数学公式到数据模拟与分析应用的鸿沟，将理论知识转化为解决问题的实用技能。[@problem_id:2388954]", "problem": "给定一个由一阶自回归（AR(1)）模型定义的离散时间、实值、适应过程。对于每个测试用例，该过程由参数 $\\mu$、$\\phi$、$\\sigma$、初始值 $X_0$ 和时间范围 $T$ 指定。其动态特性为\n$$\nX_t \\;=\\; \\mu \\;+\\; \\phi\\,X_{t-1} \\;+\\; \\varepsilon_t,\\quad t=1,2,\\dots,T,\n$$\n其中 $\\{\\varepsilon_t\\}_{t\\ge 1}$ 是独立同分布的高斯新息，满足 $\\varepsilon_t \\sim \\mathcal{N}(0,\\sigma^2)$，并且滤子（filtration）是自然滤子 $\\mathcal{F}_t=\\sigma(X_0,\\varepsilon_1,\\dots,\\varepsilon_t)$。\n\n对于每个测试用例：\n- 使用指定的参数和给定的随机种子初始化伪随机数生成器，模拟一个样本路径 $\\{X_t\\}_{t=0}^T$。将 $\\varepsilon_t$ 作为均值为 $0$、标准差为 $\\sigma$ 的独立高斯随机变量进行抽取。\n- 数值计算 $\\{X_t\\}$ 的离散时间 Doob–Meyer (Doob) 分解，将其分解为过程 $\\{M_t\\}$ 和 $\\{A_t\\}$，使得\n$$\nX_t \\;=\\; X_0 \\;+\\; M_t \\;+\\; A_t,\\quad M_0=0,\\;A_0=0,\n$$\n其中 $\\{M_t\\}$ 是关于 $\\{\\mathcal{F}_t\\}$ 的鞅，而 $\\{A_t\\}$ 是关于 $\\{\\mathcal{F}_t\\}$ 的可预测过程。\n- 报告该测试用例的终端值对 $[A_T, M_T]$。\n\n测试套件：\n- 案例1（一般非鞅过程）：$\\mu=0.5$，$\\phi=0.8$，$\\sigma=1.0$，$X_0=0.7$，$T=12$，种子 $=314159$。\n- 案例2（鞅边界）：$\\mu=0.0$，$\\phi=1.0$，$\\sigma=0.8$，$X_0=1.2$，$T=10$，种子 $=271828$。\n- 案例3（确定性边缘情况）：$\\mu=0.1$，$\\phi=0.9$，$\\sigma=0.0$，$X_0=-0.3$，$T=15$，种子 $=42$。\n- 案例4（带漂移的单位根）：$\\mu=-0.2$，$\\phi=1.0$，$\\sigma=0.5$，$X_0=0.0$，$T=8$，种子 $=7$。\n\n您的程序必须：\n- 对每个案例，使用提供的种子精确模拟一条路径。\n- 计算与关于自然滤子的离散时间 Doob 分解定义相符的终端值 $A_T$ 和 $M_T$。\n- 将每个报告的数字四舍五入到六位小数。\n\n最终输出格式：\n- 您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表。每个元素必须是对应测试用例的双元素列表 $[A_T, M_T]$，顺序与上文相同。例如，整体输出应类似于\n“[ [a1,m1],[a2,m2],[a3,m3],[a4,m4] ]”\n但每个 $a_i$ 和 $m_i$ 都将被替换为相应的四舍五入后的数值。", "solution": "在尝试给出解答之前，首先对问题陈述进行验证。\n\n### 第1步：提取已知信息\n- **过程动态性**：给出一个离散时间的一阶自回归（AR(1)）模型 $X_t = \\mu + \\phi X_{t-1} + \\varepsilon_t$，$t=1, 2, \\dots, T$。\n- **初始值**：过程从给定的值 $X_0$ 开始。\n- **新息**：$\\{\\varepsilon_t\\}_{t \\ge 1}$ 是独立同分布（i.i.d.）的随机变量序列，其中 $\\varepsilon_t \\sim \\mathcal{N}(0, \\sigma^2)$。\n- **滤子**：自然滤子为 $\\mathcal{F}_t = \\sigma(X_0, \\varepsilon_1, \\dots, \\varepsilon_t)$。\n- **分解**：过程 $\\{X_t\\}$ 被分解为 $X_t = X_0 + M_t + A_t$，其中 $\\{M_t\\}$ 是一个鞅，$\\{A_t\\}$ 是关于 $\\{\\mathcal{F}_t\\}$ 的可预测过程，且 $M_0 = A_0 = 0$。\n- **任务**：对于给定的样本路径，求出终端值 $[A_T, M_T]$。\n- **测试用例**：\n    - 案例1：$\\mu=0.5$，$\\phi=0.8$，$\\sigma=1.0$，$X_0=0.7$，$T=12$，种子 $=314159$。\n    - 案例2：$\\mu=0.0$，$\\phi=1.0$，$\\sigma=0.8$，$X_0=1.2$，$T=10$，种子 $=271828$。\n    - 案例3：$\\mu=0.1$，$\\phi=0.9$，$\\sigma=0.0$，$X_0=-0.3$，$T=15$，种子 $=42$。\n    - 案例4：$\\mu=-0.2$，$\\phi=1.0$，$\\sigma=0.5$，$X_0=0.0$，$T=8$，种子 $=7$。\n- **输出要求**：以指定的列表之列表格式报告每个案例的 $[A_T, M_T]$，数值四舍五入到六位小数。\n\n### 第2步：使用提取的已知信息进行验证\n- **科学依据**：该问题建立在离散时间随机过程的基本概念之上。AR(1) 模型是线性随机过程的典型例子，而 Doob-Meyer 分解是鞅论的基石定理。该问题在科学和数学上是合理的。\n- **适定性**：该问题是适定的。对于任何适应过程，Doob-Meyer 分解是唯一的。所有参数，包括每次模拟的随机种子，都已指定，确保所需的计算能得出一个单一、可验证的结果。\n- **客观性**：该问题以精确、客观的数学语言陈述，没有歧义或主观内容。\n\n### 第3步：结论与行动\n该问题是有效的。它是一个基于既定数学原理的、定义明确的计算任务。将提供解决方案。\n\n### 基于原理的解决方案设计\n\n对于一个离散时间的适应过程 $\\{X_t\\}_{t \\ge 0}$，Doob-Meyer 分解指出，它可以唯一地写成 $X_t = X_0 + M_t + A_t$，其中 $\\{M_t\\}_{t \\ge 0}$ 是一个鞅，$\\{A_t\\}_{t \\ge 0}$ 是一个可预测过程，且 $M_0 = A_0 = 0$。\n\n该分解是根据过程的增量 $\\Delta X_t = X_t - X_{t-1}$ 构建的。每个增量被分解为其可预测部分和鞅差部分：\n$$\n\\Delta X_t = \\Delta A_t + \\Delta M_t\n$$\n其中 $\\Delta A_t = A_t - A_{t-1}$ 且 $\\Delta M_t = M_t - M_{t-1}$。\n\n根据定义，可预测过程的增量 $\\Delta A_t$ 是过程增量在前一时间步可用信息下的条件期望：\n$$\n\\Delta A_t = \\mathbb{E}[\\Delta X_t | \\mathcal{F}_{t-1}] = \\mathbb{E}[X_t - X_{t-1} | \\mathcal{F}_{t-1}]\n$$\n鞅分量的增量 $\\Delta M_t$ 是增量中的新息或“意外”部分：\n$$\n\\Delta M_t = \\Delta X_t - \\Delta A_t = (X_t - X_{t-1}) - \\mathbb{E}[X_t - X_{t-1} | \\mathcal{F}_{t-1}]\n$$\n根据构造，$\\mathbb{E}[\\Delta M_t | \\mathcal{F}_{t-1}] = 0$，这是鞅差序列的定义属性。\n\n对于给定的 AR(1) 过程 $X_t = \\mu + \\phi X_{t-1} + \\varepsilon_t$，其增量为：\n$$\n\\Delta X_t = X_t - X_{t-1} = (\\mu + \\phi X_{t-1} + \\varepsilon_t) - X_{t-1} = \\mu + (\\phi - 1)X_{t-1} + \\varepsilon_t\n$$\n我们现在计算条件期望来求得 $\\Delta A_t$：\n$$\n\\Delta A_t = \\mathbb{E}[\\mu + (\\phi - 1)X_{t-1} + \\varepsilon_t | \\mathcal{F}_{t-1}]\n$$\n利用期望的线性和条件期望的性质：\n1.  $\\mu$ 是一个常数，所以 $\\mathbb{E}[\\mu | \\mathcal{F}_{t-1}] = \\mu$。\n2.  $X_{t-1}$ 在时间 $t-1$ 是已知的，因此它是 $\\mathcal{F}_{t-1}$-可测的。所以，$\\mathbb{E}[(\\phi - 1)X_{t-1} | \\mathcal{F}_{t-1}] = (\\phi - 1)X_{t-1}$。\n3.  新息 $\\varepsilon_t$ 独立于过去的滤子 $\\mathcal{F}_{t-1} = \\sigma(X_0, \\varepsilon_1, \\dots, \\varepsilon_{t-1})$ 且均值为零。因此，$\\mathbb{E}[\\varepsilon_t | \\mathcal{F}_{t-1}] = \\mathbb{E}[\\varepsilon_t] = 0$。\n\n综合这些结果，得到可预测过程的增量：\n$$\n\\Delta A_t = \\mu + (\\phi - 1)X_{t-1}\n$$\n那么鞅的增量为：\n$$\n\\Delta M_t = \\Delta X_t - \\Delta A_t = (\\mu + (\\phi - 1)X_{t-1} + \\varepsilon_t) - (\\mu + (\\phi - 1)X_{t-1}) = \\varepsilon_t\n$$\n终端值 $A_T$ 和 $M_T$ 分别是它们从 $t=1$ 到 $T$ 的增量之和，因为 $A_0 = M_0 = 0$：\n$$\nA_T = \\sum_{t=1}^T \\Delta A_t = \\sum_{t=1}^T (\\mu + (\\phi - 1)X_{t-1})\n$$\n$$\nM_T = \\sum_{t=1}^T \\Delta M_t = \\sum_{t=1}^T \\varepsilon_t\n$$\n\n### 算法步骤\n对于每个测试用例，数值解法包括以下步骤：\n1.  初始化参数：$\\mu, \\phi, \\sigma, X_0, T,$ 和随机种子。\n2.  使用种子初始化一个伪随机数生成器。从分布 $\\mathcal{N}(0, \\sigma^2)$ 中生成整个包含 $T$ 个新息的序列 $\\{\\varepsilon_t\\}_{t=1}^T$。\n3.  为路径 $\\{X_t\\}$ 初始化一个大小为 $T+1$ 的数组，并设置 $X[0] = X_0$。初始化终端值的累加器 $A_T = 0.0$ 和 $M_T = 0.0$。\n4.  从 $t=1$ 到 $T$ 进行迭代：\n    a. 获取当前步骤的新息 $\\varepsilon_t$。\n    b. 计算 $X_t = \\mu + \\phi X_{t-1} + \\varepsilon_t$。\n    c. 计算可预测增量 $\\Delta A_t = \\mu + (\\phi - 1)X_{t-1}$。\n    d. 将此增量加到累加器上：$A_T \\leftarrow A_T + \\Delta A_t$。\n    e. 将鞅增量 $\\varepsilon_t$ 加到其累加器上：$M_T \\leftarrow M_T + \\varepsilon_t$。注意，这也可以在循环结束后通过对所有新息求和一次性计算出来。\n5.  循环结束后，将 $A_T$ 和 $M_T$ 的最终值四舍五入到六位小数。\n6.  存储值对 $[A_T, M_T]$ 并按规定格式化收集到的结果。\n此过程正确地实现了推导出的分解，并生成了所需的输出。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Simulates AR(1) processes and computes the terminal values of their\n    Doob-Meyer decomposition components.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        {'mu': 0.5, 'phi': 0.8, 'sigma': 1.0, 'X0': 0.7, 'T': 12, 'seed': 314159},\n        {'mu': 0.0, 'phi': 1.0, 'sigma': 0.8, 'X0': 1.2, 'T': 10, 'seed': 271828},\n        {'mu': 0.1, 'phi': 0.9, 'sigma': 0.0, 'X0': -0.3, 'T': 15, 'seed': 42},\n        {'mu': -0.2, 'phi': 1.0, 'sigma': 0.5, 'X0': 0.0, 'T': 8, 'seed': 7},\n    ]\n\n    results = []\n\n    for case in test_cases:\n        mu = case['mu']\n        phi = case['phi']\n        sigma = case['sigma']\n        X0 = case['X0']\n        T = case['T']\n        seed = case['seed']\n\n        # 1. Initialize RNG and generate all innovations\n        rng = np.random.default_rng(seed)\n        epsilons = rng.normal(loc=0.0, scale=sigma, size=T)\n\n        # 2. Initialize path array and terminal value accumulators\n        x_path = np.zeros(T + 1)\n        x_path[0] = X0\n        \n        A_T = 0.0\n\n        # 3. Simulate the path and compute the predictable component A_T\n        # The martingale component M_T is simply the sum of all innovations.\n        for t in range(1, T + 1):\n            # The t-th innovation corresponds to index t-1 in the epsilons array\n            epsilon_t = epsilons[t - 1]\n            x_prev = x_path[t - 1]\n            \n            # Update the process\n            x_path[t] = mu + phi * x_prev + epsilon_t\n            \n            # Increment for the predictable part A_t\n            # delta_A_t = E[X_t - X_{t-1} | F_{t-1}] = mu + (phi - 1) * X_{t-1}\n            delta_A_t = mu + (phi - 1) * x_prev\n            A_T += delta_A_t\n\n        # The martingale part M_T is the sum of innovations\n        M_T = np.sum(epsilons)\n        \n        # 4. Round to six decimal places as required\n        A_T_rounded = round(A_T, 6)\n        M_T_rounded = round(M_T, 6)\n        \n        results.append([A_T_rounded, M_T_rounded])\n\n    # 5. Format the final output string as a compact list of lists\n    # Each sublist [a, m] is formatted to ensure fixed precision and no spaces\n    string_parts = []\n    for res_pair in results:\n        a_str = f\"{res_pair[0]:.6f}\"\n        m_str = f\"{res_pair[1]:.6f}\"\n        string_parts.append(f\"[{a_str},{m_str}]\")\n        \n    final_output = f\"[{','.join(string_parts)}]\"\n\n    print(final_output)\n\nsolve()\n```", "id": "2388954"}]}