{"hands_on_practices": [{"introduction": "“反正弦定律”这一名称并非凭空而来，它直接源于其累积分布函数（CDF）的数学形式。第一个练习将引导你通过直接对概率密度函数（PDF）进行积分来推导此CDF。这个练习不仅能锻炼你的微积分技巧，还能让你亲眼见证反正弦函数是如何从该定律特有的U形密度函数中产生的 [@problem_id:3039600]。", "problem": "令 $\\{B_{t}\\}_{t \\geq 0}$ 为一个标准布朗运动，即一个满足 $B_{0} = 0$、具有独立增量性质的连续时间随机过程，并且对于每个 $t > s \\geq 0$，增量 $B_{t} - B_{s}$ 服从均值为 $0$、方差为 $t-s$ 的高斯分布。考虑单位区间上的逗留时间比例，定义为\n$$\nX \\equiv \\int_{0}^{1} \\mathbf{1}_{\\{B_{t} > 0\\}} \\, dt,\n$$\n它表示标准布朗运动在 $[0,1]$ 上停留于 $0$ 以上的时间比例。这是一个公认的事实，$X$ 在 $[0,1]$ 上服从反正弦定律，其概率密度函数为\n$$\nf_{X}(x) = \\begin{cases}\n\\displaystyle \\frac{1}{\\pi \\sqrt{x(1-x)}},  x \\in (0,1), \\\\\n0,  \\text{其它}.\n\\end{cases}\n$$\n以此密度函数为起点，通过对 $f_{X}(x)$ 进行直接积分，计算 $x \\in [0,1]$ 上的累积分布函数 (CDF) $F_{X}(x) \\equiv \\mathbb{P}(X \\leq x)$。你的推导过程必须证明任何变量替换的合理性，并仔细处理端点行为。然后，检验边界条件 $F_{X}(0) = 0$ 和 $F_{X}(1) = 1$。将最终的累积分布函数表示为单个闭式解析表达式。无需进行数值舍入。", "solution": "问题陈述已经过验证，被认为是有效的。这是一个基于成熟的随机过程理论的良定数学问题。所有提供的信息都是准确且自洽的。\n\n我们的任务是计算一个随机变量 $X$ 的累积分布函数 (CDF) $F_{X}(x)$，该随机变量在区间 $(0,1)$ 上服从反正弦分布。其概率密度函数 (PDF) 为：\n$$f_{X}(x) = \\frac{1}{\\pi \\sqrt{x(1-x)}}, \\quad x \\in (0,1)$$\nCDF 定义为 $F_{X}(x) = \\mathbb{P}(X \\leq x)$。对于任意 $x \\in [0,1]$，这由 PDF 从 $0$ 到 $x$ 的积分给出：\n$$F_{X}(x) = \\int_{0}^{x} f_{X}(u) \\, du = \\int_{0}^{x} \\frac{1}{\\pi \\sqrt{u(1-u)}} \\, du$$\n当 $x>0$ 时，该积分在下限 $u=0$ 处是反常积分；当 $x=1$ 时，在上限 $u=x$ 处也是反常积分，但它是收敛的。我们着手计算它。\n\n被积函数的形式，特别是 $\\sqrt{u(1-u)}$ 这一项，提示我们使用三角换元法。我们引入变量替换 $u = \\sin^2(\\theta)$。选择此替换是因为它可以通过毕达哥拉斯恒等式 $\\cos^2(\\theta) + \\sin^2(\\theta) = 1$ 简化平方根下的表达式。\n\n微分 $du$ 通过对 $u$ 关于 $\\theta$ 求导得到：\n$$du = \\frac{d}{d\\theta}(\\sin^2(\\theta)) \\, d\\theta = 2 \\sin(\\theta) \\cos(\\theta) \\, d\\theta$$\n\n接下来，我们必须将积分限从变量 $u$ 变换到新变量 $\\theta$。\n积分下限是 $u=0$。代入我们的变换式，得到 $0 = \\sin^2(\\theta)$，这意味着 $\\sin(\\theta)=0$。我们选择 $\\theta=0$。\n积分上限是 $u=x$。这给出 $x = \\sin^2(\\theta)$，意味着 $\\sin(\\theta) = \\sqrt{x}$。我们选择主值，因此 $\\theta = \\arcsin(\\sqrt{x})$。\n当 $u$ 的范围从 $0$ 到 $x \\in [0,1]$ 时，我们选择的变量 $\\theta$ 的范围从 $0$ 到 $\\arcsin(\\sqrt{x})$。由于 $x \\in [0,1]$，所以 $\\sqrt{x} \\in [0,1]$，因此 $\\arcsin(\\sqrt{x})$ 位于区间 $[0, \\pi/2]$ 内。在这个区间内，$\\sin(\\theta)$ 和 $\\cos(\\theta)$ 都是非负的。\n\n现在，我们将 $u = \\sin^2(\\theta)$ 代入 $\\sqrt{u(1-u)}$ 项中：\n$$\\sqrt{u(1-u)} = \\sqrt{\\sin^2(\\theta)(1 - \\sin^2(\\theta))} = \\sqrt{\\sin^2(\\theta)\\cos^2(\\theta)} = |\\sin(\\theta)\\cos(\\theta)|$$\n如前所述，对于 $\\theta \\in [0, \\pi/2]$，有 $\\sin(\\theta) \\ge 0$ 和 $\\cos(\\theta) \\ge 0$，所以 $|\\sin(\\theta)\\cos(\\theta)| = \\sin(\\theta)\\cos(\\theta)$。\n\n现在我们可以将所有部分代回到 $F_X(x)$ 的积分中：\n$$F_{X}(x) = \\int_{u=0}^{u=x} \\frac{1}{\\pi \\sqrt{u(1-u)}} \\, du = \\int_{\\theta=0}^{\\theta=\\arcsin(\\sqrt{x})} \\frac{1}{\\pi \\sin(\\theta)\\cos(\\theta)} (2 \\sin(\\theta)\\cos(\\theta) \\, d\\theta)$$\n只要 $\\sin(\\theta)\\cos(\\theta) \\neq 0$，分子和分母中的 $\\sin(\\theta)\\cos(\\theta)$ 项就会消去。这种情况发生在积分区间的端点，而这已由反常积分的定义正确处理。表达式显著简化为：\n$$F_{X}(x) = \\frac{1}{\\pi} \\int_{0}^{\\arcsin(\\sqrt{x})} 2 \\, d\\theta$$\n现在这个积分很容易计算：\n$$F_{X}(x) = \\frac{2}{\\pi} [\\theta]_{0}^{\\arcsin(\\sqrt{x})} = \\frac{2}{\\pi} (\\arcsin(\\sqrt{x}) - 0)$$\n因此，对于 $x \\in [0,1]$，CDF 为：\n$$F_{X}(x) = \\frac{2}{\\pi} \\arcsin(\\sqrt{x})$$\n\n最后，我们按要求验证边界条件。\n对于 $x=0$：\n$$F_{X}(0) = \\frac{2}{\\pi} \\arcsin(\\sqrt{0}) = \\frac{2}{\\pi} \\arcsin(0) = \\frac{2}{\\pi} \\cdot 0 = 0$$\n这与 CDF 的定义是一致的，因为随机变量小于或等于其支撑集最小值的概率必须为 $0$。\n\n对于 $x=1$：\n$$F_{X}(1) = \\frac{2}{\\pi} \\arcsin(\\sqrt{1}) = \\frac{2}{\\pi} \\arcsin(1)$$\n$\\arcsin(1)$ 的主值是 $\\pi/2$。\n$$F_{X}(1) = \\frac{2}{\\pi} \\cdot \\frac{\\pi}{2} = 1$$\n这同样是一致的，因为随机变量小于或等于其支撑集最大值的概率必须为 $1$。\n\n推导出的表达式是区间 $[0,1]$ 上 CDF 的一个有效的闭式解析表达式。", "answer": "$$\\boxed{\\frac{2}{\\pi} \\arcsin(\\sqrt{x})}$$", "id": "3039600"}, {"introduction": "除了分布的形状，理解一个概率分布还需要掌握其关键的统计矩，例如均值和方差。本练习要求你利用积分定义以及贝塔（Beta）和伽马（Gamma）函数的性质，直接从PDF计算反正弦分布的期望值 $\\mathbb{E}[X]$ 和方差 $\\operatorname{Var}(X)$。通过计算，你将验证布朗运动期望有一半时间处于正值的直观结论，并揭示其不那么直观的方差大小 [@problem_id:3039537]。", "problem": "设 $\\{B_{t}\\}_{t \\ge 0}$ 为一个标准的一维布朗运动。考虑随机变量 $X := \\lambda\\{t \\in [0,1] : B_{t} \\ge 0\\}$，它表示在 $[0,1]$ 时间内布朗运动为非负的时间比例，其中 $\\lambda$ 表示 $\\mathbb{R}$ 上的勒贝格测度。一个经典结果（第一反正弦律）是，$X$ 在 $(0,1)$ 上的概率密度函数（pdf）为 $f(x) = \\frac{1}{\\pi \\sqrt{x(1-x)}}$。从这个概率密度函数出发，并仅使用关于欧拉贝塔函数 $B(a,b) = \\int_{0}^{1} x^{a-1}(1-x)^{b-1} \\, dx$ 和伽马函数 $\\Gamma(z)$ 的基本定义和事实，完成以下任务：\n\n1. 通过将 $f(x)$ 与贝塔分布的概率密度函数进行比较，确定 $X$ 在 $[0,1]$ 上的分布。通过与 $B(a,b)$ 相关的归一化常数来证明你的结论。\n\n2. 不要使用贝塔分布的均值或方差的预记公式，直接从积分定义 $\\mathbb{E}[X] = \\int_{0}^{1} x f(x) \\, dx$ 和 $\\mathbb{E}[X^{2}] = \\int_{0}^{1} x^{2} f(x) \\, dx$ 以及标准的贝塔-伽马恒等式来计算 $\\mathbb{E}[X]$ 和 $\\operatorname{Var}(X)$。你的推理过程应明确，并从这些积分定义开始。\n\n以精确形式给出你的最终答案，即数对 $\\big(\\mathbb{E}[X], \\operatorname{Var}(X)\\big)$，不要四舍五入。", "solution": "该问题提法明确，具有科学依据，并提供了确定随机变量 $X$ 的分布律及其前两阶矩所需的所有信息。我们开始进行解答。\n\n问题要求完成两项任务。第一，确定随机变量 $X$ 的概率分布，该变量表示标准一维布朗运动 $\\{B_{t}\\}_{t \\ge 0}$ 在时间区间 $[0,1]$ 上为非负的时间比例。第二，使用基本积分定义计算期望 $\\mathbb{E}[X]$ 和方差 $\\operatorname{Var}(X)$。\n\n$X$ 的给定概率密度函数（pdf）为 $f(x) = \\frac{1}{\\pi \\sqrt{x(1-x)}}$，其中 $x \\in (0,1)$。\n\n第一部分：确定 X 的分布律\n\n具有参数 $\\alpha > 0$ 和 $\\beta > 0$ 的贝塔分布随机变量的概率密度函数的一般形式为\n$$f_{\\text{Beta}}(x; \\alpha, \\beta) = \\frac{x^{\\alpha-1}(1-x)^{\\beta-1}}{B(\\alpha, \\beta)}$$\n其中 $x \\in (0,1)$，$B(\\alpha, \\beta)$ 是作为归一化常数的欧拉贝塔函数。贝塔函数的定义为 $B(\\alpha, \\beta) = \\int_{0}^{1} t^{\\alpha-1}(1-t)^{\\beta-1} \\, dt$。\n\n我们已知 $X$ 的概率密度函数为 $f(x) = \\frac{1}{\\pi \\sqrt{x(1-x)}}$。我们可以重写此函数以匹配贝塔概率密度函数的形式：\n$$f(x) = \\frac{1}{\\pi} (x(1-x))^{-1/2} = \\frac{1}{\\pi} x^{-1/2} (1-x)^{-1/2}$$\n通过将指数与一般形式 $x^{\\alpha-1}(1-x)^{\\beta-1}$ 进行比较，我们可以确定参数 $\\alpha$ 和 $\\beta$：\n•  $\\alpha - 1 = -1/2 \\implies \\alpha = 1 - 1/2 = 1/2$\n•  $\\beta - 1 = -1/2 \\implies \\beta = 1 - 1/2 = 1/2$\n这表明 $X$ 服从参数为 $\\alpha = 1/2$ 和 $\\beta = 1/2$ 的贝塔分布，即 $X \\sim \\text{Beta}(1/2, 1/2)$。这个特定的分布也称为反正弦分布。\n\n为确认此识别，我们必须验证给定概率密度函数中的归一化常数 $\\frac{1}{\\pi}$ 确实等于 $\\frac{1}{B(1/2, 1/2)}$。我们使用贝塔函数和伽马函数 $\\Gamma(z)$ 之间的基本关系：\n$$B(a,b) = \\frac{\\Gamma(a)\\Gamma(b)}{\\Gamma(a+b)}$$\n对于我们的参数 $a=1/2$ 和 $b=1/2$，我们有：\n$$B(1/2, 1/2) = \\frac{\\Gamma(1/2)\\Gamma(1/2)}{\\Gamma(1/2 + 1/2)} = \\frac{(\\Gamma(1/2))^2}{\\Gamma(1)}$$\n使用伽马函数的熟知值 $\\Gamma(1/2) = \\sqrt{\\pi}$ 和 $\\Gamma(1) = 0! = 1$，我们得到：\n$$B(1/2, 1/2) = \\frac{(\\sqrt{\\pi})^2}{1} = \\pi$$\n因此，归一化常数为 $\\frac{1}{B(1/2, 1/2)} = \\frac{1}{\\pi}$，这与给定概率密度函数 $f(x)$ 中的常数完全匹配。这证实了 $X$ 的分布律是参数为 $(\\alpha, \\beta) = (1/2, 1/2)$ 的贝塔分布。\n\n第二部分：计算期望和方差\n\n我们被要求直接从积分定义出发计算 $\\mathbb{E}[X]$ 和 $\\operatorname{Var}(X)$，而不使用贝塔分布均值和方差的标准公式。\n\n首先，我们计算期望 $\\mathbb{E}[X]$：\n$$\\mathbb{E}[X] = \\int_{-\\infty}^{\\infty} x f(x) \\, dx = \\int_{0}^{1} x f(x) \\, dx$$\n代入 $f(x)$ 的表达式：\n$$\\mathbb{E}[X] = \\int_{0}^{1} x \\left( \\frac{1}{\\pi \\sqrt{x(1-x)}} \\right) \\, dx = \\frac{1}{\\pi} \\int_{0}^{1} \\frac{x}{\\sqrt{x}\\sqrt{1-x}} \\, dx = \\frac{1}{\\pi} \\int_{0}^{1} \\frac{\\sqrt{x}}{\\sqrt{1-x}} \\, dx$$\n我们将被积函数重写为 $x^{a-1}(1-x)^{b-1}$ 的幂形式：\n$$\\mathbb{E}[X] = \\frac{1}{\\pi} \\int_{0}^{1} x^{1/2} (1-x)^{-1/2} \\, dx$$\n指数对应于 $a-1 = 1/2 \\implies a=3/2$ 和 $b-1=-1/2 \\implies b=1/2$。因此，该积分为贝塔函数 $B(3/2, 1/2)$。\n$$\\mathbb{E}[X] = \\frac{1}{\\pi} B(3/2, 1/2)$$\n使用贝塔-伽马恒等式：\n$$B(3/2, 1/2) = \\frac{\\Gamma(3/2)\\Gamma(1/2)}{\\Gamma(3/2 + 1/2)} = \\frac{\\Gamma(3/2)\\Gamma(1/2)}{\\Gamma(2)}$$\n使用递推关系 $\\Gamma(z+1)=z\\Gamma(z)$，我们有 $\\Gamma(3/2) = \\Gamma(1/2+1) = \\frac{1}{2}\\Gamma(1/2)$。并且，$\\Gamma(2) = 1! = 1$。\n$$B(3/2, 1/2) = \\frac{(\\frac{1}{2}\\Gamma(1/2))\\Gamma(1/2)}{1} = \\frac{1}{2}(\\Gamma(1/2))^2 = \\frac{1}{2}(\\sqrt{\\pi})^2 = \\frac{\\pi}{2}$$\n将此结果代回 $\\mathbb{E}[X]$ 的表达式中：\n$$\\mathbb{E}[X] = \\frac{1}{\\pi} \\left( \\frac{\\pi}{2} \\right) = \\frac{1}{2}$$\n\n接下来，我们计算二阶矩 $\\mathbb{E}[X^2]$，这是计算方差所必需的。\n$$\\mathbb{E}[X^2] = \\int_{0}^{1} x^2 f(x) \\, dx = \\int_{0}^{1} x^2 \\left( \\frac{1}{\\pi \\sqrt{x(1-x)}} \\right) \\, dx = \\frac{1}{\\pi} \\int_{0}^{1} x^{2 - 1/2} (1-x)^{-1/2} \\, dx$$\n$$\\mathbb{E}[X^2] = \\frac{1}{\\pi} \\int_{0}^{1} x^{3/2} (1-x)^{-1/2} \\, dx$$\n指数对应于 $a-1 = 3/2 \\implies a=5/2$ 和 $b-1=-1/2 \\implies b=1/2$。因此，该积分为贝塔函数 $B(5/2, 1/2)$。\n$$\\mathbb{E}[X^2] = \\frac{1}{\\pi} B(5/2, 1/2)$$\n使用贝塔-伽马恒等式：\n$$B(5/2, 1/2) = \\frac{\\Gamma(5/2)\\Gamma(1/2)}{\\Gamma(5/2 + 1/2)} = \\frac{\\Gamma(5/2)\\Gamma(1/2)}{\\Gamma(3)}$$\n重复使用 $\\Gamma(z+1)=z\\Gamma(z)$，我们有 $\\Gamma(5/2) = \\frac{3}{2}\\Gamma(3/2) = \\frac{3}{2} \\cdot \\frac{1}{2}\\Gamma(1/2) = \\frac{3}{4}\\Gamma(1/2)$。并且，$\\Gamma(3) = 2! = 2$。\n$$B(5/2, 1/2) = \\frac{(\\frac{3}{4}\\Gamma(1/2))\\Gamma(1/2)}{2} = \\frac{3}{8}(\\Gamma(1/2))^2 = \\frac{3}{8}(\\sqrt{\\pi})^2 = \\frac{3\\pi}{8}$$\n将此结果代回 $\\mathbb{E}[X^2]$ 的表达式中：\n$$\\mathbb{E}[X^2] = \\frac{1}{\\pi} \\left( \\frac{3\\pi}{8} \\right) = \\frac{3}{8}$$\n\n最后，我们使用公式 $\\operatorname{Var}(X) = \\mathbb{E}[X^2] - (\\mathbb{E}[X])^2$ 计算方差。\n$$\\operatorname{Var}(X) = \\frac{3}{8} - \\left(\\frac{1}{2}\\right)^2 = \\frac{3}{8} - \\frac{1}{4} = \\frac{3}{8} - \\frac{2}{8} = \\frac{1}{8}$$\n期望和方差分别为 $\\mathbb{E}[X] = 1/2$ 和 $\\operatorname{Var}(X) = 1/8$。", "answer": "$$\n\\boxed{\\begin{pmatrix} \\frac{1}{2} & \\frac{1}{8} \\end{pmatrix}}\n$$", "id": "3039537"}, {"introduction": "当理论定律能够用于解释真实或模拟数据时，其威力才能得以彰显。最后一个练习将带你从纯粹的计算走向计算科学，指导你基于概率积分变换，实现一个针对反正弦定律的诊断检验。通过模拟布朗运动路径并应用反正弦CDF，你将学会如何从统计上验证一个随机过程是否遵循这一反直觉的原理 [@problem_id:3039578]。", "problem": "您将实现并应用一个基于反正弦累积分布函数的原则性诊断方法，以检验离散化布朗运动的模拟时间比例是否表现得如同从参数为 $\\tfrac{1}{2}$ 和 $\\tfrac{1}{2}$ 的贝塔分布中抽取的样本。您的程序必须是完全确定性的。\n\n起始点与核心事实：\n- 令 $\\{B_t\\}_{t \\in [0,1]}$ 为一个标准布朗运动，满足 $B_0 = 0$，其特征是具有独立的、均值为 $0$ 且方差等于时间增量的高斯增量。同时，考虑一个带漂移 $\\mu \\in \\mathbb{R}$ 的布朗运动，定义为 $X_t = \\mu t + B_t$。\n- 反正弦定律指出，对于标准布朗运动（即 $\\mu = 0$），在 $[0,1]$ 时间内过程处于零以上的时间比例服从参数为 $(\\tfrac{1}{2}, \\tfrac{1}{2})$ 的贝塔分布。请将此作为模拟比例的零模型。\n- 参数为 $(\\tfrac{1}{2}, \\tfrac{1}{2})$ 的贝塔分布在 $x \\in (0,1)$ 上的密度函数为 $f(x) = \\dfrac{1}{\\pi \\sqrt{x(1-x)}}$，在 $x \\in [0,1]$ 上的累积分布函数为 $F(x) = \\dfrac{2}{\\pi} \\arcsin(\\sqrt{x})$。\n- 概率积分变换指出，如果一个随机变量 $X$ 具有连续的累积分布函数 $F$，那么 $U = F(X)$ 在 $[0,1]$ 上服从均匀分布。\n- 用于检验样本是否服从 $[0,1]$ 上均匀分布的单样本拟合优度柯尔莫哥洛夫-斯米尔诺夫 (KS) 统计量定义为\n$$\nD_n = \\sup_{u \\in [0,1]} \\left| F_n(u) - u \\right|,\n$$\n其中 $F_n$ 是独立同分布样本 $\\{U_i\\}_{i=1}^{n}$ 的经验累积分布函数。\n\n需要实现的任务：\n1. 样本路径的模拟。对于给定的整数 $N \\ge 1$ 和 $M \\ge 1$ 以及漂移 $\\mu \\in \\mathbb{R}$，使用一个包含 $M$ 个步长的等距网格（时间步长 $\\Delta t = 1/M$）在 $[0,1]$ 上模拟 $N$ 条独立的带漂移布朗运动的离散时间路径。对于每条路径：\n   - 生成增量 $\\Delta X_k = \\mu \\Delta t + \\sqrt{\\Delta t} Z_k$，其中 $k = 1, \\dots, M$，$Z_k$ 是独立的标准正态随机变量。\n   - 计算部分和 $X_{t_k} = \\sum_{j=1}^{k} \\Delta X_j$，其中 $k = 1, \\dots, M$。\n   - 计算 $X_{t_k} > 0$ 的网格时间点的样本比例 $P$，即 $P = \\frac{1}{M} \\sum_{k=1}^{M} \\mathbf{1}\\{X_{t_k} > 0\\}$。\n   - 重复此过程以获得 $N$ 个比例 $\\{P_i\\}_{i=1}^{N}$。使用下面指定的固定随机种子以确保确定性。\n2. 反正弦变换诊断。使用反正弦累积分布函数 $F(x) = \\dfrac{2}{\\pi} \\arcsin(\\sqrt{x})$，通过 $U_i = F(P_i)$（$i = 1, \\dots, N$）对比例进行变换。在零假设（即比例服从参数为 $(\\tfrac{1}{2}, \\tfrac{1}{2})$ 的贝塔分布）下，变换后的值 $\\{U_i\\}$ 应近似于在 $[0,1]$ 上独立同分布的均匀分布。\n3. 拟合优度度量。计算单样本柯尔莫哥洛夫-斯米尔诺夫统计量 $D_n$，该统计量用于比较 $\\{U_i\\}_{i=1}^{N}$ 的经验累积分布函数与 $[0,1]$ 上的均匀累积分布函数 $u \\mapsto u$。\n4. 确定性要求。使用基础随机种子 $314159$，并对于索引为 $j = 0, 1, 2, \\dots$ 的每个测试用例，使用派生种子 $314159 + 1000 \\cdot j$ 来初始化该测试用例的随机数生成器，以确保结果是可复现的且与执行顺序无关。\n\n测试套件：\n您必须对以下五个参数集 $(N, M, \\mu)$ 中的每一个进行评估并报告柯尔莫哥洛夫-斯米尔诺夫统计量 $D_n$：\n- 情况1（理想路径，零模型，中等大样本）：$(N, M, \\mu) = (4000, 1024, 0.0)$。\n- 情况2（边界条件：粗糙时间网格，较小样本）：$(N, M, \\mu) = (800, 32, 0.0)$。\n- 情况3（边界条件：非2的幂次网格，零模型）：$(N, M, \\mu) = (1500, 127, 0.0)$。\n- 情况4（备择模型，正漂移）：$(N, M, \\mu) = (4000, 1024, 0.25)$。\n- 情况5（备择模型，负漂移）：$(N, M, \\mu) = (4000, 1024, -0.25)$。\n\n实现约束和输出规格：\n- 您的程序必须模拟这些过程，通过反正弦累积分布函数计算变换后的值 $\\{U_i\\}$，为每个测试用例计算柯尔莫哥洛夫-斯米尔诺夫统计量 $D_n$，并按顺序返回这五个情况的结果。\n- 您的程序不得要求任何用户输入，也不得访问任何外部文件或网络。\n- 为避免过多的内存使用，您可以分批进行模拟，但对于给定的种子，最终结果必须完全相同。\n- 最终输出格式：打印单行，其中包含一个列表，内含五个结果。这些结果为十进制数，四舍五入到小数点后六位，用逗号分隔，并用方括号括起来，例如，“[0.012345,0.067890,0.000123,0.045678,0.098765]”。", "solution": "问题陈述已经过仔细验证，并被确定为有效。它在科学上基于随机过程和统计学理论，所有必需的参数和方法都已明确指定，问题是适定的，并且其表述是客观的。任务是实现一个数值实验来检验布朗运动的反正弦定律。\n\n解决方案通过为每个指定的测试用例实现一个四步诊断程序来进行。其理论基础和算法实现详述如下。\n\n**1. 理论框架**\n\n该问题涉及时间区间 $[0, 1]$ 上的带漂移 $\\mu \\in \\mathbb{R}$ 的布朗运动，由随机微分方程 $dX_t = \\mu dt + dB_t$ 定义，初始条件为 $X_0 = 0$。这里，$\\{B_t\\}_{t \\in [0,1]}$ 是一个标准布朗运动。\n\n这个问题的一个基石是 Lévy 的反正弦定律。对于标准布朗运动（即 $\\mu=0$），该定律指出，过程处于零以上的时间比例，记为 $P = \\text{Leb}\\{t \\in [0,1] : B_t > 0\\}$，是一个服从反正弦分布的随机变量。该分布等价于形状参数为 $(\\frac{1}{2}, \\frac{1}{2})$ 的贝塔分布。其在 $x \\in (0,1)$ 上的概率密度函数 (PDF) 是 $f(x) = \\frac{1}{\\pi\\sqrt{x(1-x)}}$，其在 $x \\in [0,1]$ 上的累积分布函数 (CDF) 是 $F(x) = \\frac{2}{\\pi} \\arcsin(\\sqrt{x})$。\n\n诊断检验建立在概率积分变换 (PIT) 的基础上。PIT 指出，如果一个随机变量 $X$ 具有连续的累积分布函数 $F_X$，那么变换后的随机变量 $U = F_X(X)$ 在 $[0,1]$ 上服从均匀分布。因此，如果模拟的比例 $\\{P_i\\}$ 确实是从反正弦分布中抽取的样本，那么变换后的值 $\\{U_i = F(P_i)\\}$ 应构成一个来自标准均匀分布 $U(0,1)$ 的样本。\n\n为了量化变换后样本 $\\{U_i\\}$ 与均匀分布的一致性，我们使用单样本柯尔莫哥洛夫-斯米尔诺夫 (KS) 检验。KS 统计量 $D_n$ 衡量了样本的经验累积分布函数 (ECDF) $F_n(u)$ 与参考分布的累积分布函数（在此情况下为 $G(u) = u$）之间的最大绝对差。该统计量正式定义为：\n$$D_n = \\sup_{u \\in [0,1]} |F_n(u) - u|$$\n较小的 $D_n$ 值表示与参考分布拟合良好，而较大的值则表明样本并非从该分布中抽取。\n\n**2. 算法实现**\n\n整体算法模拟过程的路径，计算相关统计量，并执行拟合优度检验。对五个参数集 $(N, M, \\mu)$ 中的每一个都执行此操作。\n\n**步骤 2.1：样本路径的模拟**\n对于每个具有参数 $N$、$M$ 和 $\\mu$ 的测试用例，我们在一个离散化的时间网格上模拟 $N$ 条过程 $X_t$ 的独立路径。时间区间 $[0,1]$ 被划分为 $M$ 个大小为 $\\Delta t = 1/M$ 的步长。路径使用 Euler-Maruyama 格式进行近似。在时间 $t_k = k\\Delta t$ 的位置由其增量之和给出：\n$$X_{t_k} = \\sum_{j=1}^{k} \\Delta X_j$$\n其中增量 $\\Delta X_j$ 作为独立随机变量生成：\n$$\\Delta X_j = \\mu \\Delta t + \\sqrt{\\Delta t} Z_j$$\n这里，$\\{Z_j\\}_{j=1}^M$ 是从标准正态分布 $Z_j \\sim \\mathcal{N}(0,1)$ 中抽取的独立样本。为确保可复现性，对于第 $j$ 个测试用例（0-索引），随机数生成器使用种子 $314159 + 1000 \\cdot j$ 进行初始化。\n\n**步骤 2.2：正值时间比例的计算**\n对于 $N$ 条模拟路径中的每一条，我们计算路径值为正的时间步长的比例。对于第 $i$ 条路径，该比例 $P_i$ 计算如下：\n$$P_i = \\frac{1}{M} \\sum_{k=1}^{M} \\mathbf{1}\\{X_{t_k}^{(i)} > 0\\}$$\n其中 $\\mathbf{1}\\{\\cdot\\}$ 是指示函数。此过程产生一个包含 $N$ 个比例的样本 $\\{P_i\\}_{i=1}^N$。\n\n**步骤 2.3：反正弦变换诊断**\n样本中的每个比例 $P_i$ 都使用反正弦累积分布函数进行变换：\n$$U_i = F(P_i) = \\frac{2}{\\pi} \\arcsin(\\sqrt{P_i})$$\n在零假设（即 $\\mu=0$ 且离散化足够精细）下，得到的样本 $\\{U_i\\}_{i=1}^N$ 应近似于在 $[0,1]$ 上独立均匀分布。\n\n**步骤 2.4：拟合优度度量计算**\n最后一步是计算变换后样本 $\\{U_i\\}_{i=1}^N$ 相对于标准均匀分布的 KS 统计量 $D_N$。这可以通过使用 `scipy.stats.kstest` 函数来完成，该函数为计算 $D_N$ 提供了一个稳健且标准的实现。\n\n对五个测试用例中的每一个都重复整个过程。情况 1、2 和 3 使用 $\\mu=0$，预计将产生较小的 KS 统计量，这与反正弦定律（零模型）一致。情况 4 和 5 使用非零漂移（分别为 $\\mu=0.25$ 和 $\\mu=-0.25$），对于这些情况，反正弦定律不成立。因此，对于这些备择模型，$P_i$ 的分布将是偏斜的，变换后的 $U_i$ 值将不是均匀的，我们预计会得到显著更大的 KS 统计量，表明拒绝零模型。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\nfrom scipy.stats import kstest\n\ndef compute_ks_for_case(N, M, mu, seed):\n    \"\"\"\n    Simulates Brownian motion paths and computes the KS statistic.\n\n    Args:\n        N (int): Number of independent paths to simulate.\n        M (int): Number of time steps for discretization.\n        mu (float): The drift of the Brownian motion.\n        seed (int): The seed for the random number generator.\n\n    Returns:\n        float: The calculated Kolmogorov-Smirnov statistic.\n    \"\"\"\n    # Initialize the random number generator for reproducibility.\n    # The default_rng is the modern, recommended approach in NumPy.\n    rng = np.random.default_rng(seed)\n\n    # Define the time step for the discretization.\n    dt = 1.0 / M\n\n    # Step 1: Simulate N paths with M steps each.\n    # We generate all random numbers at once for efficiency.\n    # Z is an N x M array of standard normal random variables.\n    Z = rng.standard_normal(size=(N, M))\n    \n    # Calculate the increments for each step of each path.\n    # dX = mu*dt + sqrt(dt)*Z\n    dX = mu * dt + np.sqrt(dt) * Z\n\n    # Form the paths by taking the cumulative sum of increments along the time axis.\n    # X is an N x M array where each row represents a full path.\n    X = np.cumsum(dX, axis=1)\n\n    # Step 2: Compute the proportion of time each path is positive.\n    # Count the number of time points k where X_{t_k} > 0 for each path.\n    positive_counts = np.sum(X > 0, axis=1)\n    \n    # The proportion P is the count divided by the total number of steps.\n    P = positive_counts / M\n\n    # Step 3: Apply the arcsine transform (Probability Integral Transform).\n    # The CDF of the Beta(1/2, 1/2) distribution is F(x) = (2/pi) * arcsin(sqrt(x)).\n    # We transform the proportions P into a sample U, which should be uniform on [0,1]\n    # under the null hypothesis (mu=0).\n    # The input to np.sqrt is guaranteed to be in [0, 1].\n    U = (2.0 / np.pi) * np.arcsin(np.sqrt(P))\n\n    # Step 4: Compute the one-sample Kolmogorov-Smirnov statistic.\n    # We test the sample U against a standard uniform distribution ('uniform').\n    # kstest returns a tuple (statistic, pvalue); we only need the statistic.\n    ks_statistic, _ = kstest(U, 'uniform')\n    \n    return ks_statistic\n\ndef solve():\n    \"\"\"\n    Main function to run the test suite and print results.\n    \"\"\"\n    # Define the test cases from the problem statement as a list of tuples.\n    # Each tuple is (N, M, mu).\n    test_cases = [\n        (4000, 1024, 0.0),   # Case 1: Null model, large sample\n        (800, 32, 0.0),      # Case 2: Null model, coarse grid\n        (1500, 127, 0.0),    # Case 3: Null model, non-power-of-two grid\n        (4000, 1024, 0.25),  # Case 4: Alternative model, positive drift\n        (4000, 1024, -0.25), # Case 5: Alternative model, negative drift\n    ]\n\n    base_seed = 314159\n    results = []\n\n    # Iterate through the test cases, computing the KS statistic for each.\n    for j, (N, M, mu) in enumerate(test_cases):\n        # The seed for each case is derived deterministically as specified.\n        seed = base_seed + 1000 * j\n        result = compute_ks_for_case(N, M, mu, seed)\n        results.append(result)\n\n    # Format the results to six decimal places and print in the required format.\n    formatted_results = [f\"{res:.6f}\" for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\n# Execute the main function.\nsolve()\n\n```", "id": "3039578"}]}