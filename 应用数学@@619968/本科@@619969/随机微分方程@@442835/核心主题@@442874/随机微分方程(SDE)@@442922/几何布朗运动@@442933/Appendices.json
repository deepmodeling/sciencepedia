{"hands_on_practices": [{"introduction": "在金融建模中，我们不仅关心基础资产本身，还经常需要分析其衍生品或相关投资组合的动态。这些金融工具的价值通常是基础资产价格 $S_t$ 的某个函数，例如 $Y_t = (S_t)^k$ 可以代表一种杠杆化投资。本练习将引导你使用随机微积分中的核心工具——伊藤引理（Itô's lemma），来推导这个新过程 $Y_t$ 所遵循的随机微分方程 (SDE)，从而揭示经过非线性变换后，几何布朗运动的漂移项和波动项会如何改变。[@problem_id:1304922]", "problem": "在金融数学中，一个不支付股息的股票价格 $S_t$ 的常用模型是几何布朗运动 (GBM)，其动态由以下随机微分方程 (SDE) 描述：\n$$dS_t = \\mu S_t dt + \\sigma S_t dW_t$$\n这里，$\\mu$ 是恒定的预期回报率（漂移率），$\\sigma$ 是恒定的波动率，$W_t$ 是一个标准维纳过程。\n\n考虑一个衍生证券，其在时间 $t$ 的价值由过程 $Y_t = (S_t)^k$ 给出，其中 $k$ 是一个非零实常数。这代表了对标的资产的杠杆头寸或部分所有权。可以证明，过程 $Y_t$ 也遵循几何布朗运动，其随机微分方程形式为：\n$$dY_t = \\mu_Y Y_t dt + \\sigma_Y Y_t dW_t$$\n你的任务是确定过程 $Y_t$ 的新漂移系数 $\\mu_Y$ 和新波动率系数 $\\sigma_Y$。\n\n请用一个行矩阵表示你的答案，该矩阵按顺序包含 $\\mu_Y$ 和 $\\sigma_Y$ 的表达式，并用 $\\mu$、$\\sigma$ 和 $k$ 表示。", "solution": "我们已知 $S_{t}$ 遵循几何布朗运动的随机微分方程：\n$$\ndS_{t}=\\mu S_{t}\\,dt+\\sigma S_{t}\\,dW_{t}.\n$$\n定义 $Y_{t}=f(S_{t})$，其中 $f(s)=s^{k}$ 且 $k\\neq 0$。根据伊藤引理，对于二阶连续可微函数 $f$，\n$$\ndY_{t}=f'(S_{t})\\,dS_{t}+\\frac{1}{2}f''(S_{t})\\,(dS_{t})^{2},\n$$\n使用随机微积分恒等式 $(dW_{t})^{2}=dt$，$dt\\,dW_{t}=0$ 和 $(dt)^{2}=0$。\n\n计算导数：\n$$\nf'(s)=k s^{k-1},\\qquad f''(s)=k(k-1)s^{k-2}.\n$$\n从给定的随机微分方程计算 $(dS_{t})^{2}$：\n$$\n(dS_{t})^{2}=(\\mu S_{t}\\,dt+\\sigma S_{t}\\,dW_{t})^{2}=(\\sigma S_{t}\\,dW_{t})^{2}=\\sigma^{2}S_{t}^{2}\\,dt.\n$$\n代入伊藤公式：\n\\begin{align*}\ndY_{t}\n=k S_{t}^{k-1}(\\mu S_{t}\\,dt+\\sigma S_{t}\\,dW_{t})+\\frac{1}{2}k(k-1)S_{t}^{k-2}\\left(\\sigma^{2}S_{t}^{2}\\,dt\\right)\\\\\n=k\\mu S_{t}^{k}\\,dt+k\\sigma S_{t}^{k}\\,dW_{t}+\\frac{1}{2}k(k-1)\\sigma^{2}S_{t}^{k}\\,dt\\\\\n=\\left(k\\mu+\\frac{1}{2}k(k-1)\\sigma^{2}\\right)S_{t}^{k}\\,dt+k\\sigma S_{t}^{k}\\,dW_{t}.\n\\end{align*}\n由于 $Y_{t}=S_{t}^{k}$，我们可以写作\n$$\ndY_{t}=\\mu_{Y}Y_{t}\\,dt+\\sigma_{Y}Y_{t}\\,dW_{t},\n$$\n其系数可确定为\n$$\n\\mu_{Y}=k\\mu+\\frac{1}{2}k(k-1)\\sigma^{2},\\qquad \\sigma_{Y}=k\\sigma.\n$$\n因此，以 $(\\mu_{Y},\\sigma_{Y})$ 的顺序表示为行矩阵，结果是\n$$\n\\begin{pmatrix}\nk\\mu+\\frac{1}{2}k(k-1)\\sigma^{2}  k\\sigma\n\\end{pmatrix}.\n$$", "answer": "$$\\boxed{\\begin{pmatrix}k\\mu+\\frac{1}{2}k(k-1)\\sigma^{2}  k\\sigma\\end{pmatrix}}$$", "id": "1304922"}, {"introduction": "理解几何布朗运动不仅在于掌握其微分形式，还在于洞悉其在未来某一时刻的价格分布特性。虽然未来价格的期望值 $E[S_T]$ 是一个重要指标，但它并不能完全反映价格的典型表现，尤其是在存在偏态的对数正态分布中。本练习将带你计算未来股价 $S_T$ 的中位数，它代表了有50%概率高于或低于的价位，通过将其与期望值对比，你会更深刻地理解几何布朗运动的非对称风险特征。[@problem_id:1304952]", "problem": "一位金融分析师正在使用量化金融中的一个标准模型来模拟股票价格的演变。该模型被称为几何布朗运动 (GBM)，它描述了在任意时间 $t \\ge 0$ 的股票价格 $S_t$。在未来时间 $T$ 的价格由以下公式给出：\n$$S_T = S_0 \\exp\\left( \\left(\\mu - \\frac{\\sigma^2}{2}\\right)T + \\sigma W_T \\right)$$\n这里，$S_0$ 是股票在时间 $t=0$ 时的已知初始价格。参数 $\\mu$ 和 $\\sigma$ 是正常数，分别代表股票的预期年回报率（漂移）及其年化波动率。项 $W_T$ 代表一个从均值为 0、方差为 $T$ 的正态分布中抽取的随机变量。\n\n该分析师对风险管理感兴趣，并希望确定在时间 $T$ 时股票价格的*中位数*。中位数是指股票价格高于或低于该水平的概率相等的那个价格水平。\n\n请找到股票价格 $S_T$ 的中位数关于 $S_0$、$\\mu$、$\\sigma$ 和 $T$ 的闭式解析表达式。", "solution": "我们已知在时间 $T$ 时股票价格的 GBM 解为：\n$$S_{T} = S_{0}\\exp\\left(\\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T + \\sigma W_{T}\\right),$$\n其中 $W_{T}$ 服从均值为 0、方差为 $T$ 的正态分布。定义 $Y = \\ln S_{T}$。则\n$$Y = \\ln S_{0} + \\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T + \\sigma W_{T}.$$\n由于 $W_{T} \\sim \\mathcal{N}(0,T)$，我们可以写成 $W_{T} = \\sqrt{T}\\,Z$，其中 $Z \\sim \\mathcal{N}(0,1)$。因此，$Y$ 服从正态分布，其均值和方差为\n$$m = \\ln S_{0} + \\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T, \\qquad v = \\sigma^{2}T.$$\n$S_{T}$ 的中位数 $m_{S}$ 定义为 $\\mathbb{P}(S_{T} \\le m_{S}) = \\frac{1}{2}$。这等价于\n$$\\mathbb{P}(Y \\le \\ln m_{S}) = \\frac{1}{2}.$$\n将 $Y$ 标准化得到\n$$\\mathbb{P}\\!\\left(\\frac{Y - m}{\\sigma\\sqrt{T}} \\le \\frac{\\ln m_{S} - m}{\\sigma\\sqrt{T}}\\right) = \\frac{1}{2}.$$\n由于 $\\frac{Y - m}{\\sigma\\sqrt{T}} \\sim \\mathcal{N}(0,1)$，其在 0 处的累积分布函数等于 $\\frac{1}{2}$。因此，达到中位数的唯一值是在标准化阈值等于 0 时，即，\n$$\\frac{\\ln m_{S} - m}{\\sigma\\sqrt{T}} = 0 \\quad \\Rightarrow \\quad \\ln m_{S} = m.$$\n对两边取指数，得到\n$$m_{S} = \\exp(m) = \\exp\\!\\left(\\ln S_{0} + \\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T\\right) = S_{0}\\exp\\!\\left(\\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T\\right).$$\n因此，$S_{T}$ 的中位数的闭式表达式为 $S_{0}\\exp\\!\\left(\\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T\\right)$。", "answer": "$$\\boxed{S_{0}\\exp\\left(\\left(\\mu - \\frac{\\sigma^{2}}{2}\\right)T\\right)}$$", "id": "1304952"}, {"introduction": "从抽象的数学理论走向实际的量化应用，关键一步是将连续时间的随机微分方程转化为可在计算机上执行的离散时间模拟方案。本综合练习旨在建立这一桥梁，要求你推导几何布朗运动的精确模拟公式，并编写代码来验证其正确性。通过将模拟结果的统计矩（均值和方差）与理论值进行比较，你不仅能掌握蒙特卡洛模拟的核心技术，还能加深对模型理论基础的理解。[@problem_id:3056767]", "problem": "考虑一个标准布朗运动 $W_t$ 和一个几何布朗运动 $S_t$，其定义为随机微分方程 (SDE) $dS_t = \\mu S_t \\, dt + \\sigma S_t \\, dW_t$ 的唯一强解，其中 $\\mu \\in \\mathbb{R}$ 和 $\\sigma \\ge 0$ 是常数。从核心定义和伊藤公式出发，推导一个精确的单步模拟方案，该方案能从给定的 $S_t$ 和固定的步长 $\\Delta  0$ 生成 $S_{t+\\Delta}$。您的推导必须将 SDE 转换为易于积分的形式，论证增量的分布形式，并证明所得方案在 $S_t  0$ 时能保持 $S_{t+\\Delta}$ 的严格正性。使用相同的推导，求出前两阶矩 $E[S_{t+\\Delta} \\mid S_t]$ 和 $\\operatorname{Var}(S_{t+\\Delta} \\mid S_t)$ 的解析表达式，并用 $S_t$、$\\mu$、$\\sigma$ 和 $\\Delta$ 明确表示。\n\n然后，编写一个完整、可运行的程序，实现您推导的精确单步模拟方案，并在一个测试套件上凭经验验证其正确性。对于每个测试用例，生成以 $S_t$ 为条件的 $M$ 个 $S_{t+\\Delta}$ 的独立样本，计算样本均值和样本方差，并将它们与您推导出的解析均值和方差进行比较。同时验证所有模拟值都满足严格正性。为保证可复现性，使用固定的随机种子 $42$，并将样本数量设置为 $M = 200000$。\n\n在比较时，请使用以下容差：\n- 对于样本均值，要求相对误差至多为 $10^{-3}$。\n- 对于样本方差，要求相对误差至多为 $2 \\times 10^{-2}$。\n- 在任何解析方差等于 $0$ 的情况下，要求样本方差的绝对误差至多为 $10^{-10}$。\n\n您的程序应生成单行输出，其中包含一个布尔值列表，每个测试用例对应一个布尔值。当且仅当以下条件全部满足时，该布尔值为 $true$：(i) 均值比较在容差范围内通过，(ii) 方差比较在容差范围内通过，以及 (iii) 所有模拟值均为严格正数。最终输出必须是本问题末尾指定的精确格式的单行文本。\n\n测试套件参数值：\n- 用例 1：$S_t = 100$, $\\mu = 0.05$, $\\sigma = 0.2$, $\\Delta = 0.25$。\n- 用例 2：$S_t = 100$, $\\mu = 0.0$, $\\sigma = 0.2$, $\\Delta = 0.0$。\n- 用例 3：$S_t = 80$, $\\mu = 0.03$, $\\sigma = 0.0$, $\\Delta = 2.0$。\n- 用例 4：$S_t = 120$, $\\mu = -0.1$, $\\sigma = 0.3$, $\\Delta = 0.5$。\n\n最终输出格式：\n您的程序应生成单行输出，其中包含一个用方括号括起来的逗号分隔列表，例如 $[result_1, result_2, result_3, result_4]$，其中每个 $result_i$ 是一个布尔值，按上面列出的顺序对应于第 $i$ 个测试用例。", "solution": "该问题要求推导几何布朗运动 (GBM) 的精确单步模拟方案，证明其正性性质，并推导其前两阶条件矩。随后，必须提供一个实现来通过经验模拟验证这些理论结果。\n\n几何布朗运动 $S_t$ 的随机微分方程 (SDE) 如下：\n$$ dS_t = \\mu S_t \\, dt + \\sigma S_t \\, dW_t $$\n其中 $\\mu \\in \\mathbb{R}$ 是常数漂移，$\\sigma \\ge 0$ 是常数波动率，而 $W_t$ 是一个标准布朗运动。\n\n为了推导精确的模拟方案，我们首先对过程 $S_t$ 进行变换以简化 SDE。我们定义一个新过程 $X_t = f(S_t)$，其中 $f(x) = \\ln(x)$。目标是使用 Itô 公式找到 $X_t$ 的 SDE。$f(x)$ 对其参数（时间 $t$ 和状态 $x$）的偏导数是：\n$$ \\frac{\\partial f}{\\partial t} = 0, \\quad \\frac{\\partial f}{\\partial x} = \\frac{1}{x}, \\quad \\frac{\\partial^2 f}{\\partial x^2} = -\\frac{1}{x^2} $$\n$dX_t = df(t, S_t)$ 的 Itô 公式为：\n$$ dX_t = \\frac{\\partial f}{\\partial t} dt + \\frac{\\partial f}{\\partial S_t} dS_t + \\frac{1}{2} \\frac{\\partial^2 f}{\\partial S_t^2} (dS_t)^2 $$\n二次变分项 $(dS_t)^2$ 使用 Itô 乘法规则计算，其中 $(dW_t)^2 = dt$，$dt \\, dW_t = 0$ 且 $(dt)^2 = 0$：\n$$ (dS_t)^2 = (\\mu S_t \\, dt + \\sigma S_t \\, dW_t)^2 = (\\sigma S_t)^2 (dW_t)^2 = \\sigma^2 S_t^2 \\, dt $$\n将导数和 $(dS_t)^2$ 代入 $dX_t$ 的公式中：\n$$ dX_t = (0) \\cdot dt + \\frac{1}{S_t} (\\mu S_t \\, dt + \\sigma S_t \\, dW_t) + \\frac{1}{2} \\left(-\\frac{1}{S_t^2}\\right) (\\sigma^2 S_t^2 \\, dt) $$\n简化各项，我们得到：\n$$ dX_t = (\\mu \\, dt + \\sigma \\, dW_t) - \\frac{1}{2} \\sigma^2 \\, dt $$\n$$ dX_t = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) dt + \\sigma \\, dW_t $$\n$X_t$ 的这个 SDE 是一个具有恒定漂移和扩散系数的广义维纳过程，可以直接积分。从时间 $t$ 积分到 $t+\\Delta$：\n$$ \\int_t^{t+\\Delta} dX_s = \\int_t^{t+\\Delta} \\left(\\mu - \\frac{\\sigma^2}{2}\\right) ds + \\int_t^{t+\\Delta} \\sigma \\, dW_s $$\n$$ X_{t+\\Delta} - X_t = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma (W_{t+\\Delta} - W_t) $$\n标准布朗运动的增量 $W_{t+\\Delta} - W_t$ 是一个均值为 $0$、方差为 $\\Delta$ 的正态分布随机变量。我们可以将此增量写为 $\\sqrt{\\Delta}Z$，其中 $Z \\sim \\mathcal{N}(0, 1)$ 是一个标准正态随机变量。\n将 $X_t = \\ln(S_t)$ 代回方程中：\n$$ \\ln(S_{t+\\Delta}) - \\ln(S_t) = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} Z $$\n$$ \\ln(S_{t+\\Delta}) = \\ln(S_t) + \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} Z $$\n对两边取指数，得到 $S_t$ 的精确单步模拟方案：\n$$ S_{t+\\Delta} = S_t \\exp\\left( \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} Z \\right) $$\n\n为了证明在 $S_t  0$ 的条件下 $S_{t+\\Delta}$ 的严格正性，我们观察到指数函数的参数 $\\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} Z$ 是一个实值随机变量。指数函数 $\\exp(x)$ 对任何实数参数 $x$ 都是严格为正的。因此，项 $\\exp(\\dots)$ 总是大于 $0$。由于根据假设 $S_t  0$，乘积 $S_{t+\\Delta} = S_t \\cdot (\\text{一个正量})$ 也必须是严格为正的。\n\n接下来，我们推导前两阶条件矩 $E[S_{t+\\Delta} \\mid S_t]$ 和 $\\operatorname{Var}(S_{t+\\Delta} \\mid S_t)$ 的解析表达式。\n从解中可知，$S_{t+\\Delta}$ 是 $S_t$（在时间 $t$ 已知）与一个对数正态随机变量的乘积。设指数中的随机变量为 $Y = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} Z$。由于 $Z \\sim \\mathcal{N}(0, 1)$，$Y$ 是正态分布的。它的条件均值和方差是：\n$$ m \\equiv E[Y \\mid \\mathcal{F}_t] = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\sigma \\sqrt{\\Delta} E[Z] = \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta $$\n$$ s^2 \\equiv \\operatorname{Var}(Y \\mid \\mathcal{F}_t) = \\operatorname{Var}\\left(\\sigma \\sqrt{\\Delta} Z\\right) = (\\sigma \\sqrt{\\Delta})^2 \\operatorname{Var}(Z) = \\sigma^2 \\Delta $$\n因此，$Y \\sim \\mathcal{N}(m, s^2)$。我们有 $S_{t+\\Delta} = S_t e^Y$。我们使用正态变量的矩生成函数性质：如果 $Y \\sim \\mathcal{N}(m, s^2)$，那么 $E[e^{kY}] = \\exp(km + \\frac{1}{2}k^2s^2)$。\n\n$S_{t+\\Delta}$ 的条件均值是：\n$$ E[S_{t+\\Delta} \\mid S_t] = E[S_t e^Y \\mid S_t] = S_t E[e^Y] $$\n使用 $k=1$ 时的性质：\n$$ E[e^Y] = \\exp\\left(m + \\frac{s^2}{2}\\right) = \\exp\\left( \\left(\\mu - \\frac{\\sigma^2}{2}\\right) \\Delta + \\frac{\\sigma^2 \\Delta}{2} \\right) = \\exp(\\mu\\Delta) $$\n因此，条件均值是：\n$$ E[S_{t+\\Delta} \\mid S_t] = S_t e^{\\mu \\Delta} $$\n\n$S_{t+\\Delta}$ 的条件方差是 $\\operatorname{Var}(S_{t+\\Delta} \\mid S_t) = E[S_{t+\\Delta}^2 \\mid S_t] - (E[S_{t+\\Delta} \\mid S_t])^2$。\n首先，我们求二阶矩 $E[S_{t+\\Delta}^2 \\mid S_t]$：\n$$ E[S_{t+\\Delta}^2 \\mid S_t] = E[(S_t e^Y)^2 \\mid S_t] = S_t^2 E[e^{2Y}] $$\n使用 $k=2$ 时的性质：\n$$ E[e^{2Y}] = \\exp\\left(2m + \\frac{1}{2}(2^2)s^2\\right) = \\exp(2m + 2s^2) $$\n$$ E[e^{2Y}] = \\exp\\left( 2\\left(\\mu - \\frac{\\sigma^2}{2}\\right)\\Delta + 2\\sigma^2\\Delta \\right) = \\exp(2\\mu\\Delta - \\sigma^2\\Delta + 2\\sigma^2\\Delta) = \\exp(2\\mu\\Delta + \\sigma^2\\Delta) $$\n所以，$E[S_{t+\\Delta}^2 \\mid S_t] = S_t^2 e^{2\\mu\\Delta + \\sigma^2\\Delta}$。\n现在，我们计算方差：\n$$ \\operatorname{Var}(S_{t+\\Delta} \\mid S_t) = S_t^2 e^{2\\mu\\Delta + \\sigma^2\\Delta} - (S_t e^{\\mu\\Delta})^2 $$\n$$ \\operatorname{Var}(S_{t+\\Delta} \\mid S_t) = S_t^2 e^{2\\mu\\Delta} e^{\\sigma^2\\Delta} - S_t^2 e^{2\\mu\\Delta} = S_t^2 e^{2\\mu\\Delta} (e^{\\sigma^2\\Delta} - 1) $$\n至此完成了所需的推导。实现将使用这些公式进行验证。", "answer": "```python\n# The complete and runnable Python 3 code goes here.\n# Imports must adhere to the specified execution environment.\nimport numpy as np\n\ndef solve():\n    \"\"\"\n    Implements the exact one-step simulation of Geometric Brownian Motion,\n    and validates sample moments against analytic moments for given test cases.\n    \"\"\"\n    \n    # Define the test cases from the problem statement.\n    test_cases = [\n        # (S_t, mu, sigma, delta)\n        (100, 0.05, 0.2, 0.25),\n        (100, 0.0, 0.2, 0.0),\n        (80, 0.03, 0.0, 2.0),\n        (120, -0.1, 0.3, 0.5),\n    ]\n\n    # Simulation parameters\n    M = 200000\n    SEED = 42\n    \n    # Validation tolerances\n    MEAN_REL_TOL = 1e-3\n    VAR_REL_TOL = 2e-2\n    VAR_ABS_TOL = 1e-10\n\n    # Initialize a random number generator for reproducibility\n    rng = np.random.default_rng(seed=SEED)\n\n    results = []\n    for case in test_cases:\n        S_t, mu, sigma, delta = case\n\n        # 1. Calculate analytic moments\n        # E[S_{t+d}] = S_t * exp(mu*d)\n        analytic_mean = S_t * np.exp(mu * delta)\n        # Var(S_{t+d}) = S_t^2 * exp(2*mu*d) * (exp(sigma^2*d) - 1)\n        analytic_var = S_t**2 * np.exp(2 * mu * delta) * (np.exp(sigma**2 * delta) - 1)\n\n        # 2. Perform the exact simulation\n        # Generate M standard normal random variables\n        Z = rng.standard_normal(size=M)\n        \n        # Apply the exact one-step simulation formula:\n        # S_{t+d} = S_t * exp( (mu - 0.5*sigma^2)*d + sigma*sqrt(d)*Z )\n        # Using np.sqrt with a non-negative scalar `delta` is safe.\n        exponent = (mu - 0.5 * sigma**2) * delta + sigma * np.sqrt(delta) * Z\n        S_tp_delta_samples = S_t * np.exp(exponent)\n\n        # 3. Validate the simulation results\n        # (i) Positivity check\n        positivity_check = np.all(S_tp_delta_samples  0)\n        \n        # Calculate sample moments\n        sample_mean = np.mean(S_tp_delta_samples)\n        # Use ddof=1 for unbiased sample variance estimator\n        sample_var = np.var(S_tp_delta_samples, ddof=1) if M  1 else 0\n\n        # (ii) Mean comparison\n        # Since S_t  0 and exp()  0, analytic_mean is always positive.\n        mean_rel_error = np.abs(sample_mean - analytic_mean) / np.abs(analytic_mean)\n        mean_check = mean_rel_error = MEAN_REL_TOL\n        \n        # (iii) Variance comparison\n        if np.isclose(analytic_var, 0):\n            # Use absolute error for cases where variance is theoretically zero\n            # This happens if sigma = 0 or delta = 0\n            var_abs_error = np.abs(sample_var - analytic_var)\n            var_check = var_abs_error = VAR_ABS_TOL\n        else:\n            # Use relative error for non-zero variance\n            var_rel_error = np.abs(sample_var - analytic_var) / analytic_var\n            var_check = var_rel_error = VAR_REL_TOL\n\n        # Combine all checks to get the final boolean result for the case\n        case_is_valid = positivity_check and mean_check and var_check\n        results.append(case_is_valid)\n\n    # Final print statement in the exact required format (lowercase booleans)\n    formatted_results = [str(res).lower() for res in results]\n    print(f\"[{','.join(formatted_results)}]\")\n\nsolve()\n```", "id": "3056767"}]}