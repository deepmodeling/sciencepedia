{"hands_on_practices": [{"introduction": "我们从图兰定理最基础的特例——曼特尔定理 (Mantel's Theorem) 开始。这个练习通过一个关于初创公司团队协作的贴近生活的场景，让你具体感受在一个网络中为避免形成三人小团体（即 $K_3$ 或“三角形”）所能允许的最大连接数是多少。通过解决这个问题，你将对极值图论的核心思想——边密度如何强制特定子结构的存在——建立起直观的认识。[@problem_id:1551512]", "problem": "一家科技初创公司有一个由5名软件工程师组成的小团队。为了促进协作，公司鼓励工程师结对进行代码审查。我们可以将工程师之间的关系建模为一个图，其中每个工程师是一个顶点，如果对应的两位工程师工作风格兼容，则在两个顶点之间连接一条边。公司已经确定，恰好有6对工程师是兼容的。\n\n为了维护一个健康且无小圈子的工作环境，公司的人力资源部门有一项严格的政策：任意三名工程师不能全部相互兼容。\n\n根据这些信息，下列关于这个兼容性网络的陈述中，哪一个是必然正确的？\n\nA. 每位工程师拥有相同数量的兼容同事。\n\nB. 存在至少一位工程师与所有其他四位工程师都兼容。\n\nC. 这5名工程师可以被划分为两个非空子组，我们称之为X组和Y组，使得X组中的每一位工程师都与Y组中的每一位工程师兼容，并且同一子组内的任意两名工程师都不兼容。\n\nD. 该兼容性网络形成一个单一的闭环，其中每位工程师恰好与另外两位工程师兼容。\n\nE. 在给定的约束条件下，这样的兼容性网络配置是不可能的。", "solution": "将此情况建模为一个有 $n=5$ 个顶点和 $e(G)=6$ 条边的简单无向图 $G$，并假设 $G$ 是无三角形的 (无 $K_{3}$)。\n\n根据 Mantel 定理，任何具有 $n$ 个顶点的无三角形图最多有\n$$\n\\left\\lfloor \\frac{n^{2}}{4} \\right\\rfloor\n$$\n条边，等号成立当且仅当该图是完全二分图，其两部分的顶点数之差最多为1。对于 $n=5$，这个上界是\n$$\n\\left\\lfloor \\frac{5^{2}}{4} \\right\\rfloor=\\left\\lfloor \\frac{25}{4} \\right\\rfloor=6.\n$$\n由于 $e(G)=6$，等号成立，因此 $G$ 必须是部集大小为2和3的完全二分图，即 $G\\cong K_{2,3}$。在这样的图中，顶点集可以被划分为两个非空部分 $X$ 和 $Y$，其中 $|X|=2$ 且 $|Y|=3$，使得 $X$ 中的每个顶点都与 $Y$ 中的每个顶点相邻，而在 $X$ 或 $Y$ 内部没有边。这正是选项C中所述的性质。\n\n为了验证其必然性并排除其他选项：\n- A 是错误的，因为在 $K_{2,3}$ 中，大小为2的部集中的顶点度数为3，大小为3的部集中的顶点度数为2，所以该图不是正则图。\n- B 是错误的，因为在 $K_{2,3}$ 中的最大度数为3，所以没有顶点与所有其他4个顶点都相邻。\n- D 是错误的，因为一个5-圈（$5$-cycle）有5条边，而不是6条。\n- E 是错误的，因为 $K_{2,3}$ 满足所有约束条件，所以这种配置是可能的。\n\n因此，C是必然正确的。", "answer": "$$\\boxed{C}$$", "id": "1551512"}, {"introduction": "现在，让我们从三角形推广到更大的团 (clique)。这个问题将挑战你运用完整的图兰定理，去计算在一个全连接的网络中，为了消除所有“高风险四人组”（即 $K_4$ 子图）需要断开的最少连接数。这个练习直接关联了图兰数 $t(n, r-1)$ 的计算和其在网络安全设计等实际问题中的意义。[@problem_id:1551484]", "problem": "一家公司正在管理一个有9台服务器的安全数据中心。为了实现最大的冗余和性能，该网络最初配置为一个全连接系统，其中每台服务器都与所有其他服务器有直接的专用通信链路。一项安全审计发现了一个潜在风险：“关键风险四元组”被定义为任意一组4台相互之间都直接连接的服务器。为减轻此风险，网络管理员必须切断一定数量的通信链路。为了保证网络中不包含任何关键风险四元组，必须切断的通信链路的绝对最小数量是多少？", "solution": "将网络模型化为一个有 $n=9$ 个顶点的简单无向图。最初它是一个 $K_{9}$，拥有\n$$\n\\binom{9}{2}=36\n$$\n条边。一个“关键风险四元组”就是一个 $K_{4}$。我们寻求删除最少数量的边，以使所得的图是 $K_{4}$-free。这等于 $K_{9}$ 的总边数减去一个有9个顶点的 $K_{4}$-free 图中所能拥有的最大边数。\n\n根据 Turán 定理，一个有 $n$ 个顶点的 $K_{r+1}$-free 图中的最大边数，由 Turán 图 $T(n,r)$ 达到，该图是一个完全 $r$-部图，其各部分的大小尽可能相等。对于 $K_{4}$-free 的情况，设 $r=3$。当 $n$ 能被 $3$ 整除时，边数为\n$$\n\\left(1-\\frac{1}{r}\\right)\\frac{n^{2}}{2}.\n$$\n对于 $n=9, r=3$，\n$$\n\\left(1-\\frac{1}{3}\\right)\\frac{9^{2}}{2}=\\frac{2}{3}\\cdot\\frac{81}{2}=27.\n$$\n等价地，将9个顶点划分为三个大小为3的部分，并连接所有不同部分之间的边（即图 $K_{3,3,3}$），会得到3对部分，每对部分贡献 $3\\cdot 3=9$ 条边，总共有27条边。这个图中最大的团的大小为3，因此它是 $K_{4}$-free 的。\n\n因此，任何有9个顶点且边数超过27的图都包含一个 $K_{4}$，而避免 $K_{4}$ 的最大边数是27。从36条边开始，为消除所有 $K_{4}$ 而需要切断的最小边数是\n$$\n36-27=9.\n$$\n这个界是紧的，因为 $K_{3,3,3}$ 不含 $K_{4}$。", "answer": "$$\\boxed{9}$$", "id": "1551484"}, {"introduction": "图兰定理不仅告诉我们一个足够稠密的图必然包含一个大团，其经典证明过程本身也提供了一种找到这个团的方法。这最后一个练习要求你跟随一个源于该构造性证明的算法，一步步地在一个具体图例中找出 $K_4$。通过追踪这个算法，你将能更深刻地理解图兰定理背后的逻辑，并将一个纯粹的存在性保证转化为一个强大的实践工具。[@problem_id:1551490]", "problem": "在网络分析领域，识别“团”（clique）是一个基本问题。“团”是一个节点子集，其中任意两个不同的节点都相邻。一个具有 $r$ 个顶点的完全图记为 $K_r$。Turán 定理提供了一个关于保证这种结构存在的边数的强大结论。具体来说，任何具有 $n$ 个顶点且边数超过 $t(n, r-1)$ 的图必定包含一个 $K_r$ 子图。$t(n, k)$ 这个数被称为 Turán 数，它是一个不含 $K_{k+1}$ 子图的 $n$ 顶点图中所能拥有的最大边数。这个数可以由 Turán 图 $T(n, k)$ 实现，它是一个 $n$ 顶点的完全 $k$-部图，其各分部的大小尽可能均衡（任意两个分部的大小相差最多为 1）。\n\nTurán 定理的一个构造性证明给出了以下递归算法，用于在满足边密度条件的图 $G$ 中寻找一个 $K_r$。\n\n**算法：`FindClique(G, r)`**\n\n1.  设 `G` 为输入图，其顶点数为 $n$，边数为 $m$。设 `r` 为所需团的大小。\n2.  **基本情况：** 如果 $n=r$ 且 $m = \\binom{r}{2}$（即 `G` 是一个完全图），则算法返回 `G` 中所有顶点的集合。\n3.  **顶点选择：** 找出图 `G` 中度数最小的顶点 `v`。若存在多个这样的顶点，则选择整数标签最小的那个。\n4.  **递归步骤：**\n    a. 设 $G' = G - v$ 是通过从 `G` 中移除顶点 `v` 及其所有关联边得到的图。\n    b. 如果 $G'$ 的边数 $|E(G')|$ 大于 $t(n-1, r-1)$，则算法返回递归调用 `FindClique(G', r)` 的结果。\n    c. 否则，设 $S$ 为 `v` 的邻居顶点集。设 $H=G[S]$ 是由 $S$ 中顶点诱导的 `G` 的子图。算法返回 $\\{v\\} \\cup \\text{FindClique}(H, r-1)$。\n\n**你的任务：**\n\n考虑一个图 $G$，其顶点集为 $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$。该图几乎是一个完全图，仅缺失以下 6 条边：$\\{\\{1,3\\}, \\{2,3\\}, \\{4,5\\}, \\{4,6\\}, \\{5,6\\}, \\{7,8\\}\\}$。\n\n将 `FindClique` 算法应用于此图 $G$，以找到一个大小为 4 的团（一个 $K_4$）。算法返回的是下列哪个顶点集？\n\nA. $\\{1, 2, 4, 7\\}$\n\nB. $\\{1, 2, 6, 8\\}$\n\nC. $\\{3, 4, 5, 6\\}$\n\nD. $\\{1, 2, 3, 4\\}$\n\nE. $\\{4, 5, 7, 8\\}$", "solution": "题目要求我们对给定的图 $G$ 追踪 `FindClique(G, 4)` 算法的执行过程。\n\n首先，我们来分析输入图 $G$ 的特征。\n顶点集为 $V = \\{1, 2, 3, 4, 5, 6, 7, 8\\}$，因此 $n=8$。\n一个有 8 个顶点的图中可能存在的总边数为 $\\binom{8}{2} = \\frac{8 \\times 7}{2} = 28$。\n题目说明缺失了 6 条特定的边。因此，$G$ 的边数是 $m = 28 - 6 = 22$。\n所求团的大小为 $r=4$。\n\n该算法的保证是基于 Turán 定理的。我们必须检查是否满足 $m > t(n, r-1)$。在这里，我们需要检查是否 $22 > t(8, 3)$。\n为了计算 $t(8, 3)$，我们考虑 Turán 图 $T(8, 3)$，它是一个 8 顶点的完全 3-部图，其分部大小尽可能均衡。我们将 8 个顶点划分为 3 个部分：$8 = 3+3+2$。\n$T(8, 3)$ 中的边数等于完全图 $K_8$ 的边数减去各分部内部的边数。\n非边的数量为 $\\binom{3}{2} + \\binom{3}{2} + \\binom{2}{2} = 3 + 3 + 1 = 7$。\n所以，$t(8, 3) = \\binom{8}{2} - 7 = 28 - 7 = 21$。\n因为 $m = 22 > 21 = t(8, 3)$，所以该算法保证能找到一个 $K_4$。\n\n让我们一步步执行该算法。\n\n**初始调用：`FindClique(G, 4)`**\n- 输入：图 $G$，其中 $n=8, m=22$。整数 $r=4$。\n- 基本情况不适用，因为 $n \\neq r$。\n- **步骤 3：顶点选择。** 我们需要找到度数最小的顶点。让我们计算 $G$ 中所有顶点的度数。一个顶点的度数等于 $n-1=7$ 减去其缺失的关联边数。\n  - $d(1)$：缺失边 $\\{1,3\\}$。$d(1) = 7-1=6$。\n  - $d(2)$：缺失边 $\\{2,3\\}$。$d(2) = 7-1=6$。\n  - $d(3)$：缺失边 $\\{1,3\\}, \\{2,3\\}$。$d(3) = 7-2=5$。\n  - $d(4)$：缺失边 $\\{4,5\\}, \\{4,6\\}$。$d(4) = 7-2=5$。\n  - $d(5)$：缺失边 $\\{4,5\\}, \\{5,6\\}$。$d(5) = 7-2=5$。\n  - $d(6)$：缺失边 $\\{4,6\\}, \\{5,6\\}$。$d(6) = 7-2=5$。\n  - $d(7)$：缺失边 $\\{7,8\\}$。$d(7) = 7-1=6$。\n  - $d(8)$：缺失边 $\\{7,8\\}$。$d(8) = 7-1=6$。\n  最小度数为 $\\delta(G)=5$。具有此度数的顶点是 $\\{3, 4, 5, 6\\}$。根据平局打破规则，我们选择标签最小的顶点，所以 $v=3$。\n- **步骤 4：递归步骤。**\n  - 设 $G' = G-3$。新图有 $n-1=7$ 个顶点。其边数为 $|E(G')| = m - d(3) = 22 - 5 = 17$。\n  - 我们检查条件：$|E(G')| > t(7, 3)$ 是否成立？\n    - 为了计算 $t(7, 3)$，我们将 7 个顶点划分为 3 个部分：$7=3+2+2$。\n    - $T(7,3)$ 中的非边数为 $\\binom{3}{2} + \\binom{2}{2} + \\binom{2}{2} = 3 + 1 + 1 = 5$。\n    - $t(7, 3) = \\binom{7}{2} - 5 = 21 - 5 = 16$。\n  - 条件是 $17 > 16$，成立。因此，算法继续调用 `FindClique(G', 4)`。\n\n**递归调用 1: `FindClique(G', 4)`**\n- 输入：图 $G'$，其中 $n=7, m=17$。$r=4$。$V(G') = \\{1,2,4,5,6,7,8\\}$。\n- **步骤 3：顶点选择。** 我们计算 $G'$ 中的度数。在图 $G$ 中，顶点 3 的邻居是除 1 和 2 之外的所有顶点。所以移除顶点 3 会使 $\\{4,5,6,7,8\\}$ 的度数各减少 1。\n  - $d_{G'}(1)=6, d_{G'}(2)=6$。\n  - $d_{G'}(4)=d_G(4)-1 = 5-1=4$。\n  - $d_{G'}(5)=d_G(5)-1 = 5-1=4$。\n  - $d_{G'}(6)=d_G(6)-1 = 5-1=4$。\n  - $d_{G'}(7)=d_G(7)-1 = 6-1=5$。\n  - $d_{G'}(8)=d_G(8)-1 = 6-1=5$。\n  $G'$ 中的最小度数是 4，对应顶点为 $\\{4,5,6\\}$。标签最小的是 4，所以我们选择 $v'=4$。\n- **步骤 4：递归步骤。**\n  - 设 $G'' = G' - 4$。它有 $7-1=6$ 个顶点。边数为 $|E(G'')| = 17 - d_{G'}(4) = 17-4 = 13$。\n  - 检查条件：$|E(G'')| > t(6, 3)$ 是否成立？\n    - $t(6, 3)$：将 6 划分为 $2+2+2$。非边数：$3 \\times \\binom{2}{2} = 3$。$t(6, 3) = \\binom{6}{2} - 3 = 15 - 3 = 12$。\n  - 条件是 $13 > 12$，成立。我们调用 `FindClique(G'', 4)`。\n\n**递归调用 2: `FindClique(G'', 4)`**\n- 输入：图 $G''$，其中 $n=6, m=13$。$r=4$。$V(G'') = \\{1,2,5,6,7,8\\}$。\n- **步骤 3：顶点选择。** 我们计算 $G''$ 中的度数。移除 4（其在 $G'$ 中的邻居是除 3, 5, 6 之外的所有顶点）会使 $\\{1,2,7,8\\}$ 的度数各减少 1。\n  - $d_{G''}(1)=d_{G'}(1)-1 = 6-1=5$。\n  - $d_{G''}(2)=d_{G'}(2)-1 = 6-1=5$。\n  - $d_{G''}(5)=d_{G'}(5)=4$。\n  - $d_{G''}(6)=d_{G'}(6)=4$。\n  - $d_{G''}(7)=d_{G'}(7)-1=5-1=4$。\n  - $d_{G''}(8)=d_{G'}(8)-1=5-1=4$。\n  最小度数为 4，对应顶点为 $\\{5,6,7,8\\}$。标签最小的是 5，所以 $v''=5$。\n- **步骤 4：递归步骤。**\n  - 设 $G''' = G'' - 5$。它有 $6-1=5$ 个顶点。边数为 $|E(G''')| = 13 - d_{G''}(5) = 13-4 = 9$。\n  - 检查条件：$|E(G''')| > t(5, 3)$ 是否成立？\n    - $t(5, 3)$：将 5 划分为 $2+2+1$。非边数：$\\binom{2}{2}+\\binom{2}{2}+\\binom{1}{2}=1+1+0=2$。$t(5, 3) = \\binom{5}{2}-2 = 10-2=8$。\n  - 条件是 $9>8$，成立。我们调用 `FindClique(G''', 4)`。\n\n**递归调用 3: `FindClique(G''', 4)`**\n- 输入：图 $G'''$，其中 $n=5, m=9$。$r=4$。$V(G''')=\\{1,2,6,7,8\\}$。\n- **步骤 3：顶点选择。** 我们计算 $G'''$ 中的度数。移除 5（其在 $G''$ 中的邻居是除 3, 4, 6 之外的所有顶点）会使 $\\{1,2,7,8\\}$ 的度数各减少 1。\n  - $d_{G'''}(1)=d_{G''}(1)-1=5-1=4$。\n  - $d_{G'''}(2)=d_{G''}(2)-1=5-1=4$。\n  - $d_{G'''}(6)=d_{G''}(6)=4$。\n  - $d_{G'''}(7)=d_{G''}(7)-1=4-1=3$。\n  - $d_{G'''}(8)=d_{G''}(8)-1=4-1=3$。\n  最小度数为 3，对应顶点为 $\\{7,8\\}$。标签最小的是 7，所以 $v'''=7$。\n- **步骤 4：递归步骤。**\n  - 设 $G'''' = G''' - 7$。它有 $5-1=4$ 个顶点。边数为 $|E(G'''')| = 9 - d_{G'''}(7) = 9-3=6$。\n  - 检查条件：$|E(G'''')| > t(4, 3)$ 是否成立？\n    - $t(4, 3)$：将 4 划分为 $2+1+1$。非边数：$\\binom{2}{2}=1$。$t(4, 3) = \\binom{4}{2}-1 = 6-1=5$。\n  - 条件是 $6>5$，成立。我们调用 `FindClique(G'''', 4)`。\n\n**递归调用 4: `FindClique(G'''', 4)`**\n- 输入：图 $G''''$，其中 $n=4, m=6$。$r=4$。$V(G'''')=\\{1,2,6,8\\}$。\n- **步骤 2：基本情况。** 此时 $n=4$ 且 $r=4$。我们检查 $m = \\binom{4}{2}$ 是否成立。\n  - $\\binom{4}{2} = \\frac{4 \\times 3}{2} = 6$。\n  - 确实，$m=6$。所以 $G''''$ 是一个完全图 $K_4$。\n- 基本情况适用，算法返回顶点集 $V(G'''') = \\{1, 2, 6, 8\\}$。\n\n这个结果随后通过递归调用链向上传递，并成为初始调用的最终输出。找到的顶点集是 $\\{1, 2, 6, 8\\}$，这对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1551490"}]}