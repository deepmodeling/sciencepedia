{"hands_on_practices": [{"introduction": "在深入探讨 Thomassen 定理的精妙证明之前，我们必须首先确保对列表着色的基本定义有扎实的理解。这个练习提供了一个具体的图和颜色列表，要求你直接应用列表着色的两个核心规则进行检验。通过这个实践，你将熟悉如何验证一个给定的着色方案是否同时满足列表约束和邻接约束。", "problem": "在图论中，列表染色是图染色的一种特殊类型。考虑一个图 $G$，其顶点集为 $V$，边集为 $E$。对于每个顶点 $v \\in V$，设 $L(v)$ 是一个允许颜色的列表。如果一个函数 $c: V \\to \\bigcup_{v \\in V} L(v)$ 满足以下两个条件，则称其为图 $G$ 的一个有效列表染色：\n1. 对于每个顶点 $v \\in V$，分配给它的颜色 $c(v)$ 必须在该顶点的允许颜色列表 $L(v)$ 中，即 $c(v) \\in L(v)$。\n2. 对于每条边 $(u, v) \\in E$，相邻顶点 $u$ 和 $v$ 必须被分配不同的颜色，即 $c(u) \\neq c(v)$。\n\n现在，考虑一个具有五个顶点的特定图 $G$，其顶点集为 $V = \\{v_1, v_2, v_3, v_4, v_5\\}$。其边集为 $E = \\{(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5), (v_5, v_1), (v_1, v_3)\\}$。\n\n每个顶点的允许颜色列表如下：\n- $L(v_1) = \\{1, 2, 4\\}$\n- $L(v_2) = \\{1, 3, 5\\}$\n- $L(v_3) = \\{2, 3, 4\\}$\n- $L(v_4) = \\{1, 4, 5\\}$\n- $L(v_5) = \\{2, 3, 5\\}$\n\n下面提出了四种可能的染色方案，其中每种染色方案 $c$ 由一个有序元组 $(c(v_1), c(v_2), c(v_3), c(v_4), c(v_5))$ 表示。对于给定的颜色列表，下列哪一个是图 $G$ 的有效列表染色？\n\nA. $(1, 3, 2, 4, 5)$\n\nB. $(1, 1, 3, 4, 5)$\n\nC. $(3, 1, 2, 4, 5)$\n\nD. $(2, 1, 2, 4, 5)$", "solution": "给定一个图，其顶点集为 $V=\\{v_{1},v_{2},v_{3},v_{4},v_{5}\\}$，边集为 $E=\\{(v_{1},v_{2}), (v_{2},v_{3}), (v_{3},v_{4}), (v_{4},v_{5}), (v_{5},v_{1}), (v_{1},v_{3})\\}$。列表约束为 $L(v_{1})=\\{1,2,4\\}$，$L(v_{2})=\\{1,3,5\\}$，$L(v_{3})=\\{2,3,4\\}$，$L(v_{4})=\\{1,4,5\\}$，$L(v_{5})=\\{2,3,5\\}$。一个有效的列表染色 $c$ 必须满足：(i) 对所有 $v\\in V$，$c(v)\\in L(v)$；(ii) 对每条边 $(u,v)\\in E$，$c(u)\\neq c(v)$。\n\n检查选项A：$(1,3,2,4,5)$。\n- 颜色列表条件：$1\\in L(v_{1})$，$3\\in L(v_{2})$，$2\\in L(v_{3})$，$4\\in L(v_{4})$，$5\\in L(v_{5})$；全部满足。\n- 邻接条件：\n$$c(v_{1})=1\\neq 3=c(v_{2}),\\quad c(v_{2})=3\\neq 2=c(v_{3}),$$\n$$c(v_{3})=2\\neq 4=c(v_{4}),\\quad c(v_{4})=4\\neq 5=c(v_{5}),$$\n$$c(v_{5})=5\\neq 1=c(v_{1}),\\quad c(v_{1})=1\\neq 2=c(v_{3}).$$\n所有边都满足相邻顶点颜色不同。因此选项A是有效的。\n\n检查选项B：$(1,1,3,4,5)$。\n- 颜色列表条件：$1\\in L(v_{1})$，$1\\in L(v_{2})$，$3\\in L(v_{3})$，$4\\in L(v_{4})$，$5\\in L(v_{5})$；全部满足。\n- 边 $(v_{1},v_{2})$ 的邻接条件：$c(v_{1})=1=c(v_{2})$，这违反了 $c(u)\\neq c(v)$ 的要求。因此选项B是无效的。\n\n检查选项C：$(3,1,2,4,5)$。\n- 顶点 $v_{1}$ 不满足颜色列表条件，因为 $3\\notin L(v_{1})=\\{1,2,4\\}$。因此选项C是无效的。\n\n检查选项D：$(2,1,2,4,5)$。\n- 颜色列表条件：$2\\in L(v_{1})$，$1\\in L(v_{2})$，$2\\in L(v_{3})$，$4\\in L(v_{4})$，$5\\in L(v_{5})$；全部满足。\n- 边 $(v_{1},v_{3})$ 的邻接条件：$c(v_{1})=2=c(v_{3})$，这违反了 $c(u)\\neq c(v)$ 的要求。因此选项D是无效的。\n\n因此，只有选项A同时满足颜色列表条件和邻接条件。", "answer": "$$\\boxed{A}$$", "id": "1548864"}, {"introduction": "一个常见的困惑点是 $k$-可着色性与 $k$-可选性之间的区别，前者并不总能推出后者。这个练习呈现了一个看似合理但存在根本性缺陷的论证，它试图证明“任何 5-可着色图都是 5-可选的” [@problem_id:1548911]。通过剖析这个错误的证明，你将更深刻地理解为什么列表着色是一个更强的性质，以及为什么我们需要像 Thomassen 那样更精巧的证明方法。", "problem": "在图论中，一个图 $G=(V, E)$ 的*正常k-着色* (proper k-coloring) 是一个函数 $f: V \\to \\{1, 2, \\dots, k\\}$，使得对于每一条边 $\\{u, v\\} \\in E$ 都有 $f(u) \\neq f(v)$。如果存在这样的着色，则称该图是*k-可着色* (k-colorable) 的。\n\n一个相关但更强的概念是列表着色 (list coloring)。图 $G$ 的一个*列表分配* (list assignment) 是一个函数 $L$，它为每个顶点 $v \\in V$ 分配一个颜色列表 $L(v)$。如果存在一个正常着色 $f$，使得对于每个顶点 $v \\in V$ 都有 $f(v) \\in L(v)$，则图 $G$ 是*L-可着色* (L-colorable) 的。如果对于所有满足 $|L(v)| = k$（对所有 $v \\in V$）的可能列表分配 $L$，图都是 $L$-可着色的，则称该图是*k-可选择* (k-choosable) 的。\n\n一个著名的结果，即 Thomassen 定理，指出每个平面图都是 5-可选择的。一名学生试图用以下论证来证明一个相关（但不相同）的陈述：“任何 5-可着色的图都是 5-可选择的”：\n\n1.  设 $G = (V, E)$ 是一个 5-可着色的图。根据定义，存在一个 $G$ 的正常 5-着色。设此着色为 $c: V \\to C_0$，其中 $C_0 = \\{1, 2, 3, 4, 5\\}$ 是所使用的五个颜色的集合。\n\n2.  现在，考虑一个任意的列表分配 $L$，其中对每个顶点 $v \\in V$ 都有 $|L(v)| = 5$。我们的目标是找到一个正常着色 $c'$，使得对所有 $v$ 都有 $c'(v) \\in L(v)$。\n\n3.  我们尝试通过变换已有的着色 $c$ 来构造 $c'$。思路是找到颜色集 $C_0$ 的一个全局置换 $\\pi$。也就是说，一个双射 $\\pi: C_0 \\to C_0$。\n\n4.  然后我们可以定义一个新的着色 $c'(v) = \\pi(c(v))$。因为 $\\pi$ 是一个置换，如果两个相邻顶点 $u$ 和 $v$ 在着色 $c$ 下有不同的颜色（即 $c(u) \\neq c(v)$），那么它们在着色 $c'$ 下也会有不同的颜色（即 $\\pi(c(u)) \\neq \\pi(c(v))$）。因此，$c'$ 保证是一个正常着色。\n\n5.  剩下的唯一任务是确保新的着色满足列表要求。这意味着我们必须找到一个置换 $\\pi$，使得对于每个顶点 $v \\in V$，都有 $c'(v) = \\pi(c(v)) \\in L(v)$。该学生声称，由于每个列表 $L(v)$ 的大小为 5，颜色集 $C_0$ 的大小也为 5，所以总能找到这样的置换。\n\n下列哪个陈述最准确地指出了该推理过程中的根本性缺陷？\n\nA. 该论证假设可以高效地找到一个 5-可着色图的 5-着色，但这并非总是如此，从而使得证明的构造性失效。\n\nB. 步骤 4 中关于新着色 $c'$ 是正常着色的论断是不正确的。对颜色进行置换可能导致相邻顶点具有相同的颜色。\n\nC. 该论证之所以失败，是因为单一的全局置换 $\\pi$ 不能保证同时满足所有顶点的局部列表约束。具体来说，两个在着色 $c$ 下具有相同颜色（即 $c(u) = c(w)$）的不相邻顶点 $u$ 和 $w$ 可能具有不相交的列表（$L(u) \\cap L(w) = \\emptyset$），这使得不可能为 $\\pi(c(u))$ 找到一个对两者都有效的目标颜色。\n\nD. 该论证有缺陷，因为所有列表中的所有颜色的并集 $\\bigcup_{v \\in V} L(v)$ 可能比 $C_0$ 大得多，因此从 $C_0$ 到 $C_0$ 的置换不够通用。该置换应是从 $C_0$ 到这个更大的集合。\n\nE. 该论证的逻辑是合理的，但它只证明了如果我们被允许在看到列表 $L(v)$ *之后* 才选择初始的 5-着色 $c$，那么 5-可着色的图是 5-可选择的，而这违反了可选择性的定义。", "solution": "我们逐步分析学生的论证，并分离出所提议的全局置换必须满足的精确要求，然后确定为什么这个要求通常会失败。\n\n首先，步骤 1 和 2 重申了定义：一个 5-可着色的图存在一个正常着色 $c: V \\to C_{0}$，其中 $C_{0}=\\{1,2,3,4,5\\}$，并且一个任意的列表分配 $L$ 满足对所有 $v \\in V$ 都有 $|L(v)|=5$。\n\n步骤 4 的陈述是正确的：如果 $\\pi: C_{0} \\to C_{0}$ 是一个双射且 $c$ 是正常着色，那么 $c'(v)=\\pi(c(v))$ 也是一个正常着色，因为对于任何边 $\\{u,v\\} \\in E$ 且 $c(u) \\neq c(v)$，我们有 $\\pi(c(u)) \\neq \\pi(c(v))$。\n\n关键约束在步骤 5 中。令 $V_{i}=\\{v \\in V : c(v)=i\\}$ 表示在着色 $c$ 下颜色 $i \\in C_{0}$ 的颜色类。为了使置换后的着色 $c'(v)=\\pi(c(v))$ 满足列表要求，我们需要对每个 $v \\in V$ 都有：\n$$\n\\pi(c(v)) \\in L(v).\n$$\n等价地，对于每个 $i \\in C_{0}$，必须存在一个单一颜色 $\\pi(i)$ 使得：\n$$\n\\pi(i) \\in \\bigcap_{v \\in V_{i}} L(v).\n$$\n因此，存在这样一个全局置换 $\\pi$ 的一个充分必要条件是每个交集 $\\bigcap_{v \\in V_{i}} L(v)$ 都是非空的。学生仅仅因为 $|L(v)|=5$ 和 $|C_{0}|=5$ 就声称存在一个置换，这忽略了这些交集约束。特别地，完全可能存在两个顶点 $u,w \\in V_{i}$（它们不必相邻）其列表不相交，即 $L(u) \\cap L(w)=\\emptyset$，这样就没有单一的 $\\pi(i)$ 的选择可以同时存在于两个列表中。在这种情况下，没有全局置换 $\\pi$ 能够同时满足 $c'(u),c'(w) \\in L(u),L(w)$。\n\n这个障碍与算法效率无关（所以选项 A 是无关的），不与步骤 4 的正确性矛盾（所以选项 B 是错误的），不能通过允许一个更大的目标颜色全集来解决（问题在于每个原始颜色对应的单一像必须适合该颜色类中的所有列表，所以选项 D 未抓住核心问题），也不能通过在看到列表后选择 $c$ 来修正（可能不存在一种将 $V$ 划分为五个类的方法，使得每个类都有一个非空的列表交集，所以选项 E 夸大了该逻辑所能达成的效果）。根本性缺陷恰恰在于，当共享一个原始颜色的顶点具有不兼容的列表时，一个全局置换通常不能满足所有的局部列表约束。\n\n因此，正确的选项是 C。", "answer": "$$\\boxed{C}$$", "id": "1548911"}, {"introduction": "在理解了为什么简单的论证会失败之后，我们现在来一窥真正有效的构造性方法。这个练习将引导你探索源自 Thomassen 归纳证明的关键递归步骤 [@problem_id:1548857]。通过完成这一步，你将洞察到这个优美定理背后强大的归纳机制，正是它保证了任何平面图都存在一个 5-列表着色。", "problem": "在图论中，列表染色（list coloring）是指从为每个顶点预先指定的允许颜色列表中为顶点分配颜色。形式上，对于一个图 $G=(V, E)$，列表分配（list assignment）是一个函数 $L$，它将每个顶点 $v \\in V$ 映射到一个颜色列表 $L(v)$。一个 $L$-染色（$L$-coloring）是一个函数 $c: V \\to \\bigcup_{v \\in V} L(v)$，使得对所有 $v \\in V$ 都有 $c(v) \\in L(v)$，并且对每条边 $(u,v) \\in E$ 都有 $c(u) \\ne c(v)$。如果对于每个列表分配 $L$（其中对所有 $v \\in V$ 都有 $|L(v)| \\ge k$），图 $G$ 都存在一个 $L$-染色，则称该图是 $k$-可选的（$k$-choosable）。\n\nCarsten Thomassen 的一个著名结果指出，每个平面图都是 5-可选的。他的归纳证明通过证明一个更强的命题，为找到这种染色的递归算法提供了蓝图。\n\n考虑以下算法问题：\n给定一个平面图 $G$，其外平面是一个圈 $C=(v_1, v_2, \\dots, v_k)$，以及一个具有以下性质的列表分配 $L$：\n1. 外圈上的两个相邻顶点 $v_1$ 和 $v_2$ 已用不同颜色预先染色。也就是说， $|L(v_1)|=1$ 和 $|L(v_2)|=1$，且 $L(v_1) \\ne L(v_2)$。\n2. 外圈 $C$ 上的每个其他顶点 $v$ 的颜色列表至少有 3 种颜色，即 $|L(v)| \\ge 3$。\n3. 圈 $C$ 内部的每个顶点 $u$（内部顶点）的颜色列表至少有 5 种颜色，即 $|L(u)| \\ge 5$。\n\n该递归算法为 $G$ 找到一个有效的 $L$-染色。算法的结构取决于对外圈 $C$ 的分情况讨论。一种情况是 $C$ 有弦（连接 $C$ 的两个不相邻顶点的边）。另一种情况是当 $C$ 是一个导出圈（没有弦）时。\n\n你的任务是确定第二种情况（即 $C$ 是导出圈）的正确处理过程。设 $v_3$是 $C$ 上与 $v_2$ 相邻但不是 $v_1$ 的顶点。以下哪个选项正确描述了处理这种情况的主要递归步骤？\n\nA. 在列表 $L(v_3)$ 中，找出不与分配给 $v_2$ 的颜色相同的两个不同颜色，称为 `a` 和 `b`。构建一个新图 $G' = G - v_3$ 和一个新的列表分配 $L'$，其中对于 $v_3$ 的每个内部邻居 $u$，其列表更新为 $L'(u) = L(u) \\setminus \\{a, b\\}$。对于 $G'$ 中的所有其他顶点 $w$，$L'(w) = L(w)$。在对 $(G', L')$ 上递归调用该算法。\n\nB. 移除顶点 $v_3$ 以构成图 $G' = G - v_3$。使用原始列表（限制在 $G'$ 的顶点上）在 $G'$ 上递归调用该算法。在递归调用返回对 $G'$ 的染色后，从其列表 $L(v_3)$ 中为 $v_3$ 分配一个其任何邻居都未使用的颜色。\n\nC. 立即从 $v_3$ 的列表中选择一个 $v_2$ 未使用的颜色分配给 $v_3$。然后构成图 $G' = G - v_3$ 并在 $G'$ 上递归调用该算法。对于递归调用，预染色的顶点现在是 $v_1$ 和新染色的 $v_3$。\n\nD. 识别分配给 $v_2$ 的颜色 `c`。构建一个新图 $G' = G-v_3$ 和一个新的列表分配 $L'$，其中对于 $v_3$ 的每个内部邻居 $u$，其列表更新为 $L'(u) = L(u) \\setminus \\{c\\}$。在对 $(G', L')$ 上递归调用该算法。\n\nE. 设 $v_k$ 为 $C$ 上与 $v_1$ 相邻但不是 $v_2$ 的顶点。在 $L(v_k)$ 中找出 $v_1$ 未使用的两种颜色 `a` 和 `b`。构建一个新图 $G' = G-v_k$ 和一个新的列表分配 $L'$，其中 $v_k$ 的内部邻居的列表更新为 $L(u) \\setminus \\{a, b\\}$。在 $(G', L')$ 上递归调用该算法。", "solution": "我们已知 Thomassen 证明中使用的加强归纳假设：在一个平面图 $G$ 中，其外平面是一个圈 $C=(v_{1},\\dots,v_{k})$，其中 $v_{1},v_{2}$ 已用不同颜色预染，C 上其余顶点的列表大小至少为 3，内部顶点的列表大小至少为 5，则存在一个扩展该预染色的 $L$-染色。\n\n我们必须处理 $C$ 是一个导出圈（即没有弦）的情况。设 $v_{3}$ 是 $C$ 上与 $v_{2}$ 相邻且不同于 $v_{1}$ 的顶点。递归步骤必须创建一个更小的实例，该实例仍然满足归纳假设，同时确保在递归调用后可以对 $v_{3}$ 进行染色。\n\n关键事实和约束条件：\n- $v_{3}$ 位于 $C$ 上且满足 $|L(v_{3})|\\ge 3$。设 $v_{2}$ 的颜色为 $c$。由于 $L(v_{3})$ 至少有 3 种颜色，所以存在至少两个不同的颜色 $a,b\\in L(v_{3})\\setminus\\{c\\}$。\n- 移除 $v_{3}$ 形成 $G' = G - v_{3}$。因为 $C$ 是导出圈，删除 $v_{3}$ 会将 $G$ 中原为内部顶点的 $v_{3}$ 的邻居暴露到 $G'$ 的外平面上。因此，这些邻居在 $G'$ 中成为边界顶点。\n\n为了在 $(G',L')$ 上保持归纳假设，我们需要：\n- $G'$ 外平面上的两个预染色顶点保持相邻且颜色不同。这两个顶点仍然是 $v_{1}$ 和 $v_{2}$，因此该条件得以保持。\n- 边界顶点（包括 $v_{3}$ 新暴露的邻居）在 $L'$ 中的列表大小必须至少为 3，而内部顶点的列表大小必须至少为 5。\n\n能够强制执行此条件并使 $v_{3}$ 可重新染色的 $L'$ 的构造方法如下：\n- 选择 $a,b\\in L(v_{3})\\setminus\\{c\\}$ 且 $a\\ne b$。\n- 对于 $G$ 中 $v_{3}$ 的每个内部邻居 $u$，设置 $L'(u)=L(u)\\setminus\\{a,b\\}$。由于 $|L(u)|\\ge 5$，我们有 $|L'(u)|\\ge 3$，这已足够，因为这些顶点在 $G'$ 中成为边界顶点。\n- 对于所有其他顶点 $w$，设置 $L'(w)=L(w)$；特别地，$v_{1}$ 和 $v_{2}$ 仍然是预先用不同颜色染色的。\n\n现在将归纳假设应用于 $(G',L')$ 以获得 $G'$ 的一个 $L'$-染色。在这个染色中：\n- 根据构造，$v_{3}$ 的内部邻居均不使用颜色 $a$ 或 $b$。\n- 用 $a$ 或 $b$ 为 $v_{3}$ 染色时，唯一可能的颜色冲突来自其在边界上的邻居 $v_{2}$ 和 $v_{4}$（其中 $v_{4}$ 是 $v_{3}$ 在 $C$ 上的另一个邻居）。我们已经确保了 $a,b\\ne c$（$v_{2}$ 的颜色），因此 $v_{2}$ 不会阻止使用 $a$ 或 $b$。\n- 在 $v_{4}$ 处，$\\{a,b\\}$ 中至多有一个颜色被使用；因此 $a$ 或 $b$ 中至少有一个颜色仍可用于 $v_{3}$，从而可以扩展为对 $G$ 的一个有效的 $L$-染色。\n\n这与选项 A 完全匹配。其他选项因以下原因而失败：\n- B：移除 $v_{3}$ 而不限制其邻居的颜色列表，无法保证在递归染色后 $L(v_{3})$ 中还有任何颜色未被其所有邻居使用，因此 $v_{3}$ 可能变得无法染色。\n- C：预先对 $v_{3}$ 染色会破坏归纳假设，因为两个预染色的顶点（$v_{1}$ 和 $v_{3}$）通常不相邻，而归纳假设要求它们相邻。\n- D：仅从 $v_{3}$ 的邻居列表中移除颜色 $c$ 对于使 $v_{3}$ 可染色是无关紧要的（因为 $v_{3}$ 无论如何都不能使用 $c$），并且不能保证稍后 $v_{3}$ 一定有可用颜色。\n- E：尽管对称的选择有时可行，但所述的步骤与问题指定的对 $v_{3}$ 的关注以及标准步骤不符；此外，问题明确地将该步骤框架在 $v_{3}$ 上。\n\n因此，正确的主要递归步骤是选项 A。", "answer": "$$\\boxed{A}$$", "id": "1548857"}]}