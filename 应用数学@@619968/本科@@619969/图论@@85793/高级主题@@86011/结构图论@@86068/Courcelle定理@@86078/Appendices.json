{"hands_on_practices": [{"introduction": "树宽度是衡量图“树状”程度的一个核心概念。虽然其形式化定义可能看起来有些抽象，但通过计算一个具体图的树宽度是理解其内涵的最佳方式。本练习 [@problem_id:1492835] 提供了一个计算一个小型图树宽度的实践机会，并且直接关联到固定参数可解算法的性能分析，让你直观地感受这个参数在算法理论中的实际价值。", "problem": "一位计算机科学家正在分析一个固定参数可解算法的性能。该算法在具有 $n$ 个顶点的输入图 $G$ 上的运行时间由一个形如 $O(f(k) \\cdot p(n))$ 的函数所限定，其中 $p(n)$ 是一个关于 $n$ 的多项式，而 $f(k)$ 是一个仅依赖于被称为树宽的结构图参数 $k$ 的函数。对于她正在研究的寻找最大独立集问题，其复杂度的指数部分由 $f(k) = 3^k$ 给出。\n\n她对一个特定测试图 $G = (V, E)$ 上的性能感兴趣，其中顶点集为 $V = \\{v_1, v_2, v_3, v_4, v_5\\}$，边集为 $E = \\{\\{v_1, v_2\\}, \\{v_2, v_3\\}, \\{v_3, v_4\\}, \\{v_4, v_1\\}, \\{v_1, v_5\\}, \\{v_2, v_5\\}\\}$。\n\n为了预测该算法的行为，请计算此图 $G$ 的参数依赖因子 $f(k)$ 的值。最终答案应为一个整数。", "solution": "给定一个形如 $O(f(k)\\cdot p(n))$ 的FPT运行时间，其中 $f(k)=3^{k}$，$k$ 是输入图 $G$ 的树宽。因此，为了计算给定图 $G$ 的 $f(k)$，我们必须确定 $G$ 的树宽 $k$。\n\n图结构为：$V=\\{v_{1},v_{2},v_{3},v_{4},v_{5}\\}$ 且 $E=\\{\\{v_{1},v_{2}\\},\\{v_{2},v_{3}\\},\\{v_{3},v_{4}\\},\\{v_{4},v_{1}\\},\\{v_{1},v_{5}\\},\\{v_{2},v_{5}\\}\\}$。在 $\\{v_{1},v_{2},v_{3},v_{4}\\}$ 上的子图是一个 4-环，而 $\\{v_{1},v_{2},v_{5}\\}$ 构成一个三角形。\n\n树宽的下界：因为 $\\{v_{1},v_{2},v_{5}\\}$ 是一个三角形，所以团数 $\\omega(G)$ 至少为 $3$。一个标准的界是 $\\operatorname{tw}(G)\\geq \\omega(G)-1$，因此\n$$\n\\operatorname{tw}(G)\\geq 3-1=2.\n$$\n\n通过一个显式的树分解得到上界：考虑以下这些包\n$$\nB_{1}=\\{v_{1},v_{2},v_{5}\\},\\quad B_{2}=\\{v_{1},v_{2},v_{3}\\},\\quad B_{3}=\\{v_{1},v_{3},v_{4}\\}.\n$$\n将它们排列成一条路径 $B_{1}\\text{—}B_{2}\\text{—}B_{3}$。验证树分解的性质：\n- 边的覆盖性：$\\{v_{1},v_{2}\\}\\subseteq B_{1}$ (也在 $B_{2}$ 中)，$\\{v_{2},v_{3}\\}\\subseteq B_{2}$，$\\{v_{3},v_{4}\\}\\subseteq B_{3}$，$\\{v_{4},v_{1}\\}\\subseteq B_{3}$，$\\{v_{1},v_{5}\\}\\subseteq B_{1}$，$\\{v_{2},v_{5}\\}\\subseteq B_{1}$。\n- 连通性：各顶点出现于连通的子树中：$v_{5}$ 仅在 $B_{1}$ 中；$v_{2}$ 在 $B_{1},B_{2}$ 中；$v_{3}$ 在 $B_{2},B_{3}$ 中；$v_{4}$ 仅在 $B_{3}$ 中；$v_{1}$ 在所有三个包中，而这些包作为一条路径是连通的。\n\n最大包的大小为 $3$，所以宽度为 $3-1=2$。因此，\n$$\n\\operatorname{tw}(G)\\leq 2.\n$$\n结合下界，我们得出结论 $\\operatorname{tw}(G)=2$。\n\n最后，使用 $f(k)=3^{k}$，我们得到\n$$\nf(k)=3^{2}=9.\n$$", "answer": "$$\\boxed{9}$$", "id": "1492835"}, {"introduction": "在练习了树宽度之后，我们转向 Courcelle 定理的第二个支柱：单子二阶 (Monadic Second-Order, MSO) 逻辑。MSO 是一种能够精确描述图属性的强大形式化语言，是理论计算机科学的基石之一。这个练习 [@problem_id:1492852] 将作为你学习 MSO 逻辑的起点，通过表达一个非常基础的图属性，帮助你熟悉逻辑量词在图论环境中的语法和使用方法。", "problem": "在算法图论的研究中，一元二阶（MSO）逻辑提供了一种强大的形式语言，用于表达图的性质。一个关键结果，即 Courcelle 定理，指出任何可用 MSO 逻辑表达的图属性，对于有界树宽的图都可以在线性时间内判定。\n\n让我们考虑在简单无向图 $G=(V, E)$ 上的一元二阶逻辑，其中 $V$ 是顶点集合，$E$ 是边集合。该语言使用以下组成部分：\n- 小写变量 $u, v, w, \\dots$ 用来表示单个顶点。\n- 大写变量 $X, Y, Z, \\dots$ 用来表示顶点集合。\n- 标准逻辑连接词 $\\land$ (与)、$\\lor$ (或)、$\\neg$ (非)、$\\to$ (蕴含)。\n- 量词 $\\forall$ (对于所有) 和 $\\exists$ (存在)，可用于顶点变量和集合变量。\n- 邻接谓词 $\\operatorname{adj}(u, v)$，当且仅当顶点 $u$ 和顶点 $v$ 之间有边时为真。\n- 隶属谓词 $u \\in X$，当且仅当顶点 $u$ 在顶点集 $X$ 中时为真。\n- 等式谓词 $u=v$。\n\n你的任务是找出正确表达“图没有孤立顶点”这一性质的 MSO 公式。孤立顶点是度为零的顶点。\n\n以下哪个 MSO 公式表达了图 $G$ 没有孤立顶点？\n\nA. $\\forall v (\\exists u (\\operatorname{adj}(v, u)))$\n\nB. $\\exists v (\\forall u (\\neg\\operatorname{adj}(v, u)))$\n\nC. $\\exists v (\\forall u (\\operatorname{adj}(v, u)))$\n\nD. $\\forall v (\\forall u (v = u \\lor \\operatorname{adj}(v, u)))$\n\nE. $\\forall X ( (\\exists x (x \\in X)) \\rightarrow (\\exists y \\exists z (y \\in X \\land z \\notin X \\land \\operatorname{adj}(y, z))) )$", "solution": "我们需要一个关于简单无向图的 MSO 公式，它断言：对于每个顶点，都至少存在一个邻居。形式上，“没有孤立顶点”意味着对于每个顶点 $v \\in V$，$v$ 的度至少为 $1$，即存在某个 $u \\in V$ 使得 $\\operatorname{adj}(v,u)$ 成立。因为图是简单的，$\\operatorname{adj}(v,v)$ 总是为假，所以没有必要在公式中明确强制 $u \\neq v$；任何使得 $\\operatorname{adj}(v,u)$ 成立的见证 $u$ 必定自动与 $v$ 不同。\n\n评估每个选项：\n\n- 选项 A: $\\forall v\\,\\exists u\\,\\operatorname{adj}(v,u)$。这直接陈述了：对于每个顶点 $v$，存在一个与 $v$ 相邻的顶点 $u$。这正是“没有孤立顶点”的性质，因为每个 $v$ 至少有一个邻居。在空图中，全称量词是空真 (vacuously true) 的，这与空图没有孤立顶点的常规解释相符。\n\n- 选项 B: $\\exists v\\,\\forall u\\,\\neg\\operatorname{adj}(v,u)$。这表示存在一个没有任何邻接顶点的顶点，即存在一个孤立顶点。这是所需性质的否定。\n\n- 选项 C: $\\exists v\\,\\forall u\\,\\operatorname{adj}(v,u)$。在简单图中，$u=v$ 的情况使得 $\\operatorname{adj}(v,v)$ 为假，所以对于任何非空简单图，这个公式都为假。即使隐式地限制为 $u \\neq v$，它也要求存在一个全域（支配）顶点，这比所需条件更强。\n\n- 选项 D: $\\forall v\\,\\forall u\\,(v = u \\lor \\operatorname{adj}(v,u))$。对于每一对不同的顶点 $u \\neq v$，这要求 $\\operatorname{adj}(v,u)$，即该图是完全图。这严格强于“没有孤立顶点”。\n\n- 选项 E: $\\forall X\\big((\\exists x\\,(x \\in X)) \\to (\\exists y\\,\\exists z\\,(y \\in X \\land z \\notin X \\land \\operatorname{adj}(y,z)))\\big)$。取 $X=V$ 且 $V \\neq \\varnothing$，前件为真，而后件要求存在一个顶点 $z \\notin V$，这是不可能的。因此，对于任何非空图，该公式都为假，所以它没有表达所需的性质。\n\n因此，正确的公式是选项 A。", "answer": "$$\\boxed{A}$$", "id": "1492852"}, {"introduction": "在上一个练习的基础上，我们将挑战一个更复杂的 MSO 公式。前一个问题处理的是“存在性”（至少有一个邻居），而这个问题 [@problem_id:1492856] 要求你表达一个关于“确切数量”的属性（度恰好为二）。这个练习旨在展示 MSO 更强的表达能力，特别是如何利用对顶点集进行量化的二阶能力来处理更精细和复杂的约束，从而揭示 MSO 在定义复杂图属性方面的强大之处。", "problem": "在图上逻辑的研究中，单二阶逻辑（MSO）提供了一种表达图属性的强大语言。我们考虑简单无向图 $G=(V,E)$，其中 $V$ 是一个有限的顶点集合，$E$ 是一个由代表边的 $V$ 的2元子集构成的集合。\n\n图上的MSO逻辑语言允许对顶点进行量化（一阶，例如 $\\forall v$, $\\exists u$）以及对顶点集合进行量化（二阶，例如 $\\forall S$, $\\exists Y$）。该逻辑使用小写字母（如 $u, v, w, \\dots$）表示顶点变量，使用大写字母（如 $S, X, Y, \\dots$）表示集合变量。可用的原子公式有：\n- $u=v$ (顶点相等)\n- $u \\in S$ (顶点 $u$ 在集合 $S$ 中)\n- $\\operatorname{adj}(u,v)$ (邻接谓词，如果 $u$ 和 $v$ 之间有边，则为真)\n\n这些原子公式可以通过标准的逻辑连接词进行组合：$\\land$ (与)、$\\lor$ (或)、$\\neg$ (非)、$\\rightarrow$ (蕴含) 以及 $\\leftrightarrow$ (当且仅当)。\n\n你的任务是辨别以下哪个MSO语句正确且精确地表达了一个图是**2-正则**的属性。一个图是2-正则的，当且仅当图中的每个顶点的度都恰好为二。\n\nA. $\\forall v \\exists S ( (\\exists x \\exists y (x \\neq y \\land x \\in S \\land y \\in S \\land \\forall z (z \\in S \\rightarrow (z=x \\lor z=y)))) \\land (\\forall u (u \\in S \\leftrightarrow \\operatorname{adj}(v,u))) )$\n\nB. $\\forall v \\exists x \\exists y (x \\neq y \\land \\operatorname{adj}(v,x) \\land \\operatorname{adj}(v,y))$\n\nC. $\\forall v \\exists S ( (\\exists x \\exists y (x \\neq y \\land x \\in S \\land y \\in S \\land \\forall z (z \\in S \\rightarrow (z=x \\lor z=y)))) \\land (\\forall u (\\operatorname{adj}(v,u) \\rightarrow u \\in S)) )$\n\nD. $\\forall v \\exists x \\exists y (\\forall z (\\operatorname{adj}(v,z) \\leftrightarrow (z=x \\lor z=y)))$\n\nE. $\\forall v \\exists S ( (\\exists x \\exists y (x \\in S \\land y \\in S)) \\land (\\forall u (u \\in S \\leftrightarrow \\operatorname{adj}(v,u))) )$", "solution": "我们需要一个MSO语句，它对于且仅对于那些每个顶点的度都恰好为二的简单无向图为真，即，对于所有顶点 $v$，其邻域 $N(v)$ 的基数恰好为 $2$。\n\n分析选项 A：\n该语句为\n$$\n\\forall v \\exists S\\Big( \\big(\\exists x \\exists y \\big(x \\neq y \\land x \\in S \\land y \\in S \\land \\forall z (z \\in S \\rightarrow (z=x \\lor z=y))\\big)\\big) \\land \\big(\\forall u (u \\in S \\leftrightarrow \\operatorname{adj}(v,u))\\big) \\Big).\n$$\n第一个合取项断言 $S$ 恰好有两个不同的元素 $x$ 和 $y$：它要求 $x \\neq y$，$x$ 和 $y$ 都在 $S$ 中，并且每个 $z \\in S$ 都必须是 $x$ 或 $y$，因此 $|S|=2$。第二个合取项断言 $S$ 恰好是 $v$ 的邻域，即，对于所有 $u$，$u \\in S$ 当且仅当 $\\operatorname{adj}(v,u)$。因此，对于每个 $v$，$N(v)=S$ 且 $|N(v)|=|S|=2$。因此选项A精确地表达了每个顶点的度都恰好为 $2$。反之，如果图是 2-正则的，那么对于每个 $v$，我们可以取 $S=N(v)$，它恰好有两个不同的元素，并且两个合取项都成立。因此A是正确的。\n\n分析选项 B：\n$$\n\\forall v \\exists x \\exists y (x \\neq y \\land \\operatorname{adj}(v,x) \\land \\operatorname{adj}(v,y)).\n$$\n这要求每个 $v$ 至少有两个不同的邻居，但它并不禁止第三个邻居的存在。因此，它没有强制度恰好为 $2$，而只是度至少为 $2$。所以B不正确。\n\n分析选项 C：\n$$\n\\forall v \\exists S\\Big( \\big(\\exists x \\exists y (x \\neq y \\land x \\in S \\land y \\in S \\land \\forall z (z \\in S \\rightarrow (z=x \\lor z=y)))\\big) \\land \\big(\\forall u (\\operatorname{adj}(v,u) \\rightarrow u \\in S)\\big) \\Big).\n$$\n第一个合取项仍然强制 $|S|=2$，但第二个合取项仅强制 $N(v) \\subseteq S$。因此，它强制的是 $\\deg(v) \\leq 2$，而不是相等关系。特别地，一个度为 $0$ 或 $1$ 的顶点也满足此条件（只需选择任何大小为 $2$ 且满足 $N(v)\\subseteq S$ 的集合 $S$）。因此C不正确。\n\n分析选项 D：\n$$\n\\forall v \\exists x \\exists y (\\forall z (\\operatorname{adj}(v,z) \\leftrightarrow (z=x \\lor z=y))).\n$$\n这意图强制邻域为集合 $N(v)=\\{x,y\\}$，但它省略了 $x \\neq y$ 的约束。如果 $x=y$，则右侧变为 $(z=x)$，这会强制 $N(v)$ 的大小恰好为 $1$。因此，存在度为 $1$ 的顶点的图，对于该顶点而言会满足此语句，而全局陈述允许所有顶点的度都为 $1$。因此D没有刻画度恰好为 $2$ 的性质。\n\n分析选项 E：\n$$\n\\forall v \\exists S \\Big( (\\exists x \\exists y (x \\in S \\land y \\in S)) \\land (\\forall u (u \\in S \\leftrightarrow \\operatorname{adj}(v,u))) \\Big).\n$$\n第二个合取项强制 $S=N(v)$。第一个合取项仅仅要求 $S$ 包含（不一定不同的）$x$ 和 $y$。由于没有 $x \\neq y$ 的约束，这只保证了在 $x=y$ 的情况下 $S$ 非空，或者在存在 $x \\neq y$ 的情况下 $|S| \\geq 2$。由于对 $x,y$ 的量词是存在量词，因此会满足最弱的要求：只要 $N(v)$ 非空，即 $\\deg(v)\\geq 1$，该语句就成立。因此E没有强制度恰好为 $2$。\n\n因此，唯一一个能够正确且精确地表达每个顶点的度都恰好为 $2$ 的语句是选项 A。", "answer": "$$\\boxed{A}$$", "id": "1492856"}]}