{"hands_on_practices": [{"introduction": "让我们从一个最基础也最常见的图结构——路径图——开始。通过一个模拟管道监控的假想场景，本练习将引导你计算两个重要的结构参数：支配数和路径宽度。完成这个练习可以帮助你熟悉如何将抽象的图论定义应用于具体问题，并为更复杂的分析打下坚实的基础。[@problem_id:1536494]", "problem": "考虑一条长直管道，它被划分为 $n$ 个离散的区段，编号从 1 到 $n$。一家安保公司需要放置传感器来监控整条管道。放置在区段 $i$ 上的传感器可以监控区段 $i$ 本身，以及其直接相邻的区段（如果存在，即区段 $i-1$ 和区段 $i+1$）。目标是使用最少数量的传感器来确保每个区段都受到监控。这个最小数量被称为该系统的*支配数*。\n\n另外，一个数据处理系统分析传感器数据。管道的结构可以使用一种称为路径分解的概念进行分析。抽象地，设该管道由一个路径图 $P_n$ 表示，其顶点集为 $V = \\{v_1, v_2, \\dots, v_n\\}$，并且边连接着相邻的顶点。该图的*路径分解*是一个顶点子集序列 $(X_1, X_2, \\dots, X_t)$，这些子集被称为“包”(bags)，并满足以下三个性质：\n1. 所有子集 $X_i$ 的并集覆盖了 $V$ 中的所有顶点。\n2. 对于图中的每一条边 $\\{v_i, v_{i+1}\\}$，都存在某个子集 $X_j$ 同时包含 $v_i$ 和 $v_{i+1}$。\n3. 对于任意顶点 $v_k$，包含 $v_k$ 的子集在该序列中形成一个连续的区间。\n\n此分解的*宽度*是最大子集的大小减一，即 $\\max_i |X_i| - 1$。图的*路径宽度*是所有有效路径分解中可能的最小宽度。\n\n假设管道由 $n=17$ 个区段组成。计算两个值：\n1. 包含17个区段的管道的支配数。\n2. 相应图 $P_{17}$ 的路径宽度。\n\n请按顺序，以一对整数的形式，给出你的两个答案：支配数和路径宽度。", "solution": "我们将管道建模为路径图 $P_{n}$，其顶点为 $v_{1},\\dots,v_{n}$，边为 $\\{v_{i},v_{i+1}\\}$（对于 $i=1,\\dots,n-1$）。\n\n首先，计算支配数。一个支配集 $D \\subseteq V$ 是一个顶点集合，使得 $P_{n}$ 中的每个顶点要么在 $D$ 中，要么与 $D$ 中的一个顶点相邻。在一条路径上，任何一个选定的顶点最多可以支配三个顶点（其自身和最多两个邻居），因此任何支配集 $D$ 都必须满足\n$$\n3|D| \\geq n \\quad \\Longrightarrow \\quad |D| \\geq \\left\\lceil \\frac{n}{3} \\right\\rceil.\n$$\n因此 $\\gamma(P_{n}) \\geq \\lceil n/3 \\rceil$。对于 $n=17$，我们得到 $\\gamma(P_{17}) \\geq \\left\\lceil \\frac{17}{3} \\right\\rceil = \\left\\lceil 5 + \\frac{2}{3} \\right\\rceil = 6$。为证明此下界是紧的，我们给出一个大小为 6 的显式支配集：\n$$\nD=\\{v_{2},v_{5},v_{8},v_{11},v_{14},v_{17}\\}.\n$$\n每个选定的 $v_{k}$ 支配 $v_{k-1},v_{k},v_{k+1}$（在它们存在的情况下），通过直接检查可得所有顶点 $v_{1},\\dots,v_{17}$ 均被支配。因此 $\\gamma(P_{17}) \\leq 6$，所以 $\\gamma(P_{17})=6$。\n\n其次，计算路径宽度。$P_{17}$ 的一个路径分解由以下包序列给出\n$$\nX_{i}=\\{v_{i},v_{i+1}\\} \\quad \\text{for } i=1,2,\\dots,16.\n$$\n这些包覆盖了所有顶点，每条边 $\\{v_{i},v_{i+1}\\}$ 都在 $X_{i}$ 中。并且对于每个顶点 $v_{k}$，包含它的包是 $X_{k-1}$ 和 $X_{k}$（当 $k=1$ 时仅有 $X_{1}$，当 $k=17$ 时仅有 $X_{16}$），它们形成了一个连续的区间。最大包的大小是 2，所以这个分解的宽度为 $2-1=1$，从而得到 $\\operatorname{pw}(P_{17}) \\leq 1$。一个宽度为 0 的分解将要求所有包的大小都为 1，这样的包不能包含任何边的两个端点，这与边覆盖的要求相矛盾。因此 $\\operatorname{pw}(P_{17}) \\geq 1$，我们得出结论 $\\operatorname{pw}(P_{17})=1$。\n\n因此，对于 $n=17$，支配数是 6，路径宽度是 1。", "answer": "$$\\boxed{\\begin{pmatrix} 6 & 1 \\end{pmatrix}}$$", "id": "1536494"}, {"introduction": "图论中的一些概念在字面上可能听起来很相似，但它们实际上描述了截然不同的图属性。本练习聚焦于两个核心概念：顶点覆盖 (vertex cover) 和支配集 (dominating set)。通过为一个简单的网络计算两种不同安全方案所需的最小服务器数量，你将能亲身体会到这两个参数在定义和应用上的关键区别。[@problem_id:1536480]", "problem": "一个小型IT部门管理着一个由四台服务器组成的网络，标记为 $S_1, S_2, S_3$ 和 $S_4$。网络拓扑是线性的：$S_1$ 只与 $S_2$ 连接，$S_2$ 与 $S_1$ 和 $S_3$ 连接，$S_3$ 与 $S_2$ 和 $S_4$ 连接，$S_4$ 只与 $S_3$ 连接。该部门需要选择一个服务器子集来托管两种不同类型的安全软件，目标是为每种方案使用最少数量的服务器。\n\n**方案1（链路监控）：** 必须选择一个服务器子集 $C$ 来托管监控软件。要求是对于两个服务器之间的每个直接数据链路，这两个服务器中至少有一个必须在集合 $C$ 中。目标是找到集合 $C$ 的最小可能大小，记为 $|C_{min}|$。\n\n**方案2（节点监视）：** 必须选择一个服务器子集 $D$ 作为主要监视节点。要求是网络中的每个服务器要么本身就是监视节点（即在集合 $D$ 中），要么直接连接到 $D$ 中的一个服务器。目标是找到集合 $D$ 的最小可能大小，记为 $|D_{min}|$。\n\n确定 $|C_{min}|$ 和 $|D_{min}|$ 的值。\n\nA) $|C_{min}|=1$, $|D_{min}|=2$\n\nB) $|C_{min}|=2$, $|D_{min}|=1$\n\nC) $|C_{min}|=2$, $|D_{min}|=2$\n\nD) $|C_{min}|=3$, $|D_{min}|=2$\n\nE) $|C_{min}|=3$, $|D_{min}|=3$", "solution": "将网络解释为一个有四个顶点的路径图，其边为 $\\{S_1, S_2\\}, \\{S_2, S_3\\}$ 和 $\\{S_3, S_4\\}$。\n\n对于方案1，集合 $C$ 必须是一个顶点覆盖：一个与每条边都邻接的顶点子集。我们展示一个下界，并提供一个达到该下界的构造。\n1) 下界：没有单个顶点能覆盖所有三条边。如果 $C=\\{S_2\\}$，则边 $\\{S_3, S_4\\}$ 未被覆盖；如果 $C=\\{S_3\\}$，则边 $\\{S_1, S_2\\}$ 未被覆盖；而任何一个端点自身都会漏掉两条边。因此 $|C|\\geq 2$。\n2) 可达性：取 $C=\\{S_2, S_3\\}$。那么，$\\{S_1, S_2\\}$ 被 $S_2$ 覆盖，$\\{S_2, S_3\\}$ 被两者覆盖，而 $\\{S_3, S_4\\}$ 被 $S_3$ 覆盖。因此 $|C_{min}|=2$。\n\n对于方案2，集合 $D$ 必须是一个支配集：每个顶点要么在 $D$ 中，要么与 $D$ 中的一个顶点邻接。\n1) 下界：没有单个顶点能支配所有四个顶点。如果 $D=\\{S_2\\}$，则 $S_4$ 未被支配；如果 $D=\\{S_3\\}$，则 $S_1$ 未被支配；如果 $D$ 是一个端点，则有两个顶点仍未被支配。因此 $|D|\\geq 2$。\n2) 可达性：取 $D=\\{S_2, S_4\\}$。那么，$S_1$ 与 $S_2$ 邻接，$S_2 \\in D$，$S_3$ 与 $S_2$ 和 $S_4$ 邻接，且 $S_4 \\in D$。因此所有顶点都被支配，所以 $|D_{min}|=2$。\n\n因此 $|C_{min}|=2$ 且 $|D_{min}|=2$，这对应于选项C。", "answer": "$$\\boxed{C}$$", "id": "1536480"}, {"introduction": "结构参数化不仅是描述图的一种方式，更是算法设计中的一个强大工具。本练习将带你一窥参数化算法的核心思想：数据规约 (data reduction)。你将学习并应用一条针对反馈顶点集 (Feedback Vertex Set) 问题的规约法则，通过一个具体的例子，体验如何利用参数 $k$ 来简化一个复杂图的结构，从而为高效求解难题铺平道路。[@problem_id:1536524]", "problem": "在图算法的研究中，反馈顶点集 (FVS) 问题是一个经典的挑战。对于一个给定的图 $G=(V, E)$，目标是找到一个最小化的顶点集 $S \\subseteq V$，使得从图中移除该集合 $S$ 中的顶点后，得到的图不含圈（即，一个森林）。在该问题的参数化版本中，我们给定一个图 $G$ 和一个整数参数 $k$，并询问是否存在一个大小至多为 $k$ 的反馈顶点集。\n\n一种用于简化参数化FVS问题实例的常用数据规约技术，涉及处理所有顶点度数均为2的长路径。该简化过程如下：\n识别任意一条简单路径 $P = (x, v_1, v_2, \\dots, v_L, y)$，其中 $L$ 个内部顶点 $v_1, \\dots, v_L$ 在当前图中的度数均为2，而它们在路径上的邻居，即端点 $x$ 和 $y$ 的度数不为2。如果内部顶点的数量 $L$ 严格大于参数 $k$，则用一条连接 $x$ 和 $y$ 的、包含恰好 $k$ 个新内部顶点的新简单路径来替换该路径。此操作不改变参数 $k$。\n\n假设给定一个初始实例 $(G_0, k_0)$，其中预算为 $k_0 = 7$。图 $G_0$ 的构造如下：它包含两个顶点 $A$ 和 $B$，这两个顶点通过三条名为 $P_1, P_2,$ 和 $P_3$ 的独立简单路径相互连接。\n- 路径 $P_1$ 有12个内部顶点。\n- 路径 $P_2$ 有9个内部顶点。\n- 路径 $P_3$ 有5个内部顶点。\n这三条路径上的所有内部顶点在 $G_0$ 中的度数均为2。顶点 $A$ 和 $B$ 是 $G_0$ 中仅有的度数不为2的顶点。\n\n将上述简化过程穷尽地应用于图 $G_0$。此过程会得到一个最终的、更小的图 $G_f$。$G_f$ 中的顶点总数是多少？", "solution": "我们给定一个参数化反馈顶点集实例，其参数为 $k_{0}=7$，图 $G_{0}$ 由两个顶点 $A$ 和 $B$ 组成，它们通过三条内部顶点不相交的简单路径 $P_{1},P_{2},P_{3}$ 连接，这三条路径的内部顶点数量分别为 $L_{1}=12$，$L_{2}=9$ 和 $L_{3}=5$。所有内部顶点的度数均为2，而 $A$ 和 $B$ 的度数不为2（它们的度数均为3）。\n\n简化规则规定：对于任意一条其内部顶点度数均为2且端点度数不为2的简单路径，如果其内部顶点的数量 $L$ 满足 $L>k$，则用一条含有恰好 $k$ 个内部顶点的新简单路径替换它。如果 $L\\leq k$，则该路径保持不变。将此规则独立地、穷尽地应用于每条路径 $P_{i}$，可得最终图 $G_{f}$ 中每条路径的内部顶点数量为\n$$\nL_{i}^{f}=\\min(L_{i},k_{0}).\n$$\n因此，\n$$\nL_{1}^{f}=\\min(12,7)=7,\\quad L_{2}^{f}=\\min(9,7)=7,\\quad L_{3}^{f}=\\min(5,7)=5.\n$$\n\n$G_{f}$ 中的顶点总数等于两个端点 $A,B$ 的数量加上所有三条路径上的内部顶点数量之和：\n$$\n|V(G_{f})|=2+\\sum_{i=1}^{3}L_{i}^{f}=2+(7+7+5)=21.\n$$\n无法再应用此规则，因为每条最终路径的内部顶点数最多为 $k_{0}$，并且 $A$ 和 $B$ 的度数保持为3，所以应用该规则的条件没有被重新创造或改变。", "answer": "$$\\boxed{21}$$", "id": "1536524"}]}