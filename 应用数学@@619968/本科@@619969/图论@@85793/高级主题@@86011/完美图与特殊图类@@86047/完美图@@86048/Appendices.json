{"hands_on_practices": [{"introduction": "理解一个数学定义最好的方式之一就是将其应用于一个具体的例子。这个练习将指导你逐一分析一个简单图（4个顶点的路径图 $P_4$）的所有导出子图，通过计算每个子图的团数和色数，亲手验证完美图的定义。这个过程将加深你对 $\\chi(H) = \\omega(H)$ 这一核心条件的理解。[@problem_id:1526462]", "problem": "在图论中，有几个关键性质有助于对图的结构进行分类和理解。设$G=(V, E)$是一个简单无向图，其中$V$是顶点集，$E$是边集。\n\n一个关键概念是*导出子图*。$G$的一个导出子图$H$是由一个顶点子集$V' \\subseteq V$以及$E$中两个端点均在$V'$内的*所有*边构成的图。\n\n图的两个重要数值不变量是其团数和色数：\n- 图$G$的*团数*，记为$\\omega(G)$，是$G$中最大团的顶点数。团是一个顶点子集，其中任意两个不同的顶点都由一条边相连。\n- 图$G$的*色数*，记为$\\chi(G)$，是对$G$的顶点进行着色，使得任意两个相邻顶点颜色不同所需的最少颜色数。\n\n一个图$G$被定义为*完美图*，如果对于$G$的每一个导出子图$H$（包括$G$本身），其色数都等于其团数；即$\\chi(H) = \\omega(H)$。\n\n考虑一个四个顶点的路径图，记为$P_4$。该图的顶点集为$V = \\{v_1, v_2, v_3, v_4\\}$，边集为$E = \\{(v_1, v_2), (v_2, v_3), (v_3, v_4)\\}$。通过系统地检查$P_4$的所有非空导出子图$H$，确定所能生成的所有唯一的有序对$(\\omega(H), \\chi(H))$的完整集合$S$。\n\n以下哪个选项代表集合$S$？\n\nA. $S = \\{(1, 1), (2, 2)\\}$\n\nB. $S = \\{(1, 1), (1, 2), (2, 2)\\}$\n\nC. $S = \\{(1, 1), (2, 2), (2, 3)\\}$\n\nD. $S = \\{(1, 1), (2, 2), (3, 3)\\}$\n\nE. $S = \\{(1, 2), (2, 2)\\}$", "solution": "为了确定$P_4$的所有非空导出子图$H$所对应的唯一有序对$(\\omega(H), \\chi(H))$的集合$S$，我们必须系统地分析由顶点集$V = \\{v_1, v_2, v_3, v_4\\}$的所有非空子集导出的子图。我们可以根据顶点的数量对这些子图进行分组。由于图结构的对称性，我们只需要考虑非同构的情况。父图$P_4$的边是$(v_1, v_2), (v_2, v_3)$和$(v_3, v_4)$。\n\n1.  **1个顶点的导出子图：**\n    由单个顶点（例如集合$\\{v_1\\}$）导出的任何子图都是一个孤立顶点，即图$K_1$。\n    对于这个子图$H = K_1$，最大的团由单个顶点组成，因此其大小为1。所以$\\omega(H) = 1$。\n    单个顶点只需要一种颜色。所以$\\chi(H) = 1$。\n    该分析得出的有序对为$(\\omega(H), \\chi(H)) = (1, 1)$。\n\n2.  **2个顶点的导出子图：**\n    由两个顶点导出的子图有两种非同构的情况。\n    -   情况2a：这两个顶点在$P_4$中是相邻的。一个例子是集合$\\{v_1, v_2\\}$。其导出子图包含边$(v_1, v_2)$且同构于$K_2$。对于这个子图$H=K_2$，最大的团包含两个顶点，所以$\\omega(H) = 2$。由一条边连接的两个顶点需要两种不同的颜色，所以$\\chi(H) = 2$。这得到有序对$(2, 2)$。\n    -   情况2b：这两个顶点在$P_4$中不相邻。一个例子是集合$\\{v_1, v_3\\}$。其导出子图没有边，由两个孤立顶点组成。对于这个子图$H$，最大的团是单个顶点，所以$\\omega(H) = 1$。由于没有边，所有顶点都可以是相同的颜色，所以$\\chi(H) = 1$。这得到有序对$(1, 1)$。\n\n3.  **3个顶点的导出子图：**\n    由三个顶点导出的子图有两种非同构的情况。\n    -   情况3a：这三个顶点形成一个连通路径。一个例子是$\\{v_1, v_2, v_3\\}$。导出的边是$(v_1, v_2)$和$(v_2, v_3)$，形成路径图$P_3$。对于这个子图$H=P_3$，最大的团是任意一条边（例如$\\{v_1, v_2\\}$），所以$\\omega(H) = 2$。该图是二分图且有边，因此需要两种颜色（例如，将$v_1, v_3$染成红色，$v_2$染成蓝色）。所以$\\chi(H) = 2$。这得到有序对$(2, 2)$。\n    -   情况3b：这三个顶点不形成连通路径。一个例子是$\\{v_1, v_2, v_4\\}$。$P_4$中两个端点都在此集合内的唯一边是$(v_1, v_2)$。该导出子图由一条边和一个孤立顶点组成（$K_2 \\cup K_1$）。对于这个子图$H$，最大的团是边$\\{v_1, v_2\\}$，所以$\\omega(H) = 2$。由于该图包含一条边，它至少需要两种颜色。2-着色是可能的（例如，$v_1$红色，$v_2$蓝色，$v_4$红色）。所以$\\chi(H) = 2$。这得到有序对$(2, 2)$。\n\n4.  **4个顶点的导出子图：**\n    唯一的4顶点子图是$P_4$本身，由集合$\\{v_1, v_2, v_3, v_4\\}$导出。\n    对于这个子图$H = P_4$，最大的团是任意一条边（例如$\\{v_1, v_2\\}$），得出$\\omega(H) = 2$。\n    图$P_4$是二分图（并且不是无边的），这意味着它是2-可着色的，但不是1-可着色的。一个有效的2-着色方案是给$\\{v_1, v_3\\}$一种颜色，给$\\{v_2, v_4\\}$另一种颜色。所以$\\chi(H) = 2$。\n    这得到有序对$(2, 2)$。\n\n通过检查所有可能的非空导出子图，我们找到了以下$(\\omega, \\chi)$对：\n- 来自1顶点子图：$(1, 1)$\n- 来自2顶点子图：$(2, 2)$和$(1, 1)$\n- 来自3顶点子图：$(2, 2)$\n- 来自4顶点子图：$(2, 2)$\n\n所生成的所有唯一有序对的集合$S$是这些不同有序对的汇集。因此，$S = \\{(1, 1), (2, 2)\\}$。\n这个结果也证实了$P_4$是一个完美图，因为对于每一个导出子图$H$，我们都发现$\\omega(H) = \\chi(H)$。\n\n将我们得到的结果集$S$与给定选项进行比较，正确的是 A。", "answer": "$$\\boxed{A}$$", "id": "1526462"}, {"introduction": "理解一个性质不仅意味着知道它是什么，也意味着知道什么会破坏它。这个问题展示了完美图的性质是如何被一个微小的结构变化所影响的，通过在完美的路径图 $P_5$ 上添加一条边，我们得到了经典的非完美图——奇圈 $C_5$。这个练习揭示了图的完美性对其结构的敏感性，并引入了“奇圈”这一完美图理论中的关键反例。[@problem_id:1526484]", "problem": "在图论中，我们通过各种参数来分析图的结构性质。两个基本参数是团数和色数。\n\n图$G$中的一个 **团** (clique) 是其顶点的一个子集，其中子集内的任意两个不同顶点都相邻。$G$的 **团数** (clique number)，记为$\\omega(G)$，是$G$中最大团的顶点数。\n\n图$G$的一个 **正常着色** (proper coloring) 是为$G$的每个顶点分配一种“颜色”，使得任意两个相邻的顶点都不会被分配到相同的颜色。$G$的 **色数** (chromatic number)，记为$\\chi(G)$，是对$G$进行正常着色所需的最少颜色数。\n\n如果对于图$G$的每个导出子图$H$（包括$G$本身），$H$的色数都等于其团数，则称图$G$是 **完美的** (perfect)。也就是说，对于所有导出子图$H$，都有$\\chi(H) = \\omega(H)$。不完美的图称为 **非完美的** (imperfect)。\n\n考虑两个图，$G_1$和$G_2$。\n图$G_1$是有五个顶点的路径图，其顶点可以标记为$\\{v_1, v_2, v_3, v_4, v_5\\}$，边集为$E_1 = \\{(v_1, v_2), (v_2, v_3), (v_3, v_4), (v_4, v_5)\\}$。一个已知性质是所有路径图都是完美的。\n图$G_2$是通过在图$G_1$的基础上添加一条连接顶点$v_1$和$v_5$的边而构造的。\n\n根据所提供的定义，以下哪个陈述是正确的？\n\nA. $G_1$和$G_2$都是完美的。\n\nB. $G_1$是完美的，而$G_2$是非完美的。\n\nC. $G_1$是非完美的，而$G_2$是完美的。\n\nD. $G_1$和$G_2$都是非完美的。", "solution": "我们通过$\\chi$和$\\omega$来分析$G_{1}$和$G_{2}$，利用的性质是一个图是完美的当且仅当对于其每个导出子图$H$，都有$\\chi(H)=\\omega(H)$。\n\n对于$G_{1}$（路径$P_{5}$）：定义一个二部划分$A=\\{v_{1},v_{3},v_{5}\\}$和$B=\\{v_{2},v_{4}\\}$；每条边$(v_{i},v_{i+1})$的一个端点在$A$中，另一个在$B$中，因此$G_{1}$是一个二分图。因此$\\chi(G_{1})\\leq 2$，并且由于$E_{1}\\neq\\varnothing$，$\\chi(G_{1})\\geq 2$，可得\n$$\n\\chi(G_{1})=2.\n$$\n路径图不含三角形，因此最大的团是任意一条边；所以\n$$\n\\omega(G_{1})=2.\n$$\n二分图的每个导出子图$H$也是二分图。如果$E(H)=\\varnothing$，则$\\chi(H)=1=\\omega(H)$；如果$E(H)\\neq\\varnothing$，则$\\chi(H)=2$，并且由于没有三角形，$\\omega(H)=2$。因此，对于所有导出子图$H$，都有$\\chi(H)=\\omega(H)$，所以$G_{1}$是完美的。\n\n对于$G_{2}$：在$P_{5}$上添加边$(v_{1},v_{5})$会产生圈$C_{5}$。长度至少为$4$的圈没有三角形，所以\n$$\n\\omega(G_{2})=2.\n$$\n奇圈不是 2-可着色的：尝试用 2 种颜色着色会使颜色沿圈交替出现，并迫使最后一个顶点与其相邻的第一个顶点颜色相同，这便产生矛盾。因此\n$$\n\\chi(G_{2})=3.\n$$\n由于$\\chi(G_{2})\\neq\\omega(G_{2})$，图$G_{2}$本身违反了定义中的等式，因此$G_{2}$是非完美的。\n\n所以，$G_{1}$是完美的，而$G_{2}$是非完美的，这对应于选项 B。", "answer": "$$\\boxed{B}$$", "id": "1526484"}, {"introduction": "完美图的理论不仅仅是抽象的数学概念，它在算法设计和优化问题中有着重要的应用。本练习将理论与实际问题联系起来，展示了一个常见的任务调度场景如何被建模为在一个区间图上寻找最大权独立集。由于区间图是完美图的一个重要子类，这个问题（在一般图上是NP难的）可以被高效解决，凸显了完美图结构的算法价值。[@problem_id:1526479]", "problem": "一家云计算提供商为计算密集型任务提供了一个专门的高性能处理核心。多个客户提交作业请求，每个请求都指定了开始时间、结束时间以及代表其业务重要性的优先级。该核心一次只能执行一个作业。\n\n一个作业的时间分配从开始时间 $s$到结束时间 $e$，由闭区间 $[s, e]$ 表示。如果两个作业的区间 $[s_1, e_1]$ 和 $[s_2, e_2]$ 发生重叠，则认为它们存在时间冲突。例如，安排在 $[2, 5]$ 和 $[4, 7]$ 的作业存在冲突，而安排在 $[2, 5]$ 和 $[5, 8]$ 的作业则没有冲突，因为一个作业可以在另一个作业结束的瞬间开始。\n\n该提供商的调度系统必须从请求的作业中选择一个子集来运行，以确保所选的作业中任意两个都没有时间冲突。其目标是最大化所选子集中作业的优先级总和。\n\n给定以下作业请求列表，确定可以实现的最大总优先级。\n\n*   作业1：开始时间 1，结束时间 4，优先级 3\n*   作业2：开始时间 3，结束时间 6，优先级 5\n*   作业3：开始时间 2，结束时间 7，优先级 6\n*   作业4：开始时间 6，结束时间 8，优先级 4\n*   作业5：开始时间 5，结束时间 9，优先级 4\n*   作业6：开始时间 8，结束时间 10，优先级 2", "solution": "该问题要求从给定列表中选择一组不重叠的作业，以获得最大的总优先级。这是一个经典的优化问题，称为区间图上的最大权重独立集问题。这些作业可以被建模为图中的顶点，如果两个作业对应的时间区间重叠，则它们对应的顶点之间存在一条边。目标是找到一个权重（优先级）总和最大的独立集（即一组顶点，它们之间没有任何边相连）。\n\n一个简单的贪心算法，例如首先选择优先级最高的作业，并不能保证得到最优解。例如，选择作业3（优先级6，区间 [2, 7]）将阻止选择除作业6之外的任何其他作业，总优先级为 $6+2=8$。正如我们将看到的，这并非最优解。\n\n该问题可以使用动态规划高效地解决。\n\n首先，我们根据作业的结束时间按非递减顺序对它们进行排序。设作业表示为 $J_i = (s_i, e_i, v_i)$，其中 $s_i$ 是开始时间，$e_i$ 是结束时间，$v_i$ 是优先级。\n\n原始作业列表如下：\nJ1: (1, 4, 3)\nJ2: (3, 6, 5)\nJ3: (2, 7, 6)\nJ4: (6, 8, 4)\nJ5: (5, 9, 4)\nJ6: (8, 10, 2)\n\n按结束时间排序，我们得到以下有序列表（为清晰起见，我们对它们重新编号）：\n1.  作业A (原为J1): (1, 4, 3)\n2.  作业B (原为J2): (3, 6, 5)\n3.  作业C (原为J3): (2, 7, 6)\n4.  作业D (原为J4): (6, 8, 4)\n5.  作业E (原为J5): (5, 9, 4)\n6.  作业F (原为J6): (8, 10, 2)\n\n设$V(i)$是仅考虑这个排序列表中的前$i$个作业所能实现的最大优先级。我们可以为$V(i)$定义一个递推关系。为了计算$V(i)$，我们考虑第$i$个作业，即作业$i$。我们有两个选择：\n\n1.  不将作业$i$包含在我们的最优解集中。在这种情况下，最大值与前$i-1$个作业的最大值相同，即$V(i-1)$。\n2.  将作业$i$包含在我们的最优解集中。如果这样做，我们将获得其优先级$v_i$。但是，我们不能包含任何与作业$i$冲突的、来自集合$\\{1, ..., i-1\\}$的作业。由于作业是按结束时间排序的，任何冲突的作业$j  i$必须满足其结束时间$e_j > s_i$。与作业$i$兼容的作业是那些在作业$i$开始之前结束的作业，即满足$e_j \\le s_i$的作业$j$。为了获得最大值，我们应该将$v_i$添加到与作业$i$兼容的所有作业的最优解中。设$p(i)$是排序列表中与作业$i$兼容的、结束时间最晚的作业的索引（即$p(i) = \\max(\\{j  i \\mid e_j \\le s_i\\} \\cup \\{0\\})$）。此选择得到的值为$v_i + V(p(i))$。\n\n综合这两种情况，递推关系为：\n$V(i) = \\max(V(i-1), v_i + V(p(i)))$\n基本情况为$V(0) = 0$。\n\n让我们将此方法应用于排序后的列表。\n排序后的作业：A(1,4,3), B(3,6,5), C(2,7,6), D(6,8,4), E(5,9,4), F(8,10,2)。\n\n首先，我们为每个作业$i=1, \\dots, 6$找到$p(i)$的值：\n*   对于作业A（$s_A=1$）的$p(1)$：它之前没有作业。$p(1) = 0$。\n*   对于作业B（$s_B=3$）的$p(2)$：作业A的$e_A=4$，$4 \\not\\le 3$。没有兼容的作业。$p(2) = 0$。\n*   对于作业C（$s_C=2$）的$p(3)$：作业A的$e_A=4$，作业B的$e_B=6$。两者都大于$s_C=2$。没有兼容的作业。$p(3) = 0$。\n*   对于作业D（$s_D=6$）的$p(4)$：作业A的$e_A=4 \\le 6$。作业B的$e_B=6 \\le 6$。作业C的$e_C=7 \\not\\le 6$。结束时间最晚的兼容作业是作业B（索引为2）。所以，$p(4) = 2$。\n*   对于作业E（$s_E=5$）的$p(5)$：作业A的$e_A=4 \\le 5$。作业B、C的结束时间都$5$。结束时间最晚的兼容作业是作业A（索引为1）。所以，$p(5) = 1$。\n*   对于作业F（$s_F=8$）的$p(6)$：作业A（$e_A=4\\le 8$）、作业B（$e_B=6\\le 8$）、作业C（$e_C=7\\le 8$）、作业D（$e_D=8\\le 8$）皆可。作业E（$e_E=9\\not\\le 8$）则不可。结束时间最晚的兼容作业是作业D（索引为4）。所以，$p(6) = 4$。\n\n现在我们构建$V(i)$的DP表：\n$V(0) = 0$\n\n$i=1$ (作业A: $v_A=3, p(1)=0$):\n$V(1) = \\max(V(0), v_A + V(p(1))) = \\max(0, 3 + V(0)) = \\max(0, 3+0) = 3$。\n\n$i=2$ (作业B: $v_B=5, p(2)=0$):\n$V(2) = \\max(V(1), v_B + V(p(2))) = \\max(3, 5 + V(0)) = \\max(3, 5+0) = 5$。\n\n$i=3$ (作业C: $v_C=6, p(3)=0$):\n$V(3) = \\max(V(2), v_C + V(p(3))) = \\max(5, 6 + V(0)) = \\max(5, 6+0) = 6$。\n\n$i=4$ (作业D: $v_D=4, p(4)=2$):\n$V(4) = \\max(V(3), v_D + V(p(4))) = \\max(6, 4 + V(2)) = \\max(6, 4+5) = 9$。\n\n$i=5$ (作业E: $v_E=4, p(5)=1$):\n$V(5) = \\max(V(4), v_E + V(p(5))) = \\max(9, 4 + V(1)) = \\max(9, 4+3) = 9$。\n\n$i=6$ (作业F: $v_F=2, p(6)=4$):\n$V(6) = \\max(V(5), v_F + V(p(6))) = \\max(9, 2 + V(4)) = \\max(9, 2+9) = 11$。\n\nDP表中的最终值$V(6)$给出了整个作业集合的最大总优先级。最大值为11。此解决方案对应于选择作业B、作业D和作业F，它们的区间分别为 [3, 6]、[6, 8] 和 [8, 10]，优先级分别为5、4和2，总和为11。", "answer": "$$\\boxed{11}$$", "id": "1526479"}]}