{"hands_on_practices": [{"introduction": "第一个练习为我们提供了一个直观的拟阵交集入门。通过将问题置于熟悉的纸牌游戏背景下，我们可以清楚地看到两套独立的规则——一套关于牌面等级，另一套关于颜色——如何被建模为两个独立的约束条件。这个练习能帮助你培养从一个问题陈述中识别出不同独立系统的基本技能。[@problem_id:1520673]", "problem": "一位魔术师正在为一项新的纸牌戏法准备一副特殊的手牌。她必须从一副精心挑选的牌中选出一个子集来组成她的手牌。这个选择受两条严格规则的约束：\n\n1.  **牌阶多样性：** 手牌中任意牌阶的牌不能超过一张。例如，手牌中不能同时包含红心K和黑桃K。\n2.  **颜色构成：** 手牌中最多只能包含2张红色牌（红心或方片）和最多3张黑色牌（梅花或黑桃）。\n\n魔术师可用的牌如下：\n*   A：红心A (AH)，方片A (AD)\n*   K：红心K (KH)\n*   Q：梅花Q (QC)，黑桃Q (QS)\n*   J：梅花J (JC)\n*   10：红心10 (10H)，黑桃10 (10S)\n*   9：方片9 (9D)，梅花9 (9C)\n\n在满足这两条规则的情况下，魔术师最多能为她的手牌选择多少张牌？", "solution": "用计数形式来解释这些约束条件。设 $n$ 为所选牌的总数，$r$ 为红色牌的数量，$b$ 为黑色牌的数量。颜色约束要求\n$$r \\leq 2,\\quad b \\leq 3,\\quad n = r + b.$$\n牌阶多样性约束（每个牌阶最多一张）将总数限制为可用不同牌阶的数量。可用的牌阶有 A、K、Q、J、10 和 9，因此由于牌阶多样性的限制，最多只能选择 $6$ 张牌：\n$$n \\leq 6.$$\n结合这些条件，牌的总数受限于\n$$n \\leq \\min\\{6,\\,2+3\\} = 5.$$\n\n接下来需要证明在两个约束条件下，$n=5$ 是可以实现的。例如，选择 AH、KH、QC、JC 和 10S。这样，牌阶为 A、K、Q、J 和 10，各不相同；颜色方面，$r=2$（AH, KH）和 $b=3$（QC, JC, 10S），满足 $r \\leq 2$ 和 $b \\leq 3$。因此 $n=5$ 是可行的。\n\n所以，魔术师能选择的牌的最大数量是 $5$。", "answer": "$$\\boxed{5}$$", "id": "1520673"}, {"introduction": "在基础之上，这个练习进入了一个更复杂也更具实用性的领域：网络设计。在这里，一个约束是结构性的（网络必须是无环的），这对应于一个图拟阵；而另一个约束涉及资源分配（对不同类型链接的数量限制），这对应于一个划分拟阵。解决这个问题将让你亲身体验拟阵交集最常见和最强大的应用之一。[@problem_id:1520643]", "problem": "一家科技初创公司正在为一支由六架自主送货无人机组成的机队设计一个弹性通信网络。这些无人机停驻在编号为1至6的枢纽站。该网络架构基于一组12条潜在的高频通信链路。为减轻干扰，这些链路根据其工作频段分为两种类型。\n\n现有6条A型链路和6条B型链路可用。\n每种链路类型的具体枢纽连接如下：\n- **A型链路：** $A_1=(1,2)$, $A_2=(2,3)$, $A_3=(1,3)$, $A_4=(1,4)$, $A_5=(2,5)$, $A_6=(3,6)$。\n- **B型链路：** $B_1=(4,5)$, $B_2=(5,6)$, $B_3=(4,6)$, $B_4=(1,5)$, $B_5=(2,6)$, $B_6=(3,4)$。\n\n为确保网络稳定性和管理功耗，部署的网络配置必须遵守两个关键约束条件：\n1.  激活的链路集合不得形成任何环路，以防止数据包无限循环。\n2.  激活的A型链路数量不能超过2，激活的B型链路数量也不能超过2。\n\n确定在同时满足这两个约束条件的情况下，可以激活的通信链路的最大总数。", "solution": "这个问题要求在一个图中找出满足两个不同条件的边的最大数量：一个与图结构相关（无环性），另一个与边的划分相关（颜色/类型约束）。这是拟阵理论的一个经典应用，特别是拟阵交的概念。\n\n令 $V = \\{1, 2, 3, 4, 5, 6\\}$ 为枢纽（顶点）的集合， $E$ 为所有12条潜在通信链路（边）的集合。我们可以将此问题建模为在基集 $E$ 上定义的两个拟阵中，寻找一个公共独立集的最大基数。\n\n**拟阵1：图拟阵**\n\n第一个约束要求激活的链路集合（我们称之为 $S$）必须是无环的。这定义了与图 $G=(V, E)$ 相关联的图拟阵（或圈拟阵）$M_1 = (E, \\mathcal{I}_1)$。独立集 $\\mathcal{I}_1$ 是 $E$ 中构成森林（即不含环路）的子集。\n\n拟阵的秩是其最大独立集（一个基）的大小。对于一个含有 $|V|$ 个顶点的连通图，其图拟阵的秩为 $r_1(E) = |V|-1$。所描述的图是连通的（例如，路径 $1-4-5-6-3-2$ 连接了所有顶点）。当 $|V|=6$ 时，任何无环子图中的最大边数为 $r_1(E) = 6-1=5$。\n\n**拟阵2：划分拟阵**\n\n第二个约束限制了每种类型链路的数量。设A型链路的集合为 $E_A$，B型链路的集合为 $E_B$，因此 $E=E_A \\cup E_B$ 是 $E$ 的一个划分。该约束规定，对于一个激活的链路集合 $S$，我们必须满足 $|S \\cap E_A| \\le 2$ 且 $|S \\cap E_B| \\le 2$。\n\n这定义了一个划分拟阵 $M_2 = (E, \\mathcal{I}_2)$。独立集 $\\mathcal{I}_2$ 是满足给定预算约束的 $E$ 的子集 $S \\subseteq E$。\n\n这个划分拟阵的秩是在遵守约束条件下可以选择的链路的最大数量，即 $r_2(E) = 2 + 2 = 4$。\n\n**寻找公共独立集的最大基数**\n\n我们正在寻找一个在两个拟阵中都独立的集合 $S \\subseteq E$ ，即 $S \\in \\mathcal{I}_1 \\cap \\mathcal{I}_2$。这样一个集合的大小受每个拟阵的秩的限制。\n$$|S| \\le r_1(E) = 5$$\n$$|S| \\le r_2(E) = 4$$\n因此，$S$ 的最大可能大小至多为 $\\min(5, 4) = 4$。\n\n为了证明大小为4是可行的，我们需要构造一个包含4条链路且满足两个条件的集合 $S$。让我们尝试用2条A型链路和2条B型链路来构建这样一个集合，通过这种构造方式，它将满足划分约束。我们的任务就简化为选择这些链路，使它们不形成环路。\n\n我们选择两条A型链路。一个在不产生环路的情况下最大化连通性的策略性选择是选择不共享顶点的链路。然而，我们的集合很小，所以我们尝试选择两条“辐条”链路，它们相比于构成三角形的链路更不容易形成环路。我们选择 $S_A = \\{A_4, A_5\\}$，对应于边 $(1,4)$ 和 $(2,5)$。这个集合是无环的。\n\n现在，我们选择两条B型链路加入我们的集合，确保合并后的集合仍然无环。我们当前的边集是 $\\{(1,4), (2,5)\\}$。由这些边形成的图的连通分量是 $\\{1,4\\}$、$\\{2,5\\}$、$\\{3\\}$ 和 $\\{6\\}$。\n我们首先添加B型链路 $B_1=(4,5)$。这会将连通分量 $\\{1,4\\}$ 和 $\\{2,5\\}$ 合并为 $\\{1,2,4,5\\}$。当前的边集是 $\\{(1,4), (2,5), (4,5)\\}$，它是无环的。\n我们还需要一条B型链路。我们尝试添加 $B_2=(5,6)$。这将顶点6连接到现有结构上。候选边集变为 $S = \\{(1,4), (2,5), (4,5), (5,6)\\}$。\n\n我们来验证集合 $S$：\n1.  **无环性（M_1独立性）：** 这些边形成了一个类似路径的结构：$1-4-5-2$ 和 $6-5-4-1$。更正式地说，该子图是顶点集 $\\{1,2,4,5,6\\}$ 上的一棵树，因此它是无环的。\n2.  **类型约束（M_2独立性）：** 该集合包含两条A型链路（$A_4, A_5$）和两条B型链路（$B_1, B_2$）。\n    $|S \\cap E_A| = 2 \\le 2$ （满足）。\n    $|S \\cap E_B| = 2 \\le 2$ （满足）。\n\n既然我们已经构造了一个包含4条激活链路的有效集合，并且我们知道最大大小至多为4，那么可能的最大链路数恰好是4。存在至少一个大小为4的这样的集合就足以构成证明。", "answer": "$$\\boxed{4}$$", "id": "1520643"}, {"introduction": "最后一个练习挑战你超越寻找最大集合的范畴，转而思考如何找到*最优*集合，从而引入了权重或价值的概念。它深刻地揭示了，对于单个拟阵而言最优的简单贪心算法，在处理两个拟阵的交时往往会失效。这个发人深省的问题凸显了拟阵交集的精妙之处，并激发了我们对更高级算法的需求，以在带权场景中找到最优解。[@problem_id:1542027]", "problem": "您是一个小型软件团队的项目经理，需要为即将到来的冲刺分配任务。您的团队由两名开发人员组成，有两项关键任务需要完成。\n\n**团队与技能：**\n- **员工1 (W1)：** 一名初级开发人员，擅长 `Database Management`。\n- **员工2 (W2)：** 一名资深开发人员，同时擅长 `Database Management` 和 `Frontend Development`。\n\n**任务与要求：**\n- **任务A (TA)：** “优化数据库查询”。此任务需要 `Database Management` 技能。\n- **任务B (TB)：** “开发用户界面”。此任务需要 `Frontend Development` 技能。\n\n**分配约束与价值：**\n- 每名员工至多可以被分配一项任务。\n- 每项任务至多可以由一名员工完成。\n- 基于他们的经验和任务的复杂性，每种可能的有效分配都有一个关联的业务价值，以“效用点”来衡量：\n    - 将 W1 分配给 TA 的价值为 7 点。\n    - 将 W2 分配给 TA 的价值为 10 点。\n    - 将 W2 分配给 TB 的价值为 8 点。\n（请注意，W1 不能被分配给 TB，因为他们缺少所需技能。）\n\n为了使分配过程系统化，您决定采用一种简单的“最大价值优先”贪心策略。其过程如下：\n1.  列出所有可能的有效员工-任务分配及其效用点。\n2.  按效用值降序排列此列表。\n3.  遍历排序后的列表。对于每个分配，如果它与任何已选择的分配不冲突（即该员工尚未被占用且该任务尚未被分配），则将其添加到您的最终分配集合中。\n\n确定通过这种“最大价值优先”策略选择的分配集合的总效用。然后，确定任何满足所有约束的有效分配集合可以达到的最大可能总效用。\n\n以整数对 $(G, O)$ 的形式提供您的答案，其中 $G$ 是贪心策略得到的总效用，而 $O$ 是最大可能效用。您的最终答案应该是一个包含这两个值的行矩阵。", "solution": "定义员工集合 $W=\\{W1, W2\\}$ 和任务集合 $T=\\{TA, TB\\}$。有效的员工-任务分配及其效用值如下：\n- $W1$ 分配给 $TA$，价值为 $7$ (有效，因为 $W1$ 具备 `Database Management` 技能)。\n- $W2$ 分配给 $TA$，价值为 $10$ (有效，因为 $W2$ 具备 `Database Management` 技能)。\n- $W2$ 分配给 $TB$，价值为 $8$ (有效，因为 $W2$ 具备 `Frontend Development` 技能)。\n将 $W1$ 分配给 $TB$ 的分配因缺少技能而无效。\n\n根据指定的贪心程序，首先按效用值降序对有效分配进行排序：\n$$W2\\text{-}TA: 10 > W2\\text{-}TB: 8 > W1\\text{-}TA: 7.$$\n遍历此列表并添加不冲突的分配：\n- 选择价值为 $10$ 的 $W2\\text{-}TA$。现在 $W2$ 和 $TA$ 已被占用。\n- 跳过 $W2\\text{-}TB$，因为 $W2$ 已被分配。\n- 跳过 $W1\\text{-}TA$，因为 $TA$ 已被占用。\n因此，贪心策略的总效用为\n$$G=10.$$\n\n为找到最优总效用，评估所有满足约束的可行集合。集合 $\\{(W1,TA),(W2,TB)\\}$ 是有效的，因为它使用了不同的员工和任务，总效用为\n$$7+8=15.$$\n任何包含 $(W2,TA)$ 的集合由于冲突而不能包含其他分配，其总效用为 $10$。因此，最大可能总效用为\n$$O=\\max\\{10,15\\}=15.$$\n因此，所求的数对 $(G,O)$ 是 $(10,15)$。", "answer": "$$\\boxed{\\begin{pmatrix} 10 & 15 \\end{pmatrix}}$$", "id": "1542027"}]}