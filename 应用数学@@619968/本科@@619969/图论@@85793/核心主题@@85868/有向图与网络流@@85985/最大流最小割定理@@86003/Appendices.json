{"hands_on_practices": [{"introduction": "理解最大流最小割定理的最佳方式是亲手计算一个实例。第一个练习 [@problem_id:1408993] 将引导你使用例如 Ford-Fulkerson 算法来计算一个小型网络的最大流量。通过找到一个最小割并验证其容量与最大流相等，你将对该定理的核心思想建立起直观而具体的认识。", "problem": "考虑一个由有向图表示的小规模数据传输网络。该网络有一个源节点 `S`、一个汇节点 `T` 和四个中间路由节点 `A`、`B`、`C` 和 `D`。各有向链接及其对应的最大数据承载容量（以任意流量单位计）如下所示：\n- 从 `S` 到 `A`，容量为 10。\n- 从 `S` 到 `C`，容量为 12。\n- 从 `A` 到 `B`，容量为 7。\n- 从 `A` 到 `D`，容量为 4。\n- 从 `B` 到 `T`，容量为 10。\n- 从 `C` 到 `D`，容量为 9。\n- 从 `D` 到 `B`，容量为 3。\n- 从 `D` 到 `T`，容量为 8。\n\n所有链接均为指定的单向链接。网络中没有其他链接。目标是确定该网络的吞吐量。\n\n计算从源 `S` 到汇 `T` 的最大流值，并计算最小 `S-T` 割的容量。按指定顺序提供这两个整数值：首先是最大流值，然后是最小割容量。", "solution": "设 $G=(V,E)$ 为有向图，其中 $S$ 为源点，$T$ 为汇点，$A,B,C,D$ 为中间节点。对于每条有向边 $(u,v)\\in E$，设其容量为 $c_{uv}$，流量为 $f_{uv}$，满足 $0\\leq f_{uv}\\leq c_{uv}$。流量守恒在中间节点上成立：对于每个 $v\\in\\{A,B,C,D\\}$，\n$$\n\\sum_{u:(u,v)\\in E} f_{uv}=\\sum_{w:(v,w)\\in E} f_{vw}.\n$$\n容量如下：\n$$\nc_{S,A}=10,\\quad c_{S,C}=12,\\quad c_{A,B}=7,\\quad c_{A,D}=4,\\quad c_{B,T}=10,\\quad c_{C,D}=9,\\quad c_{D,B}=3,\\quad c_{D,T}=8.\n$$\n\n应用 Ford–Fulkerson 方法，使用增广路径和剩余容量。\n\n1) 沿路径 $S\\to A\\to B\\to T$ 增广。瓶颈为\n$$\n\\min\\{c_{S,A},c_{A,B},c_{B,T}\\}=\\min\\{10,7,10\\}=7.\n$$\n发送 7 个单位流量：设置 $f_{S,A}=7$, $f_{A,B}=7$, $f_{B,T}=7$。\n\n2) 沿路径 $S\\to C\\to D\\to T$ 增广。瓶颈为\n$$\n\\min\\{c_{S,C},c_{C,D},c_{D,T}\\}=\\min\\{12,9,8\\}=8.\n$$\n发送 8 个单位流量：设置 $f_{S,C}=8$, $f_{C,D}=8$, $f_{D,T}=8$。\n\n3) 考虑残留网络中的路径 $S\\to A\\to D\\to B\\to T$。这些弧上的当前正向剩余容量为\n$$\nr_{S,A}=c_{S,A}-f_{S,A}=10-7=3,\\quad r_{A,D}=c_{A,D}-f_{A,D}=4-0=4,\n$$\n$$\nr_{D,B}=c_{D,B}-f_{D,B}=3-0=3,\\quad r_{B,T}=c_{B,T}-f_{B,T}=10-7=3.\n$$\n瓶颈为 $\\min\\{3,4,3,3\\}=3$。沿此路径增广 3 个单位流量：更新\n$$\nf_{S,A}=7+3=10,\\quad f_{A,D}=0+3=3,\\quad f_{D,B}=0+3=3,\\quad f_{B,T}=7+3=10.\n$$\n\n计算这些增广后的总流量值。在汇点处，\n$$\n|f|=f_{B,T}+f_{D,T}=10+8=18.\n$$\n或者，在源点处，\n$$\n|f|=f_{S,A}+f_{S,C}=10+8=18.\n$$\n\n验证不存在更多增广路径。在残留图中，到 $T$ 的正向剩余容量为 $r_{B,T}=10-10=0$ 和 $r_{D,T}=8-8=0$。从 $S$ 出发，通过残留边可达的节点有 $S\\to C$（剩余容量 $r_{S,C}=12-8=4$），然后 $C\\to D$（剩余容量 $r_{C,D}=9-8=1$），以及通过 $A\\to D$ 的反向边可达 $D\\to A$（剩余容量为 $f_{A,D}=3$），因此 $A$ 是可达的。节点 $B$ 不可达，因为 $r_{A,B}=7-7=0$ 且 $r_{D,B}=3-3=0$；节点 $T$ 也不可达，因为 $r_{B,T}=0$ 且 $r_{D,T}=0$。因此，可达集为 $R=\\{S,A,C,D\\}$。\n\n割 $(R,\\overline{R})$ 的容量是从 $R$ 到 $\\overline{R}=\\{B,T\\}$ 的边的容量之和：\n$$\nc(R,\\overline{R})=c_{A,B}+c_{D,B}+c_{D,T}=7+3+8=18.\n$$\n根据最大流最小割定理，最大流等于最小割容量，这与我们构造的流值相匹配。因此，最大 $S$–$T$ 流为 $18$，最小割容量为 $18$。", "answer": "$$\\boxed{\\begin{pmatrix} 18 & 18 \\end{pmatrix}}$$", "id": "1408993"}, {"introduction": "现实世界中的网络很少是静态的，其容量可能因升级或故障而改变。这个练习 [@problem_id:1408934] 探讨了网络最大流对于单条边容量变化的敏感性。通过分析这种局部修改带来的影响，你将对识别网络瓶颈以及网络升级的实际效果有更深刻的理解。", "problem": "考虑一个用于将数据从源节点 $S$ 传输到汇点 $T$ 的有向网络。该网络由一个节点集合 $V = \\{S, A, B, C, D, T\\}$ 和一个有向边集合组成，这些边具有指定的整数容量，代表了以单位/秒计的最大数据流速率。各条边及其对应的容量 $c(u, v)$ 如下所示：\n- $c(S, A) = 10$\n- $c(S, B) = 8$\n- $c(A, C) = 5$\n- $c(A, D) = 6$\n- $c(B, C) = 4$\n- $c(B, D) = 5$\n- $c(C, T) = 9$\n- $c(D, T) = 7$\n\n所有其他节点对之间没有直接连接的边。假设进行了一次系统升级，将从节点 $D$ 到节点 $T$ 的单条边的容量增加了1个单位，而所有其他容量保持不变。\n\n计算在升级后的网络中，从源节点 $S$ 到汇点 $T$ 的新最大流。", "solution": "设边 $D \\to T$ 升级后的容量为 $c'(D,T)=8$，所有其他容量保持不变。\n\n根据最大流最小割定理，最大 $S$–$T$ 流等于最小 $S$–$T$ 割的容量。考虑一个割，其源点侧为 $\\{S,A,B,C,D\\}$，汇点侧为 $\\{T\\}$。其容量为\n$$\n\\text{cap}=\\sum_{u\\in \\{S,A,B,C,D\\}} c(u,T)=c(C,T)+c'(D,T)=9+8=17,\n$$\n因此任何可行流 $f$ 都满足\n$$\n|f|\\leq 17.\n$$\n\n为了证明可以达到 $17$，在各条边上定义一个流 $f$ 如下：\n$$\nf(S,A)=9,\\quad f(S,B)=8,\n$$\n$$\nf(A,C)=5,\\quad f(A,D)=4,\\quad f(B,C)=4,\\quad f(B,D)=4,\n$$\n$$\nf(C,T)=9,\\quad f(D,T)=8.\n$$\n容量约束成立，因为\n$$\nf(S,A)\\leq 10,\\; f(S,B)\\leq 8,\\; f(A,C)\\leq 5,\\; f(A,D)\\leq 6,\\; f(B,C)\\leq 4,\\; f(B,D)\\leq 5,\\; f(C,T)\\leq 9,\\; f(D,T)\\leq 8.\n$$\n在中间节点处，流量守恒成立：\n$$\n\\text{在 }A:\\; f(S,A)=f(A,C)+f(A,D)\\;\\Rightarrow\\; 9=5+4,\n$$\n$$\n\\text{在 }B:\\; f(S,B)=f(B,C)+f(B,D)\\;\\Rightarrow\\; 8=4+4,\n$$\n$$\n\\text{在 }C:\\; f(A,C)+f(B,C)=f(C,T)\\;\\Rightarrow\\; 5+4=9,\n$$\n$$\n\\text{在 }D:\\; f(A,D)+f(B,D)=f(D,T)\\;\\Rightarrow\\; 4+4=8.\n$$\n因此，$f$ 是一个可行流，其值为\n$$\n|f|=f(S,A)+f(S,B)=17.\n$$\n结合上界 $|f|\\leq 17$ 和值为 $17$ 的可行流，新的最大流为 $17$。", "answer": "$$\\boxed{17}$$", "id": "1408934"}, {"introduction": "Ford-Fulkerson 方法虽然能正确找到最大流，但其效率在很大程度上取决于增广路径的选择。这个进阶练习 [@problem_id:1408949] 展示了一个经典场景，其中一个“天真”的路径选择策略会导致算法收敛得非常缓慢。通过这个思想实验，你将体会到为什么像 Edmonds-Karp 这样更精巧的算法在实际应用中是必不可少的，并对算法性能分析获得更深入的洞察。", "problem": "考虑一个用于模拟源点 `S` 和汇点 `T` 之间数据传输的有容量的有向网络。该网络由四个中间数据枢纽 `U1`、`U2`、`V1` 和 `V2` 组成。各连接及其最大数据传输速率（容量）定义如下，其中 `K` 是一个大整数常量：\n- `(S, U1)`，容量为 `K`\n- `(S, U2)`，容量为 `K`\n- `(U1, V1)`，容量为 `K`\n- `(U2, V2)`，容量为 `K`\n- `(V1, T)`，容量为 `K`\n- `(V2, T)`，容量为 `K`\n- `(V1, V2)`，容量为 `1`\n\n一位分析师正在使用 Ford-Fulkerson 算法的一个特定实现来确定从 `S` 到 `T` 的最大流。该实现使用一种特定的、非最优的选择增广路径的策略，我们称之为 `Greedy Bridge-Using (GBU)` 方法。GBU 方法按以下规则运行：\n\n*   如果当前残留图中存在包含边 `(V1, V2)` 或边 `(V2, V1)` 的增广路径，则算法**必须**选择这样一条路径。\n\n假设算法从零流开始，重复应用 GBU 方法来增加流，直到达到最大流。对于 `K = 1989`，算法将执行的流增广总次数是多少？", "solution": "设所有初始流均为零。GBU 规则强制要求，只要存在包含单位容量桥的路径，那么选择的每条增广路径都必须包含边 $(V_{1},V_{2})$ 或其残留反向边 $(V_{2},V_{1})$。因为该桥的容量为 $1$，所以任何这样的增广路径的瓶颈都是 $1$，因此每次增广都会使 $S$–$T$ 总流量恰好增加 $1$。\n\n引入计数器：\n- 设 $a$ 为沿路径 $S \\to U_{1} \\to V_{1} \\to V_{2} \\to T$ 使用正向桥边 $(V_{1},V_{2})$ 的增广次数。\n- 设 $b$ 为沿路径 $S \\to U_{2} \\to V_{2} \\to V_{1} \\to T$ 使用反向残留边 $(V_{2},V_{1})$ 的增广次数。\n\n每次增广按如下方式更新流量：\n- 使用 $(V_{1},V_{2})$ 会使 $f(S,U_{1})$、$f(U_{1},V_{1})$ 和 $f(V_{2},T)$ 增加 $1$，并使 $f(V_{1},V_{2})$ 增加 $1$。\n- 使用 $(V_{2},V_{1})$ 会使 $f(S,U_{2})$、$f(U_{2},V_{2})$ 和 $f(V_{1},T)$ 增加 $1$，并使 $f(V_{1},V_{2})$ 减少 $1$（因为它使用残留反向边来抵消 $(V_{1},V_{2})$ 上的一个单位流量）。\n\n因此，经过 $a$ 次正向桥增广和 $b$ 次反向桥增广后，\n$$\nf(S,U_{1})=a,\\quad f(U_{1},V_{1})=a,\\quad f(V_{2},T)=a,\n$$\n$$\nf(S,U_{2})=b,\\quad f(U_{2},V_{2})=b,\\quad f(V_{1},T)=b,\n$$\n且\n$$\nf(V_{1},V_{2})=a-b,\\quad \\text{with } 0 \\leq f(V_{1},V_{2}) \\leq 1.\n$$\n总流量值为\n$$\n|f|=f(V_{1},T)+f(V_{2},T)=a+b.\n$$\n\n残留图中是否存在包含桥的增广路径，由以下条件决定：\n- 如果 $f(V_{1},V_{2})=0$（即 $a=b$），那么残留边 $(V_{1},V_{2})$ 以容量 $1$ 可用，路径 $S \\to U_{1} \\to V_{1} \\to V_{2} \\to T$ 存在的充要条件是 $(S,U_{1})$、$(U_{1},V_{1})$ 和 $(V_{2},T)$ 上的残留容量为正。这些残留容量分别为 $K-a$、$K-a$ 和 $K-a$，因此条件是 $a<K$。\n- 如果 $f(V_{1},V_{2})=1$（即 $a=b+1$），那么残留边 $(V_{2},V_{1})$ 以容量 $1$ 可用，路径 $S \\to U_{2} \\to V_{2} \\to V_{1} \\to T$ 存在的充要条件是 $(S,U_{2})$、$(U_{2},V_{2})$ 和 $(V_{1},T)$ 上的残留容量为正。这些残留容量分别为 $K-b$、$K-b$ 和 $K-b$，因此条件是 $b<K$。\n\n因此，只要 $a<K$ 且 $b<K$，就存在一条包含桥的增广路径，GBU 规则会强制算法使用它。此外，桥的方向是交替的：当 $a=b$ 时，算法必须使用 $(V_{1},V_{2})$，导致 $a \\leftarrow a+1$；当 $a=b+1$ 时，它必须使用 $(V_{2},V_{1})$，导致 $b \\leftarrow b+1$。从 $(a,b)=(0,0)$ 开始，经过 $n$ 次增广后，\n$$\n(a,b)=\n\\begin{cases}\n\\left(\\frac{n}{2},\\frac{n}{2}\\right), & \\text{若 } n \\text{ 为偶数} \\\\[4pt]\n\\left(\\frac{n+1}{2},\\frac{n-1}{2}\\right), & \\text{若 } n \\text{ 为奇数}\n\\end{cases}\n$$\n\n该过程在不存在包含桥的增广路径时精确停止。这种情况首次发生在 $a=K$ 且 $b=K$ 时，因为：\n- 当 $n=2K-1$ 时，我们有 $(a,b)=(K,K-1)$，因此 $b<K$，通过 $(V_{2},V_{1})$ 的路径仍然存在；再进行一次增广，得到 $(a,b)=(K,K)$。\n- 在 $(a,b)=(K,K)$ 时，两条终端边上所需的残留容量都变为零：$(V_{2},T)$ 和 $(V_{1},T)$ 已饱和，因此不存在包含桥的路径。实际上，汇入 $T$ 的割的容量为 $2K$，所以 $|f|=2K$ 是最大值。一个值为 $2K$ 的可行流是：在 $S \\to U_{1} \\to V_{1} \\to T$ 上有 $K$ 单位流量，在 $S \\to U_{2} \\to V_{2} \\to T$ 上有 $K$ 单位流量，这表明该界是紧的。\n\n由于每次增广使 $|f|$ 增加 $1$，达到 $|f|=2K$ 需要恰好 $2K$ 次增广。对于 $K=1989$，\n$$\n2K=2 \\times 1989=3978.\n$$", "answer": "$$\\boxed{3978}$$", "id": "1408949"}]}