{"hands_on_practices": [{"introduction": "让我们从一个直观的例子开始，以建立对Gomory-Hu树基本属性的理解。如果一个网络的拓扑结构本身就是一棵树，那么它的连通性已经非常清晰了。这个练习旨在揭示，对于一个本身就是树的图，其Gomory-Hu树就是它自己。通过解决这个问题 [@problem_id:1507130]，你将验证Gomory-Hu树的核心定义，并理解为什么它被视为对任意图连通性的普适性总结。", "problem": "考虑一个带权的无向图 $G$，其顶点集为 $V = \\{A, B, C, D, E, F\\}$。该图是一棵树，其各边及相应的容量如下所示：\n- 连接 A 和 B 的边，容量为 12\n- 连接 A 和 C 的边，容量为 8\n- 连接 B 和 D 的边，容量为 15\n- 连接 B 和 E 的边，容量为 7\n- 连接 C 和 F 的边，容量为 10\n\n对于一个带权的无向图 $G = (V, E)$，其 Gomory-Hu 树 $T$ 是一棵顶点集为 $V$ 的带权树，使得对于每对不同的顶点 $u, v \\in V$，$G$ 中最小 $(u,v)$-割的值等于 $T$ 中 $u$ 和 $v$ 之间唯一路径上的最小边权。\n\n求给定图 $G$ 的 Gomory-Hu 树中所有边的权重之和。", "solution": "给定一个带权的无向树 $G=(V,E)$，其中 $V=\\{A,B,C,D,E,F\\}$，边的容量（权重）为 $w$：\n- $w(\\{A,B\\})=12$，\n- $w(\\{A,C\\})=8$，\n- $w(\\{B,D\\})=15$，\n- $w(\\{B,E\\})=7$，\n- $w(\\{C,F\\})=10$。\n\n对于任意两个不同的顶点 $u,v\\in V$，令 $P_{uv}$ 表示树 $G$ 中连接 $u$ 和 $v$ 的唯一路径。对于一棵带权树，最小 $(u,v)$-割的值，记作 $\\lambda_{G}(u,v)$，等于 $P_{uv}$ 上的最小边权：\n$$\n\\lambda_{G}(u,v)=\\min_{e\\in P_{uv}} w(e).\n$$\n不等式 $\\lambda_{G}(u,v)\\ge \\min_{e\\in P_{uv}} w(e)$ 的证明：任何 $(u,v)$-割都必须移除 $P_{uv}$ 上的至少一条边；如果 $C$ 是任何分离 $u$ 和 $v$ 的割，那么它的容量满足\n$$\nc(C)=\\sum_{e\\in C} w(e)\\ge \\min_{e\\in C\\cap P_{uv}} w(e)\\ge \\min_{e\\in P_{uv}} w(e).\n$$\n反向不等式 $\\lambda_{G}(u,v)\\le \\min_{e\\in P_{uv}} w(e)$ 的证明：令 $e^{\\ast}\\in P_{uv}$ 是一条满足 $w(e^{\\ast})=\\min_{e\\in P_{uv}} w(e)$ 的边。移除 $e^{\\ast}$ 会将树分割成两个连通分量，从而定义了一个 $(u,v)$-割 $C^{\\ast}$，其容量为\n$$\nc(C^{\\ast})=w(e^{\\ast})=\\min_{e\\in P_{uv}} w(e).\n$$\n结合两者可得等式。因此，原始的带权树 $G$ 本身对于所有顶点对都满足 Gomory-Hu 树的定义属性，所以一个有效的 Gomory-Hu 树 $T$ 就是具有相同边权的图 $G$ 本身。\n\n因此，Gomory-Hu 树中所有边的权重之和等于给定容量的总和：\n$$\n\\sum_{e\\in E} w(e)=12+8+15+7+10=52.\n$$", "answer": "$$\\boxed{52}$$", "id": "1507130"}, {"introduction": "现在，让我们挑战一个更复杂的场景：一个非树结构的图，例如一个完全二分图 $K_{2,3}$。在这种网络中，节点间的最小割值不再像树中那样显而易见，需要通过更仔细的分析来确定。这个练习 [@problem_id:1507111] 将引导你计算不同节点对（例如，服务器之间、客户端之间、服务器与客户端之间）的最小割值，并基于这些值构建出一个全新的、拓扑结构与原图不同的Gomory-Hu树。这个过程将让你亲身体验Gomory-Hu树如何将一个复杂的网络连接关系，提炼成一个简洁而强大的等价树。", "problem": "一个小型通信网络基于一个完全二分图结构设计，记为 $K_{2,3}$。该网络的节点被分为两个不相交的集合：一个包含两个服务器节点的集合 $S = \\{s_1, s_2\\}$，以及一个包含三个客户端节点的集合 $C = \\{c_1, c_2, c_3\\}$。在这个网络中，每个服务器节点都通过一条通信链路与每个客户端节点直接相连。所有链路都是无向的、相同的，并且容量为1个单位。\n\nGomory-Hu 树是网络分析中使用的一个强大工具。它是一棵与原图具有相同顶点集的边带权树，其性质是：原图中任意两节点之间的最小割容量，等于该树中连接这两个节点的唯一路径上的最小边权。\n\n对于所描述的 $K_{2,3}$ 网络，请构建一棵有效的 Gomory-Hu 树。然后，计算所构建树中所有边的权重之和。", "solution": "令 $V=\\{s_{1},s_{2},c_{1},c_{2},c_{3}\\}$，并令 $K_{2,3}$ 为无向二分图，其所有服务器-客户端边的容量均为单位1。对于任意两个顶点 $u,v\\in V$，将原图中的最小 $u$-$v$ 割容量记为 $\\lambda(u,v)$。\n\n1) 计算 $\\lambda(s_{1},s_{2})$。\n对于任何分离 $s_{1}\\in A$ 和 $s_{2}\\in \\bar{A}$ 的割 $(A,\\bar{A})$，每个客户端 $c_{k}$ 要么完全在 $A$ 中，要么完全在 $\\bar{A}$ 中，并且对于每个客户端，边 $s_{1}c_{k}$ 或 $s_{2}c_{k}$ 中恰好有一条穿过该割。因此，每个这样的割的容量至少为 $3$。这个下界是紧的：取 $A=\\{s_{1},c_{1},c_{2},c_{3}\\}$ 和 $\\bar{A}=\\{s_{2}\\}$，此时恰好有三条边 $s_{2}c_{k}$ 穿过该割。因此，\n$$\n\\lambda(s_{1},s_{2})=3.\n$$\n\n2) 计算对于任意服务器 $s_{i}$ 和客户端 $c_{j}$ 的 $\\lambda(s_{i},c_{j})$。\n存在两条边不相交的 $s_{i}$-$c_{j}$ 路径：直接边 $s_{i}c_{j}$ 和对于任意 $\\ell\\neq j$ 的长度为三的路径 $s_{i}-c_{\\ell}-s_{3-i}-c_{j}$。根据最大流最小割定理，$\\lambda(s_{i},c_{j})\\geq 2$。一个分离 $s_{i}$ 和 $c_{j}$ 的容量为 $2$ 的显式割由 $A=\\{s_{1},s_{2},c_{k}:k\\neq j\\}$ 和 $\\bar{A}=\\{c_{j}\\}$ 给出，该割恰好穿过两条边 $s_{1}c_{j}$ 和 $s_{2}c_{j}$。因此，\n$$\n\\lambda(s_{i},c_{j})=2.\n$$\n\n3) 计算不同客户端 $c_{p},c_{q}$ 之间的 $\\lambda(c_{p},c_{q})$。\n存在两条边不相交的 $c_{p}$-$c_{q}$ 路径：$c_{p}-s_{1}-c_{q}$ 和 $c_{p}-s_{2}-c_{q}$，所以 $\\lambda(c_{p},c_{q})\\geq 2$。割 $A=\\{c_{p}\\}$ 和 $\\bar{A}=V\\setminus A$ 恰好穿过从 $c_{p}$ 到 $s_{1}$ 和 $s_{2}$ 的两条边，所以 $\\lambda(c_{p},c_{q})\\leq 2$。因此，\n$$\n\\lambda(c_{p},c_{q})=2.\n$$\n\n在 $V$ 上构建一棵 Gomory-Hu 树 $T$，以实现这些成对的最小割。取具有以下边的树：\n$$\n(s_{1},s_{2}) \\text{ 权重为 } 3, \\qquad (s_{1},c_{1}),(s_{1},c_{2}),(s_{1},c_{3}) \\text{ 权重均为 } 2.\n$$\n验证 Gomory-Hu 性质：\n- $s_{1}$ 和 $s_{2}$ 之间的唯一路径是权重为 $3$ 的单一边，因此路径上的最小边权为 $3=\\lambda(s_{1},s_{2})$。\n- 对于任意客户端 $c_{j}$，路径 $s_{1}\\!-\\!c_{j}$ 的最小边权为 $2=\\lambda(s_{1},c_{j})$，而路径 $s_{2}\\!-\\!s_{1}\\!-\\!c_{j}$ 的边权为 $3$ 和 $2$，所以最小值为 $2=\\lambda(s_{2},c_{j})$。\n- 对于任意两个客户端 $c_{p},c_{q}$，路径 $c_{p}\\!-\\!s_{1}\\!-\\!c_{q}$ 的权重为 $2$ 和 $2$，所以最小值为 $2=\\lambda(c_{p},c_{q})$。\n\n因此，$T$ 是一棵有效的 Gomory-Hu 树。其边的权重之和为\n$$\n3+2+2+2=9.\n$$", "answer": "$$\\boxed{9}$$", "id": "1507111"}, {"introduction": "这个高级练习将带领我们探索一个深刻而有趣的概念：Gomory-Hu树的非唯一性。虽然任意两个节点之间的最小割值是唯一确定的，但代表所有这些割值的Gomory-Hu树却可能不止一种。这个问题 [@problem_id:1507088] 展示了一个精巧的图例，在构建其Gomory-Hu树的过程中，由于存在多个等价的最小割，不同的选择将导致最终生成拓扑结构完全不同的有效树。通过分析所有可能性，你将更深入地理解Gomory-Hu算法的内在灵活性，并认识到“解”有时是一个集合，而非单个答案。", "problem": "考虑一个无向容量图 $G=(V, E)$，其顶点集为 $V = \\{N_1, N_2, P_1, P_2\\}$，边集为 $E$，每条边都有相关联的容量。该图模拟了一个简化的网络互连。顶点 $N_1$ 和 $N_2$ 代表一类节点，而 $P_1$ 和 $P_2$ 代表另一类节点。所有跨类型的连接，即 $\\{N_1, N_2\\}$ 中的一个顶点与 $\\{P_1, P_2\\}$ 中的一个顶点之间的连接，其容量均为 $C_1$。在 $P_1$ 和 $P_2$ 之间也存在一条容量为 $C_2$ 的同类型连接。不存在其他边。\n具体而言，这些边及其容量为：\n- $c(N_1, P_1) = C_1$\n- $c(N_1, P_2) = C_1$\n- $c(N_2, P_1) = C_1$\n- $c(N_2, P_2) = C_1$\n- $c(P_1, P_2) = C_2$\n\n设容量为 $C_1 = 10$ 和 $C_2 = 1$。\n\nGomory-Hu 树是一棵带权树，它表示了原始图中所有顶点对之间的最小割值。对于某些图，可以构建出不止一棵不同的 Gomory-Hu 树。对于给定的图 $G$，请确定在所有有效的 Gomory-Hu 树中，顶点 $P_1$ 的度的所有可能值。将你的答案表示为一个按升序排列的可能度值的序列。", "solution": "给定一个在顶点集 $V=\\{N_{1},N_{2},P_{1},P_{2}\\}$ 上的无向容量图，其容量为\n$$\nc(N_{i},P_{j})=C_{1}=10 \\quad (\\text{对所有 } i\\in\\{1,2\\}, j\\in\\{1,2\\}), \\qquad c(P_{1},P_{2})=C_{2}=1,\n$$\n且不存在其他边。$V$ 上的 Gomory-Hu (GH) 树 $T$ 是一棵带权树，对于任意 $s,t\\in V$，图 $G$ 中的最小 $s$-$t$ 割值等于树 $T$ 中唯一的 $s$-$t$ 路径上的最小边权。此外，$T$ 的每条边都对应于 $G$ 中的一个最小 $s$-$t$ 割，移除该边所产生的 $V$ 的划分，其割容量等于该边的权重。\n\n步骤 1：计算 $G$ 中所有顶点对之间的最小割值。\n\n对于 $G$ 中的任意割 $(S,\\bar{S})$，其容量是所有一个端点在 $S$ 中、另一个端点在 $\\bar{S}$ 中的边的容量之和。\n\n1) 顶点对 $P_{1}$、$P_{2}$。任何分隔 $P_{1}$ 和 $P_{2}$ 的割都必须切割边 $(P_{1},P_{2})$（容量为 $1$），并且对于 $N_{1}$ 和 $N_{2}$ 中的每一个，跨越割的两侧的两条关联边中至少有一条会贡献容量 $10$。因此，\n$$\n\\lambda(P_{1},P_{2})\\geq 1+10+10=21.\n$$\n这个值可以通过割 $S=\\{P_{2}\\}$，$\\bar{S}=\\{P_{1},N_{1},N_{2}\\}$ 达到，其容量为\n$$\nc(P_{2},P_{1})+c(P_{2},N_{1})+c(P_{2},N_{2})=1+10+10=21.\n$$\n因此 $\\lambda(P_{1},P_{2})=21$。\n\n2) 顶点对 $N_{1}$、$N_{2}$。割 $S=\\{N_{1}\\}$，$\\bar{S}=\\{N_{2},P_{1},P_{2}\\}$ 的容量为\n$$\nc(N_{1},P_{1})+c(N_{1},P_{2})=10+10=20,\n$$\n根据对称性，对于 $S=\\{N_{2}\\}$ 也是如此。没有割的容量能小于 $20$，因为要分隔 $N_{1}$ 和 $N_{2}$，至少需要切割两条容量为 $10$ 的边。因此 $\\lambda(N_{1},N_{2})=20$。\n\n3) 任意跨类型顶点对 $N_{i}$、$P_{j}$。割 $S=\\{N_{i}\\}$，$\\bar{S}=\\{P_{j},\\text{其他顶点}\\}$ 的容量为\n$$\nc(N_{i},P_{1})+c(N_{i},P_{2})=10+10=20.\n$$\n不可能存在更小的割，因为要分隔 $N_{i}$ 和 $P_{j}$，需要切割至少两条总容量不小于 $20$ 的边。因此，对于所有 $i,j$，$\\lambda(N_{i},P_{j})=20$。\n\n因此，成对最小割值为：\n- $\\lambda(P_{1},P_{2})=21$,\n- $\\lambda(N_{1},N_{2})=20$,\n- $\\lambda(N_{i},P_{j})=20$ for all $i,j$.\n\n步骤 2：列出 $G$ 中所有容量为 $20$ 或 $21$ 的割。\n\n计算所有非平凡划分的容量：\n\n- 单点割：\n$$\n\\{N_{1}\\}\\;|\\;\\{N_{2},P_{1},P_{2}\\}:\\;20,\\quad\n\\{N_{2}\\}\\;|\\;\\{N_{1},P_{1},P_{2}\\}:\\;20,\n$$\n$$\n\\{P_{1}\\}\\;|\\;\\{P_{2},N_{1},N_{2}\\}:\\;21,\\quad\n\\{P_{2}\\}\\;|\\;\\{P_{1},N_{1},N_{2}\\}:\\;21.\n$$\n\n- 两两分组的割：\n$$\n\\{N_{1},N_{2}\\}\\;|\\;\\{P_{1},P_{2}\\}:\\;40,\n$$\n$$\n\\{N_{1},P_{1}\\}\\;|\\;\\{N_{2},P_{2}\\}:\\;21,\\quad\n\\{N_{1},P_{2}\\}\\;|\\;\\{N_{2},P_{1}\\}:\\;21.\n$$\n\n因此，唯一容量为 $20$ 的割是单点 N 割；容量为 $21$ 的割是单点 P 割和两种混合配对的割。\n\n步骤 3：根据这些割约束 Gomory-Hu 树的结构。\n\n- 任何权重为 $21$ 的 Gomory-Hu 树边都必须对应一个分隔 $P_{1}$ 和 $P_{2}$ 的割（因为只有 $\\lambda(P_{1},P_{2})=21$）。因此，唯一允许的权重为 $21$ 的边是那些移除后会导出 $\\{P_{1}\\}\\,|\\,\\{P_{2},N_{1},N_{2}\\}$、$\\{P_{2}\\}\\,|\\,\\{P_{1},N_{1},N_{2}\\}$、$\\{P_{1},N_{1}\\}\\,|\\,\\{P_{2},N_{2}\\}$ 或 $\\{P_{1},N_{2}\\}\\,|\\,\\{P_{2},N_{1}\\}$ 之一的边。\n\n- 任何权重为 $20$ 的 Gomory-Hu 树边都必须对应一个单点 N 割，即移除该边必须导出 $\\{N_{1}\\}\\,|\\,\\{P_{1},P_{2},N_{2}\\}$ 或 $\\{N_{2}\\}\\,|\\,\\{P_{1},P_{2},N_{1}\\}$。\n\n- 在一个有四个顶点的 Gomory-Hu 树中，有三条边，并且这些边所对应的割集必须是层状的 (laminar)。此外，$P_{1}$ 和 $P_{2}$ 之间的路径上的最小边权必须是 $21$。如果 $P_{1}$–$P_{2}$ 路径的长度为 $2$，那么该路径上的两条边的权重都必须是 $21$，这会使得一条权重为 $21$ 的边与 $P_{1}$ 或 $P_{2}$ 之外的节点相邻，从而迫使除 $(P_{1}, P_{2})$ 之外的某个顶点对的路径最小值为 $21$，这是不可能的。因此，$P_{1}$ 和 $P_{2}$ 在 Gomory-Hu 树中必须通过一条权重为 $21$ 的边直接相连。\n\n步骤 4：枚举所有有效的 Gomory-Hu 树并计算 $P_{1}$ 的度。\n\n综上所述，唯一的权重为 $21$ 的边必须是 $(P_{1},P_{2})$，其权重为 $21$。剩下的两条边权重都必须是 $20$ 且对应单点 N 割；因此，每条权重为 $20$ 的边所对应的割必须将 $\\{N_{1}\\}$ 或 $\\{N_{2}\\}$ 单独分为一个部分。这迫使每条权重为 $20$ 的边都将 $N_{1}$ 或 $N_{2}$ 作为其一个叶节点。\n\n有效的构型有：\n\n- 以 $P_{1}$ 为中心的星形图：\n边 $(P_{1},P_{2})$ 权重为 $21$，边 $(P_{1},N_{1})$ 权重为 $20$，边 $(P_{1},N_{2})$ 权重为 $20$。这实现了割 $\\{P_{2}\\}$、$\\{N_{1}\\}$、$\\{N_{2}\\}$，并且是层状的。在此情况下，$\\deg_{T}(P_{1})=3$。\n\n- 以 $P_{2}$ 为中心的星形图：\n边 $(P_{1},P_{2})$ 权重为 $21$，边 $(P_{2},N_{1})$ 和 $(P_{2},N_{2})$ 权重为 $20$。这实现了割 $\\{P_{1}\\}$、$\\{N_{1}\\}$、$\\{N_{2}\\}$，并且是层状的。在此情况下，$\\deg_{T}(P_{1})=1$。\n\n- 以 $(P_{1},P_{2})$ 为中间边的路径图：\n路径 $N_{1}-P_{1}-P_{2}-N_{2}$ 或 $N_{2}-P_{1}-P_{2}-N_{1}$，边权依次为 $20,21,20$。这些实现了权重为 21 的割 $\\{P_{1},N_{1}\\}\\,|\\,\\{P_{2},N_{2}\\}$ 或 $\\{P_{1},N_{2}\\}\\,|\\,\\{P_{2},N_{1}\\}$，以及单点 N 割，并且是层状的。在此情况下，$\\deg_{T}(P_{1})=2$。\n\n没有其他有效的结构：任何移除后导出 2–2 划分的权重为 $20$ 的边，其割容量会是 $40\\neq 20$；而任何与 $P_{1}$ 或 $P_{2}$ 之外的顶点关联的权重为 $21$ 的边，都会导致错误的成对路径最小值。\n\n因此，在所有有效的 GH 树中，$P_{1}$ 可能的度恰好是 $1$、$2$ 和 $3$，所以所求集合为 $\\{1,2,3\\}$。\n\n按升序排列，序列为 $1,2,3$。", "answer": "$$\\boxed{\\begin{pmatrix}1 & 2 & 3\\end{pmatrix}}$$", "id": "1507088"}]}