{"hands_on_practices": [{"introduction": "在学习如何最大化网络中的流量之前，我们首先需要理解有效流的基本属性。这个练习将帮助你验证流量守恒定律 —— 对于网络中除源点 $s$ 和汇点 $t$ 之外的任何中间节点，流入该节点的总流量必须等于从该节点流出的总流量。通过验证这一基本原则，你将为理解更复杂的流量算法打下坚实的基础 [@problem_id:1541575]。", "problem": "一个市政供水系统被建模为一个有向图，其中节点代表位置，边代表水管。每条水管都有一个当前流量和一个最大容量。该系统有一个单一的源点，即 `Reservoir`，和一个单一的汇点，即 `Industrial Park`。网络中已经建立了一个特定的流量分配，如下所述。流量值以升/秒 (L/s) 为单位。\n\n该网络由以下位置组成：`Reservoir` (源点)、`Treatment Plant`、`Pumping Station A`、`Pumping Station B`、`Residential District` 和 `Industrial Park` (汇点)。\n\n有向水管及其当前流量/容量如下：\n- 从 `Reservoir` 到 `Treatment Plant`：流量 = 20，容量 = 25。\n- 从 `Reservoir` 到 `Pumping Station A`：流量 = 10，容量 = 10。\n- 从 `Treatment Plant` 到 `Pumping Station A`：流量 = 12，容量 = 15。\n- 从 `Treatment Plant` 到 `Pumping Station B`：流量 = 8，容量 = 10。\n- 从 `Pumping Station A` 到 `Pumping Station B`：流量 = 5，容量 = 7。\n- 从 `Pumping Station A` 到 `Residential District`：流量 = 17，容量 = 20。\n- 从 `Pumping Station B` 到 `Industrial Park`：流量 = 13，容量 = 15。\n- 从 `Residential District` 到 `Industrial Park`：流量 = 17，容量 = 18。\n\n根据这些信息，确定流经 `Pumping Station A` 的总水量。答案以升/秒为单位表示。最终答案必须是整数。", "solution": "我们将给定的网络建模为一个具有单一源点和汇点的流网络，并在中间节点上应用流守恒原理：对于任何中间节点，总流入量等于总流出量。\n\n令 R 表示 Reservoir，TP 表示 Treatment Plant，A 表示 Pumping Station A，B 表示 Pumping Station B，RD 表示 Residential District，IP 表示 Industrial Park。令 $f_{\\text{X}\\to \\text{Y}}$ 表示从节点 X 到节点 Y 的既定流量，单位为升/秒。给定的流量为：\n$$\nf_{\\text{R}\\to \\text{TP}}=20,\\quad f_{\\text{R}\\to \\text{A}}=10,\\quad f_{\\text{TP}\\to \\text{A}}=12,\\quad f_{\\text{TP}\\to \\text{B}}=8,\n$$\n$$\nf_{\\text{A}\\to \\text{B}}=5,\\quad f_{\\text{A}\\to \\text{RD}}=17,\\quad f_{\\text{B}\\to \\text{IP}}=13,\\quad f_{\\text{RD}\\to \\text{IP}}=17.\n$$\n在节点 A (一个中间节点) 处，根据流守恒原理可得\n$$\n\\text{流入A} = \\text{从A流出}。\n$$\nA 的总流入量是从 R 和 TP 到达的流量之和：\n$$\n\\text{流入A} = f_{\\text{R}\\to \\text{A}} + f_{\\text{TP}\\to \\text{A}} = 10 + 12 = 22.\n$$\nA 的总流出量是发往 B 和 RD 的流量之和：\n$$\n\\text{从A流出} = f_{\\text{A}\\to \\text{B}} + f_{\\text{A}\\to \\text{RD}} = 5 + 17 = 22.\n$$\n两者相等，符合流守恒原理。因此，流经 `Pumping Station A` 的总水量是其总流入量（等同于总流出量）的共同值，即 22 升/秒。", "answer": "$$\\boxed{22}$$", "id": "1541575"}, {"introduction": "Ford-Fulkerson 算法的核心在于不断寻找并利用“增广路径”来逐步增加总流量。通过这个练习，你将亲手模拟该算法前两次迭代的执行过程，直观地体验流量是如何在 残差图 (residual graph) 中被一步步提升的 [@problem_id:1541570]。这个实践将加深你对算法工作机制的理解，并为你解决更复杂的最大流问题做好准备。", "problem": "一个救灾机构正在协调从一个中央仓库（`S`）到受灾城镇（`T`）的物资分配。物资通过一个由中间转运点（`A`、`B`、`C`、`D`）组成的网络进行运输。这些地点之间的道路网络可以建模为一个有向图，其中每条边代表一条单向路径，具有以“单位物资/小时”为单位的最大容量。\n\n该网络由以下有向边及其容量定义：\n- 从 `S` 到 `A`：容量 10\n- 从 `S` 到 `B`：容量 8\n- 从 `A` 到 `C`：容量 7\n- 从 `A` 到 `D`：容量 4\n- 从 `B` 到 `D`：容量 6\n- 从 `C` 到 `T`：容量 9\n- 从 `D` 到 `C`：容量 2\n- 从 `D` 到 `T`：容量 12\n\n网络中所有其他可能的有向边的容量均为0。\n\n你的任务是，在使用福特-富尔克森（Ford-Fulkerson）算法执行恰好两次迭代后，计算从中央仓库 `S` 到受灾城镇 `T` 的总流量。增广路径必须使用从源点 `S` 开始的深度优先搜索（DFS）来找到。在从任何给定节点进行探索时，你必须按字母顺序考虑其邻居节点。\n\n请以单个整数的形式提供最终答案。", "solution": "我们应用从 $S$ 开始的 Ford-Fulkerson 算法，使用深度优先搜索，在每一步按字母顺序探索邻居节点，并沿着找到的第一条 $S$–$T$ 路径进行增广。边 $(u,v)$ 上的残余容量记为 $r(u,v)$，初始值设为给定的容量 $c(u,v)$，反向边的初始容量设为零。每次增广都会更新残余容量：将 $r(u,v)$ 减去路径流量，并将 $r(v,u)$ 增加相同的值，以保持流量守恒。\n\n第1次迭代（初始残余容量 $r=c$）：从 $S$ 出发，DFS 在探索 $B$ 之前先探索 $A$。从 $A$ 出发，它在探索 $D$ 之前先探索 $C$。从 $C$ 出发，它到达 $T$。找到的第一条增广路径是 $S \\to A \\to C \\to T$。其瓶颈容量是\n$$\n\\Delta f_{1}=\\min\\{c(S,A),c(A,C),c(C,T)\\}=\\min\\{10,7,9\\}=7.\n$$\n更新残余容量：$r(S,A)=10-7=3$, $r(A,S)=7$；$r(A,C)=7-7=0$, $r(C,A)=7$；$r(C,T)=9-7=2$, $r(T,C)=7$。\n\n第2次迭代（使用更新后的残余容量）：从 $S$ 出发，由于 $r(S,A)=3>0$，DFS 再次首先探索 $A$。从 $A$ 出发，它首先尝试 $C$，但 $r(A,C)=0$，因此它转向 $D$，此时 $r(A,D)=4>0$。从 $D$ 出发，它在探索 $T$ 之前先探索 $C$；$r(D,C)=2>0$。从 $C$ 出发，它到达 $T$，此时 $r(C,T)=2>0$。找到的第一条增广路径是 $S \\to A \\to D \\to C \\to T$。其瓶颈容量是\n$$\n\\Delta f_{2}=\\min\\{r(S,A),r(A,D),r(D,C),r(C,T)\\}=\\min\\{3,4,2,2\\}=2.\n$$\n更新残余容量：$r(S,A)=3-2=1$, $r(A,S)=7+2=9$；$r(A,D)=4-2=2$, $r(D,A)=2$；$r(D,C)=2-2=0$, $r(C,D)=2$；$r(C,T)=2-2=0$, $r(T,C)=7+2=9$。\n\n经过恰好两次增广后，从 $S$ 到 $T$ 的总流量值为\n$$\n|f|=\\Delta f_{1}+\\Delta f_{2}=7+2=9.\n$$", "answer": "$$\\boxed{9}$$", "id": "1541570"}, {"introduction": "最大流最小割定理是网络流理论的基石，它揭示了网络中的最大流量等于其最小 $s$-$t$ 割的容量。这个练习将挑战你运用该定理，通过分析和识别一个具有特定最小割值的网络，将抽象理论应用到具体的设计和分析问题中 [@problem_id:1541522]。这有助于你建立对流量和割之间深刻联系的直观理解，这是掌握 Ford-Fulkerson 算法的关键。", "problem": "考虑一个表示流网络的有向图。每个网络都有一个指定的源顶点 $s$ 和一个汇顶点 $t$。这些网络由其顶点集 $V$ 和有向边集 $E$ 定义。每条边 $(u, v) \\in E$都有一个相关的整数容量 $c(u, v) > 0$。\n\n根据最大流最小割定理，网络中从 $s$ 到 $t$ 的最大流等于一个 $s$-$t$ 割的最小容量。一个 $s$-$t$ 割是顶点 $V$ 的一个划分，将其分为两个不相交的集合 $S$ 和 $T$，使得 $s \\in S$ 且 $t \\in T$。割 $(S,T)$ 的容量是所有满足 $u \\in S$ 和 $v \\in T$ 的边 $(u,v)$ 的容量之和。\n\n您的任务是确定以下四个网络中哪一个**同时**满足以下两个条件：\n1. 最小 $s$-$t$ 割的容量恰好为 10。\n2. 网络中没有任何一条边的容量等于 10。\n\n这些网络以顶点列表和边及其容量列表的形式描述，格式为（起始顶点，结束顶点，容量）。\n\nA. 顶点 $V = \\{s, u, v, w, x, t\\}$。边和容量 $E = \\{(s, u, 11), (s, v, 11), (u, w, 6), (v, x, 4), (w, t, 12), (x, t, 12)\\}$。\n\nB. 顶点 $V = \\{s, u, v, w, x, t\\}$。边和容量 $E = \\{(s, u, 13), (s, v, 13), (u, w, 8), (v, x, 4), (w, t, 14), (x, t, 14)\\}$。\n\nC. 顶点 $V = \\{s, u, v, w, t, z\\}$。边和容量 $E = \\{(s, u, 6), (s, v, 4), (u, w, 10), (v, w, 10), (w, t, 10)\\}$。顶点 $z$ 是孤立的。\n\nD. 顶点 $V = \\{s, u, v, w, x, t\\}$。边和容量 $E = \\{(s, u, 7), (s, v, 7), (u, w, 7), (v, x, 7), (w, t, 7), (x, t, 7)\\}$。", "solution": "我们使用最大流最小割定理：对于每个网络，最大 $s$-$t$ 流等于最小 $s$-$t$ 割的容量。对于给定的图，有两条边不相交的 $s$-$t$ 路径；可实现的总流量是两条路径上瓶颈流量的总和，前提是该总和不超过从 $s$ 流出或流入 $t$ 的总容量。然后我们通过一个显式的割来验证最小割的值，并检查是否有任何单条边的容量为 10。\n\n网络 A：\n- 路径：$s \\to u \\to w \\to t$ 和 $s \\to v \\to x \\to t$。\n- 路径瓶颈：\n$$\n\\min\\{c(s,u),c(u,w),c(w,t)\\}=\\min\\{11,6,12\\}=6,\\quad \\min\\{c(s,v),c(v,x),c(x,t)\\}=\\min\\{11,4,12\\}=4.\n$$\n- 瓶颈之和：$6+4=10$。\n- 从 $s$ 流出：$c(s,u)+c(s,v)=11+11=22$，流入 $t$：$c(w,t)+c(x,t)=12+12=24$，因此这些不会将流量限制在 10 以下。\n- 构造一个割 $(S,T)$，其中 $S=\\{s,u,v\\}$ 且 $T=\\{w,x,t\\}$。其容量为\n$$\nc(u,w)+c(v,x)=6+4=10.\n$$\n因此，最大流为 $10$，最小割容量为 $10$。没有边的容量为 10，因为容量的多重集是 $\\{11,11,6,4,12,12\\}$。\n\n网络 B：\n- 路径瓶颈：\n$$\n\\min\\{13,8,14\\}=8,\\quad \\min\\{13,4,14\\}=4,\\quad \\text{sum }=12.\n$$\n- 从 $s$ 流出：$26$，流入 $t$：$28$。因此最大流为 $12$。任何与此匹配的割都至少为 $12$，所以最小割容量为 $12\\neq 10$。条件 1 不满足。\n\n网络 C：\n- 从 $s$ 流出：$c(s,u)+c(s,v)=6+4=10$，流入 $t$：$c(w,t)=10$。因此，任何 $s$-$t$ 流最多为 $10$。将 6 个单位的流量沿 $s \\to u \\to w \\to t$ 发送，4 个单位的流量沿 $s \\to v \\to w \\to t$ 发送，可以达到 10，所以最小割容量为 10。\n- 然而，存在容量为 10 的边（即 $c(u,w)=10$, $c(v,w)=10$, 和 $c(w,t)=10$），这违反了条件 2。\n\n网络 D：\n- 路径瓶颈：\n$$\n\\min\\{7,7,7\\}=7,\\quad \\min\\{7,7,7\\}=7,\\quad \\text{sum }=14.\n$$\n- 从 $s$ 流出：$14$，流入 $t$：$14$。因此最大流为 $14$，所以最小割容量为 $14\\neq 10$。条件 1 不满足。\n\n只有网络 A 同时满足最小 $s$-$t$ 割的容量为 10 且没有任何单条边的容量为 10 这两个条件。", "answer": "$$\\boxed{A}$$", "id": "1541522"}]}