{"hands_on_practices": [{"introduction": "本练习旨在探索有根树的结构极限。通过确定一个顶点可能拥有的最大兄弟节点数，我们能更深刻地理解树的形态如何影响其局部连接性。这个思想实验不仅能巩固你对“兄弟节点”定义的理解，还能锻炼你在所有可能的树结构中寻找极值情况的推理能力 [@problem_id:1525716]。", "problem": "在图论中，有根树是一个连通无环图，其中一个特殊的顶点被指定为“根”。对于任何其他顶点，从根到该顶点都存在一条唯一的简单路径。这引出了一种父子关系：在从根到顶点 $v$ 的唯一路径上，如果顶点 $u$ 是顶点 $v$ 的前驱顶点，那么 $u$ 就是 $v$ 的“父节点”，而 $v$ 是 $u$ 的一个“子节点”。如果两个不同的顶点拥有相同的父节点，它们就被称为“兄弟节点”。\n\n考虑所有总共有 $n$ 个顶点（其中 $n \\ge 3$）的可能构成的有根树的集合。你的任务是确定单个顶点可能拥有的最大兄弟节点数。将你的答案表示为关于 $n$ 的公式。", "solution": "设一个有根树有 $n$ 个顶点，其中 $n \\geq 3$。对于任意一个父节点为 $p$ 的非根顶点 $v$，其兄弟节点的数量等于 $p$ 的子节点数量减一。用 $c(p)$ 表示 $p$ 的子节点数量。那么 $v$ 的兄弟节点数量为\n$$\n\\text{siblings}(v) = c(p) - 1.\n$$\n为了在所有包含 $n$ 个顶点的有根树的所有顶点中最大化 $\\text{siblings}(v)$，我们必须为某个父节点 $p$ 最大化 $c(p)$。\n\n观察可知，$c(p)$ 不能超过除 $p$ 自身以外的顶点数量。因此，\n- 如果 $p$ 是根节点，那么 $c(p) \\leq n - 1$，当该树为有根星形图，且根节点与所有其他 $n-1$ 个顶点都相邻（这些顶点都是它的子节点）时，等号成立。\n- 如果 $p$ 不是根节点，那么 $p$ 有一个父节点，所以至少有2个顶点不是它的子节点（即 $p$ 本身和它的父节点），这意味着 $c(p) \\leq n - 2$。\n\n因此，$c(p)$ 的全局最大值是 $n - 1$，当 $p$ 是一个星形图的根节点时达到。因此，任何单个顶点可以拥有的最大兄弟节点数是\n$$\n\\max \\text{siblings}(v) = (n - 1) - 1 = n - 2,\n$$\n在一个有 $n$ 个顶点的有根星形图中，任意叶节点均可达到该界。", "answer": "$$\\boxed{n-2}$$", "id": "1525716"}, {"introduction": "这项挑战将我们从思考单个顶点的属性，提升到分析整个树的全局约束。它提出了一个看似简单的设计规则——每个节点都必须有不同数量的孩子——并要求我们判断其可能性。解决这个问题需要我们将“孩子”这一局部概念与图论的一个基本定理（顶点和边的数量关系）联系起来，这是理论计算机科学中的一项关键技能 [@problem_id:1525689]。", "problem": "一名计算机科学专业的学生正在研究层次结构的约束条件。他们正在考虑一种建模为**有根树**的数据结构。有根树是被称为节点的项目的集合，其中一个特殊节点被指定为根节点，而其他每个节点都是根节点的后代。在有根树中，如果从节点 $P$到节点 $C$有一条直接链接，那么节点 $P$是节点 $C$的父节点；在这种情况下，$C$是 $P$的**子节点**。\n\n该学生为总共有 $N$个节点的树提出了一个设计规则：“树中的每个节点必须有不同数量的子节点。”例如，如果一棵树有3个节点，并应用此规则，那么这三个节点的子节点数量必须是三个不同的非负整数。\n\n你的任务是确定对于下列总节点数 $N$中的哪些值，在数学上可以构造出满足此设计规则的有根树。\n\n选择所有可能构造出这种树的 $N$值。\n\nA. $N = 3$\nB. $N = 4$\nC. $N = 5$\nD. $N = 1$\nE. $N = 2$", "solution": "设 $N$个节点的子节点数量分别为 $d_{1},d_{2},\\ldots,d_{N}$。在任何有根树中，所有节点的子节点数之和等于总边数。一棵有 $N$个节点的树有 $N-1$条边，因此\n$$\n\\sum_{i=1}^{N} d_{i} = N - 1.\n$$\n设计规则要求 $d_{1},\\ldots,d_{N}$是 $N$个不同的非负整数。在任何有根树中，至少有一个叶节点，所以至少有一个 $d_{i}=0$。由于子节点数必须各不相同，因此恰好只有一个节点的子节点数为零。为了使 $N$个不同的非负整数之和最小，我们必须取\n$$\n\\{d_{1},\\ldots,d_{N}\\} = \\{0,1,2,\\ldots,N-1\\},\n$$\n这得出了最小可能的和\n$$\n\\sum_{i=1}^{N} d_{i} \\ge 0+1+2+\\cdots+(N-1) = \\frac{N(N-1)}{2}.\n$$\n因此，一个必要条件是\n$$\n\\frac{N(N-1)}{2} \\le N-1.\n$$\n这个不等式等价于\n$$\nN(N-1) \\le 2(N-1) \\quad\\Longleftrightarrow\\quad (N-1)(N-2) \\le 0,\n$$\n该不等式仅在 $1 \\le N \\le 2$时成立。因此，在给定选项中，唯一可能的值是 $N=1$和 $N=2$。\n\n这些值也是充分的：\n- 对于 $N=1$，取单个节点（根节点），其 $d_{1}=0$。\n- 对于 $N=2$，取一个有一个子节点的根节点，其子节点数多重集为 $\\{1,0\\}$，这些数是不同的，且和为 $1=N-1$。\n\n对于 $N\\ge 3$，最小和 $\\frac{N(N-1)}{2}$超过了 $N-1$，使得这样的树不可能存在。\n\n因此，正确的选项是 $N=1$和 $N=2$，即D和E。", "answer": "$$\\boxed{DE}$$", "id": "1525689"}, {"introduction": "理论知识的价值最终体现在实际应用中。本练习将抽象的树关系（如父、子、孙）置于具体的计算机数据结构背景下。通过分析给定的父节点指针表示法，你需要设计一种算法来遍历这些关系，这对于处理任何分层数据（从文件系统到组织结构图）都是一项至关重要的实践技能 [@problem_id:1525692]。", "problem": "一个软件组件的层次结构系统被建模为一棵有根树，其中组件由带整数标签的节点表示。该树结构使用左孩子右兄弟表示法来定义。对于每个组件 `v`，其与其他组件的结构关系由三个值给出：`parent[v]`、`left_child[v]` 和 `right_sibling[v]`。\n- `parent[v]` 是 `v` 的父组件的整数标签。根组件的父组件值为 -1。\n- `left_child[v]` 是 `v` 的子组件列表中的第一个组件的标签。如果 `v` 没有子组件（即它是一个叶节点），则此值为 -1。\n- `right_sibling[v]` 是与 `v` 共享同一父组件的下一个组件的标签。如果 `v` 是其兄弟列表中的最后一个子组件，则此值为 -1。\n\n如果 `parent[Y]` 是 `X`，那么组件 `Y` 是组件 `X` 的一个子组件。如果 `Z` 的父组件是 `X` 的子组件，那么组件 `Z` 是组件 `X` 的一个孙组件。\n\n考虑一个由11个组件（编号从0到10）组成的系统，由以下数组定义：\n- `parent` = `[-1, 0, 1, 1, 2, 2, 3, 0, 7, 7, 7]`\n- `left_child` = `[1, 2, 4, 6, -1, -1, -1, 8, -1, -1, -1]`\n- `right_sibling` = `[-1, 7, 3, -1, 5, -1, -1, -1, 9, 10, -1]`\n\n基于此结构，请确定组件1的所有孙组件的集合。\n\nA. {2, 3}\nB. {4, 5, 6}\nC. {2, 3, 4, 5, 6}\nD. {8, 9, 10}\nE. {4, 5}", "solution": "一个节点 $Y$ 是节点 $X$ 的子节点，当且仅当 $\\text{parent}[Y]=X$。因此，节点1的子节点集合是\n$$\\{v \\mid \\text{parent}[v]=1\\}.$$\n从给定的数组 $\\text{parent}=[-1,0,1,1,2,2,3,0,7,7,7]$ 中，我们读出 $\\text{parent}[2]=1$ 和 $\\text{parent}[3]=1$，所以1的子节点是\n$$\\{2,3\\}.$$\n\n一个节点 $Z$ 是节点 $X$ 的孙节点，当且仅当 $\\text{parent}[Z]$ 是 $X$ 的一个子节点，等价于\n$$\\{Z \\mid \\text{parent}[Z] \\in \\{v \\mid \\text{parent}[v]=X\\}\\}.$$\n当 $X=1$ 且子节点为 $\\{2,3\\}$ 时，孙节点是\n$$\\{Z \\mid \\text{parent}[Z]\\in\\{2,3\\}\\}.$$\n从父数组中可知，$\\text{parent}[4]=2$、$\\text{parent}[5]=2$ 以及 $\\text{parent}[6]=3$，因此1的所有孙节点的集合是\n$$\\{4,5,6\\}.$$\n\n在这些选项中，这对应于选项B。", "answer": "$$\\boxed{B}$$", "id": "1525692"}]}