{"hands_on_practices": [{"introduction": "Kruskal 算法是寻找最小生成树（MST）的一种经典贪心策略。该练习将带你亲手实践此算法的核心逻辑：按权重递增的顺序检查所有边，并仅在不形成环路的情况下将其加入树中。通过这个练习，你将聚焦于识别并拒绝会形成环路的边的关键步骤，从而巩固对 Kruskal 算法工作原理的理解 [@problem_id:1542323]。", "problem": "一个工程师团队正在设计一个经济高效的通信网络，以连接七个远程数据中心，这些数据中心分别标记为 A、B、C、D、E、F 和 G。建立任意两个数据中心之间直接链路的成本是给定的。该网络被表示为一个带权无向图，其中顶点是数据中心，边是潜在的链路，其相关成本作为权重。所有可能的链路及其成本列表如下：\n\n*   (B, C) 成本为 10\n*   (F, G) 成本为 7\n*   (A, F) 成本为 11\n*   (A, C) 成本为 5\n*   (C, D) 成本为 3\n*   (D, G) 成本为 8\n*   (E, F) 成本为 4\n*   (A, B) 成本为 2\n*   (E, G) 成本为 9\n*   (B, D) 成本为 6\n\n为最小化总成本，该团队决定使用 Kruskal 算法为此网络构建一个最小生成树 (MST)。以下哪条边是该算法所考虑的第一条、但因其会形成环路而最终被拒绝的边？\n\nA. (B, C)\n\nB. (D, G)\n\nC. (E, G)\n\nD. (A, C)\n\nE. (B, D)", "solution": "Kruskal 算法按权重的非递减顺序选择边，当且仅当一条边连接两个不同的连通分量时才添加它；如果一条边的两个端点已经连通（即在同一个连通分量中），那么这条边将被明确拒绝（因为添加它会创建一个环路）。\n\n将各边按权重排序：\n$$(A,B):2,\\ (C,D):3,\\ (E,F):4,\\ (A,C):5,\\ (B,D):6,\\ (F,G):7,\\ (D,G):8,\\ (E,G):9,\\ (B,C):10,\\ (A,F):11.$$\n\n逐步进行，维护由连通分量组成的森林：\n1. 考虑成本为 $2$ 的边 $(A,B)$：连通分量为 $\\{A,B\\},\\ \\{C\\},\\ \\{D\\},\\ \\{E\\},\\ \\{F\\},\\ \\{G\\}$。添加该边。\n2. 考虑成本为 $3$ 的边 $(C,D)$：连通分量为 $\\{A,B\\},\\ \\{C,D\\},\\ \\{E\\},\\ \\{F\\},\\ \\{G\\}$。添加该边。\n3. 考虑成本为 $4$ 的边 $(E,F)$：连通分量为 $\\{A,B\\},\\ \\{C,D\\},\\ \\{E,F\\},\\ \\{G\\}$。添加该边。\n4. 考虑成本为 $5$ 的边 $(A,C)$：此边连接了 $\\{A,B\\}$ 和 $\\{C,D\\}$，因此添加它。连通分量变为 $\\{A,B,C,D\\},\\ \\{E,F\\},\\ \\{G\\}$。\n5. 考虑成本为 $6$ 的边 $(B,D)$：$B$ 和 $D$ 都已在同一个连通分量 $\\{A,B,C,D\\}$ 中，因此添加 $(B,D)$ 将会形成一个环路。这是第一条被考虑并被拒绝的边。\n\n因此，第一条被拒绝的边是 $(B,D)$，对应于选项 E。", "answer": "$$\\boxed{E}$$", "id": "1542323"}, {"introduction": "一个常见的问题是：最小生成树（MST）中的路径是否也是图中节点间的最短路径？本练习旨在辨析两个不同的优化目标：最小化生成树的总权重与最小化特定节点对之间的路径长度。通过这个思想实验，你将深刻理解为何 MST 算法的贪心选择不能保证得到任意两点间的最短路径，这对于在实际问题中正确应用图算法至关重要 [@problem_id:1542324]。", "problem": "一个网络工程团队的任务是为一个区域性互联网服务提供商设计骨干网。该设计涉及连接一组 `n` 个服务器枢纽。在任意两个枢纽 `u` 和 `v` 之间铺设直连光纤电缆的成本由一个正权重 `w(u,v)` 给出，该权重与距离成正比。为了最小化总基础设施成本，该团队决定构建一个网络，该网络对应于所有 `n` 个枢纽组成的完全图的最小生成树 (MST)，其中顶点是枢纽，边权重是成本 `w(u,v)`。MST 以可能的最小总电缆成本连接所有枢纽。\n\n在基于 MST 的网络构建完成后，一个数据包需要从源枢纽 `S` 发送到目的枢纽 `D`。数据包的路径被限制为只能使用作为 MST 一部分而构建的电缆。设此 MST 中唯一路径的总成本（边权重之和）为 $C_{\\mathrm{MST}}(S, D)$。\n\n现在，考虑最初的假设情景，即可以在*任何*两个枢纽之间铺设直连电缆。在这个原始完全图中的真实最短路径的成本为 $C_{\\mathrm{Shortest}}(S, D)$，它表示如果任何连接都可能的话，将数据包从 `S` 传输到 `D` 的最小可能成本。\n\n对于任何此类网络中任意一对枢纽 `S` 和 `D`，以下哪个陈述正确描述了 $C_{\\mathrm{MST}}(S, D)$ 和 $C_{\\mathrm{Shortest}}(S, D)$ 之间的一般关系？\n\nA. $C_{\\mathrm{MST}}(S, D)$ 总是等于 $C_{\\mathrm{Shortest}}(S, D)$。\n\nB. 除非 `S` 和 `D` 在 MST 中由一条边直接相连，否则 $C_{\\mathrm{MST}}(S, D)$ 总是严格大于 $C_{\\mathrm{Shortest}}(S, D)$。\n\nC. $C_{\\mathrm{MST}}(S, D)$ 可能严格大于 $C_{\\mathrm{Shortest}}(S, D)$。这可能发生，因为 MST 算法的贪心选择是向生长中的树添加下一个最便宜的边，这不保证任意两个节点之间的最终路径是可能的最短路径。\n\nD. $C_{\\mathrm{MST}}(S, D)$ 可能严格小于 $C_{\\mathrm{Shortest}}(S, D)$，因为 MST 算法是专门为寻找最小成本结构而设计的。", "solution": "设 $G=(V,E,w)$ 是一个包含 $n$ 个枢纽的完全加权图，对于所有 $\\{u,v\\}\\in E$ 都有 $w(u,v)>0$。设 $T=(V,E_{T})$ 是 $G$ 的一个最小生成树 (MST)。\n\n对于任意两个枢纽 $S,D\\in V$，定义：\n- 在 $G$ 中的最短路径成本为\n$$\nC_{\\mathrm{Shortest}}(S,D) \\equiv d_{G}(S,D) = \\min_{P\\in\\mathcal{P}_{G}(S,D)} \\sum_{e\\in P} w(e),\n$$\n其中 $\\mathcal{P}_{G}(S,D)$ 是 $G$ 中所有 $S$ 到 $D$ 路径的集合。\n- MST 路径成本为\n$$\nC_{\\mathrm{MST}}(S,D) \\equiv d_{T}(S,D) = \\sum_{e\\in P_{T}(S,D)} w(e),\n$$\n其中 $P_{T}(S,D)$ 是树 $T$ 中唯一的 $S$ 到 $D$ 路径。\n\n由于 $E_{T}\\subseteq E$，唯一的路径 $P_{T}(S,D)$ 是 $G$ 中所有 $S$ 到 $D$ 路径中的一个候选路径。因此，\n$$\nd_{G}(S,D) \\leq d_{T}(S,D),\n$$\n即，对于所有 $S,D\\in V$，\n$$\nC_{\\mathrm{Shortest}}(S,D) \\leq C_{\\mathrm{MST}}(S,D)\n$$\n这直接意味着 $C_{\\mathrm{MST}}(S,D)$ 永远不可能严格小于 $C_{\\mathrm{Shortest}}(S,D)$，所以选项 D 是错误的。\n\n为了说明等式不必成立（因此 A 是错误的）以及严格不等式可能发生（支持 C），构造一个包含三个顶点 $a,b,c$ 和由满足 $x<y<2x$ 的参数 $x>0$ 和 $y>0$ 决定的边权重的符号示例。令\n$$\nw(a,b)=x,\\quad w(b,c)=x,\\quad w(a,c)=y.\n$$\nMST 由两条最轻的边组成，因此 $E_{T}=\\{\\{a,b\\},\\{b,c\\}\\}$。那么\n$$\nC_{\\mathrm{MST}}(a,c)=d_{T}(a,c)=x+x=2x,\n$$\n而在 $G$ 中，最短的 $a$ 到 $c$ 路径的成本为\n$$\nC_{\\mathrm{Shortest}}(a,c)=d_{G}(a,c)=\\min\\{y,2x\\}=y,\n$$\n并且因为 $y<2x$，我们有 $C_{\\mathrm{MST}}(a,c)>C_{\\mathrm{Shortest}}(a,c)$。这证明了严格不等式是可能的，与选项 C 相符。\n\n为了反驳 B（它声称除非 $S$ 和 $D$ 在 MST 中相邻，否则会是严格不等式），将相同的构造修改为 $y=2x$。此时 $a$ 和 $c$ 在 $T$ 中不相邻，但\n$$\nC_{\\mathrm{MST}}(a,c)=2x=C_{\\mathrm{Shortest}}(a,c),\n$$\n因此即使当 $S$ 和 $D$ 不是由 MST 的边直接连接时，等式也可能成立。因此 B 是错误的。\n\n因此，正确的陈述是，$C_{\\mathrm{MST}}(S,D)$ 可能严格大于 $C_{\\mathrm{Shortest}}(S,D)$，因为 MST 的贪心目标（最小化总树重）不保证任意节点对之间的最短路径最优性。这正是选项 C。", "answer": "$$\\boxed{C}$$", "id": "1542324"}, {"introduction": "在现实世界的网络设计中，我们不仅关心最优解决方案，有时还需要为可靠性分析或战略规划寻找次优选项。这个问题将挑战你利用最小生成树（MST）的“环路性质”，在找到最优解的基础上，系统地找出成本第二低的生成树。这个进阶练习表明，对 MST 核心理论的深刻理解能够帮助你解决更复杂的优化问题，例如确定次优网络配置方案 [@problem_id:1542331]。", "problem": "一家科技公司正在设计一个新一代的分布式计算网络，用于连接其六个主要的数据中心，分别标记为 A、B、C、D、E 和 F。在任意两个中心之间建立高带宽连接的成本由地理和后勤因素决定。连接仅在特定的中心对之间可行，并且所有可能的连接成本都是不同的。可用的连接及其相关成本（以百万美元为单位）如下所示：\n\n- (A, B): 3\n- (A, C): 5\n- (A, D): 8\n- (B, C): 4\n- (B, E): 7\n- (B, F): 10\n- (C, D): 2\n- (C, E): 12\n- (C, F): 9\n- (D, E): 11\n- (D, F): 6\n- (E, F): 1\n\n一个有效的网络必须确保所有数据中心都（直接或间接）相连，同时不包含任何环路（即，该网络必须形成一个生成树）。公司已经确定了总成本绝对最小的网络。为了进行战略规划和弹性分析，他们现在需要确定成本*第二低*的有效网络配置的总成本。\n\n计算这个成本第二低的网络的总成本。请以百万美元为单位，将答案表示为一个数字。", "solution": "我们将数据中心和可行连接建模为一个顶点集为 $\\{A,B,C,D,E,F\\}$ 的连通、带权、无向图，且所有边的权重都不同。一个连接所有顶点且不含环路的有效网络就是一个生成树。最小生成树 (MST) 可以通过 Kruskal 算法找到，该算法按权重严格递增的顺序添加边，跳过任何会形成环路的边，并在为 $n$ 个顶点获得 $n-1$ 条边后停止。\n\n按权重递增排序所有边：\n$$EF:1,\\ CD:2,\\ AB:3,\\ BC:4,\\ AC:5,\\ DF:6,\\ BE:7,\\ AD:8,\\ CF:9,\\ BF:10,\\ DE:11,\\ CE:12.$$\n逐步应用 Kruskal 算法：\n- 添加 $EF$ (无环路)。\n- 添加 $CD$ (无环路)。\n- 添加 $AB$ (无环路)。\n- 添加 $BC$ (无环路)。\n- 跳过 $AC$ (它会形成环路 $A\\!-\\!B\\!-\\!C\\!-\\!A$ )。\n- 添加 $DF$ (它连接了当前的两个连通分量)。\n\n我们现在有 6 个顶点和 5 条边，因此这构成了最小生成树 (MST)：\n$$\\{EF,\\,CD,\\,AB,\\,BC,\\,DF\\}$$\n总权重为 $w_{\\text{MST}}=1+2+3+4+6=16$。\n\n由于所有边的权重都不同，最小生成树是唯一的。成本第二低的生成树可以通过以下方法获得：考虑每一条非树边 $e=\\{u,v\\}$（其权重为 $w(e)$），在 MST 中找到连接 $u$ 和 $v$ 的唯一路径 $P$，找出 $P$ 上的最大边权 $w_{\\max}(P)$，然后用边 $e$ 替换 $P$ 上的那条最大权重边来形成一棵新的树。得到的总权重为 $w_{\\text{MST}}+w(e)-w_{\\max}(P)$，并且，由于唯一性，$w(e)>w_{\\max}(P)$，所以增加的成本为正。第二优的树对应于所有非树边中能够产生的最小的此类增量。\n\n列出所有非 MST 边并计算增量：\n- $AC:5$，路径 $A\\!-\\!B\\!-\\!C$ 的边权为 $3,4$，所以 $w_{\\max}=4$，增量 $=5-4=1$。\n- $BE:7$，路径 $B\\!-\\!C\\!-\\!D\\!-\\!F\\!-\\!E$ 的边权为 $4,2,6,1$，所以 $w_{\\max}=6$，增量 $=7-6=1$。\n- $AD:8$，路径 $A\\!-\\!B\\!-\\!C\\!-\\!D$ 的边权为 $3,4,2$，所以 $w_{\\max}=4$，增量 $=8-4=4$。\n- $CF:9$，路径 $C\\!-\\!D\\!-\\!F$ 的边权为 $2,6$，所以 $w_{\\max}=6$，增量 $=9-6=3$。\n- $BF:10$，路径 $B\\!-\\!C\\!-\\!D\\!-\\!F$ 的边权为 $4,2,6$，所以 $w_{\\max}=6$，增量 $=10-6=4$。\n- $DE:11$，路径 $D\\!-\\!F\\!-\\!E$ 的边权为 $6,1$，所以 $w_{\\max}=6$, 增量 $=11-6=5$。\n- $CE:12$，路径 $C\\!-\\!D\\!-\\!F\\!-\\!E$ 的边权为 $2,6,1$，所以 $w_{\\max}=6$，增量 $=12-6=6$。\n\n最小增量为 $1$，通过边 $AC$ 和边 $BE$ 均可实现。因此，成本第二低的生成树的总成本为\n$16+1=17$。", "answer": "$$\\boxed{17}$$", "id": "1542331"}]}