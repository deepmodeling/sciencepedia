{"hands_on_practices": [{"introduction": "Prüfer 码的核心魅力在于它能将一个标记树的拓扑结构唯一地转译为一个整数序列。这个练习将引导您亲手实践这个编码过程。通过逐步移除标签最小的叶节点并记录其邻居，您将掌握从一个给定的树生成其对应 Prüfer 码的基本算法。[@problem_id:1529280]", "problem": "在图论中，Prüfer 码（也称为 Prüfer 序列）是与一个标号树相关联的唯一序列。考虑一个标号树 $T$，其顶点集为 $V = \\{1, 2, 3, 4, 5\\}$，边集为 $E = \\{(1,3), (2,3), (3,4), (4,5)\\}$。\n\n求出该树的 Prüfer 码。最终答案应为一个整数序列。", "solution": "对于一个有 $n$ 个顶点的标号树，其 Prüfer 码可以通过重复 $n-2$ 次以下步骤得到：选择标号最小的叶子节点（度为 $1$ 的顶点），记录其唯一的邻居，然后从树中移除该叶子节点。\n\n对于给定的树，其顶点集为 $V=\\{1,2,3,4,5\\}$，边集为 $E=\\{(1,3),(2,3),(3,4),(4,5)\\}$，初始时各顶点的度为 $d(1)=1, d(2)=1, d(3)=3, d(4)=2, d(5)=1$。叶子节点为 $\\{1,2,5\\}$。\n\n步骤 1：最小的叶子节点是 $1$，其邻居是 $3$。记录 $3$。移除 $1$。现在边集为 $\\{(2,3),(3,4),(4,5)\\}$，各顶点的度为 $d(2)=1, d(3)=2, d(4)=2, d(5)=1$。叶子节点为 $\\{2,5\\}$。\n\n步骤 2：最小的叶子节点是 $2$，其邻居是 $3$。记录 $3$。移除 $2$。现在边集为 $\\{(3,4),(4,5)\\}$，各顶点的度为 $d(3)=1, d(4)=2, d(5)=1$。叶子节点为 $\\{3,5\\}$。\n\n步骤 3：最小的叶子节点是 $3$，其邻居是 $4$。记录 $4$。移除 $3$。这就完成了 $n-2=3$ 步。\n\n因此，Prüfer 码是序列 $(3,3,4)$。", "answer": "$$\\boxed{(3, 3, 4)}$$", "id": "1529280"}, {"introduction": "Prüfer 码与标记树之间的一一对应关系意味着编码过程是可逆的。掌握如何从一个 Prüfer 码重建唯一的对应树，是理解这一双射关系的关键。这个练习将带您走过解码算法的全过程，从而巩固您对 Prüfer 码如何捕获并还原树的完整结构的理解。[@problem_id:1529302]", "problem": "在图论中，Prüfer 序列（也称为 Prüfer 码）是与一个带标号的树相关联的唯一序列。根据 Cayley 公式，在 $n$ 个顶点上存在 $n^{n-2}$ 棵不同的带标号的树。$n$ 个顶点上的带标号的树的集合与所有由顶点标号构成的长度为 $n-2$ 的序列的集合之间存在双射，这为该公式提供了一个构造性证明。\n\n考虑一个带标号的树，其顶点集为 $V = \\{1, 2, 3, 4, 5, 6, 7\\}$。与这棵树对应的 Prüfer 序列是由整数序列 $S = (3, 1, 4, 1, 5)$ 给出的。\n\n下列哪个选项表示了这棵树的边集 $E$，其中每条边表示为一个满足 $u < v$ 的数对 $(u, v)$？\n\nA. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (4, 6), (5, 7)\\}$\n\nB. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (4, 6), (5, 6)\\}$\n\nC. $\\{(1, 3), (1, 4), (1, 6), (2, 3), (4, 5), (6, 7)\\}$\n\nD. $\\{(1, 3), (1, 4), (1, 5), (2, 3), (5, 7)\\}$", "solution": "我们使用标准的 Prüfer 序列解码算法。对于一个顶点集为 $V=\\{1,2,3,4,5,6,7\\}$、Prüfer 序列为 $S=(3,1,4,1,5)$（长度为 $n-2=5$）的带标号的树，我们迭代地进行以下操作：\n1) 在每一步中，找到当前顶点集中未出现在当前（剩余）序列中的最小顶点。\n2) 将该顶点与当前序列的第一个元素相连，形成一条边。\n3) 从顶点集中移除该顶点，并从序列中移除第一个元素。\n4) 重复此过程直到序列为空；最后，连接剩下的最后两个顶点。\n\n初始化剩余序列为 $R_{0}=(3,1,4,1,5)$，当前顶点集为 $V_{0}=\\{1,2,3,4,5,6,7\\}$。\n\n步骤 1：出现在 $R_{0}$ 中的元素是 $\\{1,3,4,5\\}$。$V_{0}$ 中未出现在 $R_{0}$ 中的最小顶点是 $2$。添加边 $(2,3)$，移除 $2$ 和第一个元素 $3$。\n现在 $R_{1}=(1,4,1,5)$，$V_{1}=\\{1,3,4,5,6,7\\}$。\n\n步骤 2：$R_{1}$ 中的元素是 $\\{1,4,5\\}$。$V_{1}$ 中未出现在 $R_{1}$ 中的最小顶点是 $3$。添加边 $(3,1)$，移除 $3$ 和第一个元素 $1$。\n现在 $R_{2}=(4,1,5)$，$V_{2}=\\{1,4,5,6,7\\}$。\n\n步骤 3：$R_{2}$ 中的元素是 $\\{1,4,5\\}$。$V_{2}$ 中未出现在 $R_{2}$ 中的最小顶点是 $6$。添加边 $(6,4)$，移除 $6$ 和第一个元素 $4$。\n现在 $R_{3}=(1,5)$，$V_{3}=\\{1,4,5,7\\}$。\n\n步骤 4：$R_{3}$ 中的元素是 $\\{1,5\\}$。$V_{3}$ 中未出现在 $R_{3}$ 中的最小顶点是 $4$。添加边 $(4,1)$，移除 $4$ 和第一个元素 $1$。\n现在 $R_{4}=(5)$，$V_{4}=\\{1,5,7\\}$。\n\n步骤 5：$R_{4}$ 中的元素是 $\\{5\\}$。$V_{4}$ 中未出现在 $R_{4}$ 中的最小顶点是 $1$。添加边 $(1,5)$，移除 $1$ 和第一个元素 $5$。\n现在 $R_{5}=()$（空），$V_{5}=\\{5,7\\}$。\n\n最后一步：序列为空，连接最后两个顶点：添加边 $(5,7)$。\n\n收集所有边，并将每条边写成 $u<v$ 的形式 $(u,v)$，我们得到\n$$\nE=\\{(2,3),(1,3),(4,6),(1,4),(1,5),(5,7)\\}\n=\\{(1,3),(1,4),(1,5),(2,3),(4,6),(5,7)\\}.\n$$\n这与选项 A 一致。作为一致性检查，一个有 $7$ 个顶点的树必须有 $7-1=6$ 条边；选项 D 只有 $5$ 条边，因此是无效的。选项 B 和 C 与重建的集合不同。", "answer": "$$\\boxed{A}$$", "id": "1529302"}, {"introduction": "Prüfer 码不仅仅是一种表示方法，更是一种强大的分析工具。一个最优雅的应用是，我们无需重建整棵树，就可以直接从码中读取节点的度。这个练习将向您展示如何利用一个简单的公式——节点的度 $d(v)$ 等于它在 Prüfer 码中出现的次数加一——来快速确定任何节点的连接性，这突显了 Prüfer 码在解决图论问题时的效率与精妙。[@problem_id:1529298]", "problem": "一棵树定义在一个包含 $n=7$ 个顶点的集合上，这些顶点用从1到7的整数标记。与这棵树对应的 Prüfer 编码为序列 $(1, 3, 2, 3, 1)$。根据此信息，确定树中顶点3的度。", "solution": "我们考虑一棵顶点集为 $\\{1,2,\\ldots,7\\}$ 的带标签树，其 Prüfer 编码为 $(1,3,2,3,1)$。Prüfer 编码的一个标准性质指出，对于任意顶点 $v$，它在树中的度由下式给出：\n$$\n\\deg(v) = 1 + (\\text{$v$ 在 Prüfer 序列中出现的次数})\n$$\n此性质源于 Prüfer 编码的构造过程，其中 $v$ 的每次出现都对应于编码时所记录的一条关联边，而每个顶点作为叶节点在最后会贡献一条额外的关联边。\n\n我们将此性质应用于顶点3。在给定的 Prüfer 序列 $(1,3,2,3,1)$ 中，标签3恰好出现2次。因此，\n$$\n\\deg(3)=1+2=3.\n$$\n这与 Prüfer 序列的长度为 $n-2=5$（当 $n=7$ 时）的事实相符，也与所给序列的长度一致。", "answer": "$$\\boxed{3}$$", "id": "1529298"}]}