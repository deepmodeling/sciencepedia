{"hands_on_practices": [{"introduction": "理论知识需要通过实践来巩固。这个练习将引导你亲手执行Prim算法，模拟在一个实际场景中构建最低成本的通信网络。通过逐步追踪算法的每一步，你将熟悉其核心的贪心选择过程：如何从一个初始点开始，不断将连接到当前树的、成本最低的新顶点纳入图中，直至所有顶点都被连接。[@problem_id:1528055]", "problem": "一个由多家研究机构组成的联合体正在建立一个通信网络，以连接七个偏远的南极科考站。在任意两个科考站之间铺设高速光缆的成本与距离和地形难度成正比。您的任务是确定将所有科考站连接成一个单一网络的最具成本效益的方法。可用的直接连接及其相关成本（以任意单位计）如下：\n\n*   Alpha Base 到 Bravo Point: 4\n*   Alpha Base 到 Charlie Lab: 5\n*   Alpha Base 到 Foxtrot Camp: 9\n*   Bravo Point 到 Charlie Lab: 3\n*   Bravo Point 到 Delta Hub: 8\n*   Charlie Lab 到 Delta Hub: 10\n*   Charlie Lab 到 Echo Site: 6\n*   Charlie Lab 到 Foxtrot Camp: 2\n*   Delta Hub 到 Echo Site: 1\n*   Echo Site 到 Gamma Station: 7\n*   Foxtrot Camp 到 Gamma Station: 11\n\n为了规划网络建设，您将使用Prim算法来寻找一个最小生成树（MST）。如果从Alpha Base开始运行算法，其他科考站被添加到网络中的顺序是什么？\n\n请从以下选项中选择正确的顺序。该顺序首先包含起始站，然后是按添加顺序排列的其他站。\n\nA. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station\n\nB. Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Gamma Station, Echo Site, Delta Hub\n\nC. Alpha Base, Charlie Lab, Foxtrot Camp, Bravo Point, Echo Site, Delta Hub, Gamma Station\n\nD. Alpha Base, Bravo Point, Charlie Lab, Echo Site, Delta Hub, Foxtrot Camp, Gamma Station\n\nE. Alpha Base, Delta Hub, Echo Site, Charlie Lab, Foxtrot Camp, Bravo Point, Gamma Station", "solution": "我们将该网络建模为一个无向加权图，其顶点集为 $\\{\\text{Alpha Base}, \\text{Bravo Point}, \\text{Charlie Lab}, \\text{Delta Hub}, \\text{Echo Site}, \\text{Foxtrot Camp}, \\text{Gamma Station}\\}$，边权重由 $w(u,v)$ 给出：\n$$\n\\begin{aligned}\n&w(\\text{Alpha Base},\\text{Bravo Point})=4,\\quad w(\\text{Alpha Base},\\text{Charlie Lab})=5,\\quad w(\\text{Alpha Base},\\text{Foxtrot Camp})=9,\\\\\n&w(\\text{Bravo Point},\\text{Charlie Lab})=3,\\quad w(\\text{Bravo Point},\\text{Delta Hub})=8,\\\\\n&w(\\text{Charlie Lab},\\text{Delta Hub})=10,\\quad w(\\text{Charlie Lab},\\text{Echo Site})=6,\\quad w(\\text{Charlie Lab},\\text{Foxtrot Camp})=2,\\\\\n&w(\\text{Delta Hub},\\text{Echo Site})=1,\\quad w(\\text{Echo Site},\\text{Gamma Station})=7,\\quad w(\\text{Foxtrot Camp},\\text{Gamma Station})=11.\n\\end{aligned}\n$$\nPrim算法用起始顶点初始化树，并迭代地添加从当前树连接到其外部任意顶点的最小权重边。\n\n用 $T_{0}=\\{\\text{Alpha Base}\\}$ 进行初始化。从 $T_{0}$ 出发的候选边是：\n$$\n(\\text{Alpha Base},\\text{Bravo Point},4),\\;(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9).\n$$\n最小值为 $4$，因此添加 Bravo Point。目前的顺序是：Alpha Base, Bravo Point。现在 $T_{1}=\\{\\text{Alpha Base},\\text{Bravo Point}\\}$。\n\n从 $T_{1}$ 到外部的候选边是：\n$$\n(\\text{Alpha Base},\\text{Charlie Lab},5),\\;(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Charlie Lab},3),\\;(\\text{Bravo Point},\\text{Delta Hub},8).\n$$\n最小值为 $3$，因此添加 Charlie Lab。顺序：Alpha Base, Bravo Point, Charlie Lab。现在 $T_{2}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab}\\}$。\n\n从 $T_{2}$ 到外部的候选边是：\n$$\n(\\text{Alpha Base},\\text{Foxtrot Camp},9),\\;(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Charlie Lab},\\text{Foxtrot Camp},2).\n$$\n最小值为 $2$，因此添加 Foxtrot Camp。顺序：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp。现在 $T_{3}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp}\\}$。\n\n从 $T_{3}$ 到外部的候选边是：\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Charlie Lab},\\text{Echo Site},6),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $6$，因此添加 Echo Site。顺序：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site。现在 $T_{4}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site}\\}$。\n\n从 $T_{4}$ 到外部的候选边是：\n$$\n(\\text{Bravo Point},\\text{Delta Hub},8),\\;(\\text{Charlie Lab},\\text{Delta Hub},10),\\;(\\text{Echo Site},\\text{Delta Hub},1),\\;(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $1$，因此添加 Delta Hub。顺序：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub。现在 $T_{5}=\\{\\text{Alpha Base},\\text{Bravo Point},\\text{Charlie Lab},\\text{Foxtrot Camp},\\text{Echo Site},\\text{Delta Hub}\\}$。\n\n从 $T_{5}$ 到外部的候选边是：\n$$\n(\\text{Echo Site},\\text{Gamma Station},7),\\;(\\text{Foxtrot Camp},\\text{Gamma Station},11).\n$$\n最小值为 $7$，因此添加 Gamma Station。最终顺序：Alpha Base, Bravo Point, Charlie Lab, Foxtrot Camp, Echo Site, Delta Hub, Gamma Station。\n\n这与选项A匹配。", "answer": "$$\\boxed{A}$$", "id": "1528055"}, {"introduction": "理解一个算法为何有效，最好的方法之一是探究为何类似但有缺陷的方法会失败。此问题介绍了一个看似合理的“简化版”Prim算法，并要求你通过一个具体的反例来证明其错误性。通过对比标准Prim算法与这个错误变体的结果，你将更深刻地理解Prim算法贪心策略的精髓——必须在所有连接到“已建成”部分的边中寻找最小值，而非仅仅从最新加入的节点出发。[@problem_id:1528057]", "problem": "一名计算机科学专业的学生 Alex 正在学习图论算法，并提出了一个用于在连通的无向加权图中寻找生成树的改进流程。Alex 认为这个算法总能找到最小生成树（MST）。\n\n**Alex 的算法：**\n1.  使用一个任意的起始顶点 $v_0$ 初始化一棵树 $T$。\n2.  令 $v_{last}$ 为最近添加到 $T$ 中的顶点。\n3.  在所有连接 $v_{last}$ 到一个尚未在 $T$ 中的顶点 $u$ 的边中，找到权重最小的那条边 $(v_{last}, u)$。\n4.  将这条边和顶点 $u$ 添加到树 $T$ 中。\n5.  重复步骤 2-4，直到图中的所有顶点都包含在 $T$ 中。\n\n你的任务是分析 Alex 的算法在一个特定图上的性能。\n\n考虑一个无向加权图 $G$，其顶点集为 $V = \\{A, B, C, D\\}$，边集为 $E$，边的权重如下：\n- $w(A,B) = 1$\n- $w(A,C) = 2$\n- $w(C,D) = 3$\n- $w(B,D) = 4$\n- $w(A,D) = 5$\n\n假设对于 Alex 的算法和用于寻找真正 MST 的标准 Prim 算法，过程都从顶点 A 开始，请计算由 Alex 的算法产生的生成树的总权重以及真正的最小生成树的总权重。\n\n请将你的答案表示为一对数字（Alex 算法的权重，MST 的权重），并使用 LaTeX 的 `pmatrix` 环境来表示一个行矩阵。", "solution": "我们首先分析 Alex 的算法。用顶点 $A$ 初始化树，因此 $T=\\{A\\}$ 且 $v_{\\text{last}}=A$。在与 $A$ 相连且通向尚未在 $T$ 中顶点的边中，候选边为权重为 $1$ 的 $(A,B)$、权重为 $2$ 的 $(A,C)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(A,B)$，所以我们添加边 $(A,B)$ 和顶点 $B$。现在 $T=\\{A,B\\}$ 且 $v_{\\text{last}}=B$。从 $B$ 连接到尚未在 $T$ 中的顶点的边中，唯一的候选边是权重为 $4$ 的 $(B,D)$（因为 $(B,A)$ 连接到一个已包含的顶点，且不存在边 $(B,C)$）。我们添加 $(B,D)$ 和 $D$，所以 $T=\\{A,B,D\\}$ 且 $v_{\\text{last}}=D$。从 $D$ 连接到尚未在 $T$ 中的顶点的边中，候选边有权重为 $3$ 的 $(D,C)$、权重为 $5$ 的 $(D,A)$ 和权重为 $4$ 的 $(D,B)$，但只有 $(D,C)$ 连接到一个新顶点。我们添加 $(D,C)$ 和 $C$。现在所有顶点都已包含在内。因此，Alex 算法生成的树的总权重为\n$$\nw_{\\text{Alex}}=w(A,B)+w(B,D)+w(D,C)=1+4+3=8.\n$$\n\n现在应用从 $A$ 开始的 Prim 算法。初始化 $T=\\{A\\}$。在所有从 $T$ 跨越到 $V\\setminus T$ 的边中，候选边为权重为 $1$ 的 $(A,B)$、权重为 $2$ 的 $(A,C)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(A,B)$，其权重为 $1$，所以添加 $B$ 和边 $(A,B)$。现在 $T=\\{A,B\\}$。从 $T$ 跨越到 $V\\setminus T=\\{C,D\\}$ 的边有权重为 $2$ 的 $(A,C)$、权重为 $5$ 的 $(A,D)$ 和权重为 $4$ 的 $(B,D)$。权重最小的是 $(A,C)$，其权重为 $2$，所以添加 $C$ 和边 $(A,C)$。现在 $T=\\{A,B,C\\}$。跨越到 $V\\setminus T=\\{D\\}$ 的边有权重为 $3$ 的 $(C,D)$、权重为 $4$ 的 $(B,D)$ 和权重为 $5$ 的 $(A,D)$。权重最小的是 $(C,D)$，其权重为 $3$，所以添加 $D$ 和边 $(C,D)$。由 Prim 算法找到的 MST 的总权重为\n$$\nw_{\\text{MST}}=w(A,B)+w(A,C)+w(C,D)=1+2+3=6.\n$$\n\n因此，总权重的配对是 $\\left(8,6\\right)$，使用 $\\mathrm{pmatrix}$ 环境表示为一个行矩阵。", "answer": "$$\\boxed{\\begin{pmatrix}8 & 6\\end{pmatrix}}$$", "id": "1528057"}, {"introduction": "在现实世界中，网络拓扑和连接成本并非一成不变。这个练习模拟了一个常见场景：当一个已存在最优网络（最小生成树）中出现一条新的、可能更优的连接时，我们应如何决策？此问题将引导你运用最小生成树的“环路性质”，学会一种高效的判断方法，而无需从头重新运行整个算法，从而加深对MST动态特性的理解。[@problem_id:1528096]", "problem": "一家科技公司管理着一个由7个服务器农场（标记为A、B、C、D、E、F和G）组成的网络。一位网络架构师已经确定了使用光纤电缆连接所有农场的最具成本效益的方法，从而构成了底层网络图的最小生成树（MST）。成本以千美元为单位，由每条边的权重表示。现有MST中的连接集及其相应成本如下：(A, B) 成本为3，(A, C) 成本为5，(B, D) 成本为8，(C, E) 成本为4，(E, F) 成本为6，以及 (E, G) 成本为9。\n\n一项新的技术进步允许在服务器农场D和G之间建立直接连接，其成本显著降低至7千美元。该公司希望确定，纳入这一新的潜在连接是否会降低保持所有服务器农场连接的总成本。\n\n计算连接所有7个服务器农场所需的新最低总成本，其中包含使用新(D, G)链路的可能性。请以千美元为单位，提供一个数字作为答案。", "solution": "我们有一个现有的最小生成树（MST），其顶点为 $\\{A,B,C,D,E,F,G\\}$，边和权重（以千美元为单位）如下：$(A,B)$ 权重为 $3$，$(A,C)$ 权重为 $5$，$(B,D)$ 权重为 $8$，$(C,E)$ 权重为 $4$，$(E,F)$ 权重为 $6$，以及 $(E,G)$ 权重为 $9$。该MST的总成本通过对所有边的权重求和计算得出：\n$$\nW=\\;3+5+8+4+6+9=\\;35.\n$$\n\n引入一条新的可能边 $(D,G)$，其权重为 $7$。为确定这是否会降低MST的成本，我们使用MST的环路（或割）性质：如果将一条权重为 $w(e)$ 的边 $e=(u,v)$ 添加到MST $T$ 中，会形成一个唯一的环路。如果 $w(e)$ 小于 $T$ 中 $u$ 和 $v$ 之间唯一路径上的最大边权重，那么用边 $e$ 替换该环路上的最大权重边，将产生一个总权重严格更小的新生成树；如果 $w(e)$ 等于该最大值，总权重不变；如果 $w(e)$ 更大，则不添加 $e$ 的MST仍然是最优的。\n\n在当前的MST中，从D到G的唯一路径是\n$$\nD \\to B \\to A \\to C \\to E \\to G,\n$$\n其边权重分别为 $8,\\,3,\\,5,\\,4,\\,9$。此路径上的最大权重为 $9$（在边 $(E,G)$ 上）。由于新边的权重为 $7$，满足 $7<9$，我们用边 $(D,G)$ 替换边 $(E,G)$，从而得到一个成本严格更低的生成树。\n\n新的总成本通过减去被移除边的权重并加上新边的权重来获得：\n$$\nW' \\;=\\; W - 9 + 7 \\;=\\; 35 - 9 + 7 \\;=\\; 33.\n$$\n\n因此，纳入新的 $(D,G)$ 链路将MST成本降低到 $33$ 千美元。", "answer": "$$\\boxed{33}$$", "id": "1528096"}]}