{"hands_on_practices": [{"introduction": "理论知识需要通过实践来巩固。我们的第一个练习将从图着色中最直接的方法之一——贪心算法入手。具体来说，我们将应用 Welsh-Powell 算法，这是一种启发式方法，它通过按度数递减的顺序为顶点着色来寻找色数的一个上界。通过这个按部就班的练习，你将亲手体验如何为一个具体图结构系统地分配颜色，并由此确定其色数的一个有效上界 [@problem_id:1552856]。", "problem": "考虑一个无向图 $G = (V, E)$，其顶点集为 $V = \\{A, B, C, D, E, F, G\\}$，边集 $E$ 包含以下几对：\n$E = \\{(A, B), (A, C), (A, D), (A, F), (B, C), (B, D), (B, E), (C, E), (C, F), (D, G), (E, G)\\}$。\n\nWelsh-Powell 算法是一种用于寻找图的着色的贪心算法。它为图的色数提供了一个上界。该算法的步骤如下：\n1.  计算图中每个顶点的度。\n2.  将顶点按其度的降序排列。如果度数相同，则按字母顺序对顶点进行排序。\n3.  将第一种颜色分配给排序列表中的第一个顶点。\n4.  遍历排序列表中的其余顶点。对于每个顶点，如果它不与任何已用当前颜色着色的顶点相邻，则将此颜色分配给它。\n5.  如果仍有未着色的顶点，选择排序列表中的第一个未着色顶点，并为其分配一种新的、第二种颜色。\n6.  对所有未着色的顶点使用新颜色重复步骤 4 中描述的过程。\n7.  继续此过程，每当所有剩余的未着色顶点都与至少一个当前颜色的顶点相邻时，就引入一种新颜色，直到所有顶点都被着色。\n\n通过将 Welsh-Powell 算法应用于图 $G$，确定实现有效着色所使用的颜色总数。这个数字是多少？", "solution": "通过计算邻接边的数量来计算顶点度：\n$$\\deg(A)=4,\\ \\deg(B)=4,\\ \\deg(C)=4,\\ \\deg(D)=3,\\ \\deg(E)=3,\\ \\deg(F)=2,\\ \\deg(G)=2$$\n按度数降序对顶点进行排序，度数相同时按字母顺序：\n$$(A, B, C, D, E, F, G)$$\n第一种颜色：将颜色 1 分配给 $A$。遍历列表；如果一个顶点不与任何已着色为颜色 1 的顶点相邻，则可以接受颜色 1。$B,C,D,F$ 与 $A$ 相邻，不能接受颜色 1；$E$ 不与 $A$ 相邻，接受颜色 1；$G$ 与 $E$ 相邻，因此不能接受颜色 1。经过这一轮，$\\{A,E\\}$ 的颜色为 1。\n\n第二种颜色：按顺序第一个未着色的顶点是 $B$，将颜色 2 分配给 $B$。继续遍历：$C$ 与 $B$ 相邻，跳过；$D$ 与 $B$ 相邻，跳过；$F$ 不与 $B$ 相邻，获得颜色 2；$G$ 不与 $B$ 和 $F$ 相邻，获得颜色 2。经过这一轮，$\\{B,F,G\\}$ 的颜色为 2。\n\n第三种颜色：剩余未着色的顶点是 $C$ 和 $D$。将颜色 3 分配给 $C$，然后检查 $D$；由于 $C$ 和 $D$ 之间没有边，$D$ 也接受颜色 3。经过这一轮，所有顶点都已用颜色 $\\{1,2,3\\}$ 着色。\n\n因此，Welsh-Powell 算法在该图上总共使用了 $3$ 种颜色。", "answer": "$$\\boxed{3}$$", "id": "1552856"}, {"introduction": "在掌握了贪心算法的基本操作后，一个关键问题随之而来：它的效果如何？这个练习通过一个精心设计的思想实验来回答这个问题。我们将探讨一个特殊的图家族，并展示对于同一个图，仅仅改变顶点的处理顺序，贪心算法得出的颜色数量可以从最优的2种变为任意大的 $n$ 种。这个惊人的结果揭示了算法设计中的一个核心原则：对于许多启发式算法，输入的顺序至关重要，它深刻地影响着算法的性能和结果的质量 [@problem_id:1552858]。", "problem": "考虑一个图族，我们称之为交错二分图（Staggered Bipartite Graphs），对于任意整数 $n \\ge 2$，记作 $S_n$。图 $S_n$ 有一个包含 $2n$ 个顶点的集合，$V = \\{a_1, a_2, \\dots, a_n\\} \\cup \\{b_1, b_2, \\dots, b_n\\}$。顶点 $a_i$ 和顶点 $b_j$ 之间存在一条边，当且仅当它们的下标不同，即 $i \\neq j$。在集合 $\\{a_1, \\ldots, a_n\\}$ 内部的顶点之间没有边相连，在集合 $\\{b_1, \\ldots, b_n\\}$ 内部也没有。\n\n贪心着色算法通过按照一个指定的顺序逐个处理图的顶点来对图进行着色。对每个顶点，它会分配一个其任何已着色的邻居尚未使用过的最小的正整数颜色。\n\n考虑 $S_n$ 的两种不同顶点排序：\n1. 排序 $\\pi_1$：顶点按先列出所有“a”顶点再列出所有“b”顶点的顺序排列：$(a_1, a_2, \\dots, a_n, b_1, b_2, \\dots, b_n)$。\n2. 排序 $\\pi_2$：顶点根据其下标在“a”集和“b”集之间交替排列：$(a_1, b_1, a_2, b_2, \\dots, a_n, b_n)$。\n\n设 $k_1$ 是贪心算法在排序 $\\pi_1$ 下对图 $S_n$ 使用的颜色数。\n设 $k_2$ 是贪心算法在排序 $\\pi_2$ 下对图 $S_n$ 使用的颜色数。\n\n求比值 $\\frac{k_2}{k_1}$ 关于 $n$ 的表达式。", "solution": "给定图 $S_{n}$，其顶点集为 $A=\\{a_{1},\\dots,a_{n}\\}$ 和 $B=\\{b_{1},\\dots,b_{n}\\}$，其中当且仅当 $i\\neq j$ 时，$a_{i}$ 和 $b_{j}$ 之间有边。$A$ 内部或 $B$ 内部没有边。贪心着色算法按给定顺序为每个顶点分配其已着色邻居尚未使用过的最小正整数。\n\n首先考虑排序 $\\pi_{1}=(a_{1},\\dots,a_{n},b_{1},\\dots,b_{n})$。\n- 对于每个 $a_{i}$，当处理它时，它的邻居都还没有被着色，因为 $a_{i}$ 的所有邻居都在集合 $B$ 中，而 $B$ 中的顶点在排序中出现得更晚。因此，每个 $a_{i}$ 都被赋予颜色 $1$。\n- 对于每个 $b_{j}$，其已着色的邻居是所有满足 $i\\neq j$ 的 $a_i$，而这些顶点都被着色为 $1$。因此，颜色 $1$ 被禁止，最小的可用颜色是 $2$。由于集合 $B$ 的顶点之间没有边，每个 $b_{j}$ 也获得颜色 $2$。\n因此，在排序 $\\pi_{1}$ 下，贪心算法恰好使用 $k_{1}=2$ 种颜色。\n\n接下来考虑排序 $\\pi_{2}=(a_{1},b_{1},a_{2},b_{2},\\dots,a_{n},b_{n})$。\n我们对 $i$ 进行归纳证明，对于每个 $i$，$a_{i}$ 和 $b_{i}$ 都被赋予颜色 $i$。\n- 归纳基础 $i=1$：$a_{1}$ 没有已着色的邻居，所以它获得颜色 $1$。接着，$b_{1}$ 与 $a_{1}$ 没有边，所以它也没有已着色的邻居，也获得颜色 $1$。\n- 归纳步骤：假设对于 $1\\leq m\\leq i-1$，$a_{m}$ 和 $b_{m}$ 都具有颜色 $m$。当处理 $a_{i}$ 时，其已着色的邻居恰好是 $b_{1},\\dots,b_{i-1}$（因为对于 $j\\neq i$，$b_{j}$ 与 $a_i$ 相邻）。根据归纳假设，这些邻居使用了颜色 $1,2,\\dots,i-1$，所以 $a_{i}$ 的最小可用颜色是 $i$。接下来，对于 $b_{i}$，其已着色的邻居恰好是 $a_{1},\\dots,a_{i-1}$（因为对于 $j\\neq i$，$a_{j}$ 与 $b_i$ 相邻），根据归纳假设，它们的颜色是 $1,2,\\dots,i-1$。因此，$b_{i}$ 的最小可用颜色也是 $i$。\n根据归纳法，当 $i=n$ 时，该算法恰好使用了颜色 $1,2,\\dots,n$，所以 $k_{2}=n$。\n\n因此，比值为\n$$\n\\frac{k_{2}}{k_{1}}=\\frac{n}{2}\n$$", "answer": "$$\\boxed{\\frac{n}{2}}$$", "id": "1552858"}, {"introduction": "超越简单的算法启发式，我们可以从图的内在结构中寻找其色数更稳健的上界。本练习引入了“图的退化度”（degeneracy）这一概念，它是一个比最大度更精细的图结构参数，并给出了色数的一个更紧的上界：$\\chi(G) \\le d(G) + 1$。为了确定一个特定构造的“桥接轮图”的退化度，你需要找到一个特殊的顶点排序。这个过程不仅能加深你对退化度定义的理解，还能锻炼你分析复杂图结构、寻找证明关键性质的构造性方法的能力 [@problem_id:1552838]。", "problem": "如果图$G$的每个子图都至少有一个度至多为$k$的顶点，则称图$G$为$k$-退化图。使$G$为$k$-退化图的最小整数$k$称为$G$的退化度。定义退化度的另一种等价方式是通过顶点排序：退化度是满足以下条件的最小整数$k$：存在$G$的顶点的一个排序，例如$(v_1, v_2, \\ldots, v_N)$，使得每个顶点$v_i$在集合$\\{v_{i+1}, \\ldots, v_N\\}$中最多有$k$个邻点。\n\n考虑一个为整数$n \\geq 3$构建的特殊图，称为桥接轮图，记作$BW_n$。其构建方法如下：\n1. 从两个相同且不相交的轮图副本开始。每个轮图由一个中心轴顶点和一个由“轮缘”顶点组成的$n$-圈构成，其中中心轴顶点与每个轮缘顶点相连。因此，每个轮图有$n+1$个顶点。\n2. 设第一个轮图的中心轴顶点为$c_1$，其轮缘顶点按圈排列为$(u_1, u_2, \\ldots, u_n)$。这个圈的边为$(u_i, u_{i+1})$（$i=1,\\dots,n-1$）和$(u_n, u_1)$。\n3. 设第二个轮图的中心轴顶点为$c_2$，其轮缘顶点按类似的圈排列为$(v_1, v_2, \\ldots, v_n)$。\n4. 图$BW_n$是通过取这两个轮图的并集，并添加一组“桥”边而形成的。对于从$1$到$n$的每个$i$，添加一条连接顶点$u_i$和顶点$v_i$的边。\n\n确定桥接轮图$BW_n$在任意整数$n \\ge 5$时的退化度。", "solution": "令$G$为桥接轮图$BW_n$。我们首先确定当$n \\ge 5$时，$G$中所有顶点的度。图$G$总共有$2(n+1)$个顶点：两个轴顶点$\\{c_1, c_2\\}$，以及$2n$个轮缘顶点$\\{u_1, \\ldots, u_n\\}$和$\\{v_1, \\ldots, v_n\\}$。\n\n1.  **轴顶点 ($c_1, c_2$):** 轴顶点$c_1$与其$n$个轮缘顶点$u_1, \\ldots, u_n$相连。轴顶点$c_2$与其$n$个轮缘顶点$v_1, \\ldots, v_n$相连。因此，$\\deg(c_1) = \\deg(c_2) = n$。\n\n2.  **轮缘顶点 ($u_i, v_i$):**\n    对于第一个轮缘上的每个顶点$u_i$，其邻点为：\n    - 中心轴顶点$c_1$。\n    - 其在圈上的两个邻点，$u_{i-1}$和$u_{i+1}$（下标在集合$\\{1, \\ldots, n\\}$中对$n$取模）。\n    - 另一个轮缘上对应的顶点$v_i$，通过一条桥边相连。\n    因此，对于每个$i \\in \\{1,\\ldots,n\\}$, $\\deg(u_i) = 1 + 2 + 1 = 4$。\n    类似地，对于第二个轮缘上的每个顶点$v_i$, $\\deg(v_i) = 1 + 2 + 1 = 4$。\n\n$G$中所有顶点的度的集合是$\\{n, 4\\}$。由于题目说明$n \\ge 5$，因此$G$中任意顶点的最小度为$\\delta(G) = \\min(n, 4) = 4$。\n\n现在，令$d(G)$表示$G$的退化度。图的退化度总是大于或等于其任何子图的最小度。特别地，$d(G)$必须大于或等于$G$本身的最小度。因此，我们得到了退化度的一个下界：\n$$d(G) \\ge \\delta(G) = 4$$\n\n为了找到一个上界，我们使用退化度的等价定义并构造一个顶点排序。我们需要找到一个顶点排序$(p_1, p_2, \\ldots, p_{2n+2})$，使得任何顶点$p_j$在其后出现的顶点$(p_{j+1}, \\ldots, p_{2n+2})$ 中最多有$k$个邻点。如果我们能为$k=4$找到这样一个排序，我们就能证明$d(G) \\le 4$。\n\n考虑以下排序$\\mathcal{O}$：\n$$ \\mathcal{O} = (u_1, u_2, \\ldots, u_n, v_1, v_2, \\ldots, v_n, c_1, c_2) $$\n让我们分析每个顶点的“前向邻点”（在$\\mathcal{O}$中排在后面的邻点）的数量。\n\n- **对于顶点$u_i$（$1 \\le i \\le n$）:** $u_i$的邻点是$\\{u_{i-1}, u_{i+1}, c_1, v_i\\}$。\n    - 如果$i=1$，其邻点为$\\{u_n, u_2, c_1, v_1\\}$。在排序$\\mathcal{O}$中，所有这些邻点都排在$u_1$之后。所以，$u_1$有4个前向邻点。\n    - 如果$1 < i < n$，其邻点为$\\{u_{i-1}, u_{i+1}, c_1, v_i\\}$。顶点$u_{i-1}$在$\\mathcal{O}$中排在$u_i$之前。顶点$u_{i+1}, c_1, v_i$都排在$u_i$之后。所以，$u_i$有3个前向邻点。\n    - 如果$i=n$，其邻点为$\\{u_{n-1}, u_1, c_1, v_n\\}$。顶点$u_{n-1}$和$u_1$排在$u_n$之前。顶点$c_1$和$v_n$排在$u_n$之后。所以，$u_n$有2个前向邻点。\n在$\\{u_1, \\ldots, u_n\\}$这部分顶点中，任何一个顶点的前向邻点最大数量为4。\n\n- **对于顶点$v_i$（$1 \\le i \\le n$）:** $v_i$的邻点是$\\{v_{i-1}, v_{i+1}, c_2, u_i\\}$。\n    - 对于任何$i$，顶点$u_i$出现在排序的第一部分中，所以它总是一个“后向邻点”。\n    - 如果$i=1$，其邻点为$\\{v_n, v_2, c_2, u_1\\}$。后向邻点是$u_1$。前向邻点是$\\{v_n, v_2, c_2\\}$。所以，$v_1$有3个前向邻点。\n    - 如果$1 < i < n$，其邻点为$\\{v_{i-1}, v_{i+1}, c_2, u_i\\}$。后向邻点是$v_{i-1}$和$u_i$。前向邻点是$\\{v_{i+1}, c_2\\}$。所以，$v_i$有2个前向邻点。\n    - 如果$i=n$，其邻点为$\\{v_{n-1}, v_1, c_2, u_n\\}$。后向邻点是$v_{n-1}$, $v_1$和$u_n$。唯一的前向邻点是$c_2$。所以，$v_n$有1个前向邻点。\n在$\\{v_1, \\ldots, v_n\\}$这部分顶点中，任何一个顶点的前向邻点最大数量为3。\n\n- **对于轴顶点$c_1$和$c_2$：**\n    - $c_1$的邻点是$\\{u_1, \\ldots, u_n\\}$。所有这些顶点在排序$\\mathcal{O}$中都排在$c_1$之前。因此，$c_1$有0个前向邻点。\n    - $c_2$的邻点是$\\{v_1, \\ldots, v_n\\}$。所有这些顶点在$\\mathcal{O}$中都排在$c_2$之前。因此，$c_2$有0个前向邻点。\n\n对于此排序$\\mathcal{O}$，图中所有顶点的最大前向邻点数量为4（由顶点$u_1$达到）。这证明了$G$的退化度最多为4。\n$$d(G) \\le 4$$\n\n结合我们的两个结果$d(G) \\ge 4$和$d(G) \\le 4$，我们得出结论，当$n \\ge 5$时，桥接轮图$BW_n$的退化度恰好是4。", "answer": "$$\\boxed{4}$$", "id": "1552838"}]}