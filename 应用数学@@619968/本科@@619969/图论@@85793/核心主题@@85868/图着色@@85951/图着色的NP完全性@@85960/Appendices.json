{"hands_on_practices": [{"introduction": "NP完全性理论的基石是多项式时间归约，它将成百上千个看似无关的难题紧密联系在一起，形成一个“命运共同体”。本练习通过一个思想实验，探讨如果一个已知的 $NP$-完全问题（如子集和问题）被发现存在多项式时间解法，会对另一个著名的 $NP$-完全问题（如图的3-着色问题）产生怎样的直接影响 [@problem_id:1463413]。这有助于你深刻理解 $NP$-完全问题的定义以及它们之间相互关联的本质，并认识到为何攻克任何一个 $NP$-完全问题都意味着攻克了整个难题类别。", "problem": "在计算复杂性理论中，问题根据其资源需求被分类到不同的集合中。P 类包含所有可以在多项式时间内由确定性算法解决的判定问题。NP 类（非确定性多项式时间）包含所有判定问题，其“是”实例的解可以在多项式时间内被验证。如果一个问题属于 NP，并且是 NP 中“最难”的问题之一，则该问题被称为 NP 完全问题。NP 完全问题的一个关键特性是，任何 NP 中的问题都可以在多项式时间内转换（或归约）为任何 NP 完全问题。\n\n两个著名的 NP 完全问题是：\n1.  **子集和问题 (SUBSET-SUM):** 给定一个整数集合 $S$ 和一个目标整数 $t$，$S$ 中是否存在一个非空子集的和等于 $t$？\n2.  **3-着色问题 (3-COLORING):** 给定一个图 $G$，能否用至多三种不同的颜色对它的顶点进行着色，使得任意两个相邻的顶点颜色都不同？\n\n想象一下计算机科学领域的一项重大突破：一位研究人员发现了一种新算法，可以在多项式时间内解决任何子集和问题的实例。基于这一发现，对于 3-着色问题最直接、最确定的逻辑推论是什么？\n\nA. 3-着色问题现在也可以在多项式时间内解决。\n\nB. 3-着色问题的复杂性保持不变，因为其结构与整数求和无关。\n\nC. 3-着色问题变得更难解决，可能需要超多项式时间。\n\nD. 这一发现意味着 3-着色问题实际上不属于 NP 类。\n\nE. 一个图是否是 3-可着色的问题变得不可判定。", "solution": "我们使用多项式时间多一归约的标准概念以及 NP 完全性的定义。\n\n已知子集和问题 (SUBSET-SUM) 是 NP 完全的，根据 NP 完全性的定义，对于每个语言 $X \\in NP$，存在一个多项式时间可计算的归约函数 $f$，使得对于每个实例 $x$，\n$$\nx \\in X \\iff f(x) \\in \\text{SUBSET-SUM},\n$$\n并且 $f$ 可以在以 $|x|$ 为变量的多项式时间内计算出来。形式上，存在一个多项式 $q$，使得 $f$ 的计算时间至多为 $q(|x|)$，并且存在一个多项式 $r$，使得 $|f(x)| \\leq r(|x|)$。\n\n假设一位研究人员发现了一个算法 $\\mathcal{A}$，它可以在多项式时间内判定子集和问题。也就是说，存在一个多项式 $p$，使得对于任何长度为 $m$ 的输入 $y$，$\\mathcal{A}$ 都在至多 $p(m)$ 的时间内判定 $y \\in \\text{SUBSET-SUM}$ 是否成立。\n\n对于任意的 $X \\in NP$ 和输入 $x$，我们可以在至多 $q(|x|)$ 的时间内构造 $f(x)$，然后在至多 $p(|f(x)|) \\leq p(r(|x|))$ 的时间内对 $f(x)$ 运行算法 $\\mathcal{A}$。总时间上限为\n$$\nq(|x|) + p(r(|x|)),\n$$\n这是关于 $|x|$ 的多项式的和，因此其本身也是一个关于 $|x|$ 的多项式。因此，$X \\in P$。由于 $X$ 是 $NP$ 中的任意语言，我们已经证明了 $NP \\subseteq P$。而 $P \\subseteq NP$ 是显然成立的，因此\n$$\nP = NP.\n$$\n\n因为 3-着色问题属于 $NP$ (实际上它是 NP 完全的)，所以可以立即推断出 3-着色问题也属于 $P$。因此，最直接、最确定的逻辑推论是 3-着色问题变得可以在多项式时间内解决。\n\n问题陈述没有错误；它正确地说明了一个针对 NP 完全问题的多项式时间算法所带来的影响。", "answer": "$$\\boxed{A}$$", "id": "1463413"}, {"introduction": "证明一个问题是 $NP$-完全的，核心在于构造一个从已知 $NP$-完全问题到该问题的多项式时间归约。本练习提供了一个清晰的入门实例，指导你通过一个简单的图变换来建立不同着色问题之间的联系 [@problem_id:1524394]。你需要证明一个图 $G$ 的 $k$-可着色性与一个新构造的图 $G'$ 的 $(k+1)$-可着色性是等价的，从而掌握归约证明中的基本逻辑和构造技巧。", "problem": "在计算图论中，一个核心问题是确定图的色数。一个图 $G=(V, E)$，由一个顶点集 $V$ 和一个边集 $E$ 组成，如果可以用 $k$ 种可用颜色中的一种为每个顶点着色，使得任意两个相邻的顶点颜色都不同，则称该图是*k-可着色*的。\n\n考虑一个任意图 $G=(V, E)$ 和一个正整数 $k$。我们通过以下过程从 $G$ 构建一个新图，称之为 $G'$：\n1.  创建一个新顶点 $v_{new}$。$G'$ 的顶点集是 $V' = V \\cup \\{v_{new}\\}$。\n2.  $G'$ 的边集由 $G$ 的所有边以及连接 $v_{new}$ 到原始集合 $V$ 中每个顶点的新边组成。即 $E' = E \\cup \\{ (v, v_{new}) \\mid v \\in V \\}$。\n\n让我们分析原始图 $G$ 的可着色性与新构建的图 $G'$ 的可着色性之间的关系。具体来说，我们关心 $G$ 的 $k$-着色的存在性与 $G'$ 的 $(k+1)$-着色的存在性之间的联系。\n\n以下哪个陈述正确地描述了这种关系？\n\nA. $G$ 存在一个 $k$-着色当且仅当 $G'$ 存在一个 $(k+1)$-着色。\n\nB. 如果 $G$ 有一个 $k$-着色，则 $G'$ 有一个 $(k+1)$-着色，但反之不一定为真。\n\nC. 如果 $G'$ 有一个 $(k+1)$-着色，则 $G$ 有一个 $k$-着色，但反之不一定为真。\n\nD. 无论 $G$ 是否存在 $k$-着色，$G'$ 的 $(k+1)$-着色的存在性都得到保证。\n\nE. $G$ 的 $k$-着色的存在性完全独立于 $G'$ 的 $(k+1)$-着色的存在性。", "solution": "为了确定 $G$ 的 $k$-可着色性与 $G'$ 的 $(k+1)$-可着色性之间的正确关系，我们必须证明两个方向的逻辑蕴涵。假设可用颜色集由整数表示。\n\n首先，我们证明正向蕴涵：**如果 $G$ 存在一个 $k$-着色，那么 $G'$ 存在一个 $(k+1)$-着色。**\n\n假设 $G$ 是 $k$-可着色的。这意味着存在一个着色函数 $c: V \\to \\{1, 2, \\dots, k\\}$，使得对于边集 $E$ 中的每条边 $(u, v)$，都有 $c(u) \\neq c(v)$。\n\n我们需要为 $G'$ 构建一个有效的 $(k+1)$-着色，我们称之为 $c'$。图 $G'$ 的顶点集是 $V' = V \\cup \\{v_{new}\\}$。我们可以如下定义 $c'$：\n- 对于原始集合 $V$ 中的每个顶点 $v$，令 $c'(v) = c(v)$。\n- 对于新顶点 $v_{new}$，令 $c'(v_{new}) = k+1$。\n\n现在，我们必须验证 $c'$ 是一个使用集合 $\\{1, 2, \\dots, k+1\\}$ 中颜色的对 $G'$ 的有效着色。如果任意两个相邻顶点颜色都不同，则该着色是有效的。我们检查 $G'$ 的边集 $E'$ 中的所有边。\n1.  考虑一条原本在 $G$ 中的边 $(u, v)$（即 $(u, v) \\in E$）。根据我们对 $c'$ 的定义，有 $c'(u) = c(u)$ 和 $c'(v) = c(v)$。由于 $c$ 是对 $G$ 的一个有效 $k$-着色，我们知道 $c(u) \\neq c(v)$。因此，$c'(u) \\neq c'(v)$，所以这个条件得到满足。\n2.  考虑一条形如 $(v, v_{new})$ 的新边，其中 $v \\in V$。根据我们的定义，$c'(v) = c(v)$，所以它的颜色在集合 $\\{1, 2, \\dots, k\\}$ 中。新顶点的颜色是 $c'(v_{new}) = k+1$。由于 $c'(v) \\leq k$ 且 $c'(v_{new}) = k+1$，可以保证 $c'(v) \\neq c'(v_{new})$。\n\n由于 $G'$ 中的所有边都连接着不同颜色的顶点，所以 $c'$ 是对 $G'$ 的一个有效 $(k+1)$-着色。因此，我们证明了如果 $G$ 是 $k$-可着色的，那么 $G'$ 是 $(k+1)$-可着色的。\n\n接下来，我们证明反向蕴涵：**如果 $G'$ 存在一个 $(k+1)$-着色，那么 $G$ 存在一个 $k$-着色。**\n\n假设 $G'$ 是 $(k+1)$-可着色的。这意味着存在一个着色函数 $c': V' \\to \\{1, 2, \\dots, k+1\\}$，使得对于边集 $E'$ 中的每条边 $(u', v')$，都有 $c'(u') \\neq c'(v')$。\n\n我们来考察分配给新顶点 $v_{new}$ 的颜色。设此颜色为 $C_{new} = c'(v_{new})$。根据构造，$v_{new}$ 与 $V$ 中的每个顶点 $v$ 相邻。因此，对于任何 $v \\in V$，颜色 $c'(v)$ 必须与 $C_{new}$ 不同。\n这意味着原始集合 $V$ 中的所有顶点都必须使用来自集合 $\\{1, 2, \\dots, k+1\\} \\setminus \\{C_{new}\\}$ 的颜色进行着色。这个可用于 $V$ 的颜色集合恰好包含 $(k+1) - 1 = k$ 种不同的颜色。\n\n现在，我们通过将着色 $c'$ 限制在顶点集 $V$ 上来为原始图 $G$ 定义一个着色 $c$。即，对于每个 $v \\in V$，我们设 $c(v) = c'(v)$。\n我们需要检查 $c$ 是否为对 $G$ 的一个有效 $k$-着色。\n1.  用于 $c$ 的颜色是集合 $\\{1, 2, \\dots, k+1\\} \\setminus \\{C_{new}\\}$ 的一个子集，该集合的大小为 $k$。因此，$c$ 最多使用 $k$ 种颜色。如有必要，我们可以将它们重新标记为 $\\{1, 2, ..., k\\}$。\n2.  考虑 $E$ 中的任意一条边 $(u, v)$。由于 $E$ 是 $E'$ 的一个子集，这条边也存在于 $G'$ 中。因为 $c'$ 是对 $G'$ 的一个有效着色，我们知道 $c'(u) \\neq c'(v)$。根据我们对 $c$ 的定义，这蕴涵着 $c(u) \\neq c(v)$。\n\n由于在着色 $c$ 下 $G$ 中所有相邻顶点都有不同的颜色，且 $c$ 最多使用 $k$ 种颜色，因此 $c$ 是对 $G$ 的一个有效 $k$-着色。因此，我们证明了如果 $G'$ 是 $(k+1)$-可着色的，那么 $G$ 是 $k$-可着色的。\n\n由于蕴涵关系在两个方向上都成立（“如果 $G$ 是 $k$-可着色的，那么 $G'$ 是 $(k+1)$-可着色的”以及“如果 $G'$ 是 $(k+1)$-可着色的，那么 $G$ 是 $k$-可着色的”），这两个陈述在逻辑上是等价的。这对应于“当且仅当”条件。因此，选项A是正确的陈述。", "answer": "$$\\boxed{A}$$", "id": "1524394"}, {"introduction": "一个有效的归约必须精确地将原问题的约束条件转化为新问题的结构。本练习让你扮演批判性思考者的角色，分析一个从经典 $NP$-完全问题“3-集精确覆盖”（X3C）到“3-着色”问题的归约构造 [@problem_id:1524392]。通过找出这个提议的归约中的逻辑缺陷，你将学会如何审视和验证一个复杂归约的正确性，并深刻理解为何确保约束被完整保留是归约成功的关键。", "problem": "为了证明图3-COLORING问题的NP完全性，可以从一个已知的NP完全问题进行多项式时间归约。本问题探讨了一种从3元集合的精确覆盖(X3C)问题出发的可能归约。\n\n3-COLORING判定问题询问的是，对于一个给定的图 $G$，其顶点是否能用至多三种颜色进行着色，使得任意两个相邻的顶点颜色都不同。\n\n3元集合的精确覆盖(X3C)判定问题定义如下：给定一个大小为 $3q$ 的全集 $U = \\{u_1, u_2, \\dots, u_{3q}\\}$ 和一个由 $U$ 的3元素子集构成的集合族 $S = \\{S_1, S_2, \\dots, S_m\\}$，是否存在一个大小为 $q$ 的子集族 $S' \\subseteq S$，它构成了 $U$ 的一个划分？（这意味着 $S'$ 中的集合两两不交，且它们的并集是 $U$。）\n\n考虑一个从X3C实例 $(U, S)$ 构造图 $G$ 的提议方法。该构造的意图是使得图 $G$ 是3-可着色的当且仅当该X3C实例有解。该构造使用以下组件：\n\n1.  **基础部件 (Base Gadget)**：三个特殊顶点 $v_T, v_F, v_B$ 连接成一个三角形。在任何有效的3-着色中，这三个顶点必须被赋予三种不同的颜色。不失一般性地，我们可以将这些颜色分别标记为“真”(T)、“假”(F)和“基准”(B)。\n\n2.  **元素部件 (Element Gadgets)**：对于 $U$ 中的每个元素 $u_i$，创建两个顶点 $x_i$ 和 $\\bar{x}_i$。它们之间通过一条边相连，并且两者也都连接到基准顶点 $v_B$。在任何有效的3-着色中，这种结构迫使 $x_i$ 和 $\\bar{x}_i$ 的颜色是 (T, F) 的一个排列。\n\n3.  **集合部件 (Set Gadget)**：对于 $S$ 中的每个集合 $S_j = \\{u_a, u_b, u_c\\}$，提议了一个简单的“选择器”部件。它由一个新顶点 $s_j$ 组成。该顶点通过边与三个对应的元素顶点相连：$(s_j, x_a)$、$(s_j, x_b)$ 和 $(s_j, x_c)$。\n\n其意图是让图的着色对应于一个有效的精确覆盖。例如，顶点 $s_j$ 的颜色可以表明集合 $S_j$ 是否在覆盖集 $S'$ 中，而顶点 $x_i$ 的颜色可以表明元素 $u_i$ 是否已被覆盖。\n\n然而，这个简单的集合部件存在一个关键的逻辑缺陷，使得该归约无效。以下哪个陈述最准确地指出了这个缺陷？\n\nA) 部件不能保证如果一个集合 $S_j$ 被“选中”，其所有元素 $\\{u_a, u_b, u_c\\}$ 会同时被标记为“已覆盖”。\n\nB) 部件未能强制执行X3C的“恰好一次”覆盖约束，因为它在一个元素被多个集合覆盖时不会产生着色冲突。\n\nC) 如果相关的元素顶点 $x_a, x_b, x_c$ 都被赋予相同的颜色（例如，全部为T或全部为F），则该部件不可着色。\n\nD) 该部件限制性太强；对于任何有解的X3C实例，其生成的图都是不可着色的。\n\nE) 该部件的结构依赖于集合恰好有3个元素且无法泛化，而这是有效归约的一个要求。", "solution": "我们分析在使用标记为 $T$、$F$ 和 $B$ 的颜色进行3-着色时，所提议的部件施加的约束。\n\n1) 根据构造，$v_{T}, v_{F}, v_{B}$ 上的基础三角形迫使这三个顶点必须被赋予三种不同的颜色，我们将其标记为 $T, F, B$。\n\n2) 对于每个元素 $u_{i} \\in U$，包含顶点 $x_{i}$ 和 $\\bar{x}_{i}$ 的元素部件有边 $(x_{i}, \\bar{x}_{i})$、$(x_{i}, v_{B})$ 和 $(\\bar{x}_{i}, v_{B})$。由于 $v_{B}$ 的颜色为 $B$，所以 $x_{i}$ 和 $\\bar{x}_{i}$ 都不能是 $B$，而边 $(x_{i}, \\bar{x}_{i})$ 迫使 $\\{x_{i}, \\bar{x}_{i}\\}$ 的颜色是 $\\{T, F\\}$ 的一个排列。因此，对于每个 $i$，$x_{i} \\in \\{T, F\\}$ 且 $\\bar{x}_{i}$ 是 $\\{T, F\\}$ 中的另一个颜色。\n\n3) 对于每个集合 $S_{j}=\\{u_{a}, u_{b}, u_{c}\\}$，集合部件引入一个顶点 $s_{j}$，其边为 $(s_{j}, x_{a}), (s_{j}, x_{b}), (s_{j}, x_{c})$。由于对于 $\\ell \\in \\{a,b,c\\}$，每个 $x_{\\ell}$ 的颜色都在 $\\{T, F\\}$ 中，所以对 $s_{j}$ 的唯一约束是其颜色必须与当前分配给 $x_{a}, x_{b}, x_{c}$ 的颜色不同。具体来说：\n- 如果 $x_{a}, x_{b}, x_{c}$ 中同时出现 $T$ 和 $F$ 两种颜色，那么 $s_{j}$ 总可以被着色为 $B$。\n- 如果 $x_{a}, x_{b}, x_{c}$ 的颜色都等于 $T$（或 $F$），那么 $s_{j}$ 可以是 $F$ 或 $B$（或 $T$ 或 $B$）。\n因此，该部件永远不会变得不可着色，并且本身并不强制 $s_{j}$ 具有唯一的颜色选择。\n\n为了评估这是否编码了X3C的精确覆盖约束，我们固定一个约定来解释 $s_j$ 的颜色为“被选中”（例如，令 $s_{j}=T$ 表示 $S_{j}$ 被选中，并解释 $x_{i}=F$ 表示“$u_{i}$被覆盖”）。如果 $s_j=T$，那么边 $(s_{j}, x_{a})$、$(s_{j}, x_{b})$、$(s_{j}, x_{c})$ 会迫使 $x_{a}, x_{b}, x_{c} \\neq T$，因此 $x_{a}, x_{b}, x_{c}$ 都必须是 $F$；所以一个被选中的集合 $S_{j}$ 确实可以迫使其相邻的 $x$-顶点被着色为“已覆盖”的颜色。然而，这种机制并不能阻止共享同一元素的多个集合同时被选中：如果 $u_{a}$ 同时属于 $S_{j}$ 和 $S_{k}$，那么设置 $x_{a}=F$ 允许 $s_{j}=T$ 和 $s_{k}=T$ 同时成立而没有任何着色冲突，因为 $s_{j}$ 和 $s_{k}$ 互不相邻，它们都只需要与 $x_a=F$ 的颜色不同即可。同样的推理也适用于它们的其他邻居。因此，一个元素可以被两个或更多个被选中的集合“覆盖”，而不会违反3-可着色性。这违反了X3C“恰好一次”的覆盖要求。\n\n因此，关键缺陷是选择器部件未能强制每个元素恰好被一个选定的集合覆盖；当多个与同一个 $x_{i}$ 相邻的 $s_{j}$ 都采用“被选中”的颜色时，不会产生着色冲突。\n\n这与陈述B相符。为完整起见，请注意：\n- A不是核心问题，因为为 $s_{j}$ 选择一种颜色可以迫使其所有三个邻居采用互补色，所以可以安排“选择即覆盖”的逻辑，但它仍然无法保证唯一性。\n- C是错误的，因为如果 $x_{a}, x_{b}, x_{c}$ 都共享一种颜色（比如 $T$），那么 $s_{j}$ 可能是 $F$ 或 $B$，所以该部件仍然是可着色的。\n- D是错误的；该部件的约束太弱，而不是限制性太强。\n- E是无关的；X3C本身就使用3元素集合。\n\n因此，B最准确地指出了该缺陷。", "answer": "$$\\boxed{B}$$", "id": "1524392"}]}