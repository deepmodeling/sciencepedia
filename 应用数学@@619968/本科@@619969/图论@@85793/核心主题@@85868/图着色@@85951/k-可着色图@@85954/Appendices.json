{"hands_on_practices": [{"introduction": "我们通常认为，需要更多颜色意味着图中存在更复杂的结构，例如三角形（$K_3$）。这个练习将挑战这一直觉，要求你构建一个不含三角形但仍需要三种颜色进行着色的最简图。通过这个实践，你将深化对图的色数、二分图以及奇数环之间本质联系的理解。[@problem_id:1515455]", "problem": "在图论中，图的*k-着色*是指将 *k* 种可用颜色之一分配给图的每个顶点，使得任意两个相邻顶点都不会被分配相同的颜色。如果一个图存在 k-着色，则称该图是*k-可着色*的。\n\n图中的*三角形*（三元环）是一个长度为 3 的环，即由三个顶点组成的一个集合，其中每个顶点都通过边与另外两个顶点相连。\n\n考虑一个图 $G$，它满足以下两个性质：\n1. $G$ 不是2-可着色的。\n2. $G$ 不包含三元环。\n\n这样的图 $G$ 可以拥有的最小顶点数是多少？", "solution": "一个图是2-可着色的，当且仅当它是二分图。一个图是二分图，当且仅当它不包含奇环。因此，如果 $G$ 不是2-可着色的，那么 $G$ 必须包含一个奇环；我们将这样的环记为 $C_{2k+1}$，其中 $k \\in \\mathbb{N}$。\n\n$G$ 不含三元环的条件排除了 $2k+1=3$ 的情况，因此 $G$ 中可能存在的最短奇环长度至少为 $5$。所以，任何这样的图 $G$ 都必须至少有 $5$ 个顶点。\n\n这个下界可以由 $5$-环 $C_{5}$ 达到，它有 $5$ 个顶点，不包含三元环，并且因为它是一个奇环，所以不是2-可着色的。因此，最小顶点数是 $5$。", "answer": "$$\\boxed{5}$$", "id": "1515455"}, {"introduction": "图着色不仅仅是一个理论谜题，它还是解决现实世界中资源分配问题的强大工具。本练习将一个常见的场景——为传感器网络分配频率以避免干扰——建模为一个图着色问题。你将看到一个简单而优雅的着色策略（棋盘着色）如何高效地解决一个实际的约束满足任务。[@problem_id:1515398]", "problem": "一家科技公司正在一块正方形的农田中设计一个用于环境监测的分布式传感器网络。该农田被均匀划分为一个由更小的正方形单元格组成的 $3 \\times 3$ 网格。在九个单元格中的每一个的几何中心都放置一个传感器。为避免信号干扰，任何位于共享公共边界的单元格中的两个传感器都必须使用不同的通信频率运行。仅在角点相交的单元格不被视为共享公共边界。公司的目标是通过使用尽可能少数量的不同通信频率来最小化运营成本。\n\n在没有任何干扰的情况下运行整个传感器网络，所需的不同频率的最小数量是多少？", "solution": "将该网络建模为一个图 $G=(V,E)$，其中 $V$ 中的每个顶点对应于 $3 \\times 3$ 网格中的 $9$ 个单元格之一，并且当且仅当对应的单元格共享公共边界时，$E$ 中的一条边才连接两个顶点。所需的不同频率的最小数量等于图的色数 $\\chi(G)$，即进行正常顶点着色所需的最少颜色数。\n\n用坐标 $(i,j)$（其中 $i,j\\in\\{1,2,3\\}$）为单元格建立索引，并通过以下公式定义邻接关系：\n$$\n(i,j)\\sim(i',j') \\quad \\text{if and only if} \\quad |i-i'|+|j-j'|=1,\n$$\n该公式表示了共享公共边界的情况，并排除了仅在角点接触的情况。\n\n下界：由于图 $G$ 至少有一条边（例如，连接 $(1,1)$ 和 $(1,2)$ 的边），任何正常着色都必须使用至少两种颜色。因此，\n$$\n\\chi(G)\\geq 2.\n$$\n\n上界：使用坐标和的奇偶性来定义一个 $2$-着色：\n$$\nc(i,j) \\equiv (i+j) \\bmod 2,\n$$\n将 $c=0$ 映射到一种频率，并将 $c=1$ 映射到第二种频率。如果 $(i,j)\\sim(i',j')$，那么要么 $i=i'$ 且 $|j-j'|=1$，要么 $j=j'$ 且 $|i-i'|=1$。在这两种情况下，都有\n$$\n(i+j)-(i'+j')=\\pm 1,\n$$\n所以 $i+j$ 和 $i'+j'$ 的奇偶性相反，这意味着 $c(i,j)\\neq c(i',j')$。因此这是一个正常的 $2$-着色，且\n$$\n\\chi(G)\\leq 2.\n$$\n\n结合上界和下界可得 $\\chi(G)=2$。因此，所需的不同频率的最小数量是 $2$。", "answer": "$$\\boxed{2}$$", "id": "1515398"}, {"introduction": "确定一个图的精确色数 ($\\chi(G)$) 在计算上可能非常困难，因此我们常常使用像贪心着色这样的启发式算法。这个练习将揭示，虽然这类算法速度很快，但它们并不总能产生最优解。你将通过动手实践发现，算法的性能可能严重依赖于顶点处理的顺序，从而理解算法设计中的权衡。[@problem_id:1515409]", "problem": "贪心着色算法是一种为图的顶点着色的启发式方法。给定一个特定的顶点排序，该算法会逐个遍历这些顶点。对于每个顶点，算法会为其分配一个最小的正整数（代表一种颜色），该颜色未被其在排序中较早出现的任何邻居使用。\n\n考虑一个简单无向图 $G$，其顶点集为 $V = \\{A, B, C, D, E, F\\}$，边集为 $E = \\{(A, B), (A, D), (B, C), (C, D), (D, E), (E, F)\\}$。已知该图是一个二分图，因此其色数（有效着色所需的最少颜色数）为 2。\n\n然而，对于给定的顶点排序 $\\pi$，贪心算法使用的颜色数（记为 $\\chi_g(G, \\pi)$）可能大于图的色数 $\\chi(G)$。\n\n当在图 $G$ 上使用贪心着色算法时，下列哪种顶点排序将导致算法使用 3 种颜色？请选择所有适用项。\n\nA. $(A, C, E, B, D, F)$\n\nB. $(A, B, C, D, E, F)$\n\nC. $(A, F, B, E, D, C)$\n\nD. $(A, C, B, D, F, E)$\n\nE. $(C, D, E, B, F, A)$", "solution": "令 $c(v)$ 表示分配给顶点 $v$ 的颜色。在贪心算法的每一步，当处理顶点 $v$ 时，令 $S(v)$ 为其较早出现的邻居已使用的颜色集合；然后将 $c(v)$ 赋值为不在 $S(v)$ 中的最小正整数。\n\n该图的边为 $(A,B)$, $(A,D)$, $(B,C)$, $(C,D)$, $(D,E)$, $(E,F)$，因此邻居集合是：\n$N(A)=\\{B,D\\}$, $N(B)=\\{A,C\\}$, $N(C)=\\{B,D\\}$, $N(D)=\\{A,C,E\\}$, $N(E)=\\{D,F\\}$, $N(F)=\\{E\\}$。\n\n选项 A: $(A, C, E, B, D, F)$\n- $A$: $S(A)=\\varnothing \\Rightarrow c(A)=1$。\n- $C$: $S(C)=\\varnothing \\Rightarrow c(C)=1$。\n- $E$: $S(E)=\\varnothing \\Rightarrow c(E)=1$。\n- $B$：较早邻居 $A,C$ 已用颜色 $\\{1\\} \\Rightarrow c(B)=2$。\n- $D$：较早邻居 $A,C,E$ 已用颜色 $\\{1\\} \\Rightarrow c(D)=2$。\n- $F$：较早邻居 $E$ 已用颜色 $\\{1\\} \\Rightarrow c(F)=2$。\n所用颜色：$\\{1,2\\}$，因此不是3种。\n\n选项 B: $(A, B, C, D, E, F)$\n- $A$: $S(A)=\\varnothing \\Rightarrow c(A)=1$。\n- $B$：较早邻居 $A$ 已用颜色 $\\{1\\} \\Rightarrow c(B)=2$。\n- $C$：较早邻居 $B$ 已用颜色 $\\{2\\} \\Rightarrow c(C)=1$。\n- $D$：较早邻居 $A,C$ 已用颜色 $\\{1\\} \\Rightarrow c(D)=2$。\n- $E$：较早邻居 $D$ 已用颜色 $\\{2\\} \\Rightarrow c(E)=1$。\n- $F$：较早邻居 $E$ 已用颜色 $\\{1\\} \\Rightarrow c(F)=2$。\n所用颜色：$\\{1,2\\}$，因此不是3种。\n\n选项 C: $(A, F, B, E, D, C)$\n- $A$: $S(A)=\\varnothing \\Rightarrow c(A)=1$。\n- $F$: $S(F)=\\varnothing \\Rightarrow c(F)=1$。\n- $B$：较早邻居 $A$ 已用颜色 $\\{1\\} \\Rightarrow c(B)=2$。\n- $E$：较早邻居 $F$ 已用颜色 $\\{1\\} \\Rightarrow c(E)=2$。\n- $D$：较早邻居 $A,E$ 已用颜色 $\\{1,2\\} \\Rightarrow c(D)=3$。\n- $C$：较早邻居 $B,D$ 已用颜色 $\\{2,3\\} \\Rightarrow c(C)=1$。\n所用颜色：$\\{1,2,3\\}$，因此使用了3种。\n\n选项 D: $(A, C, B, D, F, E)$\n- $A$: $S(A)=\\varnothing \\Rightarrow c(A)=1$。\n- $C$: $S(C)=\\varnothing \\Rightarrow c(C)=1$。\n- $B$：较早邻居 $A,C$ 已用颜色 $\\{1\\} \\Rightarrow c(B)=2$。\n- $D$：较早邻居 $A,C$ 已用颜色 $\\{1\\} \\Rightarrow c(D)=2$。\n- $F$: $S(F)=\\varnothing \\Rightarrow c(F)=1$。\n- $E$：较早邻居 $D,F$ 已用颜色 $\\{1,2\\} \\Rightarrow c(E)=3$。\n所用颜色：$\\{1,2,3\\}$，因此使用了3种。\n\n选项 E: $(C, D, E, B, F, A)$\n- $C$: $S(C)=\\varnothing \\Rightarrow c(C)=1$。\n- $D$：较早邻居 $C$ 已用颜色 $\\{1\\} \\Rightarrow c(D)=2$。\n- $E$：较早邻居 $D$ 已用颜色 $\\{2\\} \\Rightarrow c(E)=1$。\n- $B$：较早邻居 $C$ 已用颜色 $\\{1\\} \\Rightarrow c(B)=2$。\n- $F$：较早邻居 $E$ 已用颜色 $\\{1\\} \\Rightarrow c(F)=2$。\n- $A$：较早邻居 $B,D$ 已用颜色 $\\{2\\} \\Rightarrow c(A)=1$。\n所用颜色：$\\{1,2\\}$，因此不是3种。\n\n因此，贪心算法仅对排序 C 和 D 使用 3 种颜色。", "answer": "$$\\boxed{CD}$$", "id": "1515409"}]}