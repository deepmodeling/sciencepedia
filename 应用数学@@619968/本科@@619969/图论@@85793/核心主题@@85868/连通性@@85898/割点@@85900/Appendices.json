{"hands_on_practices": [{"introduction": "我们从一个最基础的网络结构——线性网络或路径图——开始。这个练习旨在帮助你建立对割点的直观理解。通过分析链状结构中的节点，你将学会区分内部节点和端点在维持网络连通性方面的不同作用，这是掌握割点概念的第一步。[@problem_id:1493672]", "problem": "考虑一个为高可靠性数据传输而设计的数据中心网络。该网络的结构可以建模为一个简单无向图，其中数据中心是顶点，连接它们的光纤电缆是边。如果任意两个数据中心之间都存在一条由电缆构成的路径，则称该网络是连通的。\n\n一个特定的网络由 $n$ 个数据中心组成，其中 $n$ 是一个满足 $n \\ge 2$ 的整数。这些数据中心标记为 $v_1, v_2, \\dots, v_n$，并排列成一个线性链。对于所有从 $1$ 到 $n-1$ 的 $i$，直接的光纤链路仅存在于相邻的数据中心 $v_i$ 和 $v_{i+1}$ 之间。\n\n一个数据中心被定义为‘关键的’，如果其故障（对应于从图中移除该顶点及其所有关联的边）导致网络变得不连通。如果至少存在一对正常运行的数据中心之间没有任何电缆路径，则称网络是不连通的。\n\n请确定在这个由 $n$ 个数据中心组成的线性网络中，关键数据中心数量的通用公式。", "solution": "所述网络是具有 $n$ 个顶点的路径图，通常记为 $P_{n}$，其顶点集为 $\\{v_{1},v_{2},\\dots,v_{n}\\}$，边集为 $\\{\\{v_{i},v_{i+1}\\}:1\\leq i\\leq n-1\\}$。一个顶点是关键的，如果移除该顶点会增加连通分量的数量，这等价于得到的图是不连通的，即存在两个剩余顶点之间没有路径。\n\n首先考虑端点 $v_{1}$ 和 $v_{n}$。移除 $v_{1}$ 只会删除边 $\\{v_{1},v_{2}\\}$，留下顶点集 $\\{v_{2},\\dots,v_{n}\\}$ 上的导出子图，该子图与 $P_{n-1}$ 同构，因此对于 $n\\geq 2$ 是连通的。移除 $v_{n}$ 的情况也同样。因此，$v_{1}$ 和 $v_{n}$ 都不是关键顶点。\n\n现在考虑任意内部顶点 $v_{k}$，其中 $1<k<n$。移除 $v_{k}$ 会删除边 $\\{v_{k-1},v_{k}\\}$ 和 $\\{v_{k},v_{k+1}\\}$，剩余的图分解为两个不相交的导出子图，分别位于顶点集 $\\{v_{1},\\dots,v_{k-1}\\}$ 和 $\\{v_{k+1},\\dots,v_{n}\\}$ 上，每个子图都是一条路径，因此是连通的，且它们之间没有边。特别地，在得到的图中，不存在从 $v_{1}$ 到 $v_{n}$ 的路径，因此该图是不连通的。因此，每个内部顶点都是关键的。\n\n因此，关键顶点恰好是内部顶点 $v_{2},v_{3},\\dots,v_{n-1}$，其数量为 $n-2$。当 $n=2$ 时，该公式也正确地得出 $0$，因为在这种情况下没有内部顶点。", "answer": "$$\\boxed{n-2}$$", "id": "1493672"}, {"introduction": "现在，让我们来分析一个更复杂的结构：两个高度连接的子网络通过一个单一节点相连。这个场景模拟了现实世界中常见的网络拓扑，例如两个数据中心通过一个共享路由器互联。通过这个练习，你将深入理解割点如何作为一个关键的“桥梁”节点，其重要性在于连接不同的网络模块，即使这些模块自身非常稳固。[@problem_id:1493649]", "problem": "设一个在 $n$ 个顶点上的完全图，记作 $K_n$，是一个简单无向图，其中每对不同的顶点都由一条唯一的边连接。一个连通图的割点是一个顶点，移除该顶点（以及所有与其关联的边）会增加该图的连通分量的数量。\n\n考虑完全图 $K_5$ 的两个不相交的副本。设第一个副本的顶点集为 $V_1 = \\{u_1, u_2, u_3, u_4, u_5\\}$，第二个副本的顶点集为 $V_2 = \\{v_1, v_2, v_3, v_4, v_5\\}$。通过取这两个图的并集，然后将第一个副本中的顶点 $u_1$ 与第二个副本中的顶点 $v_1$ 进行粘合，构造出一个新图 $G$。这个合并后的顶点记作 $w$。最终得到的图 $G$ 的顶点集为 $\\{w, u_2, u_3, u_4, u_5, v_2, v_3, v_4, v_5\\}$。\n\n下列哪个陈述正确地指出了图 $G$ 的所有割点？\n\nA. 顶点 $w$ 是唯一的割点。\n\nB. 顶点 $u_2, u_3, u_4, u_5$ 是唯一的割点。\n\nC. 图 $G$ 的所有9个顶点都是割点。\n\nD. 图 $G$ 没有割点。\n\nE. 顶点 $w, u_2,$ 和 $v_2$ 是唯一的割点。", "solution": "我们首先描述图 $G$ 的结构。从两个不相交的 $K_{5}$ 副本开始，其顶点集分别为 $V_{1}=\\{u_{1},u_{2},u_{3},u_{4},u_{5}\\}$ 和 $V_{2}=\\{v_{1},v_{2},v_{3},v_{4},v_{5}\\}$。将 $u_{1}$ 与 $v_{1}$ 粘合形成一个单一顶点 $w$。那么 $G$ 的顶点集为 $\\{w,u_{2},u_{3},u_{4},u_{5},v_{2},v_{3},v_{4},v_{5}\\}$。在 $\\{w,u_{2},u_{3},u_{4},u_{5}\\}$ 内部，导出子图是 $K_{5}$，并且在 $\\{w,v_{2},v_{3},v_{4},v_{5}\\}$ 内部，导出子图也是 $K_{5}$。对于 $i\\geq 2$ 和 $j\\geq 2$，$u_{i}$ 和 $v_{j}$ 之间没有边。\n\n根据定义，连通图的割点是一个顶点，移除该顶点会增加连通分量的数量。设 $k(H)$ 表示图 $H$ 的连通分量数。\n\n首先，我们证明 $w$ 是一个割点。图 $G$ 是连通的，因为对于任何 $i\\geq 2$ 的 $u_{i}$ 和任何 $j\\geq 2$ 的 $v_{j}$，都存在一条路径 $u_{i}-w-v_{j}$。考虑 $G-w$。剩余的顶点分为两个集合：$\\{u_{2},u_{3},u_{4},u_{5}\\}$ 和 $\\{v_{2},v_{3},v_{4},v_{5}\\}$。每个集合都导出一个 $K_{4}$，因此是连通的，且这两个集合之间没有边，因为 $w$ 是唯一与两边都邻接的顶点。因此，$G-w$ 恰好有两个连通分量，所以 $k(G-w)=2>1=k(G)$, 且 $w$ 是一个割点。\n\n接下来，我们证明没有其他顶点是割点。设 $x\\in V(G)$ 且 $x\\neq w$。不失一般性，取 $x=u_{2}$。在 $G-u_{2}$ 中，顶点 $w$ 仍然存在，并与 $\\{u_{3},u_{4},u_{5},v_{2},v_{3},v_{4},v_{5}\\}$ 中的每个顶点邻接。对于任意两个剩余的顶点：\n- 如果两者都在 $\\{u_{3},u_{4},u_{5}\\}$ 中，它们是邻接的，因为该集合在原始的 $K_{5}$ 中导出一个 $K_{3}$。\n- 如果两者都在 $\\{v_{2},v_{3},v_{4},v_{5}\\}$ 中，它们是邻接的，因为该集合仍然导出一个 $K_{4}$。\n- 如果一个在 $\\{u_{3},u_{4},u_{5}\\}$ 中，另一个在 $\\{v_{2},v_{3},v_{4},v_{5}\\}$ 中，则存在一条通过 $w$ 的长度为2的路径。\n因此 $G-u_{2}$ 是连通的，且 $k(G-u_{2})=1$。同样的论证对称地适用于任何 $j\\geq 2$ 的 $x=v_{j}$。因此，除 $w$ 外没有其他顶点是割点。\n\n因此，$G$ 唯一的割点是 $w$，这对应于选项 A。", "answer": "$$\\boxed{A}$$", "id": "1493649"}, {"introduction": "对于大型复杂网络，逐一检查每个节点来判断其是否为割点是不现实的。因此，我们需要一种系统性的算法来自动化这个过程。本练习将向你介绍一种基于深度优先搜索（DFS）的强大技术，通过分析节点的发现时间 $ d[u] $ 和低链接值 $ low[u] $，可以高效地识别出网络中所有的割点。掌握这种方法是进行网络脆弱性分析的一项核心技能。[@problem_id:1493651]", "problem": "一位系统分析师正在检查一个由多个互连节点组成的去中心化通信网络 (DCN) 的脆弱性。\n\n如果一个节点不是分析的起始点，并且其故障会导致网络被分割成两个或更多个不连通的分量，则该节点被视为“关键枢纽”。\n\n为了识别这些关键枢纽，分析师从节点A开始，对代表该网络的连通图执行深度优先搜索 (DFS)。对于网络中的每个节点 `u`，分析师记录了三条信息：\n1.  `parent[u]`：在遍历生成的DFS树中节点 `u` 的父节点。起始节点 A 没有父节点。\n2.  `d[u]`：节点 `u` 的发现时间，这是一个从1开始的整数计数器生成的时间戳，每当一个节点被首次访问时，该计数器就会递增。\n3.  `low[u]`：节点 `u` 的low-link值。该值被定义为 `d[u]` 与从 `u` 可达的所有节点的发现时间中的最小值，这些可达节点是指通过在DFS树中遍历零条或多条边，然后至多经过一条“回边”（连接一个节点到其在DFS树中的某个祖先的边）能到达的节点（包括 `u` 自身，通过零长度路径）。\n\n分析结果总结在下表中：\n\n| 节点 `u` | `parent[u]` | `d[u]` | `low[u]` |\n|:---:|:---:|:---:|:---:|\n| A | 无 | 1 | 1 |\n| B | A | 2 | 2 |\n| C | B | 3 | 2 |\n| D | C | 4 | 2 |\n| E | D | 5 | 2 |\n| F | C | 6 | 6 |\n| G | F | 7 | 6 |\n| H | G | 8 | 6 |\n\n根据所提供的数据，以下哪个集合包含了网络中所有的关键枢纽？\n\nA. {B, C}\n\nB. {B, C, F}\n\nC. {C, F, G}\n\nD. {B, F}\n\nE. {C}", "solution": "在DFS树中，一个节点是关键枢纽，当且仅当满足以下条件之一：\n- 对于根节点 $r$，它在DFS树中至少有两个子节点。\n- 对于非根节点 $u$，其在DFS树中存在一个子节点 $v$，使得 $low[v] \\ge d[u]$。\n\n从表格中可知，DFS树（根据parent数组）的边为：$A \\to B$、$B \\to C$、$C \\to D$ 和 $C \\to F$、$D \\to E$、$F \\to G$、$G \\to H$。\n\n逐一评估每个节点：\n\n1) 根节点 $A$：它只有一个子节点（$B$），所以它不是关键枢纽。\n\n2) 节点 $B$ (非根节点)，子节点集合为 $\\{C\\}$。检查：$low[C]=2, d[B]=2 \\implies low[C] \\ge d[B]$。\n因此 $B$ 是一个关键枢纽。\n\n3) 节点 $C$ (非根节点)，子节点集合为 $\\{D,F\\}$。检查其子节点：\n- 对于 $D$：$low[D]=2, d[C]=3 \\implies low[D] < d[C]$，这本身并不能使 $C$ 成为关键枢纽。\n- 对于 $F$：$low[F]=6, d[C]=3 \\implies low[F] \\ge d[C]$，因此 $C$ 是一个关键枢纽。\n\n4) 节点 $D$ (非根节点)，子节点集合为 $\\{E\\}$。检查：\n$low[E]=2, d[D]=4 \\implies low[E] < d[D]$，所以 $D$ 不是关键枢纽。\n\n5) 节点 $E$ 是一个叶节点，因此不是关键枢纽。\n\n6) 节点 $F$ (非根节点)，子节点集合为 $\\{G\\}$。检查：\n$low[G]=6, d[F]=6 \\implies low[G] \\ge d[F]$，所以 $F$ 是一个关键枢纽。\n\n7) 节点 $G$ (非根节点)，子节点集合为 $\\{H\\}$。检查：\n$low[H]=6, d[G]=7 \\implies low[H] < d[G]$，所以 $G$ 不是关键枢纽。\n\n8) 节点 $H$ 是一个叶节点，因此不是关键枢纽。\n\n因此，所有关键枢纽的集合是 $\\{B,C,F\\}$，对应选项 B。", "answer": "$$\\boxed{B}$$", "id": "1493651"}]}