{"hands_on_practices": [{"introduction": "让我们从一个经典问题开始：在网格中寻找路径。这个练习将现实世界的导航挑战，比如机器人在仓库中的移动，转化为一个图论问题。通过将网格视为一个图，你可以应用广度优先搜索（BFS）来系统地探索所有可能的路径，并保证找到从起点到终点的最短路线。[@problem_id:1532951]", "problem": "机器人公司 GridNav 正在为其在密集城市环境中运行的自动配送机器人测试一种新的寻路算法。该环境被建模为一个 $M \\times N$ 的单元格网格，坐标为 $(r, c)$，其中 $0 \\le r < M$ 且 $0 \\le c < N$。此处，$r$ 是行索引，$c$ 是列索引。\n\n机器人可以从其当前单元格 $(r, c)$ 移动到任何相邻的单元格：$(r-1, c)$ (上)、$(r+1, c)$ (下)、$(r, c-1)$ (左) 或 $(r, c+1)$ (右)。每一次这样的移动构成一步。机器人必须保持在网格边界内，并且不能进入被指定为障碍物的单元格。\n\n对于一个特定的测试用例，网格尺寸为 $M=8$ 和 $N=8$。机器人从单元格 $(1, 1)$ 出发，必须到达位于单元格 $(6, 6)$ 的目的地。以下单元格被指定为不可通行的障碍物：$(1, 3)$、$(2, 3)$、$(3, 3)$、$(4, 3)$、$(4, 1)$、$(4, 2)$、$(4, 4)$ 和 $(4, 5)$。\n\n机器人从起始单元格移动到目的单元格所需的最小步数是多少？\n\nA) 10\n\nB) 11\n\nC) 12\n\nD) 14\n\nE) 目的地无法到达。", "solution": "机器人正在一个 $8 \\times 8$ 的网格上从 $(1,1)$ 移动到 $(6,6)$，采用四邻域移动方式，且存在给定的障碍物。曼哈顿距离下界是\n$$|6-1| + |6-1| = 10,$$\n因此任何路径的长度至少为 $10$。我们将证明障碍物迫使路径至少增加两步，然后展示一条该长度的路径。\n\n设 $R,L,D,U$ 分别是向右、向左、向下和向上移动的步数。从起点到终点所需的净位移是\n$$R - L = 6 - 1 = 5,\\qquad D - U = 6 - 1 = 5,$$\n因此路径长度是\n$$R + L + D + U = (R - L) + (D - U) + 2(L + U) = 10 + 2(L + U).$$\n因此，如果 $L \\geq 1$ 或 $U \\geq 1$，那么长度至少为 $12$。\n\n现在我们来论证，因为障碍物的存在，任何可行路径都必须满足 $L \\geq 1$ 或 $U \\geq 1$。单元格 $(1,3),(2,3),(3,3),(4,3)$ 阻挡了第 $1$ 行到第 $4$ 行的第 $3$ 列，因此路径无法在第 $1$ 行到第 $4$ 行的范围内从列 $\\{0,1,2\\}$ 穿过到列 $\\{4,5,6,7\\}$。此外，第 $4$ 行在第 $1$ 列到第 $5$ 列有障碍物，因此要从行 $\\leq 3$ 移动到行 $\\geq 5$，路径必须经过 $(4,0)$、$(4,6)$ 或 $(4,7)$。\n\n- 如果路径在第 0 列穿过第 4 行，那么从第 1 列出发，它必须至少向左移动一次，因此 $L \\geq 1$，路径长度至少为 $12$。\n- 如果路径在列 $\\geq 6$ 处穿过第 4 行，那么它必须先从第 3 列的左侧移动到右侧。要做到这一点，它必须在一个未被阻挡的行穿过第 3 列；第 5 行之上的唯一可用行是第 0 行。因此，路径必须至少向上移动一次，所以 $U \\geq 1$，路径长度至少为 $12$。\n\n因此，每条可行路径的长度都至少为 $12$。\n\n这个下界是可以达到的。例如，序列\n$$(1,1) \\to (1,0) \\to (2,0) \\to (3,0) \\to (4,0) \\to (5,0) \\to (5,1) \\to (5,2) \\to (5,3) \\to (5,4) \\to (5,5) \\to (5,6) \\to (6,6)$$\n使用了 $1$ 次向左、$5$ 次向下和 $6$ 次向右移动，总共 $12$ 步，并且避开了所有障碍物。\n\n因此，最小步数是 $12$，对应选项 C。", "answer": "$$\\boxed{C}$$", "id": "1532951"}, {"introduction": "找到最短路径只是第一步。在网络设计和物流规划中，了解存在多少条不同的最短路径同样重要，这对于负载均衡和系统韧性至关重要。这个练习挑战你扩展标准的BFS算法，不仅要计算最短距离，还要在遍历过程中统计达到该距离的唯一路径数量。[@problem_id:1532976]", "problem": "在一个去中心化的数据网络中，计算机（节点）以点对点的方式连接。当一个数据包从源节点发送到目标节点时，网络协议会沿着跳数最少的路径进行路由，以确保低延迟。为了实现网络弹性和负载均衡，系统管理员需要知道关键节点之间存在多少条这样的最小跳数路径。\n\n考虑一个由8个节点组成的小型网络，节点标记为1到8。节点之间的直接、双向连接（边）由以下节点对给出：\n(1, 2), (1, 3), (2, 4), (2, 5), (3, 4), (3, 6), (4, 7), (5, 7), (5, 8), (6, 8), (7, 8).\n\n路径是一个由不同节点组成的序列，其中序列中每对相邻的节点都由一条边连接。路径的长度是它包含的边的数量。\n\n你的任务是确定一个数据包从源节点1传输到目标节点8所经过的不同最短路径的总数。", "solution": "我们将网络建模为一个无向、无权图。令$d(v)$表示从节点1到节点$v$的图距离（最小边数）。我们首先通过从节点1开始的广度优先分层来计算$d(v)$：\n- $d(1)=0$。\n- 1的邻居是2和3，所以$d(2)=1$且$d(3)=1$。\n- 从2和3出发，可以到达的新节点是4、5和6，所以$d(4)=2$、$d(5)=2$且$d(6)=2$。\n- 从4、5和6出发，我们到达7和8。由于5和6直接连接到8，我们得到$d(8)=3$。因此，从1到8的最短路径长度是3。\n\n为了计算最短路径的数量，定义$c(v)$为从1到$v$的不同最短路径的数量。对于一个无权图，\n$$\nc(1)=1,\\quad c(v)=\\sum_{\\substack{u\\sim v\\\\ d(u)=d(v)-1}} c(u),\n$$\n其中$u\\sim v$表示邻接。逐层进行计算：\n- 在距离1处：$c(2)=c(1)=1$，$c(3)=c(1)=1$。\n- 在距离2处：$c(4)=c(2)+c(3)=1+1=2$，$c(5)=c(2)=1$，$c(6)=c(3)=1$。\n- 在距离3处，对于节点8：与8邻接且距离为2的前驱节点是5和6，因此\n$$\nc(8)=c(5)+c(6)=1+1=2.\n$$\n因此，从节点1到节点8恰好有2条不同的最短路径。", "answer": "$$\\boxed{2}$$", "id": "1532976"}, {"introduction": "现实世界的问题往往带有独特的约束，需要我们对标准算法进行创新性调整。这个救护车调度场景引入了一个有趣的限制：允许在单行道网络中逆行一次。解决这个问题需要你超越传统的BFS应用，通过构建一个增强图或结合多次搜索来巧妙地将这个特殊规则融入最短路径计算中。[@problem_id:1532922]", "problem": "在 Aethelburg 市，其道路网络完全由单行道组成。一辆救护车从医院被派往一个紧急事件现场。为了最小化响应时间，这辆救护车获得了一项特殊许可，允许它在最多一条街道上逆着正常交通方向行驶。\n\n该市的布局可以建模为一个有向图，其中交叉口是节点，单行道是有向边。医院位于交叉口 1，紧急事件发生在交叉口 12。\n\n交叉口的编号为 1 到 14。单行道由以下有序对 $(u, v)$ 定义，表示交通从交叉口 $u$ 流向交叉口 $v$：\n(1, 2), (1, 3),\n(2, 4),\n(3, 5),\n(4, 6),\n(5, 6),\n(6, 13),\n(7, 8), (7, 9),\n(8, 10),\n(9, 11),\n(10, 12),\n(11, 12),\n(13, 14),\n(14, 7),\n(9, 4)\n\n一条路径的长度定义为所经过的街道总数。救护车从位于交叉口 1 的医院到位于交叉口 12 的紧急事件现场，必须经过的最少街道数是多少？", "solution": "将城市建模为具有单位边长的有向图 $G=(V,E)$。救护车最多可以逆行一条边。对于无权图，最少的街道数等于最短路径的长度，这可以通过广度优先搜索（BFS）来确定。允许一次逆行可以通过考虑一个增广状态空间来处理，其中的状态为 $(v,b)$，这里 $v$ 是一个节点，$b\\in\\{0,1\\}$ 表示是否已经使用了那次逆行机会。\n\n一个等价且更简单的计算方法如下。设 $d_{1}(u)$ 为仅使用正向边从节点 1 到节点 $u$ 的最短有向距离。设 $d_{2}(u)$ 为仅使用正向边从节点 $u$ 到节点 12 的最短有向距离。如果我们逆向穿过恰好一条边 $(x,y)\\in E$，则总长度为\n$$\nL(x,y)=d_{1}(y)+1+d_{2}(x).\n$$\n此外，我们也可以选择不使用任何逆行，其成本为 $d_{1}(12)$。\n\n首先，从节点 1 开始沿正向边通过 BFS 计算 $d_{1}$：\n- $d_{1}(1)=0$。\n- 从 $1$：$d_{1}(2)=1$, $d_{1}(3)=1$。\n- 从 $2$ 和 $3$：$d_{1}(4)=2$, $d_{1}(5)=2$。\n- 从 $4$ 和 $5$：$d_{1}(6)=3$。\n- 从 $6$：$d_{1}(13)=4$。\n- 从 $13$：$d_{1}(14)=5$。\n- 从 $14$：$d_{1}(7)=6$。\n- 从 $7$：$d_{1}(8)=7$, $d_{1}(9)=7$。\n- 从 $8$ 和 $9$：$d_{1}(10)=8$, $d_{1}(11)=8$，并且 $(9,4)$ 再次到达 $4$，但 $d_{1}(4)$ 保持为 $2$。\n- 从 $10$ 和 $11$：$d_{1}(12)=9$。\n\n因此，不使用任何逆行的最短有向路径长度为 $d_{1}(12)=9$。\n\n接下来，通过对节点 12 进行 BFS（等价于在反向图上从节点 12 开始进行 BFS）来计算 $d_{2}$：\n- $d_{2}(12)=0$。\n- $12$ 的前驱节点：$d_{2}(10)=1$, $d_{2}(11)=1$。\n- $10$ 和 $11$ 的前驱节点：$d_{2}(8)=2$, $d_{2}(9)=2$。\n- $8$ 和 $9$ 的前驱节点：$d_{2}(7)=3$。\n- $7$ 的前驱节点：$d_{2}(14)=4$。\n- $14$ 的前驱节点：$d_{2}(13)=5$。\n- $13$ 的前驱节点：$d_{2}(6)=6$。\n- $6$ 的前驱节点：$d_{2}(4)=7$, $d_{2}(5)=7$。\n- $5$ 的前驱节点：$d_{2}(3)=8$。\n- $4$ 的前驱节点：$d_{2}(2)=8$ 并通过 $(9,4)$ 确认 $d_{2}(9)=2$。\n- $3$ 和 $2$ 的前驱节点：$d_{2}(1)=9$。\n\n现在，对每条有向边 $(x,y)\\in E$ 计算 $L(x,y)=d_{1}(y)+1+d_{2}(x)$：\n- $(1,2)$: $1+1+9=11$。\n- $(1,3)$: $1+1+9=11$。\n- $(2,4)$: $2+1+8=11$。\n- $(3,5)$: $2+1+8=11$。\n- $(4,6)$: $3+1+7=11$。\n- $(5,6)$: $3+1+7=11$。\n- $(6,13)$: $4+1+6=11$。\n- $(7,8)$: $7+1+3=11$。\n- $(7,9)$: $7+1+3=11$。\n- $(8,10)$: $8+1+2=11$。\n- $(9,11)$: $8+1+2=11$。\n- $(10,12)$: $9+1+1=11$。\n- $(11,12)$: $9+1+1=11$。\n- $(13,14)$: $5+1+5=11$。\n- $(14,7)$: $6+1+4=11$。\n- $(9,4)$: $2+1+2=5$。\n\n取所有选择中的最小值，包括不逆行的选项，得出 $\\min\\{d_{1}(12), \\min_{(x,y)\\in E}L(x,y)\\}=\\min\\{9,5\\}=5$。一条明确的最优路线是 $1\\to 2\\to 4$（两条正向边），然后逆向穿过 $(9,4)$ 即 $4\\to 9$，接着 $9\\to 11\\to 12$，总共经过 5 条街道。", "answer": "$$\\boxed{5}$$", "id": "1532922"}]}