{"hands_on_practices": [{"introduction": "要真正掌握一个算法，最好的方法就是亲手执行一遍。这个练习旨在让你逐步追踪 Dijkstra 算法的每一个核心步骤。通过记录每个节点距离估值的迭代更新过程，你将直观地看到算法是如何动态地、贪婪地选择下一个节点，并最终收敛到全局最优解的。[@problem_id:1363296]", "id": "1363296", "problem": "一名网络管理员正在分析一个小型数据中心的路由路径。该网络由六台服务器组成，分别标记为 A、B、C、D、E 和 F。直接相连的服务器之间的延迟（单位为毫秒）由以下无向连接给出：\n- A 到 B: 4\n- A 到 C: 2\n- B 到 C: 5\n- B 到 D: 10\n- C 到 E: 3\n- D 到 E: 4\n- D 到 F: 11\n- E 到 F: 1\n\n从源服务器 A 运行一个标准的单源最短路径算法，以找到到所有其他服务器的最小延迟路径。该算法维护一个数组，其中包含了从 A 到每个服务器的当前最短路径估计值。初始时，A 的估计值为 0，所有其他服务器的估计值为无穷大。该算法迭代地在所有未最终确定的服务器中选择当前估计值最小的服务器进行最终确定，然后更新其邻居的估计值。\n\n您的任务是追踪此估计值数组的状态。请提供六个数组的序列，其中第 k 个数组显示在第 k 个服务器被最终确定后各估计值的状态。在您的回答中，请按 (A, B, C, D, E, F) 的顺序表示服务器的估计值。将此数组序列表示为一个矩阵，其中每一行对应一个服务器被最终确定后的估计值状态。使用符号 `\\infty` 来表示无穷大的估计值。", "solution": "我们从源 $A$ 应用 Dijkstra 算法。设 $d(X)$ 表示从 $A$ 到服务器 $X$ 的当前最短距离估计值。初始时，$d(A)=0$ 且 $d(B)=d(C)=d(D)=d(E)=d(F)=\\infty$。在每一步中，从未最终确定的服务器中选择具有最小 $d(\\cdot)$ 值的服务器进行最终确定，并对已确定的服务器 $u$ 的每个邻居 $v$ 使用 $d(v) \\leftarrow \\min\\{d(v), d(u)+w(u,v)\\}$ 进行松弛操作。\n\n第 1 步：最终确定 $A$，其 $d(A)=0$。松弛其邻居：\n- $d(B) \\leftarrow \\min(\\infty, 0+4)=4$，\n- $d(C) \\leftarrow \\min(\\infty, 0+2)=2$。\n第 1 次最终确定后的状态 (A,B,C,D,E,F)：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & \\infty & \\infty & \\infty\n\\end{pmatrix}\n$$\n\n第 2 步：最终确定 $C$，其 $d(C)=2$。松弛其邻居：\n- $d(B) \\leftarrow \\min(4, 2+5)=4$ （无变化），\n- $d(E) \\leftarrow \\min(\\infty, 2+3)=5$。\n第 2 次最终确定后的状态：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & \\infty & 5 & \\infty\n\\end{pmatrix}\n$$\n\n第 3 步：最终确定 $B$，其 $d(B)=4$。松弛其邻居：\n- $d(D) \\leftarrow \\min(\\infty, 4+10)=14$。\n第 3 次最终确定后的状态：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & 14 & 5 & \\infty\n\\end{pmatrix}\n$$\n\n第 4 步：最终确定 $E$，其 $d(E)=5$。松弛其邻居：\n- $d(D) \\leftarrow \\min(14, 5+4)=9$，\n- $d(F) \\leftarrow \\min(\\infty, 5+1)=6$。\n第 4 次最终确定后的状态：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & 9 & 5 & 6\n\\end{pmatrix}\n$$\n\n第 5 步：最终确定 $F$，其 $d(F)=6$。松弛其邻居：\n- $d(D) \\leftarrow \\min(9, 6+11)=9$ （无变化）。\n第 5 次最终确定后的状态：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & 9 & 5 & 6\n\\end{pmatrix}\n$$\n\n第 6 步：最终确定 $D$，其 $d(D)=9$。没有进一步的改进。\n第 6 次最终确定后的状态：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & 9 & 5 & 6\n\\end{pmatrix}\n$$\n\n按最终确定的顺序将这六个数组作为行收集起来得到：\n$$\n\\begin{pmatrix}\n0 & 4 & 2 & \\infty & \\infty & \\infty \\\\\n0 & 4 & 2 & \\infty & 5 & \\infty \\\\\n0 & 4 & 2 & 14 & 5 & \\infty \\\\\n0 & 4 & 2 & 9 & 5 & 6 \\\\\n0 & 4 & 2 & 9 & 5 & 6 \\\\\n0 & 4 & 2 & 9 & 5 & 6\n\\end{pmatrix}\n$$", "answer": "$$\\boxed{\\begin{pmatrix}\n0 & 4 & 2 & \\infty & \\infty & \\infty \\\\\n0 & 4 & 2 & \\infty & 5 & \\infty \\\\\n0 & 4 & 2 & 14 & 5 & \\infty \\\\\n0 & 4 & 2 & 9 & 5 & 6 \\\\\n0 & 4 & 2 & 9 & 5 & 6 \\\\\n0 & 4 & 2 & 9 & 5 & 6\n\\end{pmatrix}}$$"}, {"introduction": "现实世界中的寻路问题往往带有附加条件。这个练习将 Dijkstra 算法作为工具，来解决一个更复杂的约束路径问题：寻找一条必须经过某个指定中间节点的最短路径。这种将复杂问题分解为多个可利用标准算法解决的子问题的思维，是解决实际工程难题的关键一步。[@problem_id:1363287]", "id": "1363287", "problem": "一个数据包必须通过一个小型区域网络，从源服务器 $S$ 路由到目标服务器 $T$。该网络由一组服务器节点 $V = \\{S, A, B, M, C, D, T\\}$ 组成。这些节点之间的通信是单向的，并且每条有向链接都有一个相关的路由成本。从节点 $X$ 到节点 $Y$ 且成本为 $Z$ 的链接用三元组 $(X, Y, Z)$ 表示。\n\n可用的网络链接及其各自的成本如下：\n(S, A, 3), (S, B, 5), (S, M, 10), (A, B, 1), (A, M, 8), (B, M, 3), (B, C, 4), (M, C, 1), (M, D, 6), (C, D, 2), (C, T, 7), (D, T, 2).\n\n出于安全审计的要求，每个源自 $S$ 并发往 $T$ 的数据包都必须经过一个特定的监控服务器 $M$ 处理。你的任务是找到一条从 $S$ 到 $T$ 的路径，该路径需遵守此约束且总路由成本尽可能低。\n\n这条路由的最低总成本是多少？请以成本单位作答。", "solution": "我们必须找到从 $S$ 到 $T$ 且经过 $M$ 的成本最低的路径。对于任何具有非负链接成本的有向图，从 $S$到 $T$ 且必须经过 $M$ 的路径的最低成本等于最短路径距离 $d(S,M)$ 和 $d(M,T)$ 之和。这是因为任何一条经过 $M$ 的可行 $S \\to T$ 路径都可以分解为一个 $S \\to M$ 段和一个 $M \\to T$ 段，其总成本是这两段成本之和，而独立地最小化每一段的成本即可得到全局最小值：\n$$\n\\min_{\\text{paths }S\\to T\\text{ via }M} \\text{cost} \\;=\\; d(S,M) + d(M,T).\n$$\n\n使用给定的有向边计算 $d(S,M)$：路径选项包括成本为 10 的直达路径、成本为 $3+8$ 的 $S \\to A \\to M$ 路径、成本为 $5+3$ 的 $S \\to B \\to M$ 路径，以及成本为 $3+1+3$ 的 $S \\to A \\to B \\to M$ 路径。因此\n$$\nd(S,M) = \\min\\{10,\\; 3+8,\\; 5+3,\\; 3+1+3\\} = \\min\\{10,\\; 11,\\; 8,\\; 7\\} = 7.\n$$\n\n使用从 $M$ 出发的边计算 $d(M,T)$：\n候选路径有 $(M,D,6)$ 然后 $(D,T,2)$，$(M,C,1)$ 然后 $(C,T,7)$，以及 $(M,C,1)$ 然后 $(C,D,2)$ 然后 $(D,T,2)$。因此\n$$\nd(M,T) = \\min\\{6+2,\\; 1+7,\\; 1+2+2\\} = \\min\\{8,\\; 8,\\; 5\\} = 5.\n$$\n\n因此，一条从 $S$ 到 $T$ 且经过 $M$ 的路径的最低总成本是\n$$\nd(S,M)+d(M,T) = 7 + 5 = 12.\n$$", "answer": "$$\\boxed{12}$$"}, {"introduction": "在许多应用中，“最短”并非唯一的衡量标准。这个进阶练习挑战你修改 Dijkstra 算法的核心逻辑，以处理双重目标：在保证总权重最小的前提下，选择经过节点数最少的路径。通过这个练习，你将体验到该算法的灵活性，并接触到在多标准优化中极为有用的字典序比较概念。[@problem_id:1496472]", "id": "1496472", "problem": "一家新的星际快递服务公司“Stellar Express”已签约，负责将一个至关重要的低温冷却望远镜部件从其位于地球（E）的主仓库运输到火星（M）上一个新建的研究前哨站。该运输网络由几个轨道站和拉格朗日点枢纽组成，可以建模为一个加权有向图，其中节点代表位置，边权重代表以天为单位的旅行时间。\n\n主要目标是找到一条总旅行时间最短的路线。然而，每次站点之间的转移（即在图中遍历一条边）都会带来设备故障的固定风险，并产生高昂的程序性成本。因此，作为次要目标，在所有总旅行时间最短的路线中，公司必须选择站点间转移次数最少的那一条。\n\n可用的路线及其对应的旅行时间如下：\n- 地球（E）到站点A：3天\n- 地球（E）到站点B：2天\n- 地球（E）到站点D：9天\n- 站点A到火星（M）：5天\n- 站点A到站点D：4天\n- 站点B到站点C：3天\n- 站点C到站点D：1天\n- 站点C到火星（M）：3天\n- 站点D到火星（M）：1天\n\n所有路线都是指定方向的单程路线。您的任务是根据公司的双重标准，确定从地球（E）到火星（M）的最优路径。\n\n请给出这条最优路径的最短总旅行时间和相应的转移次数。", "solution": "我们将该网络建模为一个有向图，其节点为 $E, A, B, C, D, M$，边旅行时间为给定的 $w(u,v)$。主要目标是最小化总时间；次要目标是在所有时间最优路径中，最小化转移（边）的次数。因此，我们将从 $E$ 到任一节点 $v$ 的路径成本定义为一个有序对 $(T(v), K(v))$，其中 $T(v)$ 是最短总时间，$K(v)$ 是在达到 $T(v)$ 的路径中边的最小数量。我们按字典序比较这样的有序对：如果 $t_{1}<t_{2}$，或者 $t_{1}=t_{2}$ 且 $k_{1}<k_{2}$，则 $(t_{1},k_{1})<(t_{2},k_{2})$。\n\n我们应用一种类似Dijkstra算法的松弛操作，使用这种字典序。初始化：\n$$\n(T(E),K(E))=(0,0), \\quad (T(v),K(v))=(\\infty,\\infty)\\ \\text{for all }v\\neq E.\n$$\n对从 $E$ 出发的边进行松弛：\n$$\n(T(A),K(A))=(3,1),\\quad (T(B),K(B))=(2,1),\\quad (T(D),K(D))=(9,1).\n$$\n选择字典序成本最小的未处理节点：$B$，其成本为 $(2,1)$。从 $B$ 进行松弛：\n$$\n(T(C),K(C))=(2+3,1+1)=(5,2).\n$$\n下一个最小的是 $A$，其成本为 $(3,1)$。从 $A$ 进行松弛：\n$$\n(T(M),K(M))=(3+5,1+1)=(8,2),\\quad (T(D),K(D))=(3+4,1+1)=(7,2)\\ \\text{（比 }(9,1)\\text{ 更优）}.\n$$\n下一个最小的是 $C$，其成本为 $(5,2)$。从 $C$ 进行松弛：\n$$\n(T(D),K(D))=(5+1,2+1)=(6,3)\\ \\text{（比 }(7,2)\\text{ 更优）},\\quad (T(M),K(M))=(5+3,2+1)=(8,3).\n$$\n由于 $(8,2)$ 在字典序上小于 $(8,3)$，我们保持 $(T(M),K(M))=(8,2)$。\n\n下一个最小的是 $D$，其成本为 $(6,3)$。从 $D$ 进行松弛：\n$$\n(T(M),K(M))=(6+1,3+1)=(7,4)\\ \\text{（比 }(8,2)\\text{ 更优）}.\n$$\n最终，$M$ 的成本为 $(7,4)$，并且不可能有进一步的改进。因此，最优路径的最短总旅行时间为 $7$，并且在所有时间最优的路径中，最小转移次数为 $4$。这样一条路径是 $E\\to B\\to C\\to D\\to M$，其时间为 $2+3+1+1=7$，并且有 $4$ 条边。", "answer": "$$\\boxed{\\begin{pmatrix}7 & 4\\end{pmatrix}}$$"}]}