{"hands_on_practices": [{"introduction": "这项练习将图论中的两个基本概念联系起来：完全二部图和树。通过确定图 $K_{m,n}$ 不包含任何环路的条件，你将练习应用树的核心定义（即对于连通图，边数 $E = V-1$），并更深刻地理解参数 $m$ 和 $n$ 如何决定图的基本结构。这项练习对于理解稀疏网络与密集网络的特性至关重要。[@problem_id:1490792]", "problem": "一家科技公司正在设计一种新型的容错网络。该网络由两种不同类型的节点组成：$m$ 个“集线器”节点和 $n$ 个“客户端”节点，其中 $m$ 和 $n$ 是正整数。设计规范要求每个集线器节点都必须直接连接到每个客户端节点，以确保完全的通信覆盖。但是，任意两个集线器节点之间没有直接连接，任意两个客户端节点之间也没有连接。\n\n为了使网络在其布线成本（即连接数）方面达到最高效率，同时确保所有节点都属于一个单一的连通分量，它必须具有树的结构。在图论中，树被定义为不包含环的连通图。\n\n找出正整数 $m$ 和 $n$ 满足什么充要条件时，所描述的网络架构能构成一棵树。\n\nA. $m = n$\n\nB. $m=1$ 且 $n=1$\n\nC. $m=1$ 或 $n=1$\n\nD. $m+n$ 是一个奇数\n\nE. $m=2, n=2$ 或 $m=1, n=1$", "solution": "将所描述的网络解释为完全二分图 $K_{m,n}$：其中有 $m$ 个集线器顶点和 $n$ 个客户端顶点，每个集线器都连接到每个客户端，且任一部分内部都没有边。因此，顶点数为\n$$\nV=m+n\n$$\n边的数量为\n$$\nE=mn.\n$$\n树是一个连通的无环图。对于一个连通图，其为树的等价条件是恰好有 $V-1$ 条边。首先，对于所有正整数 $m,n$，$K_{m,n}$ 都是连通的，因为：\n- 任何一个集线器都与每个客户端直接邻接，所以任何一个集线器-客户端对都由一条长度为 $1$ 的路径连接，\n- 任意两个集线器（或两个客户端）都通过另一部分中的任意一个顶点以一条长度为 $2$ 的路径相连。\n\n因此，$K_{m,n}$ 是一棵树当且仅当\n$$\nE=V-1 \\quad \\Longleftrightarrow \\quad mn = m+n-1.\n$$\n重新整理，\n$$\nmn - m - n + 1 = 0 \\quad \\Longleftrightarrow \\quad (m-1)(n-1)=0.\n$$\n由于 $m$ 和 $n$ 是正整数，此式成立当且仅当 $m=1$ 或 $n=1$。在这些情况下，$K_{1,n}$ 或 $K_{m,1}$ 是一个星形图，它是无环的，因此是一棵树。如果 $m \\geq 2$ 且 $n \\geq 2$，那么 $(m-1)(n-1) \\geq 1$，所以 $E \\geq V$，并且实际上 $K_{m,n}$ 包含一个 4-环，所以它不是一棵树。\n\n因此，充要条件是 $m=1$ 或 $n=1$，这对应于选项 C。", "answer": "$$\\boxed{C}$$", "id": "1490792"}, {"introduction": "现在我们从理论结构转向一个经典应用：资源分配。这个问题模拟了一个常见的场景，即匹配两组不同的项目，这正是二部图匹配的精髓所在。通过求解完全二部图中的最大匹配数，你将揭示一个简单而强大的原则，它对优化和网络流问题至关重要。[@problem_id:1490831]", "problem": "一家软件公司正在组织为期一天的协同编程活动。有两组开发者参与：$m$ 名前端开发者和 $n$ 名后端开发者。在主要活动中，组织者希望组成尽可能多的开发者配对。每个配对必须由一名前端开发者和一名后端开发者组成。由于任务的性质，任何前端开发者都可以与任何后端开发者配对。在活动期间，任何一名开发者最多只能属于一个配对。\n\n给定前端开发者的人数 $m$ 和后端开发者的人数 $n$，确定可以同时形成的最大配对数量。你的答案应该是一个关于 $m$ 和 $n$ 的通用表达式。", "solution": "设 $P$ 表示所形成的最大配对数，其中每个配对恰好由一名前端开发者和一名后端开发者组成，且任何个体不属于一个以上的配对。\n\n每个配对使用一名前端开发者，因此总配对数不能超过前端开发者的数量。所以，\n$$\nP \\leq m.\n$$\n同样地，每个配对使用一名后端开发者，因此总配对数不能超过后端开发者的数量。所以，\n$$\nP \\leq n.\n$$\n结合这两个上限可得\n$$\nP \\leq \\min(m,n).\n$$\n还需要证明确实可以形成 $\\min(m,n)$ 个配对。因为任何前端开发者都可以与任何后端开发者配对，所以二分兼容图是完全图。我们可以贪心地进行配对：将较小组中的每一名开发者与较大组中的一名不同开发者配对，直到较小组中的所有开发者都被配对完毕。这样可以构建出恰好 $\\min(m,n)$ 个不相交的配对。因此，这个上限是可以达到的。\n\n因此，\n$$\nP=\\min(m,n).\n$$", "answer": "$$\\boxed{\\min(m,n)}$$", "id": "1490831"}, {"introduction": "这最后一个练习要求你对 $K_{m,n}$ 的结构进行更细致的组合分析。计算四元环 ($C_4$) 的数量不仅仅是一个学术练习，它有助于量化网络中的冗余度和聚集性。这个问题将锻炼你的组合推理能力，并阐明 $K_{m,n}$ 的“完全”特性是如何导致一种可预测且高度互联的结构。[@problem_id:1490837]", "problem": "在一家大型科技公司的一项新研究计划中，组建了一个由 $m$ 位机器学习工程师和 $n$ 个不同的新提议的人工智能项目组成的团队。为了在初始的头脑风暴阶段促进最大程度的协作和知识共享，公司规定每位工程师都必须为每个项目做出贡献。这种安排可以被建模为一个简单图，其顶点集是工程师和项目的并集。一条边连接一位工程师和一个项目，当且仅当该工程师被分配到该项目工作。\n\n项目负责人对量化一种称为“冗余四元组”的特定四方交互感兴趣。冗余四元组被定义为一个由四个不同实体组成的集合，包括两位不同的工程师（例如 $E_1$ 和 $E_2$）和两个不同的项目（例如 $P_1$ 和 $P_2$），其中两位工程师都被分配到这两个项目。这种结构意味着 $E_1$ 在项目 $P_1$ 上的工作被 $E_2$ 在 $P_1$ 上的工作直接映射，对项目 $P_2$ 也是如此。\n\n推导一个通用公式，计算在该网络中可以形成的唯一冗余四元组的总数，并用 $m$ 和 $n$ 表示你的答案。", "solution": "将此安排建模为完全二分图 $K_{m,n}$，其中一侧是 $m$ 位工程师，另一侧是 $n$ 个项目，因为每位工程师都与每个项目相连。冗余四元组是一个由四个不同顶点组成的集合，包括两位工程师和两个项目，使得这两位工程师和这两个项目之间的所有四条交叉边都存在。在 $K_{m,n}$ 中，一旦选定了两位不同的工程师和两个不同的项目，所有必需的边就必然存在，所以每一个这样的选择都恰好产生一个冗余四元组。\n\n计算无序选择：\n- 选择两位不同工程师的方法数是 $\\binom{m}{2}$。\n- 选择两个不同项目的方法数是 $\\binom{n}{2}$。\n\n根据乘法原理，冗余四元组的总数是\n$$\n\\binom{m}{2}\\binom{n}{2}.\n$$\n等价地，这可以写成\n$$\n\\frac{m(m-1)}{2}\\cdot\\frac{n(n-1)}{2}=\\frac{m(m-1)n(n-1)}{4}.\n$$\n两种形式在分析上是等价的。", "answer": "$$\\boxed{\\binom{m}{2}\\binom{n}{2}}$$", "id": "1490837"}]}