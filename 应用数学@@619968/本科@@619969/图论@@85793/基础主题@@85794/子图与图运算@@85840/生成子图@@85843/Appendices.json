{"hands_on_practices": [{"introduction": "要真正掌握生成子图的概念，最好的方法莫过于亲手构建一个。这个练习要求你在一个特定的图——完全二分图 $K_{4,4}$ 中，找到一个满足特定约束（1-正则）的生成子图。这个实践不仅能巩固你对“生成”和“正则”这两个核心定义的理解，还能让你熟悉完美匹配在二分图中的具体形态。[@problem_id:1536778]", "problem": "考虑一个完全二分图，记为 $K_{m,n}$。该图有一个顶点集 $W$，它被划分为两个不相交的集合 $U$ 和 $V$，其中 $|U|=m$ 且 $|V|=n$。$K_{m,n}$ 的边集包含所有连接 $U$ 中顶点与 $V$ 中顶点的可能边。同一个划分集合内部的任意两个顶点之间没有边。\n\n对于本题，我们关注特定的图 $K_{4,4}$。其顶点集被划分为 $U = \\{u_1, u_2, u_3, u_4\\}$ 和 $V = \\{v_1, v_2, v_3, v_4\\}$。\n\n如果一个子图包含原图的所有顶点，则称其为*生成子图*。如果一个图中每个顶点的度都恰好为 $k$，则称该图为 *$k$-正则图*。\n\n你的任务是确定下列哪个边集定义了 $K_{4,4}$ 的一个 1-正则生成子图。\n\nA. $\\{(u_1, v_2), (u_2, v_4), (u_3, v_1), (u_4, v_3)\\}$\n\nB. $\\{(u_1, v_1), (u_1, v_2), (u_2, v_3), (u_3, v_4)\\}$\n\nC. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_3)\\}$\n\nD. $\\{(u_1, u_2), (u_3, u_4), (v_1, v_2), (v_3, v_4)\\}$\n\nE. $\\{(u_1, v_1), (u_2, v_2), (u_3, v_4), (u_4, v_3), (u_1, v_2)\\}", "solution": "我们在完全二分图 $K_{4,4}$ 中进行分析，其二分划分为 $U=\\{u_{1},u_{2},u_{3},u_{4}\\}$ 和 $V=\\{v_{1},v_{2},v_{3},v_{4}\\}$。一个子图是 1-正则且是生成子图，当且仅当它包含所有顶点，且每个顶点的度都恰好为 $1$。在二分图中，这样的子图正是一个完美匹配：恰好有 $4$ 条不相交的边，每条边都连接 $U$ 和 $V$，覆盖所有 $8$ 个顶点。\n\n检查每个选项是否满足以下两个条件：\n1) 所有边都必须在 $U$ 和 $V$ 之间（是 $K_{4,4}$ 的子图）。\n2) 每个顶点 $u_{i}$ 和 $v_{j}$ 都必须满足 $\\deg(u_{i})=\\deg(v_{j})=1$。\n\nA. $\\{(u_{1},v_{2}), (u_{2},v_{4}), (u_{3},v_{1}), (u_{4},v_{3})\\}$。每个 $u_{i}$ 和每个 $v_{j}$ 都恰好出现一次；有 $4$ 条边，且都在 $U$ 和 $V$ 之间。因此它是一个完美匹配：是生成子图且是 1-正则的。\n\nB. $\\{(u_{1},v_{1}), (u_{1},v_{2}), (u_{2},v_{3}), (u_{3},v_{4})\\}$。这里 $\\deg(u_{1})=2$ 且 $\\deg(u_{4})=0$，所以它不是 1-正则的。\n\nC. $\\{(u_{1},v_{1}), (u_{2},v_{2}), (u_{3},v_{3})\\}$。顶点 $u_{4}$ 和 $v_{4}$ 的度为 $0$，所以它不是 1-正则的（并且没有覆盖所有顶点）。\n\nD. $\\{(u_{1},u_{2}), (u_{3},u_{4}), (v_{1},v_{2}), (v_{3},v_{4})\\}$。这些边都在 $U$ 内部或 $V$ 内部，而不是 $K_{4,4}$ 的边；因此这不是 $K_{4,4}$ 的子图。\n\nE. $\\{(u_{1},v_{1}), (u_{2},v_{2}), (u_{3},v_{4}), (u_{4},v_{3}), (u_{1},v_{2})\\}$。这里 $\\deg(u_{1})=2$ 且 $\\deg(v_{2})=2$，所以它不是 1-正则的。\n\n因此，只有选项 A 定义了 $K_{4,4}$ 的一个 1-正则生成子图。", "answer": "$$\\boxed{A}$$", "id": "1536778"}, {"introduction": "掌握了基本定义之后，我们可以探索生成树更深层次的结构特性。这个问题提出了一个引人思考的设计约束：是否存在一个生成树，其中每个顶点的度数都是奇数？这个练习将引导你运用图论中最基本的工具——握手引理，通过简单的奇偶性分析，推导出关于图结构的深刻结论，展示了基本原理在解决看似复杂问题时的威力。[@problem_id:1533895]", "problem": "一家科技公司正在设计一系列新的服务器网络。每个网络必须连接一组数据中心。为了保证可靠性，网络拓扑必须是生成树，即一种用最少数量的链接连接所有数据中心且不形成任何环路的网络。\n\n为了一种他们正在开发的特殊路由协议，工程师们正在研究一种网络设计，要求生成树中的每个数据中心（顶点）都具有奇数个直接连接（度）到该树中的其他数据中心。\n\n该公司正在考虑不同规模网络的提案。请从以下选项中，确定唯一可能的数据中心数量，使得构建这样一个特殊网络（即每个顶点的度数均为奇数的生成树）在理论上是可行的。\n\nA. 9 个数据中心\n\nB. 11 个数据中心\n\nC. 13 个数据中心\n\nD. 14 个数据中心\n\nE. 15 个数据中心", "solution": "设 $T$ 是一棵有 $n$ 个顶点的树，其顶点集为 $V$，边集为 $E$。根据树的定义，有 $|E|=n-1$。根据握手引理，\n$$\n\\sum_{v \\in V} \\deg(v) = 2|E| = 2(n-1).\n$$\n假设每个顶点的度数都是奇数。那么等式左边是 $n$ 个奇数之和，所以\n$$\n\\sum_{v \\in V} \\deg(v) \\equiv \\sum_{i=1}^{n} 1 \\equiv n \\pmod{2}.\n$$\n但 $2(n-1) \\equiv 0 \\pmod{2}$，因此 $n \\equiv 0 \\pmod{2}$。所以，$n$ 是偶数是一个必要条件。\n\n为了证明对于偶数 $n$ 的充分性，考虑星形图 $K_{1,n-1}$。它是一棵有 $n$ 个顶点的树，其度序列为 $(n-1, 1, 1, \\dots, 1)$。如果 $n$ 是偶数，那么 $n-1$ 是奇数，并且所有叶节点的度数都是 $1$（奇数），因此每个顶点的度数都是奇数。所以，对于每个偶数 $n$，这样的树都存在。\n\n在给定的选项中，唯一的偶数是 $14$，所以它是唯一可行的大小。", "answer": "$$\\boxed{D}$$", "id": "1533895"}, {"introduction": "在网络设计等实际应用中，我们不仅关心最优方案，也常常需要准备备用方案。这个练习从寻找最小生成树（MST）这一经典问题出发，将其扩展到寻找“次优”解，即总权重第二小的生成树。通过解决这个问题，你将学会一种重要的算法技巧——单边替换法，这不仅能解决次优生成树问题，也体现了对最优化问题进行灵敏度分析的核心思想。[@problem_id:1533914]", "problem": "一家名为 'ConnectAll' 的科技公司正在设计一个容错光纤网络，以连接其五个主要的数据中心。这些数据中心被标记为 A、B、C、D 和 E。公司已经确定了数据中心对之间的几种可能的直接链路，每条链路都有相应的安装成本。目标是建立一个以最低可能总成本连接所有数据中心的网络。这个主网络对应于这些数据中心和可能链路的最小生成树 (MST)。\n\n为了保证可靠性，该公司希望确定一个最优应急方案。该方案包括一个备用网络，这个网络同样连接所有数据中心，但其总成本是第二低的。可用的链路及其成本如下所示。所有成本都以任意的“成本单位”计算，并且所有链路的成本都是唯一的。\n\n潜在连接的图由顶点集 $V = \\{A, B, C, D, E\\}$ 和带有相关成本的边集定义：\n- (A, B)，成本：2\n- (A, C)，成本：8\n- (A, D)，成本：5\n- (B, C)，成本：3\n- (B, E)，成本：6\n- (C, D)，成本：4\n- (C, E)，成本：10\n- (D, E)，成本：7\n\n根据这些信息，确定最优应急网络的总成本。", "solution": "我们将该网络建模为一个带权连通无向图，其顶点为 $V=\\{A,B,C,D,E\\}$，且所有边的权重都不同。成本最低的主网络是最小生成树 (MST)。由于所有权重都不同，所以最小生成树是唯一的。为了计算它，我们应用 Kruskal 算法：将所有边按权重递增排序，并贪婪地添加它们，同时避免形成环。\n\n按成本对边进行排序：$(A,B):2$, $(B,C):3$, $(C,D):4$, $(A,D):5$, $(B,E):6$, $(D,E):7$, $(A,C):8$, $(C,E):10$。\n\n逐步执行 Kruskal 算法：\n- 添加 $(A,B)$，权重为 2。\n- 添加 $(B,C)$，权重为 3。\n- 添加 $(C,D)$，权重为 4。\n- 考虑 $(A,D)$，权重为 5：它会与 $A-B-C-D$ 形成一个环，因此跳过它。\n- 添加 $(B,E)$，权重为 6，以连接顶点 $E$。\n\n此时，所有 5 个顶点都已连接，因此最小生成树是集合 $\\{(A,B),(B,C),(C,D),(B,E)\\}$，其总成本为\n$$\nw(\\text{MST})=2+3+4+6=15.\n$$\n\n要找到最优应急网络（即次优生成树），我们使用标准的单边替换法：对于每条不属于最小生成树的边 $e$，将其添加到最小生成树中以形成一个唯一的环，然后移除该环中位于 $e$ 两个端点之间的MST路径上权重最大的边 $f$。得到的树的成本为\n$$\nw(T_{e})=w(\\text{MST})+w(e)-w(f).\n$$\n在所有这些候选项中，严格大于 $w(\\text{MST})$ 的最小成本就是次优生成树的成本。\n\n不属于最小生成树的边有 $(A,D):5$, $(D,E):7$, $(A,C):8$, $(C,E):10$。对每一条边计算 $w(T_{e})$：\n- 对于 $e=(A,D)$：最小生成树中的路径 $A \\to B \\to C \\to D$ 的边权重为 $\\{2,3,4\\}$，因此最大值为 4。所以\n$$\nw(T_{(A,D)})=15+5-4=16.\n$$\n- 对于 $e=(D,E)$：最小生成树中的路径 $D \\to C \\to B \\to E$ 的权重为 $\\{4,3,6\\}$，因此最大值为 6。所以\n$$\nw(T_{(D,E)})=15+7-6=16.\n$$\n- 对于 $e=(A,C)$：最小生成树中的路径 $A \\to B \\to C$ 的权重为 $\\{2,3\\}$，因此最大值为 3。所以\n$$\nw(T_{(A,C)})=15+8-3=20.\n$$\n- 对于 $e=(C,E)$：最小生成树中的路径 $C \\to B \\to E$ 的权重为 $\\{3,6\\}$，因此最大值为 6。所以\n$$\nw(T_{(C,E)})=15+10-6=19.\n$$\n\n这些值中超过 15 的最小值是 16。因此，最优应急网络（次优生成树）的总成本是 16。", "answer": "$$\\boxed{16}$$", "id": "1533914"}]}