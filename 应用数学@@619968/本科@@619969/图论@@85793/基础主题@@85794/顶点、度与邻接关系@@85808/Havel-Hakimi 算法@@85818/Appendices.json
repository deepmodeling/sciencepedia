{"hands_on_practices": [{"introduction": "我们已经知道，一个度数序列要成为可图序列，必须满足一些基本条件，例如度数之和为偶数。但这足够吗？这个练习将通过一个反例来挑战这一直觉，让你运用 Havel-Hakimi 算法作为最终的“裁判”，来识别出那些看似合理但实际上并不可图的序列。通过这个过程，你将体会到该算法作为充分必要条件判据的严谨性和威力。[@problem_id:1542607]", "problem": "一个非负整数序列 $S = (d_1, d_2, \\dots, d_n)$ 被称为*可图的* (graphic)，如果它能作为某个具有 $n$ 个顶点的简单图的度序列。一个序列要成为可图的，必须满足某些必要条件。其中两个最基本的条件是：\n1. 所有度数之和 $\\sum_{i=1}^{n} d_i$ 必须是偶数（根据握手引理）。\n2. 对于一个简单图，最大度不能超过 $n-1$，即 $d_{\\text{max}} \\le n-1$。\n\n然而，满足这两个条件并不足以保证一个序列是可图的。Havel-Hakimi 算法提供了一个确定的检验方法。\n\n考虑以下四个长度为 $n=6$ 的度序列。它们都被构造成满足上述两个必要条件。你的任务是应用 Havel-Hakimi 算法来确定这些序列中哪一个是**不可图的**。\n\nA. $(4, 4, 3, 3, 2, 2)$\n\nB. $(5, 1, 1, 1, 1, 1)$\n\nC. $(5, 5, 5, 1, 1, 1)$\n\nD. $(3, 3, 3, 3, 3, 3)$", "solution": "我们应用 Havel-Hakimi 算法：重复地将序列按非递增顺序排序，移除最大的项 $d_{1}$，并从接下来的 $d_{1}$ 个项中各减去 $1$，然后重新排序；如果出现负数，则该序列不可图；如果该过程最终得到全零序列，则该序列是可图的。\n\n序列 A: $S_{0}=(4,4,3,3,2,2)$。移除 $4$ 并从接下来的 $4$ 项中各减去 $1$：\n$$(4,4,3,3,2,2)\\to (3,2,2,1,2)\\to S_{1}=(3,2,2,2,1)$$\n移除 $3$ 并从接下来的 $3$ 项中各减去 $1$：\n$$(3,2,2,2,1)\\to (1,1,1,1)\\to S_{2}=(1,1,1,1)$$\n移除 $1$ 并从接下来的 $1$ 项中各减去 $1$：\n$$(1,1,1,1)\\to (0,1,1)\\to S_{3}=(1,1,0)$$\n移除 $1$ 并从接下来的 $1$ 项中各减去 $1$：\n$$(1,1,0)\\to (0,0)\\to S_{4}=(0,0)$$\n得到全零序列，所以 A 是可图的。\n\n序列 B: $S_{0}=(5,1,1,1,1,1)$。移除 $5$ 并从接下来的 $5$ 项中各减去 $1$：\n$$(5,1,1,1,1,1)\\to (0,0,0,0,0)\\to S_{1}=(0,0,0,0,0)$$\n得到全零序列，所以 B 是可图的。\n\n序列 C: $S_{0}=(5,5,5,1,1,1)$。移除 $5$ 并从接下来的 $5$ 项中各减去 $1$：\n$$(5,5,5,1,1,1)\\to (4,4,0,0,0)\\to S_{1}=(4,4,0,0,0)$$\n移除 $4$ 并从接下来的 $4$ 项中各减去 $1$：\n$$(4,4,0,0,0)\\to (3,-1,-1,-1)$$\n出现负数，所以 C 是不可图的。\n\n序列 D: $S_{0}=(3,3,3,3,3,3)$。移除 $3$ 并从接下来的 $3$ 项中各减去 $1$：\n$$(3,3,3,3,3,3)\\to (2,2,2,3,3)\\to S_{1}=(3,3,2,2,2)$$\n移除 $3$ 并从接下来的 $3$ 项中各减去 $1$：\n$$(3,3,2,2,2)\\to (2,1,1,2)\\to S_{2}=(2,2,1,1)$$\n移除 $2$ 并从接下来的 $2$ 项中各减去 $1$：\n$$(2,2,1,1)\\to (1,0,1)\\to S_{3}=(1,1,0)$$\n移除 $1$ 并从接下来的 $1$ 项中各减去 $1$：\n$$(1,1,0)\\to (0,0)\\to S_{4}=(0,0)$$\n得到全零序列，所以 D 是可图的。\n\n因此，在给定的序列中，只有序列 C 是不可图的。", "answer": "$$\\boxed{C}$$", "id": "1542607"}, {"introduction": "在实际的网络设计或化学分子结构分析中，我们有时需要在一个部分确定的系统中找出可行的参数。这个练习模拟了这样的情景：在一个包含未知变量 $x$ 的度数序列中，你的任务是找出所有能使该序列可图的变量值。这不仅需要你熟练运用 Havel-Hakimi 算法，还需要你结合基本的可图性条件进行逻辑推理和筛选，是提升综合问题解决能力的绝佳实践。[@problem_id:1542620]", "problem": "在通信网络的设计中，每个节点的连接数是一个关键参数，用“度”来表示。网络中所有节点的度的集合构成一个“度序列”。如果可以构造一个实现该序列的简单图（即没有自环或任意两个节点之间没有多重边），则该度序列称为“可图的”。\n\nHavel 和 Hakimi 的一个基本定理提供了一个算法来检验一个序列是否是可图的。对于一个由非负整数组成的序列 $S = (d_1, d_2, \\ldots, d_n)$，该算法如下：\n1.  首先，验证所有度数之和 $\\sum_{i=1}^n d_i$ 是否为偶数。如果为奇数，则该序列不可图。\n2.  将序列按非增顺序排序。设排序后的序列为 $d'_1 \\ge d'_2 \\ge \\ldots \\ge d'_n$。\n3.  如果最大度 $d'_1$ 大于或等于节点数 $n$，则该序列不可图。\n4.  通过移除最大度 $d'_1$ 并将其后的 $d'_1$ 个最大度数各减1，构造一个长度为 $n-1$ 的新序列 $S'$。\n5.  如果此约化步骤导致任何负度数，则原始序列不可图。\n6.  原始序列 $S$ 是可图的，当且仅当约化后的序列 $S'$ 递归地被判定为可图。如果该过程最终得到一个全零序列，则成功终止。\n\n给定一个包含6个节点的网络的建议度序列：$S(x) = (5, 4, 4, 3, 3, x)$，其中 $x$ 是一个非负整数。请确定所有使 $S(x)$ 成为可图序列的 $x$ 的可能值。\n\n计算所有这些有效 $x$ 值的总和。", "solution": "设 $S(x)=(5,4,4,3,3,x)$ 为一个具有 $n=6$ 个顶点的简单图的度序列。对于一个有6个顶点的简单图，每个度都必须满足 $0 \\leq d_{i} \\leq 5$，因此 $0 \\leq x \\leq 5$。度数之和必须为偶数，我们有\n$$\n\\sum S(x)=5+4+4+3+3+x=19+x,\n$$\n所以 $19+x$ 为偶数当且仅当 $x$ 为奇数。结合这两个约束条件，候选值为 $x \\in \\{1,3,5\\}$。我们使用 Havel–Hakimi 算法对每个值进行检验。\n\n情况 $x=1$：排序后的序列为 $(5,4,4,3,3,1)$。移除5，并将其后的5项各减1，得到\n$$\n(4,4,3,3,1)\\mapsto(3,3,2,2,0).\n$$\n排序 $(3,3,2,2,0)$；移除3，并将其后的3项各减1，得到\n$$\n(3,2,2,0)\\mapsto(2,1,1,0).\n$$\n排序 $(2,1,1,0)$；移除2，并将其后的2项各减1，得到\n$$\n(1,1,0)\\mapsto(0,0,0).\n$$\n此过程成功终止，所以 $x=1$ 是可图的。\n\n情况 $x=3$：排序后的序列为 $(5,4,4,3,3,3)$。移除5，并将其后的5项各减1，得到\n$$\n(4,4,3,3,3)\\mapsto(3,3,2,2,2).\n$$\n排序 $(3,3,2,2,2)$；移除3，并将其后的3项各减1，得到\n$$\n(3,2,2,2)\\mapsto(2,1,1,2).\n$$\n排序为 $(2,2,1,1)$；移除2，并将其后的2项各减1，得到\n$$\n(2,1,1)\\mapsto(1,0,1).\n$$\n排序为 $(1,1,0)$；移除1，并将其后的1项减1，得到\n$$\n(1,0)\\mapsto(0,0).\n$$\n此过程成功终止，所以 $x=3$ 是可图的。\n\n情况 $x=5$：排序后的序列为 $(5,5,4,4,3,3)$。移除5，并将其后的5项各减1，得到\n$$\n(5,4,4,3,3)\\mapsto(4,3,3,2,2).\n$$\n排序 $(4,3,3,2,2)$；移除4，并将其后的4项各减1，得到\n$$\n(3,3,2,2)\\mapsto(2,2,1,1).\n$$\n移除2，并将其后的2项各减1，得到\n$$\n(2,1,1)\\mapsto(1,0,1).\n$$\n排序为 $(1,1,0)$；移除1，并将其后的1项减1，得到\n$$\n(1,0)\\mapsto(0,0).\n$$\n此过程成功终止，所以 $x=5$ 是可图的。\n\n因此，有效的 $x$ 值为 $x \\in \\{1,3,5\\}$，它们的和是 $1+3+5=9$。", "answer": "$$\\boxed{9}$$", "id": "1542620"}, {"introduction": "掌握了一个算法的应用后，更进一步的挑战是理解其内在的工作机制和性能边界。这个练习将引导你从算法的使用者转变为分析者，要求你构建一个特殊的度数序列，使得 Havel-Hakimi 算法需要执行最大可能次数的迭代才能终止。解决这个问题将深化你对算法递归本质的理解，并揭示图的结构（如完全图）与算法计算复杂度之间的深刻联系。[@problem_id:1542635]", "problem": "Havel-Hakimi 算法是一个迭代过程，用于判断一个有限非负整数序列是否可以是一个简单图的度序列。其过程如下：\n设 $D = (d_1, d_2, \\ldots, d_n)$ 是一个按非增顺序排序的整数序列，即 $d_1 \\ge d_2 \\ge \\ldots \\ge d_n$。\n1. 如果序列为空或完全由零组成，则它是可图化的，算法终止。\n2. 如果序列包含负数，或者如果 $d_1 \\geq n$，则它不是可图化的，算法终止。\n3. 否则，通过移除 $d_1$ 并从序列接下来的 $d_1$ 个元素中各减去 1，构造一个长度为 $n-1$ 的新序列 $D'$。即，$D' = (d_2-1, d_3-1, \\ldots, d_{d_1+1}-1, d_{d_1+2}, \\ldots, d_n)$。\n4. 将 $D'$ 按非增顺序重新排序，并用这个新序列重复此过程。\n\n每一次应用步骤3和4都被视为算法的一次迭代。该算法保证会终止。一个序列是可图化的，当且仅当该算法以一个全零序列终止。对于长度为 $n$ 的序列，迭代次数最多为 $n-1$ 次，因为序列的长度在每一步都减少一。\n\n你的任务是找到一个长度为 $n$ 的可图化整数序列 $D_n$，它需要最大可能次数的迭代，即恰好 $n-1$ 次迭代，才能使 Havel-Hakimi 算法终止于一个全为零的序列。\n\n对于 $n=7$ 的特定情况，构造一个这样的序列。将你的答案表示为一个包含七个度的序列，按非增顺序列出。", "solution": "我们寻求一个长度为 $7$ 的可图化序列 $D$，使得 Havel-Hakimi 算法在达到全零序列前恰好执行 $7-1=6$ 次迭代。一个自然的选择是完全图 $K_{7}$ 的度序列：\n$$\nD^{(0)}=(6,6,6,6,6,6,6).\n$$\n这个序列是按非增顺序排序的，没有负数项，并且满足 $d_{1}=6<7$，因此步骤2不会终止算法。\n\n应用一次迭代（步骤3和4）：移除第一项 $6$ 并从接下来的 $6$ 项中各减去 $1$，得到\n$$\nD^{(1)}=(5,5,5,5,5,5).\n$$\n这个序列的长度为 $6$ 且满足 $d_{1}=5<6$，所以过程继续。\n\n重复应用相同的推理，在每次迭代中，我们移除最大项并从所有剩余项中减去 $1$（因为最大项总是等于剩余项的数量）。通过归纳法，经过 $k$ 次迭代后我们得到\n$$\nD^{(k)}=\\big(\\underbrace{6-k,\\dots,6-k}_{7-k\\ \\text{terms}}\\big),\n$$\n在 $0\\leq k\\leq 6$ 的条件下。对于 $k=0,1,2,3,4,5$，各项都严格为正，因此序列不全为零，算法继续进行。当 $k=6$ 时，我们得到\n$$\nD^{(6)}=(0),\n$$\n这是一个完全由零组成的序列；因此算法在此时终止。恰好执行了 $6$ 次迭代，这是 $n=7$ 时可能的最大次数。\n\n因此，序列 $D=(6,6,6,6,6,6,6)$ 是可图化的，并迫使 Havel-Hakimi 算法运行恰好 $n-1=6$ 次迭代。", "answer": "$$\\boxed{\\begin{pmatrix} 6 & 6 & 6 & 6 & 6 & 6 & 6 \\end{pmatrix}}$$", "id": "1542635"}]}